Initialize the program!
Generating repair candidates!
Processing bresenham.cpp
Total 1864 different repair schemas!!!!
Total 2422 different repair candidate templates for scoring!!!
Total 625 different partial repair candidate templates!!
Trying different candidates!
candidate count: 1864
BasicTester pointer: 0x55a0cf1fc470
StringConstTester pointer: 0x55a0ce8fc270
CondTester pointer: 0x55a0cf0c8d30
Generating Candidates...
Candidates size: 1864
Generating Codes...
[7] Preprocess the following candidate with CondTester:
1864 Candidates
Generating patches with CondTester...

current candidate: 0
parent stmt: cef0ed78
current stmt: cef0ece0
stmt: switch(__choose("__ID0")){
	case 0: {
ystep = 1
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
ystep = 1;

break;
}
	case 3: {
a = x1;
ystep = 1;

break;
}
	case 4: {
a = y0;
ystep = 1;

break;
}
	case 5: {
error = error + deltaerr;
ystep = 1;

break;
}
	case 6: {
error = error - 1;
ystep = 1;

break;
}
	case 7: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 8: {
if (__is_neg())
    return;
ystep = 1;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
ystep = 1;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
ystep = 1;

break;
}
	case 13: {
this->clear();
ystep = 1;

break;
}
	case 14: {
throw;
ystep = 1;

break;
}
	case 15: {
x0 = x1;
ystep = 1;

break;
}
	case 16: {
x0 = y0;
ystep = 1;

break;
}
	case 17: {
x1 = a;
ystep = 1;

break;
}
	case 18: {
x1 = y1;
ystep = 1;

break;
}
	case 19: {
y0 = a;
ystep = 1;

break;
}
	case 20: {
y0 = y1;
ystep = 1;

break;
}
	case 21: {
y1 = a;
ystep = 1;

break;
}
	case 22: {
ystep = -1;
ystep = 1;

break;
}
	case 23: {
ystep = 1;
ystep = 1;

break;
}
}


current candidate: 1
parent stmt: cef0ed78
current stmt: cf174b40
stmt: switch(__choose("__ID1")){
	case 0: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 1: {
if (!__is_neg())
    ystep = 1;

break;
}
}


current candidate: 2
parent stmt: cef0ed78
current stmt: cf17a9d8
stmt: switch(__choose("__ID2")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 3
parent stmt: cef7bf60
current stmt: cef7bd88
stmt: switch(__choose("__ID3")){
	case 0: {
var.first = x
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.first = x;

break;
}
	case 3: {
a = x1;
var.first = x;

break;
}
	case 4: {
a = y0;
var.first = x;

break;
}
	case 5: {
error = error + deltaerr;
var.first = x;

break;
}
	case 6: {
error = error - 1;
var.first = x;

break;
}
	case 7: {
if (!__is_neg())
    var.first = x;

break;
}
	case 8: {
if (__is_neg())
    break;
var.first = x;

break;
}
	case 9: {
if (__is_neg())
    return;
var.first = x;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.first = x;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.first = x;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.first = x;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.first = x;

break;
}
	case 16: {
line.push_back(var);
var.first = x;

break;
}
	case 17: {
this->clear();
var.first = x;

break;
}
	case 18: {
throw;
var.first = x;

break;
}
	case 19: {
var.first = x;
var.first = x;

break;
}
	case 20: {
var.first = y;
var.first = x;

break;
}
	case 21: {
var.second = x;
var.first = x;

break;
}
	case 22: {
var.second = y;
var.first = x;

break;
}
	case 23: {
x0 = x1;
var.first = x;

break;
}
	case 24: {
x0 = y0;
var.first = x;

break;
}
	case 25: {
x1 = a;
var.first = x;

break;
}
	case 26: {
x1 = y1;
var.first = x;

break;
}
	case 27: {
y0 = a;
var.first = x;

break;
}
	case 28: {
y0 = y1;
var.first = x;

break;
}
	case 29: {
y1 = a;
var.first = x;

break;
}
	case 30: {
ystep = -1;
var.first = x;

break;
}
	case 31: {
ystep = 1;
var.first = x;

break;
}
}


current candidate: 4
parent stmt: cef7bf60
current stmt: cef7be30
stmt: switch(__choose("__ID4")){
	case 0: {
var.second = y
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.second = y;

break;
}
	case 3: {
a = x1;
var.second = y;

break;
}
	case 4: {
a = y0;
var.second = y;

break;
}
	case 5: {
error = error + deltaerr;
var.second = y;

break;
}
	case 6: {
error = error - 1;
var.second = y;

break;
}
	case 7: {
if (!__is_neg())
    var.second = y;

break;
}
	case 8: {
if (__is_neg())
    break;
var.second = y;

break;
}
	case 9: {
if (__is_neg())
    return;
var.second = y;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.second = y;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.second = y;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.second = y;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.second = y;

break;
}
	case 16: {
line.push_back(var);
var.second = y;

break;
}
	case 17: {
this->clear();
var.second = y;

break;
}
	case 18: {
throw;
var.second = y;

break;
}
	case 19: {
var.first = x;
var.second = y;

break;
}
	case 20: {
var.first = y;
var.second = y;

break;
}
	case 21: {
var.second = x;
var.second = y;

break;
}
	case 22: {
var.second = y;
var.second = y;

break;
}
	case 23: {
x0 = x1;
var.second = y;

break;
}
	case 24: {
x0 = y0;
var.second = y;

break;
}
	case 25: {
x1 = a;
var.second = y;

break;
}
	case 26: {
x1 = y1;
var.second = y;

break;
}
	case 27: {
y0 = a;
var.second = y;

break;
}
	case 28: {
y0 = y1;
var.second = y;

break;
}
	case 29: {
y1 = a;
var.second = y;

break;
}
	case 30: {
ystep = -1;
var.second = y;

break;
}
	case 31: {
ystep = 1;
var.second = y;

break;
}
}


current candidate: 5
parent stmt: cef7bf60
current stmt: cef7bf20
stmt: switch(__choose("__ID5")){
	case 0: {
line.push_back(var)
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
line.push_back(var);

break;
}
	case 3: {
a = x1;
line.push_back(var);

break;
}
	case 4: {
a = y0;
line.push_back(var);

break;
}
	case 5: {
error = error + deltaerr;
line.push_back(var);

break;
}
	case 6: {
error = error - 1;
line.push_back(var);

break;
}
	case 7: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 8: {
if (__is_neg())
    break;
line.push_back(var);

break;
}
	case 9: {
if (__is_neg())
    return;
line.push_back(var);

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
line.push_back(var);

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
line.push_back(var);

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
line.push_back(var);

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
line.push_back(var);

break;
}
	case 16: {
line.push_back(var);
line.push_back(var);

break;
}
	case 17: {
this->clear();
line.push_back(var);

break;
}
	case 18: {
throw;
line.push_back(var);

break;
}
	case 19: {
var.first = x;
line.push_back(var);

break;
}
	case 20: {
var.first = y;
line.push_back(var);

break;
}
	case 21: {
var.second = x;
line.push_back(var);

break;
}
	case 22: {
var.second = y;
line.push_back(var);

break;
}
	case 23: {
x0 = x1;
line.push_back(var);

break;
}
	case 24: {
x0 = y0;
line.push_back(var);

break;
}
	case 25: {
x1 = a;
line.push_back(var);

break;
}
	case 26: {
x1 = y1;
line.push_back(var);

break;
}
	case 27: {
y0 = a;
line.push_back(var);

break;
}
	case 28: {
y0 = y1;
line.push_back(var);

break;
}
	case 29: {
y1 = a;
line.push_back(var);

break;
}
	case 30: {
ystep = -1;
line.push_back(var);

break;
}
	case 31: {
ystep = 1;
line.push_back(var);

break;
}
}


current candidate: 6
parent stmt: cef7bf60
current stmt: cf168490
stmt: switch(__choose("__ID6")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 7
parent stmt: cef7bf60
current stmt: cf1686d0
stmt: switch(__choose("__ID7")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 8
parent stmt: cef7bf60
current stmt: cf168940
stmt: switch(__choose("__ID8")){
	case 0: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 1: {
if (!__is_neg())
    line.push_back(var);

break;
}
}


current candidate: 9
parent stmt: cef7bf60
current stmt: cf1b4b20
stmt: switch(__choose("__ID9")){
	case 0: {
if (!__is_neg())
    var.first = x;

break;
}
	case 1: {
if (!__is_neg())
    var.first = x;

break;
}
}


current candidate: 10
parent stmt: cef7bf60
current stmt: cf1baa18
stmt: switch(__choose("__ID10")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 11
parent stmt: cef7bf60
current stmt: cf1bac58
stmt: switch(__choose("__ID11")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 12
parent stmt: cef7bf60
current stmt: cf1baec8
stmt: switch(__choose("__ID12")){
	case 0: {
if (!__is_neg())
    var.second = y;

break;
}
	case 1: {
if (!__is_neg())
    var.second = y;

break;
}
}


current candidate: 13
parent stmt: cef7bf60
current stmt: cf1bf1a0
stmt: switch(__choose("__ID13")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 14
parent stmt: cef7bf60
current stmt: cf1bf3e0
stmt: switch(__choose("__ID14")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 15
parent stmt: cef7c2a0
current stmt: cef7bf88
stmt: switch(__choose("__ID15")){
	case 0: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 3: {
a = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 4: {
a = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 5: {
error = error + deltaerr;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 6: {
error = error - 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 7: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 8: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 9: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 10: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 11: {
if (__is_neg())
    break;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 12: {
if (__is_neg())
    return;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 13: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 14: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 15: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 16: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 17: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 18: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 19: {
line.push_back(var);
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 20: {
this->clear();
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 21: {
throw;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 22: {
var.first = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 23: {
var.first = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 24: {
var.second = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 25: {
var.second = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 26: {
x0 = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 27: {
x0 = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 28: {
x1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 29: {
x1 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 30: {
y0 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 31: {
y0 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 32: {
y1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 33: {
ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 34: {
ystep = 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 16
parent stmt: cef7c2a0
current stmt: cef7c060
stmt: switch(__choose("__ID16")){
	case 0: {
error = error + deltaerr
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
error = error + deltaerr;

break;
}
	case 3: {
a = x1;
error = error + deltaerr;

break;
}
	case 4: {
a = y0;
error = error + deltaerr;

break;
}
	case 5: {
error = error + deltaerr;
error = error + deltaerr;

break;
}
	case 6: {
error = error - 1;
error = error + deltaerr;

break;
}
	case 7: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 8: {
if (__is_neg())
    break;
error = error + deltaerr;

break;
}
	case 9: {
if (__is_neg())
    return;
error = error + deltaerr;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
error = error + deltaerr;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
error = error + deltaerr;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
error = error + deltaerr;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
error = error + deltaerr;

break;
}
	case 16: {
line.push_back(var);
error = error + deltaerr;

break;
}
	case 17: {
this->clear();
error = error + deltaerr;

break;
}
	case 18: {
throw;
error = error + deltaerr;

break;
}
	case 19: {
var.first = x;
error = error + deltaerr;

break;
}
	case 20: {
var.first = y;
error = error + deltaerr;

break;
}
	case 21: {
var.second = x;
error = error + deltaerr;

break;
}
	case 22: {
var.second = y;
error = error + deltaerr;

break;
}
	case 23: {
x0 = x1;
error = error + deltaerr;

break;
}
	case 24: {
x0 = y0;
error = error + deltaerr;

break;
}
	case 25: {
x1 = a;
error = error + deltaerr;

break;
}
	case 26: {
x1 = y1;
error = error + deltaerr;

break;
}
	case 27: {
y0 = a;
error = error + deltaerr;

break;
}
	case 28: {
y0 = y1;
error = error + deltaerr;

break;
}
	case 29: {
y1 = a;
error = error + deltaerr;

break;
}
	case 30: {
ystep = -1;
error = error + deltaerr;

break;
}
	case 31: {
ystep = 1;
error = error + deltaerr;

break;
}
}


current candidate: 17
parent stmt: cef7c2a0
current stmt: cef7c288
stmt: switch(__choose("__ID17")){
	case 0: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 3: {
a = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 4: {
a = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 5: {
error = error + deltaerr;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 6: {
error = error - 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 7: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 8: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 9: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 10: {
if (__is_neg())
    break;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 11: {
if (__is_neg())
    return;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 12: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 13: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 14: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 15: {
if (this->capacity() == this->size())
    return false;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 16: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 17: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 18: {
line.push_back(var);
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 19: {
this->clear();
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 20: {
throw;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 21: {
var.first = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 22: {
var.first = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 23: {
var.second = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 24: {
var.second = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 25: {
x0 = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 26: {
x0 = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 27: {
x1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 28: {
x1 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 29: {
y0 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 30: {
y0 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 31: {
y1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 32: {
ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 33: {
ystep = 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 18
parent stmt: cef7c2a0
current stmt: cf1a5cf8
stmt: switch(__choose("__ID18")){
	case 0: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
}


current candidate: 19
parent stmt: cef7c2a0
current stmt: cf1a5f88
stmt: switch(__choose("__ID19")){
	case 0: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 20
parent stmt: cef7c2a0
current stmt: cf1b4670
stmt: switch(__choose("__ID20")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 21
parent stmt: cef7c2a0
current stmt: cf1b48b0
stmt: switch(__choose("__ID21")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 22
parent stmt: cef7c2a0
current stmt: cf1bf690
stmt: switch(__choose("__ID22")){
	case 0: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 23
parent stmt: cef7c2a0
current stmt: cf1bf938
stmt: switch(__choose("__ID23")){
	case 0: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 24
parent stmt: cef7c2a0
current stmt: cf1bfbb8
stmt: switch(__choose("__ID24")){
	case 0: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 1: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
}


current candidate: 25
parent stmt: cef7c2a0
current stmt: cf1c9d08
stmt: switch(__choose("__ID25")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 26
parent stmt: cef7c2a0
current stmt: cf1c9f48
stmt: switch(__choose("__ID26")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 27
parent stmt: cef7c2a0
current stmt: cf1ca1b8
stmt: switch(__choose("__ID27")){
	case 0: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
}


current candidate: 28
parent stmt: cef7c2a0
current stmt: cf1d00b0
stmt: switch(__choose("__ID28")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 29
parent stmt: cef7c2a0
current stmt: cf1db538
stmt: switch(__choose("__ID29")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 30
parent stmt: cef7c2a0
current stmt: cf1db7e8
stmt: switch(__choose("__ID30")){
	case 0: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 31
parent stmt: cef7c2a0
current stmt: cf1dba80
stmt: switch(__choose("__ID31")){
	case 0: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 32
parent stmt: cef7c300
current stmt: cef0d740
stmt: switch(__choose("__ID32")){
	case 0: {
short x0 = 0, y0 = 0;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return;
short x0 = 0, y0 = 0;

break;
}
	case 3: {
if (this->capacity() == this->size())
    return false;
short x0 = 0, y0 = 0;

break;
}
	case 4: {
this->clear();
short x0 = 0, y0 = 0;

break;
}
	case 5: {
throw;
short x0 = 0, y0 = 0;

break;
}
	case 6: {
x1 = y1;
short x0 = 0, y0 = 0;

break;
}
}


current candidate: 33
parent stmt: cef7c300
current stmt: cef0dcc8
stmt: switch(__choose("__ID33")){
	case 0: {
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 1: {

break;
}
	case 2: {
double steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 3: {
if (__is_neg())
    return;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 5: {
this->clear();
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 6: {
throw;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 7: {
x0 = x1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 8: {
x0 = y0;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 9: {
x1 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 10: {
y0 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
}


current candidate: 34
parent stmt: cef7c300
current stmt: cef0dd60
stmt: switch(__choose("__ID34")){
	case 0: {
short a;

break;
}
	case 1: {

break;
}
	case 2: {
double a;

break;
}
	case 3: {
if (__is_neg())
    return;
short a;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
short a;

break;
}
	case 5: {
this->clear();
short a;

break;
}
	case 6: {
throw;
short a;

break;
}
	case 7: {
x0 = x1;
short a;

break;
}
	case 8: {
x0 = y0;
short a;

break;
}
	case 9: {
x1 = y1;
short a;

break;
}
	case 10: {
y0 = y1;
short a;

break;
}
}


current candidate: 35
parent stmt: cef7c300
current stmt: cef0e0f0
stmt: switch(__choose("__ID35")){
	case 0: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 36
parent stmt: cef7c300
current stmt: cef0e520
stmt: switch(__choose("__ID36")){
	case 0: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 37
parent stmt: cef7c300
current stmt: cef0e678
stmt: switch(__choose("__ID37")){
	case 0: {
int deltax = x1 - x0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltax = x1 - x0;

break;
}
	case 3: {
a = x1;
int deltax = x1 - x0;

break;
}
	case 4: {
a = y0;
int deltax = x1 - x0;

break;
}
	case 5: {
double deltax = x1 - x0;

break;
}
	case 6: {
if (__is_neg())
    return;
int deltax = x1 - x0;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltax = x1 - x0;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 10: {
this->clear();
int deltax = x1 - x0;

break;
}
	case 11: {
throw;
int deltax = x1 - x0;

break;
}
	case 12: {
x0 = x1;
int deltax = x1 - x0;

break;
}
	case 13: {
x0 = y0;
int deltax = x1 - x0;

break;
}
	case 14: {
x1 = a;
int deltax = x1 - x0;

break;
}
	case 15: {
x1 = y1;
int deltax = x1 - x0;

break;
}
	case 16: {
y0 = a;
int deltax = x1 - x0;

break;
}
	case 17: {
y0 = y1;
int deltax = x1 - x0;

break;
}
	case 18: {
y1 = a;
int deltax = x1 - x0;

break;
}
}


current candidate: 38
parent stmt: cef7c300
current stmt: cef0e938
stmt: switch(__choose("__ID38")){
	case 0: {
int deltay = abs((int)(y1 - y0));

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 3: {
a = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 4: {
a = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 5: {
double deltay = abs((int)(y1 - y0));

break;
}
	case 6: {
if (__is_neg())
    return;
int deltay = abs((int)(y1 - y0));

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltay = abs((int)(y1 - y0));

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 10: {
this->clear();
int deltay = abs((int)(y1 - y0));

break;
}
	case 11: {
throw;
int deltay = abs((int)(y1 - y0));

break;
}
	case 12: {
x0 = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 13: {
x0 = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 14: {
x1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 15: {
x1 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 16: {
y0 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 17: {
y0 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 18: {
y1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
}


current candidate: 39
parent stmt: cef7c300
current stmt: cef0ea08
stmt: switch(__choose("__ID39")){
	case 0: {
float error = 0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float error = 0;

break;
}
	case 3: {
a = x1;
float error = 0;

break;
}
	case 4: {
a = y0;
float error = 0;

break;
}
	case 5: {
if (__is_neg())
    return;
float error = 0;

break;
}
	case 6: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
float error = 0;

break;
}
	case 8: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 9: {
this->clear();
float error = 0;

break;
}
	case 10: {
throw;
float error = 0;

break;
}
	case 11: {
x0 = x1;
float error = 0;

break;
}
	case 12: {
x0 = y0;
float error = 0;

break;
}
	case 13: {
x1 = a;
float error = 0;

break;
}
	case 14: {
x1 = y1;
float error = 0;

break;
}
	case 15: {
y0 = a;
float error = 0;

break;
}
	case 16: {
y0 = y1;
float error = 0;

break;
}
	case 17: {
y1 = a;
float error = 0;

break;
}
}


current candidate: 40
parent stmt: cef7c300
current stmt: cef0eb48
stmt: switch(__choose("__ID40")){
	case 0: {
float deltaerr = deltay / deltax;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float deltaerr = deltay / deltax;

break;
}
	case 3: {
a = x1;
float deltaerr = deltay / deltax;

break;
}
	case 4: {
a = y0;
float deltaerr = deltay / deltax;

break;
}
	case 5: {
error = error - 1;
float deltaerr = deltay / deltax;

break;
}
	case 6: {
if (__is_neg())
    return;
float deltaerr = deltay / deltax;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
float deltaerr = deltay / deltax;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 10: {
this->clear();
float deltaerr = deltay / deltax;

break;
}
	case 11: {
throw;
float deltaerr = deltay / deltax;

break;
}
	case 12: {
x0 = x1;
float deltaerr = deltay / deltax;

break;
}
	case 13: {
x0 = y0;
float deltaerr = deltay / deltax;

break;
}
	case 14: {
x1 = a;
float deltaerr = deltay / deltax;

break;
}
	case 15: {
x1 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 16: {
y0 = a;
float deltaerr = deltay / deltax;

break;
}
	case 17: {
y0 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 18: {
y1 = a;
float deltaerr = deltay / deltax;

break;
}
}


current candidate: 41
parent stmt: cef7c300
current stmt: cef0ebe0
stmt: switch(__choose("__ID41")){
	case 0: {
int ystep;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int ystep;

break;
}
	case 3: {
a = x1;
int ystep;

break;
}
	case 4: {
a = y0;
int ystep;

break;
}
	case 5: {
double ystep;

break;
}
	case 6: {
error = error + deltaerr;
int ystep;

break;
}
	case 7: {
error = error - 1;
int ystep;

break;
}
	case 8: {
if (__is_neg())
    return;
int ystep;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int ystep;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 12: {
this->clear();
int ystep;

break;
}
	case 13: {
throw;
int ystep;

break;
}
	case 14: {
x0 = x1;
int ystep;

break;
}
	case 15: {
x0 = y0;
int ystep;

break;
}
	case 16: {
x1 = a;
int ystep;

break;
}
	case 17: {
x1 = y1;
int ystep;

break;
}
	case 18: {
y0 = a;
int ystep;

break;
}
	case 19: {
y0 = y1;
int ystep;

break;
}
	case 20: {
y1 = a;
int ystep;

break;
}
}


current candidate: 42
parent stmt: cef7c300
current stmt: cef0ed78
stmt: switch(__choose("__ID42")){
	case 0: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 3: {
a = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 4: {
a = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 5: {
error = error + deltaerr;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 6: {
error = error - 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 7: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 8: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 9: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 10: {
if (__is_neg())
    return;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 12: {
if (this->capacity() == this->size())
    return false;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 13: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 14: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 15: {
this->clear();
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 16: {
throw;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 17: {
x0 = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 18: {
x0 = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 19: {
x1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 20: {
x1 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 21: {
y0 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 22: {
y0 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 23: {
y1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 24: {
ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 25: {
ystep = 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 43
parent stmt: cef7c300
current stmt: cef0ee70
stmt: switch(__choose("__ID43")){
	case 0: {
int y = y0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int y = y0;

break;
}
	case 3: {
a = x1;
int y = y0;

break;
}
	case 4: {
a = y0;
int y = y0;

break;
}
	case 5: {
double y = y0;

break;
}
	case 6: {
error = error + deltaerr;
int y = y0;

break;
}
	case 7: {
error = error - 1;
int y = y0;

break;
}
	case 8: {
if (__is_neg())
    return;
int y = y0;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int y = y0;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
int y = y0;

break;
}
	case 13: {
this->clear();
int y = y0;

break;
}
	case 14: {
throw;
int y = y0;

break;
}
	case 15: {
x0 = x1;
int y = y0;

break;
}
	case 16: {
x0 = y0;
int y = y0;

break;
}
	case 17: {
x1 = a;
int y = y0;

break;
}
	case 18: {
x1 = y1;
int y = y0;

break;
}
	case 19: {
y0 = a;
int y = y0;

break;
}
	case 20: {
y0 = y1;
int y = y0;

break;
}
	case 21: {
y1 = a;
int y = y0;

break;
}
	case 22: {
ystep = -1;
int y = y0;

break;
}
	case 23: {
ystep = 1;
int y = y0;

break;
}
}


current candidate: 44
parent stmt: cef7c300
current stmt: cef53520
stmt: switch(__choose("__ID44")){
	case 0: {
std::pair<int, int> var;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
std::pair<int, int> var;

break;
}
	case 3: {
a = x1;
std::pair<int, int> var;

break;
}
	case 4: {
a = y0;
std::pair<int, int> var;

break;
}
	case 5: {
error = error + deltaerr;
std::pair<int, int> var;

break;
}
	case 6: {
error = error - 1;
std::pair<int, int> var;

break;
}
	case 7: {
if (__is_neg())
    return;
std::pair<int, int> var;

break;
}
	case 8: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
std::pair<int, int> var;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
std::pair<int, int> var;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
std::pair<int, int> var;

break;
}
	case 13: {
this->clear();
std::pair<int, int> var;

break;
}
	case 14: {
throw;
std::pair<int, int> var;

break;
}
	case 15: {
x0 = x1;
std::pair<int, int> var;

break;
}
	case 16: {
x0 = y0;
std::pair<int, int> var;

break;
}
	case 17: {
x1 = a;
std::pair<int, int> var;

break;
}
	case 18: {
x1 = y1;
std::pair<int, int> var;

break;
}
	case 19: {
y0 = a;
std::pair<int, int> var;

break;
}
	case 20: {
y0 = y1;
std::pair<int, int> var;

break;
}
	case 21: {
y1 = a;
std::pair<int, int> var;

break;
}
	case 22: {
ystep = -1;
std::pair<int, int> var;

break;
}
	case 23: {
ystep = 1;
std::pair<int, int> var;

break;
}
}


current candidate: 45
parent stmt: cef7c300
current stmt: cef7c2c8
stmt: switch(__choose("__ID45")){
	case 0: {
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 3: {
a = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 4: {
a = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 5: {
error = error + deltaerr;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 6: {
error = error - 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 7: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 8: {
if (__is_neg())
    return;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 9: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 10: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 11: {
if (this->capacity() == this->size())
    return false;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 12: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 13: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 14: {
line.push_back(var);
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 15: {
this->clear();
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 16: {
throw;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 17: {
var.first = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 18: {
var.second = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 19: {
x0 = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 20: {
x0 = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 21: {
x1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 22: {
x1 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 23: {
y0 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 24: {
y0 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 25: {
y1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 26: {
ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 27: {
ystep = 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
}


current candidate: 46
parent stmt: cef7c300
current stmt: cf004c70
stmt: switch(__choose("__ID46")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 47
parent stmt: cef7c300
current stmt: cf0eee38
stmt: switch(__choose("__ID47")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 48
parent stmt: cef7c300
current stmt: cf0fc8a8
stmt: switch(__choose("__ID48")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 49
parent stmt: cef7c300
current stmt: cf0fc9f8
stmt: switch(__choose("__ID49")){
	case 0: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 50
parent stmt: cef7c300
current stmt: cf1027f0
stmt: switch(__choose("__ID50")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 51
parent stmt: cef7c300
current stmt: cf113038
stmt: switch(__choose("__ID51")){
	case 0: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 52
parent stmt: cef7c300
current stmt: cf1131d0
stmt: switch(__choose("__ID52")){
	case 0: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 53
parent stmt: cef7c300
current stmt: cf113340
stmt: switch(__choose("__ID53")){
	case 0: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 54
parent stmt: cef7c300
current stmt: cf119138
stmt: switch(__choose("__ID54")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 55
parent stmt: cef7c300
current stmt: cf1192e8
stmt: switch(__choose("__ID55")){
	case 0: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 56
parent stmt: cef7c300
current stmt: cf119480
stmt: switch(__choose("__ID56")){
	case 0: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 57
parent stmt: cef7c300
current stmt: cf1238d8
stmt: switch(__choose("__ID57")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 58
parent stmt: cef7c300
current stmt: cf123ac8
stmt: switch(__choose("__ID58")){
	case 0: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 1: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
}


current candidate: 59
parent stmt: cef7c300
current stmt: cf1319d0
stmt: switch(__choose("__ID59")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 60
parent stmt: cef7c300
current stmt: cf137878
stmt: switch(__choose("__ID60")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 61
parent stmt: cef7c300
current stmt: cf147720
stmt: switch(__choose("__ID61")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 62
parent stmt: cef7c300
current stmt: cf14d558
stmt: switch(__choose("__ID62")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 63
parent stmt: cef7c300
current stmt: cf174930
stmt: switch(__choose("__ID63")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 64
parent stmt: cef7c300
current stmt: cf188ba8
stmt: switch(__choose("__ID64")){
	case 0: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 65
parent stmt: cef7c300
current stmt: cf188df0
stmt: switch(__choose("__ID65")){
	case 0: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 66
parent stmt: cef7c300
current stmt: cf18ed30
stmt: switch(__choose("__ID66")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 67
parent stmt: cef7c300
current stmt: cf199638
stmt: switch(__choose("__ID67")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 68
parent stmt: cef7c300
current stmt: cf199868
stmt: switch(__choose("__ID68")){
	case 0: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 1: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
}


current candidate: 69
parent stmt: cef7c300
current stmt: cf1a5aa8
stmt: switch(__choose("__ID69")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 70
parent stmt: cef86fa0
current stmt: cef80ac0
stmt: switch(__choose("__ID70")){
	case 0: {
FILE *f = fopen(argv[1], "r");

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
FILE *f = fopen(argv[1], "r");

break;
}
	case 3: {
if (__is_neg())
    return 1;
FILE *f = fopen(argv[1], "r");

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
FILE *f = fopen(argv[1], "r");

break;
}
	case 5: {
this->clear();
FILE *f = fopen(argv[1], "r");

break;
}
	case 6: {
throw;
FILE *f = fopen(argv[1], "r");

break;
}
}


current candidate: 71
parent stmt: cef86fa0
current stmt: cef80bf0
stmt: switch(__choose("__ID71")){
	case 0: {
int x, y;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
int x, y;

break;
}
	case 3: {
if (__is_neg())
    return 1;
int x, y;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
int x, y;

break;
}
	case 5: {
this->clear();
int x, y;

break;
}
	case 6: {
throw;
int x, y;

break;
}
}


current candidate: 72
parent stmt: cef86fa0
current stmt: cef80e18
stmt: switch(__choose("__ID72")){
	case 0: {
fscanf(f, "%d %d\n", &x, &y)
break;
}
	case 1: {

break;
}
	case 2: {
fscanf((f), "%d %d\n", &x, &y);

break;
}
	case 3: {
fscanf(f, __is_neg(), &x, &y);

break;
}
	case 4: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 5: {
if (__is_neg())
    return 0;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 6: {
if (__is_neg())
    return 1;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 8: {
this->clear();
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 9: {
throw;
fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 73
parent stmt: cef86fa0
current stmt: cef80f88
stmt: switch(__choose("__ID73")){
	case 0: {
fclose(f)
break;
}
	case 1: {

break;
}
	case 2: {
fclose((f));

break;
}
	case 3: {
if (!__is_neg())
    fclose(f);

break;
}
	case 4: {
if (__is_neg())
    return 0;
fclose(f);

break;
}
	case 5: {
if (__is_neg())
    return 1;
fclose(f);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
fclose(f);

break;
}
	case 7: {
this->clear();
fclose(f);

break;
}
	case 8: {
throw;
fclose(f);

break;
}
}


current candidate: 74
parent stmt: cef86fa0
current stmt: cef865f0
stmt: switch(__choose("__ID74")){
	case 0: {
DiscreteLine line;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
DiscreteLine line;

break;
}
	case 3: {
if (__is_neg())
    return 1;
DiscreteLine line;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
DiscreteLine line;

break;
}
	case 5: {
this->clear();
DiscreteLine line;

break;
}
	case 6: {
throw;
DiscreteLine line;

break;
}
}


current candidate: 75
parent stmt: cef86fa0
current stmt: cef86748
stmt: switch(__choose("__ID75")){
	case 0: {
buggy(x, y, line)
break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
buggy(x, y, line);

break;
}
	case 3: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 4: {
if (__is_neg())
    return 0;
buggy(x, y, line);

break;
}
	case 5: {
if (__is_neg())
    return 1;
buggy(x, y, line);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
buggy(x, y, line);

break;
}
	case 7: {
this->clear();
buggy(x, y, line);

break;
}
	case 8: {
throw;
buggy(x, y, line);

break;
}
}


current candidate: 76
parent stmt: cef86fa0
current stmt: cef86f68
stmt: switch(__choose("__ID76")){
	case 0: {
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 3: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 4: {
if (__is_neg())
    return 0;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 5: {
if (__is_neg())
    return 1;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 7: {
this->clear();
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 8: {
throw;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 77
parent stmt: cef86fa0
current stmt: cf1e19e8
stmt: switch(__choose("__ID77")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 78
parent stmt: cef86fa0
current stmt: cf1e1ab0
stmt: switch(__choose("__ID78")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 79
parent stmt: cef86fa0
current stmt: cf1ee818
stmt: switch(__choose("__ID79")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 80
parent stmt: cef86fa0
current stmt: cf1ee900
stmt: switch(__choose("__ID80")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 81
parent stmt: cef86fa0
current stmt: cf1eeaa8
stmt: switch(__choose("__ID81")){
	case 0: {
fscanf(f, __is_neg(), &x, &y)
break;
}
	case 1: {
fscanf(f, __is_neg(), &x, &y);

break;
}
}


current candidate: 82
parent stmt: cef86fa0
current stmt: cf1eeb20
stmt: switch(__choose("__ID82")){
	case 0: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 1: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 83
parent stmt: cef86fa0
current stmt: cf1f67b8
stmt: switch(__choose("__ID83")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 84
parent stmt: cef86fa0
current stmt: cf1f68e0
stmt: switch(__choose("__ID84")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 85
parent stmt: cef86fa0
current stmt: cf1f6ac8
stmt: switch(__choose("__ID85")){
	case 0: {
if (!__is_neg())
    fclose(f);

break;
}
	case 1: {
if (!__is_neg())
    fclose(f);

break;
}
}


current candidate: 86
parent stmt: cef86fa0
current stmt: cf2016e0
stmt: switch(__choose("__ID86")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 87
parent stmt: cef86fa0
current stmt: cf201808
stmt: switch(__choose("__ID87")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 88
parent stmt: cef86fa0
current stmt: cf207798
stmt: switch(__choose("__ID88")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 89
parent stmt: cef86fa0
current stmt: cf2078c0
stmt: switch(__choose("__ID89")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 90
parent stmt: cef86fa0
current stmt: cf207a10
stmt: switch(__choose("__ID90")){
	case 0: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 1: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
}


current candidate: 91
parent stmt: cef86fa0
current stmt: cf216070
stmt: switch(__choose("__ID91")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 92
parent stmt: cef86fa0
current stmt: cf2161b8
stmt: switch(__choose("__ID92")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 93
parent stmt: cef86fa0
current stmt: cf216328
stmt: switch(__choose("__ID93")){
	case 0: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 94
parent stmt: cef86fa0
current stmt: cf21e820
stmt: switch(__choose("__ID94")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 95
parent stmt: cef86fa0
current stmt: cf21e968
stmt: switch(__choose("__ID95")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}

Generating patches...
Patch Generated!
[7] CondTester, a patch instance with id 0:
codes size: 1
res size: 1
result size: 1863
Spawn 1 instances, now Total 1
Single building for Tester 0x55a0cf0c8d30 id 1863 failed as well!
[9] Preprocess the following candidate with StringConstTester:
1864

current candidate: 96
parent stmt: cef0ed78
current stmt: cef0ece0
stmt: switch(__choose("__ID96")){
	case 0: {
ystep = 1
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
ystep = 1;

break;
}
	case 3: {
a = x1;
ystep = 1;

break;
}
	case 4: {
a = y0;
ystep = 1;

break;
}
	case 5: {
error = error + deltaerr;
ystep = 1;

break;
}
	case 6: {
error = error - 1;
ystep = 1;

break;
}
	case 7: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 8: {
if (__is_neg())
    return;
ystep = 1;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
ystep = 1;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
ystep = 1;

break;
}
	case 13: {
this->clear();
ystep = 1;

break;
}
	case 14: {
throw;
ystep = 1;

break;
}
	case 15: {
x0 = x1;
ystep = 1;

break;
}
	case 16: {
x0 = y0;
ystep = 1;

break;
}
	case 17: {
x1 = a;
ystep = 1;

break;
}
	case 18: {
x1 = y1;
ystep = 1;

break;
}
	case 19: {
y0 = a;
ystep = 1;

break;
}
	case 20: {
y0 = y1;
ystep = 1;

break;
}
	case 21: {
y1 = a;
ystep = 1;

break;
}
	case 22: {
ystep = -1;
ystep = 1;

break;
}
	case 23: {
ystep = 1;
ystep = 1;

break;
}
}


current candidate: 97
parent stmt: cef0ed78
current stmt: cf174b40
stmt: switch(__choose("__ID97")){
	case 0: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 1: {
if (!__is_neg())
    ystep = 1;

break;
}
}


current candidate: 98
parent stmt: cef0ed78
current stmt: cf17a9d8
stmt: switch(__choose("__ID98")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 99
parent stmt: cef7bf60
current stmt: cef7bd88
stmt: switch(__choose("__ID99")){
	case 0: {
var.first = x
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.first = x;

break;
}
	case 3: {
a = x1;
var.first = x;

break;
}
	case 4: {
a = y0;
var.first = x;

break;
}
	case 5: {
error = error + deltaerr;
var.first = x;

break;
}
	case 6: {
error = error - 1;
var.first = x;

break;
}
	case 7: {
if (!__is_neg())
    var.first = x;

break;
}
	case 8: {
if (__is_neg())
    break;
var.first = x;

break;
}
	case 9: {
if (__is_neg())
    return;
var.first = x;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.first = x;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.first = x;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.first = x;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.first = x;

break;
}
	case 16: {
line.push_back(var);
var.first = x;

break;
}
	case 17: {
this->clear();
var.first = x;

break;
}
	case 18: {
throw;
var.first = x;

break;
}
	case 19: {
var.first = x;
var.first = x;

break;
}
	case 20: {
var.first = y;
var.first = x;

break;
}
	case 21: {
var.second = x;
var.first = x;

break;
}
	case 22: {
var.second = y;
var.first = x;

break;
}
	case 23: {
x0 = x1;
var.first = x;

break;
}
	case 24: {
x0 = y0;
var.first = x;

break;
}
	case 25: {
x1 = a;
var.first = x;

break;
}
	case 26: {
x1 = y1;
var.first = x;

break;
}
	case 27: {
y0 = a;
var.first = x;

break;
}
	case 28: {
y0 = y1;
var.first = x;

break;
}
	case 29: {
y1 = a;
var.first = x;

break;
}
	case 30: {
ystep = -1;
var.first = x;

break;
}
	case 31: {
ystep = 1;
var.first = x;

break;
}
}


current candidate: 100
parent stmt: cef7bf60
current stmt: cef7be30
stmt: switch(__choose("__ID100")){
	case 0: {
var.second = y
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.second = y;

break;
}
	case 3: {
a = x1;
var.second = y;

break;
}
	case 4: {
a = y0;
var.second = y;

break;
}
	case 5: {
error = error + deltaerr;
var.second = y;

break;
}
	case 6: {
error = error - 1;
var.second = y;

break;
}
	case 7: {
if (!__is_neg())
    var.second = y;

break;
}
	case 8: {
if (__is_neg())
    break;
var.second = y;

break;
}
	case 9: {
if (__is_neg())
    return;
var.second = y;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.second = y;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.second = y;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.second = y;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.second = y;

break;
}
	case 16: {
line.push_back(var);
var.second = y;

break;
}
	case 17: {
this->clear();
var.second = y;

break;
}
	case 18: {
throw;
var.second = y;

break;
}
	case 19: {
var.first = x;
var.second = y;

break;
}
	case 20: {
var.first = y;
var.second = y;

break;
}
	case 21: {
var.second = x;
var.second = y;

break;
}
	case 22: {
var.second = y;
var.second = y;

break;
}
	case 23: {
x0 = x1;
var.second = y;

break;
}
	case 24: {
x0 = y0;
var.second = y;

break;
}
	case 25: {
x1 = a;
var.second = y;

break;
}
	case 26: {
x1 = y1;
var.second = y;

break;
}
	case 27: {
y0 = a;
var.second = y;

break;
}
	case 28: {
y0 = y1;
var.second = y;

break;
}
	case 29: {
y1 = a;
var.second = y;

break;
}
	case 30: {
ystep = -1;
var.second = y;

break;
}
	case 31: {
ystep = 1;
var.second = y;

break;
}
}


current candidate: 101
parent stmt: cef7bf60
current stmt: cef7bf20
stmt: switch(__choose("__ID101")){
	case 0: {
line.push_back(var)
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
line.push_back(var);

break;
}
	case 3: {
a = x1;
line.push_back(var);

break;
}
	case 4: {
a = y0;
line.push_back(var);

break;
}
	case 5: {
error = error + deltaerr;
line.push_back(var);

break;
}
	case 6: {
error = error - 1;
line.push_back(var);

break;
}
	case 7: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 8: {
if (__is_neg())
    break;
line.push_back(var);

break;
}
	case 9: {
if (__is_neg())
    return;
line.push_back(var);

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
line.push_back(var);

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
line.push_back(var);

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
line.push_back(var);

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
line.push_back(var);

break;
}
	case 16: {
line.push_back(var);
line.push_back(var);

break;
}
	case 17: {
this->clear();
line.push_back(var);

break;
}
	case 18: {
throw;
line.push_back(var);

break;
}
	case 19: {
var.first = x;
line.push_back(var);

break;
}
	case 20: {
var.first = y;
line.push_back(var);

break;
}
	case 21: {
var.second = x;
line.push_back(var);

break;
}
	case 22: {
var.second = y;
line.push_back(var);

break;
}
	case 23: {
x0 = x1;
line.push_back(var);

break;
}
	case 24: {
x0 = y0;
line.push_back(var);

break;
}
	case 25: {
x1 = a;
line.push_back(var);

break;
}
	case 26: {
x1 = y1;
line.push_back(var);

break;
}
	case 27: {
y0 = a;
line.push_back(var);

break;
}
	case 28: {
y0 = y1;
line.push_back(var);

break;
}
	case 29: {
y1 = a;
line.push_back(var);

break;
}
	case 30: {
ystep = -1;
line.push_back(var);

break;
}
	case 31: {
ystep = 1;
line.push_back(var);

break;
}
}


current candidate: 102
parent stmt: cef7bf60
current stmt: cf168490
stmt: switch(__choose("__ID102")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 103
parent stmt: cef7bf60
current stmt: cf1686d0
stmt: switch(__choose("__ID103")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 104
parent stmt: cef7bf60
current stmt: cf168940
stmt: switch(__choose("__ID104")){
	case 0: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 1: {
if (!__is_neg())
    line.push_back(var);

break;
}
}


current candidate: 105
parent stmt: cef7bf60
current stmt: cf1b4b20
stmt: switch(__choose("__ID105")){
	case 0: {
if (!__is_neg())
    var.first = x;

break;
}
	case 1: {
if (!__is_neg())
    var.first = x;

break;
}
}


current candidate: 106
parent stmt: cef7bf60
current stmt: cf1baa18
stmt: switch(__choose("__ID106")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 107
parent stmt: cef7bf60
current stmt: cf1bac58
stmt: switch(__choose("__ID107")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 108
parent stmt: cef7bf60
current stmt: cf1baec8
stmt: switch(__choose("__ID108")){
	case 0: {
if (!__is_neg())
    var.second = y;

break;
}
	case 1: {
if (!__is_neg())
    var.second = y;

break;
}
}


current candidate: 109
parent stmt: cef7bf60
current stmt: cf1bf1a0
stmt: switch(__choose("__ID109")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 110
parent stmt: cef7bf60
current stmt: cf1bf3e0
stmt: switch(__choose("__ID110")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 111
parent stmt: cef7c2a0
current stmt: cef7bf88
stmt: switch(__choose("__ID111")){
	case 0: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 3: {
a = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 4: {
a = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 5: {
error = error + deltaerr;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 6: {
error = error - 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 7: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 8: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 9: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 10: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 11: {
if (__is_neg())
    break;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 12: {
if (__is_neg())
    return;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 13: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 14: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 15: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 16: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 17: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 18: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 19: {
line.push_back(var);
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 20: {
this->clear();
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 21: {
throw;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 22: {
var.first = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 23: {
var.first = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 24: {
var.second = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 25: {
var.second = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 26: {
x0 = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 27: {
x0 = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 28: {
x1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 29: {
x1 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 30: {
y0 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 31: {
y0 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 32: {
y1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 33: {
ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 34: {
ystep = 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 112
parent stmt: cef7c2a0
current stmt: cef7c060
stmt: switch(__choose("__ID112")){
	case 0: {
error = error + deltaerr
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
error = error + deltaerr;

break;
}
	case 3: {
a = x1;
error = error + deltaerr;

break;
}
	case 4: {
a = y0;
error = error + deltaerr;

break;
}
	case 5: {
error = error + deltaerr;
error = error + deltaerr;

break;
}
	case 6: {
error = error - 1;
error = error + deltaerr;

break;
}
	case 7: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 8: {
if (__is_neg())
    break;
error = error + deltaerr;

break;
}
	case 9: {
if (__is_neg())
    return;
error = error + deltaerr;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
error = error + deltaerr;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
error = error + deltaerr;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
error = error + deltaerr;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
error = error + deltaerr;

break;
}
	case 16: {
line.push_back(var);
error = error + deltaerr;

break;
}
	case 17: {
this->clear();
error = error + deltaerr;

break;
}
	case 18: {
throw;
error = error + deltaerr;

break;
}
	case 19: {
var.first = x;
error = error + deltaerr;

break;
}
	case 20: {
var.first = y;
error = error + deltaerr;

break;
}
	case 21: {
var.second = x;
error = error + deltaerr;

break;
}
	case 22: {
var.second = y;
error = error + deltaerr;

break;
}
	case 23: {
x0 = x1;
error = error + deltaerr;

break;
}
	case 24: {
x0 = y0;
error = error + deltaerr;

break;
}
	case 25: {
x1 = a;
error = error + deltaerr;

break;
}
	case 26: {
x1 = y1;
error = error + deltaerr;

break;
}
	case 27: {
y0 = a;
error = error + deltaerr;

break;
}
	case 28: {
y0 = y1;
error = error + deltaerr;

break;
}
	case 29: {
y1 = a;
error = error + deltaerr;

break;
}
	case 30: {
ystep = -1;
error = error + deltaerr;

break;
}
	case 31: {
ystep = 1;
error = error + deltaerr;

break;
}
}


current candidate: 113
parent stmt: cef7c2a0
current stmt: cef7c288
stmt: switch(__choose("__ID113")){
	case 0: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 3: {
a = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 4: {
a = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 5: {
error = error + deltaerr;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 6: {
error = error - 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 7: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 8: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 9: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 10: {
if (__is_neg())
    break;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 11: {
if (__is_neg())
    return;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 12: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 13: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 14: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 15: {
if (this->capacity() == this->size())
    return false;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 16: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 17: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 18: {
line.push_back(var);
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 19: {
this->clear();
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 20: {
throw;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 21: {
var.first = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 22: {
var.first = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 23: {
var.second = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 24: {
var.second = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 25: {
x0 = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 26: {
x0 = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 27: {
x1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 28: {
x1 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 29: {
y0 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 30: {
y0 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 31: {
y1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 32: {
ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 33: {
ystep = 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 114
parent stmt: cef7c2a0
current stmt: cf1a5cf8
stmt: switch(__choose("__ID114")){
	case 0: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
}


current candidate: 115
parent stmt: cef7c2a0
current stmt: cf1a5f88
stmt: switch(__choose("__ID115")){
	case 0: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 116
parent stmt: cef7c2a0
current stmt: cf1b4670
stmt: switch(__choose("__ID116")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 117
parent stmt: cef7c2a0
current stmt: cf1b48b0
stmt: switch(__choose("__ID117")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 118
parent stmt: cef7c2a0
current stmt: cf1bf690
stmt: switch(__choose("__ID118")){
	case 0: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 119
parent stmt: cef7c2a0
current stmt: cf1bf938
stmt: switch(__choose("__ID119")){
	case 0: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 120
parent stmt: cef7c2a0
current stmt: cf1bfbb8
stmt: switch(__choose("__ID120")){
	case 0: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 1: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
}


current candidate: 121
parent stmt: cef7c2a0
current stmt: cf1c9d08
stmt: switch(__choose("__ID121")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 122
parent stmt: cef7c2a0
current stmt: cf1c9f48
stmt: switch(__choose("__ID122")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 123
parent stmt: cef7c2a0
current stmt: cf1ca1b8
stmt: switch(__choose("__ID123")){
	case 0: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
}


current candidate: 124
parent stmt: cef7c2a0
current stmt: cf1d00b0
stmt: switch(__choose("__ID124")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 125
parent stmt: cef7c2a0
current stmt: cf1db538
stmt: switch(__choose("__ID125")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 126
parent stmt: cef7c2a0
current stmt: cf1db7e8
stmt: switch(__choose("__ID126")){
	case 0: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 127
parent stmt: cef7c2a0
current stmt: cf1dba80
stmt: switch(__choose("__ID127")){
	case 0: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 128
parent stmt: cef7c300
current stmt: cef0d740
stmt: switch(__choose("__ID128")){
	case 0: {
short x0 = 0, y0 = 0;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return;
short x0 = 0, y0 = 0;

break;
}
	case 3: {
if (this->capacity() == this->size())
    return false;
short x0 = 0, y0 = 0;

break;
}
	case 4: {
this->clear();
short x0 = 0, y0 = 0;

break;
}
	case 5: {
throw;
short x0 = 0, y0 = 0;

break;
}
	case 6: {
x1 = y1;
short x0 = 0, y0 = 0;

break;
}
}


current candidate: 129
parent stmt: cef7c300
current stmt: cef0dcc8
stmt: switch(__choose("__ID129")){
	case 0: {
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 1: {

break;
}
	case 2: {
double steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 3: {
if (__is_neg())
    return;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 5: {
this->clear();
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 6: {
throw;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 7: {
x0 = x1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 8: {
x0 = y0;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 9: {
x1 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 10: {
y0 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
}


current candidate: 130
parent stmt: cef7c300
current stmt: cef0dd60
stmt: switch(__choose("__ID130")){
	case 0: {
short a;

break;
}
	case 1: {

break;
}
	case 2: {
double a;

break;
}
	case 3: {
if (__is_neg())
    return;
short a;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
short a;

break;
}
	case 5: {
this->clear();
short a;

break;
}
	case 6: {
throw;
short a;

break;
}
	case 7: {
x0 = x1;
short a;

break;
}
	case 8: {
x0 = y0;
short a;

break;
}
	case 9: {
x1 = y1;
short a;

break;
}
	case 10: {
y0 = y1;
short a;

break;
}
}


current candidate: 131
parent stmt: cef7c300
current stmt: cef0e0f0
stmt: switch(__choose("__ID131")){
	case 0: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 132
parent stmt: cef7c300
current stmt: cef0e520
stmt: switch(__choose("__ID132")){
	case 0: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 133
parent stmt: cef7c300
current stmt: cef0e678
stmt: switch(__choose("__ID133")){
	case 0: {
int deltax = x1 - x0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltax = x1 - x0;

break;
}
	case 3: {
a = x1;
int deltax = x1 - x0;

break;
}
	case 4: {
a = y0;
int deltax = x1 - x0;

break;
}
	case 5: {
double deltax = x1 - x0;

break;
}
	case 6: {
if (__is_neg())
    return;
int deltax = x1 - x0;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltax = x1 - x0;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 10: {
this->clear();
int deltax = x1 - x0;

break;
}
	case 11: {
throw;
int deltax = x1 - x0;

break;
}
	case 12: {
x0 = x1;
int deltax = x1 - x0;

break;
}
	case 13: {
x0 = y0;
int deltax = x1 - x0;

break;
}
	case 14: {
x1 = a;
int deltax = x1 - x0;

break;
}
	case 15: {
x1 = y1;
int deltax = x1 - x0;

break;
}
	case 16: {
y0 = a;
int deltax = x1 - x0;

break;
}
	case 17: {
y0 = y1;
int deltax = x1 - x0;

break;
}
	case 18: {
y1 = a;
int deltax = x1 - x0;

break;
}
}


current candidate: 134
parent stmt: cef7c300
current stmt: cef0e938
stmt: switch(__choose("__ID134")){
	case 0: {
int deltay = abs((int)(y1 - y0));

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 3: {
a = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 4: {
a = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 5: {
double deltay = abs((int)(y1 - y0));

break;
}
	case 6: {
if (__is_neg())
    return;
int deltay = abs((int)(y1 - y0));

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltay = abs((int)(y1 - y0));

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 10: {
this->clear();
int deltay = abs((int)(y1 - y0));

break;
}
	case 11: {
throw;
int deltay = abs((int)(y1 - y0));

break;
}
	case 12: {
x0 = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 13: {
x0 = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 14: {
x1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 15: {
x1 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 16: {
y0 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 17: {
y0 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 18: {
y1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
}


current candidate: 135
parent stmt: cef7c300
current stmt: cef0ea08
stmt: switch(__choose("__ID135")){
	case 0: {
float error = 0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float error = 0;

break;
}
	case 3: {
a = x1;
float error = 0;

break;
}
	case 4: {
a = y0;
float error = 0;

break;
}
	case 5: {
if (__is_neg())
    return;
float error = 0;

break;
}
	case 6: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
float error = 0;

break;
}
	case 8: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 9: {
this->clear();
float error = 0;

break;
}
	case 10: {
throw;
float error = 0;

break;
}
	case 11: {
x0 = x1;
float error = 0;

break;
}
	case 12: {
x0 = y0;
float error = 0;

break;
}
	case 13: {
x1 = a;
float error = 0;

break;
}
	case 14: {
x1 = y1;
float error = 0;

break;
}
	case 15: {
y0 = a;
float error = 0;

break;
}
	case 16: {
y0 = y1;
float error = 0;

break;
}
	case 17: {
y1 = a;
float error = 0;

break;
}
}


current candidate: 136
parent stmt: cef7c300
current stmt: cef0eb48
stmt: switch(__choose("__ID136")){
	case 0: {
float deltaerr = deltay / deltax;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float deltaerr = deltay / deltax;

break;
}
	case 3: {
a = x1;
float deltaerr = deltay / deltax;

break;
}
	case 4: {
a = y0;
float deltaerr = deltay / deltax;

break;
}
	case 5: {
error = error - 1;
float deltaerr = deltay / deltax;

break;
}
	case 6: {
if (__is_neg())
    return;
float deltaerr = deltay / deltax;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
float deltaerr = deltay / deltax;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 10: {
this->clear();
float deltaerr = deltay / deltax;

break;
}
	case 11: {
throw;
float deltaerr = deltay / deltax;

break;
}
	case 12: {
x0 = x1;
float deltaerr = deltay / deltax;

break;
}
	case 13: {
x0 = y0;
float deltaerr = deltay / deltax;

break;
}
	case 14: {
x1 = a;
float deltaerr = deltay / deltax;

break;
}
	case 15: {
x1 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 16: {
y0 = a;
float deltaerr = deltay / deltax;

break;
}
	case 17: {
y0 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 18: {
y1 = a;
float deltaerr = deltay / deltax;

break;
}
}


current candidate: 137
parent stmt: cef7c300
current stmt: cef0ebe0
stmt: switch(__choose("__ID137")){
	case 0: {
int ystep;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int ystep;

break;
}
	case 3: {
a = x1;
int ystep;

break;
}
	case 4: {
a = y0;
int ystep;

break;
}
	case 5: {
double ystep;

break;
}
	case 6: {
error = error + deltaerr;
int ystep;

break;
}
	case 7: {
error = error - 1;
int ystep;

break;
}
	case 8: {
if (__is_neg())
    return;
int ystep;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int ystep;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 12: {
this->clear();
int ystep;

break;
}
	case 13: {
throw;
int ystep;

break;
}
	case 14: {
x0 = x1;
int ystep;

break;
}
	case 15: {
x0 = y0;
int ystep;

break;
}
	case 16: {
x1 = a;
int ystep;

break;
}
	case 17: {
x1 = y1;
int ystep;

break;
}
	case 18: {
y0 = a;
int ystep;

break;
}
	case 19: {
y0 = y1;
int ystep;

break;
}
	case 20: {
y1 = a;
int ystep;

break;
}
}


current candidate: 138
parent stmt: cef7c300
current stmt: cef0ed78
stmt: switch(__choose("__ID138")){
	case 0: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 3: {
a = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 4: {
a = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 5: {
error = error + deltaerr;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 6: {
error = error - 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 7: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 8: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 9: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 10: {
if (__is_neg())
    return;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 12: {
if (this->capacity() == this->size())
    return false;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 13: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 14: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 15: {
this->clear();
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 16: {
throw;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 17: {
x0 = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 18: {
x0 = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 19: {
x1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 20: {
x1 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 21: {
y0 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 22: {
y0 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 23: {
y1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 24: {
ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 25: {
ystep = 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 139
parent stmt: cef7c300
current stmt: cef0ee70
stmt: switch(__choose("__ID139")){
	case 0: {
int y = y0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int y = y0;

break;
}
	case 3: {
a = x1;
int y = y0;

break;
}
	case 4: {
a = y0;
int y = y0;

break;
}
	case 5: {
double y = y0;

break;
}
	case 6: {
error = error + deltaerr;
int y = y0;

break;
}
	case 7: {
error = error - 1;
int y = y0;

break;
}
	case 8: {
if (__is_neg())
    return;
int y = y0;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int y = y0;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
int y = y0;

break;
}
	case 13: {
this->clear();
int y = y0;

break;
}
	case 14: {
throw;
int y = y0;

break;
}
	case 15: {
x0 = x1;
int y = y0;

break;
}
	case 16: {
x0 = y0;
int y = y0;

break;
}
	case 17: {
x1 = a;
int y = y0;

break;
}
	case 18: {
x1 = y1;
int y = y0;

break;
}
	case 19: {
y0 = a;
int y = y0;

break;
}
	case 20: {
y0 = y1;
int y = y0;

break;
}
	case 21: {
y1 = a;
int y = y0;

break;
}
	case 22: {
ystep = -1;
int y = y0;

break;
}
	case 23: {
ystep = 1;
int y = y0;

break;
}
}


current candidate: 140
parent stmt: cef7c300
current stmt: cef53520
stmt: switch(__choose("__ID140")){
	case 0: {
std::pair<int, int> var;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
std::pair<int, int> var;

break;
}
	case 3: {
a = x1;
std::pair<int, int> var;

break;
}
	case 4: {
a = y0;
std::pair<int, int> var;

break;
}
	case 5: {
error = error + deltaerr;
std::pair<int, int> var;

break;
}
	case 6: {
error = error - 1;
std::pair<int, int> var;

break;
}
	case 7: {
if (__is_neg())
    return;
std::pair<int, int> var;

break;
}
	case 8: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
std::pair<int, int> var;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
std::pair<int, int> var;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
std::pair<int, int> var;

break;
}
	case 13: {
this->clear();
std::pair<int, int> var;

break;
}
	case 14: {
throw;
std::pair<int, int> var;

break;
}
	case 15: {
x0 = x1;
std::pair<int, int> var;

break;
}
	case 16: {
x0 = y0;
std::pair<int, int> var;

break;
}
	case 17: {
x1 = a;
std::pair<int, int> var;

break;
}
	case 18: {
x1 = y1;
std::pair<int, int> var;

break;
}
	case 19: {
y0 = a;
std::pair<int, int> var;

break;
}
	case 20: {
y0 = y1;
std::pair<int, int> var;

break;
}
	case 21: {
y1 = a;
std::pair<int, int> var;

break;
}
	case 22: {
ystep = -1;
std::pair<int, int> var;

break;
}
	case 23: {
ystep = 1;
std::pair<int, int> var;

break;
}
}


current candidate: 141
parent stmt: cef7c300
current stmt: cef7c2c8
stmt: switch(__choose("__ID141")){
	case 0: {
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 3: {
a = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 4: {
a = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 5: {
error = error + deltaerr;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 6: {
error = error - 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 7: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 8: {
if (__is_neg())
    return;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 9: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 10: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 11: {
if (this->capacity() == this->size())
    return false;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 12: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 13: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 14: {
line.push_back(var);
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 15: {
this->clear();
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 16: {
throw;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 17: {
var.first = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 18: {
var.second = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 19: {
x0 = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 20: {
x0 = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 21: {
x1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 22: {
x1 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 23: {
y0 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 24: {
y0 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 25: {
y1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 26: {
ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 27: {
ystep = 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
}


current candidate: 142
parent stmt: cef7c300
current stmt: cf004c70
stmt: switch(__choose("__ID142")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 143
parent stmt: cef7c300
current stmt: cf0eee38
stmt: switch(__choose("__ID143")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 144
parent stmt: cef7c300
current stmt: cf0fc8a8
stmt: switch(__choose("__ID144")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 145
parent stmt: cef7c300
current stmt: cf0fc9f8
stmt: switch(__choose("__ID145")){
	case 0: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 146
parent stmt: cef7c300
current stmt: cf1027f0
stmt: switch(__choose("__ID146")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 147
parent stmt: cef7c300
current stmt: cf113038
stmt: switch(__choose("__ID147")){
	case 0: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 148
parent stmt: cef7c300
current stmt: cf1131d0
stmt: switch(__choose("__ID148")){
	case 0: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 149
parent stmt: cef7c300
current stmt: cf113340
stmt: switch(__choose("__ID149")){
	case 0: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 150
parent stmt: cef7c300
current stmt: cf119138
stmt: switch(__choose("__ID150")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 151
parent stmt: cef7c300
current stmt: cf1192e8
stmt: switch(__choose("__ID151")){
	case 0: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 152
parent stmt: cef7c300
current stmt: cf119480
stmt: switch(__choose("__ID152")){
	case 0: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 153
parent stmt: cef7c300
current stmt: cf1238d8
stmt: switch(__choose("__ID153")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 154
parent stmt: cef7c300
current stmt: cf123ac8
stmt: switch(__choose("__ID154")){
	case 0: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 1: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
}


current candidate: 155
parent stmt: cef7c300
current stmt: cf1319d0
stmt: switch(__choose("__ID155")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 156
parent stmt: cef7c300
current stmt: cf137878
stmt: switch(__choose("__ID156")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 157
parent stmt: cef7c300
current stmt: cf147720
stmt: switch(__choose("__ID157")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 158
parent stmt: cef7c300
current stmt: cf14d558
stmt: switch(__choose("__ID158")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 159
parent stmt: cef7c300
current stmt: cf174930
stmt: switch(__choose("__ID159")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 160
parent stmt: cef7c300
current stmt: cf188ba8
stmt: switch(__choose("__ID160")){
	case 0: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 161
parent stmt: cef7c300
current stmt: cf188df0
stmt: switch(__choose("__ID161")){
	case 0: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 162
parent stmt: cef7c300
current stmt: cf18ed30
stmt: switch(__choose("__ID162")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 163
parent stmt: cef7c300
current stmt: cf199638
stmt: switch(__choose("__ID163")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 164
parent stmt: cef7c300
current stmt: cf199868
stmt: switch(__choose("__ID164")){
	case 0: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 1: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
}


current candidate: 165
parent stmt: cef7c300
current stmt: cf1a5aa8
stmt: switch(__choose("__ID165")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 166
parent stmt: cef86fa0
current stmt: cef80ac0
stmt: switch(__choose("__ID166")){
	case 0: {
FILE *f = fopen(argv[1], "r");

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
FILE *f = fopen(argv[1], "r");

break;
}
	case 3: {
if (__is_neg())
    return 1;
FILE *f = fopen(argv[1], "r");

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
FILE *f = fopen(argv[1], "r");

break;
}
	case 5: {
this->clear();
FILE *f = fopen(argv[1], "r");

break;
}
	case 6: {
throw;
FILE *f = fopen(argv[1], "r");

break;
}
}


current candidate: 167
parent stmt: cef86fa0
current stmt: cef80bf0
stmt: switch(__choose("__ID167")){
	case 0: {
int x, y;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
int x, y;

break;
}
	case 3: {
if (__is_neg())
    return 1;
int x, y;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
int x, y;

break;
}
	case 5: {
this->clear();
int x, y;

break;
}
	case 6: {
throw;
int x, y;

break;
}
}


current candidate: 168
parent stmt: cef86fa0
current stmt: cef80e18
stmt: switch(__choose("__ID168")){
	case 0: {
fscanf(f, "%d %d\n", &x, &y)
break;
}
	case 1: {

break;
}
	case 2: {
fscanf((f), "%d %d\n", &x, &y);

break;
}
	case 3: {
fscanf(f, __is_neg(), &x, &y);

break;
}
	case 4: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 5: {
if (__is_neg())
    return 0;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 6: {
if (__is_neg())
    return 1;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 8: {
this->clear();
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 9: {
throw;
fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 169
parent stmt: cef86fa0
current stmt: cef80f88
stmt: switch(__choose("__ID169")){
	case 0: {
fclose(f)
break;
}
	case 1: {

break;
}
	case 2: {
fclose((f));

break;
}
	case 3: {
if (!__is_neg())
    fclose(f);

break;
}
	case 4: {
if (__is_neg())
    return 0;
fclose(f);

break;
}
	case 5: {
if (__is_neg())
    return 1;
fclose(f);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
fclose(f);

break;
}
	case 7: {
this->clear();
fclose(f);

break;
}
	case 8: {
throw;
fclose(f);

break;
}
}


current candidate: 170
parent stmt: cef86fa0
current stmt: cef865f0
stmt: switch(__choose("__ID170")){
	case 0: {
DiscreteLine line;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
DiscreteLine line;

break;
}
	case 3: {
if (__is_neg())
    return 1;
DiscreteLine line;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
DiscreteLine line;

break;
}
	case 5: {
this->clear();
DiscreteLine line;

break;
}
	case 6: {
throw;
DiscreteLine line;

break;
}
}


current candidate: 171
parent stmt: cef86fa0
current stmt: cef86748
stmt: switch(__choose("__ID171")){
	case 0: {
buggy(x, y, line)
break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
buggy(x, y, line);

break;
}
	case 3: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 4: {
if (__is_neg())
    return 0;
buggy(x, y, line);

break;
}
	case 5: {
if (__is_neg())
    return 1;
buggy(x, y, line);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
buggy(x, y, line);

break;
}
	case 7: {
this->clear();
buggy(x, y, line);

break;
}
	case 8: {
throw;
buggy(x, y, line);

break;
}
}


current candidate: 172
parent stmt: cef86fa0
current stmt: cef86f68
stmt: switch(__choose("__ID172")){
	case 0: {
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 3: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 4: {
if (__is_neg())
    return 0;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 5: {
if (__is_neg())
    return 1;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 7: {
this->clear();
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 8: {
throw;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 173
parent stmt: cef86fa0
current stmt: cf1e19e8
stmt: switch(__choose("__ID173")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 174
parent stmt: cef86fa0
current stmt: cf1e1ab0
stmt: switch(__choose("__ID174")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 175
parent stmt: cef86fa0
current stmt: cf1ee818
stmt: switch(__choose("__ID175")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 176
parent stmt: cef86fa0
current stmt: cf1ee900
stmt: switch(__choose("__ID176")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 177
parent stmt: cef86fa0
current stmt: cf1eeaa8
stmt: switch(__choose("__ID177")){
	case 0: {
fscanf(f, __is_neg(), &x, &y)
break;
}
	case 1: {
fscanf(f, __is_neg(), &x, &y);

break;
}
}


current candidate: 178
parent stmt: cef86fa0
current stmt: cf1eeb20
stmt: switch(__choose("__ID178")){
	case 0: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 1: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 179
parent stmt: cef86fa0
current stmt: cf1f67b8
stmt: switch(__choose("__ID179")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 180
parent stmt: cef86fa0
current stmt: cf1f68e0
stmt: switch(__choose("__ID180")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 181
parent stmt: cef86fa0
current stmt: cf1f6ac8
stmt: switch(__choose("__ID181")){
	case 0: {
if (!__is_neg())
    fclose(f);

break;
}
	case 1: {
if (!__is_neg())
    fclose(f);

break;
}
}


current candidate: 182
parent stmt: cef86fa0
current stmt: cf2016e0
stmt: switch(__choose("__ID182")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 183
parent stmt: cef86fa0
current stmt: cf201808
stmt: switch(__choose("__ID183")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 184
parent stmt: cef86fa0
current stmt: cf207798
stmt: switch(__choose("__ID184")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 185
parent stmt: cef86fa0
current stmt: cf2078c0
stmt: switch(__choose("__ID185")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 186
parent stmt: cef86fa0
current stmt: cf207a10
stmt: switch(__choose("__ID186")){
	case 0: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 1: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
}


current candidate: 187
parent stmt: cef86fa0
current stmt: cf216070
stmt: switch(__choose("__ID187")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 188
parent stmt: cef86fa0
current stmt: cf2161b8
stmt: switch(__choose("__ID188")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 189
parent stmt: cef86fa0
current stmt: cf216328
stmt: switch(__choose("__ID189")){
	case 0: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 190
parent stmt: cef86fa0
current stmt: cf21e820
stmt: switch(__choose("__ID190")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 191
parent stmt: cef86fa0
current stmt: cf21e968
stmt: switch(__choose("__ID191")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}

Generating patches...
[9] StringConstTester, a patch instance with id 0:
Spawn 1 instances, now Total 2
Single building for Tester 0x55a0ce8fc270 id 0 failed as well!
[11] Preprocess the following candidate with BasicTester:
1864

current candidate: 192
parent stmt: cef0ed78
current stmt: cef0ece0
stmt: switch(__choose("__ID192")){
	case 0: {
ystep = 1
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
ystep = 1;

break;
}
	case 3: {
a = x1;
ystep = 1;

break;
}
	case 4: {
a = y0;
ystep = 1;

break;
}
	case 5: {
error = error + deltaerr;
ystep = 1;

break;
}
	case 6: {
error = error - 1;
ystep = 1;

break;
}
	case 7: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 8: {
if (__is_neg())
    return;
ystep = 1;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
ystep = 1;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
ystep = 1;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
ystep = 1;

break;
}
	case 13: {
this->clear();
ystep = 1;

break;
}
	case 14: {
throw;
ystep = 1;

break;
}
	case 15: {
x0 = x1;
ystep = 1;

break;
}
	case 16: {
x0 = y0;
ystep = 1;

break;
}
	case 17: {
x1 = a;
ystep = 1;

break;
}
	case 18: {
x1 = y1;
ystep = 1;

break;
}
	case 19: {
y0 = a;
ystep = 1;

break;
}
	case 20: {
y0 = y1;
ystep = 1;

break;
}
	case 21: {
y1 = a;
ystep = 1;

break;
}
	case 22: {
ystep = -1;
ystep = 1;

break;
}
	case 23: {
ystep = 1;
ystep = 1;

break;
}
}


current candidate: 193
parent stmt: cef0ed78
current stmt: cf174b40
stmt: switch(__choose("__ID193")){
	case 0: {
if (!__is_neg())
    ystep = 1;

break;
}
	case 1: {
if (!__is_neg())
    ystep = 1;

break;
}
}


current candidate: 194
parent stmt: cef0ed78
current stmt: cf17a9d8
stmt: switch(__choose("__ID194")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 195
parent stmt: cef7bf60
current stmt: cef7bd88
stmt: switch(__choose("__ID195")){
	case 0: {
var.first = x
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.first = x;

break;
}
	case 3: {
a = x1;
var.first = x;

break;
}
	case 4: {
a = y0;
var.first = x;

break;
}
	case 5: {
error = error + deltaerr;
var.first = x;

break;
}
	case 6: {
error = error - 1;
var.first = x;

break;
}
	case 7: {
if (!__is_neg())
    var.first = x;

break;
}
	case 8: {
if (__is_neg())
    break;
var.first = x;

break;
}
	case 9: {
if (__is_neg())
    return;
var.first = x;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.first = x;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.first = x;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.first = x;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.first = x;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.first = x;

break;
}
	case 16: {
line.push_back(var);
var.first = x;

break;
}
	case 17: {
this->clear();
var.first = x;

break;
}
	case 18: {
throw;
var.first = x;

break;
}
	case 19: {
var.first = x;
var.first = x;

break;
}
	case 20: {
var.first = y;
var.first = x;

break;
}
	case 21: {
var.second = x;
var.first = x;

break;
}
	case 22: {
var.second = y;
var.first = x;

break;
}
	case 23: {
x0 = x1;
var.first = x;

break;
}
	case 24: {
x0 = y0;
var.first = x;

break;
}
	case 25: {
x1 = a;
var.first = x;

break;
}
	case 26: {
x1 = y1;
var.first = x;

break;
}
	case 27: {
y0 = a;
var.first = x;

break;
}
	case 28: {
y0 = y1;
var.first = x;

break;
}
	case 29: {
y1 = a;
var.first = x;

break;
}
	case 30: {
ystep = -1;
var.first = x;

break;
}
	case 31: {
ystep = 1;
var.first = x;

break;
}
}


current candidate: 196
parent stmt: cef7bf60
current stmt: cef7be30
stmt: switch(__choose("__ID196")){
	case 0: {
var.second = y
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
var.second = y;

break;
}
	case 3: {
a = x1;
var.second = y;

break;
}
	case 4: {
a = y0;
var.second = y;

break;
}
	case 5: {
error = error + deltaerr;
var.second = y;

break;
}
	case 6: {
error = error - 1;
var.second = y;

break;
}
	case 7: {
if (!__is_neg())
    var.second = y;

break;
}
	case 8: {
if (__is_neg())
    break;
var.second = y;

break;
}
	case 9: {
if (__is_neg())
    return;
var.second = y;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
var.second = y;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
var.second = y;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
var.second = y;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
var.second = y;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
var.second = y;

break;
}
	case 16: {
line.push_back(var);
var.second = y;

break;
}
	case 17: {
this->clear();
var.second = y;

break;
}
	case 18: {
throw;
var.second = y;

break;
}
	case 19: {
var.first = x;
var.second = y;

break;
}
	case 20: {
var.first = y;
var.second = y;

break;
}
	case 21: {
var.second = x;
var.second = y;

break;
}
	case 22: {
var.second = y;
var.second = y;

break;
}
	case 23: {
x0 = x1;
var.second = y;

break;
}
	case 24: {
x0 = y0;
var.second = y;

break;
}
	case 25: {
x1 = a;
var.second = y;

break;
}
	case 26: {
x1 = y1;
var.second = y;

break;
}
	case 27: {
y0 = a;
var.second = y;

break;
}
	case 28: {
y0 = y1;
var.second = y;

break;
}
	case 29: {
y1 = a;
var.second = y;

break;
}
	case 30: {
ystep = -1;
var.second = y;

break;
}
	case 31: {
ystep = 1;
var.second = y;

break;
}
}


current candidate: 197
parent stmt: cef7bf60
current stmt: cef7bf20
stmt: switch(__choose("__ID197")){
	case 0: {
line.push_back(var)
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
line.push_back(var);

break;
}
	case 3: {
a = x1;
line.push_back(var);

break;
}
	case 4: {
a = y0;
line.push_back(var);

break;
}
	case 5: {
error = error + deltaerr;
line.push_back(var);

break;
}
	case 6: {
error = error - 1;
line.push_back(var);

break;
}
	case 7: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 8: {
if (__is_neg())
    break;
line.push_back(var);

break;
}
	case 9: {
if (__is_neg())
    return;
line.push_back(var);

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
line.push_back(var);

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
line.push_back(var);

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
line.push_back(var);

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
line.push_back(var);

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
line.push_back(var);

break;
}
	case 16: {
line.push_back(var);
line.push_back(var);

break;
}
	case 17: {
this->clear();
line.push_back(var);

break;
}
	case 18: {
throw;
line.push_back(var);

break;
}
	case 19: {
var.first = x;
line.push_back(var);

break;
}
	case 20: {
var.first = y;
line.push_back(var);

break;
}
	case 21: {
var.second = x;
line.push_back(var);

break;
}
	case 22: {
var.second = y;
line.push_back(var);

break;
}
	case 23: {
x0 = x1;
line.push_back(var);

break;
}
	case 24: {
x0 = y0;
line.push_back(var);

break;
}
	case 25: {
x1 = a;
line.push_back(var);

break;
}
	case 26: {
x1 = y1;
line.push_back(var);

break;
}
	case 27: {
y0 = a;
line.push_back(var);

break;
}
	case 28: {
y0 = y1;
line.push_back(var);

break;
}
	case 29: {
y1 = a;
line.push_back(var);

break;
}
	case 30: {
ystep = -1;
line.push_back(var);

break;
}
	case 31: {
ystep = 1;
line.push_back(var);

break;
}
}


current candidate: 198
parent stmt: cef7bf60
current stmt: cf168490
stmt: switch(__choose("__ID198")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 199
parent stmt: cef7bf60
current stmt: cf1686d0
stmt: switch(__choose("__ID199")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 200
parent stmt: cef7bf60
current stmt: cf168940
stmt: switch(__choose("__ID200")){
	case 0: {
if (!__is_neg())
    line.push_back(var);

break;
}
	case 1: {
if (!__is_neg())
    line.push_back(var);

break;
}
}


current candidate: 201
parent stmt: cef7bf60
current stmt: cf1b4b20
stmt: switch(__choose("__ID201")){
	case 0: {
if (!__is_neg())
    var.first = x;

break;
}
	case 1: {
if (!__is_neg())
    var.first = x;

break;
}
}


current candidate: 202
parent stmt: cef7bf60
current stmt: cf1baa18
stmt: switch(__choose("__ID202")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 203
parent stmt: cef7bf60
current stmt: cf1bac58
stmt: switch(__choose("__ID203")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 204
parent stmt: cef7bf60
current stmt: cf1baec8
stmt: switch(__choose("__ID204")){
	case 0: {
if (!__is_neg())
    var.second = y;

break;
}
	case 1: {
if (!__is_neg())
    var.second = y;

break;
}
}


current candidate: 205
parent stmt: cef7bf60
current stmt: cf1bf1a0
stmt: switch(__choose("__ID205")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 206
parent stmt: cef7bf60
current stmt: cf1bf3e0
stmt: switch(__choose("__ID206")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 207
parent stmt: cef7c2a0
current stmt: cef7bf88
stmt: switch(__choose("__ID207")){
	case 0: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 3: {
a = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 4: {
a = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 5: {
error = error + deltaerr;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 6: {
error = error - 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 7: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 8: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 9: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 10: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 11: {
if (__is_neg())
    break;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 12: {
if (__is_neg())
    return;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 13: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 14: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 15: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 16: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 17: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 18: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 19: {
line.push_back(var);
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 20: {
this->clear();
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 21: {
throw;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 22: {
var.first = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 23: {
var.first = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 24: {
var.second = x;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 25: {
var.second = y;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 26: {
x0 = x1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 27: {
x0 = y0;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 28: {
x1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 29: {
x1 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 30: {
y0 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 31: {
y0 = y1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 32: {
y1 = a;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 33: {
ystep = -1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 34: {
ystep = 1;
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 208
parent stmt: cef7c2a0
current stmt: cef7c060
stmt: switch(__choose("__ID208")){
	case 0: {
error = error + deltaerr
break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
error = error + deltaerr;

break;
}
	case 3: {
a = x1;
error = error + deltaerr;

break;
}
	case 4: {
a = y0;
error = error + deltaerr;

break;
}
	case 5: {
error = error + deltaerr;
error = error + deltaerr;

break;
}
	case 6: {
error = error - 1;
error = error + deltaerr;

break;
}
	case 7: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 8: {
if (__is_neg())
    break;
error = error + deltaerr;

break;
}
	case 9: {
if (__is_neg())
    return;
error = error + deltaerr;

break;
}
	case 10: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
error = error + deltaerr;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 12: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
error = error + deltaerr;

break;
}
	case 13: {
if (this->capacity() == this->size())
    return false;
error = error + deltaerr;

break;
}
	case 14: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
error = error + deltaerr;

break;
}
	case 15: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
error = error + deltaerr;

break;
}
	case 16: {
line.push_back(var);
error = error + deltaerr;

break;
}
	case 17: {
this->clear();
error = error + deltaerr;

break;
}
	case 18: {
throw;
error = error + deltaerr;

break;
}
	case 19: {
var.first = x;
error = error + deltaerr;

break;
}
	case 20: {
var.first = y;
error = error + deltaerr;

break;
}
	case 21: {
var.second = x;
error = error + deltaerr;

break;
}
	case 22: {
var.second = y;
error = error + deltaerr;

break;
}
	case 23: {
x0 = x1;
error = error + deltaerr;

break;
}
	case 24: {
x0 = y0;
error = error + deltaerr;

break;
}
	case 25: {
x1 = a;
error = error + deltaerr;

break;
}
	case 26: {
x1 = y1;
error = error + deltaerr;

break;
}
	case 27: {
y0 = a;
error = error + deltaerr;

break;
}
	case 28: {
y0 = y1;
error = error + deltaerr;

break;
}
	case 29: {
y1 = a;
error = error + deltaerr;

break;
}
	case 30: {
ystep = -1;
error = error + deltaerr;

break;
}
	case 31: {
ystep = 1;
error = error + deltaerr;

break;
}
}


current candidate: 209
parent stmt: cef7c2a0
current stmt: cef7c288
stmt: switch(__choose("__ID209")){
	case 0: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 3: {
a = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 4: {
a = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 5: {
error = error + deltaerr;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 6: {
error = error - 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 7: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 8: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 9: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 10: {
if (__is_neg())
    break;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 11: {
if (__is_neg())
    return;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 12: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 13: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 14: {
if (steep) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 15: {
if (this->capacity() == this->size())
    return false;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 16: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 17: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 18: {
line.push_back(var);
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 19: {
this->clear();
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 20: {
throw;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 21: {
var.first = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 22: {
var.first = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 23: {
var.second = x;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 24: {
var.second = y;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 25: {
x0 = x1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 26: {
x0 = y0;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 27: {
x1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 28: {
x1 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 29: {
y0 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 30: {
y0 = y1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 31: {
y1 = a;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 32: {
ystep = -1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 33: {
ystep = 1;
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 210
parent stmt: cef7c2a0
current stmt: cf1a5cf8
stmt: switch(__choose("__ID210")){
	case 0: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }

break;
}
}


current candidate: 211
parent stmt: cef7c2a0
current stmt: cf1a5f88
stmt: switch(__choose("__ID211")){
	case 0: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if (!__is_neg() && (steep)) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 212
parent stmt: cef7c2a0
current stmt: cf1b4670
stmt: switch(__choose("__ID212")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 213
parent stmt: cef7c2a0
current stmt: cf1b48b0
stmt: switch(__choose("__ID213")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 214
parent stmt: cef7c2a0
current stmt: cf1bf690
stmt: switch(__choose("__ID214")){
	case 0: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 215
parent stmt: cef7c2a0
current stmt: cf1bf938
stmt: switch(__choose("__ID215")){
	case 0: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    var.first = y;
    var.second = x;
    line.push_back(var);
} else {
    var.first = x;
    var.second = y;
    line.push_back(var);
}

break;
}
}


current candidate: 216
parent stmt: cef7c2a0
current stmt: cf1bfbb8
stmt: switch(__choose("__ID216")){
	case 0: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
	case 1: {
if (!__is_neg())
    error = error + deltaerr;

break;
}
}


current candidate: 217
parent stmt: cef7c2a0
current stmt: cf1c9d08
stmt: switch(__choose("__ID217")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 218
parent stmt: cef7c2a0
current stmt: cf1c9f48
stmt: switch(__choose("__ID218")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 219
parent stmt: cef7c2a0
current stmt: cf1ca1b8
stmt: switch(__choose("__ID219")){
	case 0: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }

break;
}
}


current candidate: 220
parent stmt: cef7c2a0
current stmt: cf1d00b0
stmt: switch(__choose("__ID220")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 221
parent stmt: cef7c2a0
current stmt: cf1db538
stmt: switch(__choose("__ID221")){
	case 0: {
if (__is_neg())
    break;

break;
}
	case 1: {
if (__is_neg())
    break;

break;
}
}


current candidate: 222
parent stmt: cef7c2a0
current stmt: cf1db7e8
stmt: switch(__choose("__ID222")){
	case 0: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) && !__is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 223
parent stmt: cef7c2a0
current stmt: cf1dba80
stmt: switch(__choose("__ID223")){
	case 0: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
	case 1: {
if ((error >= 0.5) || __is_neg()) {
    y += ystep;
    error = error - 1;
}

break;
}
}


current candidate: 224
parent stmt: cef7c300
current stmt: cef0d740
stmt: switch(__choose("__ID224")){
	case 0: {
short x0 = 0, y0 = 0;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return;
short x0 = 0, y0 = 0;

break;
}
	case 3: {
if (this->capacity() == this->size())
    return false;
short x0 = 0, y0 = 0;

break;
}
	case 4: {
this->clear();
short x0 = 0, y0 = 0;

break;
}
	case 5: {
throw;
short x0 = 0, y0 = 0;

break;
}
	case 6: {
x1 = y1;
short x0 = 0, y0 = 0;

break;
}
}


current candidate: 225
parent stmt: cef7c300
current stmt: cef0dcc8
stmt: switch(__choose("__ID225")){
	case 0: {
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 1: {

break;
}
	case 2: {
double steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 3: {
if (__is_neg())
    return;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 5: {
this->clear();
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 6: {
throw;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 7: {
x0 = x1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 8: {
x0 = y0;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 9: {
x1 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
	case 10: {
y0 = y1;
bool steep = abs((int)(y1 - y0)) > abs((int)(x1 - x0));

break;
}
}


current candidate: 226
parent stmt: cef7c300
current stmt: cef0dd60
stmt: switch(__choose("__ID226")){
	case 0: {
short a;

break;
}
	case 1: {

break;
}
	case 2: {
double a;

break;
}
	case 3: {
if (__is_neg())
    return;
short a;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
short a;

break;
}
	case 5: {
this->clear();
short a;

break;
}
	case 6: {
throw;
short a;

break;
}
	case 7: {
x0 = x1;
short a;

break;
}
	case 8: {
x0 = y0;
short a;

break;
}
	case 9: {
x1 = y1;
short a;

break;
}
	case 10: {
y0 = y1;
short a;

break;
}
}


current candidate: 227
parent stmt: cef7c300
current stmt: cef0e0f0
stmt: switch(__choose("__ID227")){
	case 0: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 228
parent stmt: cef7c300
current stmt: cef0e520
stmt: switch(__choose("__ID228")){
	case 0: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 3: {
a = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 4: {
a = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 5: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 6: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 7: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 8: {
if (__is_neg())
    return;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 12: {
this->clear();
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 13: {
throw;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 14: {
x0 = x1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 15: {
x0 = y0;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 16: {
x1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 17: {
x1 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 18: {
y0 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 19: {
y0 = y1;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 20: {
y1 = a;
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 229
parent stmt: cef7c300
current stmt: cef0e678
stmt: switch(__choose("__ID229")){
	case 0: {
int deltax = x1 - x0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltax = x1 - x0;

break;
}
	case 3: {
a = x1;
int deltax = x1 - x0;

break;
}
	case 4: {
a = y0;
int deltax = x1 - x0;

break;
}
	case 5: {
double deltax = x1 - x0;

break;
}
	case 6: {
if (__is_neg())
    return;
int deltax = x1 - x0;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltax = x1 - x0;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltax = x1 - x0;

break;
}
	case 10: {
this->clear();
int deltax = x1 - x0;

break;
}
	case 11: {
throw;
int deltax = x1 - x0;

break;
}
	case 12: {
x0 = x1;
int deltax = x1 - x0;

break;
}
	case 13: {
x0 = y0;
int deltax = x1 - x0;

break;
}
	case 14: {
x1 = a;
int deltax = x1 - x0;

break;
}
	case 15: {
x1 = y1;
int deltax = x1 - x0;

break;
}
	case 16: {
y0 = a;
int deltax = x1 - x0;

break;
}
	case 17: {
y0 = y1;
int deltax = x1 - x0;

break;
}
	case 18: {
y1 = a;
int deltax = x1 - x0;

break;
}
}


current candidate: 230
parent stmt: cef7c300
current stmt: cef0e938
stmt: switch(__choose("__ID230")){
	case 0: {
int deltay = abs((int)(y1 - y0));

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 3: {
a = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 4: {
a = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 5: {
double deltay = abs((int)(y1 - y0));

break;
}
	case 6: {
if (__is_neg())
    return;
int deltay = abs((int)(y1 - y0));

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
int deltay = abs((int)(y1 - y0));

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int deltay = abs((int)(y1 - y0));

break;
}
	case 10: {
this->clear();
int deltay = abs((int)(y1 - y0));

break;
}
	case 11: {
throw;
int deltay = abs((int)(y1 - y0));

break;
}
	case 12: {
x0 = x1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 13: {
x0 = y0;
int deltay = abs((int)(y1 - y0));

break;
}
	case 14: {
x1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 15: {
x1 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 16: {
y0 = a;
int deltay = abs((int)(y1 - y0));

break;
}
	case 17: {
y0 = y1;
int deltay = abs((int)(y1 - y0));

break;
}
	case 18: {
y1 = a;
int deltay = abs((int)(y1 - y0));

break;
}
}


current candidate: 231
parent stmt: cef7c300
current stmt: cef0ea08
stmt: switch(__choose("__ID231")){
	case 0: {
float error = 0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float error = 0;

break;
}
	case 3: {
a = x1;
float error = 0;

break;
}
	case 4: {
a = y0;
float error = 0;

break;
}
	case 5: {
if (__is_neg())
    return;
float error = 0;

break;
}
	case 6: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
float error = 0;

break;
}
	case 8: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float error = 0;

break;
}
	case 9: {
this->clear();
float error = 0;

break;
}
	case 10: {
throw;
float error = 0;

break;
}
	case 11: {
x0 = x1;
float error = 0;

break;
}
	case 12: {
x0 = y0;
float error = 0;

break;
}
	case 13: {
x1 = a;
float error = 0;

break;
}
	case 14: {
x1 = y1;
float error = 0;

break;
}
	case 15: {
y0 = a;
float error = 0;

break;
}
	case 16: {
y0 = y1;
float error = 0;

break;
}
	case 17: {
y1 = a;
float error = 0;

break;
}
}


current candidate: 232
parent stmt: cef7c300
current stmt: cef0eb48
stmt: switch(__choose("__ID232")){
	case 0: {
float deltaerr = deltay / deltax;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
float deltaerr = deltay / deltax;

break;
}
	case 3: {
a = x1;
float deltaerr = deltay / deltax;

break;
}
	case 4: {
a = y0;
float deltaerr = deltay / deltax;

break;
}
	case 5: {
error = error - 1;
float deltaerr = deltay / deltax;

break;
}
	case 6: {
if (__is_neg())
    return;
float deltaerr = deltay / deltax;

break;
}
	case 7: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 8: {
if (this->capacity() == this->size())
    return false;
float deltaerr = deltay / deltax;

break;
}
	case 9: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
float deltaerr = deltay / deltax;

break;
}
	case 10: {
this->clear();
float deltaerr = deltay / deltax;

break;
}
	case 11: {
throw;
float deltaerr = deltay / deltax;

break;
}
	case 12: {
x0 = x1;
float deltaerr = deltay / deltax;

break;
}
	case 13: {
x0 = y0;
float deltaerr = deltay / deltax;

break;
}
	case 14: {
x1 = a;
float deltaerr = deltay / deltax;

break;
}
	case 15: {
x1 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 16: {
y0 = a;
float deltaerr = deltay / deltax;

break;
}
	case 17: {
y0 = y1;
float deltaerr = deltay / deltax;

break;
}
	case 18: {
y1 = a;
float deltaerr = deltay / deltax;

break;
}
}


current candidate: 233
parent stmt: cef7c300
current stmt: cef0ebe0
stmt: switch(__choose("__ID233")){
	case 0: {
int ystep;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int ystep;

break;
}
	case 3: {
a = x1;
int ystep;

break;
}
	case 4: {
a = y0;
int ystep;

break;
}
	case 5: {
double ystep;

break;
}
	case 6: {
error = error + deltaerr;
int ystep;

break;
}
	case 7: {
error = error - 1;
int ystep;

break;
}
	case 8: {
if (__is_neg())
    return;
int ystep;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int ystep;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int ystep;

break;
}
	case 12: {
this->clear();
int ystep;

break;
}
	case 13: {
throw;
int ystep;

break;
}
	case 14: {
x0 = x1;
int ystep;

break;
}
	case 15: {
x0 = y0;
int ystep;

break;
}
	case 16: {
x1 = a;
int ystep;

break;
}
	case 17: {
x1 = y1;
int ystep;

break;
}
	case 18: {
y0 = a;
int ystep;

break;
}
	case 19: {
y0 = y1;
int ystep;

break;
}
	case 20: {
y1 = a;
int ystep;

break;
}
}


current candidate: 234
parent stmt: cef7c300
current stmt: cef0ed78
stmt: switch(__choose("__ID234")){
	case 0: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 3: {
a = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 4: {
a = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 5: {
error = error + deltaerr;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 6: {
error = error - 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 7: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 8: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 9: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 10: {
if (__is_neg())
    return;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 11: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 12: {
if (this->capacity() == this->size())
    return false;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 13: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 14: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 15: {
this->clear();
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 16: {
throw;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 17: {
x0 = x1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 18: {
x0 = y0;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 19: {
x1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 20: {
x1 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 21: {
y0 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 22: {
y0 = y1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 23: {
y1 = a;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 24: {
ystep = -1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
	case 25: {
ystep = 1;
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 235
parent stmt: cef7c300
current stmt: cef0ee70
stmt: switch(__choose("__ID235")){
	case 0: {
int y = y0;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
int y = y0;

break;
}
	case 3: {
a = x1;
int y = y0;

break;
}
	case 4: {
a = y0;
int y = y0;

break;
}
	case 5: {
double y = y0;

break;
}
	case 6: {
error = error + deltaerr;
int y = y0;

break;
}
	case 7: {
error = error - 1;
int y = y0;

break;
}
	case 8: {
if (__is_neg())
    return;
int y = y0;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
int y = y0;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
int y = y0;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
int y = y0;

break;
}
	case 13: {
this->clear();
int y = y0;

break;
}
	case 14: {
throw;
int y = y0;

break;
}
	case 15: {
x0 = x1;
int y = y0;

break;
}
	case 16: {
x0 = y0;
int y = y0;

break;
}
	case 17: {
x1 = a;
int y = y0;

break;
}
	case 18: {
x1 = y1;
int y = y0;

break;
}
	case 19: {
y0 = a;
int y = y0;

break;
}
	case 20: {
y0 = y1;
int y = y0;

break;
}
	case 21: {
y1 = a;
int y = y0;

break;
}
	case 22: {
ystep = -1;
int y = y0;

break;
}
	case 23: {
ystep = 1;
int y = y0;

break;
}
}


current candidate: 236
parent stmt: cef7c300
current stmt: cef53520
stmt: switch(__choose("__ID236")){
	case 0: {
std::pair<int, int> var;

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
std::pair<int, int> var;

break;
}
	case 3: {
a = x1;
std::pair<int, int> var;

break;
}
	case 4: {
a = y0;
std::pair<int, int> var;

break;
}
	case 5: {
error = error + deltaerr;
std::pair<int, int> var;

break;
}
	case 6: {
error = error - 1;
std::pair<int, int> var;

break;
}
	case 7: {
if (__is_neg())
    return;
std::pair<int, int> var;

break;
}
	case 8: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
std::pair<int, int> var;

break;
}
	case 9: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 10: {
if (this->capacity() == this->size())
    return false;
std::pair<int, int> var;

break;
}
	case 11: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
std::pair<int, int> var;

break;
}
	case 12: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
std::pair<int, int> var;

break;
}
	case 13: {
this->clear();
std::pair<int, int> var;

break;
}
	case 14: {
throw;
std::pair<int, int> var;

break;
}
	case 15: {
x0 = x1;
std::pair<int, int> var;

break;
}
	case 16: {
x0 = y0;
std::pair<int, int> var;

break;
}
	case 17: {
x1 = a;
std::pair<int, int> var;

break;
}
	case 18: {
x1 = y1;
std::pair<int, int> var;

break;
}
	case 19: {
y0 = a;
std::pair<int, int> var;

break;
}
	case 20: {
y0 = y1;
std::pair<int, int> var;

break;
}
	case 21: {
y1 = a;
std::pair<int, int> var;

break;
}
	case 22: {
ystep = -1;
std::pair<int, int> var;

break;
}
	case 23: {
ystep = 1;
std::pair<int, int> var;

break;
}
}


current candidate: 237
parent stmt: cef7c300
current stmt: cef7c2c8
stmt: switch(__choose("__ID237")){
	case 0: {
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 1: {

break;
}
	case 2: {
a = x0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 3: {
a = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 4: {
a = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 5: {
error = error + deltaerr;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 6: {
error = error - 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 7: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 8: {
if (__is_neg())
    return;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 9: {
if (error >= 0.5) {
    y += ystep;
    error = error - 1;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 10: {
if (steep) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 11: {
if (this->capacity() == this->size())
    return false;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 12: {
if (x0 > x1) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 13: {
if (y0 < y1)
    ystep = 1;
else
    ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 14: {
line.push_back(var);
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 15: {
this->clear();
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 16: {
throw;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 17: {
var.first = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 18: {
var.second = y;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 19: {
x0 = x1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 20: {
x0 = y0;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 21: {
x1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 22: {
x1 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 23: {
y0 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 24: {
y0 = y1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 25: {
y1 = a;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 26: {
ystep = -1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
	case 27: {
ystep = 1;
for (int x = x0; x < x1; x++) {
    if (steep) {
        var.first = y;
        var.second = x;
        line.push_back(var);
    } else {
        var.first = x;
        var.second = y;
        line.push_back(var);
    }
    error = error + deltaerr;
    if (error >= 0.5) {
        y += ystep;
        error = error - 1;
    }
}

break;
}
}


current candidate: 238
parent stmt: cef7c300
current stmt: cf004c70
stmt: switch(__choose("__ID238")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 239
parent stmt: cef7c300
current stmt: cf0eee38
stmt: switch(__choose("__ID239")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 240
parent stmt: cef7c300
current stmt: cf0fc8a8
stmt: switch(__choose("__ID240")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 241
parent stmt: cef7c300
current stmt: cf0fc9f8
stmt: switch(__choose("__ID241")){
	case 0: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (steep) {
        a = x0;
        x0 = y0;
        y0 = a;
        a = x1;
        x1 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 242
parent stmt: cef7c300
current stmt: cf1027f0
stmt: switch(__choose("__ID242")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 243
parent stmt: cef7c300
current stmt: cf113038
stmt: switch(__choose("__ID243")){
	case 0: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) && !__is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 244
parent stmt: cef7c300
current stmt: cf1131d0
stmt: switch(__choose("__ID244")){
	case 0: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((steep) || __is_neg()) {
    a = x0;
    x0 = y0;
    y0 = a;
    a = x1;
    x1 = y1;
    y1 = a;
}

break;
}
}


current candidate: 245
parent stmt: cef7c300
current stmt: cf113340
stmt: switch(__choose("__ID245")){
	case 0: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
	case 1: {
if (!__is_neg())
    if (x0 > x1) {
        a = x0;
        x0 = x1;
        x1 = a;
        a = y0;
        y0 = y1;
        y1 = a;
    }

break;
}
}


current candidate: 246
parent stmt: cef7c300
current stmt: cf119138
stmt: switch(__choose("__ID246")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 247
parent stmt: cef7c300
current stmt: cf1192e8
stmt: switch(__choose("__ID247")){
	case 0: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) && !__is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 248
parent stmt: cef7c300
current stmt: cf119480
stmt: switch(__choose("__ID248")){
	case 0: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
	case 1: {
if ((x0 > x1) || __is_neg()) {
    a = x0;
    x0 = x1;
    x1 = a;
    a = y0;
    y0 = y1;
    y1 = a;
}

break;
}
}


current candidate: 249
parent stmt: cef7c300
current stmt: cf1238d8
stmt: switch(__choose("__ID249")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 250
parent stmt: cef7c300
current stmt: cf123ac8
stmt: switch(__choose("__ID250")){
	case 0: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
	case 1: {
if (!__is_neg())
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;

break;
}
}


current candidate: 251
parent stmt: cef7c300
current stmt: cf1319d0
stmt: switch(__choose("__ID251")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 252
parent stmt: cef7c300
current stmt: cf137878
stmt: switch(__choose("__ID252")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 253
parent stmt: cef7c300
current stmt: cf147720
stmt: switch(__choose("__ID253")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 254
parent stmt: cef7c300
current stmt: cf14d558
stmt: switch(__choose("__ID254")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 255
parent stmt: cef7c300
current stmt: cf174930
stmt: switch(__choose("__ID255")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 256
parent stmt: cef7c300
current stmt: cf188ba8
stmt: switch(__choose("__ID256")){
	case 0: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) && !__is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 257
parent stmt: cef7c300
current stmt: cf188df0
stmt: switch(__choose("__ID257")){
	case 0: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
	case 1: {
if ((y0 < y1) || __is_neg())
    ystep = 1;
else
    ystep = -1;

break;
}
}


current candidate: 258
parent stmt: cef7c300
current stmt: cf18ed30
stmt: switch(__choose("__ID258")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 259
parent stmt: cef7c300
current stmt: cf199638
stmt: switch(__choose("__ID259")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 260
parent stmt: cef7c300
current stmt: cf199868
stmt: switch(__choose("__ID260")){
	case 0: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
	case 1: {
if (!__is_neg())
    for (int x = x0; x < x1; x++) {
        if (steep) {
            var.first = y;
            var.second = x;
            line.push_back(var);
        } else {
            var.first = x;
            var.second = y;
            line.push_back(var);
        }
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error = error - 1;
        }
    }

break;
}
}


current candidate: 261
parent stmt: cef7c300
current stmt: cf1a5aa8
stmt: switch(__choose("__ID261")){
	case 0: {
if (__is_neg())
    return;

break;
}
	case 1: {
if (__is_neg())
    return;

break;
}
}


current candidate: 262
parent stmt: cef86fa0
current stmt: cef80ac0
stmt: switch(__choose("__ID262")){
	case 0: {
FILE *f = fopen(argv[1], "r");

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
FILE *f = fopen(argv[1], "r");

break;
}
	case 3: {
if (__is_neg())
    return 1;
FILE *f = fopen(argv[1], "r");

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
FILE *f = fopen(argv[1], "r");

break;
}
	case 5: {
this->clear();
FILE *f = fopen(argv[1], "r");

break;
}
	case 6: {
throw;
FILE *f = fopen(argv[1], "r");

break;
}
}


current candidate: 263
parent stmt: cef86fa0
current stmt: cef80bf0
stmt: switch(__choose("__ID263")){
	case 0: {
int x, y;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
int x, y;

break;
}
	case 3: {
if (__is_neg())
    return 1;
int x, y;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
int x, y;

break;
}
	case 5: {
this->clear();
int x, y;

break;
}
	case 6: {
throw;
int x, y;

break;
}
}


current candidate: 264
parent stmt: cef86fa0
current stmt: cef80e18
stmt: switch(__choose("__ID264")){
	case 0: {
fscanf(f, "%d %d\n", &x, &y)
break;
}
	case 1: {

break;
}
	case 2: {
fscanf((f), "%d %d\n", &x, &y);

break;
}
	case 3: {
fscanf(f, __is_neg(), &x, &y);

break;
}
	case 4: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 5: {
if (__is_neg())
    return 0;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 6: {
if (__is_neg())
    return 1;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 7: {
if (this->capacity() == this->size())
    return false;
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 8: {
this->clear();
fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 9: {
throw;
fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 265
parent stmt: cef86fa0
current stmt: cef80f88
stmt: switch(__choose("__ID265")){
	case 0: {
fclose(f)
break;
}
	case 1: {

break;
}
	case 2: {
fclose((f));

break;
}
	case 3: {
if (!__is_neg())
    fclose(f);

break;
}
	case 4: {
if (__is_neg())
    return 0;
fclose(f);

break;
}
	case 5: {
if (__is_neg())
    return 1;
fclose(f);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
fclose(f);

break;
}
	case 7: {
this->clear();
fclose(f);

break;
}
	case 8: {
throw;
fclose(f);

break;
}
}


current candidate: 266
parent stmt: cef86fa0
current stmt: cef865f0
stmt: switch(__choose("__ID266")){
	case 0: {
DiscreteLine line;

break;
}
	case 1: {

break;
}
	case 2: {
if (__is_neg())
    return 0;
DiscreteLine line;

break;
}
	case 3: {
if (__is_neg())
    return 1;
DiscreteLine line;

break;
}
	case 4: {
if (this->capacity() == this->size())
    return false;
DiscreteLine line;

break;
}
	case 5: {
this->clear();
DiscreteLine line;

break;
}
	case 6: {
throw;
DiscreteLine line;

break;
}
}


current candidate: 267
parent stmt: cef86fa0
current stmt: cef86748
stmt: switch(__choose("__ID267")){
	case 0: {
buggy(x, y, line)
break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
buggy(x, y, line);

break;
}
	case 3: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 4: {
if (__is_neg())
    return 0;
buggy(x, y, line);

break;
}
	case 5: {
if (__is_neg())
    return 1;
buggy(x, y, line);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
buggy(x, y, line);

break;
}
	case 7: {
this->clear();
buggy(x, y, line);

break;
}
	case 8: {
throw;
buggy(x, y, line);

break;
}
}


current candidate: 268
parent stmt: cef86fa0
current stmt: cef86f68
stmt: switch(__choose("__ID268")){
	case 0: {
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {

break;
}
	case 2: {
buggy(x, y, line);
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 3: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 4: {
if (__is_neg())
    return 0;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 5: {
if (__is_neg())
    return 1;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 6: {
if (this->capacity() == this->size())
    return false;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 7: {
this->clear();
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 8: {
throw;
for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
    printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 269
parent stmt: cef86fa0
current stmt: cf1e19e8
stmt: switch(__choose("__ID269")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 270
parent stmt: cef86fa0
current stmt: cf1e1ab0
stmt: switch(__choose("__ID270")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 271
parent stmt: cef86fa0
current stmt: cf1ee818
stmt: switch(__choose("__ID271")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 272
parent stmt: cef86fa0
current stmt: cf1ee900
stmt: switch(__choose("__ID272")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 273
parent stmt: cef86fa0
current stmt: cf1eeaa8
stmt: switch(__choose("__ID273")){
	case 0: {
fscanf(f, __is_neg(), &x, &y)
break;
}
	case 1: {
fscanf(f, __is_neg(), &x, &y);

break;
}
}


current candidate: 274
parent stmt: cef86fa0
current stmt: cf1eeb20
stmt: switch(__choose("__ID274")){
	case 0: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
	case 1: {
if (!__is_neg())
    fscanf(f, "%d %d\n", &x, &y);

break;
}
}


current candidate: 275
parent stmt: cef86fa0
current stmt: cf1f67b8
stmt: switch(__choose("__ID275")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 276
parent stmt: cef86fa0
current stmt: cf1f68e0
stmt: switch(__choose("__ID276")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 277
parent stmt: cef86fa0
current stmt: cf1f6ac8
stmt: switch(__choose("__ID277")){
	case 0: {
if (!__is_neg())
    fclose(f);

break;
}
	case 1: {
if (!__is_neg())
    fclose(f);

break;
}
}


current candidate: 278
parent stmt: cef86fa0
current stmt: cf2016e0
stmt: switch(__choose("__ID278")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 279
parent stmt: cef86fa0
current stmt: cf201808
stmt: switch(__choose("__ID279")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 280
parent stmt: cef86fa0
current stmt: cf207798
stmt: switch(__choose("__ID280")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 281
parent stmt: cef86fa0
current stmt: cf2078c0
stmt: switch(__choose("__ID281")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 282
parent stmt: cef86fa0
current stmt: cf207a10
stmt: switch(__choose("__ID282")){
	case 0: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
	case 1: {
if (!__is_neg())
    buggy(x, y, line);

break;
}
}


current candidate: 283
parent stmt: cef86fa0
current stmt: cf216070
stmt: switch(__choose("__ID283")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 284
parent stmt: cef86fa0
current stmt: cf2161b8
stmt: switch(__choose("__ID284")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}


current candidate: 285
parent stmt: cef86fa0
current stmt: cf216328
stmt: switch(__choose("__ID285")){
	case 0: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
	case 1: {
if (!__is_neg())
    for (unsigned int i = 0, end = line.size(); i != line.size(); i++)
        printf("%d %d\n", line[i].first, line[i].second);

break;
}
}


current candidate: 286
parent stmt: cef86fa0
current stmt: cf21e820
stmt: switch(__choose("__ID286")){
	case 0: {
if (__is_neg())
    return 0;

break;
}
	case 1: {
if (__is_neg())
    return 0;

break;
}
}


current candidate: 287
parent stmt: cef86fa0
current stmt: cf21e968
stmt: switch(__choose("__ID287")){
	case 0: {
if (__is_neg())
    return 1;

break;
}
	case 1: {
if (__is_neg())
    return 1;

break;
}
}

Generating patches...
[11] BasicTester, a patch instance with id 0:
Spawn 1 instances, now Total 3
Single building for Tester 0x55a0cf1fc470 id 1 failed as well!
Generating Result...The total number of synthesis runs: 0
The total number of concrete conds: 0
The total number of explored concrete patches: 7266
result size: 0
Repair process ends without working fix!!
Total 1864 different repair schemas!!!!
Total 2422 different repair candidate templates for scoring!!!
Total number of compiles: 3
Total number of test eval: 0
