../../../../wrap/gcc -c prog.c  -o prog.o
wrap/tclang
prog.c:437:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:437:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:479:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-8", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:488:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-9", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:497:51: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-10", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                  ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:506:51: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-11", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                  ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:521:51: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("1-1", "L8", 3, &(argv), sizeof (argv), &(fin), sizeof (fin), &(argc), sizeof (argc)))
                                                  ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:563:9: warning: incompatible integer to pointer conversion assigning to 'FILE *' (aka 'struct _IO_FILE *') from 'long' [-Wint-conversion]
    fin -= fopen(argv[1], "r");
        ^  ~~~~~~~~~~~~~~~~~~~
prog.c:603:17: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
    fin = fopen((&argc)[1], "r");
                ^~~~~~~~~~
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:611:17: warning: incompatible pointer types passing 'char **' to parameter of type 'const char *'; dereference with * [-Wincompatible-pointer-types]
    fin = fopen((&argv)[1], "r");
                ^~~~~~~~~~
                *
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:627:17: warning: incompatible pointer types passing 'FILE *' (aka 'struct _IO_FILE *') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen((&fin)[1], "r");
                ^~~~~~~~~
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:715:23: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    fin = fopen(argv[(filename != 0)], "r");
                      ^~~~~~~~    ~
prog.c:723:23: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    fin = fopen(argv[(filename == 0)], "r");
                      ^~~~~~~~    ~
prog.c:747:26: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&argc));
                         ^~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:755:26: warning: incompatible pointer types passing 'char ***' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&argv));
                         ^~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:763:26: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&filename));
                         ^~~~~~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:771:26: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&fin));
                         ^~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:805:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:805:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:861:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:897:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:906:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:915:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:924:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:937:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp3= (i <= 60) && !__is_neg("3-1", "L11", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc));;
                                                                                                             ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:944:109: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp3= (i <= 60) || __is_neg("3-2", "L11", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc));;
                                                                                                            ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1004:18: warning: incompatible integer to pointer conversion passing 'int' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    c = _IO_getc(fin && !(1 << 5));
                 ^~~~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1004:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    c = _IO_getc(fin && !(1 << 5));
                            ^
prog.c:1018:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:1018:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:1060:28: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    filename[i] = c && !(1 << 5);
                           ^
prog.c:1088:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:1138:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1148:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1158:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1168:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1178:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1193:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("5-1", "L13", 5, &(fin), sizeof (fin), &(c), sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                             ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1523:18: warning: incompatible pointer types passing 'int *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&argc));
                 ^~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1531:18: warning: incompatible pointer types passing 'char ***' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&argv));
                 ^~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1539:18: warning: incompatible pointer types passing 'char *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&c));
                 ^~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1547:18: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&filename));
                 ^~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1555:18: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *'); dereference with * [-Wincompatible-pointer-types]
    c = _IO_getc((&fin));
                 ^~~~~~
                 *
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1563:18: warning: incompatible pointer types passing 'int *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&i));
                 ^~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1579:18: warning: incompatible integer to pointer conversion passing 'int' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    c = _IO_getc(fin && !(1 << 5));
                 ^~~~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1579:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    c = _IO_getc(fin && !(1 << 5));
                            ^
prog.c:1634:18: warning: incompatible integer to pointer conversion passing 'int' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    c = _IO_getc(fin && !(1 << 5));
                 ^~~~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1634:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    c = _IO_getc(fin && !(1 << 5));
                            ^
prog.c:1648:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:1648:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:1690:28: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    filename[i] = c && !(1 << 5);
                           ^
prog.c:1718:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:1768:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1778:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1788:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1798:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1808:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1822:130: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp7= ((c == (-1)) || __is_neg("7-1", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1829:115: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp7= (__is_neg("7-2", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                  ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1836:131: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp7= ((c == (-1)) && !__is_neg("7-3", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                                  ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1852:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("8-1", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                             ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1912:18: warning: incompatible integer to pointer conversion passing 'int' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    c = _IO_getc(fin && !(1 << 5));
                 ^~~~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1912:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    c = _IO_getc(fin && !(1 << 5));
                            ^
prog.c:1926:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:1926:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:1968:28: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    filename[i] = c && !(1 << 5);
                           ^
prog.c:1996:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:2046:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2056:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2066:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2076:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2086:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2101:111: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("10-1", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                              ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2112:114: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("10-2", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2124:114: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("10-3", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2136:114: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("10-4", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2148:114: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("10-5", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2160:114: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("10-6", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                                 ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2451:20: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    filename[i] = (filename != 0);
                   ^~~~~~~~    ~
prog.c:2459:20: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    filename[i] = (filename == 0);
                   ^~~~~~~~    ~
prog.c:2563:28: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    filename[i] = c && !(1 << 5);
                           ^
prog.c:2575:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("11-1", "L11", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2606:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2606:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:2662:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:2698:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2707:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2716:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2725:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2739:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("13-1", "L20", 4, &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3093:12: warning: incompatible pointer types passing 'int *' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&argc));
           ^~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3101:12: warning: incompatible pointer types passing 'char ***' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&argv));
           ^~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3109:12: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&filename));
           ^~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3117:12: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'FILE *' (aka 'struct _IO_FILE *'); dereference with * [-Wincompatible-pointer-types]
    fclose((&fin));
           ^~~~~~
           *
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3125:12: warning: incompatible pointer types passing 'int *' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&i));
           ^~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3141:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3141:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:3162:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3162:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:3218:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:3254:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3263:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3272:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3281:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3295:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("15-1", "L21", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3304:14: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    _IO_padn("%d\n", i, -1);
             ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:466:40: note: passing argument to parameter here
extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);
                                       ^
prog.c:3312:14: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    _IO_padn("%d\n", i, 0);
             ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:466:40: note: passing argument to parameter here
extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);
                                       ^
prog.c:3320:14: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    _IO_padn("%d\n", i, 1);
             ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:466:40: note: passing argument to parameter here
extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);
                                       ^
prog.c:3328:14: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    _IO_padn("%d\n", i, 60);
             ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:466:40: note: passing argument to parameter here
extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);
                                       ^
prog.c:3352:23: warning: 'size' argument to memset is '0'; did you mean to transpose the last two arguments? [-Wmemset-transposed-args]
    memset("%d\n", i, 0);
                      ^
prog.c:3352:23: note: parenthesize the third argument to silence
prog.c:3385:16: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    __overflow("%d\n", i);
               ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:391:34: note: passing argument to parameter here
extern int __overflow (_IO_FILE *, int);
                                 ^
prog.c:3521:21: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    printf("%d\n", (filename != 0));
                    ^~~~~~~~    ~
prog.c:3529:21: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    printf("%d\n", (filename == 0));
                    ^~~~~~~~    ~
prog.c:3601:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:3609:12: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&argc), i);
           ^~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:3617:12: warning: incompatible pointer types passing 'char ***' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&argv), i);
           ^~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:3625:12: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&filename), i);
           ^~~~~~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:3633:12: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&fin), i);
           ^~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:3641:12: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&i), i);
           ^~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:3670:12: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wint-conversion]
    fclose(fin && !(1 << 5));
           ^~~~~~~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:3670:23: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    fclose(fin && !(1 << 5));
                      ^
prog.c:3726:29: warning: converting the result of '<<' to a boolean always evaluates to true [-Wtautological-constant-compare]
    printf("%d\n", i && !(1 << 5));
                            ^
prog.c:3762:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3771:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3780:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3789:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3803:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("17-1", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3814:96: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("17-2", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                               ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3826:96: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("17-3", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                               ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3838:96: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("17-4", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                               ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3850:96: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
        if (__is_neg("17-5", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                               ^
prog.c:412:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
131 warnings generated.
../../../../wrap/gcc prog.o  -o prog
wrap/tclang
