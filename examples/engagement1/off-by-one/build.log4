../../../../wrap/gcc -c prog.c  -o prog.o
wrap/tclang
prog.c:387:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-6", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:396:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-7", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:405:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-8", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:414:50: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (__is_neg("0-9", "L8", 3, &(argv), sizeof (argv), &(fin),
                                                 ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:429:51: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("1-1", "L8", 3, &(argv), sizeof (argv), &(fin), sizeof (fin), &(argc), sizeof (argc)))
                                                  ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:462:17: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
    fin = fopen((&argc)[1], "r");
                ^~~~~~~~~~
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:470:17: warning: incompatible pointer types passing 'char **' to parameter of type 'const char *'; dereference with * [-Wincompatible-pointer-types]
    fin = fopen((&argv)[1], "r");
                ^~~~~~~~~~
                *
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:486:17: warning: incompatible pointer types passing 'FILE *' (aka 'struct _IO_FILE *') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen((&fin)[1], "r");
                ^~~~~~~~~
/usr/include/stdio.h:232:44: note: passing argument to parameter '__filename' here
extern FILE *fopen (const char *__restrict __filename,
                                           ^
prog.c:566:23: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    fin = fopen(argv[(filename != 0)], "r");
                      ^~~~~~~~    ~
prog.c:574:23: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    fin = fopen(argv[(filename == 0)], "r");
                      ^~~~~~~~    ~
prog.c:598:26: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&argc));
                         ^~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:606:26: warning: incompatible pointer types passing 'char ***' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&argv));
                         ^~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:614:26: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&filename));
                         ^~~~~~~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:622:26: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    fin = fopen(argv[1], (&fin));
                         ^~~~~~
/usr/include/stdio.h:233:30: note: passing argument to parameter '__modes' here
                    const char *__restrict __modes) __wur;
                                           ^
prog.c:727:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:736:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:745:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:754:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:914:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:924:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:934:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:944:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:954:55: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:969:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("4-1", "L13", 5, &(fin), sizeof (fin), &(c), sizeof (c), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                             ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1194:18: warning: incompatible pointer types passing 'int *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&argc));
                 ^~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1202:18: warning: incompatible pointer types passing 'char ***' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&argv));
                 ^~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1210:18: warning: incompatible pointer types passing 'char *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&c));
                 ^~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1218:18: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&filename));
                 ^~~~~~~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1226:18: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *'); dereference with * [-Wincompatible-pointer-types]
    c = _IO_getc((&fin));
                 ^~~~~~
                 *
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1234:18: warning: incompatible pointer types passing 'int *' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    c = _IO_getc((&i));
                 ^~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:433:32: note: passing argument to parameter '__fp' here
extern int _IO_getc (_IO_FILE *__fp);
                               ^
prog.c:1396:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1406:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1416:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1426:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1436:57: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc),
                                                                         ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1450:130: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp6= ((c == (-1)) || __is_neg("6-1", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                                 ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1457:115: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp6= (__is_neg("6-2", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                  ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1464:131: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    __temp6= ((c == (-1)) && !__is_neg("6-3", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)));
                                                                                                                                  ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1480:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("7-1", "L14", 5, &(c), sizeof (c), &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                             ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1639:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1649:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1659:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1669:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1679:59: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc),
                                                                           ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1694:110: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("9-1", "L18", 5, &(i), sizeof (i), &(c), sizeof (c), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                                             ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:1943:20: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    filename[i] = (filename != 0);
                   ^~~~~~~~    ~
prog.c:1951:20: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    filename[i] = (filename == 0);
                   ^~~~~~~~    ~
prog.c:2059:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("10-1", "L11", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2160:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2169:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2178:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2187:37: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                     ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2201:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("12-1", "L20", 4, &(fin), sizeof (fin), &(i), sizeof (i), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2474:12: warning: incompatible pointer types passing 'int *' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&argc));
           ^~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2482:12: warning: incompatible pointer types passing 'char ***' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&argv));
           ^~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2490:12: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&filename));
           ^~~~~~~~~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2498:12: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'FILE *' (aka 'struct _IO_FILE *'); dereference with * [-Wincompatible-pointer-types]
    fclose((&fin));
           ^~~~~~
           *
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2506:12: warning: incompatible pointer types passing 'int *' to parameter of type 'FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    fclose((&i));
           ^~~~
/usr/include/stdio.h:199:26: note: passing argument to parameter '__stream' here
extern int fclose (FILE *__stream);
                         ^
prog.c:2606:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2615:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2624:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2633:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2647:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("14-1", "L21", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:2656:16: warning: incompatible pointer types passing 'char [4]' to parameter of type '_IO_FILE *' (aka 'struct _IO_FILE *') [-Wincompatible-pointer-types]
    __overflow("%d\n", i);
               ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:391:34: note: passing argument to parameter here
extern int __overflow (_IO_FILE *, int);
                                 ^
prog.c:2784:21: warning: comparison of array 'filename' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    printf("%d\n", (filename != 0));
                    ^~~~~~~~    ~
prog.c:2792:21: warning: comparison of array 'filename' equal to a null pointer is always false [-Wtautological-pointer-compare]
    printf("%d\n", (filename == 0));
                    ^~~~~~~~    ~
prog.c:2864:12: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&argc), i);
           ^~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:2872:12: warning: incompatible pointer types passing 'char ***' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&argv), i);
           ^~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:2880:12: warning: incompatible pointer types passing 'char (*)[60]' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&filename), i);
           ^~~~~~~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:2888:12: warning: incompatible pointer types passing 'FILE **' (aka 'struct _IO_FILE **') to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&fin), i);
           ^~~~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:2896:12: warning: incompatible pointer types passing 'int *' to parameter of type 'const char *' [-Wincompatible-pointer-types]
    printf((&i), i);
           ^~~~
/usr/include/stdio.h:318:43: note: passing argument to parameter '__format' here
extern int printf (const char *__restrict __format, ...);
                                          ^
prog.c:2996:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3005:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3014:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3023:39: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
                         sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                       ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
prog.c:3037:93: warning: sizeof on array function parameter will return size of 'char **' instead of 'char *[]' [-Wsizeof-array-argument]
    if (!__is_neg("16-1", "L22", 4, &(i), sizeof (i), &(fin), sizeof (fin), &(argv), sizeof (argv), &(argc), sizeof (argc)))
                                                                                            ^
prog.c:334:26: note: declared here
int main(int argc, char* argv[]) {
                         ^
76 warnings generated.
../../../../wrap/gcc prog.o  -o prog
wrap/tclang
