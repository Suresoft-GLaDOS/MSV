{
	"switch_num":	66,
	"case_num":	[167, 6, 2, 167, 273, 2, 167, 58, 167, 3, 1, 167, 3, 2, 139, 6, 2, 139, 58, 139, 3, 1, 139, 3, 2, 203, 6, 2, 205, 21, 204, 29, 204, 3, 234, 3, 2, 232, 3, 232, 3, 2, 233, 252, 232, 4, 232, 3, 232, 1, 2, 232, 68, 203, 236, 203, 3, 203, 1, 2, 203, 3, 203, 170, 2, 2],
	"switch_cluster":	[[2, 5, 7, 10, 13, 16, 18, 21, 24, 27, 29, 31, 36, 38, 41, 43, 45, 49, 50, 52, 54, 58, 59, 63, 64, 65], [1, 4, 9, 12, 15, 20, 23, 26, 33, 35, 40, 47, 56, 61], [0, 3, 6, 8, 11, 14, 17, 19, 22, 25, 28, 30, 32, 34, 37, 39, 42, 44, 46, 48, 51, 53, 55, 57, 60, 62], []],
	"priority":	[{
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	428,
			"primary_score":	999861,
			"second_score":	3110
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	429,
			"primary_score":	999861,
			"second_score":	3108
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	479,
			"primary_score":	999861,
			"second_score":	3111
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	485,
			"primary_score":	999861,
			"second_score":	2
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	590,
			"primary_score":	999861,
			"second_score":	3107
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	592,
			"primary_score":	999861,
			"second_score":	3106
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	593,
			"primary_score":	999861,
			"second_score":	6
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	594,
			"primary_score":	999861,
			"second_score":	5
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	595,
			"primary_score":	999861,
			"second_score":	739
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	596,
			"primary_score":	999861,
			"second_score":	738
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	597,
			"primary_score":	999861,
			"second_score":	737
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	599,
			"primary_score":	999861,
			"second_score":	4
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	601,
			"primary_score":	999861,
			"second_score":	3
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	692,
			"primary_score":	999861,
			"second_score":	123696
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	123695
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	699,
			"primary_score":	999861,
			"second_score":	123694
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	812,
			"primary_score":	999861,
			"second_score":	123693
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	816,
			"primary_score":	999861,
			"second_score":	123692
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	819,
			"primary_score":	999861,
			"second_score":	123691
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	820,
			"primary_score":	999861,
			"second_score":	123690
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1021,
			"primary_score":	999861,
			"second_score":	123957
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1023,
			"primary_score":	999887,
			"second_score":	124312
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1026,
			"primary_score":	999861,
			"second_score":	123956
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1260,
			"primary_score":	999887,
			"second_score":	124310
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1261,
			"primary_score":	999887,
			"second_score":	124309
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1897,
			"primary_score":	999861,
			"second_score":	121847
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1898,
			"primary_score":	999861,
			"second_score":	121846
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1901,
			"primary_score":	999861,
			"second_score":	121845
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1902,
			"primary_score":	999861,
			"second_score":	121844
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1903,
			"primary_score":	999861,
			"second_score":	121843
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1904,
			"primary_score":	999861,
			"second_score":	121842
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1920,
			"primary_score":	999887,
			"second_score":	124308
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1921,
			"primary_score":	999887,
			"second_score":	124307
		}, {
			"file":	"Zend/zend.c",
			"line":	227,
			"primary_score":	999861,
			"second_score":	120918
		}, {
			"file":	"Zend/zend.c",
			"line":	228,
			"primary_score":	999861,
			"second_score":	120917
		}, {
			"file":	"Zend/zend.c",
			"line":	229,
			"primary_score":	999861,
			"second_score":	120916
		}, {
			"file":	"Zend/zend.c",
			"line":	305,
			"primary_score":	999861,
			"second_score":	120922
		}, {
			"file":	"Zend/zend.c",
			"line":	311,
			"primary_score":	999861,
			"second_score":	120921
		}, {
			"file":	"Zend/zend.c",
			"line":	312,
			"primary_score":	999861,
			"second_score":	120920
		}, {
			"file":	"Zend/zend.c",
			"line":	314,
			"primary_score":	999861,
			"second_score":	120919
		}, {
			"file":	"Zend/zend.c",
			"line":	315,
			"primary_score":	999861,
			"second_score":	120915
		}, {
			"file":	"Zend/zend.c",
			"line":	318,
			"primary_score":	999861,
			"second_score":	120914
		}, {
			"file":	"Zend/zend.c",
			"line":	319,
			"primary_score":	999861,
			"second_score":	120991
		}, {
			"file":	"Zend/zend.c",
			"line":	322,
			"primary_score":	999861,
			"second_score":	120990
		}, {
			"file":	"Zend/zend.c",
			"line":	324,
			"primary_score":	999861,
			"second_score":	121228
		}, {
			"file":	"Zend/zend.c",
			"line":	325,
			"primary_score":	999861,
			"second_score":	121180
		}, {
			"file":	"Zend/zend.c",
			"line":	328,
			"primary_score":	999861,
			"second_score":	121179
		}, {
			"file":	"Zend/zend.c",
			"line":	797,
			"primary_score":	999861,
			"second_score":	103391
		}, {
			"file":	"Zend/zend.c",
			"line":	798,
			"primary_score":	999861,
			"second_score":	103383
		}, {
			"file":	"Zend/zend.c",
			"line":	800,
			"primary_score":	999861,
			"second_score":	47188
		}, {
			"file":	"Zend/zend.c",
			"line":	801,
			"primary_score":	999861,
			"second_score":	47169
		}, {
			"file":	"Zend/zend.c",
			"line":	803,
			"primary_score":	999861,
			"second_score":	14813
		}, {
			"file":	"Zend/zend.c",
			"line":	804,
			"primary_score":	999861,
			"second_score":	14750
		}, {
			"file":	"Zend/zend.c",
			"line":	806,
			"primary_score":	999861,
			"second_score":	14749
		}, {
			"file":	"Zend/zend.c",
			"line":	807,
			"primary_score":	999861,
			"second_score":	14741
		}, {
			"file":	"Zend/zend.c",
			"line":	809,
			"primary_score":	999861,
			"second_score":	14740
		}, {
			"file":	"Zend/zend.c",
			"line":	810,
			"primary_score":	999861,
			"second_score":	14739
		}, {
			"file":	"Zend/zend.c",
			"line":	812,
			"primary_score":	999861,
			"second_score":	14738
		}, {
			"file":	"Zend/zend.c",
			"line":	813,
			"primary_score":	999861,
			"second_score":	6281
		}, {
			"file":	"Zend/zend.c",
			"line":	814,
			"primary_score":	999861,
			"second_score":	6280
		}, {
			"file":	"Zend/zend.c",
			"line":	822,
			"primary_score":	999861,
			"second_score":	6224
		}, {
			"file":	"Zend/zend.c",
			"line":	824,
			"primary_score":	999861,
			"second_score":	6124
		}, {
			"file":	"Zend/zend.c",
			"line":	845,
			"primary_score":	999889,
			"second_score":	119103
		}, {
			"file":	"Zend/zend.c",
			"line":	847,
			"primary_score":	999889,
			"second_score":	119102
		}, {
			"file":	"Zend/zend.c",
			"line":	851,
			"primary_score":	999889,
			"second_score":	119101
		}, {
			"file":	"Zend/zend.c",
			"line":	852,
			"primary_score":	999889,
			"second_score":	119100
		}, {
			"file":	"Zend/zend.c",
			"line":	853,
			"primary_score":	999889,
			"second_score":	119099
		}, {
			"file":	"Zend/zend.c",
			"line":	854,
			"primary_score":	999889,
			"second_score":	119098
		}, {
			"file":	"Zend/zend.c",
			"line":	898,
			"primary_score":	999861,
			"second_score":	120242
		}, {
			"file":	"Zend/zend.c",
			"line":	899,
			"primary_score":	999861,
			"second_score":	120236
		}, {
			"file":	"Zend/zend.c",
			"line":	900,
			"primary_score":	999861,
			"second_score":	119008
		}, {
			"file":	"Zend/zend.c",
			"line":	907,
			"primary_score":	999861,
			"second_score":	118178
		}, {
			"file":	"Zend/zend.c",
			"line":	908,
			"primary_score":	999861,
			"second_score":	118177
		}, {
			"file":	"Zend/zend.c",
			"line":	910,
			"primary_score":	999861,
			"second_score":	118176
		}, {
			"file":	"Zend/zend.c",
			"line":	911,
			"primary_score":	999861,
			"second_score":	118170
		}, {
			"file":	"Zend/zend.c",
			"line":	912,
			"primary_score":	999861,
			"second_score":	118160
		}, {
			"file":	"Zend/zend.c",
			"line":	915,
			"primary_score":	999861,
			"second_score":	118158
		}, {
			"file":	"Zend/zend.c",
			"line":	917,
			"primary_score":	999861,
			"second_score":	113545
		}, {
			"file":	"Zend/zend.c",
			"line":	918,
			"primary_score":	999861,
			"second_score":	113539
		}, {
			"file":	"Zend/zend.c",
			"line":	919,
			"primary_score":	999861,
			"second_score":	113369
		}, {
			"file":	"Zend/zend.c",
			"line":	921,
			"primary_score":	999861,
			"second_score":	113367
		}, {
			"file":	"Zend/zend.c",
			"line":	924,
			"primary_score":	999861,
			"second_score":	113340
		}, {
			"file":	"Zend/zend.c",
			"line":	925,
			"primary_score":	999861,
			"second_score":	113339
		}, {
			"file":	"Zend/zend.c",
			"line":	943,
			"primary_score":	999861,
			"second_score":	113335
		}, {
			"file":	"Zend/zend.c",
			"line":	944,
			"primary_score":	999861,
			"second_score":	113329
		}, {
			"file":	"Zend/zend.c",
			"line":	945,
			"primary_score":	999861,
			"second_score":	113326
		}, {
			"file":	"Zend/zend.c",
			"line":	952,
			"primary_score":	999885,
			"second_score":	121155
		}, {
			"file":	"Zend/zend.c",
			"line":	953,
			"primary_score":	999885,
			"second_score":	121154
		}, {
			"file":	"Zend/zend.c",
			"line":	971,
			"primary_score":	999873,
			"second_score":	119356
		}, {
			"file":	"Zend/zend.c",
			"line":	972,
			"primary_score":	999873,
			"second_score":	119355
		}, {
			"file":	"Zend/zend.c",
			"line":	973,
			"primary_score":	999873,
			"second_score":	119354
		}, {
			"file":	"Zend/zend.c",
			"line":	974,
			"primary_score":	999873,
			"second_score":	119353
		}, {
			"file":	"Zend/zend.c",
			"line":	975,
			"primary_score":	999873,
			"second_score":	119352
		}, {
			"file":	"Zend/zend.c",
			"line":	976,
			"primary_score":	999873,
			"second_score":	119351
		}, {
			"file":	"Zend/zend.c",
			"line":	977,
			"primary_score":	999873,
			"second_score":	119350
		}, {
			"file":	"Zend/zend.c",
			"line":	978,
			"primary_score":	999873,
			"second_score":	119349
		}, {
			"file":	"Zend/zend.c",
			"line":	979,
			"primary_score":	999873,
			"second_score":	119348
		}, {
			"file":	"Zend/zend.c",
			"line":	980,
			"primary_score":	999873,
			"second_score":	119347
		}, {
			"file":	"Zend/zend.c",
			"line":	981,
			"primary_score":	999873,
			"second_score":	119346
		}, {
			"file":	"Zend/zend.c",
			"line":	984,
			"primary_score":	999873,
			"second_score":	119345
		}, {
			"file":	"Zend/zend.c",
			"line":	1006,
			"primary_score":	999873,
			"second_score":	119343
		}, {
			"file":	"Zend/zend.c",
			"line":	1007,
			"primary_score":	999873,
			"second_score":	119341
		}, {
			"file":	"Zend/zend.c",
			"line":	1008,
			"primary_score":	999873,
			"second_score":	119338
		}, {
			"file":	"Zend/zend.c",
			"line":	1013,
			"primary_score":	999873,
			"second_score":	119334
		}, {
			"file":	"Zend/zend.c",
			"line":	1019,
			"primary_score":	999873,
			"second_score":	119333
		}, {
			"file":	"Zend/zend.c",
			"line":	1023,
			"primary_score":	999873,
			"second_score":	119332
		}, {
			"file":	"Zend/zend.c",
			"line":	1035,
			"primary_score":	999873,
			"second_score":	119331
		}, {
			"file":	"Zend/zend.c",
			"line":	1038,
			"primary_score":	999873,
			"second_score":	119330
		}, {
			"file":	"Zend/zend.c",
			"line":	1151,
			"primary_score":	999873,
			"second_score":	121211
		}, {
			"file":	"Zend/zend.c",
			"line":	1153,
			"primary_score":	999873,
			"second_score":	121210
		}, {
			"file":	"Zend/zend.c",
			"line":	1200,
			"primary_score":	999861,
			"second_score":	130752
		}, {
			"file":	"Zend/zend.c",
			"line":	1201,
			"primary_score":	999861,
			"second_score":	130751
		}, {
			"file":	"Zend/zend.c",
			"line":	1202,
			"primary_score":	999861,
			"second_score":	130753
		}, {
			"file":	"Zend/zend.c",
			"line":	1205,
			"primary_score":	999861,
			"second_score":	133416
		}, {
			"file":	"Zend/zend.c",
			"line":	1206,
			"primary_score":	999861,
			"second_score":	133415
		}, {
			"file":	"Zend/zend.c",
			"line":	1207,
			"primary_score":	999861,
			"second_score":	133414
		}, {
			"file":	"Zend/zend.c",
			"line":	1209,
			"primary_score":	999861,
			"second_score":	133277
		}, {
			"file":	"Zend/zend.c",
			"line":	1210,
			"primary_score":	999861,
			"second_score":	133198
		}, {
			"file":	"Zend/zend.c",
			"line":	1211,
			"primary_score":	999861,
			"second_score":	133197
		}, {
			"file":	"Zend/zend.c",
			"line":	1212,
			"primary_score":	999861,
			"second_score":	133196
		}, {
			"file":	"Zend/zend.c",
			"line":	1213,
			"primary_score":	999861,
			"second_score":	120836
		}, {
			"file":	"Zend/zend.c",
			"line":	1214,
			"primary_score":	999861,
			"second_score":	120834
		}, {
			"file":	"Zend/zend.c",
			"line":	1239,
			"primary_score":	999861,
			"second_score":	120833
		}, {
			"file":	"Zend/zend.c",
			"line":	1240,
			"primary_score":	999861,
			"second_score":	120309
		}, {
			"file":	"Zend/zend.c",
			"line":	1248,
			"primary_score":	999861,
			"second_score":	120287
		}, {
			"file":	"Zend/zend.c",
			"line":	1249,
			"primary_score":	999861,
			"second_score":	120286
		}, {
			"file":	"Zend/zend.c",
			"line":	1250,
			"primary_score":	999861,
			"second_score":	120285
		}, {
			"file":	"Zend/zend.c",
			"line":	1252,
			"primary_score":	999861,
			"second_score":	120284
		}, {
			"file":	"Zend/zend.c",
			"line":	1282,
			"primary_score":	999861,
			"second_score":	113437
		}, {
			"file":	"Zend/zend.h",
			"line":	379,
			"primary_score":	999861,
			"second_score":	15289
		}, {
			"file":	"Zend/zend.h",
			"line":	383,
			"primary_score":	999861,
			"second_score":	125162
		}, {
			"file":	"Zend/zend.h",
			"line":	387,
			"primary_score":	999861,
			"second_score":	137655
		}, {
			"file":	"Zend/zend.h",
			"line":	391,
			"primary_score":	999861,
			"second_score":	15291
		}, {
			"file":	"Zend/zend.h",
			"line":	395,
			"primary_score":	999861,
			"second_score":	125302
		}, {
			"file":	"Zend/zend.h",
			"line":	399,
			"primary_score":	999861,
			"second_score":	133650
		}, {
			"file":	"Zend/zend.h",
			"line":	403,
			"primary_score":	999861,
			"second_score":	17648
		}, {
			"file":	"Zend/zend_API.c",
			"line":	241,
			"primary_score":	999875,
			"second_score":	121170
		}, {
			"file":	"Zend/zend_API.c",
			"line":	242,
			"primary_score":	999875,
			"second_score":	121169
		}, {
			"file":	"Zend/zend_API.c",
			"line":	307,
			"primary_score":	999861,
			"second_score":	125315
		}, {
			"file":	"Zend/zend_API.c",
			"line":	308,
			"primary_score":	999861,
			"second_score":	125314
		}, {
			"file":	"Zend/zend_API.c",
			"line":	309,
			"primary_score":	999861,
			"second_score":	125313
		}, {
			"file":	"Zend/zend_API.c",
			"line":	312,
			"primary_score":	999861,
			"second_score":	125312
		}, {
			"file":	"Zend/zend_API.c",
			"line":	313,
			"primary_score":	999861,
			"second_score":	125311
		}, {
			"file":	"Zend/zend_API.c",
			"line":	315,
			"primary_score":	999861,
			"second_score":	125310
		}, {
			"file":	"Zend/zend_API.c",
			"line":	316,
			"primary_score":	999978,
			"second_score":	121180
		}, {
			"file":	"Zend/zend_API.c",
			"line":	317,
			"primary_score":	999994,
			"second_score":	122022
		}, {
			"file":	"Zend/zend_API.c",
			"line":	320,
			"primary_score":	999861,
			"second_score":	125309
		}, {
			"file":	"Zend/zend_API.c",
			"line":	322,
			"primary_score":	999974,
			"second_score":	121179
		}, {
			"file":	"Zend/zend_API.c",
			"line":	325,
			"primary_score":	999861,
			"second_score":	125308
		}, {
			"file":	"Zend/zend_API.c",
			"line":	416,
			"primary_score":	999861,
			"second_score":	125307
		}, {
			"file":	"Zend/zend_API.c",
			"line":	417,
			"primary_score":	999861,
			"second_score":	125306
		}, {
			"file":	"Zend/zend_API.c",
			"line":	418,
			"primary_score":	999861,
			"second_score":	125305
		}, {
			"file":	"Zend/zend_API.c",
			"line":	431,
			"primary_score":	999861,
			"second_score":	125304
		}, {
			"file":	"Zend/zend_API.c",
			"line":	432,
			"primary_score":	999861,
			"second_score":	125303
		}, {
			"file":	"Zend/zend_API.c",
			"line":	438,
			"primary_score":	999861,
			"second_score":	125301
		}, {
			"file":	"Zend/zend_API.c",
			"line":	439,
			"primary_score":	999861,
			"second_score":	125300
		}, {
			"file":	"Zend/zend_API.c",
			"line":	440,
			"primary_score":	999861,
			"second_score":	125299
		}, {
			"file":	"Zend/zend_API.c",
			"line":	453,
			"primary_score":	999861,
			"second_score":	125298
		}, {
			"file":	"Zend/zend_API.c",
			"line":	544,
			"primary_score":	999943,
			"second_score":	121174
		}, {
			"file":	"Zend/zend_API.c",
			"line":	545,
			"primary_score":	999943,
			"second_score":	121173
		}, {
			"file":	"Zend/zend_API.c",
			"line":	547,
			"primary_score":	999943,
			"second_score":	121172
		}, {
			"file":	"Zend/zend_API.c",
			"line":	548,
			"primary_score":	999998,
			"second_score":	122013
		}, {
			"file":	"Zend/zend_API.c",
			"line":	549,
			"primary_score":	999998,
			"second_score":	122012
		}, {
			"file":	"Zend/zend_API.c",
			"line":	551,
			"primary_score":	999943,
			"second_score":	121171
		}, {
			"file":	"Zend/zend_API.c",
			"line":	553,
			"primary_score":	999943,
			"second_score":	121156
		}, {
			"file":	"Zend/zend_API.c",
			"line":	562,
			"primary_score":	999943,
			"second_score":	121155
		}, {
			"file":	"Zend/zend_API.c",
			"line":	643,
			"primary_score":	999861,
			"second_score":	122704
		}, {
			"file":	"Zend/zend_API.c",
			"line":	644,
			"primary_score":	999861,
			"second_score":	122703
		}, {
			"file":	"Zend/zend_API.c",
			"line":	647,
			"primary_score":	999861,
			"second_score":	122702
		}, {
			"file":	"Zend/zend_API.c",
			"line":	650,
			"primary_score":	999861,
			"second_score":	122701
		}, {
			"file":	"Zend/zend_API.c",
			"line":	656,
			"primary_score":	999861,
			"second_score":	125297
		}, {
			"file":	"Zend/zend_API.c",
			"line":	658,
			"primary_score":	999861,
			"second_score":	125296
		}, {
			"file":	"Zend/zend_API.c",
			"line":	664,
			"primary_score":	999861,
			"second_score":	125318
		}, {
			"file":	"Zend/zend_API.c",
			"line":	665,
			"primary_score":	999861,
			"second_score":	125317
		}, {
			"file":	"Zend/zend_API.c",
			"line":	667,
			"primary_score":	999861,
			"second_score":	125316
		}, {
			"file":	"Zend/zend_API.c",
			"line":	668,
			"primary_score":	999861,
			"second_score":	125295
		}, {
			"file":	"Zend/zend_API.c",
			"line":	688,
			"primary_score":	999861,
			"second_score":	125294
		}, {
			"file":	"Zend/zend_API.c",
			"line":	694,
			"primary_score":	999861,
			"second_score":	125347
		}, {
			"file":	"Zend/zend_API.c",
			"line":	695,
			"primary_score":	999861,
			"second_score":	125346
		}, {
			"file":	"Zend/zend_API.c",
			"line":	696,
			"primary_score":	999861,
			"second_score":	125345
		}, {
			"file":	"Zend/zend_API.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	125344
		}, {
			"file":	"Zend/zend_API.c",
			"line":	698,
			"primary_score":	999861,
			"second_score":	125343
		}, {
			"file":	"Zend/zend_API.c",
			"line":	699,
			"primary_score":	999861,
			"second_score":	125342
		}, {
			"file":	"Zend/zend_API.c",
			"line":	700,
			"primary_score":	999861,
			"second_score":	125341
		}, {
			"file":	"Zend/zend_API.c",
			"line":	701,
			"primary_score":	999861,
			"second_score":	125340
		}, {
			"file":	"Zend/zend_API.c",
			"line":	702,
			"primary_score":	999861,
			"second_score":	125339
		}, {
			"file":	"Zend/zend_API.c",
			"line":	703,
			"primary_score":	999861,
			"second_score":	125338
		}, {
			"file":	"Zend/zend_API.c",
			"line":	704,
			"primary_score":	999861,
			"second_score":	125337
		}, {
			"file":	"Zend/zend_API.c",
			"line":	706,
			"primary_score":	999861,
			"second_score":	125336
		}, {
			"file":	"Zend/zend_API.c",
			"line":	707,
			"primary_score":	999861,
			"second_score":	125335
		}, {
			"file":	"Zend/zend_API.c",
			"line":	708,
			"primary_score":	999861,
			"second_score":	125334
		}, {
			"file":	"Zend/zend_API.c",
			"line":	718,
			"primary_score":	999861,
			"second_score":	125333
		}, {
			"file":	"Zend/zend_API.c",
			"line":	722,
			"primary_score":	999861,
			"second_score":	122758
		}, {
			"file":	"Zend/zend_API.c",
			"line":	764,
			"primary_score":	999861,
			"second_score":	125332
		}, {
			"file":	"Zend/zend_API.c",
			"line":	765,
			"primary_score":	999861,
			"second_score":	125331
		}, {
			"file":	"Zend/zend_API.c",
			"line":	768,
			"primary_score":	999861,
			"second_score":	125330
		}, {
			"file":	"Zend/zend_API.c",
			"line":	774,
			"primary_score":	999861,
			"second_score":	125329
		}, {
			"file":	"Zend/zend_API.c",
			"line":	790,
			"primary_score":	999861,
			"second_score":	125328
		}, {
			"file":	"Zend/zend_API.c",
			"line":	792,
			"primary_score":	999861,
			"second_score":	125326
		}, {
			"file":	"Zend/zend_API.c",
			"line":	798,
			"primary_score":	999861,
			"second_score":	125325
		}, {
			"file":	"Zend/zend_API.c",
			"line":	799,
			"primary_score":	999861,
			"second_score":	125324
		}, {
			"file":	"Zend/zend_API.c",
			"line":	800,
			"primary_score":	999861,
			"second_score":	125323
		}, {
			"file":	"Zend/zend_API.c",
			"line":	801,
			"primary_score":	999861,
			"second_score":	122720
		}, {
			"file":	"Zend/zend_API.c",
			"line":	804,
			"primary_score":	999861,
			"second_score":	125322
		}, {
			"file":	"Zend/zend_API.c",
			"line":	834,
			"primary_score":	999861,
			"second_score":	125321
		}, {
			"file":	"Zend/zend_API.c",
			"line":	836,
			"primary_score":	999861,
			"second_score":	125319
		}, {
			"file":	"Zend/zend_API.c",
			"line":	844,
			"primary_score":	999861,
			"second_score":	125293
		}, {
			"file":	"Zend/zend_API.c",
			"line":	847,
			"primary_score":	999861,
			"second_score":	125292
		}, {
			"file":	"Zend/zend_API.c",
			"line":	881,
			"primary_score":	999861,
			"second_score":	125355
		}, {
			"file":	"Zend/zend_API.c",
			"line":	882,
			"primary_score":	999861,
			"second_score":	125354
		}, {
			"file":	"Zend/zend_API.c",
			"line":	884,
			"primary_score":	999861,
			"second_score":	125353
		}, {
			"file":	"Zend/zend_API.c",
			"line":	886,
			"primary_score":	999861,
			"second_score":	125349
		}, {
			"file":	"Zend/zend_API.c",
			"line":	887,
			"primary_score":	999861,
			"second_score":	125348
		}, {
			"file":	"Zend/zend_API.c",
			"line":	888,
			"primary_score":	999861,
			"second_score":	125291
		}, {
			"file":	"Zend/zend_API.c",
			"line":	890,
			"primary_score":	999861,
			"second_score":	125290
		}, {
			"file":	"Zend/zend_API.c",
			"line":	896,
			"primary_score":	999899,
			"second_score":	121252
		}, {
			"file":	"Zend/zend_API.c",
			"line":	897,
			"primary_score":	999899,
			"second_score":	121251
		}, {
			"file":	"Zend/zend_API.c",
			"line":	898,
			"primary_score":	999899,
			"second_score":	121250
		}, {
			"file":	"Zend/zend_API.c",
			"line":	899,
			"primary_score":	999899,
			"second_score":	121249
		}, {
			"file":	"Zend/zend_API.c",
			"line":	900,
			"primary_score":	999899,
			"second_score":	121248
		}, {
			"file":	"Zend/zend_API.c",
			"line":	902,
			"primary_score":	999899,
			"second_score":	121247
		}, {
			"file":	"Zend/zend_API.c",
			"line":	909,
			"primary_score":	999899,
			"second_score":	121246
		}, {
			"file":	"Zend/zend_API.c",
			"line":	910,
			"primary_score":	999900,
			"second_score":	121242
		}, {
			"file":	"Zend/zend_API.c",
			"line":	912,
			"primary_score":	999900,
			"second_score":	121241
		}, {
			"file":	"Zend/zend_API.c",
			"line":	914,
			"primary_score":	999900,
			"second_score":	121240
		}, {
			"file":	"Zend/zend_API.c",
			"line":	915,
			"primary_score":	999900,
			"second_score":	121239
		}, {
			"file":	"Zend/zend_API.c",
			"line":	916,
			"primary_score":	999900,
			"second_score":	121238
		}, {
			"file":	"Zend/zend_API.c",
			"line":	918,
			"primary_score":	999900,
			"second_score":	121237
		}, {
			"file":	"Zend/zend_API.c",
			"line":	923,
			"primary_score":	999900,
			"second_score":	121224
		}, {
			"file":	"Zend/zend_API.c",
			"line":	924,
			"primary_score":	999900,
			"second_score":	121148
		}, {
			"file":	"Zend/zend_API.c",
			"line":	926,
			"primary_score":	999900,
			"second_score":	121147
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1018,
			"primary_score":	999866,
			"second_score":	123660
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1019,
			"primary_score":	999866,
			"second_score":	123659
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1020,
			"primary_score":	999866,
			"second_score":	123658
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1021,
			"primary_score":	999866,
			"second_score":	123657
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1023,
			"primary_score":	999866,
			"second_score":	123656
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1024,
			"primary_score":	999866,
			"second_score":	123655
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1026,
			"primary_score":	999866,
			"second_score":	123646
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1032,
			"primary_score":	999866,
			"second_score":	123645
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1068,
			"primary_score":	999866,
			"second_score":	123644
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1072,
			"primary_score":	999866,
			"second_score":	123643
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1073,
			"primary_score":	999866,
			"second_score":	123642
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1080,
			"primary_score":	999866,
			"second_score":	123501
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1082,
			"primary_score":	999866,
			"second_score":	123500
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1101,
			"primary_score":	999866,
			"second_score":	123663
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1103,
			"primary_score":	999866,
			"second_score":	123662
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1108,
			"primary_score":	999866,
			"second_score":	123661
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1110,
			"primary_score":	999866,
			"second_score":	123641
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1111,
			"primary_score":	999866,
			"second_score":	123640
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1120,
			"primary_score":	999866,
			"second_score":	123639
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1122,
			"primary_score":	999866,
			"second_score":	123477
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1128,
			"primary_score":	999866,
			"second_score":	123664
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1368,
			"primary_score":	999861,
			"second_score":	123444
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1370,
			"primary_score":	999861,
			"second_score":	123443
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1371,
			"primary_score":	999861,
			"second_score":	123333
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1373,
			"primary_score":	999861,
			"second_score":	123218
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1779,
			"primary_score":	999861,
			"second_score":	103382
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1780,
			"primary_score":	999861,
			"second_score":	103381
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1781,
			"primary_score":	999861,
			"second_score":	103380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2171,
			"primary_score":	999861,
			"second_score":	50133
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2172,
			"primary_score":	999861,
			"second_score":	50132
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2173,
			"primary_score":	999861,
			"second_score":	50131
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2175,
			"primary_score":	999861,
			"second_score":	50130
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2176,
			"primary_score":	999861,
			"second_score":	50129
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2178,
			"primary_score":	999861,
			"second_score":	50128
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2179,
			"primary_score":	999861,
			"second_score":	47249
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2185,
			"primary_score":	999861,
			"second_score":	47248
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2186,
			"primary_score":	999861,
			"second_score":	47200
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2187,
			"primary_score":	999861,
			"second_score":	47199
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2213,
			"primary_score":	999861,
			"second_score":	50140
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2215,
			"primary_score":	999861,
			"second_score":	50139
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2220,
			"primary_score":	999861,
			"second_score":	50138
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2224,
			"primary_score":	999861,
			"second_score":	53380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2228,
			"primary_score":	999861,
			"second_score":	50137
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2232,
			"primary_score":	999861,
			"second_score":	52697
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2233,
			"primary_score":	999861,
			"second_score":	53765
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2238,
			"primary_score":	999861,
			"second_score":	50136
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2239,
			"primary_score":	999861,
			"second_score":	50135
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2240,
			"primary_score":	999861,
			"second_score":	50134
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2245,
			"primary_score":	999861,
			"second_score":	47198
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2284,
			"primary_score":	999861,
			"second_score":	118971
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2286,
			"primary_score":	999861,
			"second_score":	118970
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2287,
			"primary_score":	999861,
			"second_score":	118964
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2290,
			"primary_score":	999861,
			"second_score":	118963
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2292,
			"primary_score":	999861,
			"second_score":	118962
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2293,
			"primary_score":	999861,
			"second_score":	118380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2295,
			"primary_score":	999861,
			"second_score":	118379
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2296,
			"primary_score":	999861,
			"second_score":	118373
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2299,
			"primary_score":	999861,
			"second_score":	118372
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2305,
			"primary_score":	999861,
			"second_score":	114573
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2307,
			"primary_score":	999861,
			"second_score":	114572
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2331,
			"primary_score":	999861,
			"second_score":	113317
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2335,
			"primary_score":	999861,
			"second_score":	113316
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2337,
			"primary_score":	999861,
			"second_score":	113315
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3782,
			"primary_score":	999876,
			"second_score":	129741
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3783,
			"primary_score":	999876,
			"second_score":	129740
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3784,
			"primary_score":	999876,
			"second_score":	129739
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3785,
			"primary_score":	999876,
			"second_score":	129738
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3793,
			"primary_score":	999876,
			"second_score":	129743
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3794,
			"primary_score":	999876,
			"second_score":	129742
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3795,
			"primary_score":	999876,
			"second_score":	129737
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3800,
			"primary_score":	999876,
			"second_score":	129736
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3801,
			"primary_score":	999876,
			"second_score":	129735
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3807,
			"primary_score":	999876,
			"second_score":	129639
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3808,
			"primary_score":	999876,
			"second_score":	129638
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3809,
			"primary_score":	999876,
			"second_score":	129637
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3814,
			"primary_score":	999877,
			"second_score":	129636
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3817,
			"primary_score":	999876,
			"second_score":	129635
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	144,
			"primary_score":	999861,
			"second_score":	3194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	293,
			"primary_score":	999861,
			"second_score":	3197
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	669,
			"primary_score":	999861,
			"second_score":	112840
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	671,
			"primary_score":	999861,
			"second_score":	112839
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	672,
			"primary_score":	999861,
			"second_score":	112838
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	695,
			"primary_score":	999861,
			"second_score":	112898
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	112897
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	698,
			"primary_score":	999861,
			"second_score":	112896
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	721,
			"primary_score":	999861,
			"second_score":	112847
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	722,
			"primary_score":	999861,
			"second_score":	112846
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	724,
			"primary_score":	999861,
			"second_score":	112845
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	726,
			"primary_score":	999861,
			"second_score":	112844
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	727,
			"primary_score":	999861,
			"second_score":	112843
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	728,
			"primary_score":	999861,
			"second_score":	112842
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	730,
			"primary_score":	999861,
			"second_score":	112841
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	731,
			"primary_score":	999861,
			"second_score":	112837
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	732,
			"primary_score":	999861,
			"second_score":	112836
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	733,
			"primary_score":	999861,
			"second_score":	112835
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	734,
			"primary_score":	999861,
			"second_score":	112834
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	735,
			"primary_score":	999861,
			"second_score":	112833
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	736,
			"primary_score":	999861,
			"second_score":	112832
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	737,
			"primary_score":	999861,
			"second_score":	112831
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	739,
			"primary_score":	999861,
			"second_score":	128684
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	741,
			"primary_score":	999861,
			"second_score":	128683
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	742,
			"primary_score":	999861,
			"second_score":	128682
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	744,
			"primary_score":	999861,
			"second_score":	128681
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	745,
			"primary_score":	999861,
			"second_score":	128680
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	746,
			"primary_score":	999861,
			"second_score":	128679
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	747,
			"primary_score":	999861,
			"second_score":	128678
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	748,
			"primary_score":	999861,
			"second_score":	128677
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	749,
			"primary_score":	999861,
			"second_score":	128676
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	750,
			"primary_score":	999861,
			"second_score":	128675
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	764,
			"primary_score":	999861,
			"second_score":	127181
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	766,
			"primary_score":	999861,
			"second_score":	127180
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	768,
			"primary_score":	999861,
			"second_score":	127179
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	769,
			"primary_score":	999861,
			"second_score":	127178
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	770,
			"primary_score":	999861,
			"second_score":	127177
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	772,
			"primary_score":	999861,
			"second_score":	127176
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	774,
			"primary_score":	999861,
			"second_score":	127175
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	775,
			"primary_score":	999861,
			"second_score":	127174
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	776,
			"primary_score":	999861,
			"second_score":	127173
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	782,
			"primary_score":	999861,
			"second_score":	112884
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	783,
			"primary_score":	999861,
			"second_score":	112883
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	785,
			"primary_score":	999861,
			"second_score":	112882
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	787,
			"primary_score":	999861,
			"second_score":	112881
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	788,
			"primary_score":	999861,
			"second_score":	112880
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	791,
			"primary_score":	999861,
			"second_score":	112879
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	796,
			"primary_score":	999861,
			"second_score":	112878
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	797,
			"primary_score":	999861,
			"second_score":	112877
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	798,
			"primary_score":	999861,
			"second_score":	112876
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	799,
			"primary_score":	999861,
			"second_score":	112875
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	801,
			"primary_score":	999861,
			"second_score":	112871
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	802,
			"primary_score":	999861,
			"second_score":	112869
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	803,
			"primary_score":	999861,
			"second_score":	112868
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	804,
			"primary_score":	999861,
			"second_score":	112867
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	807,
			"primary_score":	999960,
			"second_score":	128531
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	811,
			"primary_score":	999960,
			"second_score":	128530
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	813,
			"primary_score":	999960,
			"second_score":	128529
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	814,
			"primary_score":	999960,
			"second_score":	128528
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	815,
			"primary_score":	999960,
			"second_score":	128527
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	816,
			"primary_score":	999960,
			"second_score":	128526
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	817,
			"primary_score":	999960,
			"second_score":	128525
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	821,
			"primary_score":	999960,
			"second_score":	128524
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	829,
			"primary_score":	999861,
			"second_score":	126970
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	834,
			"primary_score":	999861,
			"second_score":	126969
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	835,
			"primary_score":	999861,
			"second_score":	126968
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	837,
			"primary_score":	999861,
			"second_score":	126967
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	838,
			"primary_score":	999861,
			"second_score":	126966
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	839,
			"primary_score":	999861,
			"second_score":	126965
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	841,
			"primary_score":	999861,
			"second_score":	126964
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	842,
			"primary_score":	999861,
			"second_score":	126963
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	886,
			"primary_score":	999861,
			"second_score":	113222
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	887,
			"primary_score":	999861,
			"second_score":	113221
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	889,
			"primary_score":	999861,
			"second_score":	113220
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	890,
			"primary_score":	999861,
			"second_score":	113219
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	892,
			"primary_score":	999861,
			"second_score":	113218
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	893,
			"primary_score":	999861,
			"second_score":	113217
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	900,
			"primary_score":	999861,
			"second_score":	113216
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	901,
			"primary_score":	999861,
			"second_score":	113215
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	902,
			"primary_score":	999861,
			"second_score":	112962
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	903,
			"primary_score":	999861,
			"second_score":	112961
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	904,
			"primary_score":	999861,
			"second_score":	112960
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	905,
			"primary_score":	999861,
			"second_score":	112959
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	907,
			"primary_score":	999861,
			"second_score":	112958
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	908,
			"primary_score":	999861,
			"second_score":	112957
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1589,
			"primary_score":	999861,
			"second_score":	3212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1590,
			"primary_score":	999861,
			"second_score":	3211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1591,
			"primary_score":	999861,
			"second_score":	3210
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1592,
			"primary_score":	999861,
			"second_score":	3209
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1594,
			"primary_score":	999861,
			"second_score":	3208
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1598,
			"primary_score":	999861,
			"second_score":	3207
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1604,
			"primary_score":	999861,
			"second_score":	3206
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1659,
			"primary_score":	999861,
			"second_score":	3205
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1660,
			"primary_score":	999861,
			"second_score":	3204
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1661,
			"primary_score":	999861,
			"second_score":	3203
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1662,
			"primary_score":	999861,
			"second_score":	3202
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1663,
			"primary_score":	999861,
			"second_score":	3201
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1664,
			"primary_score":	999861,
			"second_score":	3200
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1665,
			"primary_score":	999861,
			"second_score":	3199
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1666,
			"primary_score":	999861,
			"second_score":	3198
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1668,
			"primary_score":	999861,
			"second_score":	3196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1669,
			"primary_score":	999861,
			"second_score":	3195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1670,
			"primary_score":	999861,
			"second_score":	3193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1671,
			"primary_score":	999861,
			"second_score":	3192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1674,
			"primary_score":	999861,
			"second_score":	113228
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1676,
			"primary_score":	999861,
			"second_score":	113227
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1677,
			"primary_score":	999861,
			"second_score":	113226
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1682,
			"primary_score":	999861,
			"second_score":	113225
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1695,
			"primary_score":	999861,
			"second_score":	113224
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1699,
			"primary_score":	999861,
			"second_score":	113223
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1700,
			"primary_score":	999861,
			"second_score":	112956
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1701,
			"primary_score":	999861,
			"second_score":	112955
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1702,
			"primary_score":	999861,
			"second_score":	112954
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1707,
			"primary_score":	999861,
			"second_score":	112953
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1708,
			"primary_score":	999861,
			"second_score":	112952
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1709,
			"primary_score":	999861,
			"second_score":	112951
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1711,
			"primary_score":	999861,
			"second_score":	112950
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1712,
			"primary_score":	999861,
			"second_score":	112949
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1714,
			"primary_score":	999861,
			"second_score":	112948
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1715,
			"primary_score":	999861,
			"second_score":	112947
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1716,
			"primary_score":	999861,
			"second_score":	112943
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1717,
			"primary_score":	999861,
			"second_score":	112937
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1719,
			"primary_score":	999861,
			"second_score":	112919
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1720,
			"primary_score":	999861,
			"second_score":	112918
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1722,
			"primary_score":	999861,
			"second_score":	112823
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1792,
			"primary_score":	999861,
			"second_score":	112908
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1793,
			"primary_score":	999861,
			"second_score":	112907
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1794,
			"primary_score":	999861,
			"second_score":	112903
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1795,
			"primary_score":	999861,
			"second_score":	112902
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1797,
			"primary_score":	999861,
			"second_score":	112901
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1801,
			"primary_score":	999861,
			"second_score":	112900
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1854,
			"primary_score":	999861,
			"second_score":	112899
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1855,
			"primary_score":	999861,
			"second_score":	112895
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1860,
			"primary_score":	999861,
			"second_score":	112894
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1865,
			"primary_score":	999861,
			"second_score":	112917
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1866,
			"primary_score":	999861,
			"second_score":	112916
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1867,
			"primary_score":	999861,
			"second_score":	112915
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1868,
			"primary_score":	999861,
			"second_score":	112914
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1869,
			"primary_score":	999861,
			"second_score":	112913
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1870,
			"primary_score":	999861,
			"second_score":	112912
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1871,
			"primary_score":	999861,
			"second_score":	112911
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1873,
			"primary_score":	999861,
			"second_score":	112910
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1874,
			"primary_score":	999861,
			"second_score":	121104
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1875,
			"primary_score":	999861,
			"second_score":	121103
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1877,
			"primary_score":	999861,
			"second_score":	121102
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1881,
			"primary_score":	999861,
			"second_score":	121101
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1887,
			"primary_score":	999861,
			"second_score":	121100
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1888,
			"primary_score":	999861,
			"second_score":	121099
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1889,
			"primary_score":	999861,
			"second_score":	121098
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1890,
			"primary_score":	999861,
			"second_score":	121097
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1891,
			"primary_score":	999861,
			"second_score":	121096
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1892,
			"primary_score":	999861,
			"second_score":	121095
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1899,
			"primary_score":	999861,
			"second_score":	122632
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1900,
			"primary_score":	999861,
			"second_score":	122631
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1902,
			"primary_score":	999861,
			"second_score":	126986
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1903,
			"primary_score":	999861,
			"second_score":	126982
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1907,
			"primary_score":	999861,
			"second_score":	126981
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1915,
			"primary_score":	999861,
			"second_score":	112909
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1917,
			"primary_score":	999861,
			"second_score":	112893
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1934,
			"primary_score":	999861,
			"second_score":	112892
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1995,
			"primary_score":	999861,
			"second_score":	112891
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1997,
			"primary_score":	999861,
			"second_score":	112890
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1998,
			"primary_score":	999861,
			"second_score":	112889
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1999,
			"primary_score":	999861,
			"second_score":	112888
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2000,
			"primary_score":	999861,
			"second_score":	112887
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2001,
			"primary_score":	999861,
			"second_score":	112885
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2003,
			"primary_score":	999861,
			"second_score":	112866
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2006,
			"primary_score":	999861,
			"second_score":	112865
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2008,
			"primary_score":	999861,
			"second_score":	112864
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2009,
			"primary_score":	999861,
			"second_score":	130031
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2010,
			"primary_score":	999861,
			"second_score":	130030
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2012,
			"primary_score":	999861,
			"second_score":	112863
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2015,
			"primary_score":	999861,
			"second_score":	112862
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2016,
			"primary_score":	999861,
			"second_score":	112856
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2017,
			"primary_score":	999861,
			"second_score":	112855
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2020,
			"primary_score":	999861,
			"second_score":	112849
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2021,
			"primary_score":	999861,
			"second_score":	112848
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2027,
			"primary_score":	999861,
			"second_score":	112830
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2029,
			"primary_score":	999861,
			"second_score":	112829
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2030,
			"primary_score":	999861,
			"second_score":	112828
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2031,
			"primary_score":	999861,
			"second_score":	112827
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2034,
			"primary_score":	999861,
			"second_score":	112826
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2036,
			"primary_score":	999861,
			"second_score":	112824
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2042,
			"primary_score":	999861,
			"second_score":	113282
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2043,
			"primary_score":	999861,
			"second_score":	113281
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2044,
			"primary_score":	999861,
			"second_score":	113280
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2046,
			"primary_score":	999861,
			"second_score":	113279
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2050,
			"primary_score":	999861,
			"second_score":	113278
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2051,
			"primary_score":	999861,
			"second_score":	113277
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2052,
			"primary_score":	999861,
			"second_score":	113276
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2059,
			"primary_score":	999861,
			"second_score":	113275
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2060,
			"primary_score":	999861,
			"second_score":	113274
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2061,
			"primary_score":	999861,
			"second_score":	113273
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2063,
			"primary_score":	999861,
			"second_score":	113272
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2064,
			"primary_score":	999861,
			"second_score":	113271
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2065,
			"primary_score":	999861,
			"second_score":	113270
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2066,
			"primary_score":	999861,
			"second_score":	113269
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2072,
			"primary_score":	999861,
			"second_score":	113268
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2076,
			"primary_score":	999861,
			"second_score":	113609
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2078,
			"primary_score":	999861,
			"second_score":	113607
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2080,
			"primary_score":	999861,
			"second_score":	113606
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2081,
			"primary_score":	999861,
			"second_score":	113605
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2085,
			"primary_score":	999861,
			"second_score":	113604
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2086,
			"primary_score":	999861,
			"second_score":	113603
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2087,
			"primary_score":	999861,
			"second_score":	113602
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2088,
			"primary_score":	999861,
			"second_score":	113583
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2090,
			"primary_score":	999861,
			"second_score":	113582
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2094,
			"primary_score":	999861,
			"second_score":	113581
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2095,
			"primary_score":	999861,
			"second_score":	113575
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2097,
			"primary_score":	999861,
			"second_score":	113557
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2102,
			"primary_score":	999861,
			"second_score":	129926
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2103,
			"primary_score":	999861,
			"second_score":	129925
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2104,
			"primary_score":	999861,
			"second_score":	129924
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2105,
			"primary_score":	999861,
			"second_score":	129923
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2106,
			"primary_score":	999861,
			"second_score":	129922
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2108,
			"primary_score":	999861,
			"second_score":	129921
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2109,
			"primary_score":	999861,
			"second_score":	129920
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2111,
			"primary_score":	999861,
			"second_score":	131087
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2112,
			"primary_score":	999861,
			"second_score":	131086
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2113,
			"primary_score":	999861,
			"second_score":	131085
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2114,
			"primary_score":	999861,
			"second_score":	131084
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2116,
			"primary_score":	999861,
			"second_score":	131083
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2120,
			"primary_score":	999861,
			"second_score":	131082
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2121,
			"primary_score":	999861,
			"second_score":	133551
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2123,
			"primary_score":	999861,
			"second_score":	133550
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2124,
			"primary_score":	999861,
			"second_score":	133549
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2126,
			"primary_score":	999861,
			"second_score":	133548
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2127,
			"primary_score":	999861,
			"second_score":	133546
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2128,
			"primary_score":	999861,
			"second_score":	133545
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2129,
			"primary_score":	999861,
			"second_score":	131074
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2130,
			"primary_score":	999861,
			"second_score":	131073
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2134,
			"primary_score":	999861,
			"second_score":	133544
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2135,
			"primary_score":	999861,
			"second_score":	133538
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2137,
			"primary_score":	999861,
			"second_score":	133537
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2140,
			"primary_score":	999861,
			"second_score":	133531
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2141,
			"primary_score":	999861,
			"second_score":	133516
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2142,
			"primary_score":	999861,
			"second_score":	133515
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2144,
			"primary_score":	999861,
			"second_score":	133513
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2145,
			"primary_score":	999861,
			"second_score":	133512
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2149,
			"primary_score":	999861,
			"second_score":	136435
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2153,
			"primary_score":	999861,
			"second_score":	126653
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2154,
			"primary_score":	999861,
			"second_score":	126652
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2160,
			"primary_score":	999861,
			"second_score":	126651
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2161,
			"primary_score":	999861,
			"second_score":	126650
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2162,
			"primary_score":	999861,
			"second_score":	126649
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2163,
			"primary_score":	999861,
			"second_score":	126648
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2165,
			"primary_score":	999861,
			"second_score":	126647
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2170,
			"primary_score":	999861,
			"second_score":	126646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2173,
			"primary_score":	999861,
			"second_score":	126645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2175,
			"primary_score":	999861,
			"second_score":	126644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2176,
			"primary_score":	999861,
			"second_score":	126643
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2178,
			"primary_score":	999861,
			"second_score":	126642
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2179,
			"primary_score":	999861,
			"second_score":	126641
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2180,
			"primary_score":	999861,
			"second_score":	126640
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2187,
			"primary_score":	999861,
			"second_score":	126639
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2192,
			"primary_score":	999861,
			"second_score":	136434
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2194,
			"primary_score":	999861,
			"second_score":	136433
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2195,
			"primary_score":	999861,
			"second_score":	136432
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2196,
			"primary_score":	999861,
			"second_score":	136431
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2197,
			"primary_score":	999861,
			"second_score":	136429
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2198,
			"primary_score":	999861,
			"second_score":	136428
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2199,
			"primary_score":	999861,
			"second_score":	136427
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2201,
			"primary_score":	999861,
			"second_score":	136426
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2202,
			"primary_score":	999861,
			"second_score":	136424
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2204,
			"primary_score":	999861,
			"second_score":	136405
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2208,
			"primary_score":	999861,
			"second_score":	136404
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2211,
			"primary_score":	999861,
			"second_score":	136403
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2212,
			"primary_score":	999861,
			"second_score":	136397
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2213,
			"primary_score":	999861,
			"second_score":	136396
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2216,
			"primary_score":	999861,
			"second_score":	136390
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2220,
			"primary_score":	999861,
			"second_score":	136389
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2223,
			"primary_score":	999861,
			"second_score":	136371
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2224,
			"primary_score":	999861,
			"second_score":	136370
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2225,
			"primary_score":	999861,
			"second_score":	136369
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2226,
			"primary_score":	999861,
			"second_score":	136368
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2228,
			"primary_score":	999861,
			"second_score":	136367
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2229,
			"primary_score":	999861,
			"second_score":	136365
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2236,
			"primary_score":	999861,
			"second_score":	151962
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2334,
			"primary_score":	999861,
			"second_score":	151961
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2338,
			"primary_score":	999861,
			"second_score":	151866
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2340,
			"primary_score":	999861,
			"second_score":	151865
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2341,
			"primary_score":	999861,
			"second_score":	151823
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2398,
			"primary_score":	999861,
			"second_score":	121115
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2400,
			"primary_score":	999861,
			"second_score":	121114
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2403,
			"primary_score":	999861,
			"second_score":	121113
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2408,
			"primary_score":	999861,
			"second_score":	113285
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2410,
			"primary_score":	999861,
			"second_score":	113284
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2414,
			"primary_score":	999861,
			"second_score":	113283
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2419,
			"primary_score":	999861,
			"second_score":	129929
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2421,
			"primary_score":	999861,
			"second_score":	129928
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2424,
			"primary_score":	999861,
			"second_score":	129927
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2459,
			"primary_score":	999861,
			"second_score":	132643
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2460,
			"primary_score":	999861,
			"second_score":	132642
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2462,
			"primary_score":	999861,
			"second_score":	132641
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2468,
			"primary_score":	999861,
			"second_score":	132640
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2472,
			"primary_score":	999861,
			"second_score":	132639
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2507,
			"primary_score":	999861,
			"second_score":	132644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2517,
			"primary_score":	999861,
			"second_score":	121427
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2528,
			"primary_score":	999861,
			"second_score":	132646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2530,
			"primary_score":	999861,
			"second_score":	132645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2531,
			"primary_score":	999861,
			"second_score":	132558
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2534,
			"primary_score":	999861,
			"second_score":	132557
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2535,
			"primary_score":	999861,
			"second_score":	132556
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2554,
			"primary_score":	999861,
			"second_score":	123328
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2556,
			"primary_score":	999861,
			"second_score":	123327
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2557,
			"primary_score":	999861,
			"second_score":	123223
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2560,
			"primary_score":	999861,
			"second_score":	123222
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2561,
			"primary_score":	999861,
			"second_score":	123221
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2562,
			"primary_score":	999861,
			"second_score":	123220
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2615,
			"primary_score":	999861,
			"second_score":	3213
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	346,
			"primary_score":	999861,
			"second_score":	124026
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1335,
			"primary_score":	999861,
			"second_score":	121018
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1336,
			"primary_score":	999861,
			"second_score":	121017
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1337,
			"primary_score":	999861,
			"second_score":	121016
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1338,
			"primary_score":	999861,
			"second_score":	121015
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1339,
			"primary_score":	999861,
			"second_score":	121014
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1341,
			"primary_score":	999861,
			"second_score":	121013
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1345,
			"primary_score":	999861,
			"second_score":	120946
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1348,
			"primary_score":	999861,
			"second_score":	120770
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1349,
			"primary_score":	999861,
			"second_score":	120769
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1354,
			"primary_score":	999861,
			"second_score":	120768
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1356,
			"primary_score":	999861,
			"second_score":	120728
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1362,
			"primary_score":	999861,
			"second_score":	120709
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1367,
			"primary_score":	999861,
			"second_score":	120708
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1891,
			"primary_score":	999861,
			"second_score":	123446
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1892,
			"primary_score":	999861,
			"second_score":	123445
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1893,
			"primary_score":	999861,
			"second_score":	123070
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1921,
			"primary_score":	999861,
			"second_score":	132868
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1923,
			"primary_score":	999861,
			"second_score":	132867
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1927,
			"primary_score":	999861,
			"second_score":	132829
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1929,
			"primary_score":	999861,
			"second_score":	132727
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1932,
			"primary_score":	999861,
			"second_score":	132726
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	130,
			"primary_score":	999861,
			"second_score":	18912
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	170,
			"primary_score":	999861,
			"second_score":	166765
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	171,
			"primary_score":	999861,
			"second_score":	166764
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	172,
			"primary_score":	999861,
			"second_score":	166763
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	173,
			"primary_score":	999861,
			"second_score":	166762
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	174,
			"primary_score":	999861,
			"second_score":	166761
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	175,
			"primary_score":	999861,
			"second_score":	166760
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	207,
			"primary_score":	999861,
			"second_score":	133262
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	209,
			"primary_score":	999861,
			"second_score":	133261
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	228,
			"primary_score":	999861,
			"second_score":	113538
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	229,
			"primary_score":	999861,
			"second_score":	113513
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	230,
			"primary_score":	999861,
			"second_score":	113488
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	231,
			"primary_score":	999861,
			"second_score":	113484
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	232,
			"primary_score":	999861,
			"second_score":	113480
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	233,
			"primary_score":	999861,
			"second_score":	113455
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	234,
			"primary_score":	999861,
			"second_score":	113451
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	235,
			"primary_score":	999861,
			"second_score":	113447
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	236,
			"primary_score":	999861,
			"second_score":	113377
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	237,
			"primary_score":	999861,
			"second_score":	113373
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	261,
			"primary_score":	999861,
			"second_score":	133432
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	268,
			"primary_score":	999861,
			"second_score":	166791
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	282,
			"primary_score":	999861,
			"second_score":	124760
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	289,
			"primary_score":	999861,
			"second_score":	134438
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	295,
			"primary_score":	999866,
			"second_score":	132830
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	296,
			"primary_score":	999866,
			"second_score":	132829
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	298,
			"primary_score":	999866,
			"second_score":	132818
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	299,
			"primary_score":	999869,
			"second_score":	132811
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	303,
			"primary_score":	999869,
			"second_score":	132810
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	304,
			"primary_score":	999869,
			"second_score":	132789
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	306,
			"primary_score":	999885,
			"second_score":	132812
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	308,
			"primary_score":	999866,
			"second_score":	143969
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	309,
			"primary_score":	999866,
			"second_score":	143968
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	310,
			"primary_score":	999866,
			"second_score":	143967
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	311,
			"primary_score":	999866,
			"second_score":	166112
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	312,
			"primary_score":	999866,
			"second_score":	166111
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	314,
			"primary_score":	999866,
			"second_score":	143966
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	315,
			"primary_score":	999866,
			"second_score":	143925
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	316,
			"primary_score":	999866,
			"second_score":	143924
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	317,
			"primary_score":	999866,
			"second_score":	143923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	334,
			"primary_score":	999861,
			"second_score":	133658
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	335,
			"primary_score":	999861,
			"second_score":	133657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	336,
			"primary_score":	999861,
			"second_score":	133656
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	337,
			"primary_score":	999861,
			"second_score":	136452
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	338,
			"primary_score":	999861,
			"second_score":	136451
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	340,
			"primary_score":	999861,
			"second_score":	133655
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	341,
			"primary_score":	999861,
			"second_score":	134495
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	342,
			"primary_score":	999861,
			"second_score":	134494
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	344,
			"primary_score":	999861,
			"second_score":	134493
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	347,
			"primary_score":	999861,
			"second_score":	133654
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	348,
			"primary_score":	999861,
			"second_score":	133653
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	349,
			"primary_score":	999861,
			"second_score":	133651
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	350,
			"primary_score":	999861,
			"second_score":	133649
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	351,
			"primary_score":	999861,
			"second_score":	133648
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	352,
			"primary_score":	999861,
			"second_score":	133647
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	358,
			"primary_score":	999881,
			"second_score":	133301
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	359,
			"primary_score":	999881,
			"second_score":	133300
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	360,
			"primary_score":	999881,
			"second_score":	133299
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	361,
			"primary_score":	999881,
			"second_score":	133298
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	363,
			"primary_score":	999881,
			"second_score":	133297
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	369,
			"primary_score":	999881,
			"second_score":	133296
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	372,
			"primary_score":	999881,
			"second_score":	133275
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	373,
			"primary_score":	999881,
			"second_score":	133190
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	374,
			"primary_score":	999881,
			"second_score":	133183
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	375,
			"primary_score":	999881,
			"second_score":	133123
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	377,
			"primary_score":	999881,
			"second_score":	133120
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	416,
			"primary_score":	999863,
			"second_score":	165293
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	417,
			"primary_score":	999863,
			"second_score":	165292
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	418,
			"primary_score":	999863,
			"second_score":	165291
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	419,
			"primary_score":	999863,
			"second_score":	165290
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	420,
			"primary_score":	999863,
			"second_score":	165289
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	422,
			"primary_score":	999863,
			"second_score":	165288
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	428,
			"primary_score":	999863,
			"second_score":	165287
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	431,
			"primary_score":	999863,
			"second_score":	165118
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	435,
			"primary_score":	999863,
			"second_score":	165117
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	436,
			"primary_score":	999863,
			"second_score":	165116
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	438,
			"primary_score":	999863,
			"second_score":	165010
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	439,
			"primary_score":	999863,
			"second_score":	165003
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	440,
			"primary_score":	999863,
			"second_score":	164938
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	442,
			"primary_score":	999863,
			"second_score":	164935
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	444,
			"primary_score":	999863,
			"second_score":	164933
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	545,
			"primary_score":	999861,
			"second_score":	134655
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	547,
			"primary_score":	999861,
			"second_score":	134654
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	553,
			"primary_score":	999932,
			"second_score":	126899
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	555,
			"primary_score":	999932,
			"second_score":	126889
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	556,
			"primary_score":	999932,
			"second_score":	126888
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	557,
			"primary_score":	999932,
			"second_score":	126887
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	558,
			"primary_score":	999932,
			"second_score":	126885
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	559,
			"primary_score":	999932,
			"second_score":	126881
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	560,
			"primary_score":	999932,
			"second_score":	126792
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	631,
			"primary_score":	999866,
			"second_score":	132862
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	632,
			"primary_score":	999866,
			"second_score":	132861
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	633,
			"primary_score":	999866,
			"second_score":	132860
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	635,
			"primary_score":	999866,
			"second_score":	132859
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	636,
			"primary_score":	999866,
			"second_score":	132858
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	639,
			"primary_score":	999866,
			"second_score":	132857
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	644,
			"primary_score":	999866,
			"second_score":	132832
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	645,
			"primary_score":	999866,
			"second_score":	132831
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	646,
			"primary_score":	999866,
			"second_score":	132788
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	647,
			"primary_score":	999866,
			"second_score":	132787
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	648,
			"primary_score":	999866,
			"second_score":	132786
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	684,
			"primary_score":	999866,
			"second_score":	132863
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	840,
			"primary_score":	999861,
			"second_score":	134157
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	842,
			"primary_score":	999861,
			"second_score":	134147
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	843,
			"primary_score":	999861,
			"second_score":	134146
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	844,
			"primary_score":	999861,
			"second_score":	134142
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	883,
			"primary_score":	999870,
			"second_score":	133420
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	889,
			"primary_score":	999870,
			"second_score":	133419
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	896,
			"primary_score":	999866,
			"second_score":	138042
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	897,
			"primary_score":	999866,
			"second_score":	138041
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	899,
			"primary_score":	999866,
			"second_score":	138040
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	926,
			"primary_score":	999866,
			"second_score":	138039
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	928,
			"primary_score":	999866,
			"second_score":	138001
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	929,
			"primary_score":	999866,
			"second_score":	137999
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	931,
			"primary_score":	999866,
			"second_score":	137989
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	932,
			"primary_score":	999866,
			"second_score":	137988
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	988,
			"primary_score":	999866,
			"second_score":	137987
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	989,
			"primary_score":	999866,
			"second_score":	137986
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	990,
			"primary_score":	999866,
			"second_score":	137982
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	991,
			"primary_score":	999866,
			"second_score":	137978
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	992,
			"primary_score":	999866,
			"second_score":	137977
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	993,
			"primary_score":	999866,
			"second_score":	137975
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1250,
			"primary_score":	999866,
			"second_score":	138046
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1252,
			"primary_score":	999866,
			"second_score":	138045
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1255,
			"primary_score":	999866,
			"second_score":	138044
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1263,
			"primary_score":	999861,
			"second_score":	134341
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1265,
			"primary_score":	999861,
			"second_score":	134340
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1266,
			"primary_score":	999861,
			"second_score":	134333
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1272,
			"primary_score":	999861,
			"second_score":	134247
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1273,
			"primary_score":	999861,
			"second_score":	134246
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1274,
			"primary_score":	999861,
			"second_score":	134245
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1275,
			"primary_score":	999861,
			"second_score":	134244
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1276,
			"primary_score":	999861,
			"second_score":	134243
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1278,
			"primary_score":	999861,
			"second_score":	134242
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1280,
			"primary_score":	999861,
			"second_score":	134238
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1284,
			"primary_score":	999861,
			"second_score":	134237
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1285,
			"primary_score":	999870,
			"second_score":	133422
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1286,
			"primary_score":	999870,
			"second_score":	133421
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1309,
			"primary_score":	999870,
			"second_score":	133418
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1310,
			"primary_score":	999870,
			"second_score":	133417
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1311,
			"primary_score":	999870,
			"second_score":	133416
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1319,
			"primary_score":	999870,
			"second_score":	133415
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1320,
			"primary_score":	999870,
			"second_score":	133405
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1321,
			"primary_score":	999870,
			"second_score":	133404
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1326,
			"primary_score":	999870,
			"second_score":	133403
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1331,
			"primary_score":	999870,
			"second_score":	133402
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1332,
			"primary_score":	999870,
			"second_score":	133401
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1355,
			"primary_score":	999870,
			"second_score":	133400
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1357,
			"primary_score":	999870,
			"second_score":	133399
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1361,
			"primary_score":	999861,
			"second_score":	134236
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1362,
			"primary_score":	999861,
			"second_score":	134232
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1420,
			"primary_score":	999861,
			"second_score":	137903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1426,
			"primary_score":	999861,
			"second_score":	137902
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1427,
			"primary_score":	999861,
			"second_score":	137901
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1429,
			"primary_score":	999861,
			"second_score":	137900
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1432,
			"primary_score":	999861,
			"second_score":	137899
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1434,
			"primary_score":	999861,
			"second_score":	137898
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1445,
			"primary_score":	999861,
			"second_score":	137897
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1916,
			"primary_score":	999861,
			"second_score":	135622
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1917,
			"primary_score":	999861,
			"second_score":	135621
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1918,
			"primary_score":	999861,
			"second_score":	135620
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1920,
			"primary_score":	999861,
			"second_score":	135619
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1922,
			"primary_score":	999861,
			"second_score":	135610
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1932,
			"primary_score":	999861,
			"second_score":	135609
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1933,
			"primary_score":	999861,
			"second_score":	135351
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1940,
			"primary_score":	999861,
			"second_score":	135313
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1941,
			"primary_score":	999861,
			"second_score":	135294
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1943,
			"primary_score":	999861,
			"second_score":	135293
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1944,
			"primary_score":	999861,
			"second_score":	135267
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1945,
			"primary_score":	999861,
			"second_score":	135263
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1951,
			"primary_score":	999884,
			"second_score":	133437
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1952,
			"primary_score":	999884,
			"second_score":	133436
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1953,
			"primary_score":	999884,
			"second_score":	133435
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1955,
			"primary_score":	999884,
			"second_score":	133434
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1956,
			"primary_score":	999884,
			"second_score":	133350
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1958,
			"primary_score":	999884,
			"second_score":	133315
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1959,
			"primary_score":	999884,
			"second_score":	133313
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1961,
			"primary_score":	999884,
			"second_score":	133312
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1966,
			"primary_score":	999884,
			"second_score":	133311
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1967,
			"primary_score":	999884,
			"second_score":	133310
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1968,
			"primary_score":	999884,
			"second_score":	133309
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1970,
			"primary_score":	999884,
			"second_score":	133308
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1971,
			"primary_score":	999884,
			"second_score":	133307
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1974,
			"primary_score":	999884,
			"second_score":	133306
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1975,
			"primary_score":	999884,
			"second_score":	133302
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1977,
			"primary_score":	999884,
			"second_score":	133119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1979,
			"primary_score":	999884,
			"second_score":	133116
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1980,
			"primary_score":	999884,
			"second_score":	133115
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1981,
			"primary_score":	999884,
			"second_score":	133114
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1995,
			"primary_score":	999884,
			"second_score":	133113
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1996,
			"primary_score":	999884,
			"second_score":	133087
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2046,
			"primary_score":	999861,
			"second_score":	135950
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2047,
			"primary_score":	999861,
			"second_score":	135949
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2048,
			"primary_score":	999861,
			"second_score":	135948
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2049,
			"primary_score":	999861,
			"second_score":	135947
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2051,
			"primary_score":	999861,
			"second_score":	135946
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2058,
			"primary_score":	999861,
			"second_score":	135945
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2062,
			"primary_score":	999861,
			"second_score":	135944
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2082,
			"primary_score":	999861,
			"second_score":	135943
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2097,
			"primary_score":	999863,
			"second_score":	165303
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2098,
			"primary_score":	999863,
			"second_score":	165302
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2099,
			"primary_score":	999863,
			"second_score":	165301
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2100,
			"primary_score":	999863,
			"second_score":	165300
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2101,
			"primary_score":	999863,
			"second_score":	165299
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2103,
			"primary_score":	999863,
			"second_score":	165298
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2104,
			"primary_score":	999863,
			"second_score":	165297
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2146,
			"primary_score":	999863,
			"second_score":	165296
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2171,
			"primary_score":	999866,
			"second_score":	165330
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2172,
			"primary_score":	999866,
			"second_score":	165329
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2174,
			"primary_score":	999866,
			"second_score":	165328
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2183,
			"primary_score":	999866,
			"second_score":	165327
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2184,
			"primary_score":	999866,
			"second_score":	165325
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2186,
			"primary_score":	999866,
			"second_score":	165315
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2187,
			"primary_score":	999866,
			"second_score":	165314
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2188,
			"primary_score":	999866,
			"second_score":	165313
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2189,
			"primary_score":	999866,
			"second_score":	165312
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2190,
			"primary_score":	999866,
			"second_score":	165311
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2191,
			"primary_score":	999866,
			"second_score":	165310
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2193,
			"primary_score":	999866,
			"second_score":	165309
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2194,
			"primary_score":	999866,
			"second_score":	165304
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2204,
			"primary_score":	999866,
			"second_score":	165295
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2205,
			"primary_score":	999866,
			"second_score":	165294
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2207,
			"primary_score":	999866,
			"second_score":	164932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2212,
			"primary_score":	999866,
			"second_score":	164931
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2213,
			"primary_score":	999866,
			"second_score":	164929
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2214,
			"primary_score":	999866,
			"second_score":	164928
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2215,
			"primary_score":	999866,
			"second_score":	164923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2314,
			"primary_score":	999861,
			"second_score":	133452
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2318,
			"primary_score":	999861,
			"second_score":	133451
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2413,
			"primary_score":	999861,
			"second_score":	134517
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2415,
			"primary_score":	999861,
			"second_score":	134516
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2422,
			"primary_score":	999861,
			"second_score":	134515
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2423,
			"primary_score":	999861,
			"second_score":	134505
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2424,
			"primary_score":	999861,
			"second_score":	134504
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2425,
			"primary_score":	999861,
			"second_score":	134503
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2426,
			"primary_score":	999861,
			"second_score":	134444
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2427,
			"primary_score":	999861,
			"second_score":	134441
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2429,
			"primary_score":	999863,
			"second_score":	132473
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2430,
			"primary_score":	999863,
			"second_score":	132472
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2434,
			"primary_score":	999861,
			"second_score":	134439
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2435,
			"primary_score":	999861,
			"second_score":	134437
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2436,
			"primary_score":	999861,
			"second_score":	134436
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2437,
			"primary_score":	999861,
			"second_score":	134431
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2439,
			"primary_score":	999861,
			"second_score":	134430
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2440,
			"primary_score":	999861,
			"second_score":	134408
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2446,
			"primary_score":	999861,
			"second_score":	134670
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2447,
			"primary_score":	999861,
			"second_score":	134669
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2448,
			"primary_score":	999861,
			"second_score":	134668
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2449,
			"primary_score":	999861,
			"second_score":	134667
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2450,
			"primary_score":	999861,
			"second_score":	134666
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2452,
			"primary_score":	999861,
			"second_score":	134665
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2453,
			"primary_score":	999861,
			"second_score":	134661
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2455,
			"primary_score":	999861,
			"second_score":	134660
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2470,
			"primary_score":	999861,
			"second_score":	134659
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2471,
			"primary_score":	999861,
			"second_score":	134658
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2484,
			"primary_score":	999861,
			"second_score":	134657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2487,
			"primary_score":	999883,
			"second_score":	132626
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2490,
			"primary_score":	999861,
			"second_score":	134656
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2492,
			"primary_score":	999861,
			"second_score":	134653
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2493,
			"primary_score":	999861,
			"second_score":	134652
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2494,
			"primary_score":	999861,
			"second_score":	136326
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2498,
			"primary_score":	999861,
			"second_score":	134651
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2511,
			"primary_score":	999861,
			"second_score":	134650
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2512,
			"primary_score":	999861,
			"second_score":	134649
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2515,
			"primary_score":	999861,
			"second_score":	134611
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2520,
			"primary_score":	999910,
			"second_score":	132618
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2522,
			"primary_score":	999897,
			"second_score":	132580
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2529,
			"primary_score":	999861,
			"second_score":	134610
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2531,
			"primary_score":	999861,
			"second_score":	134600
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2532,
			"primary_score":	999861,
			"second_score":	134599
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2533,
			"primary_score":	999861,
			"second_score":	134598
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2538,
			"primary_score":	999861,
			"second_score":	136312
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2539,
			"primary_score":	999861,
			"second_score":	136311
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2541,
			"primary_score":	999883,
			"second_score":	132567
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2544,
			"primary_score":	999861,
			"second_score":	134597
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2545,
			"primary_score":	999861,
			"second_score":	134596
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2546,
			"primary_score":	999861,
			"second_score":	134592
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2547,
			"primary_score":	999861,
			"second_score":	134591
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2600,
			"primary_score":	999861,
			"second_score":	133690
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2601,
			"primary_score":	999861,
			"second_score":	133689
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2603,
			"primary_score":	999861,
			"second_score":	133688
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2611,
			"primary_score":	999861,
			"second_score":	133687
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2617,
			"primary_score":	999861,
			"second_score":	133685
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2618,
			"primary_score":	999861,
			"second_score":	133681
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2621,
			"primary_score":	999861,
			"second_score":	133677
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2622,
			"primary_score":	999861,
			"second_score":	133675
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2627,
			"primary_score":	999861,
			"second_score":	133674
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2629,
			"primary_score":	999861,
			"second_score":	133664
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2631,
			"primary_score":	999861,
			"second_score":	133663
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2632,
			"primary_score":	999861,
			"second_score":	133662
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2634,
			"primary_score":	999861,
			"second_score":	133646
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2638,
			"primary_score":	999861,
			"second_score":	119454
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2639,
			"primary_score":	999861,
			"second_score":	119453
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2642,
			"primary_score":	999861,
			"second_score":	133645
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4933,
			"primary_score":	999870,
			"second_score":	133755
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4934,
			"primary_score":	999870,
			"second_score":	133754
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4936,
			"primary_score":	999870,
			"second_score":	133753
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4938,
			"primary_score":	999870,
			"second_score":	133749
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4939,
			"primary_score":	999870,
			"second_score":	133748
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4980,
			"primary_score":	999870,
			"second_score":	133747
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4990,
			"primary_score":	999870,
			"second_score":	133744
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4991,
			"primary_score":	999870,
			"second_score":	133740
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4992,
			"primary_score":	999870,
			"second_score":	133739
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4993,
			"primary_score":	999870,
			"second_score":	133738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4994,
			"primary_score":	999870,
			"second_score":	133736
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4995,
			"primary_score":	999870,
			"second_score":	133732
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4996,
			"primary_score":	999870,
			"second_score":	133669
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4997,
			"primary_score":	999870,
			"second_score":	133668
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4998,
			"primary_score":	999870,
			"second_score":	133665
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5000,
			"primary_score":	999870,
			"second_score":	133662
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5002,
			"primary_score":	999870,
			"second_score":	133657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5021,
			"primary_score":	999870,
			"second_score":	132371
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5027,
			"primary_score":	999870,
			"second_score":	132293
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5028,
			"primary_score":	999870,
			"second_score":	132292
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5030,
			"primary_score":	999870,
			"second_score":	132291
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5031,
			"primary_score":	999870,
			"second_score":	132287
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5033,
			"primary_score":	999870,
			"second_score":	132286
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5039,
			"primary_score":	999866,
			"second_score":	164895
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5040,
			"primary_score":	999866,
			"second_score":	164894
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5042,
			"primary_score":	999866,
			"second_score":	164893
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5043,
			"primary_score":	999866,
			"second_score":	164891
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5044,
			"primary_score":	999866,
			"second_score":	164881
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5045,
			"primary_score":	999866,
			"second_score":	164880
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5046,
			"primary_score":	999866,
			"second_score":	164879
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5047,
			"primary_score":	999866,
			"second_score":	164877
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5048,
			"primary_score":	999866,
			"second_score":	164873
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5050,
			"primary_score":	999866,
			"second_score":	164872
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5056,
			"primary_score":	999866,
			"second_score":	164161
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5058,
			"primary_score":	999866,
			"second_score":	164160
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5059,
			"primary_score":	999866,
			"second_score":	164112
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5061,
			"primary_score":	999866,
			"second_score":	164104
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5062,
			"primary_score":	999866,
			"second_score":	164102
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5068,
			"primary_score":	999861,
			"second_score":	137214
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5070,
			"primary_score":	999861,
			"second_score":	137213
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5083,
			"primary_score":	999861,
			"second_score":	137212
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5084,
			"primary_score":	999992,
			"second_score":	135919
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5086,
			"primary_score":	999992,
			"second_score":	135780
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5087,
			"primary_score":	999992,
			"second_score":	135759
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5088,
			"primary_score":	999992,
			"second_score":	135758
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5089,
			"primary_score":	999992,
			"second_score":	135739
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5095,
			"primary_score":	999861,
			"second_score":	137185
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5098,
			"primary_score":	999861,
			"second_score":	137184
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5103,
			"primary_score":	999861,
			"second_score":	137183
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5111,
			"primary_score":	999861,
			"second_score":	137215
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5113,
			"primary_score":	999861,
			"second_score":	137182
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5114,
			"primary_score":	999861,
			"second_score":	137181
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5115,
			"primary_score":	999861,
			"second_score":	137155
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5116,
			"primary_score":	999861,
			"second_score":	137154
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5117,
			"primary_score":	999861,
			"second_score":	137153
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5118,
			"primary_score":	999861,
			"second_score":	137119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5119,
			"primary_score":	999861,
			"second_score":	137116
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5127,
			"primary_score":	999861,
			"second_score":	137232
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5128,
			"primary_score":	999861,
			"second_score":	137231
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5129,
			"primary_score":	999861,
			"second_score":	137230
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5130,
			"primary_score":	999861,
			"second_score":	137229
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5131,
			"primary_score":	999861,
			"second_score":	137228
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5133,
			"primary_score":	999861,
			"second_score":	137227
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5180,
			"primary_score":	999861,
			"second_score":	137226
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5201,
			"primary_score":	999861,
			"second_score":	137225
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5203,
			"primary_score":	999861,
			"second_score":	137216
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5204,
			"primary_score":	999861,
			"second_score":	137115
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5628,
			"primary_score":	999872,
			"second_score":	126735
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5629,
			"primary_score":	999872,
			"second_score":	126731
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5630,
			"primary_score":	999872,
			"second_score":	126730
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5632,
			"primary_score":	999872,
			"second_score":	126720
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5633,
			"primary_score":	999872,
			"second_score":	126719
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5634,
			"primary_score":	999872,
			"second_score":	126718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5635,
			"primary_score":	999872,
			"second_score":	126716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5636,
			"primary_score":	999872,
			"second_score":	126712
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5637,
			"primary_score":	999872,
			"second_score":	126711
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5638,
			"primary_score":	999872,
			"second_score":	126710
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5640,
			"primary_score":	999872,
			"second_score":	126705
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6094,
			"primary_score":	999861,
			"second_score":	129804
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6095,
			"primary_score":	999861,
			"second_score":	129802
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6097,
			"primary_score":	999861,
			"second_score":	129801
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6099,
			"primary_score":	999861,
			"second_score":	129791
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6100,
			"primary_score":	999861,
			"second_score":	129790
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6101,
			"primary_score":	999861,
			"second_score":	129786
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6102,
			"primary_score":	999861,
			"second_score":	129785
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6103,
			"primary_score":	999861,
			"second_score":	129784
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6105,
			"primary_score":	999861,
			"second_score":	129779
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6111,
			"primary_score":	999861,
			"second_score":	126977
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6113,
			"primary_score":	999861,
			"second_score":	126967
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6115,
			"primary_score":	999861,
			"second_score":	126965
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6116,
			"primary_score":	999861,
			"second_score":	126964
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6117,
			"primary_score":	999861,
			"second_score":	126963
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6118,
			"primary_score":	999861,
			"second_score":	126961
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6119,
			"primary_score":	999861,
			"second_score":	126957
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6121,
			"primary_score":	999861,
			"second_score":	126956
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6122,
			"primary_score":	999861,
			"second_score":	126951
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6124,
			"primary_score":	999861,
			"second_score":	126949
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6125,
			"primary_score":	999861,
			"second_score":	126939
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6126,
			"primary_score":	999861,
			"second_score":	126938
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6127,
			"primary_score":	999861,
			"second_score":	126937
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6133,
			"primary_score":	999861,
			"second_score":	126547
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6135,
			"primary_score":	999861,
			"second_score":	126537
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6136,
			"primary_score":	999861,
			"second_score":	126536
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6137,
			"primary_score":	999861,
			"second_score":	126532
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6138,
			"primary_score":	999861,
			"second_score":	126434
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6140,
			"primary_score":	999861,
			"second_score":	126433
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6142,
			"primary_score":	999861,
			"second_score":	126431
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6144,
			"primary_score":	999861,
			"second_score":	126426
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6150,
			"primary_score":	999861,
			"second_score":	133917
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6152,
			"primary_score":	999861,
			"second_score":	133916
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6153,
			"primary_score":	999861,
			"second_score":	133915
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6166,
			"primary_score":	999861,
			"second_score":	135266
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6168,
			"primary_score":	999861,
			"second_score":	135265
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6169,
			"primary_score":	999861,
			"second_score":	135264
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6182,
			"primary_score":	999861,
			"second_score":	134406
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6184,
			"primary_score":	999861,
			"second_score":	134405
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6185,
			"primary_score":	999861,
			"second_score":	134404
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6198,
			"primary_score":	999861,
			"second_score":	133849
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6219,
			"primary_score":	999866,
			"second_score":	132833
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6257,
			"primary_score":	999861,
			"second_score":	133781
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6259,
			"primary_score":	999861,
			"second_score":	133780
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6260,
			"primary_score":	999861,
			"second_score":	131374
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6261,
			"primary_score":	999861,
			"second_score":	131373
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6264,
			"primary_score":	999861,
			"second_score":	133779
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6266,
			"primary_score":	999861,
			"second_score":	133778
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6267,
			"primary_score":	999861,
			"second_score":	133755
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6276,
			"primary_score":	999861,
			"second_score":	131533
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6278,
			"primary_score":	999861,
			"second_score":	133937
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6281,
			"primary_score":	999861,
			"second_score":	133936
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6282,
			"primary_score":	999861,
			"second_score":	133935
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6291,
			"primary_score":	999861,
			"second_score":	133754
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6292,
			"primary_score":	999861,
			"second_score":	133751
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6293,
			"primary_score":	999861,
			"second_score":	133750
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6371,
			"primary_score":	999863,
			"second_score":	122876
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6374,
			"primary_score":	999863,
			"second_score":	122875
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6377,
			"primary_score":	999863,
			"second_score":	122874
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6381,
			"primary_score":	999863,
			"second_score":	122873
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6608,
			"primary_score":	999861,
			"second_score":	133825
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6616,
			"primary_score":	999861,
			"second_score":	133733
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6617,
			"primary_score":	999861,
			"second_score":	133732
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6622,
			"primary_score":	999861,
			"second_score":	133731
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6632,
			"primary_score":	999861,
			"second_score":	133735
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6633,
			"primary_score":	999861,
			"second_score":	133734
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6641,
			"primary_score":	999962,
			"second_score":	125259
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6642,
			"primary_score":	999962,
			"second_score":	125258
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6678,
			"primary_score":	999962,
			"second_score":	125257
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6684,
			"primary_score":	999962,
			"second_score":	125256
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6687,
			"primary_score":	999962,
			"second_score":	125255
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6695,
			"primary_score":	999962,
			"second_score":	125254
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6696,
			"primary_score":	999962,
			"second_score":	125240
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6698,
			"primary_score":	999962,
			"second_score":	125239
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6717,
			"primary_score":	999962,
			"second_score":	125238
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6718,
			"primary_score":	999962,
			"second_score":	125237
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6720,
			"primary_score":	999962,
			"second_score":	125236
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6725,
			"primary_score":	999962,
			"second_score":	125235
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6727,
			"primary_score":	999962,
			"second_score":	125234
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	32,
			"primary_score":	999861,
			"second_score":	6291
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	33,
			"primary_score":	999861,
			"second_score":	113954
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	35,
			"primary_score":	999861,
			"second_score":	6290
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	60,
			"primary_score":	999861,
			"second_score":	113736
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	171,
			"primary_score":	999861,
			"second_score":	114470
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	174,
			"primary_score":	999861,
			"second_score":	114469
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	73,
			"primary_score":	999861,
			"second_score":	120835
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	71,
			"primary_score":	999861,
			"second_score":	125165
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	72,
			"primary_score":	999861,
			"second_score":	125163
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	73,
			"primary_score":	999861,
			"second_score":	125161
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	74,
			"primary_score":	999861,
			"second_score":	125159
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	177,
			"primary_score":	999861,
			"second_score":	124988
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	182,
			"primary_score":	999861,
			"second_score":	125167
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	184,
			"primary_score":	999861,
			"second_score":	125166
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	185,
			"primary_score":	999861,
			"second_score":	125158
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	273,
			"primary_score":	999870,
			"second_score":	123269
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	275,
			"primary_score":	999870,
			"second_score":	123268
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	279,
			"primary_score":	999870,
			"second_score":	123267
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	280,
			"primary_score":	999870,
			"second_score":	123258
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	281,
			"primary_score":	999870,
			"second_score":	123256
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	283,
			"primary_score":	999870,
			"second_score":	123132
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	298,
			"primary_score":	999869,
			"second_score":	121359
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	300,
			"primary_score":	999869,
			"second_score":	121358
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	303,
			"primary_score":	999869,
			"second_score":	121357
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	439,
			"primary_score":	999870,
			"second_score":	122470
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	441,
			"primary_score":	999870,
			"second_score":	122469
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	442,
			"primary_score":	999870,
			"second_score":	123270
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	444,
			"primary_score":	999950,
			"second_score":	122468
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	567,
			"primary_score":	999947,
			"second_score":	122883
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	569,
			"primary_score":	999947,
			"second_score":	122767
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	570,
			"primary_score":	999947,
			"second_score":	122766
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	573,
			"primary_score":	999947,
			"second_score":	122765
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	602,
			"primary_score":	999861,
			"second_score":	125371
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	603,
			"primary_score":	999861,
			"second_score":	125370
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	604,
			"primary_score":	999861,
			"second_score":	125369
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	606,
			"primary_score":	999861,
			"second_score":	125368
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	608,
			"primary_score":	999995,
			"second_score":	121265
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	611,
			"primary_score":	999861,
			"second_score":	125367
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	613,
			"primary_score":	999861,
			"second_score":	125366
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	614,
			"primary_score":	999947,
			"second_score":	122887
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	616,
			"primary_score":	999947,
			"second_score":	122886
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	620,
			"primary_score":	999947,
			"second_score":	122885
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	621,
			"primary_score":	999947,
			"second_score":	122884
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	622,
			"primary_score":	999947,
			"second_score":	122764
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	629,
			"primary_score":	999861,
			"second_score":	125365
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	638,
			"primary_score":	999861,
			"second_score":	125364
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	856,
			"primary_score":	999870,
			"second_score":	122462
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	857,
			"primary_score":	999870,
			"second_score":	122461
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	859,
			"primary_score":	999870,
			"second_score":	122460
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	865,
			"primary_score":	999870,
			"second_score":	122459
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	866,
			"primary_score":	999870,
			"second_score":	122457
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	867,
			"primary_score":	999971,
			"second_score":	122455
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	869,
			"primary_score":	999971,
			"second_score":	122454
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	870,
			"primary_score":	999971,
			"second_score":	122452
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	871,
			"primary_score":	999971,
			"second_score":	122450
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	872,
			"primary_score":	999971,
			"second_score":	122449
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	873,
			"primary_score":	999971,
			"second_score":	122448
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	874,
			"primary_score":	999971,
			"second_score":	122446
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	875,
			"primary_score":	999971,
			"second_score":	122416
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	879,
			"primary_score":	999971,
			"second_score":	122397
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	884,
			"primary_score":	999870,
			"second_score":	123119
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	885,
			"primary_score":	999870,
			"second_score":	123117
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	886,
			"primary_score":	999870,
			"second_score":	123115
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	893,
			"primary_score":	999870,
			"second_score":	123113
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	894,
			"primary_score":	999870,
			"second_score":	123112
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	895,
			"primary_score":	999870,
			"second_score":	123110
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	896,
			"primary_score":	999870,
			"second_score":	123108
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	82,
			"primary_score":	999861,
			"second_score":	125053
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	83,
			"primary_score":	999861,
			"second_score":	125051
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	85,
			"primary_score":	999861,
			"second_score":	125050
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	86,
			"primary_score":	999861,
			"second_score":	125049
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	87,
			"primary_score":	999861,
			"second_score":	125047
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	88,
			"primary_score":	999861,
			"second_score":	125021
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	91,
			"primary_score":	999861,
			"second_score":	123012
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	93,
			"primary_score":	999861,
			"second_score":	123011
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	94,
			"primary_score":	999861,
			"second_score":	123009
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	97,
			"primary_score":	999861,
			"second_score":	123007
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	103,
			"primary_score":	999861,
			"second_score":	120631
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	105,
			"primary_score":	999861,
			"second_score":	120630
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	113,
			"primary_score":	999861,
			"second_score":	120629
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	155,
			"primary_score":	999861,
			"second_score":	120628
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	199,
			"primary_score":	999861,
			"second_score":	114570
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	201,
			"primary_score":	999861,
			"second_score":	114569
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	202,
			"primary_score":	999861,
			"second_score":	114568
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	203,
			"primary_score":	999861,
			"second_score":	114567
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	204,
			"primary_score":	999861,
			"second_score":	114522
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	217,
			"primary_score":	999861,
			"second_score":	125320
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	222,
			"primary_score":	999861,
			"second_score":	147788
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	223,
			"primary_score":	999861,
			"second_score":	147786
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	245,
			"primary_score":	999861,
			"second_score":	133189
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	247,
			"primary_score":	999861,
			"second_score":	133188
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	250,
			"primary_score":	999861,
			"second_score":	133187
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	265,
			"primary_score":	999861,
			"second_score":	133186
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	267,
			"primary_score":	999861,
			"second_score":	133184
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	268,
			"primary_score":	999861,
			"second_score":	133183
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	269,
			"primary_score":	999861,
			"second_score":	133182
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	274,
			"primary_score":	999861,
			"second_score":	125178
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	280,
			"primary_score":	999861,
			"second_score":	125177
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	286,
			"primary_score":	999861,
			"second_score":	120844
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	293,
			"primary_score":	999861,
			"second_score":	120843
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	297,
			"primary_score":	999861,
			"second_score":	120842
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	305,
			"primary_score":	999861,
			"second_score":	125416
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	327,
			"primary_score":	999861,
			"second_score":	125415
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	328,
			"primary_score":	999861,
			"second_score":	125414
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	333,
			"primary_score":	999861,
			"second_score":	125217
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	334,
			"primary_score":	999861,
			"second_score":	125216
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	336,
			"primary_score":	999861,
			"second_score":	125215
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	337,
			"primary_score":	999861,
			"second_score":	125214
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	338,
			"primary_score":	999861,
			"second_score":	125213
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	339,
			"primary_score":	999861,
			"second_score":	125212
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	341,
			"primary_score":	999861,
			"second_score":	125179
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	367,
			"primary_score":	999861,
			"second_score":	125426
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	369,
			"primary_score":	999861,
			"second_score":	125425
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	371,
			"primary_score":	999861,
			"second_score":	125420
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	372,
			"primary_score":	999861,
			"second_score":	125419
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	373,
			"primary_score":	999861,
			"second_score":	125418
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	107,
			"primary_score":	999861,
			"second_score":	114504
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	119,
			"primary_score":	999861,
			"second_score":	114488
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	203,
			"primary_score":	999861,
			"second_score":	119024
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	204,
			"primary_score":	999869,
			"second_score":	119320
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	206,
			"primary_score":	999861,
			"second_score":	119023
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	213,
			"primary_score":	999861,
			"second_score":	120235
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	214,
			"primary_score":	999861,
			"second_score":	120229
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	215,
			"primary_score":	999861,
			"second_score":	120228
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	216,
			"primary_score":	999861,
			"second_score":	119078
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	217,
			"primary_score":	999861,
			"second_score":	119075
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	219,
			"primary_score":	999861,
			"second_score":	119013
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	223,
			"primary_score":	999861,
			"second_score":	119010
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	229,
			"primary_score":	999861,
			"second_score":	118157
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	246,
			"primary_score":	999861,
			"second_score":	118151
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	247,
			"primary_score":	999861,
			"second_score":	118148
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	248,
			"primary_score":	999861,
			"second_score":	114655
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	250,
			"primary_score":	999861,
			"second_score":	114653
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	251,
			"primary_score":	999861,
			"second_score":	114647
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	254,
			"primary_score":	999861,
			"second_score":	114646
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	261,
			"primary_score":	999861,
			"second_score":	114645
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	268,
			"primary_score":	999861,
			"second_score":	114644
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	269,
			"primary_score":	999861,
			"second_score":	114640
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	270,
			"primary_score":	999861,
			"second_score":	114635
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	271,
			"primary_score":	999861,
			"second_score":	114626
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	272,
			"primary_score":	999861,
			"second_score":	114617
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	274,
			"primary_score":	999861,
			"second_score":	114615
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	284,
			"primary_score":	999861,
			"second_score":	114609
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	288,
			"primary_score":	999861,
			"second_score":	114608
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	289,
			"primary_score":	999861,
			"second_score":	114591
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	290,
			"primary_score":	999861,
			"second_score":	114574
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	293,
			"primary_score":	999861,
			"second_score":	114571
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	295,
			"primary_score":	999861,
			"second_score":	114521
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	298,
			"primary_score":	999861,
			"second_score":	114513
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	302,
			"primary_score":	999861,
			"second_score":	114512
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	303,
			"primary_score":	999861,
			"second_score":	114496
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	306,
			"primary_score":	999861,
			"second_score":	114480
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	311,
			"primary_score":	999861,
			"second_score":	114479
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	313,
			"primary_score":	999861,
			"second_score":	114477
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	314,
			"primary_score":	999861,
			"second_score":	114471
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	315,
			"primary_score":	999861,
			"second_score":	113728
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	317,
			"primary_score":	999861,
			"second_score":	113726
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	322,
			"primary_score":	999861,
			"second_score":	113720
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	324,
			"primary_score":	999861,
			"second_score":	113651
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	325,
			"primary_score":	999861,
			"second_score":	113630
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	326,
			"primary_score":	999861,
			"second_score":	113626
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	327,
			"primary_score":	999861,
			"second_score":	113624
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	328,
			"primary_score":	999861,
			"second_score":	113622
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	329,
			"primary_score":	999861,
			"second_score":	113554
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	333,
			"primary_score":	999861,
			"second_score":	113553
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	335,
			"primary_score":	999861,
			"second_score":	113551
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	337,
			"primary_score":	999861,
			"second_score":	113546
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	397,
			"primary_score":	999861,
			"second_score":	124756
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	398,
			"primary_score":	999861,
			"second_score":	124755
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	407,
			"primary_score":	999861,
			"second_score":	124753
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	411,
			"primary_score":	999861,
			"second_score":	124752
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	412,
			"primary_score":	999861,
			"second_score":	124751
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	421,
			"primary_score":	999861,
			"second_score":	124758
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	430,
			"primary_score":	999861,
			"second_score":	114771
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	431,
			"primary_score":	999861,
			"second_score":	114769
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	432,
			"primary_score":	999861,
			"second_score":	114767
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	434,
			"primary_score":	999861,
			"second_score":	114766
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	435,
			"primary_score":	999861,
			"second_score":	114765
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	436,
			"primary_score":	999861,
			"second_score":	114752
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	437,
			"primary_score":	999861,
			"second_score":	114718
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	440,
			"primary_score":	999861,
			"second_score":	115525
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	442,
			"primary_score":	999861,
			"second_score":	115524
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	443,
			"primary_score":	999861,
			"second_score":	115522
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	446,
			"primary_score":	999861,
			"second_score":	115520
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	456,
			"primary_score":	999861,
			"second_score":	15292
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	457,
			"primary_score":	999861,
			"second_score":	15290
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	458,
			"primary_score":	999861,
			"second_score":	15288
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	459,
			"primary_score":	999861,
			"second_score":	15286
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	460,
			"primary_score":	999861,
			"second_score":	17651
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	461,
			"primary_score":	999861,
			"second_score":	17649
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1032,
			"primary_score":	999863,
			"second_score":	122869
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1033,
			"primary_score":	999863,
			"second_score":	122868
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1034,
			"primary_score":	999863,
			"second_score":	122867
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1035,
			"primary_score":	999863,
			"second_score":	122866
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1036,
			"primary_score":	999863,
			"second_score":	122865
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1037,
			"primary_score":	999863,
			"second_score":	122864
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1038,
			"primary_score":	999863,
			"second_score":	122863
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1039,
			"primary_score":	999863,
			"second_score":	122862
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1040,
			"primary_score":	999863,
			"second_score":	122861
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1041,
			"primary_score":	999863,
			"second_score":	122860
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1042,
			"primary_score":	999863,
			"second_score":	122859
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1043,
			"primary_score":	999863,
			"second_score":	122858
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1045,
			"primary_score":	999863,
			"second_score":	122857
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1046,
			"primary_score":	999863,
			"second_score":	130174
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1047,
			"primary_score":	999863,
			"second_score":	130173
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1048,
			"primary_score":	999863,
			"second_score":	130172
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1050,
			"primary_score":	999946,
			"second_score":	122856
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1054,
			"primary_score":	999946,
			"second_score":	122855
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1055,
			"primary_score":	999946,
			"second_score":	122854
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1056,
			"primary_score":	999946,
			"second_score":	122798
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1058,
			"primary_score":	999946,
			"second_score":	122797
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1063,
			"primary_score":	999946,
			"second_score":	122796
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1066,
			"primary_score":	999863,
			"second_score":	122783
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1067,
			"primary_score":	999863,
			"second_score":	122772
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1068,
			"primary_score":	999946,
			"second_score":	122771
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1070,
			"primary_score":	999863,
			"second_score":	122769
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1155,
			"primary_score":	999861,
			"second_score":	121701
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1156,
			"primary_score":	999861,
			"second_score":	121700
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1157,
			"primary_score":	999861,
			"second_score":	121699
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1158,
			"primary_score":	999861,
			"second_score":	121698
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1159,
			"primary_score":	999861,
			"second_score":	121697
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1161,
			"primary_score":	999861,
			"second_score":	121696
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1169,
			"primary_score":	999861,
			"second_score":	121695
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1170,
			"primary_score":	999861,
			"second_score":	121694
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1172,
			"primary_score":	999861,
			"second_score":	121693
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1176,
			"primary_score":	999861,
			"second_score":	121692
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1177,
			"primary_score":	999861,
			"second_score":	121691
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1178,
			"primary_score":	999861,
			"second_score":	121690
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1179,
			"primary_score":	999861,
			"second_score":	119203
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1181,
			"primary_score":	999861,
			"second_score":	119202
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1182,
			"primary_score":	999861,
			"second_score":	119201
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1183,
			"primary_score":	999861,
			"second_score":	119200
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1184,
			"primary_score":	999861,
			"second_score":	119199
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1185,
			"primary_score":	999861,
			"second_score":	119198
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1187,
			"primary_score":	999861,
			"second_score":	119197
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1188,
			"primary_score":	999861,
			"second_score":	119196
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1189,
			"primary_score":	999861,
			"second_score":	119195
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1190,
			"primary_score":	999861,
			"second_score":	119194
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1193,
			"primary_score":	999861,
			"second_score":	119193
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1195,
			"primary_score":	999861,
			"second_score":	119192
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1197,
			"primary_score":	999861,
			"second_score":	118828
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1198,
			"primary_score":	999861,
			"second_score":	118827
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1199,
			"primary_score":	999861,
			"second_score":	118826
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1202,
			"primary_score":	999861,
			"second_score":	118825
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1210,
			"primary_score":	999861,
			"second_score":	118794
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1211,
			"primary_score":	999861,
			"second_score":	118793
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1212,
			"primary_score":	999861,
			"second_score":	118792
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1213,
			"primary_score":	999861,
			"second_score":	118791
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1214,
			"primary_score":	999861,
			"second_score":	118702
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1215,
			"primary_score":	999861,
			"second_score":	118683
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1216,
			"primary_score":	999861,
			"second_score":	118682
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1220,
			"primary_score":	999861,
			"second_score":	118681
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1223,
			"primary_score":	999861,
			"second_score":	118680
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1235,
			"primary_score":	999861,
			"second_score":	121703
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1237,
			"primary_score":	999861,
			"second_score":	121702
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1238,
			"primary_score":	999861,
			"second_score":	118679
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1242,
			"primary_score":	999861,
			"second_score":	118678
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1248,
			"primary_score":	999861,
			"second_score":	121704
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1510,
			"primary_score":	999861,
			"second_score":	103410
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1528,
			"primary_score":	999947,
			"second_score":	122882
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1529,
			"primary_score":	999947,
			"second_score":	122881
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1530,
			"primary_score":	999947,
			"second_score":	122880
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1532,
			"primary_score":	999947,
			"second_score":	122879
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1534,
			"primary_score":	999947,
			"second_score":	122878
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1555,
			"primary_score":	999947,
			"second_score":	122877
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1556,
			"primary_score":	999947,
			"second_score":	122872
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1560,
			"primary_score":	999947,
			"second_score":	122871
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1563,
			"primary_score":	999947,
			"second_score":	122870
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1577,
			"primary_score":	999947,
			"second_score":	122768
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1583,
			"primary_score":	999863,
			"second_score":	130190
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1584,
			"primary_score":	999863,
			"second_score":	130189
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1586,
			"primary_score":	999863,
			"second_score":	130188
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1600,
			"primary_score":	999863,
			"second_score":	130156
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	182,
			"primary_score":	999861,
			"second_score":	14748
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	183,
			"primary_score":	999861,
			"second_score":	14745
		}, {
			"file":	"Zend/zend_float.c",
			"line":	44,
			"primary_score":	999861,
			"second_score":	113550
		}, {
			"file":	"Zend/zend_float.c",
			"line":	45,
			"primary_score":	999861,
			"second_score":	113549
		}, {
			"file":	"Zend/zend_float.c",
			"line":	48,
			"primary_score":	999861,
			"second_score":	113547
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	35,
			"primary_score":	999861,
			"second_score":	3139
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	36,
			"primary_score":	999861,
			"second_score":	3138
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	37,
			"primary_score":	999861,
			"second_score":	3137
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	84,
			"primary_score":	999861,
			"second_score":	3140
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	132,
			"primary_score":	999861,
			"second_score":	115557
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	142,
			"primary_score":	999861,
			"second_score":	115556
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	143,
			"primary_score":	999866,
			"second_score":	121036
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	144,
			"primary_score":	999866,
			"second_score":	121028
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	147,
			"primary_score":	999861,
			"second_score":	115555
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	149,
			"primary_score":	999861,
			"second_score":	115554
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	150,
			"primary_score":	999861,
			"second_score":	118200
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	152,
			"primary_score":	999861,
			"second_score":	118199
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	153,
			"primary_score":	999861,
			"second_score":	118198
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	155,
			"primary_score":	999861,
			"second_score":	118197
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	156,
			"primary_score":	999861,
			"second_score":	118257
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	176,
			"primary_score":	999861,
			"second_score":	118193
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	177,
			"primary_score":	999861,
			"second_score":	118192
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	178,
			"primary_score":	999861,
			"second_score":	118191
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	179,
			"primary_score":	999861,
			"second_score":	118190
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	181,
			"primary_score":	999861,
			"second_score":	118189
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	183,
			"primary_score":	999861,
			"second_score":	118188
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	184,
			"primary_score":	999861,
			"second_score":	118187
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	186,
			"primary_score":	999861,
			"second_score":	118186
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	187,
			"primary_score":	999861,
			"second_score":	118185
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	188,
			"primary_score":	999861,
			"second_score":	118184
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	195,
			"primary_score":	999866,
			"second_score":	121033
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	197,
			"primary_score":	999866,
			"second_score":	121032
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	202,
			"primary_score":	999866,
			"second_score":	121031
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	204,
			"primary_score":	999866,
			"second_score":	121030
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	205,
			"primary_score":	999866,
			"second_score":	121029
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	206,
			"primary_score":	999866,
			"second_score":	123084
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	207,
			"primary_score":	999866,
			"second_score":	123083
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	208,
			"primary_score":	999866,
			"second_score":	123082
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	210,
			"primary_score":	999866,
			"second_score":	123081
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	212,
			"primary_score":	999866,
			"second_score":	123080
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	213,
			"primary_score":	999866,
			"second_score":	123079
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	214,
			"primary_score":	999866,
			"second_score":	123078
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	232,
			"primary_score":	999866,
			"second_score":	123077
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	233,
			"primary_score":	999866,
			"second_score":	123076
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	234,
			"primary_score":	999866,
			"second_score":	123075
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	235,
			"primary_score":	999866,
			"second_score":	123074
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	237,
			"primary_score":	999866,
			"second_score":	123073
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	239,
			"primary_score":	999866,
			"second_score":	123072
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	240,
			"primary_score":	999866,
			"second_score":	123071
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	242,
			"primary_score":	999866,
			"second_score":	123070
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	243,
			"primary_score":	999866,
			"second_score":	123069
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	244,
			"primary_score":	999866,
			"second_score":	123068
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	251,
			"primary_score":	999861,
			"second_score":	114763
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	253,
			"primary_score":	999861,
			"second_score":	114762
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	264,
			"primary_score":	999861,
			"second_score":	114761
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	265,
			"primary_score":	999861,
			"second_score":	114760
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	266,
			"primary_score":	999861,
			"second_score":	114754
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	653,
			"primary_score":	999861,
			"second_score":	113338
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	655,
			"primary_score":	999861,
			"second_score":	113337
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	728,
			"primary_score":	999861,
			"second_score":	113336
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	182,
			"primary_score":	999861,
			"second_score":	115519
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	183,
			"primary_score":	999861,
			"second_score":	115558
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	189,
			"primary_score":	999861,
			"second_score":	114759
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	190,
			"primary_score":	999861,
			"second_score":	114758
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	191,
			"primary_score":	999861,
			"second_score":	114757
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	192,
			"primary_score":	999861,
			"second_score":	114756
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	193,
			"primary_score":	999861,
			"second_score":	114755
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	197,
			"primary_score":	999861,
			"second_score":	133413
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	198,
			"primary_score":	999861,
			"second_score":	133412
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	199,
			"primary_score":	999861,
			"second_score":	133411
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	201,
			"primary_score":	999861,
			"second_score":	133410
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	203,
			"primary_score":	999861,
			"second_score":	133409
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	210,
			"primary_score":	999861,
			"second_score":	133408
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	212,
			"primary_score":	999861,
			"second_score":	133406
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	213,
			"primary_score":	999861,
			"second_score":	133283
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	215,
			"primary_score":	999861,
			"second_score":	133282
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	216,
			"primary_score":	999861,
			"second_score":	133281
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	217,
			"primary_score":	999861,
			"second_score":	133280
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	220,
			"primary_score":	999861,
			"second_score":	133278
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	376,
			"primary_score":	999861,
			"second_score":	126814
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	401,
			"primary_score":	999861,
			"second_score":	126813
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	415,
			"primary_score":	999861,
			"second_score":	126695
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	426,
			"primary_score":	999861,
			"second_score":	126676
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	476,
			"primary_score":	999861,
			"second_score":	47247
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	477,
			"primary_score":	999861,
			"second_score":	47246
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	479,
			"primary_score":	999861,
			"second_score":	47245
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	481,
			"primary_score":	999861,
			"second_score":	47244
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	482,
			"primary_score":	999861,
			"second_score":	47243
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	484,
			"primary_score":	999861,
			"second_score":	47227
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	486,
			"primary_score":	999861,
			"second_score":	47226
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	487,
			"primary_score":	999861,
			"second_score":	47225
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	488,
			"primary_score":	999861,
			"second_score":	47224
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	492,
			"primary_score":	999861,
			"second_score":	47223
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	493,
			"primary_score":	999861,
			"second_score":	47221
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	494,
			"primary_score":	999861,
			"second_score":	47220
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	496,
			"primary_score":	999861,
			"second_score":	47271
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	498,
			"primary_score":	999861,
			"second_score":	47219
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	499,
			"primary_score":	999861,
			"second_score":	51598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	501,
			"primary_score":	999861,
			"second_score":	47218
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	502,
			"primary_score":	999861,
			"second_score":	50185
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	505,
			"primary_score":	999861,
			"second_score":	47217
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	507,
			"primary_score":	999861,
			"second_score":	47216
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	508,
			"primary_score":	999861,
			"second_score":	47215
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	510,
			"primary_score":	999861,
			"second_score":	62017
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	512,
			"primary_score":	999861,
			"second_score":	47214
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	513,
			"primary_score":	999861,
			"second_score":	47213
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	515,
			"primary_score":	999861,
			"second_score":	47212
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	516,
			"primary_score":	999861,
			"second_score":	47211
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	518,
			"primary_score":	999861,
			"second_score":	47207
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	519,
			"primary_score":	999861,
			"second_score":	47206
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	521,
			"primary_score":	999861,
			"second_score":	47205
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	522,
			"primary_score":	999861,
			"second_score":	47204
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	523,
			"primary_score":	999861,
			"second_score":	47202
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	524,
			"primary_score":	999861,
			"second_score":	47201
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	526,
			"primary_score":	999861,
			"second_score":	47276
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	534,
			"primary_score":	999861,
			"second_score":	3133
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	536,
			"primary_score":	999861,
			"second_score":	3132
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	538,
			"primary_score":	999861,
			"second_score":	3131
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	540,
			"primary_score":	999861,
			"second_score":	3130
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	541,
			"primary_score":	999861,
			"second_score":	3129
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	542,
			"primary_score":	999861,
			"second_score":	3122
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	543,
			"primary_score":	999861,
			"second_score":	3121
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	544,
			"primary_score":	999861,
			"second_score":	3120
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	545,
			"primary_score":	999861,
			"second_score":	3257
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	547,
			"primary_score":	999861,
			"second_score":	3119
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	548,
			"primary_score":	999861,
			"second_score":	3118
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	550,
			"primary_score":	999861,
			"second_score":	3117
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	552,
			"primary_score":	999861,
			"second_score":	3116
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	553,
			"primary_score":	999861,
			"second_score":	3115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	556,
			"primary_score":	999861,
			"second_score":	3114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	599,
			"primary_score":	999861,
			"second_score":	3611
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	601,
			"primary_score":	999861,
			"second_score":	3610
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	602,
			"primary_score":	999861,
			"second_score":	3608
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	603,
			"primary_score":	999861,
			"second_score":	3924
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	605,
			"primary_score":	999861,
			"second_score":	3607
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	607,
			"primary_score":	999861,
			"second_score":	3606
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	608,
			"primary_score":	999861,
			"second_score":	3605
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	610,
			"primary_score":	999861,
			"second_score":	3604
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	611,
			"primary_score":	999861,
			"second_score":	52792
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	616,
			"primary_score":	999861,
			"second_score":	3603
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	617,
			"primary_score":	999861,
			"second_score":	52734
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	620,
			"primary_score":	999861,
			"second_score":	3602
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	622,
			"primary_score":	999861,
			"second_score":	3601
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	623,
			"primary_score":	999861,
			"second_score":	3600
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	625,
			"primary_score":	999861,
			"second_score":	50148
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	627,
			"primary_score":	999861,
			"second_score":	3599
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	628,
			"primary_score":	999861,
			"second_score":	3598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	630,
			"primary_score":	999861,
			"second_score":	3597
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	631,
			"primary_score":	999861,
			"second_score":	3596
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	633,
			"primary_score":	999861,
			"second_score":	3594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	634,
			"primary_score":	999861,
			"second_score":	50141
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	636,
			"primary_score":	999861,
			"second_score":	3593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	637,
			"primary_score":	999861,
			"second_score":	3592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	639,
			"primary_score":	999861,
			"second_score":	3591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	640,
			"primary_score":	999861,
			"second_score":	3590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	642,
			"primary_score":	999861,
			"second_score":	3589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	665,
			"primary_score":	999861,
			"second_score":	103379
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	667,
			"primary_score":	999861,
			"second_score":	103378
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	669,
			"primary_score":	999861,
			"second_score":	103377
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	670,
			"primary_score":	999861,
			"second_score":	103376
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	671,
			"primary_score":	999861,
			"second_score":	50160
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	672,
			"primary_score":	999861,
			"second_score":	47192
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	675,
			"primary_score":	999861,
			"second_score":	47191
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	676,
			"primary_score":	999861,
			"second_score":	47190
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	679,
			"primary_score":	999861,
			"second_score":	47189
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	693,
			"primary_score":	999861,
			"second_score":	118915
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	695,
			"primary_score":	999861,
			"second_score":	118914
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	118913
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	698,
			"primary_score":	999861,
			"second_score":	118911
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	699,
			"primary_score":	999861,
			"second_score":	118910
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	711,
			"primary_score":	999861,
			"second_score":	118909
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	717,
			"primary_score":	999861,
			"second_score":	6024
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	719,
			"primary_score":	999861,
			"second_score":	6023
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	721,
			"primary_score":	999861,
			"second_score":	6022
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	722,
			"primary_score":	999861,
			"second_score":	6020
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	723,
			"primary_score":	999861,
			"second_score":	6019
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	724,
			"primary_score":	999861,
			"second_score":	3575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	726,
			"primary_score":	999861,
			"second_score":	3572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	727,
			"primary_score":	999861,
			"second_score":	3612
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	729,
			"primary_score":	999861,
			"second_score":	3571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	731,
			"primary_score":	999861,
			"second_score":	3570
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	735,
			"primary_score":	999861,
			"second_score":	3569
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	775,
			"primary_score":	999861,
			"second_score":	114468
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	777,
			"primary_score":	999861,
			"second_score":	114467
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	779,
			"primary_score":	999861,
			"second_score":	119071
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	780,
			"primary_score":	999861,
			"second_score":	114464
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	781,
			"primary_score":	999861,
			"second_score":	114463
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	782,
			"primary_score":	999861,
			"second_score":	113737
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	784,
			"primary_score":	999861,
			"second_score":	113735
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	785,
			"primary_score":	999861,
			"second_score":	113734
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	786,
			"primary_score":	999861,
			"second_score":	113733
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	787,
			"primary_score":	999861,
			"second_score":	113975
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	789,
			"primary_score":	999861,
			"second_score":	113732
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	790,
			"primary_score":	999861,
			"second_score":	113731
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	793,
			"primary_score":	999861,
			"second_score":	119017
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	898,
			"primary_score":	999861,
			"second_score":	97488
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	899,
			"primary_score":	999861,
			"second_score":	97487
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	900,
			"primary_score":	999861,
			"second_score":	97486
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	902,
			"primary_score":	999861,
			"second_score":	97485
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	904,
			"primary_score":	999861,
			"second_score":	97484
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	905,
			"primary_score":	999861,
			"second_score":	97470
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	907,
			"primary_score":	999861,
			"second_score":	97469
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	908,
			"primary_score":	999861,
			"second_score":	97468
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	909,
			"primary_score":	999861,
			"second_score":	97465
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	911,
			"primary_score":	999861,
			"second_score":	97464
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	912,
			"primary_score":	999861,
			"second_score":	97463
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	914,
			"primary_score":	999861,
			"second_score":	97466
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	916,
			"primary_score":	999861,
			"second_score":	138285
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	948,
			"primary_score":	999861,
			"second_score":	64575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	949,
			"primary_score":	999861,
			"second_score":	64574
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	950,
			"primary_score":	999861,
			"second_score":	64573
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	952,
			"primary_score":	999861,
			"second_score":	64572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	954,
			"primary_score":	999861,
			"second_score":	64571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	955,
			"primary_score":	999861,
			"second_score":	64562
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	957,
			"primary_score":	999861,
			"second_score":	64561
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	958,
			"primary_score":	999861,
			"second_score":	64560
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	959,
			"primary_score":	999861,
			"second_score":	64559
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	961,
			"primary_score":	999861,
			"second_score":	64558
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	997,
			"primary_score":	999861,
			"second_score":	113910
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	998,
			"primary_score":	999861,
			"second_score":	113909
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1000,
			"primary_score":	999861,
			"second_score":	113908
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1002,
			"primary_score":	999861,
			"second_score":	113907
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1004,
			"primary_score":	999861,
			"second_score":	113906
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1005,
			"primary_score":	999861,
			"second_score":	113905
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1006,
			"primary_score":	999861,
			"second_score":	113904
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1007,
			"primary_score":	999861,
			"second_score":	113903
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1008,
			"primary_score":	999861,
			"second_score":	113902
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1038,
			"primary_score":	999861,
			"second_score":	119015
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1040,
			"primary_score":	999861,
			"second_score":	119014
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	263,
			"primary_score":	999861,
			"second_score":	47242
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	266,
			"primary_score":	999861,
			"second_score":	47241
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	267,
			"primary_score":	999861,
			"second_score":	47240
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	268,
			"primary_score":	999861,
			"second_score":	47239
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	269,
			"primary_score":	999861,
			"second_score":	47238
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	270,
			"primary_score":	999861,
			"second_score":	47237
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	271,
			"primary_score":	999861,
			"second_score":	47236
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	272,
			"primary_score":	999861,
			"second_score":	47235
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	273,
			"primary_score":	999861,
			"second_score":	47234
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	274,
			"primary_score":	999861,
			"second_score":	47233
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	276,
			"primary_score":	999861,
			"second_score":	47232
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	278,
			"primary_score":	999861,
			"second_score":	48691
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	279,
			"primary_score":	999861,
			"second_score":	47446
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	280,
			"primary_score":	999861,
			"second_score":	47445
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	281,
			"primary_score":	999861,
			"second_score":	47444
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	282,
			"primary_score":	999861,
			"second_score":	47231
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	283,
			"primary_score":	999861,
			"second_score":	47230
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	287,
			"primary_score":	999861,
			"second_score":	47228
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	39,
			"primary_score":	999861,
			"second_score":	3574
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	40,
			"primary_score":	999861,
			"second_score":	3614
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	42,
			"primary_score":	999861,
			"second_score":	3573
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	3243
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	106,
			"primary_score":	999861,
			"second_score":	3216
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	107,
			"primary_score":	999861,
			"second_score":	3215
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	121,
			"primary_score":	999861,
			"second_score":	113328
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	127,
			"primary_score":	999861,
			"second_score":	113327
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	226,
			"primary_score":	999861,
			"second_score":	6025
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	384,
			"primary_score":	999861,
			"second_score":	97491
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	385,
			"primary_score":	999861,
			"second_score":	97490
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	387,
			"primary_score":	999861,
			"second_score":	97489
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	388,
			"primary_score":	999861,
			"second_score":	97462
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	392,
			"primary_score":	999861,
			"second_score":	97461
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	395,
			"primary_score":	999861,
			"second_score":	97460
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3151,
			"primary_score":	999861,
			"second_score":	133699
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3153,
			"primary_score":	999861,
			"second_score":	133698
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3155,
			"primary_score":	999861,
			"second_score":	133697
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3157,
			"primary_score":	999861,
			"second_score":	133696
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3214,
			"primary_score":	999861,
			"second_score":	166758
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3217,
			"primary_score":	999861,
			"second_score":	166757
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3220,
			"primary_score":	999861,
			"second_score":	166756
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3222,
			"primary_score":	999861,
			"second_score":	166755
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3223,
			"primary_score":	999861,
			"second_score":	166754
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3224,
			"primary_score":	999861,
			"second_score":	166753
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3226,
			"primary_score":	999861,
			"second_score":	166752
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3228,
			"primary_score":	999861,
			"second_score":	166751
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3231,
			"primary_score":	999861,
			"second_score":	166750
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3232,
			"primary_score":	999861,
			"second_score":	166749
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3233,
			"primary_score":	999861,
			"second_score":	166748
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3245,
			"primary_score":	999861,
			"second_score":	166747
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3246,
			"primary_score":	999861,
			"second_score":	166746
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3247,
			"primary_score":	999861,
			"second_score":	166745
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3250,
			"primary_score":	999861,
			"second_score":	166744
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3251,
			"primary_score":	999861,
			"second_score":	166743
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3252,
			"primary_score":	999861,
			"second_score":	166742
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3258,
			"primary_score":	999861,
			"second_score":	166741
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3262,
			"primary_score":	999861,
			"second_score":	166740
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3267,
			"primary_score":	999861,
			"second_score":	166739
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3269,
			"primary_score":	999861,
			"second_score":	166738
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3271,
			"primary_score":	999861,
			"second_score":	166737
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3272,
			"primary_score":	999861,
			"second_score":	166736
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3273,
			"primary_score":	999861,
			"second_score":	166735
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3274,
			"primary_score":	999861,
			"second_score":	166734
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3281,
			"primary_score":	999861,
			"second_score":	166733
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3282,
			"primary_score":	999861,
			"second_score":	166732
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3284,
			"primary_score":	999861,
			"second_score":	166731
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3294,
			"primary_score":	999861,
			"second_score":	133719
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3297,
			"primary_score":	999861,
			"second_score":	133718
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3362,
			"primary_score":	999861,
			"second_score":	133717
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3364,
			"primary_score":	999861,
			"second_score":	133716
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3376,
			"primary_score":	999861,
			"second_score":	133715
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3377,
			"primary_score":	999861,
			"second_score":	133808
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3382,
			"primary_score":	999861,
			"second_score":	133714
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3384,
			"primary_score":	999861,
			"second_score":	133783
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3385,
			"primary_score":	999861,
			"second_score":	133782
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3388,
			"primary_score":	999861,
			"second_score":	133713
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3390,
			"primary_score":	999861,
			"second_score":	133712
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3391,
			"primary_score":	999861,
			"second_score":	133711
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3395,
			"primary_score":	999861,
			"second_score":	133896
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3396,
			"primary_score":	999861,
			"second_score":	133895
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3401,
			"primary_score":	999861,
			"second_score":	133710
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3402,
			"primary_score":	999861,
			"second_score":	133709
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3403,
			"primary_score":	999861,
			"second_score":	133924
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3404,
			"primary_score":	999861,
			"second_score":	133708
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3405,
			"primary_score":	999861,
			"second_score":	133707
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3407,
			"primary_score":	999861,
			"second_score":	133742
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3409,
			"primary_score":	999861,
			"second_score":	133741
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3410,
			"primary_score":	999861,
			"second_score":	133740
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3413,
			"primary_score":	999861,
			"second_score":	133706
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3414,
			"primary_score":	999861,
			"second_score":	133705
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3418,
			"primary_score":	999861,
			"second_score":	133889
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3422,
			"primary_score":	999861,
			"second_score":	133888
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3425,
			"primary_score":	999861,
			"second_score":	133887
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3426,
			"primary_score":	999861,
			"second_score":	133886
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3428,
			"primary_score":	999861,
			"second_score":	133885
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3429,
			"primary_score":	999861,
			"second_score":	133884
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3431,
			"primary_score":	999861,
			"second_score":	133883
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3439,
			"primary_score":	999861,
			"second_score":	133807
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3441,
			"primary_score":	999861,
			"second_score":	133806
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3459,
			"primary_score":	999861,
			"second_score":	133739
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3462,
			"primary_score":	999861,
			"second_score":	133738
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3463,
			"primary_score":	999861,
			"second_score":	133737
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3467,
			"primary_score":	999861,
			"second_score":	133736
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3468,
			"primary_score":	999861,
			"second_score":	133730
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3472,
			"primary_score":	999861,
			"second_score":	133918
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3473,
			"primary_score":	999861,
			"second_score":	133914
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3477,
			"primary_score":	999861,
			"second_score":	133802
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3478,
			"primary_score":	999861,
			"second_score":	133800
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3482,
			"primary_score":	999861,
			"second_score":	136021
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3483,
			"primary_score":	999861,
			"second_score":	136020
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3492,
			"primary_score":	999861,
			"second_score":	133826
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3493,
			"primary_score":	999861,
			"second_score":	133824
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3592,
			"primary_score":	999861,
			"second_score":	133850
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3593,
			"primary_score":	999861,
			"second_score":	133848
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3732,
			"primary_score":	999861,
			"second_score":	137904
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3733,
			"primary_score":	999861,
			"second_score":	137896
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4142,
			"primary_score":	999861,
			"second_score":	134562
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4143,
			"primary_score":	999861,
			"second_score":	134561
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4147,
			"primary_score":	999861,
			"second_score":	135201
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4148,
			"primary_score":	999861,
			"second_score":	135200
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4152,
			"primary_score":	999861,
			"second_score":	136343
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4153,
			"primary_score":	999861,
			"second_score":	136117
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4157,
			"primary_score":	999861,
			"second_score":	132962
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4158,
			"primary_score":	999861,
			"second_score":	132880
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4167,
			"primary_score":	999861,
			"second_score":	128837
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4168,
			"primary_score":	999861,
			"second_score":	128723
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4172,
			"primary_score":	999861,
			"second_score":	134672
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4173,
			"primary_score":	999861,
			"second_score":	134590
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4412,
			"primary_score":	999861,
			"second_score":	131808
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4413,
			"primary_score":	999861,
			"second_score":	131739
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4417,
			"primary_score":	999861,
			"second_score":	142452
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4418,
			"primary_score":	999861,
			"second_score":	142240
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4457,
			"primary_score":	999866,
			"second_score":	138047
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4458,
			"primary_score":	999866,
			"second_score":	137970
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4477,
			"primary_score":	999866,
			"second_score":	164900
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4478,
			"primary_score":	999866,
			"second_score":	164734
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4482,
			"primary_score":	999866,
			"second_score":	164162
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4483,
			"primary_score":	999866,
			"second_score":	164093
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4627,
			"primary_score":	999942,
			"second_score":	126900
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4628,
			"primary_score":	999942,
			"second_score":	126787
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4732,
			"primary_score":	999861,
			"second_score":	126358
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4733,
			"primary_score":	999861,
			"second_score":	126357
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4737,
			"primary_score":	999861,
			"second_score":	129805
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4738,
			"primary_score":	999861,
			"second_score":	129777
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4742,
			"primary_score":	999861,
			"second_score":	126978
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4743,
			"primary_score":	999861,
			"second_score":	126936
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4747,
			"primary_score":	999861,
			"second_score":	126548
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4748,
			"primary_score":	999861,
			"second_score":	126424
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4762,
			"primary_score":	999871,
			"second_score":	126679
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4763,
			"primary_score":	999871,
			"second_score":	126678
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4827,
			"primary_score":	999861,
			"second_score":	136407
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4828,
			"primary_score":	999861,
			"second_score":	136406
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4892,
			"primary_score":	999861,
			"second_score":	135623
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4893,
			"primary_score":	999861,
			"second_score":	135262
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4897,
			"primary_score":	999861,
			"second_score":	134518
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4898,
			"primary_score":	999861,
			"second_score":	134403
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4977,
			"primary_score":	999863,
			"second_score":	165360
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4978,
			"primary_score":	999863,
			"second_score":	165359
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5007,
			"primary_score":	999866,
			"second_score":	165331
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5008,
			"primary_score":	999866,
			"second_score":	164922
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5077,
			"primary_score":	999889,
			"second_score":	164185
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5078,
			"primary_score":	999889,
			"second_score":	164184
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5092,
			"primary_score":	999861,
			"second_score":	136453
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5093,
			"primary_score":	999861,
			"second_score":	136452
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5102,
			"primary_score":	999962,
			"second_score":	128343
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5103,
			"primary_score":	999962,
			"second_score":	128342
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5197,
			"primary_score":	999861,
			"second_score":	137233
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5198,
			"primary_score":	999861,
			"second_score":	137114
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5212,
			"primary_score":	999861,
			"second_score":	136430
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5213,
			"primary_score":	999861,
			"second_score":	136429
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5257,
			"primary_score":	999861,
			"second_score":	134187
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5258,
			"primary_score":	999861,
			"second_score":	134186
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5262,
			"primary_score":	999861,
			"second_score":	131870
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5263,
			"primary_score":	999861,
			"second_score":	131869
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5267,
			"primary_score":	999861,
			"second_score":	134248
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5268,
			"primary_score":	999861,
			"second_score":	134209
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5284,
			"primary_score":	999870,
			"second_score":	134036
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5285,
			"primary_score":	999870,
			"second_score":	134009
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5289,
			"primary_score":	999870,
			"second_score":	133538
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5290,
			"primary_score":	999870,
			"second_score":	133511
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5294,
			"primary_score":	999870,
			"second_score":	132294
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5295,
			"primary_score":	999870,
			"second_score":	132263
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5299,
			"primary_score":	999861,
			"second_score":	134277
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5300,
			"primary_score":	999861,
			"second_score":	134276
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5309,
			"primary_score":	999870,
			"second_score":	132323
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5310,
			"primary_score":	999870,
			"second_score":	132322
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5334,
			"primary_score":	999884,
			"second_score":	133468
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5335,
			"primary_score":	999884,
			"second_score":	133083
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5339,
			"primary_score":	999884,
			"second_score":	132487
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5340,
			"primary_score":	999884,
			"second_score":	132435
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5344,
			"primary_score":	999884,
			"second_score":	132374
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5345,
			"primary_score":	999884,
			"second_score":	132345
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5399,
			"primary_score":	999866,
			"second_score":	132700
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5400,
			"primary_score":	999866,
			"second_score":	132699
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5409,
			"primary_score":	999861,
			"second_score":	134342
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5410,
			"primary_score":	999861,
			"second_score":	134305
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5414,
			"primary_score":	999866,
			"second_score":	132724
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5415,
			"primary_score":	999866,
			"second_score":	132722
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5439,
			"primary_score":	999866,
			"second_score":	132899
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5440,
			"primary_score":	999866,
			"second_score":	132785
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5444,
			"primary_score":	999866,
			"second_score":	132922
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5445,
			"primary_score":	999866,
			"second_score":	132921
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5464,
			"primary_score":	999870,
			"second_score":	133561
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5465,
			"primary_score":	999870,
			"second_score":	133560
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5489,
			"primary_score":	999870,
			"second_score":	133787
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5490,
			"primary_score":	999870,
			"second_score":	133627
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5494,
			"primary_score":	999870,
			"second_score":	133810
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5495,
			"primary_score":	999870,
			"second_score":	133809
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5684,
			"primary_score":	999889,
			"second_score":	126736
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5685,
			"primary_score":	999889,
			"second_score":	126701
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5717,
			"primary_score":	999861,
			"second_score":	133729
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5719,
			"primary_score":	999861,
			"second_score":	133728
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5720,
			"primary_score":	999861,
			"second_score":	133727
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5721,
			"primary_score":	999861,
			"second_score":	133726
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5723,
			"primary_score":	999861,
			"second_score":	133725
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5730,
			"primary_score":	999861,
			"second_score":	133724
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5732,
			"primary_score":	999861,
			"second_score":	133723
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5733,
			"primary_score":	999861,
			"second_score":	133722
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5734,
			"primary_score":	999861,
			"second_score":	133839
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5736,
			"primary_score":	999861,
			"second_score":	133721
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5738,
			"primary_score":	999861,
			"second_score":	133720
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5882,
			"primary_score":	999861,
			"second_score":	133704
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5907,
			"primary_score":	999861,
			"second_score":	133703
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5908,
			"primary_score":	999861,
			"second_score":	133702
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5909,
			"primary_score":	999861,
			"second_score":	133701
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5911,
			"primary_score":	999861,
			"second_score":	133700
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5913,
			"primary_score":	999861,
			"second_score":	133695
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5916,
			"primary_score":	999861,
			"second_score":	133694
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5920,
			"primary_score":	999861,
			"second_score":	133693
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5923,
			"primary_score":	999861,
			"second_score":	133692
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	127,
			"primary_score":	999870,
			"second_score":	134149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	128,
			"primary_score":	999870,
			"second_score":	134123
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	135,
			"primary_score":	999870,
			"second_score":	133903
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	136,
			"primary_score":	999870,
			"second_score":	133902
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	137,
			"primary_score":	999870,
			"second_score":	133898
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	138,
			"primary_score":	999870,
			"second_score":	133897
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	146,
			"primary_score":	999861,
			"second_score":	121323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	161,
			"primary_score":	999861,
			"second_score":	118169
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	165,
			"primary_score":	999861,
			"second_score":	118168
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	166,
			"primary_score":	999861,
			"second_score":	118164
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	197,
			"primary_score":	999861,
			"second_score":	133447
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	198,
			"primary_score":	999861,
			"second_score":	133446
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	199,
			"primary_score":	999861,
			"second_score":	133445
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	200,
			"primary_score":	999861,
			"second_score":	133444
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	201,
			"primary_score":	999861,
			"second_score":	133443
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	202,
			"primary_score":	999861,
			"second_score":	133442
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	204,
			"primary_score":	999861,
			"second_score":	133441
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	205,
			"primary_score":	999861,
			"second_score":	133437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	207,
			"primary_score":	999861,
			"second_score":	133436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	208,
			"primary_score":	999861,
			"second_score":	133435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	209,
			"primary_score":	999861,
			"second_score":	133434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	210,
			"primary_score":	999861,
			"second_score":	133433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	212,
			"primary_score":	999861,
			"second_score":	133431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	216,
			"primary_score":	999861,
			"second_score":	133430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	217,
			"primary_score":	999861,
			"second_score":	133429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	218,
			"primary_score":	999861,
			"second_score":	133428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	219,
			"primary_score":	999861,
			"second_score":	133427
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	220,
			"primary_score":	999861,
			"second_score":	133426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	221,
			"primary_score":	999861,
			"second_score":	133425
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	222,
			"primary_score":	999861,
			"second_score":	133424
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	224,
			"primary_score":	999861,
			"second_score":	133423
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	233,
			"primary_score":	999861,
			"second_score":	133276
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	235,
			"primary_score":	999861,
			"second_score":	133200
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	236,
			"primary_score":	999861,
			"second_score":	133199
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	544,
			"primary_score":	999861,
			"second_score":	166768
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	545,
			"primary_score":	999861,
			"second_score":	166767
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	546,
			"primary_score":	999861,
			"second_score":	166766
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	547,
			"primary_score":	999861,
			"second_score":	166759
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	548,
			"primary_score":	999861,
			"second_score":	133691
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	549,
			"primary_score":	999861,
			"second_score":	133644
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	550,
			"primary_score":	999861,
			"second_score":	133643
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	553,
			"primary_score":	999861,
			"second_score":	133642
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	556,
			"primary_score":	999861,
			"second_score":	133641
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	557,
			"primary_score":	999861,
			"second_score":	133640
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	558,
			"primary_score":	999861,
			"second_score":	133639
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	559,
			"primary_score":	999861,
			"second_score":	133638
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	560,
			"primary_score":	999861,
			"second_score":	133453
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	566,
			"primary_score":	999861,
			"second_score":	133448
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	567,
			"primary_score":	999861,
			"second_score":	133422
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	614,
			"primary_score":	999861,
			"second_score":	121431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	615,
			"primary_score":	999861,
			"second_score":	121430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	618,
			"primary_score":	999861,
			"second_score":	121429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	623,
			"primary_score":	999861,
			"second_score":	121428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	626,
			"primary_score":	999861,
			"second_score":	121333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	628,
			"primary_score":	999861,
			"second_score":	121332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	629,
			"primary_score":	999861,
			"second_score":	121331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	631,
			"primary_score":	999861,
			"second_score":	121330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	632,
			"primary_score":	999861,
			"second_score":	121329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	634,
			"primary_score":	999861,
			"second_score":	121328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	651,
			"primary_score":	999861,
			"second_score":	121327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	653,
			"primary_score":	999861,
			"second_score":	121322
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	654,
			"primary_score":	999861,
			"second_score":	120886
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	655,
			"primary_score":	999861,
			"second_score":	120885
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	656,
			"primary_score":	999861,
			"second_score":	120884
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	684,
			"primary_score":	999861,
			"second_score":	121689
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	685,
			"primary_score":	999861,
			"second_score":	121688
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	686,
			"primary_score":	999861,
			"second_score":	121584
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	687,
			"primary_score":	999861,
			"second_score":	121583
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	688,
			"primary_score":	999861,
			"second_score":	121582
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	689,
			"primary_score":	999861,
			"second_score":	121581
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	690,
			"primary_score":	999861,
			"second_score":	121580
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	692,
			"primary_score":	999861,
			"second_score":	121579
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	121578
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	699,
			"primary_score":	999861,
			"second_score":	121577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	700,
			"primary_score":	999861,
			"second_score":	121576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	701,
			"primary_score":	999861,
			"second_score":	121460
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	702,
			"primary_score":	999861,
			"second_score":	121458
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	704,
			"primary_score":	999861,
			"second_score":	121457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	705,
			"primary_score":	999861,
			"second_score":	121432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	709,
			"primary_score":	999861,
			"second_score":	120883
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	711,
			"primary_score":	999861,
			"second_score":	120882
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	712,
			"primary_score":	999861,
			"second_score":	120881
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	713,
			"primary_score":	999861,
			"second_score":	120637
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	714,
			"primary_score":	999861,
			"second_score":	120636
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	715,
			"primary_score":	999861,
			"second_score":	120635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	716,
			"primary_score":	999861,
			"second_score":	120628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	717,
			"primary_score":	999861,
			"second_score":	120627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	719,
			"primary_score":	999861,
			"second_score":	119485
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	724,
			"primary_score":	999861,
			"second_score":	119484
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	729,
			"primary_score":	999861,
			"second_score":	119483
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	730,
			"primary_score":	999861,
			"second_score":	119435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	731,
			"primary_score":	999861,
			"second_score":	119434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	732,
			"primary_score":	999861,
			"second_score":	119263
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	733,
			"primary_score":	999861,
			"second_score":	119258
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	736,
			"primary_score":	999861,
			"second_score":	119257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	737,
			"primary_score":	999861,
			"second_score":	119231
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	738,
			"primary_score":	999861,
			"second_score":	119205
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	739,
			"primary_score":	999861,
			"second_score":	119204
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	848,
			"primary_score":	999861,
			"second_score":	136613
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	849,
			"primary_score":	999861,
			"second_score":	136612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	851,
			"primary_score":	999861,
			"second_score":	136611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	854,
			"primary_score":	999861,
			"second_score":	136495
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	855,
			"primary_score":	999861,
			"second_score":	136494
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	856,
			"primary_score":	999861,
			"second_score":	136493
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	857,
			"primary_score":	999861,
			"second_score":	136492
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	858,
			"primary_score":	999861,
			"second_score":	131981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	859,
			"primary_score":	999861,
			"second_score":	131980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	864,
			"primary_score":	999861,
			"second_score":	131979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	867,
			"primary_score":	999861,
			"second_score":	131978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	868,
			"primary_score":	999861,
			"second_score":	131977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	939,
			"primary_score":	999861,
			"second_score":	136491
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	942,
			"primary_score":	999861,
			"second_score":	136490
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	943,
			"primary_score":	999861,
			"second_score":	132230
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	945,
			"primary_score":	999861,
			"second_score":	136489
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	947,
			"primary_score":	999861,
			"second_score":	136488
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	948,
			"primary_score":	999861,
			"second_score":	136487
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	960,
			"primary_score":	999861,
			"second_score":	133777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	963,
			"primary_score":	999861,
			"second_score":	133776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	968,
			"primary_score":	999861,
			"second_score":	133775
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	969,
			"primary_score":	999861,
			"second_score":	133774
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	970,
			"primary_score":	999861,
			"second_score":	133773
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	971,
			"primary_score":	999861,
			"second_score":	133963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	972,
			"primary_score":	999861,
			"second_score":	133962
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	973,
			"primary_score":	999861,
			"second_score":	133961
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	975,
			"primary_score":	999870,
			"second_score":	133979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	989,
			"primary_score":	999861,
			"second_score":	133772
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	996,
			"primary_score":	999861,
			"second_score":	133771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	997,
			"primary_score":	999861,
			"second_score":	133770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1010,
			"primary_score":	999861,
			"second_score":	133769
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1045,
			"primary_score":	999861,
			"second_score":	133768
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1046,
			"primary_score":	999861,
			"second_score":	133767
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1047,
			"primary_score":	999861,
			"second_score":	133764
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1048,
			"primary_score":	999861,
			"second_score":	133763
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1049,
			"primary_score":	999861,
			"second_score":	166683
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1050,
			"primary_score":	999861,
			"second_score":	166682
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1051,
			"primary_score":	999861,
			"second_score":	166681
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1052,
			"primary_score":	999861,
			"second_score":	166680
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1053,
			"primary_score":	999861,
			"second_score":	166679
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1054,
			"primary_score":	999861,
			"second_score":	166678
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1064,
			"primary_score":	999861,
			"second_score":	133759
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1066,
			"primary_score":	999861,
			"second_score":	133758
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1067,
			"primary_score":	999861,
			"second_score":	133757
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1068,
			"primary_score":	999861,
			"second_score":	133756
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1128,
			"primary_score":	999861,
			"second_score":	133761
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1129,
			"primary_score":	999861,
			"second_score":	133760
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1132,
			"primary_score":	999861,
			"second_score":	166676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1133,
			"primary_score":	999861,
			"second_score":	166675
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1134,
			"primary_score":	999861,
			"second_score":	166674
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1137,
			"primary_score":	999861,
			"second_score":	166673
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1138,
			"primary_score":	999861,
			"second_score":	166672
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1437,
			"primary_score":	999861,
			"second_score":	166670
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1438,
			"primary_score":	999861,
			"second_score":	166669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1439,
			"primary_score":	999861,
			"second_score":	166668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1440,
			"primary_score":	999861,
			"second_score":	166667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1442,
			"primary_score":	999861,
			"second_score":	166666
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1443,
			"primary_score":	999861,
			"second_score":	166665
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1444,
			"primary_score":	999861,
			"second_score":	166664
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1445,
			"primary_score":	999861,
			"second_score":	166663
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1447,
			"primary_score":	999861,
			"second_score":	166662
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1448,
			"primary_score":	999861,
			"second_score":	166661
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1449,
			"primary_score":	999866,
			"second_score":	166660
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1450,
			"primary_score":	999866,
			"second_score":	166659
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1452,
			"primary_score":	999861,
			"second_score":	143026
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1453,
			"primary_score":	999861,
			"second_score":	143025
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1455,
			"primary_score":	999861,
			"second_score":	166658
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1457,
			"primary_score":	999861,
			"second_score":	166657
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1458,
			"primary_score":	999861,
			"second_score":	166656
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1460,
			"primary_score":	999861,
			"second_score":	166655
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1462,
			"primary_score":	999861,
			"second_score":	166654
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1463,
			"primary_score":	999861,
			"second_score":	166653
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1464,
			"primary_score":	999861,
			"second_score":	166652
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1465,
			"primary_score":	999861,
			"second_score":	166651
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1466,
			"primary_score":	999866,
			"second_score":	166648
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1467,
			"primary_score":	999861,
			"second_score":	166646
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1468,
			"primary_score":	999861,
			"second_score":	166645
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2191,
			"primary_score":	999861,
			"second_score":	133960
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2225,
			"primary_score":	999861,
			"second_score":	133959
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2226,
			"primary_score":	999861,
			"second_score":	133958
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2227,
			"primary_score":	999861,
			"second_score":	133955
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2228,
			"primary_score":	999861,
			"second_score":	133954
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2229,
			"primary_score":	999861,
			"second_score":	133953
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2347,
			"primary_score":	999861,
			"second_score":	142993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2348,
			"primary_score":	999861,
			"second_score":	142992
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2349,
			"primary_score":	999861,
			"second_score":	142991
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2366,
			"primary_score":	999861,
			"second_score":	136088
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2368,
			"primary_score":	999861,
			"second_score":	136087
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2369,
			"primary_score":	999861,
			"second_score":	136086
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2370,
			"primary_score":	999861,
			"second_score":	136055
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2371,
			"primary_score":	999861,
			"second_score":	136054
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2376,
			"primary_score":	999861,
			"second_score":	165578
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2377,
			"primary_score":	999861,
			"second_score":	165577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2378,
			"primary_score":	999898,
			"second_score":	165576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2382,
			"primary_score":	999898,
			"second_score":	165575
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2383,
			"primary_score":	999898,
			"second_score":	165574
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2384,
			"primary_score":	999898,
			"second_score":	165573
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2387,
			"primary_score":	999941,
			"second_score":	129199
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2391,
			"primary_score":	999962,
			"second_score":	129197
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2398,
			"primary_score":	999861,
			"second_score":	131687
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2399,
			"primary_score":	999861,
			"second_score":	131686
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2410,
			"primary_score":	999861,
			"second_score":	131685
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2415,
			"primary_score":	999861,
			"second_score":	131684
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2419,
			"primary_score":	999861,
			"second_score":	131683
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2448,
			"primary_score":	999861,
			"second_score":	134838
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2449,
			"primary_score":	999861,
			"second_score":	134837
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2450,
			"primary_score":	999861,
			"second_score":	134836
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2525,
			"primary_score":	999861,
			"second_score":	129937
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2526,
			"primary_score":	999861,
			"second_score":	129936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2536,
			"primary_score":	999861,
			"second_score":	129935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2540,
			"primary_score":	999861,
			"second_score":	129934
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2585,
			"primary_score":	999861,
			"second_score":	136021
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2586,
			"primary_score":	999861,
			"second_score":	136020
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2591,
			"primary_score":	999861,
			"second_score":	136019
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2592,
			"primary_score":	999861,
			"second_score":	136018
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2601,
			"primary_score":	999861,
			"second_score":	128627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2602,
			"primary_score":	999861,
			"second_score":	128626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2603,
			"primary_score":	999861,
			"second_score":	137443
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2604,
			"primary_score":	999861,
			"second_score":	137442
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2607,
			"primary_score":	999861,
			"second_score":	128625
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2608,
			"primary_score":	999861,
			"second_score":	128624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2617,
			"primary_score":	999870,
			"second_score":	134159
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2618,
			"primary_score":	999870,
			"second_score":	134158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2621,
			"primary_score":	999870,
			"second_score":	134157
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2622,
			"primary_score":	999870,
			"second_score":	134156
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2626,
			"primary_score":	999861,
			"second_score":	134362
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2628,
			"primary_score":	999861,
			"second_score":	134361
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2629,
			"primary_score":	999861,
			"second_score":	134360
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2634,
			"primary_score":	999861,
			"second_score":	133988
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2635,
			"primary_score":	999861,
			"second_score":	133987
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2636,
			"primary_score":	999861,
			"second_score":	133986
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2639,
			"primary_score":	999861,
			"second_score":	133981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2641,
			"primary_score":	999861,
			"second_score":	133980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2642,
			"primary_score":	999861,
			"second_score":	133979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2643,
			"primary_score":	999861,
			"second_score":	133978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2644,
			"primary_score":	999861,
			"second_score":	133977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2645,
			"primary_score":	999861,
			"second_score":	133976
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2646,
			"primary_score":	999861,
			"second_score":	133971
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2651,
			"primary_score":	999861,
			"second_score":	127200
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2652,
			"primary_score":	999861,
			"second_score":	127199
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2653,
			"primary_score":	999861,
			"second_score":	127198
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2666,
			"primary_score":	999866,
			"second_score":	136116
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2667,
			"primary_score":	999866,
			"second_score":	136115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2668,
			"primary_score":	999994,
			"second_score":	136114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2672,
			"primary_score":	999994,
			"second_score":	136113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2673,
			"primary_score":	999994,
			"second_score":	136112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2674,
			"primary_score":	999995,
			"second_score":	136111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2677,
			"primary_score":	999866,
			"second_score":	165676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2681,
			"primary_score":	999866,
			"second_score":	165675
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2694,
			"primary_score":	999861,
			"second_score":	135665
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2695,
			"primary_score":	999861,
			"second_score":	135664
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2696,
			"primary_score":	999861,
			"second_score":	135663
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2697,
			"primary_score":	999861,
			"second_score":	135662
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2698,
			"primary_score":	999861,
			"second_score":	135661
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2703,
			"primary_score":	999861,
			"second_score":	135660
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2708,
			"primary_score":	999976,
			"second_score":	136745
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2713,
			"primary_score":	999985,
			"second_score":	136744
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2714,
			"primary_score":	999985,
			"second_score":	136743
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2719,
			"primary_score":	999861,
			"second_score":	131760
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2720,
			"primary_score":	999861,
			"second_score":	131759
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2721,
			"primary_score":	999959,
			"second_score":	128956
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2722,
			"primary_score":	999961,
			"second_score":	128954
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2725,
			"primary_score":	999861,
			"second_score":	131758
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2726,
			"primary_score":	999861,
			"second_score":	131757
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2727,
			"primary_score":	999861,
			"second_score":	131756
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2730,
			"primary_score":	999861,
			"second_score":	134678
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2731,
			"primary_score":	999861,
			"second_score":	134677
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2732,
			"primary_score":	999861,
			"second_score":	134676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2763,
			"primary_score":	999961,
			"second_score":	128518
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2764,
			"primary_score":	999961,
			"second_score":	128517
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2768,
			"primary_score":	999866,
			"second_score":	140573
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2769,
			"primary_score":	999866,
			"second_score":	140572
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2854,
			"primary_score":	999940,
			"second_score":	127622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2855,
			"primary_score":	999942,
			"second_score":	127620
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2891,
			"primary_score":	999866,
			"second_score":	133044
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2892,
			"primary_score":	999866,
			"second_score":	133043
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2898,
			"primary_score":	999867,
			"second_score":	133042
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2899,
			"primary_score":	999867,
			"second_score":	133041
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2905,
			"primary_score":	999861,
			"second_score":	134364
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2906,
			"primary_score":	999861,
			"second_score":	134363
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2909,
			"primary_score":	999861,
			"second_score":	133952
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2910,
			"primary_score":	999861,
			"second_score":	133951
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2911,
			"primary_score":	999861,
			"second_score":	130210
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3000,
			"primary_score":	999861,
			"second_score":	139042
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3001,
			"primary_score":	999861,
			"second_score":	139041
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3045,
			"primary_score":	999861,
			"second_score":	142163
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3046,
			"primary_score":	999861,
			"second_score":	142162
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3048,
			"primary_score":	999861,
			"second_score":	142161
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3050,
			"primary_score":	999861,
			"second_score":	142160
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3051,
			"primary_score":	999861,
			"second_score":	142159
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3052,
			"primary_score":	999861,
			"second_score":	142158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3053,
			"primary_score":	999861,
			"second_score":	142157
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3055,
			"primary_score":	999861,
			"second_score":	142156
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3056,
			"primary_score":	999861,
			"second_score":	142104
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3057,
			"primary_score":	999861,
			"second_score":	142103
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3058,
			"primary_score":	999861,
			"second_score":	142102
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3059,
			"primary_score":	999861,
			"second_score":	142101
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3061,
			"primary_score":	999861,
			"second_score":	142100
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3062,
			"primary_score":	999861,
			"second_score":	142105
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3075,
			"primary_score":	999861,
			"second_score":	142099
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3076,
			"primary_score":	999861,
			"second_score":	141990
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3077,
			"primary_score":	999861,
			"second_score":	141989
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3080,
			"primary_score":	999861,
			"second_score":	141988
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3081,
			"primary_score":	999861,
			"second_score":	141987
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3082,
			"primary_score":	999861,
			"second_score":	141986
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3083,
			"primary_score":	999861,
			"second_score":	141921
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3098,
			"primary_score":	999861,
			"second_score":	141920
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3101,
			"primary_score":	999861,
			"second_score":	141919
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3104,
			"primary_score":	999861,
			"second_score":	141918
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3106,
			"primary_score":	999861,
			"second_score":	141917
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3108,
			"primary_score":	999861,
			"second_score":	141916
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3115,
			"primary_score":	999861,
			"second_score":	141915
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3120,
			"primary_score":	999861,
			"second_score":	136622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3121,
			"primary_score":	999861,
			"second_score":	136621
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3123,
			"primary_score":	999861,
			"second_score":	136620
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3125,
			"primary_score":	999861,
			"second_score":	136619
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3126,
			"primary_score":	999861,
			"second_score":	136618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3128,
			"primary_score":	999861,
			"second_score":	136617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3129,
			"primary_score":	999861,
			"second_score":	136615
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3132,
			"primary_score":	999861,
			"second_score":	136614
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3133,
			"primary_score":	999861,
			"second_score":	136486
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3146,
			"primary_score":	999861,
			"second_score":	132025
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3149,
			"primary_score":	999861,
			"second_score":	132024
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3179,
			"primary_score":	999861,
			"second_score":	119555
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3180,
			"primary_score":	999861,
			"second_score":	119554
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3181,
			"primary_score":	999861,
			"second_score":	119553
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3183,
			"primary_score":	999861,
			"second_score":	119552
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3184,
			"primary_score":	999861,
			"second_score":	119551
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3185,
			"primary_score":	999861,
			"second_score":	119550
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3194,
			"primary_score":	999861,
			"second_score":	136096
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3195,
			"primary_score":	999861,
			"second_score":	136095
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3196,
			"primary_score":	999861,
			"second_score":	136092
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3197,
			"primary_score":	999861,
			"second_score":	136091
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3199,
			"primary_score":	999861,
			"second_score":	136090
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3200,
			"primary_score":	999861,
			"second_score":	136097
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3202,
			"primary_score":	999861,
			"second_score":	136089
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3255,
			"primary_score":	999861,
			"second_score":	131744
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3256,
			"primary_score":	999861,
			"second_score":	131743
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3257,
			"primary_score":	999861,
			"second_score":	131742
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3258,
			"primary_score":	999861,
			"second_score":	131741
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3261,
			"primary_score":	999861,
			"second_score":	131740
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3333,
			"primary_score":	999861,
			"second_score":	133949
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3334,
			"primary_score":	999861,
			"second_score":	133948
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3335,
			"primary_score":	999861,
			"second_score":	133947
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3336,
			"primary_score":	999861,
			"second_score":	133946
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3338,
			"primary_score":	999861,
			"second_score":	133945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3340,
			"primary_score":	999861,
			"second_score":	133944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3341,
			"primary_score":	999861,
			"second_score":	133943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3342,
			"primary_score":	999861,
			"second_score":	133942
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3343,
			"primary_score":	999861,
			"second_score":	133941
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3344,
			"primary_score":	999861,
			"second_score":	133940
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3345,
			"primary_score":	999861,
			"second_score":	133939
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3350,
			"primary_score":	999861,
			"second_score":	131543
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3351,
			"primary_score":	999861,
			"second_score":	131542
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3359,
			"primary_score":	999866,
			"second_score":	132999
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3360,
			"primary_score":	999866,
			"second_score":	132998
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3361,
			"primary_score":	999866,
			"second_score":	132995
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3362,
			"primary_score":	999866,
			"second_score":	132994
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3363,
			"primary_score":	999866,
			"second_score":	132993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3364,
			"primary_score":	999866,
			"second_score":	132992
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3365,
			"primary_score":	999866,
			"second_score":	132991
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3371,
			"primary_score":	999869,
			"second_score":	133002
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3374,
			"primary_score":	999869,
			"second_score":	133001
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3378,
			"primary_score":	999866,
			"second_score":	132990
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3380,
			"primary_score":	999866,
			"second_score":	132989
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3382,
			"primary_score":	999866,
			"second_score":	132988
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3383,
			"primary_score":	999866,
			"second_score":	132987
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3384,
			"primary_score":	999866,
			"second_score":	132956
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3385,
			"primary_score":	999866,
			"second_score":	132955
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4210,
			"primary_score":	999961,
			"second_score":	128515
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4211,
			"primary_score":	999961,
			"second_score":	128514
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4212,
			"primary_score":	999961,
			"second_score":	128513
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4243,
			"primary_score":	999962,
			"second_score":	128512
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4244,
			"primary_score":	999962,
			"second_score":	128511
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4245,
			"primary_score":	999962,
			"second_score":	128510
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4476,
			"primary_score":	999962,
			"second_score":	128508
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4477,
			"primary_score":	999962,
			"second_score":	128507
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4543,
			"primary_score":	999962,
			"second_score":	128505
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4544,
			"primary_score":	999962,
			"second_score":	128504
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4548,
			"primary_score":	999962,
			"second_score":	128502
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4549,
			"primary_score":	999962,
			"second_score":	128501
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4550,
			"primary_score":	999962,
			"second_score":	128500
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4551,
			"primary_score":	999962,
			"second_score":	128499
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4552,
			"primary_score":	999962,
			"second_score":	128498
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4553,
			"primary_score":	999962,
			"second_score":	128497
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4554,
			"primary_score":	999962,
			"second_score":	128496
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4555,
			"primary_score":	999962,
			"second_score":	128495
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4558,
			"primary_score":	999962,
			"second_score":	128494
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4559,
			"primary_score":	999962,
			"second_score":	128493
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4561,
			"primary_score":	999962,
			"second_score":	128492
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4562,
			"primary_score":	999962,
			"second_score":	128491
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4564,
			"primary_score":	999962,
			"second_score":	128489
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4567,
			"primary_score":	999962,
			"second_score":	128488
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4568,
			"primary_score":	999962,
			"second_score":	128487
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4569,
			"primary_score":	999962,
			"second_score":	128377
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4570,
			"primary_score":	999962,
			"second_score":	128376
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4739,
			"primary_score":	999861,
			"second_score":	131755
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4772,
			"primary_score":	999861,
			"second_score":	131754
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4773,
			"primary_score":	999861,
			"second_score":	131753
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4778,
			"primary_score":	999861,
			"second_score":	131752
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4782,
			"primary_score":	999861,
			"second_score":	131751
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4783,
			"primary_score":	999861,
			"second_score":	131750
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4784,
			"primary_score":	999861,
			"second_score":	131749
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4870,
			"primary_score":	999861,
			"second_score":	131748
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4871,
			"primary_score":	999861,
			"second_score":	131747
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4872,
			"primary_score":	999861,
			"second_score":	131746
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4873,
			"primary_score":	999861,
			"second_score":	131745
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5297,
			"primary_score":	999866,
			"second_score":	165673
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5298,
			"primary_score":	999866,
			"second_score":	165672
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5299,
			"primary_score":	999866,
			"second_score":	165671
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5303,
			"primary_score":	999992,
			"second_score":	136110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5304,
			"primary_score":	999992,
			"second_score":	136109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5305,
			"primary_score":	999992,
			"second_score":	136108
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5410,
			"primary_score":	999866,
			"second_score":	165669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5411,
			"primary_score":	999866,
			"second_score":	165668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5414,
			"primary_score":	999866,
			"second_score":	165667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5415,
			"primary_score":	999866,
			"second_score":	165666
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5417,
			"primary_score":	999866,
			"second_score":	165665
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5418,
			"primary_score":	999866,
			"second_score":	165664
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5481,
			"primary_score":	999861,
			"second_score":	133985
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5486,
			"primary_score":	999861,
			"second_score":	133984
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5487,
			"primary_score":	999861,
			"second_score":	133983
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5488,
			"primary_score":	999861,
			"second_score":	133982
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5512,
			"primary_score":	999870,
			"second_score":	134154
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5513,
			"primary_score":	999870,
			"second_score":	134153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5514,
			"primary_score":	999870,
			"second_score":	134152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5516,
			"primary_score":	999870,
			"second_score":	134151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5517,
			"primary_score":	999870,
			"second_score":	134150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5518,
			"primary_score":	999870,
			"second_score":	134122
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6045,
			"primary_score":	999861,
			"second_score":	129932
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6046,
			"primary_score":	999861,
			"second_score":	129931
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6051,
			"primary_score":	999861,
			"second_score":	129930
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6055,
			"primary_score":	999861,
			"second_score":	129929
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6100,
			"primary_score":	999861,
			"second_score":	129927
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6101,
			"primary_score":	999861,
			"second_score":	129926
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6102,
			"primary_score":	999861,
			"second_score":	129925
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6842,
			"primary_score":	999861,
			"second_score":	134834
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6843,
			"primary_score":	999861,
			"second_score":	134833
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6853,
			"primary_score":	999861,
			"second_score":	134832
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6854,
			"primary_score":	999861,
			"second_score":	134831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6855,
			"primary_score":	999889,
			"second_score":	129363
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6856,
			"primary_score":	999889,
			"second_score":	129362
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6870,
			"primary_score":	999889,
			"second_score":	129361
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6871,
			"primary_score":	999889,
			"second_score":	129360
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6872,
			"primary_score":	999889,
			"second_score":	129359
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6876,
			"primary_score":	999861,
			"second_score":	134829
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6877,
			"primary_score":	999861,
			"second_score":	134828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6878,
			"primary_score":	999861,
			"second_score":	134827
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6989,
			"primary_score":	999861,
			"second_score":	134825
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6990,
			"primary_score":	999861,
			"second_score":	134824
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6991,
			"primary_score":	999861,
			"second_score":	134823
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6992,
			"primary_score":	999861,
			"second_score":	134822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7077,
			"primary_score":	999889,
			"second_score":	129357
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7078,
			"primary_score":	999889,
			"second_score":	129356
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7079,
			"primary_score":	999889,
			"second_score":	129355
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7080,
			"primary_score":	999889,
			"second_score":	129354
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7082,
			"primary_score":	999889,
			"second_score":	129353
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7083,
			"primary_score":	999889,
			"second_score":	129352
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7084,
			"primary_score":	999889,
			"second_score":	129351
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7085,
			"primary_score":	999889,
			"second_score":	129350
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7087,
			"primary_score":	999889,
			"second_score":	129349
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7088,
			"primary_score":	999889,
			"second_score":	129348
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7089,
			"primary_score":	999889,
			"second_score":	129347
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7090,
			"primary_score":	999889,
			"second_score":	129346
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7092,
			"primary_score":	999889,
			"second_score":	129345
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7093,
			"primary_score":	999889,
			"second_score":	129344
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7101,
			"primary_score":	999889,
			"second_score":	129343
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7102,
			"primary_score":	999889,
			"second_score":	129342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7118,
			"primary_score":	999889,
			"second_score":	129340
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7119,
			"primary_score":	999889,
			"second_score":	129339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7120,
			"primary_score":	999889,
			"second_score":	129338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7121,
			"primary_score":	999889,
			"second_score":	129337
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7123,
			"primary_score":	999889,
			"second_score":	129336
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7124,
			"primary_score":	999889,
			"second_score":	129335
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7125,
			"primary_score":	999889,
			"second_score":	129334
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7126,
			"primary_score":	999889,
			"second_score":	129333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7128,
			"primary_score":	999889,
			"second_score":	129332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7129,
			"primary_score":	999889,
			"second_score":	129331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7130,
			"primary_score":	999889,
			"second_score":	129330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7131,
			"primary_score":	999889,
			"second_score":	129329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7133,
			"primary_score":	999889,
			"second_score":	129328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7134,
			"primary_score":	999889,
			"second_score":	129327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7135,
			"primary_score":	999889,
			"second_score":	129326
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7136,
			"primary_score":	999889,
			"second_score":	129325
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7138,
			"primary_score":	999889,
			"second_score":	129324
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7139,
			"primary_score":	999889,
			"second_score":	129323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7142,
			"primary_score":	999889,
			"second_score":	129322
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7143,
			"primary_score":	999889,
			"second_score":	129321
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7145,
			"primary_score":	999889,
			"second_score":	129320
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7146,
			"primary_score":	999889,
			"second_score":	129319
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7379,
			"primary_score":	999861,
			"second_score":	131681
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7380,
			"primary_score":	999861,
			"second_score":	131680
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7381,
			"primary_score":	999861,
			"second_score":	131679
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7382,
			"primary_score":	999861,
			"second_score":	131678
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7384,
			"primary_score":	999861,
			"second_score":	131677
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7385,
			"primary_score":	999861,
			"second_score":	131676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7386,
			"primary_score":	999861,
			"second_score":	131675
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7387,
			"primary_score":	999861,
			"second_score":	131674
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7389,
			"primary_score":	999861,
			"second_score":	131673
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7390,
			"primary_score":	999861,
			"second_score":	131672
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7391,
			"primary_score":	999861,
			"second_score":	131671
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7392,
			"primary_score":	999861,
			"second_score":	131670
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7394,
			"primary_score":	999861,
			"second_score":	131669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7395,
			"primary_score":	999861,
			"second_score":	131668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7396,
			"primary_score":	999861,
			"second_score":	131667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7397,
			"primary_score":	999861,
			"second_score":	131666
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7399,
			"primary_score":	999861,
			"second_score":	131665
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7400,
			"primary_score":	999861,
			"second_score":	131664
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7401,
			"primary_score":	999861,
			"second_score":	131663
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7402,
			"primary_score":	999861,
			"second_score":	131662
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7404,
			"primary_score":	999861,
			"second_score":	131661
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7405,
			"primary_score":	999861,
			"second_score":	131660
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7406,
			"primary_score":	999861,
			"second_score":	131659
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7407,
			"primary_score":	999861,
			"second_score":	131658
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7409,
			"primary_score":	999861,
			"second_score":	131657
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7410,
			"primary_score":	999861,
			"second_score":	131656
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7411,
			"primary_score":	999861,
			"second_score":	131655
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7528,
			"primary_score":	999962,
			"second_score":	129196
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7529,
			"primary_score":	999962,
			"second_score":	129195
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7530,
			"primary_score":	999962,
			"second_score":	129194
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7531,
			"primary_score":	999962,
			"second_score":	129193
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7534,
			"primary_score":	999887,
			"second_score":	165572
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7535,
			"primary_score":	999887,
			"second_score":	165571
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7536,
			"primary_score":	999898,
			"second_score":	165570
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7540,
			"primary_score":	999898,
			"second_score":	165569
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7541,
			"primary_score":	999898,
			"second_score":	165568
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7658,
			"primary_score":	999861,
			"second_score":	142990
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7659,
			"primary_score":	999861,
			"second_score":	142989
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7660,
			"primary_score":	999861,
			"second_score":	142988
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8066,
			"primary_score":	999861,
			"second_score":	142986
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8067,
			"primary_score":	999861,
			"second_score":	142985
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8068,
			"primary_score":	999861,
			"second_score":	142984
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8069,
			"primary_score":	999861,
			"second_score":	142983
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8071,
			"primary_score":	999861,
			"second_score":	142982
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8072,
			"primary_score":	999861,
			"second_score":	142981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8075,
			"primary_score":	999861,
			"second_score":	142980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8076,
			"primary_score":	999861,
			"second_score":	142979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8078,
			"primary_score":	999861,
			"second_score":	142978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8079,
			"primary_score":	999861,
			"second_score":	142977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8086,
			"primary_score":	999870,
			"second_score":	133978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8120,
			"primary_score":	999870,
			"second_score":	133977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8121,
			"primary_score":	999870,
			"second_score":	133976
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8122,
			"primary_score":	999870,
			"second_score":	133973
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8123,
			"primary_score":	999870,
			"second_score":	133972
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8134,
			"primary_score":	999870,
			"second_score":	133971
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8140,
			"primary_score":	999871,
			"second_score":	133970
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8141,
			"primary_score":	999871,
			"second_score":	133969
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8179,
			"primary_score":	999870,
			"second_score":	133967
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8180,
			"primary_score":	999870,
			"second_score":	133966
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8181,
			"primary_score":	999870,
			"second_score":	133965
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8184,
			"primary_score":	999870,
			"second_score":	133906
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8186,
			"primary_score":	999870,
			"second_score":	133905
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8187,
			"primary_score":	999870,
			"second_score":	133904
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8188,
			"primary_score":	999870,
			"second_score":	133875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8189,
			"primary_score":	999870,
			"second_score":	133844
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8190,
			"primary_score":	999870,
			"second_score":	133843
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8199,
			"primary_score":	999870,
			"second_score":	133914
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8200,
			"primary_score":	999870,
			"second_score":	133913
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8201,
			"primary_score":	999870,
			"second_score":	133910
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8202,
			"primary_score":	999870,
			"second_score":	133909
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8204,
			"primary_score":	999870,
			"second_score":	133908
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8205,
			"primary_score":	999870,
			"second_score":	133915
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8207,
			"primary_score":	999870,
			"second_score":	133907
		}, {
			"file":	"Zend/zend_list.c",
			"line":	52,
			"primary_score":	999861,
			"second_score":	113948
		}, {
			"file":	"Zend/zend_list.c",
			"line":	54,
			"primary_score":	999861,
			"second_score":	113947
		}, {
			"file":	"Zend/zend_list.c",
			"line":	56,
			"primary_score":	999861,
			"second_score":	113937
		}, {
			"file":	"Zend/zend_list.c",
			"line":	57,
			"primary_score":	999861,
			"second_score":	113936
		}, {
			"file":	"Zend/zend_list.c",
			"line":	170,
			"primary_score":	999861,
			"second_score":	113914
		}, {
			"file":	"Zend/zend_list.c",
			"line":	171,
			"primary_score":	999861,
			"second_score":	113913
		}, {
			"file":	"Zend/zend_list.c",
			"line":	172,
			"primary_score":	999861,
			"second_score":	113912
		}, {
			"file":	"Zend/zend_list.c",
			"line":	174,
			"primary_score":	999861,
			"second_score":	113911
		}, {
			"file":	"Zend/zend_list.c",
			"line":	175,
			"primary_score":	999861,
			"second_score":	113901
		}, {
			"file":	"Zend/zend_list.c",
			"line":	183,
			"primary_score":	999861,
			"second_score":	113900
		}, {
			"file":	"Zend/zend_list.c",
			"line":	185,
			"primary_score":	999861,
			"second_score":	113791
		}, {
			"file":	"Zend/zend_list.c",
			"line":	239,
			"primary_score":	999861,
			"second_score":	103390
		}, {
			"file":	"Zend/zend_list.c",
			"line":	347,
			"primary_score":	999861,
			"second_score":	6223
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	28,
			"primary_score":	999861,
			"second_score":	147588
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	29,
			"primary_score":	999861,
			"second_score":	147587
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	30,
			"primary_score":	999861,
			"second_score":	147586
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	31,
			"primary_score":	999861,
			"second_score":	147585
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	32,
			"primary_score":	999861,
			"second_score":	147584
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	33,
			"primary_score":	999861,
			"second_score":	147583
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	39,
			"primary_score":	999861,
			"second_score":	144151
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	41,
			"primary_score":	999861,
			"second_score":	144047
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	42,
			"primary_score":	999861,
			"second_score":	144046
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	43,
			"primary_score":	999861,
			"second_score":	144045
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	46,
			"primary_score":	999861,
			"second_score":	144044
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	48,
			"primary_score":	999861,
			"second_score":	144043
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	49,
			"primary_score":	999861,
			"second_score":	144042
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	51,
			"primary_score":	999861,
			"second_score":	144041
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	93,
			"primary_score":	999861,
			"second_score":	133275
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	94,
			"primary_score":	999861,
			"second_score":	133274
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	96,
			"primary_score":	999861,
			"second_score":	133273
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	97,
			"primary_score":	999861,
			"second_score":	133272
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	98,
			"primary_score":	999861,
			"second_score":	133271
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	99,
			"primary_score":	999861,
			"second_score":	133268
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	100,
			"primary_score":	999861,
			"second_score":	133201
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	109,
			"primary_score":	999861,
			"second_score":	3144
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	111,
			"primary_score":	999861,
			"second_score":	3143
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	112,
			"primary_score":	999868,
			"second_score":	133395
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	113,
			"primary_score":	999868,
			"second_score":	133394
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	116,
			"primary_score":	999868,
			"second_score":	133393
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	117,
			"primary_score":	999868,
			"second_score":	133374
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	120,
			"primary_score":	999861,
			"second_score":	3142
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	126,
			"primary_score":	999861,
			"second_score":	120264
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	127,
			"primary_score":	999861,
			"second_score":	120260
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	190,
			"primary_score":	999861,
			"second_score":	14747
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	192,
			"primary_score":	999861,
			"second_score":	14746
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	233,
			"primary_score":	999861,
			"second_score":	126132
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	235,
			"primary_score":	999861,
			"second_score":	126131
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	961,
			"primary_score":	999884,
			"second_score":	121406
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	962,
			"primary_score":	999884,
			"second_score":	121405
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	963,
			"primary_score":	999884,
			"second_score":	121404
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	964,
			"primary_score":	999884,
			"second_score":	121403
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	965,
			"primary_score":	999884,
			"second_score":	121402
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	966,
			"primary_score":	999884,
			"second_score":	121401
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	968,
			"primary_score":	999884,
			"second_score":	121400
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	969,
			"primary_score":	999884,
			"second_score":	121399
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	970,
			"primary_score":	999884,
			"second_score":	121398
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	978,
			"primary_score":	999884,
			"second_score":	121397
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	990,
			"primary_score":	999884,
			"second_score":	121386
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1010,
			"primary_score":	999884,
			"second_score":	121385
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1021,
			"primary_score":	999884,
			"second_score":	121384
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1035,
			"primary_score":	999884,
			"second_score":	121383
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1038,
			"primary_score":	999884,
			"second_score":	121382
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1251,
			"primary_score":	999866,
			"second_score":	129947
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1252,
			"primary_score":	999866,
			"second_score":	129946
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1254,
			"primary_score":	999866,
			"second_score":	129945
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1255,
			"primary_score":	999875,
			"second_score":	129944
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1282,
			"primary_score":	999866,
			"second_score":	129943
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1431,
			"primary_score":	999875,
			"second_score":	121168
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1432,
			"primary_score":	999875,
			"second_score":	121167
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1434,
			"primary_score":	999875,
			"second_score":	121166
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	31,
			"primary_score":	999866,
			"second_score":	123507
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	32,
			"primary_score":	999866,
			"second_score":	123506
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	33,
			"primary_score":	999866,
			"second_score":	123505
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	34,
			"primary_score":	999866,
			"second_score":	123504
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	39,
			"primary_score":	999866,
			"second_score":	119233
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	43,
			"primary_score":	999866,
			"second_score":	119232
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	49,
			"primary_score":	999868,
			"second_score":	119231
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	63,
			"primary_score":	999872,
			"second_score":	119260
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	65,
			"primary_score":	999872,
			"second_score":	119259
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	157,
			"primary_score":	999907,
			"second_score":	123475
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	41,
			"primary_score":	999861,
			"second_score":	113621
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	42,
			"primary_score":	999861,
			"second_score":	113555
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	47,
			"primary_score":	999861,
			"second_score":	119012
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	49,
			"primary_score":	999861,
			"second_score":	119011
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	50,
			"primary_score":	999866,
			"second_score":	118948
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	68,
			"primary_score":	999889,
			"second_score":	119107
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	70,
			"primary_score":	999889,
			"second_score":	119106
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	73,
			"primary_score":	999889,
			"second_score":	119105
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	82,
			"primary_score":	999861,
			"second_score":	114520
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	84,
			"primary_score":	999861,
			"second_score":	114519
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	85,
			"primary_score":	999866,
			"second_score":	114514
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	104,
			"primary_score":	999866,
			"second_score":	123497
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	105,
			"primary_score":	999866,
			"second_score":	123496
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	107,
			"primary_score":	999866,
			"second_score":	123495
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	111,
			"primary_score":	999866,
			"second_score":	123494
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	115,
			"primary_score":	999866,
			"second_score":	123493
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	117,
			"primary_score":	999866,
			"second_score":	123492
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	118,
			"primary_score":	999866,
			"second_score":	123491
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	119,
			"primary_score":	999866,
			"second_score":	123490
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	121,
			"primary_score":	999866,
			"second_score":	123489
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	122,
			"primary_score":	999866,
			"second_score":	123488
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	123,
			"primary_score":	999866,
			"second_score":	123487
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	124,
			"primary_score":	999866,
			"second_score":	123486
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	125,
			"primary_score":	999866,
			"second_score":	123485
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	126,
			"primary_score":	999866,
			"second_score":	123484
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	127,
			"primary_score":	999866,
			"second_score":	123483
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	132,
			"primary_score":	999866,
			"second_score":	123482
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	144,
			"primary_score":	999917,
			"second_score":	122562
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	146,
			"primary_score":	999917,
			"second_score":	122561
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	167,
			"primary_score":	999866,
			"second_score":	119283
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	169,
			"primary_score":	999866,
			"second_score":	119282
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	171,
			"primary_score":	999866,
			"second_score":	119281
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	172,
			"primary_score":	999866,
			"second_score":	119279
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	173,
			"primary_score":	999866,
			"second_score":	119121
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	175,
			"primary_score":	999917,
			"second_score":	122423
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	183,
			"primary_score":	999866,
			"second_score":	119278
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	184,
			"primary_score":	999866,
			"second_score":	119277
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	186,
			"primary_score":	999866,
			"second_score":	119276
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	190,
			"primary_score":	999866,
			"second_score":	119275
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	196,
			"primary_score":	999866,
			"second_score":	119274
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	197,
			"primary_score":	999866,
			"second_score":	119273
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	198,
			"primary_score":	999866,
			"second_score":	119272
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	199,
			"primary_score":	999871,
			"second_score":	119271
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	201,
			"primary_score":	999871,
			"second_score":	119270
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	202,
			"primary_score":	999871,
			"second_score":	119269
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	203,
			"primary_score":	999871,
			"second_score":	119268
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	205,
			"primary_score":	999871,
			"second_score":	119267
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	206,
			"primary_score":	999871,
			"second_score":	119261
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	209,
			"primary_score":	999871,
			"second_score":	119258
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	214,
			"primary_score":	999866,
			"second_score":	119256
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	216,
			"primary_score":	999866,
			"second_score":	119255
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	217,
			"primary_score":	999869,
			"second_score":	119252
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	218,
			"primary_score":	999866,
			"second_score":	119244
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	219,
			"primary_score":	999866,
			"second_score":	119243
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	220,
			"primary_score":	999866,
			"second_score":	119237
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	223,
			"primary_score":	999866,
			"second_score":	119129
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	225,
			"primary_score":	999866,
			"second_score":	119125
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	230,
			"primary_score":	999866,
			"second_score":	119123
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	239,
			"primary_score":	999866,
			"second_score":	119122
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	270,
			"primary_score":	999870,
			"second_score":	121132
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	272,
			"primary_score":	999870,
			"second_score":	121131
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	48,
			"primary_score":	999861,
			"second_score":	166901
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	63,
			"primary_score":	999861,
			"second_score":	166905
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	64,
			"primary_score":	999861,
			"second_score":	166904
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	65,
			"primary_score":	999861,
			"second_score":	166903
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	66,
			"primary_score":	999861,
			"second_score":	166902
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	68,
			"primary_score":	999861,
			"second_score":	166796
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	69,
			"primary_score":	999861,
			"second_score":	166795
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	71,
			"primary_score":	999861,
			"second_score":	166794
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	73,
			"primary_score":	999861,
			"second_score":	166793
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	74,
			"primary_score":	999861,
			"second_score":	166792
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	75,
			"primary_score":	999861,
			"second_score":	166790
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	76,
			"primary_score":	999861,
			"second_score":	166789
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	78,
			"primary_score":	999861,
			"second_score":	166788
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	79,
			"primary_score":	999861,
			"second_score":	166787
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	80,
			"primary_score":	999861,
			"second_score":	166786
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	82,
			"primary_score":	999861,
			"second_score":	166785
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	84,
			"primary_score":	999861,
			"second_score":	166784
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	85,
			"primary_score":	999861,
			"second_score":	166783
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	86,
			"primary_score":	999861,
			"second_score":	166782
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	88,
			"primary_score":	999861,
			"second_score":	166781
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	89,
			"primary_score":	999861,
			"second_score":	166780
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	91,
			"primary_score":	999861,
			"second_score":	166779
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	93,
			"primary_score":	999861,
			"second_score":	166778
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	95,
			"primary_score":	999861,
			"second_score":	166777
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	97,
			"primary_score":	999861,
			"second_score":	166776
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	98,
			"primary_score":	999861,
			"second_score":	166775
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	100,
			"primary_score":	999861,
			"second_score":	166774
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	101,
			"primary_score":	999861,
			"second_score":	166773
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	103,
			"primary_score":	999861,
			"second_score":	166772
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	166771
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	110,
			"primary_score":	999861,
			"second_score":	14836
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	122,
			"primary_score":	999861,
			"second_score":	14838
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	124,
			"primary_score":	999861,
			"second_score":	14837
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	136,
			"primary_score":	999861,
			"second_score":	114600
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	140,
			"primary_score":	999861,
			"second_score":	114599
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	197,
			"primary_score":	999861,
			"second_score":	114583
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	201,
			"primary_score":	999861,
			"second_score":	114582
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	266,
			"primary_score":	999861,
			"second_score":	15271
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	268,
			"primary_score":	999861,
			"second_score":	15270
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	271,
			"primary_score":	999861,
			"second_score":	15269
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	312,
			"primary_score":	999861,
			"second_score":	19051
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	314,
			"primary_score":	999861,
			"second_score":	19050
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	315,
			"primary_score":	999861,
			"second_score":	18987
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	316,
			"primary_score":	999861,
			"second_score":	18986
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	319,
			"primary_score":	999861,
			"second_score":	18978
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	321,
			"primary_score":	999861,
			"second_score":	15268
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	329,
			"primary_score":	999861,
			"second_score":	15267
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	330,
			"primary_score":	999861,
			"second_score":	15259
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	333,
			"primary_score":	999861,
			"second_score":	15258
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	334,
			"primary_score":	999861,
			"second_score":	14829
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	335,
			"primary_score":	999861,
			"second_score":	14821
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	336,
			"primary_score":	999861,
			"second_score":	16325
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	338,
			"primary_score":	999861,
			"second_score":	14820
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	339,
			"primary_score":	999861,
			"second_score":	14819
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	350,
			"primary_score":	999861,
			"second_score":	120832
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	351,
			"primary_score":	999861,
			"second_score":	120831
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	352,
			"primary_score":	999861,
			"second_score":	120830
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	354,
			"primary_score":	999861,
			"second_score":	120829
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	359,
			"primary_score":	999861,
			"second_score":	120828
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	360,
			"primary_score":	999861,
			"second_score":	120827
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	363,
			"primary_score":	999861,
			"second_score":	120808
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	367,
			"primary_score":	999861,
			"second_score":	120807
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	369,
			"primary_score":	999861,
			"second_score":	120788
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	370,
			"primary_score":	999872,
			"second_score":	120787
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	371,
			"primary_score":	999872,
			"second_score":	120786
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	372,
			"primary_score":	999872,
			"second_score":	120773
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	373,
			"primary_score":	999872,
			"second_score":	120772
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	375,
			"primary_score":	999872,
			"second_score":	120770
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	378,
			"primary_score":	999861,
			"second_score":	120751
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	379,
			"primary_score":	999861,
			"second_score":	120750
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	380,
			"primary_score":	999861,
			"second_score":	120749
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	381,
			"primary_score":	999861,
			"second_score":	120432
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	382,
			"primary_score":	999861,
			"second_score":	120429
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	384,
			"primary_score":	999861,
			"second_score":	120428
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	386,
			"primary_score":	999861,
			"second_score":	120363
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	388,
			"primary_score":	999861,
			"second_score":	120318
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	391,
			"primary_score":	999861,
			"second_score":	120317
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	394,
			"primary_score":	999861,
			"second_score":	120316
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	397,
			"primary_score":	999861,
			"second_score":	120315
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	400,
			"primary_score":	999861,
			"second_score":	120314
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	401,
			"primary_score":	999861,
			"second_score":	120313
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	403,
			"primary_score":	999861,
			"second_score":	120310
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	416,
			"primary_score":	999861,
			"second_score":	133668
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	417,
			"primary_score":	999861,
			"second_score":	133667
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	418,
			"primary_score":	999861,
			"second_score":	133666
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	423,
			"primary_score":	999861,
			"second_score":	133673
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	424,
			"primary_score":	999861,
			"second_score":	133672
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	426,
			"primary_score":	999861,
			"second_score":	133671
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	437,
			"primary_score":	999861,
			"second_score":	133670
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	439,
			"primary_score":	999861,
			"second_score":	133669
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	441,
			"primary_score":	999861,
			"second_score":	133665
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	446,
			"primary_score":	999861,
			"second_score":	133676
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	488,
			"primary_score":	999861,
			"second_score":	133637
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	490,
			"primary_score":	999861,
			"second_score":	133636
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	493,
			"primary_score":	999861,
			"second_score":	133635
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	496,
			"primary_score":	999861,
			"second_score":	133634
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	497,
			"primary_score":	999861,
			"second_score":	133633
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	500,
			"primary_score":	999861,
			"second_score":	133630
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	501,
			"primary_score":	999866,
			"second_score":	131222
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	502,
			"primary_score":	999866,
			"second_score":	131166
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	504,
			"primary_score":	999861,
			"second_score":	133629
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	505,
			"primary_score":	999861,
			"second_score":	133628
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	506,
			"primary_score":	999861,
			"second_score":	133569
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	508,
			"primary_score":	999861,
			"second_score":	133568
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	509,
			"primary_score":	999861,
			"second_score":	133567
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	510,
			"primary_score":	999861,
			"second_score":	133511
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	513,
			"primary_score":	999861,
			"second_score":	133510
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	514,
			"primary_score":	999861,
			"second_score":	133509
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	515,
			"primary_score":	999861,
			"second_score":	133508
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	516,
			"primary_score":	999861,
			"second_score":	133464
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	517,
			"primary_score":	999861,
			"second_score":	133463
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	519,
			"primary_score":	999861,
			"second_score":	133462
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	520,
			"primary_score":	999861,
			"second_score":	130659
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	522,
			"primary_score":	999861,
			"second_score":	133461
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	530,
			"primary_score":	999861,
			"second_score":	125342
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	537,
			"primary_score":	999861,
			"second_score":	125403
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	539,
			"primary_score":	999861,
			"second_score":	133460
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	540,
			"primary_score":	999861,
			"second_score":	133456
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	543,
			"primary_score":	999861,
			"second_score":	133455
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	544,
			"primary_score":	999861,
			"second_score":	133454
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	543,
			"primary_score":	999861,
			"second_score":	119924
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	544,
			"primary_score":	999861,
			"second_score":	119923
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	546,
			"primary_score":	999861,
			"second_score":	119922
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	558,
			"primary_score":	999861,
			"second_score":	119921
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	559,
			"primary_score":	999861,
			"second_score":	119893
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	561,
			"primary_score":	999861,
			"second_score":	119892
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	608,
			"primary_score":	999861,
			"second_score":	119891
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1239,
			"primary_score":	999940,
			"second_score":	125157
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1240,
			"primary_score":	999940,
			"second_score":	125156
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1242,
			"primary_score":	999940,
			"second_score":	125155
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1245,
			"primary_score":	999940,
			"second_score":	125154
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1249,
			"primary_score":	999940,
			"second_score":	125153
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1258,
			"primary_score":	999940,
			"second_score":	125152
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1261,
			"primary_score":	999940,
			"second_score":	125151
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1276,
			"primary_score":	999940,
			"second_score":	125150
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1277,
			"primary_score":	999940,
			"second_score":	125149
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1279,
			"primary_score":	999940,
			"second_score":	125068
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1280,
			"primary_score":	999940,
			"second_score":	125067
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1281,
			"primary_score":	999940,
			"second_score":	125066
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1282,
			"primary_score":	999940,
			"second_score":	125065
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1284,
			"primary_score":	999940,
			"second_score":	125058
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1287,
			"primary_score":	999940,
			"second_score":	125057
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1290,
			"primary_score":	999940,
			"second_score":	125056
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1892,
			"primary_score":	999861,
			"second_score":	149786
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1893,
			"primary_score":	999861,
			"second_score":	149785
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1894,
			"primary_score":	999861,
			"second_score":	149784
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1896,
			"primary_score":	999861,
			"second_score":	149783
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1897,
			"primary_score":	999861,
			"second_score":	149775
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1899,
			"primary_score":	999861,
			"second_score":	149768
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1901,
			"primary_score":	999861,
			"second_score":	149767
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1907,
			"primary_score":	999861,
			"second_score":	149808
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	78,
			"primary_score":	999861,
			"second_score":	113623
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	79,
			"primary_score":	999861,
			"second_score":	113649
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	86,
			"primary_score":	999861,
			"second_score":	114624
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	88,
			"primary_score":	999861,
			"second_score":	114623
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	96,
			"primary_score":	999861,
			"second_score":	114625
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	97,
			"primary_score":	999861,
			"second_score":	114622
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	98,
			"primary_score":	999861,
			"second_score":	114621
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	100,
			"primary_score":	999861,
			"second_score":	114620
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	104,
			"primary_score":	999861,
			"second_score":	114619
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	114618
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	62,
			"primary_score":	999861,
			"second_score":	133065
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	64,
			"primary_score":	999861,
			"second_score":	125454
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	65,
			"primary_score":	999861,
			"second_score":	125453
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	66,
			"primary_score":	999861,
			"second_score":	125452
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	67,
			"primary_score":	999861,
			"second_score":	125451
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	87,
			"primary_score":	999861,
			"second_score":	125424
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	88,
			"primary_score":	999861,
			"second_score":	125423
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	89,
			"primary_score":	999861,
			"second_score":	125422
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	90,
			"primary_score":	999861,
			"second_score":	125421
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	27,
			"primary_score":	999861,
			"second_score":	114639
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	28,
			"primary_score":	999861,
			"second_score":	114638
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	29,
			"primary_score":	999861,
			"second_score":	114637
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	30,
			"primary_score":	999861,
			"second_score":	114636
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	50,
			"primary_score":	999861,
			"second_score":	134241
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	51,
			"primary_score":	999861,
			"second_score":	134240
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	52,
			"primary_score":	999861,
			"second_score":	134239
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	62,
			"primary_score":	999861,
			"second_score":	134231
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	63,
			"primary_score":	999861,
			"second_score":	134230
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	65,
			"primary_score":	999861,
			"second_score":	134211
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	83,
			"primary_score":	999861,
			"second_score":	133450
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	84,
			"primary_score":	999861,
			"second_score":	133449
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	93,
			"primary_score":	999861,
			"second_score":	113372
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	95,
			"primary_score":	999861,
			"second_score":	113371
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	103,
			"primary_score":	999861,
			"second_score":	113370
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	121,
			"primary_score":	999861,
			"second_score":	133680
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	123,
			"primary_score":	999861,
			"second_score":	133679
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	130,
			"primary_score":	999861,
			"second_score":	133678
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	46,
			"primary_score":	999861,
			"second_score":	133248
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	47,
			"primary_score":	999861,
			"second_score":	133247
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	67,
			"primary_score":	999861,
			"second_score":	133257
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	68,
			"primary_score":	999861,
			"second_score":	133256
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	74,
			"primary_score":	999861,
			"second_score":	133255
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	75,
			"primary_score":	999861,
			"second_score":	133254
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	76,
			"primary_score":	999861,
			"second_score":	133253
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	77,
			"primary_score":	999861,
			"second_score":	133252
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	78,
			"primary_score":	999861,
			"second_score":	133251
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	83,
			"primary_score":	999861,
			"second_score":	133258
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	84,
			"primary_score":	999861,
			"second_score":	133250
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	85,
			"primary_score":	999861,
			"second_score":	133249
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	117,
			"primary_score":	999873,
			"second_score":	124650
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	118,
			"primary_score":	999873,
			"second_score":	124649
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	289,
			"primary_score":	999861,
			"second_score":	133260
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	299,
			"primary_score":	999861,
			"second_score":	133259
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	301,
			"primary_score":	999861,
			"second_score":	133246
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	302,
			"primary_score":	999861,
			"second_score":	133245
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	309,
			"primary_score":	999861,
			"second_score":	133244
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	310,
			"primary_score":	999861,
			"second_score":	133243
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	311,
			"primary_score":	999861,
			"second_score":	133224
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	313,
			"primary_score":	999861,
			"second_score":	133223
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	322,
			"primary_score":	999861,
			"second_score":	133270
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	325,
			"primary_score":	999861,
			"second_score":	133269
		}, {
			"file":	"Zend/zend_string.c",
			"line":	77,
			"primary_score":	999861,
			"second_score":	6123
		}, {
			"file":	"Zend/zend_string.c",
			"line":	78,
			"primary_score":	999861,
			"second_score":	6122
		}, {
			"file":	"Zend/zend_string.c",
			"line":	85,
			"primary_score":	999861,
			"second_score":	134492
		}, {
			"file":	"Zend/zend_string.c",
			"line":	86,
			"primary_score":	999861,
			"second_score":	134491
		}, {
			"file":	"Zend/zend_string.c",
			"line":	87,
			"primary_score":	999861,
			"second_score":	134490
		}, {
			"file":	"Zend/zend_string.c",
			"line":	89,
			"primary_score":	999861,
			"second_score":	134489
		}, {
			"file":	"Zend/zend_string.c",
			"line":	90,
			"primary_score":	999883,
			"second_score":	133284
		}, {
			"file":	"Zend/zend_string.c",
			"line":	93,
			"primary_score":	999861,
			"second_score":	134488
		}, {
			"file":	"Zend/zend_string.c",
			"line":	94,
			"primary_score":	999861,
			"second_score":	134478
		}, {
			"file":	"Zend/zend_string.c",
			"line":	95,
			"primary_score":	999861,
			"second_score":	134477
		}, {
			"file":	"Zend/zend_string.c",
			"line":	96,
			"primary_score":	999861,
			"second_score":	134476
		}, {
			"file":	"Zend/zend_string.c",
			"line":	97,
			"primary_score":	999861,
			"second_score":	134475
		}, {
			"file":	"Zend/zend_string.c",
			"line":	98,
			"primary_score":	999861,
			"second_score":	152621
		}, {
			"file":	"Zend/zend_string.c",
			"line":	99,
			"primary_score":	999861,
			"second_score":	152620
		}, {
			"file":	"Zend/zend_string.c",
			"line":	100,
			"primary_score":	999861,
			"second_score":	152619
		}, {
			"file":	"Zend/zend_string.c",
			"line":	102,
			"primary_score":	999861,
			"second_score":	152600
		}, {
			"file":	"Zend/zend_string.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	135096
		}, {
			"file":	"Zend/zend_string.c",
			"line":	108,
			"primary_score":	999861,
			"second_score":	136174
		}, {
			"file":	"Zend/zend_string.c",
			"line":	114,
			"primary_score":	999861,
			"second_score":	136173
		}, {
			"file":	"Zend/zend_string.c",
			"line":	115,
			"primary_score":	999861,
			"second_score":	136172
		}, {
			"file":	"Zend/zend_string.c",
			"line":	121,
			"primary_score":	999861,
			"second_score":	136171
		}, {
			"file":	"Zend/zend_string.c",
			"line":	122,
			"primary_score":	999861,
			"second_score":	136170
		}, {
			"file":	"Zend/zend_string.c",
			"line":	123,
			"primary_score":	999861,
			"second_score":	136169
		}, {
			"file":	"Zend/zend_string.c",
			"line":	124,
			"primary_score":	999861,
			"second_score":	136168
		}, {
			"file":	"Zend/zend_string.c",
			"line":	126,
			"primary_score":	999861,
			"second_score":	136149
		}, {
			"file":	"Zend/zend_string.c",
			"line":	127,
			"primary_score":	999861,
			"second_score":	136148
		}, {
			"file":	"Zend/zend_string.c",
			"line":	128,
			"primary_score":	999861,
			"second_score":	136147
		}, {
			"file":	"Zend/zend_string.c",
			"line":	129,
			"primary_score":	999861,
			"second_score":	136146
		}, {
			"file":	"Zend/zend_string.c",
			"line":	131,
			"primary_score":	999861,
			"second_score":	136145
		}, {
			"file":	"Zend/zend_string.c",
			"line":	132,
			"primary_score":	999861,
			"second_score":	136144
		}, {
			"file":	"Zend/zend_string.c",
			"line":	133,
			"primary_score":	999861,
			"second_score":	136143
		}, {
			"file":	"Zend/zend_string.c",
			"line":	134,
			"primary_score":	999861,
			"second_score":	136142
		}, {
			"file":	"Zend/zend_string.c",
			"line":	137,
			"primary_score":	999861,
			"second_score":	136141
		}, {
			"file":	"Zend/zend_string.c",
			"line":	139,
			"primary_score":	999861,
			"second_score":	136139
		}, {
			"file":	"Zend/zend_string.c",
			"line":	140,
			"primary_score":	999861,
			"second_score":	136138
		}, {
			"file":	"Zend/zend_string.c",
			"line":	141,
			"primary_score":	999861,
			"second_score":	136137
		}, {
			"file":	"Zend/zend_string.c",
			"line":	142,
			"primary_score":	999861,
			"second_score":	136136
		}, {
			"file":	"Zend/zend_string.c",
			"line":	143,
			"primary_score":	999861,
			"second_score":	136135
		}, {
			"file":	"Zend/zend_string.c",
			"line":	145,
			"primary_score":	999861,
			"second_score":	136134
		}, {
			"file":	"Zend/zend_string.c",
			"line":	149,
			"primary_score":	999861,
			"second_score":	136133
		}, {
			"file":	"Zend/zend_string.c",
			"line":	151,
			"primary_score":	999861,
			"second_score":	136132
		}, {
			"file":	"Zend/zend_string.c",
			"line":	153,
			"primary_score":	999861,
			"second_score":	136130
		}, {
			"file":	"Zend/zend_string.c",
			"line":	155,
			"primary_score":	999861,
			"second_score":	136129
		}, {
			"file":	"Zend/zend_string.c",
			"line":	174,
			"primary_score":	999861,
			"second_score":	136128
		}, {
			"file":	"Zend/zend_string.c",
			"line":	188,
			"primary_score":	999861,
			"second_score":	112819
		}, {
			"file":	"Zend/zend_string.c",
			"line":	189,
			"primary_score":	999861,
			"second_score":	112818
		}, {
			"file":	"Zend/zend_string.c",
			"line":	192,
			"primary_score":	999861,
			"second_score":	112817
		}, {
			"file":	"Zend/zend_string.c",
			"line":	199,
			"primary_score":	999861,
			"second_score":	112816
		}, {
			"file":	"Zend/zend_string.c",
			"line":	200,
			"primary_score":	999861,
			"second_score":	103422
		}, {
			"file":	"Zend/zend_string.c",
			"line":	201,
			"primary_score":	999861,
			"second_score":	103421
		}, {
			"file":	"Zend/zend_string.c",
			"line":	202,
			"primary_score":	999861,
			"second_score":	109989
		}, {
			"file":	"Zend/zend_string.c",
			"line":	203,
			"primary_score":	999861,
			"second_score":	109988
		}, {
			"file":	"Zend/zend_string.c",
			"line":	204,
			"primary_score":	999861,
			"second_score":	109987
		}, {
			"file":	"Zend/zend_string.c",
			"line":	208,
			"primary_score":	999861,
			"second_score":	109986
		}, {
			"file":	"Zend/zend_string.c",
			"line":	209,
			"primary_score":	999861,
			"second_score":	104842
		}, {
			"file":	"Zend/zend_string.c",
			"line":	211,
			"primary_score":	999861,
			"second_score":	109985
		}, {
			"file":	"Zend/zend_string.c",
			"line":	213,
			"primary_score":	999861,
			"second_score":	109984
		}, {
			"file":	"Zend/zend_string.c",
			"line":	215,
			"primary_score":	999861,
			"second_score":	103420
		}, {
			"file":	"Zend/zend_string.c",
			"line":	216,
			"primary_score":	999861,
			"second_score":	103419
		}, {
			"file":	"Zend/zend_string.c",
			"line":	218,
			"primary_score":	999861,
			"second_score":	103418
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	459,
			"primary_score":	999861,
			"second_score":	6279
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	467,
			"primary_score":	999861,
			"second_score":	6225
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1379,
			"primary_score":	999861,
			"second_score":	6278
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1380,
			"primary_score":	999861,
			"second_score":	6277
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1382,
			"primary_score":	999861,
			"second_score":	6276
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1383,
			"primary_score":	999861,
			"second_score":	6275
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1384,
			"primary_score":	999861,
			"second_score":	6229
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1385,
			"primary_score":	999861,
			"second_score":	6228
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1389,
			"primary_score":	999861,
			"second_score":	6227
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1391,
			"primary_score":	999861,
			"second_score":	6226
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	32,
			"primary_score":	999861,
			"second_score":	113951
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	37,
			"primary_score":	999861,
			"second_score":	115277
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	38,
			"primary_score":	999861,
			"second_score":	115256
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	41,
			"primary_score":	999861,
			"second_score":	114748
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	43,
			"primary_score":	999861,
			"second_score":	114747
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	44,
			"primary_score":	999861,
			"second_score":	114746
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	45,
			"primary_score":	999861,
			"second_score":	114738
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	48,
			"primary_score":	999861,
			"second_score":	114719
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	51,
			"primary_score":	999866,
			"second_score":	119285
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	53,
			"primary_score":	999866,
			"second_score":	119284
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	55,
			"primary_score":	999866,
			"second_score":	119117
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	58,
			"primary_score":	999861,
			"second_score":	113950
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	61,
			"primary_score":	999861,
			"second_score":	113949
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	63,
			"primary_score":	999861,
			"second_score":	113747
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	77,
			"primary_score":	999861,
			"second_score":	15287
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	81,
			"primary_score":	999861,
			"second_score":	19028
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	82,
			"primary_score":	999861,
			"second_score":	19025
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	107,
			"primary_score":	999861,
			"second_score":	133081
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	121,
			"primary_score":	999861,
			"second_score":	133080
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	124,
			"primary_score":	999861,
			"second_score":	133079
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	143,
			"primary_score":	999917,
			"second_score":	122564
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	144,
			"primary_score":	999917,
			"second_score":	122563
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	146,
			"primary_score":	999917,
			"second_score":	122560
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	153,
			"primary_score":	999861,
			"second_score":	120923
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	32,
			"primary_score":	999861,
			"second_score":	113953
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	33,
			"primary_score":	999861,
			"second_score":	115386
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	35,
			"primary_score":	999861,
			"second_score":	113952
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	42,
			"primary_score":	999861,
			"second_score":	133083
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	43,
			"primary_score":	999861,
			"second_score":	122254
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	45,
			"primary_score":	999861,
			"second_score":	133082
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	345,
			"primary_score":	999861,
			"second_score":	133195
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	346,
			"primary_score":	999861,
			"second_score":	133194
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	347,
			"primary_score":	999861,
			"second_score":	133193
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	350,
			"primary_score":	999861,
			"second_score":	133192
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	354,
			"primary_score":	999861,
			"second_score":	133191
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	356,
			"primary_score":	999861,
			"second_score":	133190
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	363,
			"primary_score":	999861,
			"second_score":	133181
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	364,
			"primary_score":	999861,
			"second_score":	133180
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	365,
			"primary_score":	999861,
			"second_score":	133179
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	366,
			"primary_score":	999861,
			"second_score":	133178
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	367,
			"primary_score":	999861,
			"second_score":	133177
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	368,
			"primary_score":	999861,
			"second_score":	133176
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	369,
			"primary_score":	999861,
			"second_score":	133175
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	370,
			"primary_score":	999861,
			"second_score":	133174
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	371,
			"primary_score":	999861,
			"second_score":	133173
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	372,
			"primary_score":	999861,
			"second_score":	133172
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	373,
			"primary_score":	999861,
			"second_score":	133171
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	374,
			"primary_score":	999861,
			"second_score":	133170
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	375,
			"primary_score":	999861,
			"second_score":	133169
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	377,
			"primary_score":	999861,
			"second_score":	133168
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	379,
			"primary_score":	999861,
			"second_score":	133167
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	380,
			"primary_score":	999861,
			"second_score":	133166
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	383,
			"primary_score":	999861,
			"second_score":	133133
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	395,
			"primary_score":	999861,
			"second_score":	133132
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	396,
			"primary_score":	999861,
			"second_score":	133131
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	397,
			"primary_score":	999861,
			"second_score":	133130
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	399,
			"primary_score":	999861,
			"second_score":	133129
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	400,
			"primary_score":	999861,
			"second_score":	133128
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	402,
			"primary_score":	999861,
			"second_score":	133127
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	403,
			"primary_score":	999861,
			"second_score":	124998
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	410,
			"primary_score":	999861,
			"second_score":	124997
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	411,
			"primary_score":	999861,
			"second_score":	120838
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	414,
			"primary_score":	999861,
			"second_score":	120837
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	431,
			"primary_score":	999861,
			"second_score":	119596
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	436,
			"primary_score":	999861,
			"second_score":	119595
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	437,
			"primary_score":	999861,
			"second_score":	119594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	458,
			"primary_score":	999861,
			"second_score":	120851
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	459,
			"primary_score":	999861,
			"second_score":	120850
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	461,
			"primary_score":	999861,
			"second_score":	120849
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	462,
			"primary_score":	999861,
			"second_score":	120848
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	463,
			"primary_score":	999861,
			"second_score":	120847
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	474,
			"primary_score":	999861,
			"second_score":	120846
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	476,
			"primary_score":	999861,
			"second_score":	120845
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	478,
			"primary_score":	999861,
			"second_score":	120841
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	481,
			"primary_score":	999861,
			"second_score":	120840
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	566,
			"primary_score":	999861,
			"second_score":	120839
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	571,
			"primary_score":	999861,
			"second_score":	125434
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	572,
			"primary_score":	999861,
			"second_score":	125433
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	573,
			"primary_score":	999861,
			"second_score":	125432
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	575,
			"primary_score":	999861,
			"second_score":	125431
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	576,
			"primary_score":	999861,
			"second_score":	125430
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	589,
			"primary_score":	999861,
			"second_score":	125429
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	603,
			"primary_score":	999861,
			"second_score":	125428
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	604,
			"primary_score":	999874,
			"second_score":	121332
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	605,
			"primary_score":	999874,
			"second_score":	121331
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	606,
			"primary_score":	999874,
			"second_score":	121330
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	607,
			"primary_score":	999874,
			"second_score":	121329
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	608,
			"primary_score":	999874,
			"second_score":	121328
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	609,
			"primary_score":	999874,
			"second_score":	121327
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	610,
			"primary_score":	999874,
			"second_score":	121326
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	613,
			"primary_score":	999861,
			"second_score":	125427
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	614,
			"primary_score":	999861,
			"second_score":	125417
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	615,
			"primary_score":	999861,
			"second_score":	125413
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	617,
			"primary_score":	999861,
			"second_score":	125412
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	618,
			"primary_score":	999861,
			"second_score":	125411
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	620,
			"primary_score":	999861,
			"second_score":	125410
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	621,
			"primary_score":	999861,
			"second_score":	125382
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	622,
			"primary_score":	999861,
			"second_score":	125379
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	623,
			"primary_score":	999861,
			"second_score":	125378
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	625,
			"primary_score":	999861,
			"second_score":	125377
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	626,
			"primary_score":	999861,
			"second_score":	125376
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	627,
			"primary_score":	999861,
			"second_score":	125375
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	628,
			"primary_score":	999861,
			"second_score":	125374
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	630,
			"primary_score":	999861,
			"second_score":	125373
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	631,
			"primary_score":	999861,
			"second_score":	125372
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	632,
			"primary_score":	999861,
			"second_score":	125363
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	636,
			"primary_score":	999861,
			"second_score":	125362
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	638,
			"primary_score":	999861,
			"second_score":	125361
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	643,
			"primary_score":	999861,
			"second_score":	125224
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	644,
			"primary_score":	999872,
			"second_score":	129471
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	709,
			"primary_score":	999861,
			"second_score":	125223
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	710,
			"primary_score":	999861,
			"second_score":	125222
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	712,
			"primary_score":	999861,
			"second_score":	125221
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	713,
			"primary_score":	999875,
			"second_score":	121084
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	714,
			"primary_score":	999875,
			"second_score":	121083
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	722,
			"primary_score":	999875,
			"second_score":	121082
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	724,
			"primary_score":	999875,
			"second_score":	121060
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	725,
			"primary_score":	999875,
			"second_score":	121059
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	726,
			"primary_score":	999875,
			"second_score":	121058
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	729,
			"primary_score":	999861,
			"second_score":	125220
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	730,
			"primary_score":	999861,
			"second_score":	125219
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	732,
			"primary_score":	999861,
			"second_score":	125218
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	734,
			"primary_score":	999861,
			"second_score":	125176
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	742,
			"primary_score":	999861,
			"second_score":	125175
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	747,
			"primary_score":	999871,
			"second_score":	121341
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	748,
			"primary_score":	999871,
			"second_score":	121340
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	794,
			"primary_score":	999866,
			"second_score":	130148
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	795,
			"primary_score":	999866,
			"second_score":	130147
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	796,
			"primary_score":	999866,
			"second_score":	130146
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	798,
			"primary_score":	999866,
			"second_score":	130145
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	799,
			"primary_score":	999866,
			"second_score":	130144
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	808,
			"primary_score":	999866,
			"second_score":	130143
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	809,
			"primary_score":	999866,
			"second_score":	130119
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	810,
			"primary_score":	999866,
			"second_score":	129951
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	812,
			"primary_score":	999866,
			"second_score":	129948
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	814,
			"primary_score":	999866,
			"second_score":	129942
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	822,
			"primary_score":	999875,
			"second_score":	129941
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	823,
			"primary_score":	999875,
			"second_score":	129940
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	824,
			"primary_score":	999875,
			"second_score":	129938
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	827,
			"primary_score":	999875,
			"second_score":	129934
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	830,
			"primary_score":	999875,
			"second_score":	129896
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	831,
			"primary_score":	999875,
			"second_score":	129895
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	832,
			"primary_score":	999875,
			"second_score":	129894
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	834,
			"primary_score":	999875,
			"second_score":	129893
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	835,
			"primary_score":	999875,
			"second_score":	129892
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1151,
			"primary_score":	999866,
			"second_score":	130198
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1153,
			"primary_score":	999866,
			"second_score":	130197
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1154,
			"primary_score":	999866,
			"second_score":	130196
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1155,
			"primary_score":	999866,
			"second_score":	130195
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1161,
			"primary_score":	999866,
			"second_score":	130194
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1163,
			"primary_score":	999866,
			"second_score":	130193
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1164,
			"primary_score":	999866,
			"second_score":	130192
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1167,
			"primary_score":	999866,
			"second_score":	130191
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1168,
			"primary_score":	999866,
			"second_score":	130155
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1178,
			"primary_score":	999866,
			"second_score":	130153
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1179,
			"primary_score":	999866,
			"second_score":	130152
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1731,
			"primary_score":	999861,
			"second_score":	121245
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1733,
			"primary_score":	999861,
			"second_score":	121244
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1734,
			"primary_score":	999861,
			"second_score":	121243
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1736,
			"primary_score":	999861,
			"second_score":	121242
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1737,
			"primary_score":	999861,
			"second_score":	121241
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1739,
			"primary_score":	999861,
			"second_score":	121240
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1746,
			"primary_score":	999861,
			"second_score":	121239
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1749,
			"primary_score":	999861,
			"second_score":	121178
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1750,
			"primary_score":	999861,
			"second_score":	121177
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1919,
			"primary_score":	999861,
			"second_score":	125571
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1921,
			"primary_score":	999861,
			"second_score":	125570
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1923,
			"primary_score":	999861,
			"second_score":	125569
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1925,
			"primary_score":	999861,
			"second_score":	125450
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1927,
			"primary_score":	999861,
			"second_score":	125449
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1931,
			"primary_score":	999861,
			"second_score":	125438
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1933,
			"primary_score":	999861,
			"second_score":	125436
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1935,
			"primary_score":	999861,
			"second_score":	125435
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1940,
			"primary_score":	999861,
			"second_score":	120858
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1941,
			"primary_score":	999861,
			"second_score":	120857
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1944,
			"primary_score":	999861,
			"second_score":	120856
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1945,
			"primary_score":	999861,
			"second_score":	120855
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1947,
			"primary_score":	999861,
			"second_score":	120854
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1948,
			"primary_score":	999861,
			"second_score":	120853
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1951,
			"primary_score":	999861,
			"second_score":	118883
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1952,
			"primary_score":	999861,
			"second_score":	118882
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1954,
			"primary_score":	999861,
			"second_score":	118881
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1956,
			"primary_score":	999861,
			"second_score":	118880
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1957,
			"primary_score":	999861,
			"second_score":	118856
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1958,
			"primary_score":	999861,
			"second_score":	118848
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1959,
			"primary_score":	999861,
			"second_score":	118845
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1978,
			"primary_score":	999861,
			"second_score":	120852
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2077,
			"primary_score":	999861,
			"second_score":	133124
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2079,
			"primary_score":	999861,
			"second_score":	133123
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2080,
			"primary_score":	999861,
			"second_score":	133122
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2084,
			"primary_score":	999861,
			"second_score":	133121
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2085,
			"primary_score":	999861,
			"second_score":	133120
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2086,
			"primary_score":	999861,
			"second_score":	133119
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2089,
			"primary_score":	999861,
			"second_score":	133118
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2091,
			"primary_score":	999861,
			"second_score":	133117
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2092,
			"primary_score":	999861,
			"second_score":	133093
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2093,
			"primary_score":	999861,
			"second_score":	133085
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2094,
			"primary_score":	999861,
			"second_score":	133084
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2096,
			"primary_score":	999861,
			"second_score":	133078
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2099,
			"primary_score":	999861,
			"second_score":	133074
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2100,
			"primary_score":	999861,
			"second_score":	133073
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	5999,
			"primary_score":	999861,
			"second_score":	119591
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6000,
			"primary_score":	999861,
			"second_score":	119590
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6001,
			"primary_score":	999861,
			"second_score":	119589
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6002,
			"primary_score":	999861,
			"second_score":	119588
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6004,
			"primary_score":	999861,
			"second_score":	119587
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6005,
			"primary_score":	999861,
			"second_score":	119586
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6007,
			"primary_score":	999861,
			"second_score":	119584
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6014,
			"primary_score":	999861,
			"second_score":	119583
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6017,
			"primary_score":	999861,
			"second_score":	119570
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6018,
			"primary_score":	999861,
			"second_score":	119544
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6019,
			"primary_score":	999861,
			"second_score":	119543
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6504,
			"primary_score":	999977,
			"second_score":	124996
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6505,
			"primary_score":	999977,
			"second_score":	124995
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6506,
			"primary_score":	999977,
			"second_score":	124994
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6507,
			"primary_score":	999977,
			"second_score":	124993
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6508,
			"primary_score":	999977,
			"second_score":	124992
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6509,
			"primary_score":	999977,
			"second_score":	124991
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6511,
			"primary_score":	999977,
			"second_score":	124990
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6512,
			"primary_score":	999977,
			"second_score":	124989
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6514,
			"primary_score":	999977,
			"second_score":	124987
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6521,
			"primary_score":	999977,
			"second_score":	124986
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6524,
			"primary_score":	999990,
			"second_score":	124985
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6525,
			"primary_score":	999990,
			"second_score":	124984
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6527,
			"primary_score":	999990,
			"second_score":	124983
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6528,
			"primary_score":	999990,
			"second_score":	124654
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6531,
			"primary_score":	999990,
			"second_score":	124653
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6534,
			"primary_score":	999990,
			"second_score":	124652
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6536,
			"primary_score":	999990,
			"second_score":	124651
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6550,
			"primary_score":	999990,
			"second_score":	121157
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6553,
			"primary_score":	999990,
			"second_score":	121156
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10178,
			"primary_score":	999861,
			"second_score":	121382
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10179,
			"primary_score":	999861,
			"second_score":	121381
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10180,
			"primary_score":	999861,
			"second_score":	121380
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10181,
			"primary_score":	999861,
			"second_score":	121379
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10183,
			"primary_score":	999861,
			"second_score":	121378
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10184,
			"primary_score":	999861,
			"second_score":	121377
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10186,
			"primary_score":	999861,
			"second_score":	121366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10193,
			"primary_score":	999861,
			"second_score":	121365
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10196,
			"primary_score":	999861,
			"second_score":	121304
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10197,
			"primary_score":	999861,
			"second_score":	121250
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10198,
			"primary_score":	999861,
			"second_score":	121249
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10211,
			"primary_score":	999861,
			"second_score":	120649
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10212,
			"primary_score":	999861,
			"second_score":	120648
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10213,
			"primary_score":	999861,
			"second_score":	120647
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10214,
			"primary_score":	999861,
			"second_score":	120646
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10216,
			"primary_score":	999861,
			"second_score":	120645
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10217,
			"primary_score":	999861,
			"second_score":	120644
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10219,
			"primary_score":	999861,
			"second_score":	120633
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10222,
			"primary_score":	999861,
			"second_score":	120632
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10223,
			"primary_score":	999861,
			"second_score":	120627
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10224,
			"primary_score":	999861,
			"second_score":	120596
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10228,
			"primary_score":	999861,
			"second_score":	120595
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10236,
			"primary_score":	999861,
			"second_score":	120594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10519,
			"primary_score":	999861,
			"second_score":	123039
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10520,
			"primary_score":	999861,
			"second_score":	123038
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10521,
			"primary_score":	999861,
			"second_score":	123037
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10522,
			"primary_score":	999861,
			"second_score":	123036
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10524,
			"primary_score":	999861,
			"second_score":	123025
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10528,
			"primary_score":	999861,
			"second_score":	123024
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10537,
			"primary_score":	999861,
			"second_score":	123022
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10538,
			"primary_score":	999861,
			"second_score":	123020
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10539,
			"primary_score":	999861,
			"second_score":	123016
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10541,
			"primary_score":	999861,
			"second_score":	122982
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10542,
			"primary_score":	999861,
			"second_score":	122981
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10547,
			"primary_score":	999861,
			"second_score":	123046
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10548,
			"primary_score":	999861,
			"second_score":	123045
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10549,
			"primary_score":	999861,
			"second_score":	123044
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10551,
			"primary_score":	999861,
			"second_score":	123043
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10552,
			"primary_score":	999861,
			"second_score":	123042
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10553,
			"primary_score":	999861,
			"second_score":	123041
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10554,
			"primary_score":	999861,
			"second_score":	123040
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11261,
			"primary_score":	999861,
			"second_score":	119708
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11262,
			"primary_score":	999861,
			"second_score":	119707
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11263,
			"primary_score":	999861,
			"second_score":	119706
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11265,
			"primary_score":	999861,
			"second_score":	119705
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11266,
			"primary_score":	999861,
			"second_score":	119704
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11268,
			"primary_score":	999861,
			"second_score":	119693
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11269,
			"primary_score":	999861,
			"second_score":	119690
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11270,
			"primary_score":	999861,
			"second_score":	119689
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11272,
			"primary_score":	999861,
			"second_score":	119655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11273,
			"primary_score":	999861,
			"second_score":	119601
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11274,
			"primary_score":	999861,
			"second_score":	119600
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11405,
			"primary_score":	999951,
			"second_score":	125171
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11406,
			"primary_score":	999951,
			"second_score":	125170
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11408,
			"primary_score":	999951,
			"second_score":	125169
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11409,
			"primary_score":	999951,
			"second_score":	125168
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11412,
			"primary_score":	999951,
			"second_score":	125055
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11414,
			"primary_score":	999951,
			"second_score":	125001
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11415,
			"primary_score":	999951,
			"second_score":	125000
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26202,
			"primary_score":	999903,
			"second_score":	121362
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26203,
			"primary_score":	999903,
			"second_score":	121361
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26205,
			"primary_score":	999903,
			"second_score":	121360
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26207,
			"primary_score":	999903,
			"second_score":	121356
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26211,
			"primary_score":	999903,
			"second_score":	121355
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26220,
			"primary_score":	999903,
			"second_score":	121353
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26221,
			"primary_score":	999903,
			"second_score":	121351
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26222,
			"primary_score":	999903,
			"second_score":	121347
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26224,
			"primary_score":	999903,
			"second_score":	121346
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26225,
			"primary_score":	999903,
			"second_score":	121345
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26316,
			"primary_score":	999903,
			"second_score":	121366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26318,
			"primary_score":	999903,
			"second_score":	121365
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26322,
			"primary_score":	999903,
			"second_score":	121364
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26323,
			"primary_score":	999903,
			"second_score":	121363
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28290,
			"primary_score":	999884,
			"second_score":	121436
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28291,
			"primary_score":	999884,
			"second_score":	121435
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28292,
			"primary_score":	999884,
			"second_score":	121434
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28293,
			"primary_score":	999884,
			"second_score":	121433
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28296,
			"primary_score":	999884,
			"second_score":	121432
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28297,
			"primary_score":	999884,
			"second_score":	121431
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28299,
			"primary_score":	999884,
			"second_score":	121425
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28301,
			"primary_score":	999884,
			"second_score":	121424
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28306,
			"primary_score":	999884,
			"second_score":	121423
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28307,
			"primary_score":	999884,
			"second_score":	121422
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28309,
			"primary_score":	999884,
			"second_score":	121421
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28311,
			"primary_score":	999884,
			"second_score":	121417
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28313,
			"primary_score":	999884,
			"second_score":	121416
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28315,
			"primary_score":	999884,
			"second_score":	121410
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28317,
			"primary_score":	999884,
			"second_score":	121409
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28319,
			"primary_score":	999884,
			"second_score":	121408
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28324,
			"primary_score":	999884,
			"second_score":	121407
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28325,
			"primary_score":	999884,
			"second_score":	121381
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28328,
			"primary_score":	999884,
			"second_score":	121380
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28331,
			"primary_score":	999884,
			"second_score":	121379
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28338,
			"primary_score":	999884,
			"second_score":	121376
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28341,
			"primary_score":	999884,
			"second_score":	121375
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28342,
			"primary_score":	999884,
			"second_score":	121373
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28353,
			"primary_score":	999884,
			"second_score":	121371
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28354,
			"primary_score":	999884,
			"second_score":	121370
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32090,
			"primary_score":	999870,
			"second_score":	122487
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32091,
			"primary_score":	999870,
			"second_score":	122486
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32092,
			"primary_score":	999870,
			"second_score":	122485
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32093,
			"primary_score":	999870,
			"second_score":	122484
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32095,
			"primary_score":	999870,
			"second_score":	122483
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32096,
			"primary_score":	999870,
			"second_score":	122482
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32097,
			"primary_score":	999870,
			"second_score":	122471
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32099,
			"primary_score":	999870,
			"second_score":	122467
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32113,
			"primary_score":	999870,
			"second_score":	122466
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32122,
			"primary_score":	999870,
			"second_score":	122465
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32124,
			"primary_score":	999870,
			"second_score":	122464
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32127,
			"primary_score":	999870,
			"second_score":	122463
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32129,
			"primary_score":	999870,
			"second_score":	122396
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32136,
			"primary_score":	999870,
			"second_score":	122395
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32138,
			"primary_score":	999870,
			"second_score":	122371
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32139,
			"primary_score":	999870,
			"second_score":	122370
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39394,
			"primary_score":	999861,
			"second_score":	133458
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39413,
			"primary_score":	999861,
			"second_score":	133457
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39418,
			"primary_score":	999861,
			"second_score":	133459
		}, {
			"file":	"ext/date/php_date.c",
			"line":	626,
			"primary_score":	999861,
			"second_score":	118378
		}, {
			"file":	"ext/date/php_date.c",
			"line":	629,
			"primary_score":	999861,
			"second_score":	118377
		}, {
			"file":	"ext/date/php_date.c",
			"line":	630,
			"primary_score":	999861,
			"second_score":	118376
		}, {
			"file":	"ext/date/php_date.c",
			"line":	635,
			"primary_score":	999861,
			"second_score":	118375
		}, {
			"file":	"ext/date/php_date.c",
			"line":	640,
			"primary_score":	999861,
			"second_score":	118374
		}, {
			"file":	"ext/date/php_date.c",
			"line":	789,
			"primary_score":	999861,
			"second_score":	53379
		}, {
			"file":	"ext/date/php_date.c",
			"line":	791,
			"primary_score":	999861,
			"second_score":	52700
		}, {
			"file":	"ext/date/php_date.c",
			"line":	795,
			"primary_score":	999861,
			"second_score":	52699
		}, {
			"file":	"ext/dom/document.c",
			"line":	902,
			"primary_score":	999968,
			"second_score":	125531
		}, {
			"file":	"ext/dom/document.c",
			"line":	903,
			"primary_score":	999968,
			"second_score":	125530
		}, {
			"file":	"ext/dom/document.c",
			"line":	904,
			"primary_score":	999968,
			"second_score":	125529
		}, {
			"file":	"ext/dom/document.c",
			"line":	905,
			"primary_score":	999968,
			"second_score":	125528
		}, {
			"file":	"ext/dom/document.c",
			"line":	906,
			"primary_score":	999968,
			"second_score":	125527
		}, {
			"file":	"ext/dom/document.c",
			"line":	907,
			"primary_score":	999968,
			"second_score":	125526
		}, {
			"file":	"ext/dom/document.c",
			"line":	909,
			"primary_score":	999968,
			"second_score":	125525
		}, {
			"file":	"ext/dom/document.c",
			"line":	913,
			"primary_score":	999968,
			"second_score":	125432
		}, {
			"file":	"ext/dom/document.c",
			"line":	915,
			"primary_score":	999968,
			"second_score":	125426
		}, {
			"file":	"ext/dom/document.c",
			"line":	920,
			"primary_score":	999968,
			"second_score":	125425
		}, {
			"file":	"ext/dom/document.c",
			"line":	921,
			"primary_score":	999968,
			"second_score":	125424
		}, {
			"file":	"ext/dom/document.c",
			"line":	925,
			"primary_score":	999968,
			"second_score":	125423
		}, {
			"file":	"ext/dom/document.c",
			"line":	962,
			"primary_score":	999988,
			"second_score":	123791
		}, {
			"file":	"ext/dom/document.c",
			"line":	963,
			"primary_score":	999988,
			"second_score":	123790
		}, {
			"file":	"ext/dom/document.c",
			"line":	964,
			"primary_score":	999988,
			"second_score":	123789
		}, {
			"file":	"ext/dom/document.c",
			"line":	965,
			"primary_score":	999988,
			"second_score":	123788
		}, {
			"file":	"ext/dom/document.c",
			"line":	966,
			"primary_score":	999988,
			"second_score":	123787
		}, {
			"file":	"ext/dom/document.c",
			"line":	967,
			"primary_score":	999988,
			"second_score":	123786
		}, {
			"file":	"ext/dom/document.c",
			"line":	969,
			"primary_score":	999988,
			"second_score":	123785
		}, {
			"file":	"ext/dom/document.c",
			"line":	973,
			"primary_score":	999988,
			"second_score":	123697
		}, {
			"file":	"ext/dom/document.c",
			"line":	975,
			"primary_score":	999988,
			"second_score":	123691
		}, {
			"file":	"ext/dom/document.c",
			"line":	976,
			"primary_score":	999988,
			"second_score":	123690
		}, {
			"file":	"ext/dom/document.c",
			"line":	980,
			"primary_score":	999988,
			"second_score":	123689
		}, {
			"file":	"ext/dom/document.c",
			"line":	1453,
			"primary_score":	999912,
			"second_score":	129750
		}, {
			"file":	"ext/dom/document.c",
			"line":	1454,
			"primary_score":	999912,
			"second_score":	129749
		}, {
			"file":	"ext/dom/document.c",
			"line":	1455,
			"primary_score":	999912,
			"second_score":	129748
		}, {
			"file":	"ext/dom/document.c",
			"line":	1456,
			"primary_score":	999912,
			"second_score":	129747
		}, {
			"file":	"ext/dom/document.c",
			"line":	1457,
			"primary_score":	999912,
			"second_score":	129746
		}, {
			"file":	"ext/dom/document.c",
			"line":	1458,
			"primary_score":	999912,
			"second_score":	129745
		}, {
			"file":	"ext/dom/document.c",
			"line":	1460,
			"primary_score":	999912,
			"second_score":	129744
		}, {
			"file":	"ext/dom/document.c",
			"line":	1461,
			"primary_score":	999912,
			"second_score":	129734
		}, {
			"file":	"ext/dom/document.c",
			"line":	1466,
			"primary_score":	999912,
			"second_score":	129640
		}, {
			"file":	"ext/dom/document.c",
			"line":	1467,
			"primary_score":	999912,
			"second_score":	129634
		}, {
			"file":	"ext/dom/document.c",
			"line":	1469,
			"primary_score":	999912,
			"second_score":	129633
		}, {
			"file":	"ext/dom/document.c",
			"line":	1474,
			"primary_score":	999912,
			"second_score":	129632
		}, {
			"file":	"ext/dom/document.c",
			"line":	1478,
			"primary_score":	999912,
			"second_score":	129631
		}, {
			"file":	"ext/dom/document.c",
			"line":	1479,
			"primary_score":	999912,
			"second_score":	129628
		}, {
			"file":	"ext/dom/document.c",
			"line":	1480,
			"primary_score":	999912,
			"second_score":	129627
		}, {
			"file":	"ext/dom/document.c",
			"line":	1481,
			"primary_score":	999912,
			"second_score":	129624
		}, {
			"file":	"ext/dom/document.c",
			"line":	1488,
			"primary_score":	999912,
			"second_score":	129623
		}, {
			"file":	"ext/dom/document.c",
			"line":	1489,
			"primary_score":	999912,
			"second_score":	129622
		}, {
			"file":	"ext/dom/document.c",
			"line":	1492,
			"primary_score":	999912,
			"second_score":	129591
		}, {
			"file":	"ext/dom/document.c",
			"line":	2287,
			"primary_score":	999997,
			"second_score":	121261
		}, {
			"file":	"ext/dom/document.c",
			"line":	2288,
			"primary_score":	999997,
			"second_score":	121260
		}, {
			"file":	"ext/dom/document.c",
			"line":	2289,
			"primary_score":	999997,
			"second_score":	121259
		}, {
			"file":	"ext/dom/document.c",
			"line":	2290,
			"primary_score":	999997,
			"second_score":	121258
		}, {
			"file":	"ext/dom/document.c",
			"line":	2291,
			"primary_score":	999997,
			"second_score":	121257
		}, {
			"file":	"ext/dom/document.c",
			"line":	2292,
			"primary_score":	999997,
			"second_score":	121256
		}, {
			"file":	"ext/dom/document.c",
			"line":	2293,
			"primary_score":	999997,
			"second_score":	121255
		}, {
			"file":	"ext/dom/document.c",
			"line":	2294,
			"primary_score":	999997,
			"second_score":	121254
		}, {
			"file":	"ext/dom/document.c",
			"line":	2296,
			"primary_score":	999997,
			"second_score":	121253
		}, {
			"file":	"ext/dom/document.c",
			"line":	2302,
			"primary_score":	999997,
			"second_score":	121146
		}, {
			"file":	"ext/dom/document.c",
			"line":	2304,
			"primary_score":	999997,
			"second_score":	121140
		}, {
			"file":	"ext/dom/document.c",
			"line":	2305,
			"primary_score":	999997,
			"second_score":	121136
		}, {
			"file":	"ext/dom/document.c",
			"line":	2307,
			"primary_score":	999997,
			"second_score":	121135
		}, {
			"file":	"ext/dom/document.c",
			"line":	2309,
			"primary_score":	1000000,
			"second_score":	121134
		}, {
			"file":	"ext/dom/document.c",
			"line":	2310,
			"primary_score":	1000000,
			"second_score":	121128
		}, {
			"file":	"ext/dom/document.c",
			"line":	2315,
			"primary_score":	1000000,
			"second_score":	121127
		}, {
			"file":	"ext/dom/document.c",
			"line":	2316,
			"primary_score":	1000000,
			"second_score":	121126
		}, {
			"file":	"ext/dom/document.c",
			"line":	2321,
			"primary_score":	1000000,
			"second_score":	121125
		}, {
			"file":	"ext/dom/document.c",
			"line":	2322,
			"primary_score":	1000000,
			"second_score":	121124
		}, {
			"file":	"ext/dom/document.c",
			"line":	2323,
			"primary_score":	1000000,
			"second_score":	121123
		}, {
			"file":	"ext/dom/document.c",
			"line":	2326,
			"primary_score":	1000000,
			"second_score":	121122
		}, {
			"file":	"ext/dom/document.c",
			"line":	2328,
			"primary_score":	1000000,
			"second_score":	121089
		}, {
			"file":	"ext/dom/document.c",
			"line":	2331,
			"primary_score":	999997,
			"second_score":	121991
		}, {
			"file":	"ext/dom/document.c",
			"line":	2335,
			"primary_score":	999997,
			"second_score":	121990
		}, {
			"file":	"ext/dom/document.c",
			"line":	2338,
			"primary_score":	999997,
			"second_score":	121989
		}, {
			"file":	"ext/dom/document.c",
			"line":	2340,
			"primary_score":	999997,
			"second_score":	121895
		}, {
			"file":	"ext/dom/document.c",
			"line":	2341,
			"primary_score":	999997,
			"second_score":	121894
		}, {
			"file":	"ext/dom/node.c",
			"line":	164,
			"primary_score":	999955,
			"second_score":	122585
		}, {
			"file":	"ext/dom/node.c",
			"line":	166,
			"primary_score":	999955,
			"second_score":	122584
		}, {
			"file":	"ext/dom/node.c",
			"line":	168,
			"primary_score":	999962,
			"second_score":	124296
		}, {
			"file":	"ext/dom/node.c",
			"line":	189,
			"primary_score":	999962,
			"second_score":	124295
		}, {
			"file":	"ext/dom/node.c",
			"line":	1305,
			"primary_score":	999958,
			"second_score":	122743
		}, {
			"file":	"ext/dom/node.c",
			"line":	1306,
			"primary_score":	999958,
			"second_score":	122742
		}, {
			"file":	"ext/dom/node.c",
			"line":	1307,
			"primary_score":	999958,
			"second_score":	122741
		}, {
			"file":	"ext/dom/node.c",
			"line":	1308,
			"primary_score":	999958,
			"second_score":	122740
		}, {
			"file":	"ext/dom/node.c",
			"line":	1310,
			"primary_score":	999958,
			"second_score":	122739
		}, {
			"file":	"ext/dom/node.c",
			"line":	1314,
			"primary_score":	999958,
			"second_score":	122637
		}, {
			"file":	"ext/dom/node.c",
			"line":	1316,
			"primary_score":	999958,
			"second_score":	122631
		}, {
			"file":	"ext/dom/node.c",
			"line":	1320,
			"primary_score":	999958,
			"second_score":	122629
		}, {
			"file":	"ext/dom/node.c",
			"line":	1322,
			"primary_score":	999958,
			"second_score":	122623
		}, {
			"file":	"ext/dom/node.c",
			"line":	1324,
			"primary_score":	999958,
			"second_score":	122613
		}, {
			"file":	"ext/dom/node.c",
			"line":	1330,
			"primary_score":	999958,
			"second_score":	122610
		}, {
			"file":	"ext/dom/node.c",
			"line":	1335,
			"primary_score":	999958,
			"second_score":	122596
		}, {
			"file":	"ext/dom/node.c",
			"line":	1340,
			"primary_score":	999958,
			"second_score":	122595
		}, {
			"file":	"ext/dom/node.c",
			"line":	1345,
			"primary_score":	999958,
			"second_score":	122594
		}, {
			"file":	"ext/dom/node.c",
			"line":	1350,
			"primary_score":	999958,
			"second_score":	122593
		}, {
			"file":	"ext/dom/node.c",
			"line":	1354,
			"primary_score":	999958,
			"second_score":	122592
		}, {
			"file":	"ext/dom/node.c",
			"line":	1369,
			"primary_score":	999958,
			"second_score":	122591
		}, {
			"file":	"ext/dom/node.c",
			"line":	1382,
			"primary_score":	999958,
			"second_score":	122590
		}, {
			"file":	"ext/dom/node.c",
			"line":	1386,
			"primary_score":	999958,
			"second_score":	122589
		}, {
			"file":	"ext/dom/node.c",
			"line":	1387,
			"primary_score":	999958,
			"second_score":	122588
		}, {
			"file":	"ext/dom/node.c",
			"line":	1388,
			"primary_score":	999958,
			"second_score":	122587
		}, {
			"file":	"ext/dom/node.c",
			"line":	1394,
			"primary_score":	999958,
			"second_score":	122586
		}, {
			"file":	"ext/dom/node.c",
			"line":	1396,
			"primary_score":	999958,
			"second_score":	122583
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	112,
			"primary_score":	999945,
			"second_score":	122612
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	128,
			"primary_score":	999946,
			"second_score":	122611
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	136,
			"primary_score":	999945,
			"second_score":	122630
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	155,
			"primary_score":	999915,
			"second_score":	121139
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	157,
			"primary_score":	999915,
			"second_score":	121138
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	158,
			"primary_score":	999926,
			"second_score":	121137
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	160,
			"primary_score":	999915,
			"second_score":	128854
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	161,
			"primary_score":	999915,
			"second_score":	128832
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	162,
			"primary_score":	999915,
			"second_score":	128831
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	163,
			"primary_score":	999915,
			"second_score":	128830
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	164,
			"primary_score":	999915,
			"second_score":	128829
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	165,
			"primary_score":	999915,
			"second_score":	128828
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	166,
			"primary_score":	999915,
			"second_score":	128827
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	167,
			"primary_score":	999915,
			"second_score":	128826
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	168,
			"primary_score":	999915,
			"second_score":	128825
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	169,
			"primary_score":	999915,
			"second_score":	128824
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	170,
			"primary_score":	999916,
			"second_score":	128823
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	172,
			"primary_score":	999915,
			"second_score":	128822
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	225,
			"primary_score":	999928,
			"second_score":	123674
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	226,
			"primary_score":	999928,
			"second_score":	123673
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	228,
			"primary_score":	999928,
			"second_score":	123672
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	229,
			"primary_score":	999928,
			"second_score":	123671
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	230,
			"primary_score":	999928,
			"second_score":	123667
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	237,
			"primary_score":	999928,
			"second_score":	123666
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	243,
			"primary_score":	999942,
			"second_score":	122622
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	244,
			"primary_score":	999942,
			"second_score":	122621
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	246,
			"primary_score":	999942,
			"second_score":	122620
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	247,
			"primary_score":	999942,
			"second_score":	122616
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	248,
			"primary_score":	999942,
			"second_score":	122615
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	252,
			"primary_score":	999942,
			"second_score":	122614
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	259,
			"primary_score":	999896,
			"second_score":	129626
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	262,
			"primary_score":	999896,
			"second_score":	129625
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	270,
			"primary_score":	999926,
			"second_score":	122576
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	271,
			"primary_score":	999950,
			"second_score":	122575
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	273,
			"primary_score":	999927,
			"second_score":	123681
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	550,
			"primary_score":	999890,
			"second_score":	122569
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	910,
			"primary_score":	999861,
			"second_score":	58443
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	911,
			"primary_score":	999861,
			"second_score":	58428
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	912,
			"primary_score":	999861,
			"second_score":	58413
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	913,
			"primary_score":	999861,
			"second_score":	58398
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	914,
			"primary_score":	999861,
			"second_score":	58179
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	915,
			"primary_score":	999861,
			"second_score":	58074
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	916,
			"primary_score":	999861,
			"second_score":	58017
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	917,
			"primary_score":	999861,
			"second_score":	58002
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	918,
			"primary_score":	999861,
			"second_score":	57987
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	919,
			"primary_score":	999861,
			"second_score":	57870
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	920,
			"primary_score":	999861,
			"second_score":	57735
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	921,
			"primary_score":	999861,
			"second_score":	57618
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	922,
			"primary_score":	999861,
			"second_score":	57495
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	923,
			"primary_score":	999861,
			"second_score":	57474
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	924,
			"primary_score":	999861,
			"second_score":	57429
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	925,
			"primary_score":	999861,
			"second_score":	57390
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	926,
			"primary_score":	999861,
			"second_score":	57249
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	927,
			"primary_score":	999861,
			"second_score":	57132
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	928,
			"primary_score":	999861,
			"second_score":	56991
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	930,
			"primary_score":	999861,
			"second_score":	56874
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	932,
			"primary_score":	999861,
			"second_score":	56859
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	939,
			"primary_score":	999861,
			"second_score":	56706
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1010,
			"primary_score":	999891,
			"second_score":	119236
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1011,
			"primary_score":	999891,
			"second_score":	119235
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1013,
			"primary_score":	999891,
			"second_score":	119234
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1015,
			"primary_score":	999891,
			"second_score":	119230
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1016,
			"primary_score":	999904,
			"second_score":	119229
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1017,
			"primary_score":	999919,
			"second_score":	119451
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1019,
			"primary_score":	999912,
			"second_score":	119228
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1020,
			"primary_score":	999912,
			"second_score":	119198
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1022,
			"primary_score":	999904,
			"second_score":	119149
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1025,
			"primary_score":	999891,
			"second_score":	119148
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1055,
			"primary_score":	999890,
			"second_score":	123635
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1056,
			"primary_score":	999890,
			"second_score":	123634
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1058,
			"primary_score":	999890,
			"second_score":	123633
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1062,
			"primary_score":	999890,
			"second_score":	123620
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1064,
			"primary_score":	999890,
			"second_score":	123539
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1065,
			"primary_score":	999890,
			"second_score":	123538
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1066,
			"primary_score":	999890,
			"second_score":	123537
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1068,
			"primary_score":	999890,
			"second_score":	123536
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1069,
			"primary_score":	999890,
			"second_score":	123535
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1073,
			"primary_score":	999890,
			"second_score":	123534
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1075,
			"primary_score":	999890,
			"second_score":	123508
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1076,
			"primary_score":	999890,
			"second_score":	123503
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1077,
			"primary_score":	999890,
			"second_score":	123502
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1080,
			"primary_score":	999890,
			"second_score":	123499
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1120,
			"primary_score":	999891,
			"second_score":	123638
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1121,
			"primary_score":	999891,
			"second_score":	123637
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1123,
			"primary_score":	999891,
			"second_score":	123636
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1125,
			"primary_score":	999891,
			"second_score":	123498
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1126,
			"primary_score":	999891,
			"second_score":	123481
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1127,
			"primary_score":	999891,
			"second_score":	123480
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1129,
			"primary_score":	999891,
			"second_score":	123478
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1238,
			"primary_score":	999926,
			"second_score":	122582
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1239,
			"primary_score":	999926,
			"second_score":	122581
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1240,
			"primary_score":	999926,
			"second_score":	122580
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1242,
			"primary_score":	999926,
			"second_score":	122579
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1244,
			"primary_score":	999926,
			"second_score":	122578
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1250,
			"primary_score":	999926,
			"second_score":	122577
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1251,
			"primary_score":	999950,
			"second_score":	122574
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1252,
			"primary_score":	999950,
			"second_score":	122573
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1253,
			"primary_score":	999950,
			"second_score":	122571
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1254,
			"primary_score":	999950,
			"second_score":	122570
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1255,
			"primary_score":	999950,
			"second_score":	122568
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1256,
			"primary_score":	999950,
			"second_score":	122559
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1257,
			"primary_score":	999950,
			"second_score":	122558
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1260,
			"primary_score":	999927,
			"second_score":	123680
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1262,
			"primary_score":	999927,
			"second_score":	123679
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1277,
			"primary_score":	999944,
			"second_score":	125412
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1278,
			"primary_score":	999944,
			"second_score":	125411
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1287,
			"primary_score":	999983,
			"second_score":	123678
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1288,
			"primary_score":	999983,
			"second_score":	123677
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1337,
			"primary_score":	999927,
			"second_score":	123676
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1338,
			"primary_score":	999928,
			"second_score":	123675
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1340,
			"primary_score":	999927,
			"second_score":	123665
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1342,
			"primary_score":	999927,
			"second_score":	123476
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1343,
			"primary_score":	999927,
			"second_score":	123472
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1344,
			"primary_score":	999928,
			"second_score":	123471
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1345,
			"primary_score":	999928,
			"second_score":	123470
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1347,
			"primary_score":	999928,
			"second_score":	123469
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1350,
			"primary_score":	999927,
			"second_score":	123463
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1351,
			"primary_score":	999927,
			"second_score":	123371
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1362,
			"primary_score":	999955,
			"second_score":	122609
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1364,
			"primary_score":	999955,
			"second_score":	122608
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1368,
			"primary_score":	999957,
			"second_score":	122607
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1370,
			"primary_score":	999957,
			"second_score":	122606
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1371,
			"primary_score":	999957,
			"second_score":	122599
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1374,
			"primary_score":	999957,
			"second_score":	122598
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	1377,
			"primary_score":	999957,
			"second_score":	122597
		}, {
			"file":	"ext/ereg/ereg.c",
			"line":	230,
			"primary_score":	999861,
			"second_score":	53764
		}, {
			"file":	"ext/filter/filter.c",
			"line":	287,
			"primary_score":	999861,
			"second_score":	59851
		}, {
			"file":	"ext/filter/filter.c",
			"line":	289,
			"primary_score":	999861,
			"second_score":	59210
		}, {
			"file":	"ext/filter/filter.c",
			"line":	303,
			"primary_score":	999861,
			"second_score":	118871
		}, {
			"file":	"ext/filter/filter.c",
			"line":	304,
			"primary_score":	999861,
			"second_score":	118870
		}, {
			"file":	"ext/filter/filter.c",
			"line":	305,
			"primary_score":	999861,
			"second_score":	118869
		}, {
			"file":	"ext/filter/filter.c",
			"line":	306,
			"primary_score":	999861,
			"second_score":	118868
		}, {
			"file":	"ext/filter/filter.c",
			"line":	307,
			"primary_score":	999861,
			"second_score":	118400
		}, {
			"file":	"ext/filter/filter.c",
			"line":	308,
			"primary_score":	999861,
			"second_score":	118399
		}, {
			"file":	"ext/filter/filter.c",
			"line":	309,
			"primary_score":	999861,
			"second_score":	118398
		}, {
			"file":	"ext/hash/hash.c",
			"line":	889,
			"primary_score":	999861,
			"second_score":	60730
		}, {
			"file":	"ext/hash/hash.c",
			"line":	891,
			"primary_score":	999861,
			"second_score":	60451
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	289,
			"primary_score":	999861,
			"second_score":	62057
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	290,
			"primary_score":	999861,
			"second_score":	62006
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	291,
			"primary_score":	999861,
			"second_score":	61323
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2852,
			"primary_score":	999861,
			"second_score":	62056
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2856,
			"primary_score":	999861,
			"second_score":	62007
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	158,
			"primary_score":	999919,
			"second_score":	119409
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	160,
			"primary_score":	999919,
			"second_score":	119408
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	162,
			"primary_score":	999919,
			"second_score":	119407
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	174,
			"primary_score":	999919,
			"second_score":	119406
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	581,
			"primary_score":	999861,
			"second_score":	54208
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	583,
			"primary_score":	999861,
			"second_score":	54207
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	585,
			"primary_score":	999861,
			"second_score":	54206
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	586,
			"primary_score":	999861,
			"second_score":	54205
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	587,
			"primary_score":	999861,
			"second_score":	54186
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	683,
			"primary_score":	999861,
			"second_score":	54210
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	690,
			"primary_score":	999861,
			"second_score":	54209
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	692,
			"primary_score":	999861,
			"second_score":	54185
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	699,
			"primary_score":	999861,
			"second_score":	118394
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	700,
			"primary_score":	999861,
			"second_score":	118393
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	701,
			"primary_score":	999861,
			"second_score":	118392
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	703,
			"primary_score":	999861,
			"second_score":	118391
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	704,
			"primary_score":	999861,
			"second_score":	118390
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	707,
			"primary_score":	999861,
			"second_score":	118389
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	711,
			"primary_score":	999861,
			"second_score":	118388
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	712,
			"primary_score":	999861,
			"second_score":	118384
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	717,
			"primary_score":	999861,
			"second_score":	118383
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	719,
			"primary_score":	999861,
			"second_score":	118382
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	958,
			"primary_score":	999904,
			"second_score":	123462
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	960,
			"primary_score":	999904,
			"second_score":	123461
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	961,
			"primary_score":	999904,
			"second_score":	123460
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	968,
			"primary_score":	999904,
			"second_score":	123459
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	976,
			"primary_score":	999904,
			"second_score":	123458
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	977,
			"primary_score":	999904,
			"second_score":	123457
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	978,
			"primary_score":	999904,
			"second_score":	123376
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	979,
			"primary_score":	999904,
			"second_score":	123375
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	980,
			"primary_score":	999904,
			"second_score":	123374
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	981,
			"primary_score":	999904,
			"second_score":	123373
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	985,
			"primary_score":	999904,
			"second_score":	123372
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	990,
			"primary_score":	999904,
			"second_score":	119227
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	991,
			"primary_score":	999904,
			"second_score":	119226
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	993,
			"primary_score":	999904,
			"second_score":	119225
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	994,
			"primary_score":	999904,
			"second_score":	119224
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	995,
			"primary_score":	999904,
			"second_score":	119223
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	996,
			"primary_score":	999904,
			"second_score":	119222
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	997,
			"primary_score":	999904,
			"second_score":	119221
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	998,
			"primary_score":	999904,
			"second_score":	119220
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1000,
			"primary_score":	999904,
			"second_score":	119219
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1002,
			"primary_score":	999904,
			"second_score":	119200
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1005,
			"primary_score":	999904,
			"second_score":	119199
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1010,
			"primary_score":	999912,
			"second_score":	123468
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1012,
			"primary_score":	999912,
			"second_score":	123467
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1013,
			"primary_score":	999926,
			"second_score":	123466
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1014,
			"primary_score":	999926,
			"second_score":	123465
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1015,
			"primary_score":	999912,
			"second_score":	129619
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1016,
			"primary_score":	999912,
			"second_score":	129618
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1017,
			"primary_score":	999912,
			"second_score":	129617
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1018,
			"primary_score":	999912,
			"second_score":	129595
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1019,
			"primary_score":	999912,
			"second_score":	129594
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1020,
			"primary_score":	999912,
			"second_score":	129593
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1023,
			"primary_score":	999912,
			"second_score":	123464
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1028,
			"primary_score":	999910,
			"second_score":	119197
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1030,
			"primary_score":	999910,
			"second_score":	119196
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1031,
			"primary_score":	999912,
			"second_score":	119195
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1032,
			"primary_score":	999912,
			"second_score":	119194
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1033,
			"primary_score":	999912,
			"second_score":	119193
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1034,
			"primary_score":	999912,
			"second_score":	119192
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1036,
			"primary_score":	999912,
			"second_score":	119191
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1037,
			"primary_score":	999916,
			"second_score":	119190
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1041,
			"primary_score":	999916,
			"second_score":	119189
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1043,
			"primary_score":	999912,
			"second_score":	119170
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1044,
			"primary_score":	999912,
			"second_score":	119151
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1048,
			"primary_score":	999910,
			"second_score":	119150
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1053,
			"primary_score":	999919,
			"second_score":	119412
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1057,
			"primary_score":	999919,
			"second_score":	119411
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1082,
			"primary_score":	999937,
			"second_score":	119410
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1089,
			"primary_score":	999919,
			"second_score":	119450
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1090,
			"primary_score":	999919,
			"second_score":	119449
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1091,
			"primary_score":	999919,
			"second_score":	119448
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1093,
			"primary_score":	999919,
			"second_score":	119447
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1094,
			"primary_score":	999919,
			"second_score":	119446
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1095,
			"primary_score":	999919,
			"second_score":	119445
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1096,
			"primary_score":	999919,
			"second_score":	119444
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1097,
			"primary_score":	999919,
			"second_score":	119414
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1098,
			"primary_score":	999919,
			"second_score":	119413
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1105,
			"primary_score":	999919,
			"second_score":	119405
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	1107,
			"primary_score":	999927,
			"second_score":	119404
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	113,
			"primary_score":	999861,
			"second_score":	54730
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	163,
			"primary_score":	999861,
			"second_score":	55358
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	165,
			"primary_score":	999861,
			"second_score":	54734
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	199,
			"primary_score":	999861,
			"second_score":	64576
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	203,
			"primary_score":	999861,
			"second_score":	64557
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	389,
			"primary_score":	999861,
			"second_score":	64477
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	390,
			"primary_score":	999861,
			"second_score":	64468
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	391,
			"primary_score":	999861,
			"second_score":	63128
		}, {
			"file":	"ext/pdo/pdo_sqlstate.c",
			"line":	309,
			"primary_score":	999861,
			"second_score":	64467
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	87,
			"primary_score":	999861,
			"second_score":	64577
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	88,
			"primary_score":	999861,
			"second_score":	64519
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1102,
			"primary_score":	999861,
			"second_score":	98779
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1104,
			"primary_score":	999861,
			"second_score":	98778
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1105,
			"primary_score":	999861,
			"second_score":	98753
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1106,
			"primary_score":	999861,
			"second_score":	98716
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1107,
			"primary_score":	999861,
			"second_score":	98689
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1108,
			"primary_score":	999861,
			"second_score":	98663
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1109,
			"primary_score":	999861,
			"second_score":	98636
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1110,
			"primary_score":	999861,
			"second_score":	98605
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1111,
			"primary_score":	999861,
			"second_score":	98576
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1112,
			"primary_score":	999861,
			"second_score":	98547
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1113,
			"primary_score":	999861,
			"second_score":	98519
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1114,
			"primary_score":	999861,
			"second_score":	98490
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1115,
			"primary_score":	999861,
			"second_score":	98461
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1116,
			"primary_score":	999861,
			"second_score":	98432
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1117,
			"primary_score":	999861,
			"second_score":	98403
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1118,
			"primary_score":	999861,
			"second_score":	98374
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1119,
			"primary_score":	999861,
			"second_score":	98346
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1120,
			"primary_score":	999861,
			"second_score":	98315
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1121,
			"primary_score":	999861,
			"second_score":	98284
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1122,
			"primary_score":	999861,
			"second_score":	98251
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1123,
			"primary_score":	999861,
			"second_score":	98226
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1124,
			"primary_score":	999861,
			"second_score":	98202
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1125,
			"primary_score":	999861,
			"second_score":	98172
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3324,
			"primary_score":	999872,
			"second_score":	124633
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3394,
			"primary_score":	999861,
			"second_score":	133421
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3396,
			"primary_score":	999861,
			"second_score":	133419
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3400,
			"primary_score":	999861,
			"second_score":	133418
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3404,
			"primary_score":	999861,
			"second_score":	133417
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3527,
			"primary_score":	999861,
			"second_score":	98164
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3557,
			"primary_score":	999861,
			"second_score":	98817
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3559,
			"primary_score":	999861,
			"second_score":	98780
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3561,
			"primary_score":	999861,
			"second_score":	98171
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3562,
			"primary_score":	999861,
			"second_score":	98170
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3570,
			"primary_score":	999861,
			"second_score":	98169
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3575,
			"primary_score":	999861,
			"second_score":	98168
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3617,
			"primary_score":	999861,
			"second_score":	118959
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3619,
			"primary_score":	999861,
			"second_score":	118958
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3621,
			"primary_score":	999861,
			"second_score":	118957
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3657,
			"primary_score":	999861,
			"second_score":	118956
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3658,
			"primary_score":	999861,
			"second_score":	118955
		}, {
			"file":	"ext/phar/util.c",
			"line":	260,
			"primary_score":	999872,
			"second_score":	124632
		}, {
			"file":	"ext/phar/util.c",
			"line":	261,
			"primary_score":	999872,
			"second_score":	124631
		}, {
			"file":	"ext/phar/util.c",
			"line":	262,
			"primary_score":	999872,
			"second_score":	124630
		}, {
			"file":	"ext/phar/util.c",
			"line":	264,
			"primary_score":	999872,
			"second_score":	124629
		}, {
			"file":	"ext/phar/util.c",
			"line":	267,
			"primary_score":	999872,
			"second_score":	124628
		}, {
			"file":	"ext/phar/util.c",
			"line":	270,
			"primary_score":	999872,
			"second_score":	124627
		}, {
			"file":	"ext/phar/util.c",
			"line":	271,
			"primary_score":	999872,
			"second_score":	124625
		}, {
			"file":	"ext/session/session.c",
			"line":	93,
			"primary_score":	999861,
			"second_score":	118892
		}, {
			"file":	"ext/session/session.c",
			"line":	98,
			"primary_score":	999861,
			"second_score":	118891
		}, {
			"file":	"ext/session/session.c",
			"line":	103,
			"primary_score":	999861,
			"second_score":	118890
		}, {
			"file":	"ext/session/session.c",
			"line":	1441,
			"primary_score":	999861,
			"second_score":	118894
		}, {
			"file":	"ext/session/session.c",
			"line":	1958,
			"primary_score":	999861,
			"second_score":	118896
		}, {
			"file":	"ext/session/session.c",
			"line":	1960,
			"primary_score":	999861,
			"second_score":	118895
		}, {
			"file":	"ext/session/session.c",
			"line":	1961,
			"primary_score":	999861,
			"second_score":	118893
		}, {
			"file":	"ext/session/session.c",
			"line":	1964,
			"primary_score":	999861,
			"second_score":	118889
		}, {
			"file":	"ext/session/session.c",
			"line":	1965,
			"primary_score":	999861,
			"second_score":	118883
		}, {
			"file":	"ext/session/session.c",
			"line":	1971,
			"primary_score":	999861,
			"second_score":	118882
		}, {
			"file":	"ext/session/session.c",
			"line":	2013,
			"primary_score":	999861,
			"second_score":	67036
		}, {
			"file":	"ext/session/session.c",
			"line":	2019,
			"primary_score":	999861,
			"second_score":	65604
		}, {
			"file":	"ext/session/session.c",
			"line":	2020,
			"primary_score":	999861,
			"second_score":	65603
		}, {
			"file":	"ext/session/session.c",
			"line":	2022,
			"primary_score":	999861,
			"second_score":	65602
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2561,
			"primary_score":	999861,
			"second_score":	97876
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2562,
			"primary_score":	999861,
			"second_score":	97875
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	919,
			"primary_score":	999861,
			"second_score":	118878
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	924,
			"primary_score":	999861,
			"second_score":	118877
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	929,
			"primary_score":	999861,
			"second_score":	118876
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	932,
			"primary_score":	999861,
			"second_score":	118875
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2140,
			"primary_score":	999861,
			"second_score":	56002
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2142,
			"primary_score":	999861,
			"second_score":	55393
		}, {
			"file":	"ext/standard/array.c",
			"line":	138,
			"primary_score":	999861,
			"second_score":	97456
		}, {
			"file":	"ext/standard/assert.c",
			"line":	114,
			"primary_score":	999861,
			"second_score":	97454
		}, {
			"file":	"ext/standard/assert.c",
			"line":	118,
			"primary_score":	999861,
			"second_score":	97453
		}, {
			"file":	"ext/standard/assert.c",
			"line":	124,
			"primary_score":	999861,
			"second_score":	118930
		}, {
			"file":	"ext/standard/assert.c",
			"line":	129,
			"primary_score":	999861,
			"second_score":	118929
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3455,
			"primary_score":	999861,
			"second_score":	97650
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3456,
			"primary_score":	999861,
			"second_score":	97649
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3457,
			"primary_score":	999861,
			"second_score":	97610
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3628,
			"primary_score":	999861,
			"second_score":	97654
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3636,
			"primary_score":	999861,
			"second_score":	97651
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3642,
			"primary_score":	999861,
			"second_score":	97609
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3644,
			"primary_score":	999861,
			"second_score":	97568
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3645,
			"primary_score":	999861,
			"second_score":	97530
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3648,
			"primary_score":	999861,
			"second_score":	97493
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3649,
			"primary_score":	999861,
			"second_score":	97457
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3650,
			"primary_score":	999861,
			"second_score":	97455
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3651,
			"primary_score":	999861,
			"second_score":	97452
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3652,
			"primary_score":	999861,
			"second_score":	96375
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3653,
			"primary_score":	999861,
			"second_score":	96372
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3658,
			"primary_score":	999861,
			"second_score":	96050
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3661,
			"primary_score":	999861,
			"second_score":	96047
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3709,
			"primary_score":	999861,
			"second_score":	118951
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3712,
			"primary_score":	999861,
			"second_score":	118950
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3713,
			"primary_score":	999861,
			"second_score":	118949
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3715,
			"primary_score":	999861,
			"second_score":	118948
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3718,
			"primary_score":	999861,
			"second_score":	118940
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3724,
			"primary_score":	999861,
			"second_score":	118939
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3729,
			"primary_score":	999861,
			"second_score":	118938
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3730,
			"primary_score":	999861,
			"second_score":	118936
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3735,
			"primary_score":	999861,
			"second_score":	118935
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3741,
			"primary_score":	999861,
			"second_score":	118931
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3742,
			"primary_score":	999861,
			"second_score":	118928
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3743,
			"primary_score":	999861,
			"second_score":	118917
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3748,
			"primary_score":	999861,
			"second_score":	118906
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3754,
			"primary_score":	999861,
			"second_score":	118905
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3756,
			"primary_score":	999861,
			"second_score":	118902
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3757,
			"primary_score":	999861,
			"second_score":	118901
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3758,
			"primary_score":	999861,
			"second_score":	118900
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4509,
			"primary_score":	999861,
			"second_score":	122270
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4510,
			"primary_score":	999861,
			"second_score":	122269
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4511,
			"primary_score":	999861,
			"second_score":	122268
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4513,
			"primary_score":	999861,
			"second_score":	122267
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4517,
			"primary_score":	999861,
			"second_score":	122200
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4519,
			"primary_score":	999861,
			"second_score":	122169
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4528,
			"primary_score":	999861,
			"second_score":	122168
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4989,
			"primary_score":	999861,
			"second_score":	120252
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5001,
			"primary_score":	999861,
			"second_score":	118369
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5007,
			"primary_score":	999861,
			"second_score":	118368
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	234,
			"primary_score":	999861,
			"second_score":	97492
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	235,
			"primary_score":	999861,
			"second_score":	97459
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	238,
			"primary_score":	999861,
			"second_score":	97458
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	130,
			"primary_score":	999861,
			"second_score":	96049
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	133,
			"primary_score":	999861,
			"second_score":	96048
		}, {
			"file":	"ext/standard/file.c",
			"line":	318,
			"primary_score":	999861,
			"second_score":	96374
		}, {
			"file":	"ext/standard/file.c",
			"line":	320,
			"primary_score":	999861,
			"second_score":	96373
		}, {
			"file":	"ext/standard/file.c",
			"line":	2342,
			"primary_score":	999861,
			"second_score":	121964
		}, {
			"file":	"ext/standard/file.c",
			"line":	2343,
			"primary_score":	999861,
			"second_score":	121963
		}, {
			"file":	"ext/standard/file.c",
			"line":	2344,
			"primary_score":	999861,
			"second_score":	121962
		}, {
			"file":	"ext/standard/file.c",
			"line":	2346,
			"primary_score":	999861,
			"second_score":	121961
		}, {
			"file":	"ext/standard/file.c",
			"line":	2350,
			"primary_score":	999861,
			"second_score":	121851
		}, {
			"file":	"ext/standard/file.c",
			"line":	2351,
			"primary_score":	999861,
			"second_score":	121574
		}, {
			"file":	"ext/standard/file.c",
			"line":	2360,
			"primary_score":	999861,
			"second_score":	121570
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	110,
			"primary_score":	999861,
			"second_score":	118934
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	114,
			"primary_score":	999861,
			"second_score":	118933
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	118,
			"primary_score":	999861,
			"second_score":	118932
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2148,
			"primary_score":	999861,
			"second_score":	96371
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2150,
			"primary_score":	999861,
			"second_score":	96370
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2151,
			"primary_score":	999861,
			"second_score":	96091
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2153,
			"primary_score":	999861,
			"second_score":	96051
		}, {
			"file":	"ext/standard/head.c",
			"line":	68,
			"primary_score":	999861,
			"second_score":	124862
		}, {
			"file":	"ext/standard/head.c",
			"line":	71,
			"primary_score":	999861,
			"second_score":	124762
		}, {
			"file":	"ext/standard/info.c",
			"line":	527,
			"primary_score":	999861,
			"second_score":	123486
		}, {
			"file":	"ext/standard/info.c",
			"line":	528,
			"primary_score":	999861,
			"second_score":	123485
		}, {
			"file":	"ext/standard/info.c",
			"line":	577,
			"primary_score":	999861,
			"second_score":	123484
		}, {
			"file":	"ext/standard/info.c",
			"line":	578,
			"primary_score":	999861,
			"second_score":	123483
		}, {
			"file":	"ext/standard/info.c",
			"line":	605,
			"primary_score":	999861,
			"second_score":	123482
		}, {
			"file":	"ext/standard/info.c",
			"line":	607,
			"primary_score":	999861,
			"second_score":	123481
		}, {
			"file":	"ext/standard/info.c",
			"line":	609,
			"primary_score":	999861,
			"second_score":	123480
		}, {
			"file":	"ext/standard/info.c",
			"line":	611,
			"primary_score":	999861,
			"second_score":	123479
		}, {
			"file":	"ext/standard/info.c",
			"line":	613,
			"primary_score":	999861,
			"second_score":	123478
		}, {
			"file":	"ext/standard/info.c",
			"line":	616,
			"primary_score":	999861,
			"second_score":	123477
		}, {
			"file":	"ext/standard/info.c",
			"line":	619,
			"primary_score":	999861,
			"second_score":	122770
		}, {
			"file":	"ext/standard/info.c",
			"line":	627,
			"primary_score":	999861,
			"second_score":	122769
		}, {
			"file":	"ext/standard/info.c",
			"line":	1153,
			"primary_score":	999861,
			"second_score":	124417
		}, {
			"file":	"ext/standard/info.c",
			"line":	1154,
			"primary_score":	999861,
			"second_score":	124416
		}, {
			"file":	"ext/standard/info.c",
			"line":	1156,
			"primary_score":	999861,
			"second_score":	124415
		}, {
			"file":	"ext/standard/info.c",
			"line":	1160,
			"primary_score":	999861,
			"second_score":	124377
		}, {
			"file":	"ext/standard/info.c",
			"line":	1161,
			"primary_score":	999861,
			"second_score":	124376
		}, {
			"file":	"ext/standard/info.c",
			"line":	1280,
			"primary_score":	999861,
			"second_score":	123529
		}, {
			"file":	"ext/standard/info.c",
			"line":	1281,
			"primary_score":	999861,
			"second_score":	123528
		}, {
			"file":	"ext/standard/info.c",
			"line":	1283,
			"primary_score":	999861,
			"second_score":	123527
		}, {
			"file":	"ext/standard/info.c",
			"line":	1286,
			"primary_score":	999861,
			"second_score":	123489
		}, {
			"file":	"ext/standard/info.c",
			"line":	1295,
			"primary_score":	999861,
			"second_score":	120390
		}, {
			"file":	"ext/standard/info.c",
			"line":	1299,
			"primary_score":	999861,
			"second_score":	120357
		}, {
			"file":	"ext/standard/info.c",
			"line":	1302,
			"primary_score":	999861,
			"second_score":	120356
		}, {
			"file":	"ext/standard/string.c",
			"line":	1058,
			"primary_score":	999861,
			"second_score":	122684
		}, {
			"file":	"ext/standard/string.c",
			"line":	1059,
			"primary_score":	999861,
			"second_score":	122683
		}, {
			"file":	"ext/standard/string.c",
			"line":	1060,
			"primary_score":	999861,
			"second_score":	122682
		}, {
			"file":	"ext/standard/string.c",
			"line":	1061,
			"primary_score":	999861,
			"second_score":	122681
		}, {
			"file":	"ext/standard/string.c",
			"line":	1062,
			"primary_score":	999861,
			"second_score":	122680
		}, {
			"file":	"ext/standard/string.c",
			"line":	1063,
			"primary_score":	999861,
			"second_score":	122679
		}, {
			"file":	"ext/standard/string.c",
			"line":	1065,
			"primary_score":	999861,
			"second_score":	122678
		}, {
			"file":	"ext/standard/string.c",
			"line":	1067,
			"primary_score":	999861,
			"second_score":	122675
		}, {
			"file":	"ext/standard/string.c",
			"line":	1071,
			"primary_score":	999861,
			"second_score":	122674
		}, {
			"file":	"ext/standard/string.c",
			"line":	1073,
			"primary_score":	999861,
			"second_score":	122670
		}, {
			"file":	"ext/standard/string.c",
			"line":	1074,
			"primary_score":	999861,
			"second_score":	121661
		}, {
			"file":	"ext/standard/string.c",
			"line":	1076,
			"primary_score":	999861,
			"second_score":	122658
		}, {
			"file":	"ext/standard/string.c",
			"line":	1077,
			"primary_score":	999861,
			"second_score":	121652
		}, {
			"file":	"ext/standard/string.c",
			"line":	1124,
			"primary_score":	999861,
			"second_score":	121651
		}, {
			"file":	"ext/standard/string.c",
			"line":	1125,
			"primary_score":	999861,
			"second_score":	121682
		}, {
			"file":	"ext/standard/string.c",
			"line":	1127,
			"primary_score":	999861,
			"second_score":	121650
		}, {
			"file":	"ext/standard/string.c",
			"line":	1129,
			"primary_score":	999861,
			"second_score":	121639
		}, {
			"file":	"ext/standard/string.c",
			"line":	1131,
			"primary_score":	999861,
			"second_score":	121636
		}, {
			"file":	"ext/standard/string.c",
			"line":	1132,
			"primary_score":	999861,
			"second_score":	121635
		}, {
			"file":	"ext/standard/string.c",
			"line":	1144,
			"primary_score":	999861,
			"second_score":	122785
		}, {
			"file":	"ext/standard/string.c",
			"line":	1146,
			"primary_score":	999861,
			"second_score":	122784
		}, {
			"file":	"ext/standard/string.c",
			"line":	1150,
			"primary_score":	999861,
			"second_score":	122692
		}, {
			"file":	"ext/standard/string.c",
			"line":	1163,
			"primary_score":	999861,
			"second_score":	122691
		}, {
			"file":	"ext/standard/string.c",
			"line":	1167,
			"primary_score":	999861,
			"second_score":	122690
		}, {
			"file":	"ext/standard/string.c",
			"line":	1168,
			"primary_score":	999861,
			"second_score":	122689
		}, {
			"file":	"ext/standard/string.c",
			"line":	1169,
			"primary_score":	999861,
			"second_score":	122688
		}, {
			"file":	"ext/standard/string.c",
			"line":	1170,
			"primary_score":	999861,
			"second_score":	122686
		}, {
			"file":	"ext/standard/string.c",
			"line":	1177,
			"primary_score":	999861,
			"second_score":	122685
		}, {
			"file":	"ext/standard/string.c",
			"line":	1179,
			"primary_score":	999861,
			"second_score":	121626
		}, {
			"file":	"ext/standard/string.c",
			"line":	1309,
			"primary_score":	999865,
			"second_score":	122350
		}, {
			"file":	"ext/standard/string.c",
			"line":	1311,
			"primary_score":	999865,
			"second_score":	122349
		}, {
			"file":	"ext/standard/string.c",
			"line":	1312,
			"primary_score":	999865,
			"second_score":	122348
		}, {
			"file":	"ext/standard/string.c",
			"line":	1314,
			"primary_score":	999865,
			"second_score":	122347
		}, {
			"file":	"ext/standard/string.c",
			"line":	1315,
			"primary_score":	999865,
			"second_score":	122226
		}, {
			"file":	"ext/standard/string.c",
			"line":	1316,
			"primary_score":	999865,
			"second_score":	122221
		}, {
			"file":	"ext/standard/string.c",
			"line":	1318,
			"primary_score":	999865,
			"second_score":	122220
		}, {
			"file":	"ext/standard/string.c",
			"line":	1433,
			"primary_score":	999962,
			"second_score":	125260
		}, {
			"file":	"ext/standard/string.c",
			"line":	1441,
			"primary_score":	999962,
			"second_score":	125360
		}, {
			"file":	"ext/standard/string.c",
			"line":	1442,
			"primary_score":	999962,
			"second_score":	125359
		}, {
			"file":	"ext/standard/string.c",
			"line":	1443,
			"primary_score":	999962,
			"second_score":	125358
		}, {
			"file":	"ext/standard/string.c",
			"line":	1444,
			"primary_score":	999962,
			"second_score":	125357
		}, {
			"file":	"ext/standard/string.c",
			"line":	1446,
			"primary_score":	999962,
			"second_score":	125356
		}, {
			"file":	"ext/standard/string.c",
			"line":	1450,
			"primary_score":	999962,
			"second_score":	125289
		}, {
			"file":	"ext/standard/string.c",
			"line":	1451,
			"primary_score":	999962,
			"second_score":	125261
		}, {
			"file":	"ext/standard/string.c",
			"line":	1453,
			"primary_score":	999962,
			"second_score":	125233
		}, {
			"file":	"ext/standard/string.c",
			"line":	3536,
			"primary_score":	999861,
			"second_score":	119936
		}, {
			"file":	"ext/standard/string.c",
			"line":	3539,
			"primary_score":	999861,
			"second_score":	119935
		}, {
			"file":	"ext/standard/string.c",
			"line":	3540,
			"primary_score":	999861,
			"second_score":	119934
		}, {
			"file":	"ext/standard/string.c",
			"line":	3543,
			"primary_score":	999861,
			"second_score":	119933
		}, {
			"file":	"ext/standard/string.c",
			"line":	3544,
			"primary_score":	999861,
			"second_score":	119888
		}, {
			"file":	"ext/standard/string.c",
			"line":	3545,
			"primary_score":	999861,
			"second_score":	119887
		}, {
			"file":	"ext/standard/string.c",
			"line":	3546,
			"primary_score":	999861,
			"second_score":	119886
		}, {
			"file":	"ext/standard/string.c",
			"line":	3547,
			"primary_score":	999861,
			"second_score":	119852
		}, {
			"file":	"ext/standard/string.c",
			"line":	3647,
			"primary_score":	999861,
			"second_score":	120081
		}, {
			"file":	"ext/standard/string.c",
			"line":	3648,
			"primary_score":	999861,
			"second_score":	120080
		}, {
			"file":	"ext/standard/string.c",
			"line":	3649,
			"primary_score":	999861,
			"second_score":	120079
		}, {
			"file":	"ext/standard/string.c",
			"line":	3650,
			"primary_score":	999861,
			"second_score":	120078
		}, {
			"file":	"ext/standard/string.c",
			"line":	3651,
			"primary_score":	999861,
			"second_score":	120077
		}, {
			"file":	"ext/standard/string.c",
			"line":	3652,
			"primary_score":	999861,
			"second_score":	120076
		}, {
			"file":	"ext/standard/string.c",
			"line":	3653,
			"primary_score":	999861,
			"second_score":	120075
		}, {
			"file":	"ext/standard/string.c",
			"line":	3655,
			"primary_score":	999861,
			"second_score":	120074
		}, {
			"file":	"ext/standard/string.c",
			"line":	3659,
			"primary_score":	999861,
			"second_score":	119952
		}, {
			"file":	"ext/standard/string.c",
			"line":	3660,
			"primary_score":	999861,
			"second_score":	119949
		}, {
			"file":	"ext/standard/string.c",
			"line":	3661,
			"primary_score":	999861,
			"second_score":	119946
		}, {
			"file":	"ext/standard/string.c",
			"line":	3664,
			"primary_score":	999861,
			"second_score":	119943
		}, {
			"file":	"ext/standard/string.c",
			"line":	3665,
			"primary_score":	999861,
			"second_score":	119942
		}, {
			"file":	"ext/standard/string.c",
			"line":	3666,
			"primary_score":	999861,
			"second_score":	119940
		}, {
			"file":	"ext/standard/string.c",
			"line":	3672,
			"primary_score":	999861,
			"second_score":	119938
		}, {
			"file":	"ext/standard/string.c",
			"line":	3703,
			"primary_score":	999861,
			"second_score":	119937
		}, {
			"file":	"ext/standard/string.c",
			"line":	3705,
			"primary_score":	999861,
			"second_score":	119851
		}, {
			"file":	"ext/standard/string.c",
			"line":	3716,
			"primary_score":	999861,
			"second_score":	120082
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	121,
			"primary_score":	999861,
			"second_score":	97653
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	125,
			"primary_score":	999861,
			"second_score":	97652
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1083,
			"primary_score":	999861,
			"second_score":	97451
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1085,
			"primary_score":	999861,
			"second_score":	96376
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1097,
			"primary_score":	999861,
			"second_score":	118927
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1102,
			"primary_score":	999861,
			"second_score":	118926
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1103,
			"primary_score":	999861,
			"second_score":	118922
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1105,
			"primary_score":	999861,
			"second_score":	118918
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	129,
			"primary_score":	999861,
			"second_score":	118904
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	135,
			"primary_score":	999861,
			"second_score":	118903
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1378,
			"primary_score":	999861,
			"second_score":	100662
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1379,
			"primary_score":	999861,
			"second_score":	100569
		}, {
			"file":	"ext/xmlwriter/php_xmlwriter.c",
			"line":	1972,
			"primary_score":	999861,
			"second_score":	103352
		}, {
			"file":	"main/SAPI.c",
			"line":	69,
			"primary_score":	999861,
			"second_score":	3134
		}, {
			"file":	"main/SAPI.c",
			"line":	101,
			"primary_score":	999861,
			"second_score":	3135
		}, {
			"file":	"main/SAPI.c",
			"line":	104,
			"primary_score":	999861,
			"second_score":	3113
		}, {
			"file":	"main/SAPI.c",
			"line":	106,
			"primary_score":	999861,
			"second_score":	3112
		}, {
			"file":	"main/SAPI.c",
			"line":	116,
			"primary_score":	999861,
			"second_score":	124791
		}, {
			"file":	"main/SAPI.c",
			"line":	231,
			"primary_score":	999861,
			"second_score":	124854
		}, {
			"file":	"main/SAPI.c",
			"line":	232,
			"primary_score":	999861,
			"second_score":	124853
		}, {
			"file":	"main/SAPI.c",
			"line":	234,
			"primary_score":	999861,
			"second_score":	124852
		}, {
			"file":	"main/SAPI.c",
			"line":	235,
			"primary_score":	999861,
			"second_score":	124851
		}, {
			"file":	"main/SAPI.c",
			"line":	236,
			"primary_score":	999861,
			"second_score":	124850
		}, {
			"file":	"main/SAPI.c",
			"line":	241,
			"primary_score":	999861,
			"second_score":	124849
		}, {
			"file":	"main/SAPI.c",
			"line":	242,
			"primary_score":	999861,
			"second_score":	124848
		}, {
			"file":	"main/SAPI.c",
			"line":	243,
			"primary_score":	999861,
			"second_score":	124847
		}, {
			"file":	"main/SAPI.c",
			"line":	249,
			"primary_score":	999861,
			"second_score":	124846
		}, {
			"file":	"main/SAPI.c",
			"line":	261,
			"primary_score":	999861,
			"second_score":	124845
		}, {
			"file":	"main/SAPI.c",
			"line":	262,
			"primary_score":	999861,
			"second_score":	124844
		}, {
			"file":	"main/SAPI.c",
			"line":	263,
			"primary_score":	999861,
			"second_score":	124822
		}, {
			"file":	"main/SAPI.c",
			"line":	265,
			"primary_score":	999861,
			"second_score":	124821
		}, {
			"file":	"main/SAPI.c",
			"line":	427,
			"primary_score":	999861,
			"second_score":	113265
		}, {
			"file":	"main/SAPI.c",
			"line":	435,
			"primary_score":	999861,
			"second_score":	113305
		}, {
			"file":	"main/SAPI.c",
			"line":	436,
			"primary_score":	999861,
			"second_score":	113301
		}, {
			"file":	"main/SAPI.c",
			"line":	438,
			"primary_score":	999861,
			"second_score":	113300
		}, {
			"file":	"main/SAPI.c",
			"line":	449,
			"primary_score":	999861,
			"second_score":	113299
		}, {
			"file":	"main/SAPI.c",
			"line":	452,
			"primary_score":	999861,
			"second_score":	113298
		}, {
			"file":	"main/SAPI.c",
			"line":	455,
			"primary_score":	999861,
			"second_score":	113297
		}, {
			"file":	"main/SAPI.c",
			"line":	458,
			"primary_score":	999861,
			"second_score":	113296
		}, {
			"file":	"main/SAPI.c",
			"line":	461,
			"primary_score":	999861,
			"second_score":	113295
		}, {
			"file":	"main/SAPI.c",
			"line":	464,
			"primary_score":	999861,
			"second_score":	113294
		}, {
			"file":	"main/SAPI.c",
			"line":	467,
			"primary_score":	999861,
			"second_score":	113293
		}, {
			"file":	"main/SAPI.c",
			"line":	468,
			"primary_score":	999861,
			"second_score":	113292
		}, {
			"file":	"main/SAPI.c",
			"line":	470,
			"primary_score":	999861,
			"second_score":	113288
		}, {
			"file":	"main/SAPI.c",
			"line":	473,
			"primary_score":	999861,
			"second_score":	113287
		}, {
			"file":	"main/SAPI.c",
			"line":	474,
			"primary_score":	999861,
			"second_score":	113286
		}, {
			"file":	"main/SAPI.c",
			"line":	475,
			"primary_score":	999861,
			"second_score":	113267
		}, {
			"file":	"main/SAPI.c",
			"line":	477,
			"primary_score":	999861,
			"second_score":	113266
		}, {
			"file":	"main/SAPI.c",
			"line":	478,
			"primary_score":	999861,
			"second_score":	113264
		}, {
			"file":	"main/SAPI.c",
			"line":	479,
			"primary_score":	999861,
			"second_score":	113263
		}, {
			"file":	"main/SAPI.c",
			"line":	480,
			"primary_score":	999861,
			"second_score":	113262
		}, {
			"file":	"main/SAPI.c",
			"line":	481,
			"primary_score":	999861,
			"second_score":	113261
		}, {
			"file":	"main/SAPI.c",
			"line":	550,
			"primary_score":	999861,
			"second_score":	124794
		}, {
			"file":	"main/SAPI.c",
			"line":	565,
			"primary_score":	999861,
			"second_score":	124792
		}, {
			"file":	"main/SAPI.c",
			"line":	754,
			"primary_score":	999861,
			"second_score":	118979
		}, {
			"file":	"main/SAPI.c",
			"line":	755,
			"primary_score":	999861,
			"second_score":	118978
		}, {
			"file":	"main/SAPI.c",
			"line":	757,
			"primary_score":	999861,
			"second_score":	118977
		}, {
			"file":	"main/SAPI.c",
			"line":	758,
			"primary_score":	999861,
			"second_score":	118976
		}, {
			"file":	"main/SAPI.c",
			"line":	764,
			"primary_score":	999861,
			"second_score":	124858
		}, {
			"file":	"main/SAPI.c",
			"line":	765,
			"primary_score":	999861,
			"second_score":	124857
		}, {
			"file":	"main/SAPI.c",
			"line":	766,
			"primary_score":	999861,
			"second_score":	124856
		}, {
			"file":	"main/SAPI.c",
			"line":	768,
			"primary_score":	999861,
			"second_score":	124855
		}, {
			"file":	"main/SAPI.c",
			"line":	769,
			"primary_score":	999861,
			"second_score":	124820
		}, {
			"file":	"main/SAPI.c",
			"line":	770,
			"primary_score":	999861,
			"second_score":	124819
		}, {
			"file":	"main/SAPI.c",
			"line":	771,
			"primary_score":	999861,
			"second_score":	124797
		}, {
			"file":	"main/SAPI.c",
			"line":	772,
			"primary_score":	999861,
			"second_score":	124796
		}, {
			"file":	"main/SAPI.c",
			"line":	773,
			"primary_score":	999861,
			"second_score":	124795
		}, {
			"file":	"main/SAPI.c",
			"line":	774,
			"primary_score":	999861,
			"second_score":	124772
		}, {
			"file":	"main/SAPI.c",
			"line":	777,
			"primary_score":	999861,
			"second_score":	124771
		}, {
			"file":	"main/SAPI.c",
			"line":	779,
			"primary_score":	999861,
			"second_score":	124770
		}, {
			"file":	"main/SAPI.c",
			"line":	780,
			"primary_score":	999861,
			"second_score":	124769
		}, {
			"file":	"main/SAPI.c",
			"line":	785,
			"primary_score":	999861,
			"second_score":	124767
		}, {
			"file":	"main/SAPI.c",
			"line":	788,
			"primary_score":	999861,
			"second_score":	124766
		}, {
			"file":	"main/SAPI.c",
			"line":	819,
			"primary_score":	999861,
			"second_score":	124765
		}, {
			"file":	"main/SAPI.c",
			"line":	821,
			"primary_score":	999861,
			"second_score":	124763
		}, {
			"file":	"main/SAPI.c",
			"line":	890,
			"primary_score":	999861,
			"second_score":	103396
		}, {
			"file":	"main/SAPI.c",
			"line":	891,
			"primary_score":	999861,
			"second_score":	103395
		}, {
			"file":	"main/SAPI.c",
			"line":	892,
			"primary_score":	999861,
			"second_score":	103393
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	470,
			"primary_score":	999872,
			"second_score":	124623
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	471,
			"primary_score":	999872,
			"second_score":	124622
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	472,
			"primary_score":	999872,
			"second_score":	124621
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	473,
			"primary_score":	999872,
			"second_score":	124620
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	474,
			"primary_score":	999872,
			"second_score":	124619
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	476,
			"primary_score":	999872,
			"second_score":	124618
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	481,
			"primary_score":	999872,
			"second_score":	124617
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	482,
			"primary_score":	999872,
			"second_score":	124616
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	492,
			"primary_score":	999885,
			"second_score":	124615
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	498,
			"primary_score":	999990,
			"second_score":	124614
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	501,
			"primary_score":	999990,
			"second_score":	124306
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	692,
			"primary_score":	999882,
			"second_score":	121152
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	694,
			"primary_score":	999882,
			"second_score":	121151
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	698,
			"primary_score":	999882,
			"second_score":	121150
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	700,
			"primary_score":	999882,
			"second_score":	121149
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	701,
			"primary_score":	999882,
			"second_score":	120912
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	722,
			"primary_score":	999882,
			"second_score":	120911
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	724,
			"primary_score":	999887,
			"second_score":	120910
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	794,
			"primary_score":	999861,
			"second_score":	123667
		}, {
			"file":	"main/getopt.c",
			"line":	174,
			"primary_score":	999861,
			"second_score":	160114
		}, {
			"file":	"main/getopt.c",
			"line":	175,
			"primary_score":	999861,
			"second_score":	160113
		}, {
			"file":	"main/getopt.c",
			"line":	177,
			"primary_score":	999861,
			"second_score":	160112
		}, {
			"file":	"main/getopt.c",
			"line":	178,
			"primary_score":	999861,
			"second_score":	160111
		}, {
			"file":	"main/getopt.c",
			"line":	185,
			"primary_score":	999861,
			"second_score":	160110
		}, {
			"file":	"main/main.c",
			"line":	514,
			"primary_score":	999873,
			"second_score":	120141
		}, {
			"file":	"main/main.c",
			"line":	521,
			"primary_score":	999873,
			"second_score":	120139
		}, {
			"file":	"main/main.c",
			"line":	613,
			"primary_score":	999873,
			"second_score":	120906
		}, {
			"file":	"main/main.c",
			"line":	614,
			"primary_score":	999873,
			"second_score":	120905
		}, {
			"file":	"main/main.c",
			"line":	615,
			"primary_score":	999873,
			"second_score":	120904
		}, {
			"file":	"main/main.c",
			"line":	616,
			"primary_score":	999873,
			"second_score":	120903
		}, {
			"file":	"main/main.c",
			"line":	617,
			"primary_score":	999873,
			"second_score":	120902
		}, {
			"file":	"main/main.c",
			"line":	618,
			"primary_score":	999873,
			"second_score":	120901
		}, {
			"file":	"main/main.c",
			"line":	619,
			"primary_score":	999873,
			"second_score":	120900
		}, {
			"file":	"main/main.c",
			"line":	620,
			"primary_score":	999873,
			"second_score":	120899
		}, {
			"file":	"main/main.c",
			"line":	621,
			"primary_score":	999873,
			"second_score":	120898
		}, {
			"file":	"main/main.c",
			"line":	622,
			"primary_score":	999873,
			"second_score":	120897
		}, {
			"file":	"main/main.c",
			"line":	623,
			"primary_score":	999873,
			"second_score":	120896
		}, {
			"file":	"main/main.c",
			"line":	626,
			"primary_score":	999873,
			"second_score":	120895
		}, {
			"file":	"main/main.c",
			"line":	628,
			"primary_score":	999873,
			"second_score":	120143
		}, {
			"file":	"main/main.c",
			"line":	637,
			"primary_score":	999873,
			"second_score":	120142
		}, {
			"file":	"main/main.c",
			"line":	639,
			"primary_score":	999873,
			"second_score":	120140
		}, {
			"file":	"main/main.c",
			"line":	641,
			"primary_score":	999873,
			"second_score":	120138
		}, {
			"file":	"main/main.c",
			"line":	645,
			"primary_score":	999885,
			"second_score":	120137
		}, {
			"file":	"main/main.c",
			"line":	664,
			"primary_score":	999889,
			"second_score":	120136
		}, {
			"file":	"main/main.c",
			"line":	665,
			"primary_score":	999889,
			"second_score":	120135
		}, {
			"file":	"main/main.c",
			"line":	680,
			"primary_score":	999873,
			"second_score":	120134
		}, {
			"file":	"main/main.c",
			"line":	681,
			"primary_score":	999873,
			"second_score":	120133
		}, {
			"file":	"main/main.c",
			"line":	686,
			"primary_score":	999873,
			"second_score":	119914
		}, {
			"file":	"main/main.c",
			"line":	694,
			"primary_score":	999873,
			"second_score":	119913
		}, {
			"file":	"main/main.c",
			"line":	700,
			"primary_score":	999873,
			"second_score":	119912
		}, {
			"file":	"main/main.c",
			"line":	701,
			"primary_score":	999873,
			"second_score":	122636
		}, {
			"file":	"main/main.c",
			"line":	702,
			"primary_score":	999873,
			"second_score":	122635
		}, {
			"file":	"main/main.c",
			"line":	703,
			"primary_score":	999874,
			"second_score":	122634
		}, {
			"file":	"main/main.c",
			"line":	707,
			"primary_score":	999873,
			"second_score":	122353
		}, {
			"file":	"main/main.c",
			"line":	708,
			"primary_score":	999887,
			"second_score":	122352
		}, {
			"file":	"main/main.c",
			"line":	710,
			"primary_score":	999873,
			"second_score":	122351
		}, {
			"file":	"main/main.c",
			"line":	717,
			"primary_score":	999873,
			"second_score":	119911
		}, {
			"file":	"main/main.c",
			"line":	756,
			"primary_score":	999873,
			"second_score":	119910
		}, {
			"file":	"main/main.c",
			"line":	758,
			"primary_score":	999873,
			"second_score":	119617
		}, {
			"file":	"main/main.c",
			"line":	759,
			"primary_score":	999873,
			"second_score":	119598
		}, {
			"file":	"main/main.c",
			"line":	760,
			"primary_score":	999873,
			"second_score":	121962
		}, {
			"file":	"main/main.c",
			"line":	763,
			"primary_score":	999873,
			"second_score":	119597
		}, {
			"file":	"main/main.c",
			"line":	765,
			"primary_score":	999873,
			"second_score":	119596
		}, {
			"file":	"main/main.c",
			"line":	768,
			"primary_score":	999873,
			"second_score":	119595
		}, {
			"file":	"main/main.c",
			"line":	769,
			"primary_score":	999873,
			"second_score":	119594
		}, {
			"file":	"main/main.c",
			"line":	770,
			"primary_score":	999873,
			"second_score":	119593
		}, {
			"file":	"main/main.c",
			"line":	771,
			"primary_score":	999873,
			"second_score":	119566
		}, {
			"file":	"main/main.c",
			"line":	772,
			"primary_score":	999873,
			"second_score":	119473
		}, {
			"file":	"main/main.c",
			"line":	775,
			"primary_score":	999873,
			"second_score":	119376
		}, {
			"file":	"main/main.c",
			"line":	777,
			"primary_score":	999873,
			"second_score":	119357
		}, {
			"file":	"main/main.c",
			"line":	778,
			"primary_score":	999873,
			"second_score":	121209
		}, {
			"file":	"main/main.c",
			"line":	786,
			"primary_score":	999882,
			"second_score":	120909
		}, {
			"file":	"main/main.c",
			"line":	788,
			"primary_score":	999882,
			"second_score":	120908
		}, {
			"file":	"main/main.c",
			"line":	789,
			"primary_score":	999882,
			"second_score":	120907
		}, {
			"file":	"main/main.c",
			"line":	798,
			"primary_score":	999876,
			"second_score":	123267
		}, {
			"file":	"main/main.c",
			"line":	800,
			"primary_score":	999876,
			"second_score":	123266
		}, {
			"file":	"main/main.c",
			"line":	801,
			"primary_score":	999876,
			"second_score":	123265
		}, {
			"file":	"main/main.c",
			"line":	802,
			"primary_score":	999876,
			"second_score":	121190
		}, {
			"file":	"main/main.c",
			"line":	855,
			"primary_score":	999873,
			"second_score":	119329
		}, {
			"file":	"main/main.c",
			"line":	856,
			"primary_score":	999873,
			"second_score":	119328
		}, {
			"file":	"main/main.c",
			"line":	857,
			"primary_score":	999873,
			"second_score":	119327
		}, {
			"file":	"main/main.c",
			"line":	859,
			"primary_score":	999873,
			"second_score":	119326
		}, {
			"file":	"main/main.c",
			"line":	862,
			"primary_score":	999873,
			"second_score":	119149
		}, {
			"file":	"main/main.c",
			"line":	874,
			"primary_score":	999873,
			"second_score":	119148
		}, {
			"file":	"main/main.c",
			"line":	878,
			"primary_score":	999873,
			"second_score":	119147
		}, {
			"file":	"main/main.c",
			"line":	879,
			"primary_score":	999873,
			"second_score":	119146
		}, {
			"file":	"main/main.c",
			"line":	880,
			"primary_score":	999881,
			"second_score":	119145
		}, {
			"file":	"main/main.c",
			"line":	882,
			"primary_score":	999873,
			"second_score":	119144
		}, {
			"file":	"main/main.c",
			"line":	883,
			"primary_score":	999881,
			"second_score":	119143
		}, {
			"file":	"main/main.c",
			"line":	885,
			"primary_score":	999873,
			"second_score":	119142
		}, {
			"file":	"main/main.c",
			"line":	888,
			"primary_score":	999873,
			"second_score":	119141
		}, {
			"file":	"main/main.c",
			"line":	889,
			"primary_score":	999873,
			"second_score":	119140
		}, {
			"file":	"main/main.c",
			"line":	890,
			"primary_score":	999873,
			"second_score":	119139
		}, {
			"file":	"main/main.c",
			"line":	891,
			"primary_score":	999873,
			"second_score":	119138
		}, {
			"file":	"main/main.c",
			"line":	895,
			"primary_score":	999873,
			"second_score":	119137
		}, {
			"file":	"main/main.c",
			"line":	926,
			"primary_score":	999873,
			"second_score":	119136
		}, {
			"file":	"main/main.c",
			"line":	1031,
			"primary_score":	999873,
			"second_score":	119135
		}, {
			"file":	"main/main.c",
			"line":	1044,
			"primary_score":	999889,
			"second_score":	119134
		}, {
			"file":	"main/main.c",
			"line":	1045,
			"primary_score":	999889,
			"second_score":	119133
		}, {
			"file":	"main/main.c",
			"line":	1056,
			"primary_score":	999889,
			"second_score":	119132
		}, {
			"file":	"main/main.c",
			"line":	1058,
			"primary_score":	999889,
			"second_score":	119131
		}, {
			"file":	"main/main.c",
			"line":	1059,
			"primary_score":	999889,
			"second_score":	119127
		}, {
			"file":	"main/main.c",
			"line":	1060,
			"primary_score":	999889,
			"second_score":	119108
		}, {
			"file":	"main/main.c",
			"line":	1061,
			"primary_score":	999889,
			"second_score":	119104
		}, {
			"file":	"main/main.c",
			"line":	1069,
			"primary_score":	999873,
			"second_score":	121474
		}, {
			"file":	"main/main.c",
			"line":	1074,
			"primary_score":	999873,
			"second_score":	121473
		}, {
			"file":	"main/main.c",
			"line":	1075,
			"primary_score":	999873,
			"second_score":	121472
		}, {
			"file":	"main/main.c",
			"line":	1078,
			"primary_score":	999873,
			"second_score":	121471
		}, {
			"file":	"main/main.c",
			"line":	1079,
			"primary_score":	999873,
			"second_score":	121470
		}, {
			"file":	"main/main.c",
			"line":	1080,
			"primary_score":	999873,
			"second_score":	121469
		}, {
			"file":	"main/main.c",
			"line":	1081,
			"primary_score":	999873,
			"second_score":	121442
		}, {
			"file":	"main/main.c",
			"line":	1082,
			"primary_score":	999873,
			"second_score":	121327
		}, {
			"file":	"main/main.c",
			"line":	1086,
			"primary_score":	999873,
			"second_score":	121230
		}, {
			"file":	"main/main.c",
			"line":	1209,
			"primary_score":	999872,
			"second_score":	124648
		}, {
			"file":	"main/main.c",
			"line":	1215,
			"primary_score":	999872,
			"second_score":	124647
		}, {
			"file":	"main/main.c",
			"line":	1216,
			"primary_score":	999872,
			"second_score":	124646
		}, {
			"file":	"main/main.c",
			"line":	1217,
			"primary_score":	999872,
			"second_score":	124645
		}, {
			"file":	"main/main.c",
			"line":	1219,
			"primary_score":	999872,
			"second_score":	121159
		}, {
			"file":	"main/main.c",
			"line":	1246,
			"primary_score":	999885,
			"second_score":	121158
		}, {
			"file":	"main/main.c",
			"line":	1252,
			"primary_score":	999872,
			"second_score":	124624
		}, {
			"file":	"main/main.c",
			"line":	1275,
			"primary_score":	999885,
			"second_score":	121153
		}, {
			"file":	"main/main.c",
			"line":	1597,
			"primary_score":	999861,
			"second_score":	120271
		}, {
			"file":	"main/main.c",
			"line":	1598,
			"primary_score":	999861,
			"second_score":	120270
		}, {
			"file":	"main/main.c",
			"line":	1600,
			"primary_score":	999861,
			"second_score":	120269
		}, {
			"file":	"main/main.c",
			"line":	1605,
			"primary_score":	999861,
			"second_score":	120268
		}, {
			"file":	"main/main.c",
			"line":	1606,
			"primary_score":	999861,
			"second_score":	120267
		}, {
			"file":	"main/main.c",
			"line":	1608,
			"primary_score":	999861,
			"second_score":	120266
		}, {
			"file":	"main/main.c",
			"line":	1611,
			"primary_score":	999861,
			"second_score":	120259
		}, {
			"file":	"main/main.c",
			"line":	1612,
			"primary_score":	999861,
			"second_score":	120253
		}, {
			"file":	"main/main.c",
			"line":	1613,
			"primary_score":	999861,
			"second_score":	120251
		}, {
			"file":	"main/main.c",
			"line":	1616,
			"primary_score":	999861,
			"second_score":	120249
		}, {
			"file":	"main/main.c",
			"line":	1617,
			"primary_score":	999861,
			"second_score":	120243
		}, {
			"file":	"main/main.c",
			"line":	1618,
			"primary_score":	999861,
			"second_score":	119006
		}, {
			"file":	"main/main.c",
			"line":	1621,
			"primary_score":	999861,
			"second_score":	119004
		}, {
			"file":	"main/main.c",
			"line":	1622,
			"primary_score":	999861,
			"second_score":	118998
		}, {
			"file":	"main/main.c",
			"line":	1624,
			"primary_score":	999861,
			"second_score":	118997
		}, {
			"file":	"main/main.c",
			"line":	1630,
			"primary_score":	999861,
			"second_score":	118996
		}, {
			"file":	"main/main.c",
			"line":	1633,
			"primary_score":	999861,
			"second_score":	118995
		}, {
			"file":	"main/main.c",
			"line":	1635,
			"primary_score":	999861,
			"second_score":	118993
		}, {
			"file":	"main/main.c",
			"line":	1636,
			"primary_score":	999861,
			"second_score":	118988
		}, {
			"file":	"main/main.c",
			"line":	1639,
			"primary_score":	999861,
			"second_score":	118986
		}, {
			"file":	"main/main.c",
			"line":	1640,
			"primary_score":	999861,
			"second_score":	118980
		}, {
			"file":	"main/main.c",
			"line":	1641,
			"primary_score":	999861,
			"second_score":	118975
		}, {
			"file":	"main/main.c",
			"line":	1644,
			"primary_score":	999861,
			"second_score":	118973
		}, {
			"file":	"main/main.c",
			"line":	1645,
			"primary_score":	999861,
			"second_score":	118972
		}, {
			"file":	"main/main.c",
			"line":	1646,
			"primary_score":	999861,
			"second_score":	118370
		}, {
			"file":	"main/main.c",
			"line":	1650,
			"primary_score":	999861,
			"second_score":	118367
		}, {
			"file":	"main/main.c",
			"line":	1651,
			"primary_score":	999861,
			"second_score":	118361
		}, {
			"file":	"main/main.c",
			"line":	1653,
			"primary_score":	999861,
			"second_score":	118360
		}, {
			"file":	"main/main.c",
			"line":	1654,
			"primary_score":	999861,
			"second_score":	118218
		}, {
			"file":	"main/main.c",
			"line":	1655,
			"primary_score":	999861,
			"second_score":	118217
		}, {
			"file":	"main/main.c",
			"line":	1658,
			"primary_score":	999861,
			"second_score":	118183
		}, {
			"file":	"main/main.c",
			"line":	1661,
			"primary_score":	999861,
			"second_score":	118181
		}, {
			"file":	"main/main.c",
			"line":	1662,
			"primary_score":	999873,
			"second_score":	117981
		}, {
			"file":	"main/main.c",
			"line":	1663,
			"primary_score":	999873,
			"second_score":	117980
		}, {
			"file":	"main/main.c",
			"line":	1665,
			"primary_score":	999861,
			"second_score":	118180
		}, {
			"file":	"main/main.c",
			"line":	1666,
			"primary_score":	999873,
			"second_score":	117978
		}, {
			"file":	"main/main.c",
			"line":	1667,
			"primary_score":	999873,
			"second_score":	117977
		}, {
			"file":	"main/main.c",
			"line":	1671,
			"primary_score":	999861,
			"second_score":	118179
		}, {
			"file":	"main/main.c",
			"line":	1674,
			"primary_score":	999861,
			"second_score":	113324
		}, {
			"file":	"main/main.c",
			"line":	1675,
			"primary_score":	999861,
			"second_score":	113318
		}, {
			"file":	"main/main.c",
			"line":	1676,
			"primary_score":	999861,
			"second_score":	113314
		}, {
			"file":	"main/main.c",
			"line":	1679,
			"primary_score":	999861,
			"second_score":	113312
		}, {
			"file":	"main/main.c",
			"line":	1680,
			"primary_score":	999861,
			"second_score":	113306
		}, {
			"file":	"main/main.c",
			"line":	1681,
			"primary_score":	999861,
			"second_score":	113260
		}, {
			"file":	"main/main.c",
			"line":	1684,
			"primary_score":	999861,
			"second_score":	113258
		}, {
			"file":	"main/main.c",
			"line":	1685,
			"primary_score":	999861,
			"second_score":	113252
		}, {
			"file":	"main/main.c",
			"line":	1686,
			"primary_score":	999861,
			"second_score":	113249
		}, {
			"file":	"main/main.c",
			"line":	1689,
			"primary_score":	999861,
			"second_score":	113247
		}, {
			"file":	"main/main.c",
			"line":	1690,
			"primary_score":	999861,
			"second_score":	113241
		}, {
			"file":	"main/main.c",
			"line":	1691,
			"primary_score":	999861,
			"second_score":	112822
		}, {
			"file":	"main/main.c",
			"line":	1692,
			"primary_score":	999861,
			"second_score":	112820
		}, {
			"file":	"main/main.c",
			"line":	1695,
			"primary_score":	999861,
			"second_score":	103417
		}, {
			"file":	"main/main.c",
			"line":	1696,
			"primary_score":	999861,
			"second_score":	103411
		}, {
			"file":	"main/main.c",
			"line":	1697,
			"primary_score":	999861,
			"second_score":	103409
		}, {
			"file":	"main/main.c",
			"line":	1729,
			"primary_score":	999861,
			"second_score":	121227
		}, {
			"file":	"main/main.c",
			"line":	1730,
			"primary_score":	999861,
			"second_score":	121226
		}, {
			"file":	"main/main.c",
			"line":	1750,
			"primary_score":	999861,
			"second_score":	3150
		}, {
			"file":	"main/main.c",
			"line":	1753,
			"primary_score":	999861,
			"second_score":	3149
		}, {
			"file":	"main/main.c",
			"line":	1756,
			"primary_score":	999861,
			"second_score":	3148
		}, {
			"file":	"main/main.c",
			"line":	1759,
			"primary_score":	999861,
			"second_score":	3147
		}, {
			"file":	"main/main.c",
			"line":	1763,
			"primary_score":	999861,
			"second_score":	3146
		}, {
			"file":	"main/main.c",
			"line":	2191,
			"primary_score":	999861,
			"second_score":	103400
		}, {
			"file":	"main/main.c",
			"line":	2193,
			"primary_score":	999861,
			"second_score":	103399
		}, {
			"file":	"main/main.c",
			"line":	2195,
			"primary_score":	999861,
			"second_score":	103398
		}, {
			"file":	"main/main.c",
			"line":	2208,
			"primary_score":	999861,
			"second_score":	103397
		}, {
			"file":	"main/main.c",
			"line":	2210,
			"primary_score":	999861,
			"second_score":	103392
		}, {
			"file":	"main/main.c",
			"line":	2213,
			"primary_score":	999861,
			"second_score":	6121
		}, {
			"file":	"main/main.c",
			"line":	2215,
			"primary_score":	999861,
			"second_score":	6055
		}, {
			"file":	"main/main.c",
			"line":	2216,
			"primary_score":	999861,
			"second_score":	6026
		}, {
			"file":	"main/main.c",
			"line":	2219,
			"primary_score":	999861,
			"second_score":	3567
		}, {
			"file":	"main/main.c",
			"line":	2222,
			"primary_score":	999861,
			"second_score":	3244
		}, {
			"file":	"main/main.c",
			"line":	2223,
			"primary_score":	999861,
			"second_score":	3214
		}, {
			"file":	"main/main.c",
			"line":	2228,
			"primary_score":	999861,
			"second_score":	3191
		}, {
			"file":	"main/main.c",
			"line":	2229,
			"primary_score":	999861,
			"second_score":	3154
		}, {
			"file":	"main/main.c",
			"line":	2231,
			"primary_score":	999861,
			"second_score":	3152
		}, {
			"file":	"main/main.c",
			"line":	2234,
			"primary_score":	999861,
			"second_score":	3151
		}, {
			"file":	"main/main.c",
			"line":	2235,
			"primary_score":	999861,
			"second_score":	3141
		}, {
			"file":	"main/main.c",
			"line":	2339,
			"primary_score":	999861,
			"second_score":	120283
		}, {
			"file":	"main/main.c",
			"line":	2347,
			"primary_score":	999861,
			"second_score":	120281
		}, {
			"file":	"main/main.c",
			"line":	2350,
			"primary_score":	999861,
			"second_score":	120280
		}, {
			"file":	"main/main.c",
			"line":	2352,
			"primary_score":	999861,
			"second_score":	120278
		}, {
			"file":	"main/output.c",
			"line":	103,
			"primary_score":	999861,
			"second_score":	3190
		}, {
			"file":	"main/output.c",
			"line":	104,
			"primary_score":	999861,
			"second_score":	3176
		}, {
			"file":	"main/output.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	3162
		}, {
			"file":	"main/output.c",
			"line":	129,
			"primary_score":	999861,
			"second_score":	118992
		}, {
			"file":	"main/output.c",
			"line":	131,
			"primary_score":	999861,
			"second_score":	118991
		}, {
			"file":	"main/output.c",
			"line":	132,
			"primary_score":	999861,
			"second_score":	118990
		}, {
			"file":	"main/output.c",
			"line":	135,
			"primary_score":	999861,
			"second_score":	118989
		}, {
			"file":	"main/output.c",
			"line":	198,
			"primary_score":	999861,
			"second_score":	121225
		}, {
			"file":	"main/output.c",
			"line":	201,
			"primary_score":	999861,
			"second_score":	121224
		}, {
			"file":	"main/output.c",
			"line":	202,
			"primary_score":	999861,
			"second_score":	121181
		}, {
			"file":	"main/output.c",
			"line":	281,
			"primary_score":	999861,
			"second_score":	118994
		}, {
			"file":	"main/output.c",
			"line":	697,
			"primary_score":	999861,
			"second_score":	121219
		}, {
			"file":	"main/output.c",
			"line":	703,
			"primary_score":	999861,
			"second_score":	121218
		}, {
			"file":	"main/output.c",
			"line":	711,
			"primary_score":	999861,
			"second_score":	121216
		}, {
			"file":	"main/output.c",
			"line":	715,
			"primary_score":	999861,
			"second_score":	121215
		}, {
			"file":	"main/output.c",
			"line":	716,
			"primary_score":	999861,
			"second_score":	121214
		}, {
			"file":	"main/output.c",
			"line":	717,
			"primary_score":	999861,
			"second_score":	121213
		}, {
			"file":	"main/output.c",
			"line":	719,
			"primary_score":	999861,
			"second_score":	121212
		}, {
			"file":	"main/output.c",
			"line":	785,
			"primary_score":	999861,
			"second_score":	121183
		}, {
			"file":	"main/output.c",
			"line":	789,
			"primary_score":	999861,
			"second_score":	121182
		}, {
			"file":	"main/output.c",
			"line":	975,
			"primary_score":	999861,
			"second_score":	121223
		}, {
			"file":	"main/output.c",
			"line":	976,
			"primary_score":	999861,
			"second_score":	121222
		}, {
			"file":	"main/output.c",
			"line":	977,
			"primary_score":	999861,
			"second_score":	121221
		}, {
			"file":	"main/output.c",
			"line":	979,
			"primary_score":	999861,
			"second_score":	121220
		}, {
			"file":	"main/output.c",
			"line":	983,
			"primary_score":	999861,
			"second_score":	121217
		}, {
			"file":	"main/output.c",
			"line":	990,
			"primary_score":	999861,
			"second_score":	121211
		}, {
			"file":	"main/output.c",
			"line":	1002,
			"primary_score":	999861,
			"second_score":	121210
		}, {
			"file":	"main/output.c",
			"line":	1003,
			"primary_score":	999861,
			"second_score":	121209
		}, {
			"file":	"main/output.c",
			"line":	1006,
			"primary_score":	999861,
			"second_score":	121208
		}, {
			"file":	"main/output.c",
			"line":	1010,
			"primary_score":	999861,
			"second_score":	121207
		}, {
			"file":	"main/output.c",
			"line":	1011,
			"primary_score":	999861,
			"second_score":	124761
		}, {
			"file":	"main/output.c",
			"line":	1014,
			"primary_score":	999861,
			"second_score":	124759
		}, {
			"file":	"main/output.c",
			"line":	1015,
			"primary_score":	999861,
			"second_score":	124757
		}, {
			"file":	"main/output.c",
			"line":	1016,
			"primary_score":	999861,
			"second_score":	124754
		}, {
			"file":	"main/output.c",
			"line":	1022,
			"primary_score":	999861,
			"second_score":	121206
		}, {
			"file":	"main/output.c",
			"line":	1023,
			"primary_score":	999861,
			"second_score":	121191
		}, {
			"file":	"main/output.c",
			"line":	1024,
			"primary_score":	999861,
			"second_score":	121190
		}, {
			"file":	"main/output.c",
			"line":	1026,
			"primary_score":	999861,
			"second_score":	121185
		}, {
			"file":	"main/output.c",
			"line":	1028,
			"primary_score":	999861,
			"second_score":	121184
		}, {
			"file":	"main/php_ini.c",
			"line":	194,
			"primary_score":	999861,
			"second_score":	3256
		}, {
			"file":	"main/php_ini.c",
			"line":	197,
			"primary_score":	999861,
			"second_score":	3255
		}, {
			"file":	"main/php_ini.c",
			"line":	198,
			"primary_score":	999861,
			"second_score":	3254
		}, {
			"file":	"main/php_ini.c",
			"line":	729,
			"primary_score":	999861,
			"second_score":	3566
		}, {
			"file":	"main/php_ini.c",
			"line":	730,
			"primary_score":	999861,
			"second_score":	3247
		}, {
			"file":	"main/php_ini.c",
			"line":	734,
			"primary_score":	999861,
			"second_score":	3246
		}, {
			"file":	"main/php_ini.c",
			"line":	738,
			"primary_score":	999861,
			"second_score":	3245
		}, {
			"file":	"main/php_logos.c",
			"line":	67,
			"primary_score":	999861,
			"second_score":	6054
		}, {
			"file":	"main/php_logos.c",
			"line":	68,
			"primary_score":	999861,
			"second_score":	6027
		}, {
			"file":	"main/php_open_temporary_file.c",
			"line":	183,
			"primary_score":	999861,
			"second_score":	3153
		}, {
			"file":	"main/php_ticks.c",
			"line":	32,
			"primary_score":	999861,
			"second_score":	120265
		}, {
			"file":	"main/php_ticks.c",
			"line":	37,
			"primary_score":	999861,
			"second_score":	3145
		}, {
			"file":	"main/spprintf.c",
			"line":	775,
			"primary_score":	999861,
			"second_score":	119769
		}, {
			"file":	"main/streams/filter.c",
			"line":	37,
			"primary_score":	999861,
			"second_score":	6095
		}, {
			"file":	"main/streams/filter.c",
			"line":	54,
			"primary_score":	999861,
			"second_score":	62055
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	54,
			"primary_score":	999863,
			"second_score":	124269
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	56,
			"primary_score":	999863,
			"second_score":	124268
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	59,
			"primary_score":	999863,
			"second_score":	124267
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	77,
			"primary_score":	999863,
			"second_score":	124266
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	81,
			"primary_score":	999863,
			"second_score":	124265
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	83,
			"primary_score":	999863,
			"second_score":	124264
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	86,
			"primary_score":	999863,
			"second_score":	124263
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	97,
			"primary_score":	999863,
			"second_score":	124262
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	98,
			"primary_score":	999863,
			"second_score":	124261
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	287,
			"primary_score":	999861,
			"second_score":	148446
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	371,
			"primary_score":	999861,
			"second_score":	113872
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	372,
			"primary_score":	999861,
			"second_score":	113871
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	374,
			"primary_score":	999861,
			"second_score":	113870
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	377,
			"primary_score":	999861,
			"second_score":	113869
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	392,
			"primary_score":	999861,
			"second_score":	113868
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	393,
			"primary_score":	999861,
			"second_score":	113867
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	394,
			"primary_score":	999861,
			"second_score":	113866
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	404,
			"primary_score":	999861,
			"second_score":	113865
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	405,
			"primary_score":	999861,
			"second_score":	113864
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	413,
			"primary_score":	999861,
			"second_score":	113863
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	425,
			"primary_score":	999861,
			"second_score":	113862
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	427,
			"primary_score":	999861,
			"second_score":	113843
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	432,
			"primary_score":	999861,
			"second_score":	113882
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	434,
			"primary_score":	999861,
			"second_score":	113881
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	441,
			"primary_score":	999861,
			"second_score":	113880
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	442,
			"primary_score":	999861,
			"second_score":	113879
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	889,
			"primary_score":	999863,
			"second_score":	124276
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	890,
			"primary_score":	999863,
			"second_score":	124275
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	891,
			"primary_score":	999863,
			"second_score":	124274
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	892,
			"primary_score":	999863,
			"second_score":	124273
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	893,
			"primary_score":	999863,
			"second_score":	124272
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	894,
			"primary_score":	999863,
			"second_score":	124271
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	896,
			"primary_score":	999863,
			"second_score":	124270
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	903,
			"primary_score":	999863,
			"second_score":	124260
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	906,
			"primary_score":	999863,
			"second_score":	124259
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	911,
			"primary_score":	999863,
			"second_score":	123578
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	930,
			"primary_score":	999863,
			"second_score":	123577
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	932,
			"primary_score":	999863,
			"second_score":	123576
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	977,
			"primary_score":	999863,
			"second_score":	123575
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	978,
			"primary_score":	999863,
			"second_score":	123556
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	981,
			"primary_score":	999863,
			"second_score":	123555
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	989,
			"primary_score":	999863,
			"second_score":	124281
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	993,
			"primary_score":	999863,
			"second_score":	124277
		}, {
			"file":	"main/streams/streams.c",
			"line":	104,
			"primary_score":	999861,
			"second_score":	118916
		}, {
			"file":	"main/streams/streams.c",
			"line":	105,
			"primary_score":	999861,
			"second_score":	118907
		}, {
			"file":	"main/streams/streams.c",
			"line":	140,
			"primary_score":	999882,
			"second_score":	123547
		}, {
			"file":	"main/streams/streams.c",
			"line":	141,
			"primary_score":	999882,
			"second_score":	123518
		}, {
			"file":	"main/streams/streams.c",
			"line":	142,
			"primary_score":	999882,
			"second_score":	123517
		}, {
			"file":	"main/streams/streams.c",
			"line":	144,
			"primary_score":	999882,
			"second_score":	123516
		}, {
			"file":	"main/streams/streams.c",
			"line":	145,
			"primary_score":	999882,
			"second_score":	123515
		}, {
			"file":	"main/streams/streams.c",
			"line":	176,
			"primary_score":	999887,
			"second_score":	123514
		}, {
			"file":	"main/streams/streams.c",
			"line":	177,
			"primary_score":	999887,
			"second_score":	123513
		}, {
			"file":	"main/streams/streams.c",
			"line":	186,
			"primary_score":	999882,
			"second_score":	123512
		}, {
			"file":	"main/streams/streams.c",
			"line":	187,
			"primary_score":	999882,
			"second_score":	123268
		}, {
			"file":	"main/streams/streams.c",
			"line":	188,
			"primary_score":	999882,
			"second_score":	121189
		}, {
			"file":	"main/streams/streams.c",
			"line":	189,
			"primary_score":	999882,
			"second_score":	121170
		}, {
			"file":	"main/streams/streams.c",
			"line":	333,
			"primary_score":	999861,
			"second_score":	113897
		}, {
			"file":	"main/streams/streams.c",
			"line":	334,
			"primary_score":	999861,
			"second_score":	113896
		}, {
			"file":	"main/streams/streams.c",
			"line":	335,
			"primary_score":	999861,
			"second_score":	113895
		}, {
			"file":	"main/streams/streams.c",
			"line":	336,
			"primary_score":	999861,
			"second_score":	113894
		}, {
			"file":	"main/streams/streams.c",
			"line":	337,
			"primary_score":	999861,
			"second_score":	113893
		}, {
			"file":	"main/streams/streams.c",
			"line":	339,
			"primary_score":	999861,
			"second_score":	113892
		}, {
			"file":	"main/streams/streams.c",
			"line":	352,
			"primary_score":	999861,
			"second_score":	113891
		}, {
			"file":	"main/streams/streams.c",
			"line":	361,
			"primary_score":	999861,
			"second_score":	113890
		}, {
			"file":	"main/streams/streams.c",
			"line":	365,
			"primary_score":	999861,
			"second_score":	113889
		}, {
			"file":	"main/streams/streams.c",
			"line":	383,
			"primary_score":	999861,
			"second_score":	113888
		}, {
			"file":	"main/streams/streams.c",
			"line":	402,
			"primary_score":	999861,
			"second_score":	113887
		}, {
			"file":	"main/streams/streams.c",
			"line":	405,
			"primary_score":	999861,
			"second_score":	113877
		}, {
			"file":	"main/streams/streams.c",
			"line":	410,
			"primary_score":	999861,
			"second_score":	113876
		}, {
			"file":	"main/streams/streams.c",
			"line":	414,
			"primary_score":	999861,
			"second_score":	113875
		}, {
			"file":	"main/streams/streams.c",
			"line":	415,
			"primary_score":	999861,
			"second_score":	113874
		}, {
			"file":	"main/streams/streams.c",
			"line":	427,
			"primary_score":	999861,
			"second_score":	113873
		}, {
			"file":	"main/streams/streams.c",
			"line":	428,
			"primary_score":	999861,
			"second_score":	113842
		}, {
			"file":	"main/streams/streams.c",
			"line":	431,
			"primary_score":	999861,
			"second_score":	113841
		}, {
			"file":	"main/streams/streams.c",
			"line":	438,
			"primary_score":	999861,
			"second_score":	113840
		}, {
			"file":	"main/streams/streams.c",
			"line":	439,
			"primary_score":	999861,
			"second_score":	113839
		}, {
			"file":	"main/streams/streams.c",
			"line":	442,
			"primary_score":	999861,
			"second_score":	113838
		}, {
			"file":	"main/streams/streams.c",
			"line":	446,
			"primary_score":	999861,
			"second_score":	113837
		}, {
			"file":	"main/streams/streams.c",
			"line":	451,
			"primary_score":	999861,
			"second_score":	113836
		}, {
			"file":	"main/streams/streams.c",
			"line":	456,
			"primary_score":	999861,
			"second_score":	113835
		}, {
			"file":	"main/streams/streams.c",
			"line":	461,
			"primary_score":	999861,
			"second_score":	113834
		}, {
			"file":	"main/streams/streams.c",
			"line":	493,
			"primary_score":	999861,
			"second_score":	113833
		}, {
			"file":	"main/streams/streams.c",
			"line":	494,
			"primary_score":	999861,
			"second_score":	113832
		}, {
			"file":	"main/streams/streams.c",
			"line":	495,
			"primary_score":	999861,
			"second_score":	113813
		}, {
			"file":	"main/streams/streams.c",
			"line":	498,
			"primary_score":	999861,
			"second_score":	113812
		}, {
			"file":	"main/streams/streams.c",
			"line":	502,
			"primary_score":	999861,
			"second_score":	113793
		}, {
			"file":	"main/streams/streams.c",
			"line":	506,
			"primary_score":	999861,
			"second_score":	113792
		}, {
			"file":	"main/streams/streams.c",
			"line":	1114,
			"primary_score":	999861,
			"second_score":	113886
		}, {
			"file":	"main/streams/streams.c",
			"line":	1116,
			"primary_score":	999861,
			"second_score":	113885
		}, {
			"file":	"main/streams/streams.c",
			"line":	1120,
			"primary_score":	999861,
			"second_score":	113884
		}, {
			"file":	"main/streams/streams.c",
			"line":	1121,
			"primary_score":	999861,
			"second_score":	113883
		}, {
			"file":	"main/streams/streams.c",
			"line":	1124,
			"primary_score":	999861,
			"second_score":	113878
		}, {
			"file":	"main/streams/streams.c",
			"line":	1498,
			"primary_score":	999861,
			"second_score":	113899
		}, {
			"file":	"main/streams/streams.c",
			"line":	1500,
			"primary_score":	999861,
			"second_score":	113898
		}, {
			"file":	"main/streams/streams.c",
			"line":	1511,
			"primary_score":	999861,
			"second_score":	113251
		}, {
			"file":	"main/streams/streams.c",
			"line":	1517,
			"primary_score":	999861,
			"second_score":	113250
		}, {
			"file":	"main/streams/streams.c",
			"line":	1553,
			"primary_score":	999861,
			"second_score":	6120
		}, {
			"file":	"main/streams/streams.c",
			"line":	1554,
			"primary_score":	999861,
			"second_score":	6096
		}, {
			"file":	"main/streams/streams.c",
			"line":	1555,
			"primary_score":	999861,
			"second_score":	6086
		}, {
			"file":	"main/streams/streams.c",
			"line":	1556,
			"primary_score":	999861,
			"second_score":	6056
		}, {
			"file":	"main/streams/streams.c",
			"line":	1592,
			"primary_score":	999861,
			"second_score":	97529
		}, {
			"file":	"main/streams/streams.c",
			"line":	1652,
			"primary_score":	999861,
			"second_score":	124293
		}, {
			"file":	"main/streams/streams.c",
			"line":	1682,
			"primary_score":	999861,
			"second_score":	124290
		}, {
			"file":	"main/streams/streams.c",
			"line":	1684,
			"primary_score":	999861,
			"second_score":	124289
		}, {
			"file":	"main/streams/streams.c",
			"line":	1716,
			"primary_score":	999861,
			"second_score":	124288
		}, {
			"file":	"main/streams/streams.c",
			"line":	1720,
			"primary_score":	999861,
			"second_score":	124287
		}, {
			"file":	"main/streams/streams.c",
			"line":	1739,
			"primary_score":	999861,
			"second_score":	124286
		}, {
			"file":	"main/streams/streams.c",
			"line":	1900,
			"primary_score":	999861,
			"second_score":	124637
		}, {
			"file":	"main/streams/streams.c",
			"line":	1909,
			"primary_score":	999872,
			"second_score":	124634
		}, {
			"file":	"main/streams/streams.c",
			"line":	1910,
			"primary_score":	999872,
			"second_score":	124305
		}, {
			"file":	"main/streams/streams.c",
			"line":	2014,
			"primary_score":	999882,
			"second_score":	123548
		}, {
			"file":	"main/streams/streams.c",
			"line":	2015,
			"primary_score":	999882,
			"second_score":	121169
		}, {
			"file":	"main/streams/transports.c",
			"line":	29,
			"primary_score":	999861,
			"second_score":	6085
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	262,
			"primary_score":	999861,
			"second_score":	121200
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	280,
			"primary_score":	999861,
			"second_score":	121199
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	281,
			"primary_score":	999861,
			"second_score":	121198
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	284,
			"primary_score":	999861,
			"second_score":	121197
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	288,
			"primary_score":	999861,
			"second_score":	121196
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	300,
			"primary_score":	999861,
			"second_score":	121205
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	301,
			"primary_score":	999861,
			"second_score":	121204
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	302,
			"primary_score":	999861,
			"second_score":	121203
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	311,
			"primary_score":	999861,
			"second_score":	121202
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	313,
			"primary_score":	999861,
			"second_score":	121201
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	314,
			"primary_score":	999861,
			"second_score":	121195
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	320,
			"primary_score":	999861,
			"second_score":	121194
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	321,
			"primary_score":	999861,
			"second_score":	121193
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	324,
			"primary_score":	999861,
			"second_score":	121192
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	333,
			"primary_score":	999861,
			"second_score":	103394
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	386,
			"primary_score":	999861,
			"second_score":	113291
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	387,
			"primary_score":	999861,
			"second_score":	113290
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	391,
			"primary_score":	999861,
			"second_score":	113289
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	403,
			"primary_score":	999861,
			"second_score":	124793
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	411,
			"primary_score":	999861,
			"second_score":	124768
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	962,
			"primary_score":	999861,
			"second_score":	148100
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	966,
			"primary_score":	999861,
			"second_score":	148099
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	967,
			"primary_score":	999861,
			"second_score":	148098
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	968,
			"primary_score":	999861,
			"second_score":	148097
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1102,
			"primary_score":	999861,
			"second_score":	148086
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1103,
			"primary_score":	999861,
			"second_score":	148085
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1255,
			"primary_score":	999861,
			"second_score":	120277
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1256,
			"primary_score":	999861,
			"second_score":	120276
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1293,
			"primary_score":	999861,
			"second_score":	121705
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1296,
			"primary_score":	999861,
			"second_score":	118677
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1435,
			"primary_score":	999861,
			"second_score":	120275
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1437,
			"primary_score":	999861,
			"second_score":	120273
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1439,
			"primary_score":	999861,
			"second_score":	120272
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1441,
			"primary_score":	999861,
			"second_score":	103407
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1442,
			"primary_score":	999861,
			"second_score":	103406
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1444,
			"primary_score":	999861,
			"second_score":	103405
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1448,
			"primary_score":	999861,
			"second_score":	103404
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1449,
			"primary_score":	999861,
			"second_score":	103403
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1452,
			"primary_score":	999861,
			"second_score":	103402
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1453,
			"primary_score":	999861,
			"second_score":	103401
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1455,
			"primary_score":	999861,
			"second_score":	3136
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1460,
			"primary_score":	999861,
			"second_score":	1
		}],
	"mutation_info":	[{
			"file":	"ext/dom/document.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"ext/dom/document.c",
			"lines":	[{
					"line":	902,
					"switches":	[]
				}, {
					"line":	903,
					"switches":	[]
				}, {
					"line":	904,
					"switches":	[]
				}, {
					"line":	905,
					"switches":	[]
				}, {
					"line":	906,
					"switches":	[]
				}, {
					"line":	907,
					"switches":	[]
				}, {
					"line":	909,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [167], [], [], [], [], [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [], [], [], [], [], []],
							"begin_line":	910,
							"begin_column":	0,
							"end_line":	910,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (name_len)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(name)++", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((name))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocNode(docp, ((void *)0), name, value)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-8.65340493980056, -8.89944385360056, -9.28660840560056, -9.21472083880056, -9.21472083880056, -9.92654495580056, -9.92654495580056, -9.12141566160056, -10.077820822600559, -9.68625294260056, -10.830488199500561, -9.71765142260056, -9.71765142260056, -9.47161250880056, -10.285758682800559, -10.496647799800559, -9.78482368280056, -10.531797596600558, -10.285758682800559, -10.285758682800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.285758682800559, -10.285758682800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.496647799800559, -10.285758682800559, -10.285758682800559, -10.285758682800559, -10.285758682800559, -10.285758682800559, -10.285758682800559, -10.496647799800559, -10.285758682800559, -10.496647799800559, -10.285758682800559, -10.496647799800559, -10.496647799800559]
								}]
						}, {
							"switch":	1,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	910,
							"begin_column":	2,
							"end_line":	912,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) || __is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if (dprintf((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) {\n    return;\n}\n", "if (zend_get_parameters_ex((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) {\n    return;\n}\n", "if (zend_parse_parameters((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) && !__is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9072304754281459, -4.6651185754281457, -3.9510119444281462, -3.5489530454281457, -3.5489530454281457, -4.5049513854281455, -4.3402240754281456, -4.6878229154281463, -4.2516472354281465, -4.8180390164281457, -5.0108510643281461, -5.084203075428146, -5.084203075428146, -4.3263149754281462, -4.8511597854281456, -5.3204197854281459, -4.529148755428146, -5.6090478854281463, -4.8511597854281456, -4.8511597854281456, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -4.8511597854281456, -4.8511597854281456, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -5.3204197854281459, -4.8511597854281456, -4.8511597854281456, -4.8511597854281456, -4.8511597854281456, -4.8511597854281456, -4.8511597854281456, -5.3204197854281459, -4.8511597854281456, -5.3204197854281459, -4.8511597854281456, -5.3204197854281459, -5.3204197854281459]
								}, {
									"case":	2,
									"scores":	[-4.7795443923281464, -5.537432492328147, -4.8233258613281453, -4.4212669623281462, -4.4212669623281462, -5.377265302328146, -5.2125379923281461, -5.5601368323281468, -5.1239611523281461, -5.6903529333281462, -5.8831649812281466, -5.9565169923281474, -5.9565169923281474, -5.1986288923281467, -5.7234737023281461, -6.1927337023281464, -5.4014626723281474, -6.4813618023281467, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -5.7234737023281461, -6.1927337023281464, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-4.7795443923281464, -5.537432492328147, -4.8233258613281453, -4.4212669623281462, -4.4212669623281462, -5.377265302328146, -5.2125379923281461, -5.5601368323281468, -5.1239611523281461, -5.6903529333281462, -5.8831649812281466, -5.9565169923281474, -5.9565169923281474, -5.1986288923281467, -5.7234737023281461, -6.1927337023281464, -5.4014626723281474, -6.4813618023281467, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -6.1927337023281464, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -5.7234737023281461, -6.1927337023281464, -5.7234737023281461, -6.1927337023281464, -5.7234737023281461, -6.1927337023281464, -6.1927337023281464]
								}]
						}, {
							"switch":	2,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	910,
							"begin_column":	2,
							"end_line":	912,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    if (zend_parse_method_parameters((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1) {\n        return;\n    }\n", "if (!__is_neg(\"\", \"L910\", 49, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(name), sizeof (name), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)) && (zend_parse_method_parameters((ht), (this_ptr), \"Os|s\", &id, dom_document_class_entry, &name, &name_len, &value, &value_len) == -1)) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.88194287280056, -8.63983097280056, -7.92572434180056, -7.52366544280056, -7.52366544280056, -8.47966378280056, -8.31493647280056, -8.66253531280056, -8.22635963280056, -8.79275141380056, -8.98556346170056, -9.05891547280056, -9.05891547280056, -8.30102737280056, -8.82587218280056, -9.29513218280056, -8.50386115280056, -9.58376028280056, -8.82587218280056, -8.82587218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -8.82587218280056, -8.82587218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -9.29513218280056, -8.82587218280056, -8.82587218280056, -8.82587218280056, -8.82587218280056, -8.82587218280056, -8.82587218280056, -9.29513218280056, -8.82587218280056, -9.29513218280056, -8.82587218280056, -9.29513218280056, -9.29513218280056]
								}, {
									"case":	2,
									"scores":	[-8.80658138970056, -9.56446948970056, -8.85036285870056, -8.44830395970056, -8.44830395970056, -9.40430229970056, -9.23957498970056, -9.58717382970056, -9.15099814970056, -9.71738993070056, -9.91020197860056, -9.98355398970056, -9.98355398970056, -9.22566588970056, -9.75051069970056, -10.219770699700561, -9.42849966970056, -10.508398799700558, -9.75051069970056, -9.75051069970056, -10.219770699700561, -10.219770699700561, -10.219770699700561, -9.75051069970056, -9.75051069970056, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -10.219770699700561, -9.75051069970056, -9.75051069970056, -9.75051069970056, -9.75051069970056, -9.75051069970056, -9.75051069970056, -10.219770699700561, -9.75051069970056, -10.219770699700561, -9.75051069970056, -10.219770699700561, -10.219770699700561]
								}]
						}]
				}, {
					"line":	915,
					"switches":	[{
							"switch":	3,
							"types":	[[], [], [], [], [167], [], [], [], [], [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [], [], [], [], [], []],
							"begin_line":	916,
							"begin_column":	0,
							"end_line":	916,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (name_len)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(name)++", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((name))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocNode(docp, ((void *)0), name, value)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.316145176212963]
								}, {
									"case":	2,
									"scores":	[-6.316145176212963]
								}, {
									"case":	3,
									"scores":	[-6.316145176212963]
								}, {
									"case":	4,
									"scores":	[-6.316145176212963]
								}, {
									"case":	5,
									"scores":	[-6.316145176212963]
								}, {
									"case":	6,
									"scores":	[-6.316145176212963]
								}, {
									"case":	7,
									"scores":	[-6.316145176212963]
								}, {
									"case":	8,
									"scores":	[-6.316145176212963]
								}, {
									"case":	9,
									"scores":	[-6.316145176212963]
								}, {
									"case":	10,
									"scores":	[-6.316145176212963]
								}, {
									"case":	11,
									"scores":	[-6.316145176212963]
								}, {
									"case":	12,
									"scores":	[-6.316145176212963]
								}, {
									"case":	13,
									"scores":	[-6.316145176212963]
								}, {
									"case":	14,
									"scores":	[-6.316145176212963]
								}, {
									"case":	15,
									"scores":	[-6.316145176212963]
								}, {
									"case":	16,
									"scores":	[-6.316145176212963]
								}, {
									"case":	17,
									"scores":	[-6.316145176212963]
								}, {
									"case":	18,
									"scores":	[-6.316145176212963]
								}, {
									"case":	19,
									"scores":	[-6.316145176212963]
								}, {
									"case":	20,
									"scores":	[-6.316145176212963]
								}, {
									"case":	21,
									"scores":	[-6.316145176212963]
								}, {
									"case":	22,
									"scores":	[-6.316145176212963]
								}, {
									"case":	23,
									"scores":	[-6.316145176212963]
								}, {
									"case":	24,
									"scores":	[-6.316145176212963]
								}, {
									"case":	25,
									"scores":	[-6.316145176212963]
								}, {
									"case":	26,
									"scores":	[-6.316145176212963]
								}, {
									"case":	27,
									"scores":	[-6.316145176212963]
								}, {
									"case":	28,
									"scores":	[-6.316145176212963]
								}, {
									"case":	29,
									"scores":	[-6.316145176212963]
								}, {
									"case":	30,
									"scores":	[-6.316145176212963]
								}, {
									"case":	31,
									"scores":	[-6.316145176212963]
								}, {
									"case":	32,
									"scores":	[-6.316145176212963]
								}, {
									"case":	33,
									"scores":	[-6.316145176212963]
								}, {
									"case":	34,
									"scores":	[-6.316145176212963]
								}, {
									"case":	35,
									"scores":	[-6.316145176212963]
								}, {
									"case":	36,
									"scores":	[-6.316145176212963]
								}, {
									"case":	37,
									"scores":	[-6.316145176212963]
								}, {
									"case":	38,
									"scores":	[-6.316145176212963]
								}, {
									"case":	39,
									"scores":	[-6.316145176212963]
								}, {
									"case":	40,
									"scores":	[-6.316145176212963]
								}, {
									"case":	41,
									"scores":	[-6.316145176212963]
								}, {
									"case":	42,
									"scores":	[-6.316145176212963]
								}, {
									"case":	43,
									"scores":	[-6.316145176212963]
								}, {
									"case":	44,
									"scores":	[-6.316145176212963]
								}, {
									"case":	45,
									"scores":	[-6.316145176212963]
								}, {
									"case":	46,
									"scores":	[-6.316145176212963]
								}, {
									"case":	47,
									"scores":	[-6.316145176212963]
								}, {
									"case":	48,
									"scores":	[-6.316145176212963]
								}, {
									"case":	49,
									"scores":	[-6.316145176212963]
								}, {
									"case":	50,
									"scores":	[-6.316145176212963]
								}, {
									"case":	51,
									"scores":	[-6.316145176212963]
								}, {
									"case":	52,
									"scores":	[-6.316145176212963]
								}, {
									"case":	53,
									"scores":	[-6.316145176212963]
								}, {
									"case":	54,
									"scores":	[-6.316145176212963]
								}, {
									"case":	55,
									"scores":	[-6.316145176212963]
								}, {
									"case":	56,
									"scores":	[-6.316145176212963]
								}, {
									"case":	57,
									"scores":	[-6.316145176212963]
								}, {
									"case":	58,
									"scores":	[-6.316145176212963]
								}, {
									"case":	59,
									"scores":	[-6.316145176212963]
								}, {
									"case":	60,
									"scores":	[-6.316145176212963]
								}, {
									"case":	61,
									"scores":	[-6.316145176212963]
								}, {
									"case":	62,
									"scores":	[-6.316145176212963]
								}, {
									"case":	63,
									"scores":	[-6.316145176212963]
								}, {
									"case":	64,
									"scores":	[-6.316145176212963]
								}, {
									"case":	65,
									"scores":	[-6.316145176212963]
								}, {
									"case":	66,
									"scores":	[-6.316145176212963]
								}, {
									"case":	67,
									"scores":	[-6.316145176212963]
								}, {
									"case":	68,
									"scores":	[-6.316145176212963]
								}, {
									"case":	69,
									"scores":	[-6.316145176212963]
								}, {
									"case":	70,
									"scores":	[-6.316145176212963]
								}, {
									"case":	71,
									"scores":	[-6.316145176212963]
								}, {
									"case":	72,
									"scores":	[-6.316145176212963]
								}, {
									"case":	73,
									"scores":	[-6.316145176212963]
								}, {
									"case":	74,
									"scores":	[-6.316145176212963]
								}, {
									"case":	75,
									"scores":	[-6.316145176212963]
								}, {
									"case":	76,
									"scores":	[-6.316145176212963]
								}, {
									"case":	77,
									"scores":	[-6.316145176212963]
								}, {
									"case":	78,
									"scores":	[-6.316145176212963]
								}, {
									"case":	79,
									"scores":	[-6.316145176212963]
								}, {
									"case":	80,
									"scores":	[-6.316145176212963]
								}, {
									"case":	81,
									"scores":	[-6.316145176212963]
								}, {
									"case":	82,
									"scores":	[-6.316145176212963]
								}, {
									"case":	83,
									"scores":	[-6.316145176212963]
								}, {
									"case":	84,
									"scores":	[-6.316145176212963]
								}, {
									"case":	85,
									"scores":	[-6.316145176212963]
								}, {
									"case":	86,
									"scores":	[-6.316145176212963]
								}, {
									"case":	87,
									"scores":	[-6.316145176212963]
								}, {
									"case":	88,
									"scores":	[-6.316145176212963]
								}, {
									"case":	89,
									"scores":	[-6.316145176212963]
								}, {
									"case":	90,
									"scores":	[-6.316145176212963]
								}, {
									"case":	91,
									"scores":	[-6.316145176212963]
								}, {
									"case":	92,
									"scores":	[-6.316145176212963]
								}, {
									"case":	93,
									"scores":	[-6.316145176212963]
								}, {
									"case":	94,
									"scores":	[-6.316145176212963]
								}, {
									"case":	95,
									"scores":	[-6.316145176212963]
								}, {
									"case":	96,
									"scores":	[-6.316145176212963]
								}, {
									"case":	97,
									"scores":	[-6.316145176212963]
								}, {
									"case":	98,
									"scores":	[-6.316145176212963]
								}, {
									"case":	99,
									"scores":	[-6.316145176212963]
								}, {
									"case":	100,
									"scores":	[-6.316145176212963]
								}, {
									"case":	101,
									"scores":	[-6.316145176212963]
								}, {
									"case":	102,
									"scores":	[-6.316145176212963]
								}, {
									"case":	103,
									"scores":	[-6.316145176212963]
								}, {
									"case":	104,
									"scores":	[-6.316145176212963]
								}, {
									"case":	105,
									"scores":	[-6.316145176212963]
								}, {
									"case":	106,
									"scores":	[-6.316145176212963]
								}, {
									"case":	107,
									"scores":	[-6.316145176212963]
								}, {
									"case":	108,
									"scores":	[-6.316145176212963]
								}, {
									"case":	109,
									"scores":	[-6.316145176212963]
								}, {
									"case":	110,
									"scores":	[-6.316145176212963]
								}, {
									"case":	111,
									"scores":	[-6.316145176212963]
								}, {
									"case":	112,
									"scores":	[-6.316145176212963]
								}, {
									"case":	113,
									"scores":	[-6.316145176212963]
								}, {
									"case":	114,
									"scores":	[-6.316145176212963]
								}, {
									"case":	115,
									"scores":	[-6.316145176212963]
								}, {
									"case":	116,
									"scores":	[-6.316145176212963]
								}, {
									"case":	117,
									"scores":	[-6.316145176212963]
								}, {
									"case":	118,
									"scores":	[-6.316145176212963]
								}, {
									"case":	119,
									"scores":	[-6.316145176212963]
								}, {
									"case":	120,
									"scores":	[-6.316145176212963]
								}, {
									"case":	121,
									"scores":	[-6.316145176212963]
								}, {
									"case":	122,
									"scores":	[-6.316145176212963]
								}, {
									"case":	123,
									"scores":	[-6.316145176212963]
								}, {
									"case":	124,
									"scores":	[-6.316145176212963]
								}, {
									"case":	125,
									"scores":	[-6.316145176212963]
								}, {
									"case":	126,
									"scores":	[-6.316145176212963]
								}, {
									"case":	127,
									"scores":	[-6.316145176212963]
								}, {
									"case":	128,
									"scores":	[-6.316145176212963]
								}, {
									"case":	129,
									"scores":	[-6.316145176212963]
								}, {
									"case":	130,
									"scores":	[-6.316145176212963]
								}, {
									"case":	131,
									"scores":	[-6.316145176212963]
								}, {
									"case":	132,
									"scores":	[-6.316145176212963]
								}, {
									"case":	133,
									"scores":	[-6.316145176212963]
								}, {
									"case":	134,
									"scores":	[-6.316145176212963]
								}, {
									"case":	135,
									"scores":	[-6.316145176212963]
								}, {
									"case":	136,
									"scores":	[-6.316145176212963]
								}, {
									"case":	137,
									"scores":	[-6.316145176212963]
								}, {
									"case":	138,
									"scores":	[-6.316145176212963]
								}, {
									"case":	139,
									"scores":	[-6.316145176212963]
								}, {
									"case":	140,
									"scores":	[-6.316145176212963]
								}, {
									"case":	141,
									"scores":	[-6.316145176212963]
								}, {
									"case":	142,
									"scores":	[-6.316145176212963]
								}, {
									"case":	143,
									"scores":	[-6.316145176212963]
								}, {
									"case":	144,
									"scores":	[-6.316145176212963]
								}, {
									"case":	145,
									"scores":	[-6.316145176212963]
								}, {
									"case":	146,
									"scores":	[-6.316145176212963]
								}, {
									"case":	147,
									"scores":	[-6.316145176212963]
								}, {
									"case":	148,
									"scores":	[-6.316145176212963]
								}, {
									"case":	149,
									"scores":	[-6.316145176212963]
								}, {
									"case":	150,
									"scores":	[-6.316145176212963]
								}, {
									"case":	151,
									"scores":	[-6.316145176212963]
								}, {
									"case":	152,
									"scores":	[-6.316145176212963]
								}, {
									"case":	153,
									"scores":	[-6.316145176212963]
								}, {
									"case":	154,
									"scores":	[-6.316145176212963]
								}, {
									"case":	155,
									"scores":	[-6.316145176212963]
								}, {
									"case":	156,
									"scores":	[-6.316145176212963]
								}, {
									"case":	157,
									"scores":	[-6.316145176212963]
								}, {
									"case":	158,
									"scores":	[-6.316145176212963]
								}, {
									"case":	159,
									"scores":	[-6.316145176212963]
								}, {
									"case":	160,
									"scores":	[-6.316145176212963]
								}, {
									"case":	161,
									"scores":	[-6.316145176212963]
								}, {
									"case":	162,
									"scores":	[-6.316145176212963]
								}, {
									"case":	163,
									"scores":	[-6.316145176212963]
								}, {
									"case":	164,
									"scores":	[-6.316145176212963]
								}, {
									"case":	165,
									"scores":	[-6.316145176212963]
								}, {
									"case":	166,
									"scores":	[-6.316145176212963]
								}, {
									"case":	167,
									"scores":	[-9.59565046021296, -9.9897478679129641, -10.517468759012964, -10.231432786012963, -8.58055875901296, -10.897028759012963, -10.008556082212962, -10.593920152212963, -10.839959066012963, -9.69408631221296, -9.69408631221296, -11.061930874012962, -10.897028759012963, -10.513472682212964]
								}]
						}, {
							"switch":	4,
							"types":	[[273], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], []],
							"begin_line":	916,
							"begin_column":	2,
							"end_line":	919,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret))) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((xmlValidateName((xmlChar *)name, 0) != 0) || __is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret))) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (Debug((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (__overflow((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (__sigsetjmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_array_init((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_object_init_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_glob_stream_get_count((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_filter_flush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_flush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_free((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_free_enclosed((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_mmap_unmap_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_putc((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_puts((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_stat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (_php_stream_truncate_set_size((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (access((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (add_index_null((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (add_next_index_bool((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (add_next_index_long((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (add_next_index_resource((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (add_next_index_zval((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (adjtime((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (alphasort((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (ap_php_asprintf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (bitwise_not_function((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (boolean_not_function((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (cfg_get_double((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (cfg_get_long((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (cfg_get_string((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (checkNamespace((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (chmod((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_config_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_doctype_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_document_element_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_document_uri_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_document_uri_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_encoding_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_encoding_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_format_output_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_format_output_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_implementation_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_preserve_whitespace_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_preserve_whitespace_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_recover_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_recover_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_resolve_externals_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_resolve_externals_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_standalone_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_standalone_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_strict_error_checking_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_strict_error_checking_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_substitue_entities_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_substitue_entities_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_validate_on_parse_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_validate_on_parse_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_version_read((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_document_version_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_has_feature((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (dom_hierarchy((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (drand48_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (execl((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (execle((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (execlp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (execv((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (execvp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (fgetpos((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (fprintf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (fputs((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (fsetpos((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (getdomainname((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (getentropy((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (gethostname((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (getloadavg((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (getlogin_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (gettimeofday((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlCtxtUseOptions((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlDocDump((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlElementAllowedHere((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlIsAutoClosed((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlSaveFile((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (htmlSetMetaEncoding((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (inputPush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (lchmod((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (lcong48_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (link((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (lrand48_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (lstat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (lutimes((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (mblen((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (mkdir((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (mkfifo((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (mkstemps((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (mrand48_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (namePush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (nanosleep((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (nodePush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (on_exit((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_check_open_basedir_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_check_specific_open_basedir((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_libxml_increment_doc_ref((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_libxml_register_export((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_output_handler_started((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_output_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_output_write_unbuffered((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_printf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_register_url_stream_wrapper((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_register_url_stream_wrapper_volatile((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_sprintf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_context_del_link((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_dirent_alphasort((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_dirent_alphasortr((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_filter_append_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_filter_prepend_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_filter_register_factory((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_filter_register_factory_volatile((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_from_persistent_id((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_xport_crypto_enable((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_xport_register((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_stream_xport_shutdown((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_write((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (printf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (putpwent((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (random_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (rename((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (seed48_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (setdomainname((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sethostname((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (setstate_r((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (settimeofday((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigaddset((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigaltstack((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigdelset((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigismember((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigstack((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigwait((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sigwaitinfo((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (sprintf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (stat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (strcasecmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (strcmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (strcoll((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (symlink((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (timer_gettime((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (timespec_get((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (truncate((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (utime((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (utimes((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (valuePush((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_access((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_chdir_file((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_chmod((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_creat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_filepath((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_lstat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_mkdir((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_open((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_rename((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_stat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (virtual_utime((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (vprintf((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (wctomb((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlAddEncodingAlias((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlAutomataSetFinalState((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferCCat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferCat((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferDump((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferGrow((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferResize((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlBufferShrink((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlCopyCharMultiByte((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlCopyError((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlCtxtUseOptions((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlCurrentChar((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlDictOwns((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlDocDump((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlGetFeaturesList((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlGetUTF8Char((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlIsMixedElement((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlIsXHTML((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListAppend((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListCopy((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListInsert((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListPushBack((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListPushFront((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListRemoveAll((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListRemoveFirst((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlListRemoveLast((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlNodeBufGetContent((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlOutputBufferWriteString((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParseAttributeType((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParseDefaultDecl((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParseEnumeratedType((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParseURIReference((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParserInputBufferGrow((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParserInputBufferRead((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParserInputGrow((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlParserInputRead((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlPushInput((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlReconciliateNs((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlRegexpExec((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlRelaxNGValidateDoc((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlRelaxParserSetFlag((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlRemoveID((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlRemoveRef((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSAXVersion((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSaveFile((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSchemaSetValidOptions((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSchemaValidateDoc((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSchemaValidateOneElement((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlStrEqual((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlStrcasecmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlStrcmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSwitchEncoding((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlSwitchToEncoding((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlUTF8Charcmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlUTF8Strloc((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlUTF8Strsize((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlUnsetProp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidBuildContentModel((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateDocument((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateDocumentFinal((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateDtdFinal((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateNCName((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateNMToken((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateQName((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlValidateRoot((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXIncludeProcessFlags((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXIncludeProcessNode((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXIncludeProcessTreeFlags((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXIncludeSetFlags((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathCmpNodes((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathCompiledEvalToBoolean((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathEvalPredicate((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathEvaluatePredicateResult((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathHasSameNodes((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (xmlXPathNodeSetContains((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_add_literal((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_atoi((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_binary_zval_strcasecmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_binary_zval_strcmp((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_call_function((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_check_protected((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_compare_file_handles((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_delete_global_variable((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_disable_class((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_disable_function((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_do_begin_class_member_function_call((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_do_begin_function_call((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_do_verify_access_types((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_fcall_info_argn((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_fcall_info_args((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_get_class_fetch_type((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_get_current_key_type_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_get_pointer((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_index_exists((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_move_backwards_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_move_forward_ex((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_hash_set_pointer((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_list_insert((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_multibyte_set_script_encoding((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_multibyte_set_script_encoding_by_string((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_print_zval((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_register_ini_entries((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_stack_top((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_startup((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_stream_open((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zend_ts_hash_index_exists((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zval_update_constant((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zval_update_constant_inline_change((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (zval_update_constant_no_inline_change((xmlChar *)name, 0) != 0) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((xmlValidateName((xmlChar *)name, 0) != 0) && !__is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret))) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.6898829804281461, -2.3194755769281441, -3.3831196569281445, -2.9066003574281449, -1.293806996428144, -3.2354385374281449, -1.6898829804281461, -3.0938726334281443, -3.8517607334281441, -2.1925551814281441, -2.1925551814281441, -3.8744650734281443, -3.3684960164281446, -3.0706029474281453]
								}, {
									"case":	2,
									"scores":	[-2.3778948184281465, -3.0074874149281459, -4.0711314949281459, -3.5946121954281463, -1.9818188344281462, -3.9234503754281458, -2.3778948184281465, -3.7818844714281457, -4.5397725714281458, -2.8805670194281454, -2.8805670194281454, -4.5624769114281456, -4.0565078544281459, -3.7586147854281458]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}, {
									"case":	69,
									"scores":	[-3.912023005428146]
								}, {
									"case":	70,
									"scores":	[-3.912023005428146]
								}, {
									"case":	71,
									"scores":	[-3.912023005428146]
								}, {
									"case":	72,
									"scores":	[-3.912023005428146]
								}, {
									"case":	73,
									"scores":	[-3.912023005428146]
								}, {
									"case":	74,
									"scores":	[-3.912023005428146]
								}, {
									"case":	75,
									"scores":	[-3.912023005428146]
								}, {
									"case":	76,
									"scores":	[-3.912023005428146]
								}, {
									"case":	77,
									"scores":	[-3.912023005428146]
								}, {
									"case":	78,
									"scores":	[-3.912023005428146]
								}, {
									"case":	79,
									"scores":	[-3.912023005428146]
								}, {
									"case":	80,
									"scores":	[-3.912023005428146]
								}, {
									"case":	81,
									"scores":	[-3.912023005428146]
								}, {
									"case":	82,
									"scores":	[-3.912023005428146]
								}, {
									"case":	83,
									"scores":	[-3.912023005428146]
								}, {
									"case":	84,
									"scores":	[-3.912023005428146]
								}, {
									"case":	85,
									"scores":	[-3.912023005428146]
								}, {
									"case":	86,
									"scores":	[-3.912023005428146]
								}, {
									"case":	87,
									"scores":	[-3.912023005428146]
								}, {
									"case":	88,
									"scores":	[-3.912023005428146]
								}, {
									"case":	89,
									"scores":	[-3.912023005428146]
								}, {
									"case":	90,
									"scores":	[-3.912023005428146]
								}, {
									"case":	91,
									"scores":	[-3.912023005428146]
								}, {
									"case":	92,
									"scores":	[-3.912023005428146]
								}, {
									"case":	93,
									"scores":	[-3.912023005428146]
								}, {
									"case":	94,
									"scores":	[-3.912023005428146]
								}, {
									"case":	95,
									"scores":	[-3.912023005428146]
								}, {
									"case":	96,
									"scores":	[-3.912023005428146]
								}, {
									"case":	97,
									"scores":	[-3.912023005428146]
								}, {
									"case":	98,
									"scores":	[-3.912023005428146]
								}, {
									"case":	99,
									"scores":	[-3.912023005428146]
								}, {
									"case":	100,
									"scores":	[-3.912023005428146]
								}, {
									"case":	101,
									"scores":	[-3.912023005428146]
								}, {
									"case":	102,
									"scores":	[-3.912023005428146]
								}, {
									"case":	103,
									"scores":	[-3.912023005428146]
								}, {
									"case":	104,
									"scores":	[-3.912023005428146]
								}, {
									"case":	105,
									"scores":	[-3.912023005428146]
								}, {
									"case":	106,
									"scores":	[-3.912023005428146]
								}, {
									"case":	107,
									"scores":	[-3.912023005428146]
								}, {
									"case":	108,
									"scores":	[-3.912023005428146]
								}, {
									"case":	109,
									"scores":	[-3.912023005428146]
								}, {
									"case":	110,
									"scores":	[-3.912023005428146]
								}, {
									"case":	111,
									"scores":	[-3.912023005428146]
								}, {
									"case":	112,
									"scores":	[-3.912023005428146]
								}, {
									"case":	113,
									"scores":	[-3.912023005428146]
								}, {
									"case":	114,
									"scores":	[-3.912023005428146]
								}, {
									"case":	115,
									"scores":	[-3.912023005428146]
								}, {
									"case":	116,
									"scores":	[-3.912023005428146]
								}, {
									"case":	117,
									"scores":	[-3.912023005428146]
								}, {
									"case":	118,
									"scores":	[-3.912023005428146]
								}, {
									"case":	119,
									"scores":	[-3.912023005428146]
								}, {
									"case":	120,
									"scores":	[-3.912023005428146]
								}, {
									"case":	121,
									"scores":	[-3.912023005428146]
								}, {
									"case":	122,
									"scores":	[-3.912023005428146]
								}, {
									"case":	123,
									"scores":	[-3.912023005428146]
								}, {
									"case":	124,
									"scores":	[-3.912023005428146]
								}, {
									"case":	125,
									"scores":	[-3.912023005428146]
								}, {
									"case":	126,
									"scores":	[-3.912023005428146]
								}, {
									"case":	127,
									"scores":	[-3.912023005428146]
								}, {
									"case":	128,
									"scores":	[-3.912023005428146]
								}, {
									"case":	129,
									"scores":	[-3.912023005428146]
								}, {
									"case":	130,
									"scores":	[-3.912023005428146]
								}, {
									"case":	131,
									"scores":	[-3.912023005428146]
								}, {
									"case":	132,
									"scores":	[-3.912023005428146]
								}, {
									"case":	133,
									"scores":	[-3.912023005428146]
								}, {
									"case":	134,
									"scores":	[-3.912023005428146]
								}, {
									"case":	135,
									"scores":	[-3.912023005428146]
								}, {
									"case":	136,
									"scores":	[-3.912023005428146]
								}, {
									"case":	137,
									"scores":	[-3.912023005428146]
								}, {
									"case":	138,
									"scores":	[-3.912023005428146]
								}, {
									"case":	139,
									"scores":	[-3.912023005428146]
								}, {
									"case":	140,
									"scores":	[-3.912023005428146]
								}, {
									"case":	141,
									"scores":	[-3.912023005428146]
								}, {
									"case":	142,
									"scores":	[-3.912023005428146]
								}, {
									"case":	143,
									"scores":	[-3.912023005428146]
								}, {
									"case":	144,
									"scores":	[-3.912023005428146]
								}, {
									"case":	145,
									"scores":	[-3.912023005428146]
								}, {
									"case":	146,
									"scores":	[-3.912023005428146]
								}, {
									"case":	147,
									"scores":	[-3.912023005428146]
								}, {
									"case":	148,
									"scores":	[-3.912023005428146]
								}, {
									"case":	149,
									"scores":	[-3.912023005428146]
								}, {
									"case":	150,
									"scores":	[-3.912023005428146]
								}, {
									"case":	151,
									"scores":	[-3.912023005428146]
								}, {
									"case":	152,
									"scores":	[-3.912023005428146]
								}, {
									"case":	153,
									"scores":	[-3.912023005428146]
								}, {
									"case":	154,
									"scores":	[-3.912023005428146]
								}, {
									"case":	155,
									"scores":	[-3.912023005428146]
								}, {
									"case":	156,
									"scores":	[-3.912023005428146]
								}, {
									"case":	157,
									"scores":	[-3.912023005428146]
								}, {
									"case":	158,
									"scores":	[-3.912023005428146]
								}, {
									"case":	159,
									"scores":	[-3.912023005428146]
								}, {
									"case":	160,
									"scores":	[-3.912023005428146]
								}, {
									"case":	161,
									"scores":	[-3.912023005428146]
								}, {
									"case":	162,
									"scores":	[-3.912023005428146]
								}, {
									"case":	163,
									"scores":	[-3.912023005428146]
								}, {
									"case":	164,
									"scores":	[-3.912023005428146]
								}, {
									"case":	165,
									"scores":	[-3.912023005428146]
								}, {
									"case":	166,
									"scores":	[-3.912023005428146]
								}, {
									"case":	167,
									"scores":	[-3.912023005428146]
								}, {
									"case":	168,
									"scores":	[-3.912023005428146]
								}, {
									"case":	169,
									"scores":	[-3.912023005428146]
								}, {
									"case":	170,
									"scores":	[-3.912023005428146]
								}, {
									"case":	171,
									"scores":	[-3.912023005428146]
								}, {
									"case":	172,
									"scores":	[-3.912023005428146]
								}, {
									"case":	173,
									"scores":	[-3.912023005428146]
								}, {
									"case":	174,
									"scores":	[-3.912023005428146]
								}, {
									"case":	175,
									"scores":	[-3.912023005428146]
								}, {
									"case":	176,
									"scores":	[-3.912023005428146]
								}, {
									"case":	177,
									"scores":	[-3.912023005428146]
								}, {
									"case":	178,
									"scores":	[-3.912023005428146]
								}, {
									"case":	179,
									"scores":	[-3.912023005428146]
								}, {
									"case":	180,
									"scores":	[-3.912023005428146]
								}, {
									"case":	181,
									"scores":	[-3.912023005428146]
								}, {
									"case":	182,
									"scores":	[-3.912023005428146]
								}, {
									"case":	183,
									"scores":	[-3.912023005428146]
								}, {
									"case":	184,
									"scores":	[-3.912023005428146]
								}, {
									"case":	185,
									"scores":	[-3.912023005428146]
								}, {
									"case":	186,
									"scores":	[-3.912023005428146]
								}, {
									"case":	187,
									"scores":	[-3.912023005428146]
								}, {
									"case":	188,
									"scores":	[-3.912023005428146]
								}, {
									"case":	189,
									"scores":	[-3.912023005428146]
								}, {
									"case":	190,
									"scores":	[-3.912023005428146]
								}, {
									"case":	191,
									"scores":	[-3.912023005428146]
								}, {
									"case":	192,
									"scores":	[-3.912023005428146]
								}, {
									"case":	193,
									"scores":	[-3.912023005428146]
								}, {
									"case":	194,
									"scores":	[-3.912023005428146]
								}, {
									"case":	195,
									"scores":	[-3.912023005428146]
								}, {
									"case":	196,
									"scores":	[-3.912023005428146]
								}, {
									"case":	197,
									"scores":	[-3.912023005428146]
								}, {
									"case":	198,
									"scores":	[-3.912023005428146]
								}, {
									"case":	199,
									"scores":	[-3.912023005428146]
								}, {
									"case":	200,
									"scores":	[-3.912023005428146]
								}, {
									"case":	201,
									"scores":	[-3.912023005428146]
								}, {
									"case":	202,
									"scores":	[-3.912023005428146]
								}, {
									"case":	203,
									"scores":	[-3.912023005428146]
								}, {
									"case":	204,
									"scores":	[-3.912023005428146]
								}, {
									"case":	205,
									"scores":	[-3.912023005428146]
								}, {
									"case":	206,
									"scores":	[-3.912023005428146]
								}, {
									"case":	207,
									"scores":	[-3.912023005428146]
								}, {
									"case":	208,
									"scores":	[-3.912023005428146]
								}, {
									"case":	209,
									"scores":	[-3.912023005428146]
								}, {
									"case":	210,
									"scores":	[-3.912023005428146]
								}, {
									"case":	211,
									"scores":	[-3.912023005428146]
								}, {
									"case":	212,
									"scores":	[-3.912023005428146]
								}, {
									"case":	213,
									"scores":	[-3.912023005428146]
								}, {
									"case":	214,
									"scores":	[-3.912023005428146]
								}, {
									"case":	215,
									"scores":	[-3.912023005428146]
								}, {
									"case":	216,
									"scores":	[-3.912023005428146]
								}, {
									"case":	217,
									"scores":	[-3.912023005428146]
								}, {
									"case":	218,
									"scores":	[-3.912023005428146]
								}, {
									"case":	219,
									"scores":	[-3.912023005428146]
								}, {
									"case":	220,
									"scores":	[-3.912023005428146]
								}, {
									"case":	221,
									"scores":	[-3.912023005428146]
								}, {
									"case":	222,
									"scores":	[-3.912023005428146]
								}, {
									"case":	223,
									"scores":	[-3.912023005428146]
								}, {
									"case":	224,
									"scores":	[-3.912023005428146]
								}, {
									"case":	225,
									"scores":	[-3.912023005428146]
								}, {
									"case":	226,
									"scores":	[-3.912023005428146]
								}, {
									"case":	227,
									"scores":	[-3.912023005428146]
								}, {
									"case":	228,
									"scores":	[-3.912023005428146]
								}, {
									"case":	229,
									"scores":	[-3.912023005428146]
								}, {
									"case":	230,
									"scores":	[-3.912023005428146]
								}, {
									"case":	231,
									"scores":	[-3.912023005428146]
								}, {
									"case":	232,
									"scores":	[-3.912023005428146]
								}, {
									"case":	233,
									"scores":	[-3.912023005428146]
								}, {
									"case":	234,
									"scores":	[-3.912023005428146]
								}, {
									"case":	235,
									"scores":	[-3.912023005428146]
								}, {
									"case":	236,
									"scores":	[-3.912023005428146]
								}, {
									"case":	237,
									"scores":	[-3.912023005428146]
								}, {
									"case":	238,
									"scores":	[-3.912023005428146]
								}, {
									"case":	239,
									"scores":	[-3.912023005428146]
								}, {
									"case":	240,
									"scores":	[-3.912023005428146]
								}, {
									"case":	241,
									"scores":	[-3.912023005428146]
								}, {
									"case":	242,
									"scores":	[-3.912023005428146]
								}, {
									"case":	243,
									"scores":	[-3.912023005428146]
								}, {
									"case":	244,
									"scores":	[-3.912023005428146]
								}, {
									"case":	245,
									"scores":	[-3.912023005428146]
								}, {
									"case":	246,
									"scores":	[-3.912023005428146]
								}, {
									"case":	247,
									"scores":	[-3.912023005428146]
								}, {
									"case":	248,
									"scores":	[-3.912023005428146]
								}, {
									"case":	249,
									"scores":	[-3.912023005428146]
								}, {
									"case":	250,
									"scores":	[-3.912023005428146]
								}, {
									"case":	251,
									"scores":	[-3.912023005428146]
								}, {
									"case":	252,
									"scores":	[-3.912023005428146]
								}, {
									"case":	253,
									"scores":	[-3.912023005428146]
								}, {
									"case":	254,
									"scores":	[-3.912023005428146]
								}, {
									"case":	255,
									"scores":	[-3.912023005428146]
								}, {
									"case":	256,
									"scores":	[-3.912023005428146]
								}, {
									"case":	257,
									"scores":	[-3.912023005428146]
								}, {
									"case":	258,
									"scores":	[-3.912023005428146]
								}, {
									"case":	259,
									"scores":	[-3.912023005428146]
								}, {
									"case":	260,
									"scores":	[-3.912023005428146]
								}, {
									"case":	261,
									"scores":	[-3.912023005428146]
								}, {
									"case":	262,
									"scores":	[-3.912023005428146]
								}, {
									"case":	263,
									"scores":	[-3.912023005428146]
								}, {
									"case":	264,
									"scores":	[-3.912023005428146]
								}, {
									"case":	265,
									"scores":	[-3.912023005428146]
								}, {
									"case":	266,
									"scores":	[-3.912023005428146]
								}, {
									"case":	267,
									"scores":	[-3.912023005428146]
								}, {
									"case":	268,
									"scores":	[-3.912023005428146]
								}, {
									"case":	269,
									"scores":	[-3.912023005428146]
								}, {
									"case":	270,
									"scores":	[-3.912023005428146]
								}, {
									"case":	271,
									"scores":	[-3.912023005428146]
								}, {
									"case":	272,
									"scores":	[-3.912023005428146]
								}, {
									"case":	273,
									"scores":	[-2.3778948184281465, -3.0074874149281459, -4.0711314949281459, -3.5946121954281463, -1.9818188344281462, -3.9234503754281458, -2.3778948184281465, -3.7818844714281457, -4.5397725714281458, -2.8805670194281454, -2.8805670194281454, -4.5624769114281456, -4.0565078544281459, -3.7586147854281458]
								}]
						}, {
							"switch":	5,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	916,
							"begin_column":	2,
							"end_line":	919,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret)))\n    if (xmlValidateName((xmlChar *)name, 0) != 0) {\n        php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L916\", 14, &(name), sizeof (name), &(intern), sizeof (intern), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(node), sizeof (node), &(value), sizeof (value), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(rv), sizeof (rv), &(ret), sizeof (ret)) && (xmlValidateName((xmlChar *)name, 0) != 0)) {\n    php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9613035292129632, -7.5908961257129626, -8.65454020571296, -8.17802090621296, -6.5652275452129629, -8.50685908621296, -6.9613035292129632, -8.36529318221296, -9.123181282212963, -7.4639757302129626, -7.4639757302129626, -9.14588562221296, -8.6399165652129639, -8.3420234962129634]
								}, {
									"case":	2,
									"scores":	[-5.8834327792129635, -6.5130253757129628, -7.5766694557129632, -7.1001501562129627, -5.487356795212964, -7.4289883362129627, -5.8834327792129635, -7.2874224322129635, -8.04531053221296, -6.3861049802129628, -6.3861049802129628, -8.068014872212963, -7.5620458152129633, -7.2641527462129627]
								}]
						}]
				}, {
					"line":	920,
					"switches":	[{
							"switch":	6,
							"types":	[[], [], [], [], [167], [], [], [], [], [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [], [], [], [], [], []],
							"begin_line":	921,
							"begin_column":	0,
							"end_line":	921,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (name_len)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(name)++", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((name))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocNode(docp, ((void *)0), name, value)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L921\", 14, &(node), sizeof (node), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	2,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	3,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	4,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	5,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	6,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	7,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	8,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	9,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	10,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	11,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	12,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	13,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	14,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	15,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	16,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	17,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	18,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	19,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	20,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	21,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	22,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	23,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	24,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	25,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	26,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	27,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	28,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	29,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	30,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	31,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	32,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	33,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	34,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	35,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	36,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	37,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	38,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	39,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	40,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	41,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	42,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	43,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	44,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	45,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	46,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	47,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	48,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	49,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	50,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	51,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	52,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	53,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	54,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	55,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	56,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	57,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	58,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	59,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	60,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	61,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	62,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	63,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	64,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	65,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	66,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	67,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	68,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	69,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	70,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	71,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	72,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	73,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	74,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	75,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	76,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	77,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	78,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	79,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	80,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	81,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	82,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	83,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	84,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	85,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	86,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	87,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	88,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	89,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	90,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	91,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	92,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	93,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	94,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	95,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	96,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	97,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	98,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	99,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	100,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	101,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	102,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	103,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	104,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	105,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	106,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	107,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	108,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	109,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	110,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	111,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	112,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	113,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	114,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	115,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	116,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	117,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	118,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	119,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	120,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	121,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	122,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	123,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	124,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	125,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	126,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	127,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	128,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	129,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	130,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	131,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	132,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	133,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	134,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	135,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	136,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	137,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	138,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	139,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	140,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	141,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	142,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	143,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	144,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	145,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	146,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	147,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	148,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	149,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	150,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	151,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	152,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	153,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	154,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	155,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	156,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	157,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	158,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	159,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	160,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	161,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	162,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	163,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	164,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	165,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	166,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	167,
									"scores":	[-9.1147947726954435, -5.4825314296954435, -7.2678793528954442, -7.2522131128954435, -9.5938630516954433, -8.2078829916954437, -9.973423051695443, -9.5898669748954433, -9.6651776786954429, -9.6502003648954435, -9.8962392786954432, -9.1121649648954435, -9.1121649648954435, -10.118211086695442]
								}]
						}, {
							"switch":	7,
							"types":	[[], [], [1], [], [], [], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [], [3, 4, 5, 6], [], [], [], [], [], [], [], [2]],
							"begin_line":	921,
							"begin_column":	2,
							"end_line":	921,
							"end_column":	46,
							"patch_codes":	["if (!__is_neg(\"\", \"L921\", 14, &(node), sizeof (node), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    node = xmlNewDocNode(docp, ((void *)0), name, value);\n", "{\n}\n", "node = xmlNewChild(docp, ((void *)0), name, value)", "node = xmlNewDocNodeEatName(docp, ((void *)0), name, value)", "node = xmlNewDocRawNode(docp, ((void *)0), name, value)", "node = xmlNewTextChild(docp, ((void *)0), name, value)", "node = (node)", "node = xmlNewDocNode((&docp), ((void *)0), name, value)", "node = xmlNewDocNode((&ht), ((void *)0), name, value)", "node = xmlNewDocNode((&id), ((void *)0), name, value)", "node = xmlNewDocNode((&intern), ((void *)0), name, value)", "node = xmlNewDocNode((&name), ((void *)0), name, value)", "node = xmlNewDocNode((&name_len), ((void *)0), name, value)", "node = xmlNewDocNode((&node), ((void *)0), name, value)", "node = xmlNewDocNode((&ret), ((void *)0), name, value)", "node = xmlNewDocNode((&return_value), ((void *)0), name, value)", "node = xmlNewDocNode((&return_value_ptr), ((void *)0), name, value)", "node = xmlNewDocNode((&return_value_used), ((void *)0), name, value)", "node = xmlNewDocNode((&rv), ((void *)0), name, value)", "node = xmlNewDocNode((&this_ptr), ((void *)0), name, value)", "node = xmlNewDocNode((&value), ((void *)0), name, value)", "node = xmlNewDocNode((&value_len), ((void *)0), name, value)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (&docp), value)", "node = xmlNewDocNode(docp, ((void *)0), (&ht), value)", "node = xmlNewDocNode(docp, ((void *)0), (&id), value)", "node = xmlNewDocNode(docp, ((void *)0), (&intern), value)", "node = xmlNewDocNode(docp, ((void *)0), (&name), value)", "node = xmlNewDocNode(docp, ((void *)0), (&name_len), value)", "node = xmlNewDocNode(docp, ((void *)0), (&node), value)", "node = xmlNewDocNode(docp, ((void *)0), (&ret), value)", "node = xmlNewDocNode(docp, ((void *)0), (&return_value), value)", "node = xmlNewDocNode(docp, ((void *)0), (&return_value_ptr), value)", "node = xmlNewDocNode(docp, ((void *)0), (&return_value_used), value)", "node = xmlNewDocNode(docp, ((void *)0), (&rv), value)", "node = xmlNewDocNode(docp, ((void *)0), (&this_ptr), value)", "node = xmlNewDocNode(docp, ((void *)0), (&value), value)", "node = xmlNewDocNode(docp, ((void *)0), (&value_len), value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (&docp))", "node = xmlNewDocNode(docp, ((void *)0), name, (&ht))", "node = xmlNewDocNode(docp, ((void *)0), name, (&id))", "node = xmlNewDocNode(docp, ((void *)0), name, (&intern))", "node = xmlNewDocNode(docp, ((void *)0), name, (&name))", "node = xmlNewDocNode(docp, ((void *)0), name, (&name_len))", "node = xmlNewDocNode(docp, ((void *)0), name, (&node))", "node = xmlNewDocNode(docp, ((void *)0), name, (&ret))", "node = xmlNewDocNode(docp, ((void *)0), name, (&return_value))", "node = xmlNewDocNode(docp, ((void *)0), name, (&return_value_ptr))", "node = xmlNewDocNode(docp, ((void *)0), name, (&return_value_used))", "node = xmlNewDocNode(docp, ((void *)0), name, (&rv))", "node = xmlNewDocNode(docp, ((void *)0), name, (&this_ptr))", "node = xmlNewDocNode(docp, ((void *)0), name, (&value))", "node = xmlNewDocNode(docp, ((void *)0), name, (&value_len))", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "node = xmlNewDocNode(docp, ((void *)0), name, value)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.75930350889544, -6.8889387788954437, -7.5652613388954437, -7.4809875388954428, -8.89265249839544, -8.3377454183954427, -8.878028857895444, -8.5801357888954435, -8.6963797748954441, -8.51442262889544, -9.2723107288954427, -7.8980607988954432, -7.8980607988954432, -9.2950150688954434]
								}, {
									"case":	2,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	3,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	4,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	5,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	6,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	7,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	8,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	9,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	10,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	11,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	12,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	13,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	14,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	15,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	16,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	17,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	18,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	19,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	20,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	21,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	22,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	23,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	24,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	25,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	26,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	27,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	28,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	29,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	30,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	31,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	32,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	33,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	34,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	35,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	36,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	37,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	38,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	39,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	40,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	41,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	42,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	43,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	44,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	45,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	46,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	47,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	48,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	49,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	50,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	51,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	52,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	53,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	54,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	55,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	56,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	57,
									"scores":	[-6.2959424688954435]
								}, {
									"case":	58,
									"scores":	[-6.2959424688954435]
								}]
						}]
				}, {
					"line":	921,
					"switches":	[{
							"switch":	8,
							"types":	[[], [], [], [], [167], [], [], [], [], [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [], [], [], [], [], []],
							"begin_line":	922,
							"begin_column":	0,
							"end_line":	922,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (name_len)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(name)++", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((name))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocNode(docp, ((void *)0), name, value)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L922\", 14, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(rv), sizeof (rv), &(intern), sizeof (intern), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.275739761577924]
								}, {
									"case":	2,
									"scores":	[-6.275739761577924]
								}, {
									"case":	3,
									"scores":	[-6.275739761577924]
								}, {
									"case":	4,
									"scores":	[-6.275739761577924]
								}, {
									"case":	5,
									"scores":	[-6.275739761577924]
								}, {
									"case":	6,
									"scores":	[-6.275739761577924]
								}, {
									"case":	7,
									"scores":	[-6.275739761577924]
								}, {
									"case":	8,
									"scores":	[-6.275739761577924]
								}, {
									"case":	9,
									"scores":	[-6.275739761577924]
								}, {
									"case":	10,
									"scores":	[-6.275739761577924]
								}, {
									"case":	11,
									"scores":	[-6.275739761577924]
								}, {
									"case":	12,
									"scores":	[-6.275739761577924]
								}, {
									"case":	13,
									"scores":	[-6.275739761577924]
								}, {
									"case":	14,
									"scores":	[-6.275739761577924]
								}, {
									"case":	15,
									"scores":	[-6.275739761577924]
								}, {
									"case":	16,
									"scores":	[-6.275739761577924]
								}, {
									"case":	17,
									"scores":	[-6.275739761577924]
								}, {
									"case":	18,
									"scores":	[-6.275739761577924]
								}, {
									"case":	19,
									"scores":	[-6.275739761577924]
								}, {
									"case":	20,
									"scores":	[-6.275739761577924]
								}, {
									"case":	21,
									"scores":	[-6.275739761577924]
								}, {
									"case":	22,
									"scores":	[-6.275739761577924]
								}, {
									"case":	23,
									"scores":	[-6.275739761577924]
								}, {
									"case":	24,
									"scores":	[-6.275739761577924]
								}, {
									"case":	25,
									"scores":	[-6.275739761577924]
								}, {
									"case":	26,
									"scores":	[-6.275739761577924]
								}, {
									"case":	27,
									"scores":	[-6.275739761577924]
								}, {
									"case":	28,
									"scores":	[-6.275739761577924]
								}, {
									"case":	29,
									"scores":	[-6.275739761577924]
								}, {
									"case":	30,
									"scores":	[-6.275739761577924]
								}, {
									"case":	31,
									"scores":	[-6.275739761577924]
								}, {
									"case":	32,
									"scores":	[-6.275739761577924]
								}, {
									"case":	33,
									"scores":	[-6.275739761577924]
								}, {
									"case":	34,
									"scores":	[-6.275739761577924]
								}, {
									"case":	35,
									"scores":	[-6.275739761577924]
								}, {
									"case":	36,
									"scores":	[-6.275739761577924]
								}, {
									"case":	37,
									"scores":	[-6.275739761577924]
								}, {
									"case":	38,
									"scores":	[-6.275739761577924]
								}, {
									"case":	39,
									"scores":	[-6.275739761577924]
								}, {
									"case":	40,
									"scores":	[-6.275739761577924]
								}, {
									"case":	41,
									"scores":	[-6.275739761577924]
								}, {
									"case":	42,
									"scores":	[-6.275739761577924]
								}, {
									"case":	43,
									"scores":	[-6.275739761577924]
								}, {
									"case":	44,
									"scores":	[-6.275739761577924]
								}, {
									"case":	45,
									"scores":	[-6.275739761577924]
								}, {
									"case":	46,
									"scores":	[-6.275739761577924]
								}, {
									"case":	47,
									"scores":	[-6.275739761577924]
								}, {
									"case":	48,
									"scores":	[-6.275739761577924]
								}, {
									"case":	49,
									"scores":	[-6.275739761577924]
								}, {
									"case":	50,
									"scores":	[-6.275739761577924]
								}, {
									"case":	51,
									"scores":	[-6.275739761577924]
								}, {
									"case":	52,
									"scores":	[-6.275739761577924]
								}, {
									"case":	53,
									"scores":	[-6.275739761577924]
								}, {
									"case":	54,
									"scores":	[-6.275739761577924]
								}, {
									"case":	55,
									"scores":	[-6.275739761577924]
								}, {
									"case":	56,
									"scores":	[-6.275739761577924]
								}, {
									"case":	57,
									"scores":	[-6.275739761577924]
								}, {
									"case":	58,
									"scores":	[-6.275739761577924]
								}, {
									"case":	59,
									"scores":	[-6.275739761577924]
								}, {
									"case":	60,
									"scores":	[-6.275739761577924]
								}, {
									"case":	61,
									"scores":	[-6.275739761577924]
								}, {
									"case":	62,
									"scores":	[-6.275739761577924]
								}, {
									"case":	63,
									"scores":	[-6.275739761577924]
								}, {
									"case":	64,
									"scores":	[-6.275739761577924]
								}, {
									"case":	65,
									"scores":	[-6.275739761577924]
								}, {
									"case":	66,
									"scores":	[-6.275739761577924]
								}, {
									"case":	67,
									"scores":	[-6.275739761577924]
								}, {
									"case":	68,
									"scores":	[-6.275739761577924]
								}, {
									"case":	69,
									"scores":	[-6.275739761577924]
								}, {
									"case":	70,
									"scores":	[-6.275739761577924]
								}, {
									"case":	71,
									"scores":	[-6.275739761577924]
								}, {
									"case":	72,
									"scores":	[-6.275739761577924]
								}, {
									"case":	73,
									"scores":	[-6.275739761577924]
								}, {
									"case":	74,
									"scores":	[-6.275739761577924]
								}, {
									"case":	75,
									"scores":	[-6.275739761577924]
								}, {
									"case":	76,
									"scores":	[-6.275739761577924]
								}, {
									"case":	77,
									"scores":	[-6.275739761577924]
								}, {
									"case":	78,
									"scores":	[-6.275739761577924]
								}, {
									"case":	79,
									"scores":	[-6.275739761577924]
								}, {
									"case":	80,
									"scores":	[-6.275739761577924]
								}, {
									"case":	81,
									"scores":	[-6.275739761577924]
								}, {
									"case":	82,
									"scores":	[-6.275739761577924]
								}, {
									"case":	83,
									"scores":	[-6.275739761577924]
								}, {
									"case":	84,
									"scores":	[-6.275739761577924]
								}, {
									"case":	85,
									"scores":	[-6.275739761577924]
								}, {
									"case":	86,
									"scores":	[-6.275739761577924]
								}, {
									"case":	87,
									"scores":	[-6.275739761577924]
								}, {
									"case":	88,
									"scores":	[-6.275739761577924]
								}, {
									"case":	89,
									"scores":	[-6.275739761577924]
								}, {
									"case":	90,
									"scores":	[-6.275739761577924]
								}, {
									"case":	91,
									"scores":	[-6.275739761577924]
								}, {
									"case":	92,
									"scores":	[-6.275739761577924]
								}, {
									"case":	93,
									"scores":	[-6.275739761577924]
								}, {
									"case":	94,
									"scores":	[-6.275739761577924]
								}, {
									"case":	95,
									"scores":	[-6.275739761577924]
								}, {
									"case":	96,
									"scores":	[-6.275739761577924]
								}, {
									"case":	97,
									"scores":	[-6.275739761577924]
								}, {
									"case":	98,
									"scores":	[-6.275739761577924]
								}, {
									"case":	99,
									"scores":	[-6.275739761577924]
								}, {
									"case":	100,
									"scores":	[-6.275739761577924]
								}, {
									"case":	101,
									"scores":	[-6.275739761577924]
								}, {
									"case":	102,
									"scores":	[-6.275739761577924]
								}, {
									"case":	103,
									"scores":	[-6.275739761577924]
								}, {
									"case":	104,
									"scores":	[-6.275739761577924]
								}, {
									"case":	105,
									"scores":	[-6.275739761577924]
								}, {
									"case":	106,
									"scores":	[-6.275739761577924]
								}, {
									"case":	107,
									"scores":	[-6.275739761577924]
								}, {
									"case":	108,
									"scores":	[-6.275739761577924]
								}, {
									"case":	109,
									"scores":	[-6.275739761577924]
								}, {
									"case":	110,
									"scores":	[-6.275739761577924]
								}, {
									"case":	111,
									"scores":	[-6.275739761577924]
								}, {
									"case":	112,
									"scores":	[-6.275739761577924]
								}, {
									"case":	113,
									"scores":	[-6.275739761577924]
								}, {
									"case":	114,
									"scores":	[-6.275739761577924]
								}, {
									"case":	115,
									"scores":	[-6.275739761577924]
								}, {
									"case":	116,
									"scores":	[-6.275739761577924]
								}, {
									"case":	117,
									"scores":	[-6.275739761577924]
								}, {
									"case":	118,
									"scores":	[-6.275739761577924]
								}, {
									"case":	119,
									"scores":	[-6.275739761577924]
								}, {
									"case":	120,
									"scores":	[-6.275739761577924]
								}, {
									"case":	121,
									"scores":	[-6.275739761577924]
								}, {
									"case":	122,
									"scores":	[-6.275739761577924]
								}, {
									"case":	123,
									"scores":	[-6.275739761577924]
								}, {
									"case":	124,
									"scores":	[-6.275739761577924]
								}, {
									"case":	125,
									"scores":	[-6.275739761577924]
								}, {
									"case":	126,
									"scores":	[-6.275739761577924]
								}, {
									"case":	127,
									"scores":	[-6.275739761577924]
								}, {
									"case":	128,
									"scores":	[-6.275739761577924]
								}, {
									"case":	129,
									"scores":	[-6.275739761577924]
								}, {
									"case":	130,
									"scores":	[-6.275739761577924]
								}, {
									"case":	131,
									"scores":	[-6.275739761577924]
								}, {
									"case":	132,
									"scores":	[-6.275739761577924]
								}, {
									"case":	133,
									"scores":	[-6.275739761577924]
								}, {
									"case":	134,
									"scores":	[-6.275739761577924]
								}, {
									"case":	135,
									"scores":	[-6.275739761577924]
								}, {
									"case":	136,
									"scores":	[-6.275739761577924]
								}, {
									"case":	137,
									"scores":	[-6.275739761577924]
								}, {
									"case":	138,
									"scores":	[-6.275739761577924]
								}, {
									"case":	139,
									"scores":	[-6.275739761577924]
								}, {
									"case":	140,
									"scores":	[-6.275739761577924]
								}, {
									"case":	141,
									"scores":	[-6.275739761577924]
								}, {
									"case":	142,
									"scores":	[-6.275739761577924]
								}, {
									"case":	143,
									"scores":	[-6.275739761577924]
								}, {
									"case":	144,
									"scores":	[-6.275739761577924]
								}, {
									"case":	145,
									"scores":	[-6.275739761577924]
								}, {
									"case":	146,
									"scores":	[-6.275739761577924]
								}, {
									"case":	147,
									"scores":	[-6.275739761577924]
								}, {
									"case":	148,
									"scores":	[-6.275739761577924]
								}, {
									"case":	149,
									"scores":	[-6.275739761577924]
								}, {
									"case":	150,
									"scores":	[-6.275739761577924]
								}, {
									"case":	151,
									"scores":	[-6.275739761577924]
								}, {
									"case":	152,
									"scores":	[-6.275739761577924]
								}, {
									"case":	153,
									"scores":	[-6.275739761577924]
								}, {
									"case":	154,
									"scores":	[-6.275739761577924]
								}, {
									"case":	155,
									"scores":	[-6.275739761577924]
								}, {
									"case":	156,
									"scores":	[-6.275739761577924]
								}, {
									"case":	157,
									"scores":	[-6.275739761577924]
								}, {
									"case":	158,
									"scores":	[-6.275739761577924]
								}, {
									"case":	159,
									"scores":	[-6.275739761577924]
								}, {
									"case":	160,
									"scores":	[-6.275739761577924]
								}, {
									"case":	161,
									"scores":	[-6.275739761577924]
								}, {
									"case":	162,
									"scores":	[-6.275739761577924]
								}, {
									"case":	163,
									"scores":	[-6.275739761577924]
								}, {
									"case":	164,
									"scores":	[-6.275739761577924]
								}, {
									"case":	165,
									"scores":	[-6.275739761577924]
								}, {
									"case":	166,
									"scores":	[-6.275739761577924]
								}, {
									"case":	167,
									"scores":	[-8.4636153443779243, -10.305547224377925, -10.471839971377925, -10.436690174577924, -10.436690174577924, -10.780085344377923, -10.819376764377925, -10.396529267577924, -10.665801171377925, -10.456862657577924, -10.702901571377925, -9.9188272575779237, -9.9188272575779237, -10.924873379377924]
								}]
						}, {
							"switch":	9,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	922,
							"begin_column":	2,
							"end_line":	924,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L922\", 14, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(rv), sizeof (rv), &(intern), sizeof (intern), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!node) || __is_neg(\"\", \"L922\", 14, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(rv), sizeof (rv), &(intern), sizeof (intern), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!node) && !__is_neg(\"\", \"L922\", 14, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(rv), sizeof (rv), &(intern), sizeof (intern), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.2918567574281461, -4.4668844174281466, -5.1848966944281454, -4.8962685944281459, -4.8962685944281459, -4.5200529984281461, -4.4985949079281466, -4.1183928184281458, -5.4664768484281456, -5.0029395484281469, -5.7608276484281458, -4.3865777184281463, -4.3865777184281463, -5.7835319884281464]
								}, {
									"case":	2,
									"scores":	[-3.5870157844281456, -4.7620434444281461, -5.4800557214281458, -5.1914276214281463, -5.1914276214281463, -4.8152120254281456, -4.7937539349281462, -4.4135518454281462, -5.761635875428146, -5.2980985754281456, -6.0559866754281462, -4.6817367454281458, -4.6817367454281458, -6.0786910154281459]
								}, {
									"case":	3,
									"scores":	[-3.5870157844281456, -4.7620434444281461, -5.4800557214281458, -5.1914276214281463, -5.1914276214281463, -4.8152120254281456, -4.7937539349281462, -4.4135518454281462, -5.761635875428146, -5.2980985754281456, -6.0559866754281462, -4.6817367454281458, -4.6817367454281458, -6.0786910154281459]
								}]
						}, {
							"switch":	10,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	922,
							"begin_column":	2,
							"end_line":	924,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L922\", 14, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(rv), sizeof (rv), &(intern), sizeof (intern), &(ret), sizeof (ret), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    if (!node) {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4612711305779245, -8.6362987905779249, -9.3543110675779229, -9.0656829675779242, -9.0656829675779242, -8.6894673715779245, -8.668009281077925, -8.28780719157792, -9.6358912215779231, -9.17235392157792, -9.9302420215779232, -8.5559920915779237, -8.5559920915779237, -9.9529463615779239]
								}]
						}]
				}, {
					"line":	925,
					"switches":	[{
							"switch":	11,
							"types":	[[], [], [], [], [167], [], [], [], [], [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [], [], [], [], [], []],
							"begin_line":	926,
							"begin_column":	0,
							"end_line":	926,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (name_len)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(name)++", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocNode((docp), ((void *)0), name, value)", "node = xmlNewDocNode(docp, ((void *)0), (name), value)", "node = xmlNewDocNode(docp, ((void *)0), (value), value)", "node = xmlNewDocNode(docp, ((void *)0), name, (name))", "node = xmlNewDocNode(docp, ((void *)0), name, (value))", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (name))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((name))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocNode(docp, ((void *)0), name, value)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	2,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	3,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	4,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	5,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	6,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	7,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	8,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	9,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	10,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	11,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	12,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	13,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	14,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	15,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	16,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	17,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	18,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	19,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	20,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	21,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	22,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	23,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	24,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	25,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	26,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	27,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	28,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	29,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	30,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	31,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	32,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	33,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	34,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	35,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	36,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	37,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	38,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	39,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	40,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	41,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	42,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	43,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	44,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	45,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	46,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	47,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	48,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	49,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	50,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	51,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	52,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	53,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	54,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	55,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	56,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	57,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	58,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	59,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	60,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	61,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	62,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	63,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	64,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	65,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	66,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	67,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	68,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	69,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	70,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	71,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	72,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	73,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	74,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	75,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	76,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	77,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	78,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	79,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	80,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	81,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	82,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	83,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	84,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	85,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	86,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	87,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	88,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	89,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	90,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	91,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	92,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	93,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	94,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	95,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	96,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	97,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	98,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	99,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	100,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	101,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	102,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	103,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	104,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	105,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	106,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	107,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	108,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	109,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	110,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	111,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	112,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	113,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	114,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	115,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	116,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	117,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	118,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	119,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	120,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	121,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	122,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	123,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	124,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	125,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	126,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	127,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	128,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	129,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	130,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	131,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	132,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	133,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	134,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	135,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	136,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	137,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	138,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	139,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	140,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	141,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	142,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	143,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	144,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	145,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	146,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	147,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	148,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	149,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	150,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	151,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	152,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	153,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	154,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	155,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	156,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	157,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	158,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	159,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	160,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	161,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	162,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	163,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	164,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	165,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	166,
									"scores":	[-6.2555370542604045]
								}, {
									"case":	167,
									"scores":	[-8.1109228950604049, -8.9002637360604, -6.2689910150604042, -8.6247524350604046, -8.9271348802604038, -10.451637264060405, -10.416487467260405, -10.416487467260405, -10.645598464060406, -10.436659950260404, -10.682698864060406, -9.8986245502604042, -9.8986245502604042, -10.904670672060405]
								}]
						}, {
							"switch":	12,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	926,
							"begin_column":	2,
							"end_line":	926,
							"end_column":	36,
							"patch_codes":	["if (__is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) || __is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) && !__is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.5018630554281458, -5.5693637664281459, -4.3268353954281462, -5.5335735459281459, -4.7077085554281464, -6.1342763914281448, -5.8456482914281462, -5.8456482914281462, -6.4158565454281451, -5.9523192454281464, -6.7102073454281452, -5.3359574154281457, -5.3359574154281457, -6.7329116854281459]
								}, {
									"case":	2,
									"scores":	[-4.0374321274281453, -4.1049328384281454, -2.8624044674281457, -4.0691426179281462, -3.2432776274281454, -4.6698454634281443, -4.3812173634281439, -4.3812173634281439, -4.9514256174281455, -4.4878883174281459, -5.2457764174281456, -3.8715264874281456, -3.8715264874281456, -5.2684807574281454]
								}, {
									"case":	3,
									"scores":	[-4.0374321274281453, -4.1049328384281454, -2.8624044674281457, -4.0691426179281462, -3.2432776274281454, -4.6698454634281443, -4.3812173634281439, -4.3812173634281439, -4.9514256174281455, -4.4878883174281459, -5.2457764174281456, -3.8715264874281456, -3.8715264874281456, -5.2684807574281454]
								}]
						}, {
							"switch":	13,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	926,
							"begin_column":	2,
							"end_line":	926,
							"end_column":	36,
							"patch_codes":	["if (!__is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    if (((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L926\", 14, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(intern), sizeof (intern), &(ret), sizeof (ret), &(docp), sizeof (docp), &(name), sizeof (name), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(name_len), sizeof (name_len), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)) && (((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern)))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.6955016342604043, -8.7630023452604053, -7.5204739742604048, -8.7272121247604044, -7.9013471342604049, -9.3279149702604034, -9.0392868702604048, -9.0392868702604048, -9.6094951242604036, -9.1459578242604032, -9.9038459242604038, -8.5295959942604043, -8.5295959942604043, -9.9265502642604044]
								}, {
									"case":	2,
									"scores":	[-7.8944739762604037, -7.9619746872604029, -6.719446316260405, -7.9261844667604047, -7.1003194762604034, -8.5268873122604045, -8.2382592122604059, -8.2382592122604059, -8.8084674662604048, -8.3449301662604043, -9.1028182662604049, -7.7285683362604036, -7.7285683362604036, -9.1255226062604038]
								}]
						}]
				}, {
					"line":	962,
					"switches":	[]
				}, {
					"line":	963,
					"switches":	[]
				}, {
					"line":	964,
					"switches":	[]
				}, {
					"line":	965,
					"switches":	[]
				}, {
					"line":	966,
					"switches":	[]
				}, {
					"line":	967,
					"switches":	[]
				}, {
					"line":	969,
					"switches":	[{
							"switch":	14,
							"types":	[[], [], [], [], [139], [], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	970,
							"begin_column":	0,
							"end_line":	970,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocText((docp), (xmlChar *)value)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocText(docp, (xmlChar *)value)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-8.7058629918297044, -8.951901905629704, -9.3390664576297038, -9.2671788908297046, -9.4359660078297036, -8.9162885396297042, -10.1302788746297, -9.8843936476297038, -10.882946251529706, -9.7387109946297041, -9.7701094746297041, -9.5240705608297027, -10.080631560829703, -10.2915206778297, -9.5796965608297029, -10.326670474629704, -10.080631560829703, -10.080631560829703, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.080631560829703, -10.080631560829703, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.2915206778297, -10.080631560829703, -10.080631560829703, -10.080631560829703, -10.080631560829703, -10.080631560829703, -10.080631560829703, -10.2915206778297, -10.080631560829703, -10.2915206778297, -10.080631560829703, -10.2915206778297, -10.2915206778297]
								}]
						}, {
							"switch":	15,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	970,
							"begin_column":	2,
							"end_line":	972,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) || __is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if (dprintf((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) {\n    return;\n}\n", "if (zend_get_parameters_ex((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) {\n    return;\n}\n", "if (zend_parse_parameters((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) && !__is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0981291754281459, -4.8560172754281457, -4.1419106444281466, -3.7398517454281461, -4.5770756354281463, -4.564923915428146, -4.4425459354281465, -5.042113225428146, -5.2017497643281452, -5.1419951954281462, -5.275101775428146, -4.5172136754281453, -4.7282607854281462, -5.1975207854281456, -4.4062497554281457, -5.4861488854281459, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456]
								}, {
									"case":	2,
									"scores":	[-3.8202575923281463, -4.5781456923281461, -3.8640390613281452, -3.4619801623281461, -4.2992040523281458, -4.2870523323281464, -4.1646743523281451, -4.7642416423281464, -4.9238781812281465, -4.8641236123281466, -4.9972301923281464, -4.2393420923281457, -4.4503892023281457, -4.919649202328146, -4.1283781723281461, -5.2082773023281463, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.4503892023281457, -4.919649202328146, -4.4503892023281457, -4.919649202328146, -4.919649202328146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.8202575923281463, -4.5781456923281461, -3.8640390613281452, -3.4619801623281461, -4.2992040523281458, -4.2870523323281464, -4.1646743523281451, -4.7642416423281464, -4.9238781812281465, -4.8641236123281466, -4.9972301923281464, -4.2393420923281457, -4.4503892023281457, -4.919649202328146, -4.1283781723281461, -5.2082773023281463, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.919649202328146, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.4503892023281457, -4.919649202328146, -4.4503892023281457, -4.919649202328146, -4.4503892023281457, -4.919649202328146, -4.919649202328146]
								}]
						}, {
							"switch":	16,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	970,
							"begin_column":	2,
							"end_line":	972,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    if (zend_parse_method_parameters((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1) {\n        return;\n    }\n", "if (!__is_neg(\"\", \"L970\", 47, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(value_len), sizeof (value_len), &(value), sizeof (value), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(node), sizeof (node), &(rv), sizeof (rv), &(ret), sizeof (ret), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)) && (zend_parse_method_parameters((ht), (this_ptr), \"Os\", &id, dom_document_class_entry, &value, &value_len) == -1)) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.0485064508297031, -7.8063945508297028, -7.0922879198297029, -6.6902290208297028, -7.5274529108297035, -7.5153011908297032, -7.3929232108297036, -7.9924905008297031, -8.1521270397297, -8.0923724708297033, -8.2254790508297031, -7.4675909508297034, -7.6786380608297033, -8.1478980608297036, -7.3566270308297037, -8.436526160829704, -7.6786380608297033, -7.6786380608297033, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -7.6786380608297033, -7.6786380608297033, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -8.1478980608297036, -7.6786380608297033, -7.6786380608297033, -7.6786380608297033, -7.6786380608297033, -7.6786380608297033, -7.6786380608297033, -8.1478980608297036, -7.6786380608297033, -8.1478980608297036, -7.6786380608297033, -8.1478980608297036, -8.1478980608297036]
								}, {
									"case":	2,
									"scores":	[-6.822959467729703, -7.5808475677297036, -6.8667409367297036, -6.4646820377297036, -7.3019059277297034, -7.2897542077297039, -7.1673762277297035, -7.766943517729703, -7.9265800566297031, -7.8668254877297032, -7.999932067729703, -7.2420439677297033, -7.4530910777297033, -7.9223510777297026, -7.1310800477297036, -8.210979177729703, -7.4530910777297033, -7.4530910777297033, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.4530910777297033, -7.4530910777297033, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.9223510777297026, -7.4530910777297033, -7.4530910777297033, -7.4530910777297033, -7.4530910777297033, -7.4530910777297033, -7.4530910777297033, -7.9223510777297026, -7.4530910777297033, -7.9223510777297026, -7.4530910777297033, -7.9223510777297026, -7.9223510777297026]
								}]
						}]
				}, {
					"line":	975,
					"switches":	[{
							"switch":	17,
							"types":	[[], [], [], [], [139], [], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	976,
							"begin_column":	0,
							"end_line":	976,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocText((docp), (xmlChar *)value)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocText(docp, (xmlChar *)value)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L976\", 12, &(node), sizeof (node), &(docp), sizeof (docp), &(value), sizeof (value), &(return_value), sizeof (return_value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.427226054242106]
								}, {
									"case":	2,
									"scores":	[-5.427226054242106]
								}, {
									"case":	3,
									"scores":	[-5.427226054242106]
								}, {
									"case":	4,
									"scores":	[-5.427226054242106]
								}, {
									"case":	5,
									"scores":	[-5.427226054242106]
								}, {
									"case":	6,
									"scores":	[-5.427226054242106]
								}, {
									"case":	7,
									"scores":	[-5.427226054242106]
								}, {
									"case":	8,
									"scores":	[-5.427226054242106]
								}, {
									"case":	9,
									"scores":	[-5.427226054242106]
								}, {
									"case":	10,
									"scores":	[-5.427226054242106]
								}, {
									"case":	11,
									"scores":	[-5.427226054242106]
								}, {
									"case":	12,
									"scores":	[-5.427226054242106]
								}, {
									"case":	13,
									"scores":	[-5.427226054242106]
								}, {
									"case":	14,
									"scores":	[-5.427226054242106]
								}, {
									"case":	15,
									"scores":	[-5.427226054242106]
								}, {
									"case":	16,
									"scores":	[-5.427226054242106]
								}, {
									"case":	17,
									"scores":	[-5.427226054242106]
								}, {
									"case":	18,
									"scores":	[-5.427226054242106]
								}, {
									"case":	19,
									"scores":	[-5.427226054242106]
								}, {
									"case":	20,
									"scores":	[-5.427226054242106]
								}, {
									"case":	21,
									"scores":	[-5.427226054242106]
								}, {
									"case":	22,
									"scores":	[-5.427226054242106]
								}, {
									"case":	23,
									"scores":	[-5.427226054242106]
								}, {
									"case":	24,
									"scores":	[-5.427226054242106]
								}, {
									"case":	25,
									"scores":	[-5.427226054242106]
								}, {
									"case":	26,
									"scores":	[-5.427226054242106]
								}, {
									"case":	27,
									"scores":	[-5.427226054242106]
								}, {
									"case":	28,
									"scores":	[-5.427226054242106]
								}, {
									"case":	29,
									"scores":	[-5.427226054242106]
								}, {
									"case":	30,
									"scores":	[-5.427226054242106]
								}, {
									"case":	31,
									"scores":	[-5.427226054242106]
								}, {
									"case":	32,
									"scores":	[-5.427226054242106]
								}, {
									"case":	33,
									"scores":	[-5.427226054242106]
								}, {
									"case":	34,
									"scores":	[-5.427226054242106]
								}, {
									"case":	35,
									"scores":	[-5.427226054242106]
								}, {
									"case":	36,
									"scores":	[-5.427226054242106]
								}, {
									"case":	37,
									"scores":	[-5.427226054242106]
								}, {
									"case":	38,
									"scores":	[-5.427226054242106]
								}, {
									"case":	39,
									"scores":	[-5.427226054242106]
								}, {
									"case":	40,
									"scores":	[-5.427226054242106]
								}, {
									"case":	41,
									"scores":	[-5.427226054242106]
								}, {
									"case":	42,
									"scores":	[-5.427226054242106]
								}, {
									"case":	43,
									"scores":	[-5.427226054242106]
								}, {
									"case":	44,
									"scores":	[-5.427226054242106]
								}, {
									"case":	45,
									"scores":	[-5.427226054242106]
								}, {
									"case":	46,
									"scores":	[-5.427226054242106]
								}, {
									"case":	47,
									"scores":	[-5.427226054242106]
								}, {
									"case":	48,
									"scores":	[-5.427226054242106]
								}, {
									"case":	49,
									"scores":	[-5.427226054242106]
								}, {
									"case":	50,
									"scores":	[-5.427226054242106]
								}, {
									"case":	51,
									"scores":	[-5.427226054242106]
								}, {
									"case":	52,
									"scores":	[-5.427226054242106]
								}, {
									"case":	53,
									"scores":	[-5.427226054242106]
								}, {
									"case":	54,
									"scores":	[-5.427226054242106]
								}, {
									"case":	55,
									"scores":	[-5.427226054242106]
								}, {
									"case":	56,
									"scores":	[-5.427226054242106]
								}, {
									"case":	57,
									"scores":	[-5.427226054242106]
								}, {
									"case":	58,
									"scores":	[-5.427226054242106]
								}, {
									"case":	59,
									"scores":	[-5.427226054242106]
								}, {
									"case":	60,
									"scores":	[-5.427226054242106]
								}, {
									"case":	61,
									"scores":	[-5.427226054242106]
								}, {
									"case":	62,
									"scores":	[-5.427226054242106]
								}, {
									"case":	63,
									"scores":	[-5.427226054242106]
								}, {
									"case":	64,
									"scores":	[-5.427226054242106]
								}, {
									"case":	65,
									"scores":	[-5.427226054242106]
								}, {
									"case":	66,
									"scores":	[-5.427226054242106]
								}, {
									"case":	67,
									"scores":	[-5.427226054242106]
								}, {
									"case":	68,
									"scores":	[-5.427226054242106]
								}, {
									"case":	69,
									"scores":	[-5.427226054242106]
								}, {
									"case":	70,
									"scores":	[-5.427226054242106]
								}, {
									"case":	71,
									"scores":	[-5.427226054242106]
								}, {
									"case":	72,
									"scores":	[-5.427226054242106]
								}, {
									"case":	73,
									"scores":	[-5.427226054242106]
								}, {
									"case":	74,
									"scores":	[-5.427226054242106]
								}, {
									"case":	75,
									"scores":	[-5.427226054242106]
								}, {
									"case":	76,
									"scores":	[-5.427226054242106]
								}, {
									"case":	77,
									"scores":	[-5.427226054242106]
								}, {
									"case":	78,
									"scores":	[-5.427226054242106]
								}, {
									"case":	79,
									"scores":	[-5.427226054242106]
								}, {
									"case":	80,
									"scores":	[-5.427226054242106]
								}, {
									"case":	81,
									"scores":	[-5.427226054242106]
								}, {
									"case":	82,
									"scores":	[-5.427226054242106]
								}, {
									"case":	83,
									"scores":	[-5.427226054242106]
								}, {
									"case":	84,
									"scores":	[-5.427226054242106]
								}, {
									"case":	85,
									"scores":	[-5.427226054242106]
								}, {
									"case":	86,
									"scores":	[-5.427226054242106]
								}, {
									"case":	87,
									"scores":	[-5.427226054242106]
								}, {
									"case":	88,
									"scores":	[-5.427226054242106]
								}, {
									"case":	89,
									"scores":	[-5.427226054242106]
								}, {
									"case":	90,
									"scores":	[-5.427226054242106]
								}, {
									"case":	91,
									"scores":	[-5.427226054242106]
								}, {
									"case":	92,
									"scores":	[-5.427226054242106]
								}, {
									"case":	93,
									"scores":	[-5.427226054242106]
								}, {
									"case":	94,
									"scores":	[-5.427226054242106]
								}, {
									"case":	95,
									"scores":	[-5.427226054242106]
								}, {
									"case":	96,
									"scores":	[-5.427226054242106]
								}, {
									"case":	97,
									"scores":	[-5.427226054242106]
								}, {
									"case":	98,
									"scores":	[-5.427226054242106]
								}, {
									"case":	99,
									"scores":	[-5.427226054242106]
								}, {
									"case":	100,
									"scores":	[-5.427226054242106]
								}, {
									"case":	101,
									"scores":	[-5.427226054242106]
								}, {
									"case":	102,
									"scores":	[-5.427226054242106]
								}, {
									"case":	103,
									"scores":	[-5.427226054242106]
								}, {
									"case":	104,
									"scores":	[-5.427226054242106]
								}, {
									"case":	105,
									"scores":	[-5.427226054242106]
								}, {
									"case":	106,
									"scores":	[-5.427226054242106]
								}, {
									"case":	107,
									"scores":	[-5.427226054242106]
								}, {
									"case":	108,
									"scores":	[-5.427226054242106]
								}, {
									"case":	109,
									"scores":	[-5.427226054242106]
								}, {
									"case":	110,
									"scores":	[-5.427226054242106]
								}, {
									"case":	111,
									"scores":	[-5.427226054242106]
								}, {
									"case":	112,
									"scores":	[-5.427226054242106]
								}, {
									"case":	113,
									"scores":	[-5.427226054242106]
								}, {
									"case":	114,
									"scores":	[-5.427226054242106]
								}, {
									"case":	115,
									"scores":	[-5.427226054242106]
								}, {
									"case":	116,
									"scores":	[-5.427226054242106]
								}, {
									"case":	117,
									"scores":	[-5.427226054242106]
								}, {
									"case":	118,
									"scores":	[-5.427226054242106]
								}, {
									"case":	119,
									"scores":	[-5.427226054242106]
								}, {
									"case":	120,
									"scores":	[-5.427226054242106]
								}, {
									"case":	121,
									"scores":	[-5.427226054242106]
								}, {
									"case":	122,
									"scores":	[-5.427226054242106]
								}, {
									"case":	123,
									"scores":	[-5.427226054242106]
								}, {
									"case":	124,
									"scores":	[-5.427226054242106]
								}, {
									"case":	125,
									"scores":	[-5.427226054242106]
								}, {
									"case":	126,
									"scores":	[-5.427226054242106]
								}, {
									"case":	127,
									"scores":	[-5.427226054242106]
								}, {
									"case":	128,
									"scores":	[-5.427226054242106]
								}, {
									"case":	129,
									"scores":	[-5.427226054242106]
								}, {
									"case":	130,
									"scores":	[-5.427226054242106]
								}, {
									"case":	131,
									"scores":	[-5.427226054242106]
								}, {
									"case":	132,
									"scores":	[-5.427226054242106]
								}, {
									"case":	133,
									"scores":	[-5.427226054242106]
								}, {
									"case":	134,
									"scores":	[-5.427226054242106]
								}, {
									"case":	135,
									"scores":	[-5.427226054242106]
								}, {
									"case":	136,
									"scores":	[-5.427226054242106]
								}, {
									"case":	137,
									"scores":	[-5.427226054242106]
								}, {
									"case":	138,
									"scores":	[-5.427226054242106]
								}, {
									"case":	139,
									"scores":	[-8.5036635320421059, -4.8714001890421059, -7.0195318592421065, -8.98273181104211, -8.6966958380421051, -7.5967517510421061, -9.3622918110421054, -8.9787357342421057, -9.0591832042421068, -9.3052221180421064, -8.1593493642421056, -9.2696087520421067]
								}]
						}, {
							"switch":	18,
							"types":	[[], [], [1], [], [], [], [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [], [35, 36, 37, 38, 39, 40, 41, 42], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [], [], [34]],
							"begin_line":	976,
							"begin_column":	2,
							"end_line":	976,
							"end_column":	46,
							"patch_codes":	["if (!__is_neg(\"\", \"L976\", 12, &(node), sizeof (node), &(docp), sizeof (docp), &(value), sizeof (value), &(return_value), sizeof (return_value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    node = xmlNewDocText(docp, (xmlChar *)value);\n", "create_notation(docp, (xmlChar *)value, 0)", "xmlNewCDataBlock(docp, (xmlChar *)value, -1)", "xmlNewCDataBlock(docp, (xmlChar *)value, 0)", "xmlNewCDataBlock(docp, (xmlChar *)value, 1)", "xmlNewCDataBlock(docp, (xmlChar *)value, 2)", "xmlNewCDataBlock(docp, (xmlChar *)value, 3)", "xmlNewCDataBlock(docp, (xmlChar *)value, ht)", "xmlNewCDataBlock(docp, (xmlChar *)value, le_index_ptr)", "xmlNewCDataBlock(docp, (xmlChar *)value, ret)", "xmlNewCDataBlock(docp, (xmlChar *)value, return_value_used)", "xmlNewCDataBlock(docp, (xmlChar *)value, value_len)", "xmlNewDocPI(docp, (xmlChar *)value, 0)", "xmlNewDocTextLen(docp, (xmlChar *)value, -1)", "xmlNewDocTextLen(docp, (xmlChar *)value, 0)", "xmlNewDocTextLen(docp, (xmlChar *)value, 1)", "xmlNewDocTextLen(docp, (xmlChar *)value, 2)", "xmlNewDocTextLen(docp, (xmlChar *)value, 3)", "xmlNewDocTextLen(docp, (xmlChar *)value, ht)", "xmlNewDocTextLen(docp, (xmlChar *)value, le_index_ptr)", "xmlNewDocTextLen(docp, (xmlChar *)value, ret)", "xmlNewDocTextLen(docp, (xmlChar *)value, return_value_used)", "xmlNewDocTextLen(docp, (xmlChar *)value, value_len)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, -1)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, 0)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, 1)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, 2)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, 3)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, ht)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, le_index_ptr)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, ret)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, return_value_used)", "xmlStringLenGetNodeList(docp, (xmlChar *)value, value_len)", "{\n}\n", "node = xmlDocCopyNodeList(docp, (xmlChar *)value)", "node = xmlDocSetRootElement(docp, (xmlChar *)value)", "node = xmlNewCharRef(docp, (xmlChar *)value)", "node = xmlNewDocComment(docp, (xmlChar *)value)", "node = xmlNewNode(docp, (xmlChar *)value)", "node = xmlNewPI(docp, (xmlChar *)value)", "node = xmlNewReference(docp, (xmlChar *)value)", "node = xmlStringGetNodeList(docp, (xmlChar *)value)", "node = (node)", "node = xmlNewDocText((&docp), (xmlChar *)value)", "node = xmlNewDocText((&ht), (xmlChar *)value)", "node = xmlNewDocText((&id), (xmlChar *)value)", "node = xmlNewDocText((&intern), (xmlChar *)value)", "node = xmlNewDocText((&node), (xmlChar *)value)", "node = xmlNewDocText((&ret), (xmlChar *)value)", "node = xmlNewDocText((&return_value), (xmlChar *)value)", "node = xmlNewDocText((&return_value_ptr), (xmlChar *)value)", "node = xmlNewDocText((&return_value_used), (xmlChar *)value)", "node = xmlNewDocText((&rv), (xmlChar *)value)", "node = xmlNewDocText((&this_ptr), (xmlChar *)value)", "node = xmlNewDocText((&value), (xmlChar *)value)", "node = xmlNewDocText((&value_len), (xmlChar *)value)", "node = xmlNewDocText((docp), (xmlChar *)value)", "node = xmlNewDocText(docp, (xmlChar *)value)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.204384794242106, -6.3340200642421056, -6.8274283482421056, -8.3377337837421059, -7.8612144842421063, -7.7828267037421055, -8.323110143242106, -8.0252170742421054, -8.0484867602421062, -8.806374860242105, -7.1471693082421055, -8.5152815002421054]
								}, {
									"case":	2,
									"scores":	[-5.427226054242106]
								}, {
									"case":	3,
									"scores":	[-5.427226054242106]
								}, {
									"case":	4,
									"scores":	[-5.427226054242106]
								}, {
									"case":	5,
									"scores":	[-5.427226054242106]
								}, {
									"case":	6,
									"scores":	[-5.427226054242106]
								}, {
									"case":	7,
									"scores":	[-5.427226054242106]
								}, {
									"case":	8,
									"scores":	[-5.427226054242106]
								}, {
									"case":	9,
									"scores":	[-5.427226054242106]
								}, {
									"case":	10,
									"scores":	[-5.427226054242106]
								}, {
									"case":	11,
									"scores":	[-5.427226054242106]
								}, {
									"case":	12,
									"scores":	[-5.427226054242106]
								}, {
									"case":	13,
									"scores":	[-5.427226054242106]
								}, {
									"case":	14,
									"scores":	[-5.427226054242106]
								}, {
									"case":	15,
									"scores":	[-5.427226054242106]
								}, {
									"case":	16,
									"scores":	[-5.427226054242106]
								}, {
									"case":	17,
									"scores":	[-5.427226054242106]
								}, {
									"case":	18,
									"scores":	[-5.427226054242106]
								}, {
									"case":	19,
									"scores":	[-5.427226054242106]
								}, {
									"case":	20,
									"scores":	[-5.427226054242106]
								}, {
									"case":	21,
									"scores":	[-5.427226054242106]
								}, {
									"case":	22,
									"scores":	[-5.427226054242106]
								}, {
									"case":	23,
									"scores":	[-5.427226054242106]
								}, {
									"case":	24,
									"scores":	[-5.427226054242106]
								}, {
									"case":	25,
									"scores":	[-5.427226054242106]
								}, {
									"case":	26,
									"scores":	[-5.427226054242106]
								}, {
									"case":	27,
									"scores":	[-5.427226054242106]
								}, {
									"case":	28,
									"scores":	[-5.427226054242106]
								}, {
									"case":	29,
									"scores":	[-5.427226054242106]
								}, {
									"case":	30,
									"scores":	[-5.427226054242106]
								}, {
									"case":	31,
									"scores":	[-5.427226054242106]
								}, {
									"case":	32,
									"scores":	[-5.427226054242106]
								}, {
									"case":	33,
									"scores":	[-5.427226054242106]
								}, {
									"case":	34,
									"scores":	[-5.427226054242106]
								}, {
									"case":	35,
									"scores":	[-5.427226054242106]
								}, {
									"case":	36,
									"scores":	[-5.427226054242106]
								}, {
									"case":	37,
									"scores":	[-5.427226054242106]
								}, {
									"case":	38,
									"scores":	[-5.427226054242106]
								}, {
									"case":	39,
									"scores":	[-5.427226054242106]
								}, {
									"case":	40,
									"scores":	[-5.427226054242106]
								}, {
									"case":	41,
									"scores":	[-5.427226054242106]
								}, {
									"case":	42,
									"scores":	[-5.427226054242106]
								}, {
									"case":	43,
									"scores":	[-5.427226054242106]
								}, {
									"case":	44,
									"scores":	[-5.427226054242106]
								}, {
									"case":	45,
									"scores":	[-5.427226054242106]
								}, {
									"case":	46,
									"scores":	[-5.427226054242106]
								}, {
									"case":	47,
									"scores":	[-5.427226054242106]
								}, {
									"case":	48,
									"scores":	[-5.427226054242106]
								}, {
									"case":	49,
									"scores":	[-5.427226054242106]
								}, {
									"case":	50,
									"scores":	[-5.427226054242106]
								}, {
									"case":	51,
									"scores":	[-5.427226054242106]
								}, {
									"case":	52,
									"scores":	[-5.427226054242106]
								}, {
									"case":	53,
									"scores":	[-5.427226054242106]
								}, {
									"case":	54,
									"scores":	[-5.427226054242106]
								}, {
									"case":	55,
									"scores":	[-5.427226054242106]
								}, {
									"case":	56,
									"scores":	[-5.427226054242106]
								}, {
									"case":	57,
									"scores":	[-5.427226054242106]
								}, {
									"case":	58,
									"scores":	[-5.427226054242106]
								}]
						}]
				}, {
					"line":	976,
					"switches":	[{
							"switch":	19,
							"types":	[[], [], [], [], [139], [], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	977,
							"begin_column":	0,
							"end_line":	977,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocText((docp), (xmlChar *)value)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocText(docp, (xmlChar *)value)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L977\", 12, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	2,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	3,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	4,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	5,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	6,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	7,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	8,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	9,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	10,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	11,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	12,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	13,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	14,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	15,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	16,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	17,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	18,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	19,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	20,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	21,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	22,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	23,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	24,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	25,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	26,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	27,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	28,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	29,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	30,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	31,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	32,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	33,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	34,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	35,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	36,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	37,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	38,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	39,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	40,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	41,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	42,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	43,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	44,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	45,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	46,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	47,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	48,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	49,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	50,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	51,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	52,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	53,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	54,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	55,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	56,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	57,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	58,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	59,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	60,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	61,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	62,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	63,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	64,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	65,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	66,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	67,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	68,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	69,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	70,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	71,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	72,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	73,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	74,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	75,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	76,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	77,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	78,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	79,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	80,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	81,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	82,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	83,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	84,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	85,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	86,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	87,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	88,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	89,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	90,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	91,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	92,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	93,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	94,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	95,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	96,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	97,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	98,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	99,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	100,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	101,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	102,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	103,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	104,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	105,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	106,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	107,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	108,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	109,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	110,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	111,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	112,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	113,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	114,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	115,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	116,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	117,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	118,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	119,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	120,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	121,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	122,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	123,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	124,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	125,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	126,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	127,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	128,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	129,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	130,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	131,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	132,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	133,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	134,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	135,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	136,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	137,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	138,
									"scores":	[-5.4070233469245865]
								}, {
									"case":	139,
									"scores":	[-7.8524841037245867, -9.789394103724586, -8.269952530724586, -9.8211110939245856, -9.8607087307245873, -8.4034140437245863, -10.168954103724587, -9.7853980269245859, -9.8457314169245862, -10.091770330724586, -9.3076960169245861, -10.056156964724586]
								}]
						}, {
							"switch":	20,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	977,
							"begin_column":	2,
							"end_line":	979,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L977\", 12, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!node) || __is_neg(\"\", \"L977\", 12, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!node) && !__is_neg(\"\", \"L977\", 12, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.9673769734281459, -2.8483453439281456, -3.350303050428145, -3.5670797644281458, -3.8604169104281461, -2.2934382639281452, -3.1955732144281455, -2.7939130344281451, -3.6784597644281458, -4.4363478644281464, -3.062097934428146, -4.1452545044281459]
								}, {
									"case":	2,
									"scores":	[-3.9008134844281459, -4.7817818549281466, -5.2837395614281455, -5.5005162754281463, -5.7938534214281461, -4.2268747749281461, -5.1290097254281459, -4.7273495454281456, -5.6118962754281458, -6.3697843754281465, -4.9955344454281461, -6.0786910154281459]
								}, {
									"case":	3,
									"scores":	[-3.9008134844281459, -4.7817818549281466, -5.2837395614281455, -5.5005162754281463, -5.7938534214281461, -4.2268747749281461, -5.1290097254281459, -4.7273495454281456, -5.6118962754281458, -6.3697843754281465, -4.9955344454281461, -6.0786910154281459]
								}]
						}, {
							"switch":	21,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	977,
							"begin_column":	2,
							"end_line":	979,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L977\", 12, &(node), sizeof (node), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(intern), sizeof (intern), &(rv), sizeof (rv), &(ret), sizeof (ret), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    if (!node) {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9063524159245873, -7.787320786424587, -8.289278492924586, -8.5060552069245858, -8.7993923529245865, -7.2324137064245866, -8.1345486569245864, -7.732888476924586, -8.6174352069245863, -9.3753233069245869, -8.0010733769245856, -9.0842299469245855]
								}]
						}]
				}, {
					"line":	980,
					"switches":	[{
							"switch":	22,
							"types":	[[], [], [], [], [139], [], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	981,
							"begin_column":	0,
							"end_line":	981,
							"end_column":	0,
							"patch_codes":	["(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (ret)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (value_len)", "(value)++", "_convert_to_string(((id)))", "_convert_to_string(((return_value)))", "_convert_to_string(((rv)))", "_convert_to_string(((this_ptr)))", "_efree(((id)))", "_efree(((return_value)))", "_efree(((rv)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((rv))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((return_value)))", "_zval_dtor(((rv)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((return_value))", "_zval_dtor_func((rv))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(rv)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((id))", "convert_to_boolean((return_value))", "convert_to_boolean((rv))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((return_value))", "convert_to_long((rv))", "convert_to_long((this_ptr))", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((rv))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((rv)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((rv))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((rv))", "i_zval_ptr_dtor((this_ptr))", "node = (node)", "node = xmlNewDocText((docp), (xmlChar *)value)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((rv), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s could not be registered.\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s does not exist\", (value))", "php_error_docref0(((void *)0), (1 << 0L), \"Class %s is not derived from DOMNode.\", (value))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlFree((value))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((rv))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "exit(1)", "node = xmlNewDocText(docp, (xmlChar *)value)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.386820639607067]
								}, {
									"case":	2,
									"scores":	[-5.386820639607067]
								}, {
									"case":	3,
									"scores":	[-5.386820639607067]
								}, {
									"case":	4,
									"scores":	[-5.386820639607067]
								}, {
									"case":	5,
									"scores":	[-5.386820639607067]
								}, {
									"case":	6,
									"scores":	[-5.386820639607067]
								}, {
									"case":	7,
									"scores":	[-5.386820639607067]
								}, {
									"case":	8,
									"scores":	[-5.386820639607067]
								}, {
									"case":	9,
									"scores":	[-5.386820639607067]
								}, {
									"case":	10,
									"scores":	[-5.386820639607067]
								}, {
									"case":	11,
									"scores":	[-5.386820639607067]
								}, {
									"case":	12,
									"scores":	[-5.386820639607067]
								}, {
									"case":	13,
									"scores":	[-5.386820639607067]
								}, {
									"case":	14,
									"scores":	[-5.386820639607067]
								}, {
									"case":	15,
									"scores":	[-5.386820639607067]
								}, {
									"case":	16,
									"scores":	[-5.386820639607067]
								}, {
									"case":	17,
									"scores":	[-5.386820639607067]
								}, {
									"case":	18,
									"scores":	[-5.386820639607067]
								}, {
									"case":	19,
									"scores":	[-5.386820639607067]
								}, {
									"case":	20,
									"scores":	[-5.386820639607067]
								}, {
									"case":	21,
									"scores":	[-5.386820639607067]
								}, {
									"case":	22,
									"scores":	[-5.386820639607067]
								}, {
									"case":	23,
									"scores":	[-5.386820639607067]
								}, {
									"case":	24,
									"scores":	[-5.386820639607067]
								}, {
									"case":	25,
									"scores":	[-5.386820639607067]
								}, {
									"case":	26,
									"scores":	[-5.386820639607067]
								}, {
									"case":	27,
									"scores":	[-5.386820639607067]
								}, {
									"case":	28,
									"scores":	[-5.386820639607067]
								}, {
									"case":	29,
									"scores":	[-5.386820639607067]
								}, {
									"case":	30,
									"scores":	[-5.386820639607067]
								}, {
									"case":	31,
									"scores":	[-5.386820639607067]
								}, {
									"case":	32,
									"scores":	[-5.386820639607067]
								}, {
									"case":	33,
									"scores":	[-5.386820639607067]
								}, {
									"case":	34,
									"scores":	[-5.386820639607067]
								}, {
									"case":	35,
									"scores":	[-5.386820639607067]
								}, {
									"case":	36,
									"scores":	[-5.386820639607067]
								}, {
									"case":	37,
									"scores":	[-5.386820639607067]
								}, {
									"case":	38,
									"scores":	[-5.386820639607067]
								}, {
									"case":	39,
									"scores":	[-5.386820639607067]
								}, {
									"case":	40,
									"scores":	[-5.386820639607067]
								}, {
									"case":	41,
									"scores":	[-5.386820639607067]
								}, {
									"case":	42,
									"scores":	[-5.386820639607067]
								}, {
									"case":	43,
									"scores":	[-5.386820639607067]
								}, {
									"case":	44,
									"scores":	[-5.386820639607067]
								}, {
									"case":	45,
									"scores":	[-5.386820639607067]
								}, {
									"case":	46,
									"scores":	[-5.386820639607067]
								}, {
									"case":	47,
									"scores":	[-5.386820639607067]
								}, {
									"case":	48,
									"scores":	[-5.386820639607067]
								}, {
									"case":	49,
									"scores":	[-5.386820639607067]
								}, {
									"case":	50,
									"scores":	[-5.386820639607067]
								}, {
									"case":	51,
									"scores":	[-5.386820639607067]
								}, {
									"case":	52,
									"scores":	[-5.386820639607067]
								}, {
									"case":	53,
									"scores":	[-5.386820639607067]
								}, {
									"case":	54,
									"scores":	[-5.386820639607067]
								}, {
									"case":	55,
									"scores":	[-5.386820639607067]
								}, {
									"case":	56,
									"scores":	[-5.386820639607067]
								}, {
									"case":	57,
									"scores":	[-5.386820639607067]
								}, {
									"case":	58,
									"scores":	[-5.386820639607067]
								}, {
									"case":	59,
									"scores":	[-5.386820639607067]
								}, {
									"case":	60,
									"scores":	[-5.386820639607067]
								}, {
									"case":	61,
									"scores":	[-5.386820639607067]
								}, {
									"case":	62,
									"scores":	[-5.386820639607067]
								}, {
									"case":	63,
									"scores":	[-5.386820639607067]
								}, {
									"case":	64,
									"scores":	[-5.386820639607067]
								}, {
									"case":	65,
									"scores":	[-5.386820639607067]
								}, {
									"case":	66,
									"scores":	[-5.386820639607067]
								}, {
									"case":	67,
									"scores":	[-5.386820639607067]
								}, {
									"case":	68,
									"scores":	[-5.386820639607067]
								}, {
									"case":	69,
									"scores":	[-5.386820639607067]
								}, {
									"case":	70,
									"scores":	[-5.386820639607067]
								}, {
									"case":	71,
									"scores":	[-5.386820639607067]
								}, {
									"case":	72,
									"scores":	[-5.386820639607067]
								}, {
									"case":	73,
									"scores":	[-5.386820639607067]
								}, {
									"case":	74,
									"scores":	[-5.386820639607067]
								}, {
									"case":	75,
									"scores":	[-5.386820639607067]
								}, {
									"case":	76,
									"scores":	[-5.386820639607067]
								}, {
									"case":	77,
									"scores":	[-5.386820639607067]
								}, {
									"case":	78,
									"scores":	[-5.386820639607067]
								}, {
									"case":	79,
									"scores":	[-5.386820639607067]
								}, {
									"case":	80,
									"scores":	[-5.386820639607067]
								}, {
									"case":	81,
									"scores":	[-5.386820639607067]
								}, {
									"case":	82,
									"scores":	[-5.386820639607067]
								}, {
									"case":	83,
									"scores":	[-5.386820639607067]
								}, {
									"case":	84,
									"scores":	[-5.386820639607067]
								}, {
									"case":	85,
									"scores":	[-5.386820639607067]
								}, {
									"case":	86,
									"scores":	[-5.386820639607067]
								}, {
									"case":	87,
									"scores":	[-5.386820639607067]
								}, {
									"case":	88,
									"scores":	[-5.386820639607067]
								}, {
									"case":	89,
									"scores":	[-5.386820639607067]
								}, {
									"case":	90,
									"scores":	[-5.386820639607067]
								}, {
									"case":	91,
									"scores":	[-5.386820639607067]
								}, {
									"case":	92,
									"scores":	[-5.386820639607067]
								}, {
									"case":	93,
									"scores":	[-5.386820639607067]
								}, {
									"case":	94,
									"scores":	[-5.386820639607067]
								}, {
									"case":	95,
									"scores":	[-5.386820639607067]
								}, {
									"case":	96,
									"scores":	[-5.386820639607067]
								}, {
									"case":	97,
									"scores":	[-5.386820639607067]
								}, {
									"case":	98,
									"scores":	[-5.386820639607067]
								}, {
									"case":	99,
									"scores":	[-5.386820639607067]
								}, {
									"case":	100,
									"scores":	[-5.386820639607067]
								}, {
									"case":	101,
									"scores":	[-5.386820639607067]
								}, {
									"case":	102,
									"scores":	[-5.386820639607067]
								}, {
									"case":	103,
									"scores":	[-5.386820639607067]
								}, {
									"case":	104,
									"scores":	[-5.386820639607067]
								}, {
									"case":	105,
									"scores":	[-5.386820639607067]
								}, {
									"case":	106,
									"scores":	[-5.386820639607067]
								}, {
									"case":	107,
									"scores":	[-5.386820639607067]
								}, {
									"case":	108,
									"scores":	[-5.386820639607067]
								}, {
									"case":	109,
									"scores":	[-5.386820639607067]
								}, {
									"case":	110,
									"scores":	[-5.386820639607067]
								}, {
									"case":	111,
									"scores":	[-5.386820639607067]
								}, {
									"case":	112,
									"scores":	[-5.386820639607067]
								}, {
									"case":	113,
									"scores":	[-5.386820639607067]
								}, {
									"case":	114,
									"scores":	[-5.386820639607067]
								}, {
									"case":	115,
									"scores":	[-5.386820639607067]
								}, {
									"case":	116,
									"scores":	[-5.386820639607067]
								}, {
									"case":	117,
									"scores":	[-5.386820639607067]
								}, {
									"case":	118,
									"scores":	[-5.386820639607067]
								}, {
									"case":	119,
									"scores":	[-5.386820639607067]
								}, {
									"case":	120,
									"scores":	[-5.386820639607067]
								}, {
									"case":	121,
									"scores":	[-5.386820639607067]
								}, {
									"case":	122,
									"scores":	[-5.386820639607067]
								}, {
									"case":	123,
									"scores":	[-5.386820639607067]
								}, {
									"case":	124,
									"scores":	[-5.386820639607067]
								}, {
									"case":	125,
									"scores":	[-5.386820639607067]
								}, {
									"case":	126,
									"scores":	[-5.386820639607067]
								}, {
									"case":	127,
									"scores":	[-5.386820639607067]
								}, {
									"case":	128,
									"scores":	[-5.386820639607067]
								}, {
									"case":	129,
									"scores":	[-5.386820639607067]
								}, {
									"case":	130,
									"scores":	[-5.386820639607067]
								}, {
									"case":	131,
									"scores":	[-5.386820639607067]
								}, {
									"case":	132,
									"scores":	[-5.386820639607067]
								}, {
									"case":	133,
									"scores":	[-5.386820639607067]
								}, {
									"case":	134,
									"scores":	[-5.386820639607067]
								}, {
									"case":	135,
									"scores":	[-5.386820639607067]
								}, {
									"case":	136,
									"scores":	[-5.386820639607067]
								}, {
									"case":	137,
									"scores":	[-5.386820639607067]
								}, {
									"case":	138,
									"scores":	[-5.386820639607067]
								}, {
									"case":	139,
									"scores":	[-7.4997916544070673, -8.2891324954070669, -5.6578597744070667, -8.31600363960707, -7.4626912544070674, -9.84050602340707, -9.8009083866070661, -10.034467223407066, -9.8255287096070667, -10.071567623407066, -9.2874933096070666, -10.035954257407067]
								}]
						}, {
							"switch":	23,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	981,
							"begin_column":	2,
							"end_line":	981,
							"end_column":	36,
							"patch_codes":	["if (__is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) || __is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) && !__is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3349929914281455, -5.4024937024281456, -4.159965331428146, -4.5408384914281452, -5.0406421914281463, -5.9674063274281455, -5.6740691814281456, -6.2489864814281457, -5.785449181428147, -6.5433372814281459, -5.1690873514281463, -6.2522439214281462]
								}, {
									"case":	2,
									"scores":	[-0.48525609142814563, -0.552756802428145, 0.6897715685718544, 0.308898408571856, -0.1909052914281455, -1.1176694274281442, -0.824332281428144, -1.3992495814281454, -0.93571228142814533, -1.6936003814281455, -0.31935045142814555, -1.4025070214281454]
								}, {
									"case":	3,
									"scores":	[-0.48525609142814563, -0.552756802428145, 0.6897715685718544, 0.308898408571856, -0.1909052914281455, -1.1176694274281442, -0.824332281428144, -1.3992495814281454, -0.93571228142814533, -1.6936003814281455, -0.31935045142814555, -1.4025070214281454]
								}]
						}, {
							"switch":	24,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	981,
							"begin_column":	2,
							"end_line":	981,
							"end_column":	36,
							"patch_codes":	["if (!__is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)))\n    if (((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern))) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L981\", 12, &(return_value), sizeof (return_value), &(rv), sizeof (rv), &(node), sizeof (node), &(ret), sizeof (ret), &(intern), sizeof (intern), &(docp), sizeof (docp), &(value), sizeof (value), &(id), sizeof (id), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(value_len), sizeof (value_len), &(dom_document_class_entry), sizeof (dom_document_class_entry)) && (((void *)0) == (rv = php_dom_create_object(node, &ret, rv, return_value, intern)))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.1405829196070663, -8.2080836306070672, -6.9655552596070667, -7.3464284196070668, -7.846232119607067, -8.7729962556070671, -8.4796591096070664, -9.0545764096070673, -8.5910391096070668, -9.34892720960707, -7.9746772796070662, -9.0578338496070661]
								}, {
									"case":	2,
									"scores":	[-3.4735815256070666, -3.5410822366070649, -2.298553865607067, -2.6794270256070658, -3.1792307256070669, -4.1059948616070674, -3.8126577156070667, -4.3875750156070676, -3.9240377156070672, -4.6819258156070669, -3.3076758856070674, -4.3908324556070673]
								}]
						}]
				}, {
					"line":	2287,
					"switches":	[]
				}, {
					"line":	2288,
					"switches":	[]
				}, {
					"line":	2289,
					"switches":	[]
				}, {
					"line":	2290,
					"switches":	[]
				}, {
					"line":	2291,
					"switches":	[]
				}, {
					"line":	2292,
					"switches":	[]
				}, {
					"line":	2293,
					"switches":	[]
				}, {
					"line":	2294,
					"switches":	[]
				}, {
					"line":	2296,
					"switches":	[{
							"switch":	25,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2297,
							"begin_column":	0,
							"end_line":	2297,
							"end_column":	0,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2297\", 87, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	2,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	3,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	4,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	5,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	6,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	7,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	8,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	9,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	10,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	11,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	12,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	13,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	14,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	15,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	16,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	17,
									"scores":	[-4.4372933956836524]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	168,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	169,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	170,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	171,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	172,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	173,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	174,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	175,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	176,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	177,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	178,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	179,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	180,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	181,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	182,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	183,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	184,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	185,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	186,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	187,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	188,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	189,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	190,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	191,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	192,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	193,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	194,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	195,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	196,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	197,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	198,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	199,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	200,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	201,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	202,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	203,
									"scores":	[-7.6149167966836533, -7.8609557104836529, -8.2481202624836527, -8.6656214354836543, -7.8253423444836523, -7.8253423444836523, -9.0393326794836533, -8.6477647994836531, -9.7920000563836531, -8.39017962548365, -8.17553919168365, -8.6791632794836531, -8.42157810548365, -8.42157810548365, -8.38642830868365, -8.17553919168365, -8.4346113996836536, -8.98968536568365, -9.20057448268365, -8.4887503656836536, -9.23572427948365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -8.98968536568365, -9.20057448268365, -8.98968536568365, -9.20057448268365, -9.20057448268365, -8.98968536568365, -9.20057448268365, -8.4887503656836536, -9.23572427948365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -9.20057448268365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -8.98968536568365, -9.20057448268365, -8.98968536568365, -9.20057448268365, -8.98968536568365, -9.20057448268365, -9.20057448268365]
								}]
						}, {
							"switch":	26,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	2297,
							"begin_column":	2,
							"end_line":	2301,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L2297\", 87, &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) || __is_neg(\"\", \"L2297\", 87, &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n", "if (dprintf((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) {\n    return;\n}\n", "if (zend_get_parameters_ex((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) {\n    return;\n}\n", "if (zend_parse_parameters((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) {\n    return;\n}\n", "if ((zend_parse_method_parameters((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) && !__is_neg(\"\", \"L2297\", 87, &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences))) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.1419106444281466, -4.5059531754281466, -4.564923915428146, -4.564923915428146, -4.0981291754281459, -4.8560172754281457, -4.4425459354281465, -5.0089377164281457, -5.2017497643281452, -4.8281974954281459, -4.2034159754281459, -5.275101775428146, -4.9613040754281457, -4.9613040754281457, -4.6726759754281462, -4.2034159754281459, -4.5204711154281458, -4.7282607854281462, -5.1975207854281456, -4.4062497554281457, -5.4861488854281459, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -4.4062497554281457, -5.4861488854281459, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -5.1975207854281456, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -4.7282607854281462, -5.1975207854281456, -5.1975207854281456]
								}, {
									"case":	2,
									"scores":	[-5.2227539793281466, -5.5867965103281456, -5.6457672503281469, -5.6457672503281469, -5.1789725103281468, -5.9368606103281465, -5.5233892703281455, -6.0897810513281465, -6.282593099228146, -5.9090408303281468, -5.2842593103281459, -6.3559451103281459, -6.0421474103281465, -6.0421474103281465, -5.7535193103281461, -5.2842593103281459, -5.6013144503281467, -5.8091041203281462, -6.2783641203281464, -5.4870930903281465, -6.5669922203281459, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.4870930903281465, -6.5669922203281459, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-5.2227539793281466, -5.5867965103281456, -5.6457672503281469, -5.6457672503281469, -5.1789725103281468, -5.9368606103281465, -5.5233892703281455, -6.0897810513281465, -6.282593099228146, -5.9090408303281468, -5.2842593103281459, -6.3559451103281459, -6.0421474103281465, -6.0421474103281465, -5.7535193103281461, -5.2842593103281459, -5.6013144503281467, -5.8091041203281462, -6.2783641203281464, -5.4870930903281465, -6.5669922203281459, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.4870930903281465, -6.5669922203281459, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -6.2783641203281464, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -5.8091041203281462, -6.2783641203281464, -6.2783641203281464]
								}]
						}, {
							"switch":	27,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2297,
							"begin_column":	2,
							"end_line":	2301,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L2297\", 87, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)))\n    if (zend_parse_method_parameters((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1) {\n        return;\n    }\n", "if (!__is_neg(\"\", \"L2297\", 87, &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(id), sizeof (id), &(nodep), sizeof (nodep), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(format), sizeof (format), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry->type), sizeof (dom_node_class_entry->type), &(dom_node_class_entry->name), sizeof (dom_node_class_entry->name), &(dom_node_class_entry->name_length), sizeof (dom_node_class_entry->name_length), &(dom_node_class_entry->parent), sizeof (dom_node_class_entry->parent), &(dom_node_class_entry->refcount), sizeof (dom_node_class_entry->refcount), &(dom_node_class_entry->ce_flags), sizeof (dom_node_class_entry->ce_flags), &(dom_node_class_entry->default_properties_table), sizeof (dom_node_class_entry->default_properties_table), &(dom_node_class_entry->default_static_members_table), sizeof (dom_node_class_entry->default_static_members_table), &(dom_node_class_entry->static_members_table), sizeof (dom_node_class_entry->static_members_table), &(dom_node_class_entry->default_properties_count), sizeof (dom_node_class_entry->default_properties_count), &(dom_node_class_entry->default_static_members_count), sizeof (dom_node_class_entry->default_static_members_count), &(dom_node_class_entry->constructor), sizeof (dom_node_class_entry->constructor), &(dom_node_class_entry->destructor), sizeof (dom_node_class_entry->destructor), &(dom_node_class_entry->clone), sizeof (dom_node_class_entry->clone), &(dom_node_class_entry->__get), sizeof (dom_node_class_entry->__get), &(dom_node_class_entry->__set), sizeof (dom_node_class_entry->__set), &(dom_node_class_entry->__unset), sizeof (dom_node_class_entry->__unset), &(dom_node_class_entry->__isset), sizeof (dom_node_class_entry->__isset), &(dom_node_class_entry->__call), sizeof (dom_node_class_entry->__call), &(dom_node_class_entry->__callstatic), sizeof (dom_node_class_entry->__callstatic), &(dom_node_class_entry->__tostring), sizeof (dom_node_class_entry->__tostring), &(dom_node_class_entry->serialize_func), sizeof (dom_node_class_entry->serialize_func), &(dom_node_class_entry->unserialize_func), sizeof (dom_node_class_entry->unserialize_func), &(dom_node_class_entry->create_object), sizeof (dom_node_class_entry->create_object), &(dom_node_class_entry->get_iterator), sizeof (dom_node_class_entry->get_iterator), &(dom_node_class_entry->interface_gets_implemented), sizeof (dom_node_class_entry->interface_gets_implemented), &(dom_node_class_entry->get_static_method), sizeof (dom_node_class_entry->get_static_method), &(dom_node_class_entry->serialize), sizeof (dom_node_class_entry->serialize), &(dom_node_class_entry->unserialize), sizeof (dom_node_class_entry->unserialize), &(dom_node_class_entry->interfaces), sizeof (dom_node_class_entry->interfaces), &(dom_node_class_entry->num_interfaces), sizeof (dom_node_class_entry->num_interfaces), &(dom_node_class_entry->traits), sizeof (dom_node_class_entry->traits), &(dom_node_class_entry->num_traits), sizeof (dom_node_class_entry->num_traits), &(dom_node_class_entry->trait_aliases), sizeof (dom_node_class_entry->trait_aliases), &(dom_node_class_entry->trait_precedences), sizeof (dom_node_class_entry->trait_precedences), &(dom_document_class_entry->type), sizeof (dom_document_class_entry->type), &(dom_document_class_entry->name), sizeof (dom_document_class_entry->name), &(dom_document_class_entry->name_length), sizeof (dom_document_class_entry->name_length), &(dom_document_class_entry->parent), sizeof (dom_document_class_entry->parent), &(dom_document_class_entry->refcount), sizeof (dom_document_class_entry->refcount), &(dom_document_class_entry->ce_flags), sizeof (dom_document_class_entry->ce_flags), &(dom_document_class_entry->default_properties_table), sizeof (dom_document_class_entry->default_properties_table), &(dom_document_class_entry->default_static_members_table), sizeof (dom_document_class_entry->default_static_members_table), &(dom_document_class_entry->static_members_table), sizeof (dom_document_class_entry->static_members_table), &(dom_document_class_entry->default_properties_count), sizeof (dom_document_class_entry->default_properties_count), &(dom_document_class_entry->default_static_members_count), sizeof (dom_document_class_entry->default_static_members_count), &(dom_document_class_entry->constructor), sizeof (dom_document_class_entry->constructor), &(dom_document_class_entry->destructor), sizeof (dom_document_class_entry->destructor), &(dom_document_class_entry->clone), sizeof (dom_document_class_entry->clone), &(dom_document_class_entry->__get), sizeof (dom_document_class_entry->__get), &(dom_document_class_entry->__set), sizeof (dom_document_class_entry->__set), &(dom_document_class_entry->__unset), sizeof (dom_document_class_entry->__unset), &(dom_document_class_entry->__isset), sizeof (dom_document_class_entry->__isset), &(dom_document_class_entry->__call), sizeof (dom_document_class_entry->__call), &(dom_document_class_entry->__callstatic), sizeof (dom_document_class_entry->__callstatic), &(dom_document_class_entry->__tostring), sizeof (dom_document_class_entry->__tostring), &(dom_document_class_entry->serialize_func), sizeof (dom_document_class_entry->serialize_func), &(dom_document_class_entry->unserialize_func), sizeof (dom_document_class_entry->unserialize_func), &(dom_document_class_entry->create_object), sizeof (dom_document_class_entry->create_object), &(dom_document_class_entry->get_iterator), sizeof (dom_document_class_entry->get_iterator), &(dom_document_class_entry->interface_gets_implemented), sizeof (dom_document_class_entry->interface_gets_implemented), &(dom_document_class_entry->get_static_method), sizeof (dom_document_class_entry->get_static_method), &(dom_document_class_entry->serialize), sizeof (dom_document_class_entry->serialize), &(dom_document_class_entry->unserialize), sizeof (dom_document_class_entry->unserialize), &(dom_document_class_entry->interfaces), sizeof (dom_document_class_entry->interfaces), &(dom_document_class_entry->num_interfaces), sizeof (dom_document_class_entry->num_interfaces), &(dom_document_class_entry->traits), sizeof (dom_document_class_entry->traits), &(dom_document_class_entry->num_traits), sizeof (dom_document_class_entry->num_traits), &(dom_document_class_entry->trait_aliases), sizeof (dom_document_class_entry->trait_aliases), &(dom_document_class_entry->trait_precedences), sizeof (dom_document_class_entry->trait_precedences)) && (zend_parse_method_parameters((ht), (this_ptr), \"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry) == -1)) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.957560255683652, -6.7154483556836517, -6.0013417246836518, -6.3653842556836526, -6.4243549956836521, -6.4243549956836521, -6.3019770156836525, -6.8683687966836526, -7.06118084458365, -6.687628575683652, -6.0628470556836529, -7.134532855683652, -6.8207351556836526, -6.8207351556836526, -6.5321070556836522, -6.0628470556836529, -6.3799021956836519, -6.5876918656836523, -7.0569518656836525, -6.2656808356836526, -7.345579965683652, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -6.5876918656836523, -7.0569518656836525, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525, -6.5876918656836523, -7.0569518656836525, -6.2656808356836526, -7.345579965683652, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -7.0569518656836525, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -6.5876918656836523, -7.0569518656836525, -6.5876918656836523, -7.0569518656836525, -6.5876918656836523, -7.0569518656836525, -7.0569518656836525]
								}, {
									"case":	2,
									"scores":	[-7.0907281905836523, -7.848616290583653, -7.134509659583653, -7.4985521905836521, -7.5575229305836515, -7.5575229305836515, -7.435144950583652, -8.00153673158365, -8.19434877948365, -7.8207965105836514, -7.1960149905836515, -8.26770079058365, -7.95390309058365, -7.95390309058365, -7.6652749905836517, -7.1960149905836515, -7.5130701305836514, -7.7208598005836517, -8.19011980058365, -7.39884877058365, -8.47874790058365, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -8.19011980058365, -8.19011980058365, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -7.7208598005836517, -8.19011980058365, -7.7208598005836517, -8.19011980058365, -8.19011980058365, -7.7208598005836517, -8.19011980058365, -7.39884877058365, -8.47874790058365, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -8.19011980058365, -8.19011980058365, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -8.19011980058365, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -7.7208598005836517, -8.19011980058365, -7.7208598005836517, -8.19011980058365, -7.7208598005836517, -8.19011980058365, -8.19011980058365]
								}]
						}]
				}, {
					"line":	2304,
					"switches":	[{
							"switch":	28,
							"types":	[[], [], [], [], [205], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], [], [], [], [], [], []],
							"begin_line":	2305,
							"begin_column":	0,
							"end_line":	2305,
							"end_column":	0,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props, 0, sizeof (*(doc_props)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2305\", 29, &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(intern->document), sizeof (intern->document), &(format), sizeof (format), &(doc_props->formatoutput), sizeof (doc_props->formatoutput), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(intern->ptr), sizeof (intern->ptr), &(nodep), sizeof (nodep), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(doc_props->validateonparse), sizeof (doc_props->validateonparse), &(doc_props->resolveexternals), sizeof (doc_props->resolveexternals), &(doc_props->preservewhitespace), sizeof (doc_props->preservewhitespace), &(doc_props->substituteentities), sizeof (doc_props->substituteentities), &(doc_props->stricterror), sizeof (doc_props->stricterror), &(doc_props->recover), sizeof (doc_props->recover), &(doc_props->classmap), sizeof (doc_props->classmap)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.336279859096055]
								}, {
									"case":	2,
									"scores":	[-4.336279859096055]
								}, {
									"case":	3,
									"scores":	[-4.336279859096055]
								}, {
									"case":	4,
									"scores":	[-4.336279859096055]
								}, {
									"case":	5,
									"scores":	[-4.336279859096055]
								}, {
									"case":	6,
									"scores":	[-4.336279859096055]
								}, {
									"case":	7,
									"scores":	[-4.336279859096055]
								}, {
									"case":	8,
									"scores":	[-4.336279859096055]
								}, {
									"case":	9,
									"scores":	[-4.336279859096055]
								}, {
									"case":	10,
									"scores":	[-4.336279859096055]
								}, {
									"case":	11,
									"scores":	[-4.336279859096055]
								}, {
									"case":	12,
									"scores":	[-4.336279859096055]
								}, {
									"case":	13,
									"scores":	[-4.336279859096055]
								}, {
									"case":	14,
									"scores":	[-4.336279859096055]
								}, {
									"case":	15,
									"scores":	[-4.336279859096055]
								}, {
									"case":	16,
									"scores":	[-4.336279859096055]
								}, {
									"case":	17,
									"scores":	[-4.336279859096055]
								}, {
									"case":	18,
									"scores":	[-4.336279859096055]
								}, {
									"case":	19,
									"scores":	[-4.336279859096055]
								}, {
									"case":	20,
									"scores":	[-4.336279859096055]
								}, {
									"case":	21,
									"scores":	[-4.336279859096055]
								}, {
									"case":	22,
									"scores":	[-4.336279859096055]
								}, {
									"case":	23,
									"scores":	[-4.336279859096055]
								}, {
									"case":	24,
									"scores":	[-4.336279859096055]
								}, {
									"case":	25,
									"scores":	[-4.336279859096055]
								}, {
									"case":	26,
									"scores":	[-4.336279859096055]
								}, {
									"case":	27,
									"scores":	[-4.336279859096055]
								}, {
									"case":	28,
									"scores":	[-4.336279859096055]
								}, {
									"case":	29,
									"scores":	[-4.336279859096055]
								}, {
									"case":	30,
									"scores":	[-4.336279859096055]
								}, {
									"case":	31,
									"scores":	[-4.336279859096055]
								}, {
									"case":	32,
									"scores":	[-4.336279859096055]
								}, {
									"case":	33,
									"scores":	[-4.336279859096055]
								}, {
									"case":	34,
									"scores":	[-4.336279859096055]
								}, {
									"case":	35,
									"scores":	[-4.336279859096055]
								}, {
									"case":	36,
									"scores":	[-4.336279859096055]
								}, {
									"case":	37,
									"scores":	[-4.336279859096055]
								}, {
									"case":	38,
									"scores":	[-4.336279859096055]
								}, {
									"case":	39,
									"scores":	[-4.336279859096055]
								}, {
									"case":	40,
									"scores":	[-4.336279859096055]
								}, {
									"case":	41,
									"scores":	[-4.336279859096055]
								}, {
									"case":	42,
									"scores":	[-4.336279859096055]
								}, {
									"case":	43,
									"scores":	[-4.336279859096055]
								}, {
									"case":	44,
									"scores":	[-4.336279859096055]
								}, {
									"case":	45,
									"scores":	[-4.336279859096055]
								}, {
									"case":	46,
									"scores":	[-4.336279859096055]
								}, {
									"case":	47,
									"scores":	[-4.336279859096055]
								}, {
									"case":	48,
									"scores":	[-4.336279859096055]
								}, {
									"case":	49,
									"scores":	[-4.336279859096055]
								}, {
									"case":	50,
									"scores":	[-4.336279859096055]
								}, {
									"case":	51,
									"scores":	[-4.336279859096055]
								}, {
									"case":	52,
									"scores":	[-4.336279859096055]
								}, {
									"case":	53,
									"scores":	[-4.336279859096055]
								}, {
									"case":	54,
									"scores":	[-4.336279859096055]
								}, {
									"case":	55,
									"scores":	[-4.336279859096055]
								}, {
									"case":	56,
									"scores":	[-4.336279859096055]
								}, {
									"case":	57,
									"scores":	[-4.336279859096055]
								}, {
									"case":	58,
									"scores":	[-4.336279859096055]
								}, {
									"case":	59,
									"scores":	[-4.336279859096055]
								}, {
									"case":	60,
									"scores":	[-4.336279859096055]
								}, {
									"case":	61,
									"scores":	[-4.336279859096055]
								}, {
									"case":	62,
									"scores":	[-4.336279859096055]
								}, {
									"case":	63,
									"scores":	[-4.336279859096055]
								}, {
									"case":	64,
									"scores":	[-4.336279859096055]
								}, {
									"case":	65,
									"scores":	[-4.336279859096055]
								}, {
									"case":	66,
									"scores":	[-4.336279859096055]
								}, {
									"case":	67,
									"scores":	[-4.336279859096055]
								}, {
									"case":	68,
									"scores":	[-4.336279859096055]
								}, {
									"case":	69,
									"scores":	[-4.336279859096055]
								}, {
									"case":	70,
									"scores":	[-4.336279859096055]
								}, {
									"case":	71,
									"scores":	[-4.336279859096055]
								}, {
									"case":	72,
									"scores":	[-4.336279859096055]
								}, {
									"case":	73,
									"scores":	[-4.336279859096055]
								}, {
									"case":	74,
									"scores":	[-4.336279859096055]
								}, {
									"case":	75,
									"scores":	[-4.336279859096055]
								}, {
									"case":	76,
									"scores":	[-4.336279859096055]
								}, {
									"case":	77,
									"scores":	[-4.336279859096055]
								}, {
									"case":	78,
									"scores":	[-4.336279859096055]
								}, {
									"case":	79,
									"scores":	[-4.336279859096055]
								}, {
									"case":	80,
									"scores":	[-4.336279859096055]
								}, {
									"case":	81,
									"scores":	[-4.336279859096055]
								}, {
									"case":	82,
									"scores":	[-4.336279859096055]
								}, {
									"case":	83,
									"scores":	[-4.336279859096055]
								}, {
									"case":	84,
									"scores":	[-4.336279859096055]
								}, {
									"case":	85,
									"scores":	[-4.336279859096055]
								}, {
									"case":	86,
									"scores":	[-4.336279859096055]
								}, {
									"case":	87,
									"scores":	[-4.336279859096055]
								}, {
									"case":	88,
									"scores":	[-4.336279859096055]
								}, {
									"case":	89,
									"scores":	[-4.336279859096055]
								}, {
									"case":	90,
									"scores":	[-4.336279859096055]
								}, {
									"case":	91,
									"scores":	[-4.336279859096055]
								}, {
									"case":	92,
									"scores":	[-4.336279859096055]
								}, {
									"case":	93,
									"scores":	[-4.336279859096055]
								}, {
									"case":	94,
									"scores":	[-4.336279859096055]
								}, {
									"case":	95,
									"scores":	[-4.336279859096055]
								}, {
									"case":	96,
									"scores":	[-4.336279859096055]
								}, {
									"case":	97,
									"scores":	[-4.336279859096055]
								}, {
									"case":	98,
									"scores":	[-4.336279859096055]
								}, {
									"case":	99,
									"scores":	[-4.336279859096055]
								}, {
									"case":	100,
									"scores":	[-4.336279859096055]
								}, {
									"case":	101,
									"scores":	[-4.336279859096055]
								}, {
									"case":	102,
									"scores":	[-4.336279859096055]
								}, {
									"case":	103,
									"scores":	[-4.336279859096055]
								}, {
									"case":	104,
									"scores":	[-4.336279859096055]
								}, {
									"case":	105,
									"scores":	[-4.336279859096055]
								}, {
									"case":	106,
									"scores":	[-4.336279859096055]
								}, {
									"case":	107,
									"scores":	[-4.336279859096055]
								}, {
									"case":	108,
									"scores":	[-4.336279859096055]
								}, {
									"case":	109,
									"scores":	[-4.336279859096055]
								}, {
									"case":	110,
									"scores":	[-4.336279859096055]
								}, {
									"case":	111,
									"scores":	[-4.336279859096055]
								}, {
									"case":	112,
									"scores":	[-4.336279859096055]
								}, {
									"case":	113,
									"scores":	[-4.336279859096055]
								}, {
									"case":	114,
									"scores":	[-4.336279859096055]
								}, {
									"case":	115,
									"scores":	[-4.336279859096055]
								}, {
									"case":	116,
									"scores":	[-4.336279859096055]
								}, {
									"case":	117,
									"scores":	[-4.336279859096055]
								}, {
									"case":	118,
									"scores":	[-4.336279859096055]
								}, {
									"case":	119,
									"scores":	[-4.336279859096055]
								}, {
									"case":	120,
									"scores":	[-4.336279859096055]
								}, {
									"case":	121,
									"scores":	[-4.336279859096055]
								}, {
									"case":	122,
									"scores":	[-4.336279859096055]
								}, {
									"case":	123,
									"scores":	[-4.336279859096055]
								}, {
									"case":	124,
									"scores":	[-4.336279859096055]
								}, {
									"case":	125,
									"scores":	[-4.336279859096055]
								}, {
									"case":	126,
									"scores":	[-4.336279859096055]
								}, {
									"case":	127,
									"scores":	[-4.336279859096055]
								}, {
									"case":	128,
									"scores":	[-4.336279859096055]
								}, {
									"case":	129,
									"scores":	[-4.336279859096055]
								}, {
									"case":	130,
									"scores":	[-4.336279859096055]
								}, {
									"case":	131,
									"scores":	[-4.336279859096055]
								}, {
									"case":	132,
									"scores":	[-4.336279859096055]
								}, {
									"case":	133,
									"scores":	[-4.336279859096055]
								}, {
									"case":	134,
									"scores":	[-4.336279859096055]
								}, {
									"case":	135,
									"scores":	[-4.336279859096055]
								}, {
									"case":	136,
									"scores":	[-4.336279859096055]
								}, {
									"case":	137,
									"scores":	[-4.336279859096055]
								}, {
									"case":	138,
									"scores":	[-4.336279859096055]
								}, {
									"case":	139,
									"scores":	[-4.336279859096055]
								}, {
									"case":	140,
									"scores":	[-4.336279859096055]
								}, {
									"case":	141,
									"scores":	[-4.336279859096055]
								}, {
									"case":	142,
									"scores":	[-4.336279859096055]
								}, {
									"case":	143,
									"scores":	[-4.336279859096055]
								}, {
									"case":	144,
									"scores":	[-4.336279859096055]
								}, {
									"case":	145,
									"scores":	[-4.336279859096055]
								}, {
									"case":	146,
									"scores":	[-4.336279859096055]
								}, {
									"case":	147,
									"scores":	[-4.336279859096055]
								}, {
									"case":	148,
									"scores":	[-4.336279859096055]
								}, {
									"case":	149,
									"scores":	[-4.336279859096055]
								}, {
									"case":	150,
									"scores":	[-4.336279859096055]
								}, {
									"case":	151,
									"scores":	[-4.336279859096055]
								}, {
									"case":	152,
									"scores":	[-4.336279859096055]
								}, {
									"case":	153,
									"scores":	[-4.336279859096055]
								}, {
									"case":	154,
									"scores":	[-4.336279859096055]
								}, {
									"case":	155,
									"scores":	[-4.336279859096055]
								}, {
									"case":	156,
									"scores":	[-4.336279859096055]
								}, {
									"case":	157,
									"scores":	[-4.336279859096055]
								}, {
									"case":	158,
									"scores":	[-4.336279859096055]
								}, {
									"case":	159,
									"scores":	[-4.336279859096055]
								}, {
									"case":	160,
									"scores":	[-4.336279859096055]
								}, {
									"case":	161,
									"scores":	[-4.336279859096055]
								}, {
									"case":	162,
									"scores":	[-4.336279859096055]
								}, {
									"case":	163,
									"scores":	[-4.336279859096055]
								}, {
									"case":	164,
									"scores":	[-4.336279859096055]
								}, {
									"case":	165,
									"scores":	[-4.336279859096055]
								}, {
									"case":	166,
									"scores":	[-4.336279859096055]
								}, {
									"case":	167,
									"scores":	[-4.336279859096055]
								}, {
									"case":	168,
									"scores":	[-4.336279859096055]
								}, {
									"case":	169,
									"scores":	[-4.336279859096055]
								}, {
									"case":	170,
									"scores":	[-4.336279859096055]
								}, {
									"case":	171,
									"scores":	[-4.336279859096055]
								}, {
									"case":	172,
									"scores":	[-4.336279859096055]
								}, {
									"case":	173,
									"scores":	[-4.336279859096055]
								}, {
									"case":	174,
									"scores":	[-4.336279859096055]
								}, {
									"case":	175,
									"scores":	[-4.336279859096055]
								}, {
									"case":	176,
									"scores":	[-4.336279859096055]
								}, {
									"case":	177,
									"scores":	[-4.336279859096055]
								}, {
									"case":	178,
									"scores":	[-4.336279859096055]
								}, {
									"case":	179,
									"scores":	[-4.336279859096055]
								}, {
									"case":	180,
									"scores":	[-4.336279859096055]
								}, {
									"case":	181,
									"scores":	[-4.336279859096055]
								}, {
									"case":	182,
									"scores":	[-4.336279859096055]
								}, {
									"case":	183,
									"scores":	[-4.336279859096055]
								}, {
									"case":	184,
									"scores":	[-4.336279859096055]
								}, {
									"case":	185,
									"scores":	[-4.336279859096055]
								}, {
									"case":	186,
									"scores":	[-4.336279859096055]
								}, {
									"case":	187,
									"scores":	[-4.336279859096055]
								}, {
									"case":	188,
									"scores":	[-4.336279859096055]
								}, {
									"case":	189,
									"scores":	[-4.336279859096055]
								}, {
									"case":	190,
									"scores":	[-4.336279859096055]
								}, {
									"case":	191,
									"scores":	[-4.336279859096055]
								}, {
									"case":	192,
									"scores":	[-4.336279859096055]
								}, {
									"case":	193,
									"scores":	[-4.336279859096055]
								}, {
									"case":	194,
									"scores":	[-4.336279859096055]
								}, {
									"case":	195,
									"scores":	[-4.336279859096055]
								}, {
									"case":	196,
									"scores":	[-4.336279859096055]
								}, {
									"case":	197,
									"scores":	[-4.336279859096055]
								}, {
									"case":	198,
									"scores":	[-4.336279859096055]
								}, {
									"case":	199,
									"scores":	[-4.336279859096055]
								}, {
									"case":	200,
									"scores":	[-4.336279859096055]
								}, {
									"case":	201,
									"scores":	[-4.336279859096055]
								}, {
									"case":	202,
									"scores":	[-4.336279859096055]
								}, {
									"case":	203,
									"scores":	[-4.336279859096055]
								}, {
									"case":	204,
									"scores":	[-4.336279859096055]
								}, {
									"case":	205,
									"scores":	[-6.2581497717960541, -7.8114194667960541, -6.0773131738960551, -7.7031882280960549, -7.8600132290960554, -8.5476756628960562, -7.541216342896055, -7.3175173158960547, -7.9080600660960547, -7.9800422618960543, -9.0733155727960551, -8.9477797457960548, -8.1141292568960548, -8.1141292568960548, -7.9037037090960549, -8.1497426228960563, -7.9492271418960545, -8.1561493550960549, -8.1087080650960548, -8.1256127095060542, -8.6490891428960559, -8.4030502290960563, -8.4030502290960563, -8.4030502290960563, -8.4030502290960563, -8.4030502290960563, -8.4030502290960563, -8.4030502290960563, -8.6490891428960559]
								}]
						}, {
							"switch":	29,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2305,
							"begin_column":	2,
							"end_line":	2305,
							"end_column":	48,
							"patch_codes":	["if (!__is_neg(\"\", \"L2305\", 29, &(intern), sizeof (intern), &(doc_props), sizeof (doc_props), &(intern->document), sizeof (intern->document), &(format), sizeof (format), &(doc_props->formatoutput), sizeof (doc_props->formatoutput), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(intern->ptr), sizeof (intern->ptr), &(nodep), sizeof (nodep), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(doc_props->validateonparse), sizeof (doc_props->validateonparse), &(doc_props->resolveexternals), sizeof (doc_props->resolveexternals), &(doc_props->preservewhitespace), sizeof (doc_props->preservewhitespace), &(doc_props->substituteentities), sizeof (doc_props->substituteentities), &(doc_props->stricterror), sizeof (doc_props->stricterror), &(doc_props->recover), sizeof (doc_props->recover), &(doc_props->classmap), sizeof (doc_props->classmap)))\n    doc_props = dom_get_doc_props(intern->document);\n", "{\n}\n", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((&buf)->document)", "doc_props = dom_get_doc_props((&doc_props)->document)", "doc_props = dom_get_doc_props((&docp)->document)", "doc_props = dom_get_doc_props((&format)->document)", "doc_props = dom_get_doc_props((&ht)->document)", "doc_props = dom_get_doc_props((&id)->document)", "doc_props = dom_get_doc_props((&intern)->document)", "doc_props = dom_get_doc_props((&mem)->document)", "doc_props = dom_get_doc_props((&node)->document)", "doc_props = dom_get_doc_props((&nodeobj)->document)", "doc_props = dom_get_doc_props((&nodep)->document)", "doc_props = dom_get_doc_props((&return_value)->document)", "doc_props = dom_get_doc_props((&return_value_ptr)->document)", "doc_props = dom_get_doc_props((&return_value_used)->document)", "doc_props = dom_get_doc_props((&size)->document)", "doc_props = dom_get_doc_props((&this_ptr)->document)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9009742074960547, -5.8362448279960546, -4.7935650480960552, -4.4530123690960552, -4.5971622890960546, -6.3243665795960542, -5.1958599890960553, -5.876398368096055, -4.9227868890960549, -6.1285303020960553, -6.1945773859960553, -6.0123314869960547, -5.8499270050960543, -5.8499270050960543, -5.3831322650960551, -6.1410203650960549, -5.3439579480960546, -5.369440948096055, -5.164839329096055, -5.1365992545060548, -5.9687338290960552, -5.2108457290960546, -5.2108457290960546, -5.2108457290960546, -5.2108457290960546, -5.2108457290960546, -5.2108457290960546, -5.2108457290960546, -5.9687338290960552]
								}, {
									"case":	2,
									"scores":	[-4.336279859096055]
								}, {
									"case":	3,
									"scores":	[-4.336279859096055]
								}, {
									"case":	4,
									"scores":	[-4.336279859096055]
								}, {
									"case":	5,
									"scores":	[-4.336279859096055]
								}, {
									"case":	6,
									"scores":	[-4.336279859096055]
								}, {
									"case":	7,
									"scores":	[-4.336279859096055]
								}, {
									"case":	8,
									"scores":	[-4.336279859096055]
								}, {
									"case":	9,
									"scores":	[-4.336279859096055]
								}, {
									"case":	10,
									"scores":	[-4.336279859096055]
								}, {
									"case":	11,
									"scores":	[-4.336279859096055]
								}, {
									"case":	12,
									"scores":	[-4.336279859096055]
								}, {
									"case":	13,
									"scores":	[-4.336279859096055]
								}, {
									"case":	14,
									"scores":	[-4.336279859096055]
								}, {
									"case":	15,
									"scores":	[-4.336279859096055]
								}, {
									"case":	16,
									"scores":	[-4.336279859096055]
								}, {
									"case":	17,
									"scores":	[-4.336279859096055]
								}, {
									"case":	18,
									"scores":	[-4.336279859096055]
								}, {
									"case":	19,
									"scores":	[-4.336279859096055]
								}, {
									"case":	20,
									"scores":	[-4.336279859096055]
								}, {
									"case":	21,
									"scores":	[-4.336279859096055]
								}]
						}]
				}, {
					"line":	2305,
					"switches":	[{
							"switch":	30,
							"types":	[[], [], [], [], [204], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], [], [], [], [], [], []],
							"begin_line":	2306,
							"begin_column":	0,
							"end_line":	2306,
							"end_column":	0,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props, 0, sizeof (*(doc_props)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2306\", 29, &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(doc_props->formatoutput), sizeof (doc_props->formatoutput), &(intern), sizeof (intern), &(intern->document), sizeof (intern->document), &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(intern->ptr), sizeof (intern->ptr), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(doc_props->validateonparse), sizeof (doc_props->validateonparse), &(doc_props->resolveexternals), sizeof (doc_props->resolveexternals), &(doc_props->preservewhitespace), sizeof (doc_props->preservewhitespace), &(doc_props->substituteentities), sizeof (doc_props->substituteentities), &(doc_props->stricterror), sizeof (doc_props->stricterror), &(doc_props->recover), sizeof (doc_props->recover), &(doc_props->classmap), sizeof (doc_props->classmap)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	2,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	3,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	4,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	5,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	6,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	7,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	8,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	9,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	10,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	11,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	12,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	13,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	14,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	15,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	16,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	17,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	18,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	19,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	20,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	21,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	22,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	23,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	24,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	25,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	26,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	27,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	28,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	29,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	30,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	31,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	32,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	33,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	34,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	35,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	36,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	37,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	38,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	39,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	40,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	41,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	42,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	43,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	44,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	45,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	46,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	47,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	48,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	49,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	50,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	51,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	52,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	53,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	54,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	55,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	56,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	57,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	58,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	59,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	60,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	61,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	62,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	63,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	64,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	65,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	66,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	67,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	68,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	69,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	70,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	71,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	72,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	73,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	74,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	75,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	76,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	77,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	78,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	79,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	80,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	81,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	82,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	83,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	84,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	85,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	86,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	87,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	88,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	89,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	90,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	91,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	92,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	93,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	94,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	95,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	96,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	97,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	98,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	99,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	100,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	101,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	102,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	103,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	104,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	105,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	106,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	107,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	108,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	109,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	110,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	111,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	112,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	113,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	114,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	115,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	116,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	117,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	118,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	119,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	120,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	121,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	122,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	123,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	124,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	125,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	126,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	127,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	128,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	129,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	130,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	131,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	132,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	133,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	134,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	135,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	136,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	137,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	138,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	139,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	140,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	141,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	142,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	143,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	144,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	145,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	146,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	147,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	148,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	149,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	150,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	151,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	152,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	153,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	154,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	155,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	156,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	157,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	158,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	159,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	160,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	161,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	162,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	163,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	164,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	165,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	166,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	167,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	168,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	169,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	170,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	171,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	172,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	173,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	174,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	175,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	176,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	177,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	178,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	179,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	180,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	181,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	182,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	183,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	184,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	185,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	186,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	187,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	188,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	189,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	190,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	191,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	192,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	193,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	194,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	195,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	196,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	197,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	198,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	199,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	200,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	201,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	202,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	203,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	204,
									"scores":	[-7.4316112417785352, -6.1718595724785352, -7.2736335217785353, -8.5699131524785361, -9.187861888578535, -8.9087779145785362, -9.134726955578536, -8.485618235578535, -7.9045686085785345, -8.4951113587785336, -9.6603668654785366, -9.5348310384785364, -8.6810664695785356, -8.6810664695785356, -8.4706409217785357, -8.7166798355785353, -8.5362784345785343, -8.7432006477785347, -8.6957593577785346, -8.712664002188534, -9.2361404355785339, -8.9901015217785343, -8.9901015217785343, -8.9901015217785343, -8.9901015217785343, -8.9901015217785343, -8.9901015217785343, -8.9901015217785343, -9.2361404355785339]
								}]
						}, {
							"switch":	31,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2306,
							"begin_column":	2,
							"end_line":	2306,
							"end_column":	22,
							"patch_codes":	["if (!__is_neg(\"\", \"L2306\", 29, &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(doc_props->formatoutput), sizeof (doc_props->formatoutput), &(intern), sizeof (intern), &(intern->document), sizeof (intern->document), &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(id), sizeof (id), &(docp), sizeof (docp), &(intern->ptr), sizeof (intern->ptr), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(buf), sizeof (buf), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(doc_props->validateonparse), sizeof (doc_props->validateonparse), &(doc_props->resolveexternals), sizeof (doc_props->resolveexternals), &(doc_props->preservewhitespace), sizeof (doc_props->preservewhitespace), &(doc_props->substituteentities), sizeof (doc_props->substituteentities), &(doc_props->stricterror), sizeof (doc_props->stricterror), &(doc_props->recover), sizeof (doc_props->recover), &(doc_props->classmap), sizeof (doc_props->classmap)))\n    format = doc_props->formatoutput;\n", "{\n}\n", "format = (&buf)->formatoutput", "format = (&doc_props)->formatoutput", "format = (&docp)->formatoutput", "format = (&format)->formatoutput", "format = (&ht)->formatoutput", "format = (&id)->formatoutput", "format = (&intern)->formatoutput", "format = (&mem)->formatoutput", "format = (&node)->formatoutput", "format = (&nodeobj)->formatoutput", "format = (&nodep)->formatoutput", "format = (&return_value)->formatoutput", "format = (&return_value_ptr)->formatoutput", "format = (&return_value_used)->formatoutput", "format = (&size)->formatoutput", "format = (&this_ptr)->formatoutput", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.8435709417785358, -6.1465564617785358, -6.686824031778535, -7.3667704901785349, -6.9777811767785352, -4.9630560807785358, -6.6019588822785353, -7.4469938577785353, -5.0098603607785348, -6.8936741817785343, -7.4263378996785363, -7.3414243006785362, -7.7318314517785343, -7.7318314517785343, -7.2650367117785351, -8.0229248117785357, -6.4683524617785348, -6.6545875617785359, -6.6803757217785344, -5.6662655471885355, -7.9396211217785346, -7.1817330217785349, -7.1817330217785349, -7.1817330217785349, -7.1817330217785349, -7.1817330217785349, -7.1817330217785349, -7.1817330217785349, -7.9396211217785346]
								}, {
									"case":	2,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	3,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	4,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	5,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	6,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	7,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	8,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	9,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	10,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	11,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	12,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	13,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	14,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	15,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	16,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	17,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	18,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	19,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	20,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	21,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	22,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	23,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	24,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	25,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	26,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	27,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	28,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	29,
									"scores":	[-4.3160771517785355]
								}]
						}]
				}, {
					"line":	2310,
					"switches":	[{
							"switch":	34,
							"types":	[[], [], [], [], [234], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], [], [], [], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [], [], []],
							"begin_line":	2311,
							"begin_column":	1,
							"end_line":	2311,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node, 0, sizeof (*(node)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.15445549323838]
								}, {
									"case":	2,
									"scores":	[-4.15445549323838]
								}, {
									"case":	3,
									"scores":	[-4.15445549323838]
								}, {
									"case":	4,
									"scores":	[-4.15445549323838]
								}, {
									"case":	5,
									"scores":	[-4.15445549323838]
								}, {
									"case":	6,
									"scores":	[-4.15445549323838]
								}, {
									"case":	7,
									"scores":	[-4.15445549323838]
								}, {
									"case":	8,
									"scores":	[-4.15445549323838]
								}, {
									"case":	9,
									"scores":	[-4.15445549323838]
								}, {
									"case":	10,
									"scores":	[-4.15445549323838]
								}, {
									"case":	11,
									"scores":	[-4.15445549323838]
								}, {
									"case":	12,
									"scores":	[-4.15445549323838]
								}, {
									"case":	13,
									"scores":	[-4.15445549323838]
								}, {
									"case":	14,
									"scores":	[-4.15445549323838]
								}, {
									"case":	15,
									"scores":	[-4.15445549323838]
								}, {
									"case":	16,
									"scores":	[-4.15445549323838]
								}, {
									"case":	17,
									"scores":	[-4.15445549323838]
								}, {
									"case":	18,
									"scores":	[-4.15445549323838]
								}, {
									"case":	19,
									"scores":	[-4.15445549323838]
								}, {
									"case":	20,
									"scores":	[-4.15445549323838]
								}, {
									"case":	21,
									"scores":	[-4.15445549323838]
								}, {
									"case":	22,
									"scores":	[-4.15445549323838]
								}, {
									"case":	23,
									"scores":	[-4.15445549323838]
								}, {
									"case":	24,
									"scores":	[-4.15445549323838]
								}, {
									"case":	25,
									"scores":	[-4.15445549323838]
								}, {
									"case":	26,
									"scores":	[-4.15445549323838]
								}, {
									"case":	27,
									"scores":	[-4.15445549323838]
								}, {
									"case":	28,
									"scores":	[-4.15445549323838]
								}, {
									"case":	29,
									"scores":	[-4.15445549323838]
								}, {
									"case":	30,
									"scores":	[-4.15445549323838]
								}, {
									"case":	31,
									"scores":	[-4.15445549323838]
								}, {
									"case":	32,
									"scores":	[-4.15445549323838]
								}, {
									"case":	33,
									"scores":	[-4.15445549323838]
								}, {
									"case":	34,
									"scores":	[-4.15445549323838]
								}, {
									"case":	35,
									"scores":	[-4.15445549323838]
								}, {
									"case":	36,
									"scores":	[-4.15445549323838]
								}, {
									"case":	37,
									"scores":	[-4.15445549323838]
								}, {
									"case":	38,
									"scores":	[-4.15445549323838]
								}, {
									"case":	39,
									"scores":	[-4.15445549323838]
								}, {
									"case":	40,
									"scores":	[-4.15445549323838]
								}, {
									"case":	41,
									"scores":	[-4.15445549323838]
								}, {
									"case":	42,
									"scores":	[-4.15445549323838]
								}, {
									"case":	43,
									"scores":	[-4.15445549323838]
								}, {
									"case":	44,
									"scores":	[-4.15445549323838]
								}, {
									"case":	45,
									"scores":	[-4.15445549323838]
								}, {
									"case":	46,
									"scores":	[-4.15445549323838]
								}, {
									"case":	47,
									"scores":	[-4.15445549323838]
								}, {
									"case":	48,
									"scores":	[-4.15445549323838]
								}, {
									"case":	49,
									"scores":	[-4.15445549323838]
								}, {
									"case":	50,
									"scores":	[-4.15445549323838]
								}, {
									"case":	51,
									"scores":	[-4.15445549323838]
								}, {
									"case":	52,
									"scores":	[-4.15445549323838]
								}, {
									"case":	53,
									"scores":	[-4.15445549323838]
								}, {
									"case":	54,
									"scores":	[-4.15445549323838]
								}, {
									"case":	55,
									"scores":	[-4.15445549323838]
								}, {
									"case":	56,
									"scores":	[-4.15445549323838]
								}, {
									"case":	57,
									"scores":	[-4.15445549323838]
								}, {
									"case":	58,
									"scores":	[-4.15445549323838]
								}, {
									"case":	59,
									"scores":	[-4.15445549323838]
								}, {
									"case":	60,
									"scores":	[-4.15445549323838]
								}, {
									"case":	61,
									"scores":	[-4.15445549323838]
								}, {
									"case":	62,
									"scores":	[-4.15445549323838]
								}, {
									"case":	63,
									"scores":	[-4.15445549323838]
								}, {
									"case":	64,
									"scores":	[-4.15445549323838]
								}, {
									"case":	65,
									"scores":	[-4.15445549323838]
								}, {
									"case":	66,
									"scores":	[-4.15445549323838]
								}, {
									"case":	67,
									"scores":	[-4.15445549323838]
								}, {
									"case":	68,
									"scores":	[-4.15445549323838]
								}, {
									"case":	69,
									"scores":	[-4.15445549323838]
								}, {
									"case":	70,
									"scores":	[-4.15445549323838]
								}, {
									"case":	71,
									"scores":	[-4.15445549323838]
								}, {
									"case":	72,
									"scores":	[-4.15445549323838]
								}, {
									"case":	73,
									"scores":	[-4.15445549323838]
								}, {
									"case":	74,
									"scores":	[-4.15445549323838]
								}, {
									"case":	75,
									"scores":	[-4.15445549323838]
								}, {
									"case":	76,
									"scores":	[-4.15445549323838]
								}, {
									"case":	77,
									"scores":	[-4.15445549323838]
								}, {
									"case":	78,
									"scores":	[-4.15445549323838]
								}, {
									"case":	79,
									"scores":	[-4.15445549323838]
								}, {
									"case":	80,
									"scores":	[-4.15445549323838]
								}, {
									"case":	81,
									"scores":	[-4.15445549323838]
								}, {
									"case":	82,
									"scores":	[-4.15445549323838]
								}, {
									"case":	83,
									"scores":	[-4.15445549323838]
								}, {
									"case":	84,
									"scores":	[-4.15445549323838]
								}, {
									"case":	85,
									"scores":	[-4.15445549323838]
								}, {
									"case":	86,
									"scores":	[-4.15445549323838]
								}, {
									"case":	87,
									"scores":	[-4.15445549323838]
								}, {
									"case":	88,
									"scores":	[-4.15445549323838]
								}, {
									"case":	89,
									"scores":	[-4.15445549323838]
								}, {
									"case":	90,
									"scores":	[-4.15445549323838]
								}, {
									"case":	91,
									"scores":	[-4.15445549323838]
								}, {
									"case":	92,
									"scores":	[-4.15445549323838]
								}, {
									"case":	93,
									"scores":	[-4.15445549323838]
								}, {
									"case":	94,
									"scores":	[-4.15445549323838]
								}, {
									"case":	95,
									"scores":	[-4.15445549323838]
								}, {
									"case":	96,
									"scores":	[-4.15445549323838]
								}, {
									"case":	97,
									"scores":	[-4.15445549323838]
								}, {
									"case":	98,
									"scores":	[-4.15445549323838]
								}, {
									"case":	99,
									"scores":	[-4.15445549323838]
								}, {
									"case":	100,
									"scores":	[-4.15445549323838]
								}, {
									"case":	101,
									"scores":	[-4.15445549323838]
								}, {
									"case":	102,
									"scores":	[-4.15445549323838]
								}, {
									"case":	103,
									"scores":	[-4.15445549323838]
								}, {
									"case":	104,
									"scores":	[-4.15445549323838]
								}, {
									"case":	105,
									"scores":	[-4.15445549323838]
								}, {
									"case":	106,
									"scores":	[-4.15445549323838]
								}, {
									"case":	107,
									"scores":	[-4.15445549323838]
								}, {
									"case":	108,
									"scores":	[-4.15445549323838]
								}, {
									"case":	109,
									"scores":	[-4.15445549323838]
								}, {
									"case":	110,
									"scores":	[-4.15445549323838]
								}, {
									"case":	111,
									"scores":	[-4.15445549323838]
								}, {
									"case":	112,
									"scores":	[-4.15445549323838]
								}, {
									"case":	113,
									"scores":	[-4.15445549323838]
								}, {
									"case":	114,
									"scores":	[-4.15445549323838]
								}, {
									"case":	115,
									"scores":	[-4.15445549323838]
								}, {
									"case":	116,
									"scores":	[-4.15445549323838]
								}, {
									"case":	117,
									"scores":	[-4.15445549323838]
								}, {
									"case":	118,
									"scores":	[-4.15445549323838]
								}, {
									"case":	119,
									"scores":	[-4.15445549323838]
								}, {
									"case":	120,
									"scores":	[-4.15445549323838]
								}, {
									"case":	121,
									"scores":	[-4.15445549323838]
								}, {
									"case":	122,
									"scores":	[-4.15445549323838]
								}, {
									"case":	123,
									"scores":	[-4.15445549323838]
								}, {
									"case":	124,
									"scores":	[-4.15445549323838]
								}, {
									"case":	125,
									"scores":	[-4.15445549323838]
								}, {
									"case":	126,
									"scores":	[-4.15445549323838]
								}, {
									"case":	127,
									"scores":	[-4.15445549323838]
								}, {
									"case":	128,
									"scores":	[-4.15445549323838]
								}, {
									"case":	129,
									"scores":	[-4.15445549323838]
								}, {
									"case":	130,
									"scores":	[-4.15445549323838]
								}, {
									"case":	131,
									"scores":	[-4.15445549323838]
								}, {
									"case":	132,
									"scores":	[-4.15445549323838]
								}, {
									"case":	133,
									"scores":	[-4.15445549323838]
								}, {
									"case":	134,
									"scores":	[-4.15445549323838]
								}, {
									"case":	135,
									"scores":	[-4.15445549323838]
								}, {
									"case":	136,
									"scores":	[-4.15445549323838]
								}, {
									"case":	137,
									"scores":	[-4.15445549323838]
								}, {
									"case":	138,
									"scores":	[-4.15445549323838]
								}, {
									"case":	139,
									"scores":	[-4.15445549323838]
								}, {
									"case":	140,
									"scores":	[-4.15445549323838]
								}, {
									"case":	141,
									"scores":	[-4.15445549323838]
								}, {
									"case":	142,
									"scores":	[-4.15445549323838]
								}, {
									"case":	143,
									"scores":	[-4.15445549323838]
								}, {
									"case":	144,
									"scores":	[-4.15445549323838]
								}, {
									"case":	145,
									"scores":	[-4.15445549323838]
								}, {
									"case":	146,
									"scores":	[-4.15445549323838]
								}, {
									"case":	147,
									"scores":	[-4.15445549323838]
								}, {
									"case":	148,
									"scores":	[-4.15445549323838]
								}, {
									"case":	149,
									"scores":	[-4.15445549323838]
								}, {
									"case":	150,
									"scores":	[-4.15445549323838]
								}, {
									"case":	151,
									"scores":	[-4.15445549323838]
								}, {
									"case":	152,
									"scores":	[-4.15445549323838]
								}, {
									"case":	153,
									"scores":	[-4.15445549323838]
								}, {
									"case":	154,
									"scores":	[-4.15445549323838]
								}, {
									"case":	155,
									"scores":	[-4.15445549323838]
								}, {
									"case":	156,
									"scores":	[-4.15445549323838]
								}, {
									"case":	157,
									"scores":	[-4.15445549323838]
								}, {
									"case":	158,
									"scores":	[-4.15445549323838]
								}, {
									"case":	159,
									"scores":	[-4.15445549323838]
								}, {
									"case":	160,
									"scores":	[-4.15445549323838]
								}, {
									"case":	161,
									"scores":	[-4.15445549323838]
								}, {
									"case":	162,
									"scores":	[-4.15445549323838]
								}, {
									"case":	163,
									"scores":	[-4.15445549323838]
								}, {
									"case":	164,
									"scores":	[-4.15445549323838]
								}, {
									"case":	165,
									"scores":	[-4.15445549323838]
								}, {
									"case":	166,
									"scores":	[-4.15445549323838]
								}, {
									"case":	167,
									"scores":	[-4.15445549323838]
								}, {
									"case":	168,
									"scores":	[-4.15445549323838]
								}, {
									"case":	169,
									"scores":	[-4.15445549323838]
								}, {
									"case":	170,
									"scores":	[-4.15445549323838]
								}, {
									"case":	171,
									"scores":	[-4.15445549323838]
								}, {
									"case":	172,
									"scores":	[-4.15445549323838]
								}, {
									"case":	173,
									"scores":	[-4.15445549323838]
								}, {
									"case":	174,
									"scores":	[-4.15445549323838]
								}, {
									"case":	175,
									"scores":	[-4.15445549323838]
								}, {
									"case":	176,
									"scores":	[-4.15445549323838]
								}, {
									"case":	177,
									"scores":	[-4.15445549323838]
								}, {
									"case":	178,
									"scores":	[-4.15445549323838]
								}, {
									"case":	179,
									"scores":	[-4.15445549323838]
								}, {
									"case":	180,
									"scores":	[-4.15445549323838]
								}, {
									"case":	181,
									"scores":	[-4.15445549323838]
								}, {
									"case":	182,
									"scores":	[-4.15445549323838]
								}, {
									"case":	183,
									"scores":	[-4.15445549323838]
								}, {
									"case":	184,
									"scores":	[-4.15445549323838]
								}, {
									"case":	185,
									"scores":	[-4.15445549323838]
								}, {
									"case":	186,
									"scores":	[-4.15445549323838]
								}, {
									"case":	187,
									"scores":	[-4.15445549323838]
								}, {
									"case":	188,
									"scores":	[-4.15445549323838]
								}, {
									"case":	189,
									"scores":	[-4.15445549323838]
								}, {
									"case":	190,
									"scores":	[-4.15445549323838]
								}, {
									"case":	191,
									"scores":	[-4.15445549323838]
								}, {
									"case":	192,
									"scores":	[-4.15445549323838]
								}, {
									"case":	193,
									"scores":	[-4.15445549323838]
								}, {
									"case":	194,
									"scores":	[-4.15445549323838]
								}, {
									"case":	195,
									"scores":	[-4.15445549323838]
								}, {
									"case":	196,
									"scores":	[-4.15445549323838]
								}, {
									"case":	197,
									"scores":	[-4.15445549323838]
								}, {
									"case":	198,
									"scores":	[-4.15445549323838]
								}, {
									"case":	199,
									"scores":	[-4.15445549323838]
								}, {
									"case":	200,
									"scores":	[-4.15445549323838]
								}, {
									"case":	201,
									"scores":	[-4.15445549323838]
								}, {
									"case":	202,
									"scores":	[-4.15445549323838]
								}, {
									"case":	203,
									"scores":	[-4.15445549323838]
								}, {
									"case":	204,
									"scores":	[-4.15445549323838]
								}, {
									"case":	205,
									"scores":	[-4.15445549323838]
								}, {
									"case":	206,
									"scores":	[-4.15445549323838]
								}, {
									"case":	207,
									"scores":	[-4.15445549323838]
								}, {
									"case":	208,
									"scores":	[-4.15445549323838]
								}, {
									"case":	209,
									"scores":	[-4.15445549323838]
								}, {
									"case":	210,
									"scores":	[-4.15445549323838]
								}, {
									"case":	211,
									"scores":	[-4.15445549323838]
								}, {
									"case":	212,
									"scores":	[-4.15445549323838]
								}, {
									"case":	213,
									"scores":	[-4.15445549323838]
								}, {
									"case":	214,
									"scores":	[-4.15445549323838]
								}, {
									"case":	215,
									"scores":	[-4.15445549323838]
								}, {
									"case":	216,
									"scores":	[-4.15445549323838]
								}, {
									"case":	217,
									"scores":	[-4.15445549323838]
								}, {
									"case":	218,
									"scores":	[-4.15445549323838]
								}, {
									"case":	219,
									"scores":	[-4.15445549323838]
								}, {
									"case":	220,
									"scores":	[-4.15445549323838]
								}, {
									"case":	221,
									"scores":	[-4.15445549323838]
								}, {
									"case":	222,
									"scores":	[-4.15445549323838]
								}, {
									"case":	223,
									"scores":	[-4.15445549323838]
								}, {
									"case":	224,
									"scores":	[-4.15445549323838]
								}, {
									"case":	225,
									"scores":	[-4.15445549323838]
								}, {
									"case":	226,
									"scores":	[-4.15445549323838]
								}, {
									"case":	227,
									"scores":	[-4.15445549323838]
								}, {
									"case":	228,
									"scores":	[-4.15445549323838]
								}, {
									"case":	229,
									"scores":	[-4.15445549323838]
								}, {
									"case":	230,
									"scores":	[-4.15445549323838]
								}, {
									"case":	231,
									"scores":	[-4.15445549323838]
								}, {
									"case":	232,
									"scores":	[-4.15445549323838]
								}, {
									"case":	233,
									"scores":	[-4.15445549323838]
								}, {
									"case":	234,
									"scores":	[-8.92659911143838, -8.42609280233838, -9.33747745843838, -8.94615535843838, -8.36253046443838, -9.95006800733838, -7.30259012443838, -8.51532986943838, -8.67077583743838, -8.45613540363838, -8.55649166443838, -8.81407683843838, -9.33548804163838, -8.52134186763838, -8.81556387243838, -8.81556387243838, -8.60513832463838, -8.85117723843838, -8.31045275063838, -8.56952495863838, -9.37063783843838, -9.12459892463838, -9.33548804163838, -9.12459892463838, -9.33548804163838, -9.37063783843838, -9.37063783843838, -9.37063783843838, -9.37063783843838, -9.37063783843838, -9.37063783843838, -9.33548804163838, -9.37063783843838, -9.37063783843838, -9.33548804163838, -9.12459892463838, -9.12459892463838]
								}]
						}, {
							"switch":	35,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2311,
							"begin_column":	3,
							"end_line":	2314,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra))) {\n    php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((node->doc != docp) || __is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra))) {\n    php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((node->doc != docp) && !__is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra))) {\n    php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.9920415924281463, -3.3427207324281452, -2.1699131934281461, -4.0831475939281452, -3.4874782294281452, -3.5741190834281444, -3.2144428139281453, -3.5804678934281449, -3.5360698334281455, -3.0443457924281456, -3.7690583834281446, -4.0828560834281449, -4.0052750934281445, -3.4804302834281446, -4.0861135234281445, -4.0861135234281445, -3.6193187834281448, -4.377206883428145, -3.0111702834281449, -3.3282254234281448, -4.2939031934281449, -3.5360150934281447, -4.0052750934281445, -3.5360150934281447, -4.0052750934281445, -4.2939031934281449, -4.2939031934281449, -4.2939031934281449, -4.2939031934281449, -4.2939031934281449, -4.2939031934281449, -4.0052750934281445, -4.2939031934281449, -4.2939031934281449, -4.0052750934281445, -3.5360150934281447, -3.5360150934281447]
								}, {
									"case":	2,
									"scores":	[-3.0013946294281442, -4.3520737694281459, -3.1792662304281443, -5.0925006309281464, -4.4968312664281456, -4.583472120428147, -4.2237958509281466, -4.5898209304281465, -4.5454228704281459, -4.0536988294281455, -4.7784114204281458, -5.0922091204281452, -5.0146281304281457, -4.4897833204281454, -5.0954665604281457, -5.0954665604281457, -4.6286718204281456, -5.3865599204281454, -4.0205233204281452, -4.3375784604281451, -5.3032562304281452, -4.5453681304281455, -5.0146281304281457, -4.5453681304281455, -5.0146281304281457, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.0146281304281457, -5.3032562304281452, -5.3032562304281452, -5.0146281304281457, -4.5453681304281455, -4.5453681304281455]
								}, {
									"case":	3,
									"scores":	[-3.0013946294281442, -4.3520737694281459, -3.1792662304281443, -5.0925006309281464, -4.4968312664281456, -4.583472120428147, -4.2237958509281466, -4.5898209304281465, -4.5454228704281459, -4.0536988294281455, -4.7784114204281458, -5.0922091204281452, -5.0146281304281457, -4.4897833204281454, -5.0954665604281457, -5.0954665604281457, -4.6286718204281456, -5.3865599204281454, -4.0205233204281452, -4.3375784604281451, -5.3032562304281452, -4.5453681304281455, -5.0146281304281457, -4.5453681304281455, -5.0146281304281457, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.3032562304281452, -5.0146281304281457, -5.3032562304281452, -5.3032562304281452, -5.0146281304281457, -4.5453681304281455, -4.5453681304281455]
								}]
						}, {
							"switch":	36,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2311,
							"begin_column":	3,
							"end_line":	2314,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    if (node->doc != docp) {\n        php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L2311\", 37, &(docp), sizeof (docp), &(node), sizeof (node), &(node->doc), sizeof (node->doc), &(return_value), sizeof (return_value), &(nodep), sizeof (nodep), &(intern), sizeof (intern), &(nodeobj), sizeof (nodeobj), &(intern->document), sizeof (intern->document), &(buf), sizeof (buf), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(intern->ptr), sizeof (intern->ptr), &(mem), sizeof (mem), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(intern->prop_handler), sizeof (intern->prop_handler), &(intern->handle), sizeof (intern->handle), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)) && (node->doc != docp)) {\n    php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.40420786223838, -5.75488700223838, -4.58207946323838, -6.49531386373838, -5.89964449923838, -5.98628535323838, -5.62660908373838, -5.99263416323838, -5.94823610323838, -5.45651206223838, -6.18122465323838, -6.49502235323838, -6.4174413632383782, -5.89259655323838, -6.49827979323838, -6.49827979323838, -6.03148505323838, -6.78937315323838, -5.42333655323838, -5.74039169323838, -6.7060694632383786, -5.94818136323838, -6.4174413632383782, -5.94818136323838, -6.4174413632383782, -6.7060694632383786, -6.7060694632383786, -6.7060694632383786, -6.7060694632383786, -6.7060694632383786, -6.7060694632383786, -6.4174413632383782, -6.7060694632383786, -6.7060694632383786, -6.4174413632383782, -5.94818136323838, -5.94818136323838]
								}, {
									"case":	2,
									"scores":	[-4.01362357023838, -5.36430271023838, -4.19149517123838, -6.10472957173838, -5.50906020723838, -5.59570106123838, -5.23602479173838, -5.60204987123838, -5.55765181123838, -5.06592777023838, -5.79064036123838, -6.10443806123838, -6.02685707123838, -5.50201226123838, -6.10769550123838, -6.10769550123838, -5.64090076123838, -6.39878886123838, -5.03275226123838, -5.34980740123838, -6.31548517123838, -5.55759707123838, -6.02685707123838, -5.55759707123838, -6.02685707123838, -6.31548517123838, -6.31548517123838, -6.31548517123838, -6.31548517123838, -6.31548517123838, -6.31548517123838, -6.02685707123838, -6.31548517123838, -6.31548517123838, -6.02685707123838, -5.55759707123838, -5.55759707123838]
								}]
						}]
				}, {
					"line":	2315,
					"switches":	[{
							"switch":	37,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2316,
							"begin_column":	1,
							"end_line":	2316,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2316\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(docp), sizeof (docp), &(node), sizeof (node), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(mem), sizeof (mem), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.13425278592086]
								}, {
									"case":	2,
									"scores":	[-4.13425278592086]
								}, {
									"case":	3,
									"scores":	[-4.13425278592086]
								}, {
									"case":	4,
									"scores":	[-4.13425278592086]
								}, {
									"case":	5,
									"scores":	[-4.13425278592086]
								}, {
									"case":	6,
									"scores":	[-4.13425278592086]
								}, {
									"case":	7,
									"scores":	[-4.13425278592086]
								}, {
									"case":	8,
									"scores":	[-4.13425278592086]
								}, {
									"case":	9,
									"scores":	[-4.13425278592086]
								}, {
									"case":	10,
									"scores":	[-4.13425278592086]
								}, {
									"case":	11,
									"scores":	[-4.13425278592086]
								}, {
									"case":	12,
									"scores":	[-4.13425278592086]
								}, {
									"case":	13,
									"scores":	[-4.13425278592086]
								}, {
									"case":	14,
									"scores":	[-4.13425278592086]
								}, {
									"case":	15,
									"scores":	[-4.13425278592086]
								}, {
									"case":	16,
									"scores":	[-4.13425278592086]
								}, {
									"case":	17,
									"scores":	[-4.13425278592086]
								}, {
									"case":	18,
									"scores":	[-4.13425278592086]
								}, {
									"case":	19,
									"scores":	[-4.13425278592086]
								}, {
									"case":	20,
									"scores":	[-4.13425278592086]
								}, {
									"case":	21,
									"scores":	[-4.13425278592086]
								}, {
									"case":	22,
									"scores":	[-4.13425278592086]
								}, {
									"case":	23,
									"scores":	[-4.13425278592086]
								}, {
									"case":	24,
									"scores":	[-4.13425278592086]
								}, {
									"case":	25,
									"scores":	[-4.13425278592086]
								}, {
									"case":	26,
									"scores":	[-4.13425278592086]
								}, {
									"case":	27,
									"scores":	[-4.13425278592086]
								}, {
									"case":	28,
									"scores":	[-4.13425278592086]
								}, {
									"case":	29,
									"scores":	[-4.13425278592086]
								}, {
									"case":	30,
									"scores":	[-4.13425278592086]
								}, {
									"case":	31,
									"scores":	[-4.13425278592086]
								}, {
									"case":	32,
									"scores":	[-4.13425278592086]
								}, {
									"case":	33,
									"scores":	[-4.13425278592086]
								}, {
									"case":	34,
									"scores":	[-4.13425278592086]
								}, {
									"case":	35,
									"scores":	[-4.13425278592086]
								}, {
									"case":	36,
									"scores":	[-4.13425278592086]
								}, {
									"case":	37,
									"scores":	[-4.13425278592086]
								}, {
									"case":	38,
									"scores":	[-4.13425278592086]
								}, {
									"case":	39,
									"scores":	[-4.13425278592086]
								}, {
									"case":	40,
									"scores":	[-4.13425278592086]
								}, {
									"case":	41,
									"scores":	[-4.13425278592086]
								}, {
									"case":	42,
									"scores":	[-4.13425278592086]
								}, {
									"case":	43,
									"scores":	[-4.13425278592086]
								}, {
									"case":	44,
									"scores":	[-4.13425278592086]
								}, {
									"case":	45,
									"scores":	[-4.13425278592086]
								}, {
									"case":	46,
									"scores":	[-4.13425278592086]
								}, {
									"case":	47,
									"scores":	[-4.13425278592086]
								}, {
									"case":	48,
									"scores":	[-4.13425278592086]
								}, {
									"case":	49,
									"scores":	[-4.13425278592086]
								}, {
									"case":	50,
									"scores":	[-4.13425278592086]
								}, {
									"case":	51,
									"scores":	[-4.13425278592086]
								}, {
									"case":	52,
									"scores":	[-4.13425278592086]
								}, {
									"case":	53,
									"scores":	[-4.13425278592086]
								}, {
									"case":	54,
									"scores":	[-4.13425278592086]
								}, {
									"case":	55,
									"scores":	[-4.13425278592086]
								}, {
									"case":	56,
									"scores":	[-4.13425278592086]
								}, {
									"case":	57,
									"scores":	[-4.13425278592086]
								}, {
									"case":	58,
									"scores":	[-4.13425278592086]
								}, {
									"case":	59,
									"scores":	[-4.13425278592086]
								}, {
									"case":	60,
									"scores":	[-4.13425278592086]
								}, {
									"case":	61,
									"scores":	[-4.13425278592086]
								}, {
									"case":	62,
									"scores":	[-4.13425278592086]
								}, {
									"case":	63,
									"scores":	[-4.13425278592086]
								}, {
									"case":	64,
									"scores":	[-4.13425278592086]
								}, {
									"case":	65,
									"scores":	[-4.13425278592086]
								}, {
									"case":	66,
									"scores":	[-4.13425278592086]
								}, {
									"case":	67,
									"scores":	[-4.13425278592086]
								}, {
									"case":	68,
									"scores":	[-4.13425278592086]
								}, {
									"case":	69,
									"scores":	[-4.13425278592086]
								}, {
									"case":	70,
									"scores":	[-4.13425278592086]
								}, {
									"case":	71,
									"scores":	[-4.13425278592086]
								}, {
									"case":	72,
									"scores":	[-4.13425278592086]
								}, {
									"case":	73,
									"scores":	[-4.13425278592086]
								}, {
									"case":	74,
									"scores":	[-4.13425278592086]
								}, {
									"case":	75,
									"scores":	[-4.13425278592086]
								}, {
									"case":	76,
									"scores":	[-4.13425278592086]
								}, {
									"case":	77,
									"scores":	[-4.13425278592086]
								}, {
									"case":	78,
									"scores":	[-4.13425278592086]
								}, {
									"case":	79,
									"scores":	[-4.13425278592086]
								}, {
									"case":	80,
									"scores":	[-4.13425278592086]
								}, {
									"case":	81,
									"scores":	[-4.13425278592086]
								}, {
									"case":	82,
									"scores":	[-4.13425278592086]
								}, {
									"case":	83,
									"scores":	[-4.13425278592086]
								}, {
									"case":	84,
									"scores":	[-4.13425278592086]
								}, {
									"case":	85,
									"scores":	[-4.13425278592086]
								}, {
									"case":	86,
									"scores":	[-4.13425278592086]
								}, {
									"case":	87,
									"scores":	[-4.13425278592086]
								}, {
									"case":	88,
									"scores":	[-4.13425278592086]
								}, {
									"case":	89,
									"scores":	[-4.13425278592086]
								}, {
									"case":	90,
									"scores":	[-4.13425278592086]
								}, {
									"case":	91,
									"scores":	[-4.13425278592086]
								}, {
									"case":	92,
									"scores":	[-4.13425278592086]
								}, {
									"case":	93,
									"scores":	[-4.13425278592086]
								}, {
									"case":	94,
									"scores":	[-4.13425278592086]
								}, {
									"case":	95,
									"scores":	[-4.13425278592086]
								}, {
									"case":	96,
									"scores":	[-4.13425278592086]
								}, {
									"case":	97,
									"scores":	[-4.13425278592086]
								}, {
									"case":	98,
									"scores":	[-4.13425278592086]
								}, {
									"case":	99,
									"scores":	[-4.13425278592086]
								}, {
									"case":	100,
									"scores":	[-4.13425278592086]
								}, {
									"case":	101,
									"scores":	[-4.13425278592086]
								}, {
									"case":	102,
									"scores":	[-4.13425278592086]
								}, {
									"case":	103,
									"scores":	[-4.13425278592086]
								}, {
									"case":	104,
									"scores":	[-4.13425278592086]
								}, {
									"case":	105,
									"scores":	[-4.13425278592086]
								}, {
									"case":	106,
									"scores":	[-4.13425278592086]
								}, {
									"case":	107,
									"scores":	[-4.13425278592086]
								}, {
									"case":	108,
									"scores":	[-4.13425278592086]
								}, {
									"case":	109,
									"scores":	[-4.13425278592086]
								}, {
									"case":	110,
									"scores":	[-4.13425278592086]
								}, {
									"case":	111,
									"scores":	[-4.13425278592086]
								}, {
									"case":	112,
									"scores":	[-4.13425278592086]
								}, {
									"case":	113,
									"scores":	[-4.13425278592086]
								}, {
									"case":	114,
									"scores":	[-4.13425278592086]
								}, {
									"case":	115,
									"scores":	[-4.13425278592086]
								}, {
									"case":	116,
									"scores":	[-4.13425278592086]
								}, {
									"case":	117,
									"scores":	[-4.13425278592086]
								}, {
									"case":	118,
									"scores":	[-4.13425278592086]
								}, {
									"case":	119,
									"scores":	[-4.13425278592086]
								}, {
									"case":	120,
									"scores":	[-4.13425278592086]
								}, {
									"case":	121,
									"scores":	[-4.13425278592086]
								}, {
									"case":	122,
									"scores":	[-4.13425278592086]
								}, {
									"case":	123,
									"scores":	[-4.13425278592086]
								}, {
									"case":	124,
									"scores":	[-4.13425278592086]
								}, {
									"case":	125,
									"scores":	[-4.13425278592086]
								}, {
									"case":	126,
									"scores":	[-4.13425278592086]
								}, {
									"case":	127,
									"scores":	[-4.13425278592086]
								}, {
									"case":	128,
									"scores":	[-4.13425278592086]
								}, {
									"case":	129,
									"scores":	[-4.13425278592086]
								}, {
									"case":	130,
									"scores":	[-4.13425278592086]
								}, {
									"case":	131,
									"scores":	[-4.13425278592086]
								}, {
									"case":	132,
									"scores":	[-4.13425278592086]
								}, {
									"case":	133,
									"scores":	[-4.13425278592086]
								}, {
									"case":	134,
									"scores":	[-4.13425278592086]
								}, {
									"case":	135,
									"scores":	[-4.13425278592086]
								}, {
									"case":	136,
									"scores":	[-4.13425278592086]
								}, {
									"case":	137,
									"scores":	[-4.13425278592086]
								}, {
									"case":	138,
									"scores":	[-4.13425278592086]
								}, {
									"case":	139,
									"scores":	[-4.13425278592086]
								}, {
									"case":	140,
									"scores":	[-4.13425278592086]
								}, {
									"case":	141,
									"scores":	[-4.13425278592086]
								}, {
									"case":	142,
									"scores":	[-4.13425278592086]
								}, {
									"case":	143,
									"scores":	[-4.13425278592086]
								}, {
									"case":	144,
									"scores":	[-4.13425278592086]
								}, {
									"case":	145,
									"scores":	[-4.13425278592086]
								}, {
									"case":	146,
									"scores":	[-4.13425278592086]
								}, {
									"case":	147,
									"scores":	[-4.13425278592086]
								}, {
									"case":	148,
									"scores":	[-4.13425278592086]
								}, {
									"case":	149,
									"scores":	[-4.13425278592086]
								}, {
									"case":	150,
									"scores":	[-4.13425278592086]
								}, {
									"case":	151,
									"scores":	[-4.13425278592086]
								}, {
									"case":	152,
									"scores":	[-4.13425278592086]
								}, {
									"case":	153,
									"scores":	[-4.13425278592086]
								}, {
									"case":	154,
									"scores":	[-4.13425278592086]
								}, {
									"case":	155,
									"scores":	[-4.13425278592086]
								}, {
									"case":	156,
									"scores":	[-4.13425278592086]
								}, {
									"case":	157,
									"scores":	[-4.13425278592086]
								}, {
									"case":	158,
									"scores":	[-4.13425278592086]
								}, {
									"case":	159,
									"scores":	[-4.13425278592086]
								}, {
									"case":	160,
									"scores":	[-4.13425278592086]
								}, {
									"case":	161,
									"scores":	[-4.13425278592086]
								}, {
									"case":	162,
									"scores":	[-4.13425278592086]
								}, {
									"case":	163,
									"scores":	[-4.13425278592086]
								}, {
									"case":	164,
									"scores":	[-4.13425278592086]
								}, {
									"case":	165,
									"scores":	[-4.13425278592086]
								}, {
									"case":	166,
									"scores":	[-4.13425278592086]
								}, {
									"case":	167,
									"scores":	[-4.13425278592086]
								}, {
									"case":	168,
									"scores":	[-4.13425278592086]
								}, {
									"case":	169,
									"scores":	[-4.13425278592086]
								}, {
									"case":	170,
									"scores":	[-4.13425278592086]
								}, {
									"case":	171,
									"scores":	[-4.13425278592086]
								}, {
									"case":	172,
									"scores":	[-4.13425278592086]
								}, {
									"case":	173,
									"scores":	[-4.13425278592086]
								}, {
									"case":	174,
									"scores":	[-4.13425278592086]
								}, {
									"case":	175,
									"scores":	[-4.13425278592086]
								}, {
									"case":	176,
									"scores":	[-4.13425278592086]
								}, {
									"case":	177,
									"scores":	[-4.13425278592086]
								}, {
									"case":	178,
									"scores":	[-4.13425278592086]
								}, {
									"case":	179,
									"scores":	[-4.13425278592086]
								}, {
									"case":	180,
									"scores":	[-4.13425278592086]
								}, {
									"case":	181,
									"scores":	[-4.13425278592086]
								}, {
									"case":	182,
									"scores":	[-4.13425278592086]
								}, {
									"case":	183,
									"scores":	[-4.13425278592086]
								}, {
									"case":	184,
									"scores":	[-4.13425278592086]
								}, {
									"case":	185,
									"scores":	[-4.13425278592086]
								}, {
									"case":	186,
									"scores":	[-4.13425278592086]
								}, {
									"case":	187,
									"scores":	[-4.13425278592086]
								}, {
									"case":	188,
									"scores":	[-4.13425278592086]
								}, {
									"case":	189,
									"scores":	[-4.13425278592086]
								}, {
									"case":	190,
									"scores":	[-4.13425278592086]
								}, {
									"case":	191,
									"scores":	[-4.13425278592086]
								}, {
									"case":	192,
									"scores":	[-4.13425278592086]
								}, {
									"case":	193,
									"scores":	[-4.13425278592086]
								}, {
									"case":	194,
									"scores":	[-4.13425278592086]
								}, {
									"case":	195,
									"scores":	[-4.13425278592086]
								}, {
									"case":	196,
									"scores":	[-4.13425278592086]
								}, {
									"case":	197,
									"scores":	[-4.13425278592086]
								}, {
									"case":	198,
									"scores":	[-4.13425278592086]
								}, {
									"case":	199,
									"scores":	[-4.13425278592086]
								}, {
									"case":	200,
									"scores":	[-4.13425278592086]
								}, {
									"case":	201,
									"scores":	[-4.13425278592086]
								}, {
									"case":	202,
									"scores":	[-4.13425278592086]
								}, {
									"case":	203,
									"scores":	[-4.13425278592086]
								}, {
									"case":	204,
									"scores":	[-4.13425278592086]
								}, {
									"case":	205,
									"scores":	[-4.13425278592086]
								}, {
									"case":	206,
									"scores":	[-4.13425278592086]
								}, {
									"case":	207,
									"scores":	[-4.13425278592086]
								}, {
									"case":	208,
									"scores":	[-4.13425278592086]
								}, {
									"case":	209,
									"scores":	[-4.13425278592086]
								}, {
									"case":	210,
									"scores":	[-4.13425278592086]
								}, {
									"case":	211,
									"scores":	[-4.13425278592086]
								}, {
									"case":	212,
									"scores":	[-4.13425278592086]
								}, {
									"case":	213,
									"scores":	[-4.13425278592086]
								}, {
									"case":	214,
									"scores":	[-4.13425278592086]
								}, {
									"case":	215,
									"scores":	[-4.13425278592086]
								}, {
									"case":	216,
									"scores":	[-4.13425278592086]
								}, {
									"case":	217,
									"scores":	[-4.13425278592086]
								}, {
									"case":	218,
									"scores":	[-4.13425278592086]
								}, {
									"case":	219,
									"scores":	[-4.13425278592086]
								}, {
									"case":	220,
									"scores":	[-4.13425278592086]
								}, {
									"case":	221,
									"scores":	[-4.13425278592086]
								}, {
									"case":	222,
									"scores":	[-4.13425278592086]
								}, {
									"case":	223,
									"scores":	[-4.13425278592086]
								}, {
									"case":	224,
									"scores":	[-4.13425278592086]
								}, {
									"case":	225,
									"scores":	[-4.13425278592086]
								}, {
									"case":	226,
									"scores":	[-4.13425278592086]
								}, {
									"case":	227,
									"scores":	[-4.13425278592086]
								}, {
									"case":	228,
									"scores":	[-4.13425278592086]
								}, {
									"case":	229,
									"scores":	[-4.13425278592086]
								}, {
									"case":	230,
									"scores":	[-4.13425278592086]
								}, {
									"case":	231,
									"scores":	[-4.13425278592086]
								}, {
									"case":	232,
									"scores":	[-6.87005455112086, -8.00406235112086, -8.42291377112086, -7.52586248412086, -6.74809870412086, -7.42043745712086, -6.36049711712086, -7.51404239632086, -7.54785038032086, -7.61439865712086, -7.87198383112086, -7.36835974332086, -7.87347086512086, -7.87347086512086, -7.66304531732086, -7.90908423112086, -7.62743195132086]
								}]
						}, {
							"switch":	38,
							"types":	[[], [], [1], [], [], [], [3], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2316,
							"begin_column":	3,
							"end_line":	2316,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L2316\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(docp), sizeof (docp), &(node), sizeof (node), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(mem), sizeof (mem), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree)))\n    buf = xmlBufferCreate();\n", "{\n}\n", "buf = (buf)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.92387822592086, -6.45662385642086, -6.78239363642086, -6.10275201492086, -5.85061848542086, -5.86095449192086, -5.58791907642086, -5.41782205492086, -5.72079996592086, -6.14253464592086, -6.45633234592086, -5.38464654592086, -6.45958978592086, -6.45958978592086, -5.99279504592086, -6.75068314592086, -5.70170168592086]
								}, {
									"case":	2,
									"scores":	[-4.13425278592086]
								}, {
									"case":	3,
									"scores":	[-4.13425278592086]
								}]
						}]
				}, {
					"line":	2316,
					"switches":	[{
							"switch":	39,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2317,
							"begin_column":	1,
							"end_line":	2317,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.11405007860334]
								}, {
									"case":	2,
									"scores":	[-4.11405007860334]
								}, {
									"case":	3,
									"scores":	[-4.11405007860334]
								}, {
									"case":	4,
									"scores":	[-4.11405007860334]
								}, {
									"case":	5,
									"scores":	[-4.11405007860334]
								}, {
									"case":	6,
									"scores":	[-4.11405007860334]
								}, {
									"case":	7,
									"scores":	[-4.11405007860334]
								}, {
									"case":	8,
									"scores":	[-4.11405007860334]
								}, {
									"case":	9,
									"scores":	[-4.11405007860334]
								}, {
									"case":	10,
									"scores":	[-4.11405007860334]
								}, {
									"case":	11,
									"scores":	[-4.11405007860334]
								}, {
									"case":	12,
									"scores":	[-4.11405007860334]
								}, {
									"case":	13,
									"scores":	[-4.11405007860334]
								}, {
									"case":	14,
									"scores":	[-4.11405007860334]
								}, {
									"case":	15,
									"scores":	[-4.11405007860334]
								}, {
									"case":	16,
									"scores":	[-4.11405007860334]
								}, {
									"case":	17,
									"scores":	[-4.11405007860334]
								}, {
									"case":	18,
									"scores":	[-4.11405007860334]
								}, {
									"case":	19,
									"scores":	[-4.11405007860334]
								}, {
									"case":	20,
									"scores":	[-4.11405007860334]
								}, {
									"case":	21,
									"scores":	[-4.11405007860334]
								}, {
									"case":	22,
									"scores":	[-4.11405007860334]
								}, {
									"case":	23,
									"scores":	[-4.11405007860334]
								}, {
									"case":	24,
									"scores":	[-4.11405007860334]
								}, {
									"case":	25,
									"scores":	[-4.11405007860334]
								}, {
									"case":	26,
									"scores":	[-4.11405007860334]
								}, {
									"case":	27,
									"scores":	[-4.11405007860334]
								}, {
									"case":	28,
									"scores":	[-4.11405007860334]
								}, {
									"case":	29,
									"scores":	[-4.11405007860334]
								}, {
									"case":	30,
									"scores":	[-4.11405007860334]
								}, {
									"case":	31,
									"scores":	[-4.11405007860334]
								}, {
									"case":	32,
									"scores":	[-4.11405007860334]
								}, {
									"case":	33,
									"scores":	[-4.11405007860334]
								}, {
									"case":	34,
									"scores":	[-4.11405007860334]
								}, {
									"case":	35,
									"scores":	[-4.11405007860334]
								}, {
									"case":	36,
									"scores":	[-4.11405007860334]
								}, {
									"case":	37,
									"scores":	[-4.11405007860334]
								}, {
									"case":	38,
									"scores":	[-4.11405007860334]
								}, {
									"case":	39,
									"scores":	[-4.11405007860334]
								}, {
									"case":	40,
									"scores":	[-4.11405007860334]
								}, {
									"case":	41,
									"scores":	[-4.11405007860334]
								}, {
									"case":	42,
									"scores":	[-4.11405007860334]
								}, {
									"case":	43,
									"scores":	[-4.11405007860334]
								}, {
									"case":	44,
									"scores":	[-4.11405007860334]
								}, {
									"case":	45,
									"scores":	[-4.11405007860334]
								}, {
									"case":	46,
									"scores":	[-4.11405007860334]
								}, {
									"case":	47,
									"scores":	[-4.11405007860334]
								}, {
									"case":	48,
									"scores":	[-4.11405007860334]
								}, {
									"case":	49,
									"scores":	[-4.11405007860334]
								}, {
									"case":	50,
									"scores":	[-4.11405007860334]
								}, {
									"case":	51,
									"scores":	[-4.11405007860334]
								}, {
									"case":	52,
									"scores":	[-4.11405007860334]
								}, {
									"case":	53,
									"scores":	[-4.11405007860334]
								}, {
									"case":	54,
									"scores":	[-4.11405007860334]
								}, {
									"case":	55,
									"scores":	[-4.11405007860334]
								}, {
									"case":	56,
									"scores":	[-4.11405007860334]
								}, {
									"case":	57,
									"scores":	[-4.11405007860334]
								}, {
									"case":	58,
									"scores":	[-4.11405007860334]
								}, {
									"case":	59,
									"scores":	[-4.11405007860334]
								}, {
									"case":	60,
									"scores":	[-4.11405007860334]
								}, {
									"case":	61,
									"scores":	[-4.11405007860334]
								}, {
									"case":	62,
									"scores":	[-4.11405007860334]
								}, {
									"case":	63,
									"scores":	[-4.11405007860334]
								}, {
									"case":	64,
									"scores":	[-4.11405007860334]
								}, {
									"case":	65,
									"scores":	[-4.11405007860334]
								}, {
									"case":	66,
									"scores":	[-4.11405007860334]
								}, {
									"case":	67,
									"scores":	[-4.11405007860334]
								}, {
									"case":	68,
									"scores":	[-4.11405007860334]
								}, {
									"case":	69,
									"scores":	[-4.11405007860334]
								}, {
									"case":	70,
									"scores":	[-4.11405007860334]
								}, {
									"case":	71,
									"scores":	[-4.11405007860334]
								}, {
									"case":	72,
									"scores":	[-4.11405007860334]
								}, {
									"case":	73,
									"scores":	[-4.11405007860334]
								}, {
									"case":	74,
									"scores":	[-4.11405007860334]
								}, {
									"case":	75,
									"scores":	[-4.11405007860334]
								}, {
									"case":	76,
									"scores":	[-4.11405007860334]
								}, {
									"case":	77,
									"scores":	[-4.11405007860334]
								}, {
									"case":	78,
									"scores":	[-4.11405007860334]
								}, {
									"case":	79,
									"scores":	[-4.11405007860334]
								}, {
									"case":	80,
									"scores":	[-4.11405007860334]
								}, {
									"case":	81,
									"scores":	[-4.11405007860334]
								}, {
									"case":	82,
									"scores":	[-4.11405007860334]
								}, {
									"case":	83,
									"scores":	[-4.11405007860334]
								}, {
									"case":	84,
									"scores":	[-4.11405007860334]
								}, {
									"case":	85,
									"scores":	[-4.11405007860334]
								}, {
									"case":	86,
									"scores":	[-4.11405007860334]
								}, {
									"case":	87,
									"scores":	[-4.11405007860334]
								}, {
									"case":	88,
									"scores":	[-4.11405007860334]
								}, {
									"case":	89,
									"scores":	[-4.11405007860334]
								}, {
									"case":	90,
									"scores":	[-4.11405007860334]
								}, {
									"case":	91,
									"scores":	[-4.11405007860334]
								}, {
									"case":	92,
									"scores":	[-4.11405007860334]
								}, {
									"case":	93,
									"scores":	[-4.11405007860334]
								}, {
									"case":	94,
									"scores":	[-4.11405007860334]
								}, {
									"case":	95,
									"scores":	[-4.11405007860334]
								}, {
									"case":	96,
									"scores":	[-4.11405007860334]
								}, {
									"case":	97,
									"scores":	[-4.11405007860334]
								}, {
									"case":	98,
									"scores":	[-4.11405007860334]
								}, {
									"case":	99,
									"scores":	[-4.11405007860334]
								}, {
									"case":	100,
									"scores":	[-4.11405007860334]
								}, {
									"case":	101,
									"scores":	[-4.11405007860334]
								}, {
									"case":	102,
									"scores":	[-4.11405007860334]
								}, {
									"case":	103,
									"scores":	[-4.11405007860334]
								}, {
									"case":	104,
									"scores":	[-4.11405007860334]
								}, {
									"case":	105,
									"scores":	[-4.11405007860334]
								}, {
									"case":	106,
									"scores":	[-4.11405007860334]
								}, {
									"case":	107,
									"scores":	[-4.11405007860334]
								}, {
									"case":	108,
									"scores":	[-4.11405007860334]
								}, {
									"case":	109,
									"scores":	[-4.11405007860334]
								}, {
									"case":	110,
									"scores":	[-4.11405007860334]
								}, {
									"case":	111,
									"scores":	[-4.11405007860334]
								}, {
									"case":	112,
									"scores":	[-4.11405007860334]
								}, {
									"case":	113,
									"scores":	[-4.11405007860334]
								}, {
									"case":	114,
									"scores":	[-4.11405007860334]
								}, {
									"case":	115,
									"scores":	[-4.11405007860334]
								}, {
									"case":	116,
									"scores":	[-4.11405007860334]
								}, {
									"case":	117,
									"scores":	[-4.11405007860334]
								}, {
									"case":	118,
									"scores":	[-4.11405007860334]
								}, {
									"case":	119,
									"scores":	[-4.11405007860334]
								}, {
									"case":	120,
									"scores":	[-4.11405007860334]
								}, {
									"case":	121,
									"scores":	[-4.11405007860334]
								}, {
									"case":	122,
									"scores":	[-4.11405007860334]
								}, {
									"case":	123,
									"scores":	[-4.11405007860334]
								}, {
									"case":	124,
									"scores":	[-4.11405007860334]
								}, {
									"case":	125,
									"scores":	[-4.11405007860334]
								}, {
									"case":	126,
									"scores":	[-4.11405007860334]
								}, {
									"case":	127,
									"scores":	[-4.11405007860334]
								}, {
									"case":	128,
									"scores":	[-4.11405007860334]
								}, {
									"case":	129,
									"scores":	[-4.11405007860334]
								}, {
									"case":	130,
									"scores":	[-4.11405007860334]
								}, {
									"case":	131,
									"scores":	[-4.11405007860334]
								}, {
									"case":	132,
									"scores":	[-4.11405007860334]
								}, {
									"case":	133,
									"scores":	[-4.11405007860334]
								}, {
									"case":	134,
									"scores":	[-4.11405007860334]
								}, {
									"case":	135,
									"scores":	[-4.11405007860334]
								}, {
									"case":	136,
									"scores":	[-4.11405007860334]
								}, {
									"case":	137,
									"scores":	[-4.11405007860334]
								}, {
									"case":	138,
									"scores":	[-4.11405007860334]
								}, {
									"case":	139,
									"scores":	[-4.11405007860334]
								}, {
									"case":	140,
									"scores":	[-4.11405007860334]
								}, {
									"case":	141,
									"scores":	[-4.11405007860334]
								}, {
									"case":	142,
									"scores":	[-4.11405007860334]
								}, {
									"case":	143,
									"scores":	[-4.11405007860334]
								}, {
									"case":	144,
									"scores":	[-4.11405007860334]
								}, {
									"case":	145,
									"scores":	[-4.11405007860334]
								}, {
									"case":	146,
									"scores":	[-4.11405007860334]
								}, {
									"case":	147,
									"scores":	[-4.11405007860334]
								}, {
									"case":	148,
									"scores":	[-4.11405007860334]
								}, {
									"case":	149,
									"scores":	[-4.11405007860334]
								}, {
									"case":	150,
									"scores":	[-4.11405007860334]
								}, {
									"case":	151,
									"scores":	[-4.11405007860334]
								}, {
									"case":	152,
									"scores":	[-4.11405007860334]
								}, {
									"case":	153,
									"scores":	[-4.11405007860334]
								}, {
									"case":	154,
									"scores":	[-4.11405007860334]
								}, {
									"case":	155,
									"scores":	[-4.11405007860334]
								}, {
									"case":	156,
									"scores":	[-4.11405007860334]
								}, {
									"case":	157,
									"scores":	[-4.11405007860334]
								}, {
									"case":	158,
									"scores":	[-4.11405007860334]
								}, {
									"case":	159,
									"scores":	[-4.11405007860334]
								}, {
									"case":	160,
									"scores":	[-4.11405007860334]
								}, {
									"case":	161,
									"scores":	[-4.11405007860334]
								}, {
									"case":	162,
									"scores":	[-4.11405007860334]
								}, {
									"case":	163,
									"scores":	[-4.11405007860334]
								}, {
									"case":	164,
									"scores":	[-4.11405007860334]
								}, {
									"case":	165,
									"scores":	[-4.11405007860334]
								}, {
									"case":	166,
									"scores":	[-4.11405007860334]
								}, {
									"case":	167,
									"scores":	[-4.11405007860334]
								}, {
									"case":	168,
									"scores":	[-4.11405007860334]
								}, {
									"case":	169,
									"scores":	[-4.11405007860334]
								}, {
									"case":	170,
									"scores":	[-4.11405007860334]
								}, {
									"case":	171,
									"scores":	[-4.11405007860334]
								}, {
									"case":	172,
									"scores":	[-4.11405007860334]
								}, {
									"case":	173,
									"scores":	[-4.11405007860334]
								}, {
									"case":	174,
									"scores":	[-4.11405007860334]
								}, {
									"case":	175,
									"scores":	[-4.11405007860334]
								}, {
									"case":	176,
									"scores":	[-4.11405007860334]
								}, {
									"case":	177,
									"scores":	[-4.11405007860334]
								}, {
									"case":	178,
									"scores":	[-4.11405007860334]
								}, {
									"case":	179,
									"scores":	[-4.11405007860334]
								}, {
									"case":	180,
									"scores":	[-4.11405007860334]
								}, {
									"case":	181,
									"scores":	[-4.11405007860334]
								}, {
									"case":	182,
									"scores":	[-4.11405007860334]
								}, {
									"case":	183,
									"scores":	[-4.11405007860334]
								}, {
									"case":	184,
									"scores":	[-4.11405007860334]
								}, {
									"case":	185,
									"scores":	[-4.11405007860334]
								}, {
									"case":	186,
									"scores":	[-4.11405007860334]
								}, {
									"case":	187,
									"scores":	[-4.11405007860334]
								}, {
									"case":	188,
									"scores":	[-4.11405007860334]
								}, {
									"case":	189,
									"scores":	[-4.11405007860334]
								}, {
									"case":	190,
									"scores":	[-4.11405007860334]
								}, {
									"case":	191,
									"scores":	[-4.11405007860334]
								}, {
									"case":	192,
									"scores":	[-4.11405007860334]
								}, {
									"case":	193,
									"scores":	[-4.11405007860334]
								}, {
									"case":	194,
									"scores":	[-4.11405007860334]
								}, {
									"case":	195,
									"scores":	[-4.11405007860334]
								}, {
									"case":	196,
									"scores":	[-4.11405007860334]
								}, {
									"case":	197,
									"scores":	[-4.11405007860334]
								}, {
									"case":	198,
									"scores":	[-4.11405007860334]
								}, {
									"case":	199,
									"scores":	[-4.11405007860334]
								}, {
									"case":	200,
									"scores":	[-4.11405007860334]
								}, {
									"case":	201,
									"scores":	[-4.11405007860334]
								}, {
									"case":	202,
									"scores":	[-4.11405007860334]
								}, {
									"case":	203,
									"scores":	[-4.11405007860334]
								}, {
									"case":	204,
									"scores":	[-4.11405007860334]
								}, {
									"case":	205,
									"scores":	[-4.11405007860334]
								}, {
									"case":	206,
									"scores":	[-4.11405007860334]
								}, {
									"case":	207,
									"scores":	[-4.11405007860334]
								}, {
									"case":	208,
									"scores":	[-4.11405007860334]
								}, {
									"case":	209,
									"scores":	[-4.11405007860334]
								}, {
									"case":	210,
									"scores":	[-4.11405007860334]
								}, {
									"case":	211,
									"scores":	[-4.11405007860334]
								}, {
									"case":	212,
									"scores":	[-4.11405007860334]
								}, {
									"case":	213,
									"scores":	[-4.11405007860334]
								}, {
									"case":	214,
									"scores":	[-4.11405007860334]
								}, {
									"case":	215,
									"scores":	[-4.11405007860334]
								}, {
									"case":	216,
									"scores":	[-4.11405007860334]
								}, {
									"case":	217,
									"scores":	[-4.11405007860334]
								}, {
									"case":	218,
									"scores":	[-4.11405007860334]
								}, {
									"case":	219,
									"scores":	[-4.11405007860334]
								}, {
									"case":	220,
									"scores":	[-4.11405007860334]
								}, {
									"case":	221,
									"scores":	[-4.11405007860334]
								}, {
									"case":	222,
									"scores":	[-4.11405007860334]
								}, {
									"case":	223,
									"scores":	[-4.11405007860334]
								}, {
									"case":	224,
									"scores":	[-4.11405007860334]
								}, {
									"case":	225,
									"scores":	[-4.11405007860334]
								}, {
									"case":	226,
									"scores":	[-4.11405007860334]
								}, {
									"case":	227,
									"scores":	[-4.11405007860334]
								}, {
									"case":	228,
									"scores":	[-4.11405007860334]
								}, {
									"case":	229,
									"scores":	[-4.11405007860334]
								}, {
									"case":	230,
									"scores":	[-4.11405007860334]
								}, {
									"case":	231,
									"scores":	[-4.11405007860334]
								}, {
									"case":	232,
									"scores":	[-6.90266712280334, -9.39953852380334, -9.01631677680334, -10.043384476803343, -9.91336806380334, -9.00449668900334, -9.03830467300334, -9.10485294980334, -9.10485294980334, -9.10485294980334, -9.36243812380334, -8.85881403600334, -9.36392515780334, -9.36392515780334, -9.15349961000334, -9.39953852380334, -9.11788624400334]
								}]
						}, {
							"switch":	40,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2317,
							"begin_column":	3,
							"end_line":	2320,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!buf) || __is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!buf) && !__is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.5012903144281453, -5.7891499154281458, -4.4277834844281454, -5.0563268149281466, -5.8208604059281459, -3.742853524428146, -4.7592667354281462, -5.1810014154281454, -5.1810014154281454, -5.1810014154281454, -5.4947991154281457, -4.4231133154281457, -5.4980565554281462, -5.4980565554281462, -5.0312618154281452, -5.7891499154281458, -4.7401684554281456]
								}, {
									"case":	2,
									"scores":	[-4.0156895114281461, -6.3035491124281453, -4.9421826814281458, -5.5707260119281461, -6.3352596029281454, -4.2572527214281459, -5.2736659324281465, -5.6954006124281458, -5.6954006124281458, -5.6954006124281458, -6.0091983124281461, -4.937512512428146, -6.0124557524281457, -6.0124557524281457, -5.5456610124281456, -6.3035491124281453, -5.2545676524281459]
								}, {
									"case":	3,
									"scores":	[-4.0156895114281461, -6.3035491124281453, -4.9421826814281458, -5.5707260119281461, -6.3352596029281454, -4.2572527214281459, -5.2736659324281465, -5.6954006124281458, -5.6954006124281458, -5.6954006124281458, -6.0091983124281461, -4.937512512428146, -6.0124557524281457, -6.0124557524281457, -5.5456610124281456, -6.3035491124281453, -5.2545676524281459]
								}]
						}, {
							"switch":	41,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2317,
							"begin_column":	3,
							"end_line":	2320,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree)))\n    if (!buf) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L2317\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(docp), sizeof (docp), &(node), sizeof (node), &(intern), sizeof (intern), &(format), sizeof (format), &(mem), sizeof (mem), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(size), sizeof (size), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(xmlFree), sizeof (xmlFree)) && (!buf)) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.00694083760334, -7.29480043860334, -5.93343400760334, -6.56197733810334, -7.32651092910334, -5.24850404760334, -6.26491725860334, -6.68665193860334, -6.68665193860334, -6.68665193860334, -7.00044963860334, -5.92876383860334, -7.00370707860334, -7.00370707860334, -6.53691233860334, -7.29480043860334, -6.24581897860334]
								}, {
									"case":	2,
									"scores":	[-5.05926543760334, -7.34712503860334, -5.98575860760334, -6.61430193810334, -7.37883552910334, -5.30082864760334, -6.31724185860334, -6.73897653860334, -6.73897653860334, -6.73897653860334, -7.05277423860334, -5.98108843860334, -7.05603167860334, -7.05603167860334, -6.58923693860334, -7.34712503860334, -6.29814357860334]
								}]
						}]
				}, {
					"line":	2321,
					"switches":	[{
							"switch":	42,
							"types":	[[], [], [], [], [233], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [], [], [], [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], [], [], [], [], [], []],
							"begin_line":	2322,
							"begin_column":	1,
							"end_line":	2322,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node, 0, sizeof (*(node)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2322\", 33, &(docp), sizeof (docp), &(node), sizeof (node), &(buf), sizeof (buf), &(format), sizeof (format), &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(size), sizeof (size), &(node->doc), sizeof (node->doc), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.09384737128582]
								}, {
									"case":	2,
									"scores":	[-4.09384737128582]
								}, {
									"case":	3,
									"scores":	[-4.09384737128582]
								}, {
									"case":	4,
									"scores":	[-4.09384737128582]
								}, {
									"case":	5,
									"scores":	[-4.09384737128582]
								}, {
									"case":	6,
									"scores":	[-4.09384737128582]
								}, {
									"case":	7,
									"scores":	[-4.09384737128582]
								}, {
									"case":	8,
									"scores":	[-4.09384737128582]
								}, {
									"case":	9,
									"scores":	[-4.09384737128582]
								}, {
									"case":	10,
									"scores":	[-4.09384737128582]
								}, {
									"case":	11,
									"scores":	[-4.09384737128582]
								}, {
									"case":	12,
									"scores":	[-4.09384737128582]
								}, {
									"case":	13,
									"scores":	[-4.09384737128582]
								}, {
									"case":	14,
									"scores":	[-4.09384737128582]
								}, {
									"case":	15,
									"scores":	[-4.09384737128582]
								}, {
									"case":	16,
									"scores":	[-4.09384737128582]
								}, {
									"case":	17,
									"scores":	[-4.09384737128582]
								}, {
									"case":	18,
									"scores":	[-4.09384737128582]
								}, {
									"case":	19,
									"scores":	[-4.09384737128582]
								}, {
									"case":	20,
									"scores":	[-4.09384737128582]
								}, {
									"case":	21,
									"scores":	[-4.09384737128582]
								}, {
									"case":	22,
									"scores":	[-4.09384737128582]
								}, {
									"case":	23,
									"scores":	[-4.09384737128582]
								}, {
									"case":	24,
									"scores":	[-4.09384737128582]
								}, {
									"case":	25,
									"scores":	[-4.09384737128582]
								}, {
									"case":	26,
									"scores":	[-4.09384737128582]
								}, {
									"case":	27,
									"scores":	[-4.09384737128582]
								}, {
									"case":	28,
									"scores":	[-4.09384737128582]
								}, {
									"case":	29,
									"scores":	[-4.09384737128582]
								}, {
									"case":	30,
									"scores":	[-4.09384737128582]
								}, {
									"case":	31,
									"scores":	[-4.09384737128582]
								}, {
									"case":	32,
									"scores":	[-4.09384737128582]
								}, {
									"case":	33,
									"scores":	[-4.09384737128582]
								}, {
									"case":	34,
									"scores":	[-4.09384737128582]
								}, {
									"case":	35,
									"scores":	[-4.09384737128582]
								}, {
									"case":	36,
									"scores":	[-4.09384737128582]
								}, {
									"case":	37,
									"scores":	[-4.09384737128582]
								}, {
									"case":	38,
									"scores":	[-4.09384737128582]
								}, {
									"case":	39,
									"scores":	[-4.09384737128582]
								}, {
									"case":	40,
									"scores":	[-4.09384737128582]
								}, {
									"case":	41,
									"scores":	[-4.09384737128582]
								}, {
									"case":	42,
									"scores":	[-4.09384737128582]
								}, {
									"case":	43,
									"scores":	[-4.09384737128582]
								}, {
									"case":	44,
									"scores":	[-4.09384737128582]
								}, {
									"case":	45,
									"scores":	[-4.09384737128582]
								}, {
									"case":	46,
									"scores":	[-4.09384737128582]
								}, {
									"case":	47,
									"scores":	[-4.09384737128582]
								}, {
									"case":	48,
									"scores":	[-4.09384737128582]
								}, {
									"case":	49,
									"scores":	[-4.09384737128582]
								}, {
									"case":	50,
									"scores":	[-4.09384737128582]
								}, {
									"case":	51,
									"scores":	[-4.09384737128582]
								}, {
									"case":	52,
									"scores":	[-4.09384737128582]
								}, {
									"case":	53,
									"scores":	[-4.09384737128582]
								}, {
									"case":	54,
									"scores":	[-4.09384737128582]
								}, {
									"case":	55,
									"scores":	[-4.09384737128582]
								}, {
									"case":	56,
									"scores":	[-4.09384737128582]
								}, {
									"case":	57,
									"scores":	[-4.09384737128582]
								}, {
									"case":	58,
									"scores":	[-4.09384737128582]
								}, {
									"case":	59,
									"scores":	[-4.09384737128582]
								}, {
									"case":	60,
									"scores":	[-4.09384737128582]
								}, {
									"case":	61,
									"scores":	[-4.09384737128582]
								}, {
									"case":	62,
									"scores":	[-4.09384737128582]
								}, {
									"case":	63,
									"scores":	[-4.09384737128582]
								}, {
									"case":	64,
									"scores":	[-4.09384737128582]
								}, {
									"case":	65,
									"scores":	[-4.09384737128582]
								}, {
									"case":	66,
									"scores":	[-4.09384737128582]
								}, {
									"case":	67,
									"scores":	[-4.09384737128582]
								}, {
									"case":	68,
									"scores":	[-4.09384737128582]
								}, {
									"case":	69,
									"scores":	[-4.09384737128582]
								}, {
									"case":	70,
									"scores":	[-4.09384737128582]
								}, {
									"case":	71,
									"scores":	[-4.09384737128582]
								}, {
									"case":	72,
									"scores":	[-4.09384737128582]
								}, {
									"case":	73,
									"scores":	[-4.09384737128582]
								}, {
									"case":	74,
									"scores":	[-4.09384737128582]
								}, {
									"case":	75,
									"scores":	[-4.09384737128582]
								}, {
									"case":	76,
									"scores":	[-4.09384737128582]
								}, {
									"case":	77,
									"scores":	[-4.09384737128582]
								}, {
									"case":	78,
									"scores":	[-4.09384737128582]
								}, {
									"case":	79,
									"scores":	[-4.09384737128582]
								}, {
									"case":	80,
									"scores":	[-4.09384737128582]
								}, {
									"case":	81,
									"scores":	[-4.09384737128582]
								}, {
									"case":	82,
									"scores":	[-4.09384737128582]
								}, {
									"case":	83,
									"scores":	[-4.09384737128582]
								}, {
									"case":	84,
									"scores":	[-4.09384737128582]
								}, {
									"case":	85,
									"scores":	[-4.09384737128582]
								}, {
									"case":	86,
									"scores":	[-4.09384737128582]
								}, {
									"case":	87,
									"scores":	[-4.09384737128582]
								}, {
									"case":	88,
									"scores":	[-4.09384737128582]
								}, {
									"case":	89,
									"scores":	[-4.09384737128582]
								}, {
									"case":	90,
									"scores":	[-4.09384737128582]
								}, {
									"case":	91,
									"scores":	[-4.09384737128582]
								}, {
									"case":	92,
									"scores":	[-4.09384737128582]
								}, {
									"case":	93,
									"scores":	[-4.09384737128582]
								}, {
									"case":	94,
									"scores":	[-4.09384737128582]
								}, {
									"case":	95,
									"scores":	[-4.09384737128582]
								}, {
									"case":	96,
									"scores":	[-4.09384737128582]
								}, {
									"case":	97,
									"scores":	[-4.09384737128582]
								}, {
									"case":	98,
									"scores":	[-4.09384737128582]
								}, {
									"case":	99,
									"scores":	[-4.09384737128582]
								}, {
									"case":	100,
									"scores":	[-4.09384737128582]
								}, {
									"case":	101,
									"scores":	[-4.09384737128582]
								}, {
									"case":	102,
									"scores":	[-4.09384737128582]
								}, {
									"case":	103,
									"scores":	[-4.09384737128582]
								}, {
									"case":	104,
									"scores":	[-4.09384737128582]
								}, {
									"case":	105,
									"scores":	[-4.09384737128582]
								}, {
									"case":	106,
									"scores":	[-4.09384737128582]
								}, {
									"case":	107,
									"scores":	[-4.09384737128582]
								}, {
									"case":	108,
									"scores":	[-4.09384737128582]
								}, {
									"case":	109,
									"scores":	[-4.09384737128582]
								}, {
									"case":	110,
									"scores":	[-4.09384737128582]
								}, {
									"case":	111,
									"scores":	[-4.09384737128582]
								}, {
									"case":	112,
									"scores":	[-4.09384737128582]
								}, {
									"case":	113,
									"scores":	[-4.09384737128582]
								}, {
									"case":	114,
									"scores":	[-4.09384737128582]
								}, {
									"case":	115,
									"scores":	[-4.09384737128582]
								}, {
									"case":	116,
									"scores":	[-4.09384737128582]
								}, {
									"case":	117,
									"scores":	[-4.09384737128582]
								}, {
									"case":	118,
									"scores":	[-4.09384737128582]
								}, {
									"case":	119,
									"scores":	[-4.09384737128582]
								}, {
									"case":	120,
									"scores":	[-4.09384737128582]
								}, {
									"case":	121,
									"scores":	[-4.09384737128582]
								}, {
									"case":	122,
									"scores":	[-4.09384737128582]
								}, {
									"case":	123,
									"scores":	[-4.09384737128582]
								}, {
									"case":	124,
									"scores":	[-4.09384737128582]
								}, {
									"case":	125,
									"scores":	[-4.09384737128582]
								}, {
									"case":	126,
									"scores":	[-4.09384737128582]
								}, {
									"case":	127,
									"scores":	[-4.09384737128582]
								}, {
									"case":	128,
									"scores":	[-4.09384737128582]
								}, {
									"case":	129,
									"scores":	[-4.09384737128582]
								}, {
									"case":	130,
									"scores":	[-4.09384737128582]
								}, {
									"case":	131,
									"scores":	[-4.09384737128582]
								}, {
									"case":	132,
									"scores":	[-4.09384737128582]
								}, {
									"case":	133,
									"scores":	[-4.09384737128582]
								}, {
									"case":	134,
									"scores":	[-4.09384737128582]
								}, {
									"case":	135,
									"scores":	[-4.09384737128582]
								}, {
									"case":	136,
									"scores":	[-4.09384737128582]
								}, {
									"case":	137,
									"scores":	[-4.09384737128582]
								}, {
									"case":	138,
									"scores":	[-4.09384737128582]
								}, {
									"case":	139,
									"scores":	[-4.09384737128582]
								}, {
									"case":	140,
									"scores":	[-4.09384737128582]
								}, {
									"case":	141,
									"scores":	[-4.09384737128582]
								}, {
									"case":	142,
									"scores":	[-4.09384737128582]
								}, {
									"case":	143,
									"scores":	[-4.09384737128582]
								}, {
									"case":	144,
									"scores":	[-4.09384737128582]
								}, {
									"case":	145,
									"scores":	[-4.09384737128582]
								}, {
									"case":	146,
									"scores":	[-4.09384737128582]
								}, {
									"case":	147,
									"scores":	[-4.09384737128582]
								}, {
									"case":	148,
									"scores":	[-4.09384737128582]
								}, {
									"case":	149,
									"scores":	[-4.09384737128582]
								}, {
									"case":	150,
									"scores":	[-4.09384737128582]
								}, {
									"case":	151,
									"scores":	[-4.09384737128582]
								}, {
									"case":	152,
									"scores":	[-4.09384737128582]
								}, {
									"case":	153,
									"scores":	[-4.09384737128582]
								}, {
									"case":	154,
									"scores":	[-4.09384737128582]
								}, {
									"case":	155,
									"scores":	[-4.09384737128582]
								}, {
									"case":	156,
									"scores":	[-4.09384737128582]
								}, {
									"case":	157,
									"scores":	[-4.09384737128582]
								}, {
									"case":	158,
									"scores":	[-4.09384737128582]
								}, {
									"case":	159,
									"scores":	[-4.09384737128582]
								}, {
									"case":	160,
									"scores":	[-4.09384737128582]
								}, {
									"case":	161,
									"scores":	[-4.09384737128582]
								}, {
									"case":	162,
									"scores":	[-4.09384737128582]
								}, {
									"case":	163,
									"scores":	[-4.09384737128582]
								}, {
									"case":	164,
									"scores":	[-4.09384737128582]
								}, {
									"case":	165,
									"scores":	[-4.09384737128582]
								}, {
									"case":	166,
									"scores":	[-4.09384737128582]
								}, {
									"case":	167,
									"scores":	[-4.09384737128582]
								}, {
									"case":	168,
									"scores":	[-4.09384737128582]
								}, {
									"case":	169,
									"scores":	[-4.09384737128582]
								}, {
									"case":	170,
									"scores":	[-4.09384737128582]
								}, {
									"case":	171,
									"scores":	[-4.09384737128582]
								}, {
									"case":	172,
									"scores":	[-4.09384737128582]
								}, {
									"case":	173,
									"scores":	[-4.09384737128582]
								}, {
									"case":	174,
									"scores":	[-4.09384737128582]
								}, {
									"case":	175,
									"scores":	[-4.09384737128582]
								}, {
									"case":	176,
									"scores":	[-4.09384737128582]
								}, {
									"case":	177,
									"scores":	[-4.09384737128582]
								}, {
									"case":	178,
									"scores":	[-4.09384737128582]
								}, {
									"case":	179,
									"scores":	[-4.09384737128582]
								}, {
									"case":	180,
									"scores":	[-4.09384737128582]
								}, {
									"case":	181,
									"scores":	[-4.09384737128582]
								}, {
									"case":	182,
									"scores":	[-4.09384737128582]
								}, {
									"case":	183,
									"scores":	[-4.09384737128582]
								}, {
									"case":	184,
									"scores":	[-4.09384737128582]
								}, {
									"case":	185,
									"scores":	[-4.09384737128582]
								}, {
									"case":	186,
									"scores":	[-4.09384737128582]
								}, {
									"case":	187,
									"scores":	[-4.09384737128582]
								}, {
									"case":	188,
									"scores":	[-4.09384737128582]
								}, {
									"case":	189,
									"scores":	[-4.09384737128582]
								}, {
									"case":	190,
									"scores":	[-4.09384737128582]
								}, {
									"case":	191,
									"scores":	[-4.09384737128582]
								}, {
									"case":	192,
									"scores":	[-4.09384737128582]
								}, {
									"case":	193,
									"scores":	[-4.09384737128582]
								}, {
									"case":	194,
									"scores":	[-4.09384737128582]
								}, {
									"case":	195,
									"scores":	[-4.09384737128582]
								}, {
									"case":	196,
									"scores":	[-4.09384737128582]
								}, {
									"case":	197,
									"scores":	[-4.09384737128582]
								}, {
									"case":	198,
									"scores":	[-4.09384737128582]
								}, {
									"case":	199,
									"scores":	[-4.09384737128582]
								}, {
									"case":	200,
									"scores":	[-4.09384737128582]
								}, {
									"case":	201,
									"scores":	[-4.09384737128582]
								}, {
									"case":	202,
									"scores":	[-4.09384737128582]
								}, {
									"case":	203,
									"scores":	[-4.09384737128582]
								}, {
									"case":	204,
									"scores":	[-4.09384737128582]
								}, {
									"case":	205,
									"scores":	[-4.09384737128582]
								}, {
									"case":	206,
									"scores":	[-4.09384737128582]
								}, {
									"case":	207,
									"scores":	[-4.09384737128582]
								}, {
									"case":	208,
									"scores":	[-4.09384737128582]
								}, {
									"case":	209,
									"scores":	[-4.09384737128582]
								}, {
									"case":	210,
									"scores":	[-4.09384737128582]
								}, {
									"case":	211,
									"scores":	[-4.09384737128582]
								}, {
									"case":	212,
									"scores":	[-4.09384737128582]
								}, {
									"case":	213,
									"scores":	[-4.09384737128582]
								}, {
									"case":	214,
									"scores":	[-4.09384737128582]
								}, {
									"case":	215,
									"scores":	[-4.09384737128582]
								}, {
									"case":	216,
									"scores":	[-4.09384737128582]
								}, {
									"case":	217,
									"scores":	[-4.09384737128582]
								}, {
									"case":	218,
									"scores":	[-4.09384737128582]
								}, {
									"case":	219,
									"scores":	[-4.09384737128582]
								}, {
									"case":	220,
									"scores":	[-4.09384737128582]
								}, {
									"case":	221,
									"scores":	[-4.09384737128582]
								}, {
									"case":	222,
									"scores":	[-4.09384737128582]
								}, {
									"case":	223,
									"scores":	[-4.09384737128582]
								}, {
									"case":	224,
									"scores":	[-4.09384737128582]
								}, {
									"case":	225,
									"scores":	[-4.09384737128582]
								}, {
									"case":	226,
									"scores":	[-4.09384737128582]
								}, {
									"case":	227,
									"scores":	[-4.09384737128582]
								}, {
									"case":	228,
									"scores":	[-4.09384737128582]
								}, {
									"case":	229,
									"scores":	[-4.09384737128582]
								}, {
									"case":	230,
									"scores":	[-4.09384737128582]
								}, {
									"case":	231,
									"scores":	[-4.09384737128582]
								}, {
									"case":	232,
									"scores":	[-4.09384737128582]
								}, {
									"case":	233,
									"scores":	[-7.2754545474858219, -8.30252224748582, -5.1618048934858214, -7.26363445968582, -8.29843306568582, -8.65966691648582, -9.17349645648582, -8.11894242868582, -8.68732351648582, -8.36498134248582, -8.36498134248582, -8.36498134248582, -8.62256651648582, -8.37801463668582, -8.62405355048582, -8.62405355048582, -8.41362800268582, -8.65966691648582, -9.14397771968582, -8.93308860268582, -9.14397771968582, -9.17912751648582, -9.17912751648582, -9.17912751648582, -9.17912751648582, -9.17912751648582, -9.17912751648582, -9.14397771968582, -9.17912751648582, -9.17912751648582, -9.14397771968582, -8.93308860268582, -8.93308860268582]
								}]
						}, {
							"switch":	43,
							"types":	[[], [], [1], [], [], [], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], [], [4, 5, 6, 7, 8], [], [], [], [], [2], [], [], [3]],
							"begin_line":	2322,
							"begin_column":	3,
							"end_line":	2322,
							"end_column":	54,
							"patch_codes":	["if (!__is_neg(\"\", \"L2322\", 33, &(docp), sizeof (docp), &(node), sizeof (node), &(buf), sizeof (buf), &(format), sizeof (format), &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(intern), sizeof (intern), &(size), sizeof (size), &(node->doc), sizeof (node->doc), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(xmlFree), sizeof (xmlFree), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n", "xmlNodeDumpOutput(buf, docp, node, 0, format, 0)", "{\n}\n", "Debug(buf, docp, node, 0, format)", "htmlNodeDumpFileFormat(buf, docp, node, 0, format)", "php_printf(buf, docp, node, 0, format)", "printf(buf, docp, node, 0, format)", "xmlNodeDump(buf, docp, node, 0, format)", "htmlNodeDumpFormatOutput((&buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&doc_props), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&docp), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&format), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&ht), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&id), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&intern), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&mem), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&node), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&nodeobj), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&nodep), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&return_value), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&return_value_ptr), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&return_value_used), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&size), docp, node, 0, format)", "htmlNodeDumpFormatOutput((&this_ptr), docp, node, 0, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&buf), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&doc_props), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&format), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&ht), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&id), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&intern), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&mem), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&node), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&nodeobj), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&nodep), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&return_value), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&return_value_ptr), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&return_value_used), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&size), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (&this_ptr), node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&buf), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&doc_props), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&docp), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&format), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&ht), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&id), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&intern), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&mem), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&node), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&nodeobj), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&nodep), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&return_value), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&return_value_ptr), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&return_value_used), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&size), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (&this_ptr), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "htmlNodeDumpFormatOutput(buf, docp, node, (0 * format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (0 * ht), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (0 * return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (0 * size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (buf != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (buf == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (doc_props != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (doc_props == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (docp != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (docp == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format * ht), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format * return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format * size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format + 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format - 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (format == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht != format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht != return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht != size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht * format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht * return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht * size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht + 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht + format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht + return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht + size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht - 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht - format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht - return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht - size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht == format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht == return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (ht == size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (id != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (id != nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (id == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (id == nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (intern != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (intern != nodeobj), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (intern == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (intern == nodeobj), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (mem != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (mem == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (node != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (node == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (nodeobj != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (nodeobj == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (nodep != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (nodep == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value != id), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value != nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value != this_ptr), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value == id), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value == nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value == this_ptr), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_ptr != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_ptr == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used != format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used != size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used * format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used * ht), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used * size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used + 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used + format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used + size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used - 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used - format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used - size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used == format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (return_value_used == size), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size != format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size * format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size * ht), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size * return_value_used), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size + 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size + format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size - 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size - format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (size == format), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr != 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr != id), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr != nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr == 0), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr == id), format)", "htmlNodeDumpFormatOutput(buf, docp, node, (this_ptr == nodep), format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (0 * format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (0 * ht))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (0 * return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (0 * size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (buf != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (buf == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (doc_props != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (doc_props == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (docp != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (docp == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format * ht))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format * return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format * size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format + 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format - 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht != format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht != return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht != size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht * format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht * return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht * size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht + 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht + format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht + return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht + size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht - 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht - format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht - return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht - size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht == format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht == return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht == size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (ht))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (id != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (id != nodep))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (id == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (id == nodep))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (intern != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (intern != nodeobj))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (intern == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (intern == nodeobj))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (mem != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (mem == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (node != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (node == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (nodeobj != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (nodeobj == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (nodep != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (nodep == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value != id))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value != nodep))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value != this_ptr))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value == id))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value == nodep))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value == this_ptr))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_ptr != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_ptr == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used != format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used != size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used * format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used * ht))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used * size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used + 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used + format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used + size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used - 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used - format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used - size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used == format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used == size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size != format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size * format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size * ht))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size * return_value_used))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size + 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size + format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size - 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size - format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size == format))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (size))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr != 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr != id))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr != nodep))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr == 0))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr == id))", "htmlNodeDumpFormatOutput(buf, docp, node, 0, (this_ptr == nodep))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.45006409128582, -5.07860742178582, -3.0618374402858208, -3.7651341312858211, -4.68166537228582, -5.84460603128582, -5.87631652178582, -4.47856943128582, -5.37454650128582, -5.23645753128582, -5.23645753128582, -5.23645753128582, -5.55025523128582, -4.79562457128582, -5.55351267128582, -5.55351267128582, -5.08671793128582, -5.84460603128582, -5.47267424128582, -5.00341424128582, -5.47267424128582, -5.76130234128582, -5.76130234128582, -5.76130234128582, -5.76130234128582, -5.76130234128582, -5.76130234128582, -5.47267424128582, -5.76130234128582, -5.76130234128582, -5.47267424128582, -5.00341424128582, -5.00341424128582]
								}, {
									"case":	2,
									"scores":	[-4.09384737128582]
								}, {
									"case":	3,
									"scores":	[-4.09384737128582]
								}, {
									"case":	4,
									"scores":	[-4.09384737128582]
								}, {
									"case":	5,
									"scores":	[-4.09384737128582]
								}, {
									"case":	6,
									"scores":	[-4.09384737128582]
								}, {
									"case":	7,
									"scores":	[-4.09384737128582]
								}, {
									"case":	8,
									"scores":	[-4.09384737128582]
								}, {
									"case":	9,
									"scores":	[-4.09384737128582]
								}, {
									"case":	10,
									"scores":	[-4.09384737128582]
								}, {
									"case":	11,
									"scores":	[-4.09384737128582]
								}, {
									"case":	12,
									"scores":	[-4.09384737128582]
								}, {
									"case":	13,
									"scores":	[-4.09384737128582]
								}, {
									"case":	14,
									"scores":	[-4.09384737128582]
								}, {
									"case":	15,
									"scores":	[-4.09384737128582]
								}, {
									"case":	16,
									"scores":	[-4.09384737128582]
								}, {
									"case":	17,
									"scores":	[-4.09384737128582]
								}, {
									"case":	18,
									"scores":	[-4.09384737128582]
								}, {
									"case":	19,
									"scores":	[-4.09384737128582]
								}, {
									"case":	20,
									"scores":	[-4.09384737128582]
								}, {
									"case":	21,
									"scores":	[-4.09384737128582]
								}, {
									"case":	22,
									"scores":	[-4.09384737128582]
								}, {
									"case":	23,
									"scores":	[-4.09384737128582]
								}, {
									"case":	24,
									"scores":	[-4.09384737128582]
								}, {
									"case":	25,
									"scores":	[-4.09384737128582]
								}, {
									"case":	26,
									"scores":	[-4.09384737128582]
								}, {
									"case":	27,
									"scores":	[-4.09384737128582]
								}, {
									"case":	28,
									"scores":	[-4.09384737128582]
								}, {
									"case":	29,
									"scores":	[-4.09384737128582]
								}, {
									"case":	30,
									"scores":	[-4.09384737128582]
								}, {
									"case":	31,
									"scores":	[-4.09384737128582]
								}, {
									"case":	32,
									"scores":	[-4.09384737128582]
								}, {
									"case":	33,
									"scores":	[-4.09384737128582]
								}, {
									"case":	34,
									"scores":	[-4.09384737128582]
								}, {
									"case":	35,
									"scores":	[-4.09384737128582]
								}, {
									"case":	36,
									"scores":	[-4.09384737128582]
								}, {
									"case":	37,
									"scores":	[-4.09384737128582]
								}, {
									"case":	38,
									"scores":	[-4.09384737128582]
								}, {
									"case":	39,
									"scores":	[-4.09384737128582]
								}, {
									"case":	40,
									"scores":	[-4.09384737128582]
								}, {
									"case":	41,
									"scores":	[-4.09384737128582]
								}, {
									"case":	42,
									"scores":	[-4.09384737128582]
								}, {
									"case":	43,
									"scores":	[-4.09384737128582]
								}, {
									"case":	44,
									"scores":	[-4.09384737128582]
								}, {
									"case":	45,
									"scores":	[-4.09384737128582]
								}, {
									"case":	46,
									"scores":	[-4.09384737128582]
								}, {
									"case":	47,
									"scores":	[-4.09384737128582]
								}, {
									"case":	48,
									"scores":	[-4.09384737128582]
								}, {
									"case":	49,
									"scores":	[-4.09384737128582]
								}, {
									"case":	50,
									"scores":	[-4.09384737128582]
								}, {
									"case":	51,
									"scores":	[-4.09384737128582]
								}, {
									"case":	52,
									"scores":	[-4.09384737128582]
								}, {
									"case":	53,
									"scores":	[-4.09384737128582]
								}, {
									"case":	54,
									"scores":	[-4.09384737128582]
								}, {
									"case":	55,
									"scores":	[-4.09384737128582]
								}, {
									"case":	56,
									"scores":	[-4.09384737128582]
								}, {
									"case":	57,
									"scores":	[-4.09384737128582]
								}, {
									"case":	58,
									"scores":	[-4.09384737128582]
								}, {
									"case":	59,
									"scores":	[-4.09384737128582]
								}, {
									"case":	60,
									"scores":	[-4.09384737128582]
								}, {
									"case":	61,
									"scores":	[-4.09384737128582]
								}, {
									"case":	62,
									"scores":	[-4.09384737128582]
								}, {
									"case":	63,
									"scores":	[-4.09384737128582]
								}, {
									"case":	64,
									"scores":	[-4.09384737128582]
								}, {
									"case":	65,
									"scores":	[-4.09384737128582]
								}, {
									"case":	66,
									"scores":	[-4.09384737128582]
								}, {
									"case":	67,
									"scores":	[-4.09384737128582]
								}, {
									"case":	68,
									"scores":	[-4.09384737128582]
								}, {
									"case":	69,
									"scores":	[-4.09384737128582]
								}, {
									"case":	70,
									"scores":	[-4.09384737128582]
								}, {
									"case":	71,
									"scores":	[-4.09384737128582]
								}, {
									"case":	72,
									"scores":	[-4.09384737128582]
								}, {
									"case":	73,
									"scores":	[-4.09384737128582]
								}, {
									"case":	74,
									"scores":	[-4.09384737128582]
								}, {
									"case":	75,
									"scores":	[-4.09384737128582]
								}, {
									"case":	76,
									"scores":	[-4.09384737128582]
								}, {
									"case":	77,
									"scores":	[-4.09384737128582]
								}, {
									"case":	78,
									"scores":	[-4.09384737128582]
								}, {
									"case":	79,
									"scores":	[-4.09384737128582]
								}, {
									"case":	80,
									"scores":	[-4.09384737128582]
								}, {
									"case":	81,
									"scores":	[-4.09384737128582]
								}, {
									"case":	82,
									"scores":	[-4.09384737128582]
								}, {
									"case":	83,
									"scores":	[-4.09384737128582]
								}, {
									"case":	84,
									"scores":	[-4.09384737128582]
								}, {
									"case":	85,
									"scores":	[-4.09384737128582]
								}, {
									"case":	86,
									"scores":	[-4.09384737128582]
								}, {
									"case":	87,
									"scores":	[-4.09384737128582]
								}, {
									"case":	88,
									"scores":	[-4.09384737128582]
								}, {
									"case":	89,
									"scores":	[-4.09384737128582]
								}, {
									"case":	90,
									"scores":	[-4.09384737128582]
								}, {
									"case":	91,
									"scores":	[-4.09384737128582]
								}, {
									"case":	92,
									"scores":	[-4.09384737128582]
								}, {
									"case":	93,
									"scores":	[-4.09384737128582]
								}, {
									"case":	94,
									"scores":	[-4.09384737128582]
								}, {
									"case":	95,
									"scores":	[-4.09384737128582]
								}, {
									"case":	96,
									"scores":	[-4.09384737128582]
								}, {
									"case":	97,
									"scores":	[-4.09384737128582]
								}, {
									"case":	98,
									"scores":	[-4.09384737128582]
								}, {
									"case":	99,
									"scores":	[-4.09384737128582]
								}, {
									"case":	100,
									"scores":	[-4.09384737128582]
								}, {
									"case":	101,
									"scores":	[-4.09384737128582]
								}, {
									"case":	102,
									"scores":	[-4.09384737128582]
								}, {
									"case":	103,
									"scores":	[-4.09384737128582]
								}, {
									"case":	104,
									"scores":	[-4.09384737128582]
								}, {
									"case":	105,
									"scores":	[-4.09384737128582]
								}, {
									"case":	106,
									"scores":	[-4.09384737128582]
								}, {
									"case":	107,
									"scores":	[-4.09384737128582]
								}, {
									"case":	108,
									"scores":	[-4.09384737128582]
								}, {
									"case":	109,
									"scores":	[-4.09384737128582]
								}, {
									"case":	110,
									"scores":	[-4.09384737128582]
								}, {
									"case":	111,
									"scores":	[-4.09384737128582]
								}, {
									"case":	112,
									"scores":	[-4.09384737128582]
								}, {
									"case":	113,
									"scores":	[-4.09384737128582]
								}, {
									"case":	114,
									"scores":	[-4.09384737128582]
								}, {
									"case":	115,
									"scores":	[-4.09384737128582]
								}, {
									"case":	116,
									"scores":	[-4.09384737128582]
								}, {
									"case":	117,
									"scores":	[-4.09384737128582]
								}, {
									"case":	118,
									"scores":	[-4.09384737128582]
								}, {
									"case":	119,
									"scores":	[-4.09384737128582]
								}, {
									"case":	120,
									"scores":	[-4.09384737128582]
								}, {
									"case":	121,
									"scores":	[-4.09384737128582]
								}, {
									"case":	122,
									"scores":	[-4.09384737128582]
								}, {
									"case":	123,
									"scores":	[-4.09384737128582]
								}, {
									"case":	124,
									"scores":	[-4.09384737128582]
								}, {
									"case":	125,
									"scores":	[-4.09384737128582]
								}, {
									"case":	126,
									"scores":	[-4.09384737128582]
								}, {
									"case":	127,
									"scores":	[-4.09384737128582]
								}, {
									"case":	128,
									"scores":	[-4.09384737128582]
								}, {
									"case":	129,
									"scores":	[-4.09384737128582]
								}, {
									"case":	130,
									"scores":	[-4.09384737128582]
								}, {
									"case":	131,
									"scores":	[-4.09384737128582]
								}, {
									"case":	132,
									"scores":	[-4.09384737128582]
								}, {
									"case":	133,
									"scores":	[-4.09384737128582]
								}, {
									"case":	134,
									"scores":	[-4.09384737128582]
								}, {
									"case":	135,
									"scores":	[-4.09384737128582]
								}, {
									"case":	136,
									"scores":	[-4.09384737128582]
								}, {
									"case":	137,
									"scores":	[-4.09384737128582]
								}, {
									"case":	138,
									"scores":	[-4.09384737128582]
								}, {
									"case":	139,
									"scores":	[-4.09384737128582]
								}, {
									"case":	140,
									"scores":	[-4.09384737128582]
								}, {
									"case":	141,
									"scores":	[-4.09384737128582]
								}, {
									"case":	142,
									"scores":	[-4.09384737128582]
								}, {
									"case":	143,
									"scores":	[-4.09384737128582]
								}, {
									"case":	144,
									"scores":	[-4.09384737128582]
								}, {
									"case":	145,
									"scores":	[-4.09384737128582]
								}, {
									"case":	146,
									"scores":	[-4.09384737128582]
								}, {
									"case":	147,
									"scores":	[-4.09384737128582]
								}, {
									"case":	148,
									"scores":	[-4.09384737128582]
								}, {
									"case":	149,
									"scores":	[-4.09384737128582]
								}, {
									"case":	150,
									"scores":	[-4.09384737128582]
								}, {
									"case":	151,
									"scores":	[-4.09384737128582]
								}, {
									"case":	152,
									"scores":	[-4.09384737128582]
								}, {
									"case":	153,
									"scores":	[-4.09384737128582]
								}, {
									"case":	154,
									"scores":	[-4.09384737128582]
								}, {
									"case":	155,
									"scores":	[-4.09384737128582]
								}, {
									"case":	156,
									"scores":	[-4.09384737128582]
								}, {
									"case":	157,
									"scores":	[-4.09384737128582]
								}, {
									"case":	158,
									"scores":	[-4.09384737128582]
								}, {
									"case":	159,
									"scores":	[-4.09384737128582]
								}, {
									"case":	160,
									"scores":	[-4.09384737128582]
								}, {
									"case":	161,
									"scores":	[-4.09384737128582]
								}, {
									"case":	162,
									"scores":	[-4.09384737128582]
								}, {
									"case":	163,
									"scores":	[-4.09384737128582]
								}, {
									"case":	164,
									"scores":	[-4.09384737128582]
								}, {
									"case":	165,
									"scores":	[-4.09384737128582]
								}, {
									"case":	166,
									"scores":	[-4.09384737128582]
								}, {
									"case":	167,
									"scores":	[-4.09384737128582]
								}, {
									"case":	168,
									"scores":	[-4.09384737128582]
								}, {
									"case":	169,
									"scores":	[-4.09384737128582]
								}, {
									"case":	170,
									"scores":	[-4.09384737128582]
								}, {
									"case":	171,
									"scores":	[-4.09384737128582]
								}, {
									"case":	172,
									"scores":	[-4.09384737128582]
								}, {
									"case":	173,
									"scores":	[-4.09384737128582]
								}, {
									"case":	174,
									"scores":	[-4.09384737128582]
								}, {
									"case":	175,
									"scores":	[-4.09384737128582]
								}, {
									"case":	176,
									"scores":	[-4.09384737128582]
								}, {
									"case":	177,
									"scores":	[-4.09384737128582]
								}, {
									"case":	178,
									"scores":	[-4.09384737128582]
								}, {
									"case":	179,
									"scores":	[-4.09384737128582]
								}, {
									"case":	180,
									"scores":	[-4.09384737128582]
								}, {
									"case":	181,
									"scores":	[-4.09384737128582]
								}, {
									"case":	182,
									"scores":	[-4.09384737128582]
								}, {
									"case":	183,
									"scores":	[-4.09384737128582]
								}, {
									"case":	184,
									"scores":	[-4.09384737128582]
								}, {
									"case":	185,
									"scores":	[-4.09384737128582]
								}, {
									"case":	186,
									"scores":	[-4.09384737128582]
								}, {
									"case":	187,
									"scores":	[-4.09384737128582]
								}, {
									"case":	188,
									"scores":	[-4.09384737128582]
								}, {
									"case":	189,
									"scores":	[-4.09384737128582]
								}, {
									"case":	190,
									"scores":	[-4.09384737128582]
								}, {
									"case":	191,
									"scores":	[-4.09384737128582]
								}, {
									"case":	192,
									"scores":	[-4.09384737128582]
								}, {
									"case":	193,
									"scores":	[-4.09384737128582]
								}, {
									"case":	194,
									"scores":	[-4.09384737128582]
								}, {
									"case":	195,
									"scores":	[-4.09384737128582]
								}, {
									"case":	196,
									"scores":	[-4.09384737128582]
								}, {
									"case":	197,
									"scores":	[-4.09384737128582]
								}, {
									"case":	198,
									"scores":	[-4.09384737128582]
								}, {
									"case":	199,
									"scores":	[-4.09384737128582]
								}, {
									"case":	200,
									"scores":	[-4.09384737128582]
								}, {
									"case":	201,
									"scores":	[-4.09384737128582]
								}, {
									"case":	202,
									"scores":	[-4.09384737128582]
								}, {
									"case":	203,
									"scores":	[-4.09384737128582]
								}, {
									"case":	204,
									"scores":	[-4.09384737128582]
								}, {
									"case":	205,
									"scores":	[-4.09384737128582]
								}, {
									"case":	206,
									"scores":	[-4.09384737128582]
								}, {
									"case":	207,
									"scores":	[-4.09384737128582]
								}, {
									"case":	208,
									"scores":	[-4.09384737128582]
								}, {
									"case":	209,
									"scores":	[-4.09384737128582]
								}, {
									"case":	210,
									"scores":	[-4.09384737128582]
								}, {
									"case":	211,
									"scores":	[-4.09384737128582]
								}, {
									"case":	212,
									"scores":	[-4.09384737128582]
								}, {
									"case":	213,
									"scores":	[-4.09384737128582]
								}, {
									"case":	214,
									"scores":	[-4.09384737128582]
								}, {
									"case":	215,
									"scores":	[-4.09384737128582]
								}, {
									"case":	216,
									"scores":	[-4.09384737128582]
								}, {
									"case":	217,
									"scores":	[-4.09384737128582]
								}, {
									"case":	218,
									"scores":	[-4.09384737128582]
								}, {
									"case":	219,
									"scores":	[-4.09384737128582]
								}, {
									"case":	220,
									"scores":	[-4.09384737128582]
								}, {
									"case":	221,
									"scores":	[-4.09384737128582]
								}, {
									"case":	222,
									"scores":	[-4.09384737128582]
								}, {
									"case":	223,
									"scores":	[-4.09384737128582]
								}, {
									"case":	224,
									"scores":	[-4.09384737128582]
								}, {
									"case":	225,
									"scores":	[-4.09384737128582]
								}, {
									"case":	226,
									"scores":	[-4.09384737128582]
								}, {
									"case":	227,
									"scores":	[-4.09384737128582]
								}, {
									"case":	228,
									"scores":	[-4.09384737128582]
								}, {
									"case":	229,
									"scores":	[-4.09384737128582]
								}, {
									"case":	230,
									"scores":	[-4.09384737128582]
								}, {
									"case":	231,
									"scores":	[-4.09384737128582]
								}, {
									"case":	232,
									"scores":	[-4.09384737128582]
								}, {
									"case":	233,
									"scores":	[-4.09384737128582]
								}, {
									"case":	234,
									"scores":	[-4.09384737128582]
								}, {
									"case":	235,
									"scores":	[-4.09384737128582]
								}, {
									"case":	236,
									"scores":	[-4.09384737128582]
								}, {
									"case":	237,
									"scores":	[-4.09384737128582]
								}, {
									"case":	238,
									"scores":	[-4.09384737128582]
								}, {
									"case":	239,
									"scores":	[-4.09384737128582]
								}, {
									"case":	240,
									"scores":	[-4.09384737128582]
								}, {
									"case":	241,
									"scores":	[-4.09384737128582]
								}, {
									"case":	242,
									"scores":	[-4.09384737128582]
								}, {
									"case":	243,
									"scores":	[-4.09384737128582]
								}, {
									"case":	244,
									"scores":	[-4.09384737128582]
								}, {
									"case":	245,
									"scores":	[-4.09384737128582]
								}, {
									"case":	246,
									"scores":	[-4.09384737128582]
								}, {
									"case":	247,
									"scores":	[-4.09384737128582]
								}, {
									"case":	248,
									"scores":	[-4.09384737128582]
								}, {
									"case":	249,
									"scores":	[-4.09384737128582]
								}, {
									"case":	250,
									"scores":	[-4.09384737128582]
								}, {
									"case":	251,
									"scores":	[-4.09384737128582]
								}, {
									"case":	252,
									"scores":	[-4.09384737128582]
								}]
						}]
				}, {
					"line":	2322,
					"switches":	[{
							"switch":	44,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2323,
							"begin_column":	1,
							"end_line":	2323,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2323\", 33, &(buf), sizeof (buf), &(mem), sizeof (mem), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(return_value), sizeof (return_value), &(size), sizeof (size), &(intern), sizeof (intern), &(node->doc), sizeof (node->doc), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	2,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	3,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	4,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	5,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	6,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	7,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	8,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	9,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	10,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	11,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	12,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	13,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	14,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	15,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	16,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	17,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	18,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	19,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	20,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	21,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	22,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	23,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	24,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	25,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	26,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	27,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	28,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	29,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	30,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	31,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	32,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	33,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	34,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	35,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	36,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	37,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	38,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	39,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	40,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	41,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	42,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	43,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	44,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	45,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	46,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	47,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	48,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	49,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	50,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	51,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	52,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	53,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	54,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	55,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	56,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	57,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	58,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	59,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	60,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	61,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	62,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	63,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	64,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	65,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	66,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	67,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	68,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	69,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	70,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	71,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	72,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	73,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	74,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	75,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	76,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	77,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	78,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	79,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	80,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	81,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	82,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	83,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	84,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	85,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	86,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	87,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	88,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	89,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	90,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	91,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	92,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	93,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	94,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	95,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	96,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	97,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	98,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	99,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	100,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	101,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	102,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	103,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	104,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	105,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	106,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	107,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	108,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	109,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	110,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	111,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	112,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	113,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	114,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	115,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	116,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	117,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	118,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	119,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	120,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	121,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	122,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	123,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	124,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	125,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	126,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	127,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	128,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	129,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	130,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	131,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	132,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	133,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	134,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	135,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	136,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	137,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	138,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	139,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	140,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	141,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	142,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	143,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	144,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	145,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	146,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	147,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	148,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	149,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	150,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	151,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	152,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	153,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	154,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	155,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	156,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	157,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	158,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	159,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	160,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	161,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	162,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	163,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	164,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	165,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	166,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	167,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	168,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	169,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	170,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	171,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	172,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	173,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	174,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	175,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	176,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	177,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	178,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	179,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	180,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	181,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	182,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	183,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	184,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	185,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	186,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	187,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	188,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	189,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	190,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	191,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	192,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	193,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	194,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	195,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	196,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	197,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	198,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	199,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	200,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	201,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	202,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	203,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	204,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	205,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	206,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	207,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	208,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	209,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	210,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	211,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	212,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	213,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	214,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	215,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	216,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	217,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	218,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	219,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	220,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	221,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	222,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	223,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	224,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	225,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	226,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	227,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	228,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	229,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	230,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	231,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	232,
									"scores":	[-3.9971434661683016, -7.4284602793683, -8.6313360891683, -8.6313360891683, -8.1277120013683, -8.6483224091683, -8.1075979213683, -8.6112220091683, -9.1677830091683, -8.3536368351683, -8.3536368351683, -8.3536368351683, -8.3666701293683, -8.6112220091683, -8.6127090431683, -8.6127090431683, -8.4022834953683, -8.6483224091683, -9.1326332123683, -8.9217440953683, -9.1326332123683, -9.1677830091683, -9.1677830091683, -9.1677830091683, -9.1677830091683, -9.1677830091683, -9.1677830091683, -9.1326332123683, -9.1677830091683, -9.1677830091683, -9.1326332123683, -8.9217440953683, -8.9217440953683]
								}]
						}, {
							"switch":	45,
							"types":	[[], [], [1], [], [], [], [3, 4], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2323,
							"begin_column":	3,
							"end_line":	2323,
							"end_column":	40,
							"patch_codes":	["if (!__is_neg(\"\", \"L2323\", 33, &(buf), sizeof (buf), &(mem), sizeof (mem), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(return_value), sizeof (return_value), &(size), sizeof (size), &(intern), sizeof (intern), &(node->doc), sizeof (node->doc), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(node->_private), sizeof (node->_private), &(node->type), sizeof (node->type), &(node->name), sizeof (node->name), &(node->children), sizeof (node->children), &(node->last), sizeof (node->last), &(node->parent), sizeof (node->parent), &(node->next), sizeof (node->next), &(node->prev), sizeof (node->prev), &(node->ns), sizeof (node->ns), &(node->content), sizeof (node->content), &(node->properties), sizeof (node->properties), &(node->nsDef), sizeof (node->nsDef), &(node->psvi), sizeof (node->psvi), &(node->line), sizeof (node->line), &(node->extra), sizeof (node->extra)))\n    mem = (xmlChar *)xmlBufferContent(buf);\n", "{\n}\n", "mem = (mem)", "mem = (xmlChar *)xmlBufferContent(buf)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0713850289683018, -6.6165622449683, -7.4410283699683, -7.4410283699683, -6.3693425699683, -7.6463963239683022, -6.2803597239683, -7.352045523968302, -7.5630926339683, -7.0382478239683017, -7.0382478239683017, -7.0382478239683017, -6.5974148639683019, -7.352045523968302, -7.3553029639683, -7.3553029639683, -6.8885082239683015, -7.6463963239683022, -7.2744645339683, -6.8052045339683014, -7.2744645339683, -7.5630926339683, -7.5630926339683, -7.5630926339683, -7.5630926339683, -7.5630926339683, -7.5630926339683, -7.2744645339683, -7.5630926339683, -7.5630926339683, -7.2744645339683, -6.8052045339683014, -6.8052045339683014]
								}, {
									"case":	2,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	3,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	4,
									"scores":	[-4.0736446639683015]
								}]
						}]
				}, {
					"line":	2326,
					"switches":	[{
							"switch":	48,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2327,
							"begin_column":	2,
							"end_line":	2327,
							"end_column":	2,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2327\", 17, &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(size), sizeof (size), &(format), sizeof (format), &(intern), sizeof (intern), &(xmlFree), sizeof (xmlFree), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	2,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	3,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	4,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	5,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	6,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	7,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	8,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	9,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	10,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	11,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	12,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	13,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	14,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	15,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	16,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	17,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	18,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	19,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	20,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	21,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	22,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	23,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	24,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	25,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	26,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	27,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	28,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	29,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	30,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	31,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	32,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	33,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	34,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	35,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	36,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	37,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	38,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	39,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	40,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	41,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	42,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	43,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	44,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	45,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	46,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	47,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	48,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	49,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	50,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	51,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	52,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	53,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	54,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	55,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	56,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	57,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	58,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	59,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	60,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	61,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	62,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	63,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	64,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	65,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	66,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	67,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	68,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	69,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	70,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	71,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	72,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	73,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	74,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	75,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	76,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	77,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	78,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	79,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	80,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	81,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	82,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	83,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	84,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	85,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	86,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	87,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	88,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	89,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	90,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	91,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	92,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	93,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	94,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	95,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	96,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	97,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	98,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	99,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	100,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	101,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	102,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	103,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	104,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	105,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	106,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	107,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	108,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	109,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	110,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	111,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	112,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	113,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	114,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	115,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	116,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	117,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	118,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	119,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	120,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	121,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	122,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	123,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	124,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	125,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	126,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	127,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	128,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	129,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	130,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	131,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	132,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	133,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	134,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	135,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	136,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	137,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	138,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	139,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	140,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	141,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	142,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	143,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	144,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	145,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	146,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	147,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	148,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	149,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	150,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	151,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	152,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	153,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	154,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	155,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	156,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	157,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	158,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	159,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	160,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	161,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	162,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	163,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	164,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	165,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	166,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	167,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	168,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	169,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	170,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	171,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	172,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	173,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	174,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	175,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	176,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	177,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	178,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	179,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	180,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	181,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	182,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	183,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	184,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	185,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	186,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	187,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	188,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	189,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	190,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	191,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	192,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	193,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	194,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	195,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	196,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	197,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	198,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	199,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	200,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	201,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	202,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	203,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	204,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	205,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	206,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	207,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	208,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	209,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	210,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	211,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	212,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	213,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	214,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	215,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	216,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	217,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	218,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	219,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	220,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	221,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	222,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	223,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	224,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	225,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	226,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	227,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	228,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	229,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	230,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	231,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	232,
									"scores":	[-6.2772886331332627, -5.9474532623332621, -5.9826030591332628, -6.2401882331332619, -6.2401882331332619, -5.7365641453332623, -5.7365641453332623, -6.2401882331332619, -5.9956363533332624, -5.9826030591332628, -5.9826030591332628, -5.9826030591332628, -6.2401882331332619, -6.241675267133262, -6.241675267133262, -6.0312497193332621, -6.2772886331332627]
								}]
						}, {
							"switch":	49,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2327,
							"begin_column":	4,
							"end_line":	2327,
							"end_column":	24,
							"patch_codes":	["if (!__is_neg(\"\", \"L2327\", 17, &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(size), sizeof (size), &(format), sizeof (format), &(intern), sizeof (intern), &(xmlFree), sizeof (xmlFree), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    do {\n        const char *__s = (mem);\n        zval *__z = (return_value);\n        (*__z).value.str.len = strlen(__s);\n        (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.7269642193332624, -4.8301876193332625, -5.1188157193332628, -5.4326134193332631, -5.4326134193332631, -4.3609276193332622, -4.3609276193332622, -5.4326134193332631, -4.6779827593332621, -5.1188157193332628, -5.1188157193332628, -5.1188157193332628, -5.4326134193332631, -5.4358708593332628, -5.4358708593332628, -4.9690761193332627, -5.7269642193332624]
								}]
						}]
				}, {
					"line":	2323,
					"switches":	[{
							"switch":	46,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2324,
							"begin_column":	1,
							"end_line":	2324,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.053441956650782]
								}, {
									"case":	2,
									"scores":	[-4.053441956650782]
								}, {
									"case":	3,
									"scores":	[-4.053441956650782]
								}, {
									"case":	4,
									"scores":	[-4.053441956650782]
								}, {
									"case":	5,
									"scores":	[-4.053441956650782]
								}, {
									"case":	6,
									"scores":	[-4.053441956650782]
								}, {
									"case":	7,
									"scores":	[-4.053441956650782]
								}, {
									"case":	8,
									"scores":	[-4.053441956650782]
								}, {
									"case":	9,
									"scores":	[-4.053441956650782]
								}, {
									"case":	10,
									"scores":	[-4.053441956650782]
								}, {
									"case":	11,
									"scores":	[-4.053441956650782]
								}, {
									"case":	12,
									"scores":	[-4.053441956650782]
								}, {
									"case":	13,
									"scores":	[-4.053441956650782]
								}, {
									"case":	14,
									"scores":	[-4.053441956650782]
								}, {
									"case":	15,
									"scores":	[-4.053441956650782]
								}, {
									"case":	16,
									"scores":	[-4.053441956650782]
								}, {
									"case":	17,
									"scores":	[-4.053441956650782]
								}, {
									"case":	18,
									"scores":	[-4.053441956650782]
								}, {
									"case":	19,
									"scores":	[-4.053441956650782]
								}, {
									"case":	20,
									"scores":	[-4.053441956650782]
								}, {
									"case":	21,
									"scores":	[-4.053441956650782]
								}, {
									"case":	22,
									"scores":	[-4.053441956650782]
								}, {
									"case":	23,
									"scores":	[-4.053441956650782]
								}, {
									"case":	24,
									"scores":	[-4.053441956650782]
								}, {
									"case":	25,
									"scores":	[-4.053441956650782]
								}, {
									"case":	26,
									"scores":	[-4.053441956650782]
								}, {
									"case":	27,
									"scores":	[-4.053441956650782]
								}, {
									"case":	28,
									"scores":	[-4.053441956650782]
								}, {
									"case":	29,
									"scores":	[-4.053441956650782]
								}, {
									"case":	30,
									"scores":	[-4.053441956650782]
								}, {
									"case":	31,
									"scores":	[-4.053441956650782]
								}, {
									"case":	32,
									"scores":	[-4.053441956650782]
								}, {
									"case":	33,
									"scores":	[-4.053441956650782]
								}, {
									"case":	34,
									"scores":	[-4.053441956650782]
								}, {
									"case":	35,
									"scores":	[-4.053441956650782]
								}, {
									"case":	36,
									"scores":	[-4.053441956650782]
								}, {
									"case":	37,
									"scores":	[-4.053441956650782]
								}, {
									"case":	38,
									"scores":	[-4.053441956650782]
								}, {
									"case":	39,
									"scores":	[-4.053441956650782]
								}, {
									"case":	40,
									"scores":	[-4.053441956650782]
								}, {
									"case":	41,
									"scores":	[-4.053441956650782]
								}, {
									"case":	42,
									"scores":	[-4.053441956650782]
								}, {
									"case":	43,
									"scores":	[-4.053441956650782]
								}, {
									"case":	44,
									"scores":	[-4.053441956650782]
								}, {
									"case":	45,
									"scores":	[-4.053441956650782]
								}, {
									"case":	46,
									"scores":	[-4.053441956650782]
								}, {
									"case":	47,
									"scores":	[-4.053441956650782]
								}, {
									"case":	48,
									"scores":	[-4.053441956650782]
								}, {
									"case":	49,
									"scores":	[-4.053441956650782]
								}, {
									"case":	50,
									"scores":	[-4.053441956650782]
								}, {
									"case":	51,
									"scores":	[-4.053441956650782]
								}, {
									"case":	52,
									"scores":	[-4.053441956650782]
								}, {
									"case":	53,
									"scores":	[-4.053441956650782]
								}, {
									"case":	54,
									"scores":	[-4.053441956650782]
								}, {
									"case":	55,
									"scores":	[-4.053441956650782]
								}, {
									"case":	56,
									"scores":	[-4.053441956650782]
								}, {
									"case":	57,
									"scores":	[-4.053441956650782]
								}, {
									"case":	58,
									"scores":	[-4.053441956650782]
								}, {
									"case":	59,
									"scores":	[-4.053441956650782]
								}, {
									"case":	60,
									"scores":	[-4.053441956650782]
								}, {
									"case":	61,
									"scores":	[-4.053441956650782]
								}, {
									"case":	62,
									"scores":	[-4.053441956650782]
								}, {
									"case":	63,
									"scores":	[-4.053441956650782]
								}, {
									"case":	64,
									"scores":	[-4.053441956650782]
								}, {
									"case":	65,
									"scores":	[-4.053441956650782]
								}, {
									"case":	66,
									"scores":	[-4.053441956650782]
								}, {
									"case":	67,
									"scores":	[-4.053441956650782]
								}, {
									"case":	68,
									"scores":	[-4.053441956650782]
								}, {
									"case":	69,
									"scores":	[-4.053441956650782]
								}, {
									"case":	70,
									"scores":	[-4.053441956650782]
								}, {
									"case":	71,
									"scores":	[-4.053441956650782]
								}, {
									"case":	72,
									"scores":	[-4.053441956650782]
								}, {
									"case":	73,
									"scores":	[-4.053441956650782]
								}, {
									"case":	74,
									"scores":	[-4.053441956650782]
								}, {
									"case":	75,
									"scores":	[-4.053441956650782]
								}, {
									"case":	76,
									"scores":	[-4.053441956650782]
								}, {
									"case":	77,
									"scores":	[-4.053441956650782]
								}, {
									"case":	78,
									"scores":	[-4.053441956650782]
								}, {
									"case":	79,
									"scores":	[-4.053441956650782]
								}, {
									"case":	80,
									"scores":	[-4.053441956650782]
								}, {
									"case":	81,
									"scores":	[-4.053441956650782]
								}, {
									"case":	82,
									"scores":	[-4.053441956650782]
								}, {
									"case":	83,
									"scores":	[-4.053441956650782]
								}, {
									"case":	84,
									"scores":	[-4.053441956650782]
								}, {
									"case":	85,
									"scores":	[-4.053441956650782]
								}, {
									"case":	86,
									"scores":	[-4.053441956650782]
								}, {
									"case":	87,
									"scores":	[-4.053441956650782]
								}, {
									"case":	88,
									"scores":	[-4.053441956650782]
								}, {
									"case":	89,
									"scores":	[-4.053441956650782]
								}, {
									"case":	90,
									"scores":	[-4.053441956650782]
								}, {
									"case":	91,
									"scores":	[-4.053441956650782]
								}, {
									"case":	92,
									"scores":	[-4.053441956650782]
								}, {
									"case":	93,
									"scores":	[-4.053441956650782]
								}, {
									"case":	94,
									"scores":	[-4.053441956650782]
								}, {
									"case":	95,
									"scores":	[-4.053441956650782]
								}, {
									"case":	96,
									"scores":	[-4.053441956650782]
								}, {
									"case":	97,
									"scores":	[-4.053441956650782]
								}, {
									"case":	98,
									"scores":	[-4.053441956650782]
								}, {
									"case":	99,
									"scores":	[-4.053441956650782]
								}, {
									"case":	100,
									"scores":	[-4.053441956650782]
								}, {
									"case":	101,
									"scores":	[-4.053441956650782]
								}, {
									"case":	102,
									"scores":	[-4.053441956650782]
								}, {
									"case":	103,
									"scores":	[-4.053441956650782]
								}, {
									"case":	104,
									"scores":	[-4.053441956650782]
								}, {
									"case":	105,
									"scores":	[-4.053441956650782]
								}, {
									"case":	106,
									"scores":	[-4.053441956650782]
								}, {
									"case":	107,
									"scores":	[-4.053441956650782]
								}, {
									"case":	108,
									"scores":	[-4.053441956650782]
								}, {
									"case":	109,
									"scores":	[-4.053441956650782]
								}, {
									"case":	110,
									"scores":	[-4.053441956650782]
								}, {
									"case":	111,
									"scores":	[-4.053441956650782]
								}, {
									"case":	112,
									"scores":	[-4.053441956650782]
								}, {
									"case":	113,
									"scores":	[-4.053441956650782]
								}, {
									"case":	114,
									"scores":	[-4.053441956650782]
								}, {
									"case":	115,
									"scores":	[-4.053441956650782]
								}, {
									"case":	116,
									"scores":	[-4.053441956650782]
								}, {
									"case":	117,
									"scores":	[-4.053441956650782]
								}, {
									"case":	118,
									"scores":	[-4.053441956650782]
								}, {
									"case":	119,
									"scores":	[-4.053441956650782]
								}, {
									"case":	120,
									"scores":	[-4.053441956650782]
								}, {
									"case":	121,
									"scores":	[-4.053441956650782]
								}, {
									"case":	122,
									"scores":	[-4.053441956650782]
								}, {
									"case":	123,
									"scores":	[-4.053441956650782]
								}, {
									"case":	124,
									"scores":	[-4.053441956650782]
								}, {
									"case":	125,
									"scores":	[-4.053441956650782]
								}, {
									"case":	126,
									"scores":	[-4.053441956650782]
								}, {
									"case":	127,
									"scores":	[-4.053441956650782]
								}, {
									"case":	128,
									"scores":	[-4.053441956650782]
								}, {
									"case":	129,
									"scores":	[-4.053441956650782]
								}, {
									"case":	130,
									"scores":	[-4.053441956650782]
								}, {
									"case":	131,
									"scores":	[-4.053441956650782]
								}, {
									"case":	132,
									"scores":	[-4.053441956650782]
								}, {
									"case":	133,
									"scores":	[-4.053441956650782]
								}, {
									"case":	134,
									"scores":	[-4.053441956650782]
								}, {
									"case":	135,
									"scores":	[-4.053441956650782]
								}, {
									"case":	136,
									"scores":	[-4.053441956650782]
								}, {
									"case":	137,
									"scores":	[-4.053441956650782]
								}, {
									"case":	138,
									"scores":	[-4.053441956650782]
								}, {
									"case":	139,
									"scores":	[-4.053441956650782]
								}, {
									"case":	140,
									"scores":	[-4.053441956650782]
								}, {
									"case":	141,
									"scores":	[-4.053441956650782]
								}, {
									"case":	142,
									"scores":	[-4.053441956650782]
								}, {
									"case":	143,
									"scores":	[-4.053441956650782]
								}, {
									"case":	144,
									"scores":	[-4.053441956650782]
								}, {
									"case":	145,
									"scores":	[-4.053441956650782]
								}, {
									"case":	146,
									"scores":	[-4.053441956650782]
								}, {
									"case":	147,
									"scores":	[-4.053441956650782]
								}, {
									"case":	148,
									"scores":	[-4.053441956650782]
								}, {
									"case":	149,
									"scores":	[-4.053441956650782]
								}, {
									"case":	150,
									"scores":	[-4.053441956650782]
								}, {
									"case":	151,
									"scores":	[-4.053441956650782]
								}, {
									"case":	152,
									"scores":	[-4.053441956650782]
								}, {
									"case":	153,
									"scores":	[-4.053441956650782]
								}, {
									"case":	154,
									"scores":	[-4.053441956650782]
								}, {
									"case":	155,
									"scores":	[-4.053441956650782]
								}, {
									"case":	156,
									"scores":	[-4.053441956650782]
								}, {
									"case":	157,
									"scores":	[-4.053441956650782]
								}, {
									"case":	158,
									"scores":	[-4.053441956650782]
								}, {
									"case":	159,
									"scores":	[-4.053441956650782]
								}, {
									"case":	160,
									"scores":	[-4.053441956650782]
								}, {
									"case":	161,
									"scores":	[-4.053441956650782]
								}, {
									"case":	162,
									"scores":	[-4.053441956650782]
								}, {
									"case":	163,
									"scores":	[-4.053441956650782]
								}, {
									"case":	164,
									"scores":	[-4.053441956650782]
								}, {
									"case":	165,
									"scores":	[-4.053441956650782]
								}, {
									"case":	166,
									"scores":	[-4.053441956650782]
								}, {
									"case":	167,
									"scores":	[-4.053441956650782]
								}, {
									"case":	168,
									"scores":	[-4.053441956650782]
								}, {
									"case":	169,
									"scores":	[-4.053441956650782]
								}, {
									"case":	170,
									"scores":	[-4.053441956650782]
								}, {
									"case":	171,
									"scores":	[-4.053441956650782]
								}, {
									"case":	172,
									"scores":	[-4.053441956650782]
								}, {
									"case":	173,
									"scores":	[-4.053441956650782]
								}, {
									"case":	174,
									"scores":	[-4.053441956650782]
								}, {
									"case":	175,
									"scores":	[-4.053441956650782]
								}, {
									"case":	176,
									"scores":	[-4.053441956650782]
								}, {
									"case":	177,
									"scores":	[-4.053441956650782]
								}, {
									"case":	178,
									"scores":	[-4.053441956650782]
								}, {
									"case":	179,
									"scores":	[-4.053441956650782]
								}, {
									"case":	180,
									"scores":	[-4.053441956650782]
								}, {
									"case":	181,
									"scores":	[-4.053441956650782]
								}, {
									"case":	182,
									"scores":	[-4.053441956650782]
								}, {
									"case":	183,
									"scores":	[-4.053441956650782]
								}, {
									"case":	184,
									"scores":	[-4.053441956650782]
								}, {
									"case":	185,
									"scores":	[-4.053441956650782]
								}, {
									"case":	186,
									"scores":	[-4.053441956650782]
								}, {
									"case":	187,
									"scores":	[-4.053441956650782]
								}, {
									"case":	188,
									"scores":	[-4.053441956650782]
								}, {
									"case":	189,
									"scores":	[-4.053441956650782]
								}, {
									"case":	190,
									"scores":	[-4.053441956650782]
								}, {
									"case":	191,
									"scores":	[-4.053441956650782]
								}, {
									"case":	192,
									"scores":	[-4.053441956650782]
								}, {
									"case":	193,
									"scores":	[-4.053441956650782]
								}, {
									"case":	194,
									"scores":	[-4.053441956650782]
								}, {
									"case":	195,
									"scores":	[-4.053441956650782]
								}, {
									"case":	196,
									"scores":	[-4.053441956650782]
								}, {
									"case":	197,
									"scores":	[-4.053441956650782]
								}, {
									"case":	198,
									"scores":	[-4.053441956650782]
								}, {
									"case":	199,
									"scores":	[-4.053441956650782]
								}, {
									"case":	200,
									"scores":	[-4.053441956650782]
								}, {
									"case":	201,
									"scores":	[-4.053441956650782]
								}, {
									"case":	202,
									"scores":	[-4.053441956650782]
								}, {
									"case":	203,
									"scores":	[-4.053441956650782]
								}, {
									"case":	204,
									"scores":	[-4.053441956650782]
								}, {
									"case":	205,
									"scores":	[-4.053441956650782]
								}, {
									"case":	206,
									"scores":	[-4.053441956650782]
								}, {
									"case":	207,
									"scores":	[-4.053441956650782]
								}, {
									"case":	208,
									"scores":	[-4.053441956650782]
								}, {
									"case":	209,
									"scores":	[-4.053441956650782]
								}, {
									"case":	210,
									"scores":	[-4.053441956650782]
								}, {
									"case":	211,
									"scores":	[-4.053441956650782]
								}, {
									"case":	212,
									"scores":	[-4.053441956650782]
								}, {
									"case":	213,
									"scores":	[-4.053441956650782]
								}, {
									"case":	214,
									"scores":	[-4.053441956650782]
								}, {
									"case":	215,
									"scores":	[-4.053441956650782]
								}, {
									"case":	216,
									"scores":	[-4.053441956650782]
								}, {
									"case":	217,
									"scores":	[-4.053441956650782]
								}, {
									"case":	218,
									"scores":	[-4.053441956650782]
								}, {
									"case":	219,
									"scores":	[-4.053441956650782]
								}, {
									"case":	220,
									"scores":	[-4.053441956650782]
								}, {
									"case":	221,
									"scores":	[-4.053441956650782]
								}, {
									"case":	222,
									"scores":	[-4.053441956650782]
								}, {
									"case":	223,
									"scores":	[-4.053441956650782]
								}, {
									"case":	224,
									"scores":	[-4.053441956650782]
								}, {
									"case":	225,
									"scores":	[-4.053441956650782]
								}, {
									"case":	226,
									"scores":	[-4.053441956650782]
								}, {
									"case":	227,
									"scores":	[-4.053441956650782]
								}, {
									"case":	228,
									"scores":	[-4.053441956650782]
								}, {
									"case":	229,
									"scores":	[-4.053441956650782]
								}, {
									"case":	230,
									"scores":	[-4.053441956650782]
								}, {
									"case":	231,
									"scores":	[-4.053441956650782]
								}, {
									"case":	232,
									"scores":	[-6.6945765510507815, -8.82924340185078, -8.48627928085078, -8.8122570818507828, -8.8122570818507828, -8.30863299405078, -8.28851891405078, -8.79214300185078, -8.534557827850783, -8.534557827850783, -8.534557827850783, -8.54759112205078, -8.79214300185078, -8.79363003585078, -8.79363003585078, -8.58320448805078, -8.82924340185078]
								}]
						}, {
							"switch":	47,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2324,
							"begin_column":	3,
							"end_line":	2328,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        zval *__z = (return_value);\n        (*__z).value.str.len = strlen(__s);\n        (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n", "if ((!mem) || __is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        zval *__z = (return_value);\n        (*__z).value.str.len = strlen(__s);\n        (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n", "if ((!mem) && !__is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        zval *__z = (return_value);\n        (*__z).value.str.len = strlen(__s);\n        (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.2884526254281461, -7.0659060854281455, -6.2093529404281451, -6.8605381314281457, -6.8605381314281457, -5.7888523314281457, -5.6998694854281453, -6.7715552854281453, -6.457757585428145, -6.457757585428145, -6.457757585428145, -6.0169246254281461, -6.7715552854281453, -6.7748127254281458, -6.7748127254281458, -6.3080179854281457, -7.0659060854281455]
								}, {
									"case":	2,
									"scores":	[-4.4785057754281459, -6.2559592354281452, -5.3994060904281458, -6.0505912814281455, -6.0505912814281455, -4.9789054814281464, -4.889922635428146, -5.961608435428146, -5.6478107354281457, -5.6478107354281457, -5.6478107354281457, -5.2069777754281459, -5.961608435428146, -5.9648658754281456, -5.9648658754281456, -5.4980711354281455, -6.2559592354281452]
								}, {
									"case":	3,
									"scores":	[-4.4785057754281459, -6.2559592354281452, -5.3994060904281458, -6.0505912814281455, -6.0505912814281455, -4.9789054814281464, -4.889922635428146, -5.961608435428146, -5.6478107354281457, -5.6478107354281457, -5.6478107354281457, -5.2069777754281459, -5.961608435428146, -5.9648658754281456, -5.9648658754281456, -5.4980711354281455, -6.2559592354281452]
								}]
						}, {
							"switch":	50,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2324,
							"begin_column":	3,
							"end_line":	2328,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    if (!mem) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            zval *__z = (return_value);\n            (*__z).value.str.len = strlen(__s);\n            (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n", "if (!__is_neg(\"\", \"L2324\", 17, &(mem), sizeof (mem), &(return_value), sizeof (return_value), &(buf), sizeof (buf), &(docp), sizeof (docp), &(node), sizeof (node), &(format), sizeof (format), &(size), sizeof (size), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(xmlFree), sizeof (xmlFree), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)) && (!mem)) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        zval *__z = (return_value);\n        (*__z).value.str.len = strlen(__s);\n        (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.9071644666507819, -7.6846179266507821, -6.1146294816507822, -7.4792499726507824, -7.4792499726507824, -6.4075641726507815, -6.31858132665078, -7.390267126650782, -7.0764694266507817, -7.0764694266507817, -7.0764694266507817, -6.6356364666507819, -7.390267126650782, -7.3935245666507825, -7.3935245666507825, -6.9267298266507815, -7.6846179266507821]
								}, {
									"case":	2,
									"scores":	[-5.8240594666507821, -7.6015129266507824, -6.74495978165078, -7.39614497265078, -7.39614497265078, -6.32445917265078, -6.23547632665078, -7.3071621266507822, -6.993364426650782, -6.993364426650782, -6.993364426650782, -6.5525314666507821, -7.3071621266507822, -7.31041956665078, -7.31041956665078, -6.8436248266507818, -7.6015129266507824]
								}]
						}]
				}, {
					"line":	2328,
					"switches":	[{
							"switch":	51,
							"types":	[[], [], [], [], [232], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [], [], [], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], [], [], [], [], [], []],
							"begin_line":	2329,
							"begin_column":	1,
							"end_line":	2329,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&node->_private, 0, sizeof (*(&node->_private)))", "memset(&node->children, 0, sizeof (*(&node->children)))", "memset(&node->content, 0, sizeof (*(&node->content)))", "memset(&node->doc, 0, sizeof (*(&node->doc)))", "memset(&node->extra, 0, sizeof (*(&node->extra)))", "memset(&node->last, 0, sizeof (*(&node->last)))", "memset(&node->line, 0, sizeof (*(&node->line)))", "memset(&node->name, 0, sizeof (*(&node->name)))", "memset(&node->next, 0, sizeof (*(&node->next)))", "memset(&node->ns, 0, sizeof (*(&node->ns)))", "memset(&node->nsDef, 0, sizeof (*(&node->nsDef)))", "memset(&node->parent, 0, sizeof (*(&node->parent)))", "memset(&node->prev, 0, sizeof (*(&node->prev)))", "memset(&node->properties, 0, sizeof (*(&node->properties)))", "memset(&node->psvi, 0, sizeof (*(&node->psvi)))", "memset(&node->type, 0, sizeof (*(&node->type)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "memset(node->_private, 0, sizeof (*(node->_private)))", "memset(node->children, 0, sizeof (*(node->children)))", "memset(node->content, 0, sizeof (*(node->content)))", "memset(node->doc, 0, sizeof (*(node->doc)))", "memset(node->last, 0, sizeof (*(node->last)))", "memset(node->name, 0, sizeof (*(node->name)))", "memset(node->next, 0, sizeof (*(node->next)))", "memset(node->ns, 0, sizeof (*(node->ns)))", "memset(node->nsDef, 0, sizeof (*(node->nsDef)))", "memset(node->parent, 0, sizeof (*(node->parent)))", "memset(node->prev, 0, sizeof (*(node->prev)))", "memset(node->properties, 0, sizeof (*(node->properties)))", "memset(node->psvi, 0, sizeof (*(node->psvi)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2329\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(size), sizeof (size), &(format), sizeof (format), &(node), sizeof (node), &(xmlFree), sizeof (xmlFree), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.912023005428146]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}, {
									"case":	69,
									"scores":	[-3.912023005428146]
								}, {
									"case":	70,
									"scores":	[-3.912023005428146]
								}, {
									"case":	71,
									"scores":	[-3.912023005428146]
								}, {
									"case":	72,
									"scores":	[-3.912023005428146]
								}, {
									"case":	73,
									"scores":	[-3.912023005428146]
								}, {
									"case":	74,
									"scores":	[-3.912023005428146]
								}, {
									"case":	75,
									"scores":	[-3.912023005428146]
								}, {
									"case":	76,
									"scores":	[-3.912023005428146]
								}, {
									"case":	77,
									"scores":	[-3.912023005428146]
								}, {
									"case":	78,
									"scores":	[-3.912023005428146]
								}, {
									"case":	79,
									"scores":	[-3.912023005428146]
								}, {
									"case":	80,
									"scores":	[-3.912023005428146]
								}, {
									"case":	81,
									"scores":	[-3.912023005428146]
								}, {
									"case":	82,
									"scores":	[-3.912023005428146]
								}, {
									"case":	83,
									"scores":	[-3.912023005428146]
								}, {
									"case":	84,
									"scores":	[-3.912023005428146]
								}, {
									"case":	85,
									"scores":	[-3.912023005428146]
								}, {
									"case":	86,
									"scores":	[-3.912023005428146]
								}, {
									"case":	87,
									"scores":	[-3.912023005428146]
								}, {
									"case":	88,
									"scores":	[-3.912023005428146]
								}, {
									"case":	89,
									"scores":	[-3.912023005428146]
								}, {
									"case":	90,
									"scores":	[-3.912023005428146]
								}, {
									"case":	91,
									"scores":	[-3.912023005428146]
								}, {
									"case":	92,
									"scores":	[-3.912023005428146]
								}, {
									"case":	93,
									"scores":	[-3.912023005428146]
								}, {
									"case":	94,
									"scores":	[-3.912023005428146]
								}, {
									"case":	95,
									"scores":	[-3.912023005428146]
								}, {
									"case":	96,
									"scores":	[-3.912023005428146]
								}, {
									"case":	97,
									"scores":	[-3.912023005428146]
								}, {
									"case":	98,
									"scores":	[-3.912023005428146]
								}, {
									"case":	99,
									"scores":	[-3.912023005428146]
								}, {
									"case":	100,
									"scores":	[-3.912023005428146]
								}, {
									"case":	101,
									"scores":	[-3.912023005428146]
								}, {
									"case":	102,
									"scores":	[-3.912023005428146]
								}, {
									"case":	103,
									"scores":	[-3.912023005428146]
								}, {
									"case":	104,
									"scores":	[-3.912023005428146]
								}, {
									"case":	105,
									"scores":	[-3.912023005428146]
								}, {
									"case":	106,
									"scores":	[-3.912023005428146]
								}, {
									"case":	107,
									"scores":	[-3.912023005428146]
								}, {
									"case":	108,
									"scores":	[-3.912023005428146]
								}, {
									"case":	109,
									"scores":	[-3.912023005428146]
								}, {
									"case":	110,
									"scores":	[-3.912023005428146]
								}, {
									"case":	111,
									"scores":	[-3.912023005428146]
								}, {
									"case":	112,
									"scores":	[-3.912023005428146]
								}, {
									"case":	113,
									"scores":	[-3.912023005428146]
								}, {
									"case":	114,
									"scores":	[-3.912023005428146]
								}, {
									"case":	115,
									"scores":	[-3.912023005428146]
								}, {
									"case":	116,
									"scores":	[-3.912023005428146]
								}, {
									"case":	117,
									"scores":	[-3.912023005428146]
								}, {
									"case":	118,
									"scores":	[-3.912023005428146]
								}, {
									"case":	119,
									"scores":	[-3.912023005428146]
								}, {
									"case":	120,
									"scores":	[-3.912023005428146]
								}, {
									"case":	121,
									"scores":	[-3.912023005428146]
								}, {
									"case":	122,
									"scores":	[-3.912023005428146]
								}, {
									"case":	123,
									"scores":	[-3.912023005428146]
								}, {
									"case":	124,
									"scores":	[-3.912023005428146]
								}, {
									"case":	125,
									"scores":	[-3.912023005428146]
								}, {
									"case":	126,
									"scores":	[-3.912023005428146]
								}, {
									"case":	127,
									"scores":	[-3.912023005428146]
								}, {
									"case":	128,
									"scores":	[-3.912023005428146]
								}, {
									"case":	129,
									"scores":	[-3.912023005428146]
								}, {
									"case":	130,
									"scores":	[-3.912023005428146]
								}, {
									"case":	131,
									"scores":	[-3.912023005428146]
								}, {
									"case":	132,
									"scores":	[-3.912023005428146]
								}, {
									"case":	133,
									"scores":	[-3.912023005428146]
								}, {
									"case":	134,
									"scores":	[-3.912023005428146]
								}, {
									"case":	135,
									"scores":	[-3.912023005428146]
								}, {
									"case":	136,
									"scores":	[-3.912023005428146]
								}, {
									"case":	137,
									"scores":	[-3.912023005428146]
								}, {
									"case":	138,
									"scores":	[-3.912023005428146]
								}, {
									"case":	139,
									"scores":	[-3.912023005428146]
								}, {
									"case":	140,
									"scores":	[-3.912023005428146]
								}, {
									"case":	141,
									"scores":	[-3.912023005428146]
								}, {
									"case":	142,
									"scores":	[-3.912023005428146]
								}, {
									"case":	143,
									"scores":	[-3.912023005428146]
								}, {
									"case":	144,
									"scores":	[-3.912023005428146]
								}, {
									"case":	145,
									"scores":	[-3.912023005428146]
								}, {
									"case":	146,
									"scores":	[-3.912023005428146]
								}, {
									"case":	147,
									"scores":	[-3.912023005428146]
								}, {
									"case":	148,
									"scores":	[-3.912023005428146]
								}, {
									"case":	149,
									"scores":	[-3.912023005428146]
								}, {
									"case":	150,
									"scores":	[-3.912023005428146]
								}, {
									"case":	151,
									"scores":	[-3.912023005428146]
								}, {
									"case":	152,
									"scores":	[-3.912023005428146]
								}, {
									"case":	153,
									"scores":	[-3.912023005428146]
								}, {
									"case":	154,
									"scores":	[-3.912023005428146]
								}, {
									"case":	155,
									"scores":	[-3.912023005428146]
								}, {
									"case":	156,
									"scores":	[-3.912023005428146]
								}, {
									"case":	157,
									"scores":	[-3.912023005428146]
								}, {
									"case":	158,
									"scores":	[-3.912023005428146]
								}, {
									"case":	159,
									"scores":	[-3.912023005428146]
								}, {
									"case":	160,
									"scores":	[-3.912023005428146]
								}, {
									"case":	161,
									"scores":	[-3.912023005428146]
								}, {
									"case":	162,
									"scores":	[-3.912023005428146]
								}, {
									"case":	163,
									"scores":	[-3.912023005428146]
								}, {
									"case":	164,
									"scores":	[-3.912023005428146]
								}, {
									"case":	165,
									"scores":	[-3.912023005428146]
								}, {
									"case":	166,
									"scores":	[-3.912023005428146]
								}, {
									"case":	167,
									"scores":	[-3.912023005428146]
								}, {
									"case":	168,
									"scores":	[-3.912023005428146]
								}, {
									"case":	169,
									"scores":	[-3.912023005428146]
								}, {
									"case":	170,
									"scores":	[-3.912023005428146]
								}, {
									"case":	171,
									"scores":	[-3.912023005428146]
								}, {
									"case":	172,
									"scores":	[-3.912023005428146]
								}, {
									"case":	173,
									"scores":	[-3.912023005428146]
								}, {
									"case":	174,
									"scores":	[-3.912023005428146]
								}, {
									"case":	175,
									"scores":	[-3.912023005428146]
								}, {
									"case":	176,
									"scores":	[-3.912023005428146]
								}, {
									"case":	177,
									"scores":	[-3.912023005428146]
								}, {
									"case":	178,
									"scores":	[-3.912023005428146]
								}, {
									"case":	179,
									"scores":	[-3.912023005428146]
								}, {
									"case":	180,
									"scores":	[-3.912023005428146]
								}, {
									"case":	181,
									"scores":	[-3.912023005428146]
								}, {
									"case":	182,
									"scores":	[-3.912023005428146]
								}, {
									"case":	183,
									"scores":	[-3.912023005428146]
								}, {
									"case":	184,
									"scores":	[-3.912023005428146]
								}, {
									"case":	185,
									"scores":	[-3.912023005428146]
								}, {
									"case":	186,
									"scores":	[-3.912023005428146]
								}, {
									"case":	187,
									"scores":	[-3.912023005428146]
								}, {
									"case":	188,
									"scores":	[-3.912023005428146]
								}, {
									"case":	189,
									"scores":	[-3.912023005428146]
								}, {
									"case":	190,
									"scores":	[-3.912023005428146]
								}, {
									"case":	191,
									"scores":	[-3.912023005428146]
								}, {
									"case":	192,
									"scores":	[-3.912023005428146]
								}, {
									"case":	193,
									"scores":	[-3.912023005428146]
								}, {
									"case":	194,
									"scores":	[-3.912023005428146]
								}, {
									"case":	195,
									"scores":	[-3.912023005428146]
								}, {
									"case":	196,
									"scores":	[-3.912023005428146]
								}, {
									"case":	197,
									"scores":	[-3.912023005428146]
								}, {
									"case":	198,
									"scores":	[-3.912023005428146]
								}, {
									"case":	199,
									"scores":	[-3.912023005428146]
								}, {
									"case":	200,
									"scores":	[-3.912023005428146]
								}, {
									"case":	201,
									"scores":	[-3.912023005428146]
								}, {
									"case":	202,
									"scores":	[-3.912023005428146]
								}, {
									"case":	203,
									"scores":	[-3.912023005428146]
								}, {
									"case":	204,
									"scores":	[-3.912023005428146]
								}, {
									"case":	205,
									"scores":	[-3.912023005428146]
								}, {
									"case":	206,
									"scores":	[-3.912023005428146]
								}, {
									"case":	207,
									"scores":	[-3.912023005428146]
								}, {
									"case":	208,
									"scores":	[-3.912023005428146]
								}, {
									"case":	209,
									"scores":	[-3.912023005428146]
								}, {
									"case":	210,
									"scores":	[-3.912023005428146]
								}, {
									"case":	211,
									"scores":	[-3.912023005428146]
								}, {
									"case":	212,
									"scores":	[-3.912023005428146]
								}, {
									"case":	213,
									"scores":	[-3.912023005428146]
								}, {
									"case":	214,
									"scores":	[-3.912023005428146]
								}, {
									"case":	215,
									"scores":	[-3.912023005428146]
								}, {
									"case":	216,
									"scores":	[-3.912023005428146]
								}, {
									"case":	217,
									"scores":	[-3.912023005428146]
								}, {
									"case":	218,
									"scores":	[-3.912023005428146]
								}, {
									"case":	219,
									"scores":	[-3.912023005428146]
								}, {
									"case":	220,
									"scores":	[-3.912023005428146]
								}, {
									"case":	221,
									"scores":	[-3.912023005428146]
								}, {
									"case":	222,
									"scores":	[-3.912023005428146]
								}, {
									"case":	223,
									"scores":	[-3.912023005428146]
								}, {
									"case":	224,
									"scores":	[-3.912023005428146]
								}, {
									"case":	225,
									"scores":	[-3.912023005428146]
								}, {
									"case":	226,
									"scores":	[-3.912023005428146]
								}, {
									"case":	227,
									"scores":	[-3.912023005428146]
								}, {
									"case":	228,
									"scores":	[-3.912023005428146]
								}, {
									"case":	229,
									"scores":	[-3.912023005428146]
								}, {
									"case":	230,
									"scores":	[-3.912023005428146]
								}, {
									"case":	231,
									"scores":	[-3.912023005428146]
								}, {
									"case":	232,
									"scores":	[-5.5757035076281456, -6.9196582506281459, -4.7849913998281455, -6.902671930628145, -6.3789337628281455, -6.3990478428281445, -6.902671930628145, -6.6380059708281465, -6.882557850628146, -6.6249726766281452, -6.6249726766281452, -6.6249726766281452, -6.882557850628146, -6.8840448846281461, -6.8840448846281461, -6.6736193368281462, -6.9196582506281459]
								}]
						}, {
							"switch":	52,
							"types":	[[], [], [1], [], [], [], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [], [49, 50, 51], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [], [], [48]],
							"begin_line":	2329,
							"begin_column":	3,
							"end_line":	2329,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L2329\", 17, &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(size), sizeof (size), &(format), sizeof (format), &(node), sizeof (node), &(xmlFree), sizeof (xmlFree), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    xmlBufferFree(buf);\n", "xmlBufferCCat(buf, 0)", "xmlBufferCat(buf, 0)", "xmlBufferGrow(buf, -1)", "xmlBufferGrow(buf, 0)", "xmlBufferGrow(buf, 1)", "xmlBufferGrow(buf, 2)", "xmlBufferGrow(buf, 3)", "xmlBufferGrow(buf, 6)", "xmlBufferGrow(buf, xmlParserMaxDepth)", "xmlBufferResize(buf, -1)", "xmlBufferResize(buf, 0)", "xmlBufferResize(buf, 1)", "xmlBufferResize(buf, 2)", "xmlBufferResize(buf, 3)", "xmlBufferResize(buf, 6)", "xmlBufferResize(buf, xmlParserMaxDepth)", "xmlBufferSetAllocationScheme(buf, -1)", "xmlBufferSetAllocationScheme(buf, 0)", "xmlBufferSetAllocationScheme(buf, 1)", "xmlBufferSetAllocationScheme(buf, 2)", "xmlBufferSetAllocationScheme(buf, 3)", "xmlBufferSetAllocationScheme(buf, 6)", "xmlBufferShrink(buf, -1)", "xmlBufferShrink(buf, 0)", "xmlBufferShrink(buf, 1)", "xmlBufferShrink(buf, 2)", "xmlBufferShrink(buf, 3)", "xmlBufferShrink(buf, 6)", "xmlBufferShrink(buf, xmlParserMaxDepth)", "xmlBufferWriteCHAR(buf, 0)", "xmlBufferWriteChar(buf, 0)", "xmlBufferWriteQuotedString(buf, 0)", "xmlDumpAttributeDecl(buf, 0)", "xmlDumpAttributeTable(buf, 0)", "xmlDumpElementDecl(buf, 0)", "xmlDumpElementTable(buf, 0)", "xmlDumpEntitiesTable(buf, 0)", "xmlDumpEntityDecl(buf, 0)", "xmlDumpNotationDecl(buf, 0)", "xmlDumpNotationTable(buf, 0)", "xmlExpDump(buf, 0)", "xmlExpDump(buf, emptyExp)", "xmlExpDump(buf, forbiddenExp)", "xmlNodeBufGetContent(buf, 0)", "xmlNodeBufGetContent(buf, node)", "xmlOutputBufferCreateBuffer(buf, 0)", "{\n}\n", "xmlBufferContent(buf)", "xmlBufferEmpty(buf)", "xmlBufferLength(buf)", "xmlBufferFree((&buf))", "xmlBufferFree((&doc_props))", "xmlBufferFree((&docp))", "xmlBufferFree((&format))", "xmlBufferFree((&ht))", "xmlBufferFree((&id))", "xmlBufferFree((&intern))", "xmlBufferFree((&mem))", "xmlBufferFree((&node))", "xmlBufferFree((&nodeobj))", "xmlBufferFree((&nodep))", "xmlBufferFree((&return_value))", "xmlBufferFree((&return_value_ptr))", "xmlBufferFree((&return_value_used))", "xmlBufferFree((&size))", "xmlBufferFree((&this_ptr))", "xmlBufferFree((buf))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0208750214281466, -6.6240389754281459, -4.8465855154281456, -6.4186710214281462, -5.2580023754281457, -5.3469852214281461, -6.4186710214281462, -5.5750575154281456, -6.3296881754281458, -6.0158904754281455, -6.0158904754281455, -6.0158904754281455, -6.3296881754281458, -6.3329456154281463, -6.3329456154281463, -5.8661508754281453, -6.6240389754281459]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}]
						}]
				}, {
					"line":	2331,
					"switches":	[{
							"switch":	53,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2332,
							"begin_column":	1,
							"end_line":	2332,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2332\", 17, &(docp), sizeof (docp), &(mem), sizeof (mem), &(size), sizeof (size), &(format), sizeof (format), &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(node), sizeof (node), &(xmlFree), sizeof (xmlFree), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.821144834716522]
								}, {
									"case":	2,
									"scores":	[-4.821144834716522]
								}, {
									"case":	3,
									"scores":	[-4.821144834716522]
								}, {
									"case":	4,
									"scores":	[-4.821144834716522]
								}, {
									"case":	5,
									"scores":	[-4.821144834716522]
								}, {
									"case":	6,
									"scores":	[-4.821144834716522]
								}, {
									"case":	7,
									"scores":	[-4.821144834716522]
								}, {
									"case":	8,
									"scores":	[-4.821144834716522]
								}, {
									"case":	9,
									"scores":	[-4.821144834716522]
								}, {
									"case":	10,
									"scores":	[-4.821144834716522]
								}, {
									"case":	11,
									"scores":	[-4.821144834716522]
								}, {
									"case":	12,
									"scores":	[-4.821144834716522]
								}, {
									"case":	13,
									"scores":	[-4.821144834716522]
								}, {
									"case":	14,
									"scores":	[-4.821144834716522]
								}, {
									"case":	15,
									"scores":	[-4.821144834716522]
								}, {
									"case":	16,
									"scores":	[-4.821144834716522]
								}, {
									"case":	17,
									"scores":	[-4.821144834716522]
								}, {
									"case":	18,
									"scores":	[-4.821144834716522]
								}, {
									"case":	19,
									"scores":	[-4.821144834716522]
								}, {
									"case":	20,
									"scores":	[-4.821144834716522]
								}, {
									"case":	21,
									"scores":	[-4.821144834716522]
								}, {
									"case":	22,
									"scores":	[-4.821144834716522]
								}, {
									"case":	23,
									"scores":	[-4.821144834716522]
								}, {
									"case":	24,
									"scores":	[-4.821144834716522]
								}, {
									"case":	25,
									"scores":	[-4.821144834716522]
								}, {
									"case":	26,
									"scores":	[-4.821144834716522]
								}, {
									"case":	27,
									"scores":	[-4.821144834716522]
								}, {
									"case":	28,
									"scores":	[-4.821144834716522]
								}, {
									"case":	29,
									"scores":	[-4.821144834716522]
								}, {
									"case":	30,
									"scores":	[-4.821144834716522]
								}, {
									"case":	31,
									"scores":	[-4.821144834716522]
								}, {
									"case":	32,
									"scores":	[-4.821144834716522]
								}, {
									"case":	33,
									"scores":	[-4.821144834716522]
								}, {
									"case":	34,
									"scores":	[-4.821144834716522]
								}, {
									"case":	35,
									"scores":	[-4.821144834716522]
								}, {
									"case":	36,
									"scores":	[-4.821144834716522]
								}, {
									"case":	37,
									"scores":	[-4.821144834716522]
								}, {
									"case":	38,
									"scores":	[-4.821144834716522]
								}, {
									"case":	39,
									"scores":	[-4.821144834716522]
								}, {
									"case":	40,
									"scores":	[-4.821144834716522]
								}, {
									"case":	41,
									"scores":	[-4.821144834716522]
								}, {
									"case":	42,
									"scores":	[-4.821144834716522]
								}, {
									"case":	43,
									"scores":	[-4.821144834716522]
								}, {
									"case":	44,
									"scores":	[-4.821144834716522]
								}, {
									"case":	45,
									"scores":	[-4.821144834716522]
								}, {
									"case":	46,
									"scores":	[-4.821144834716522]
								}, {
									"case":	47,
									"scores":	[-4.821144834716522]
								}, {
									"case":	48,
									"scores":	[-4.821144834716522]
								}, {
									"case":	49,
									"scores":	[-4.821144834716522]
								}, {
									"case":	50,
									"scores":	[-4.821144834716522]
								}, {
									"case":	51,
									"scores":	[-4.821144834716522]
								}, {
									"case":	52,
									"scores":	[-4.821144834716522]
								}, {
									"case":	53,
									"scores":	[-4.821144834716522]
								}, {
									"case":	54,
									"scores":	[-4.821144834716522]
								}, {
									"case":	55,
									"scores":	[-4.821144834716522]
								}, {
									"case":	56,
									"scores":	[-4.821144834716522]
								}, {
									"case":	57,
									"scores":	[-4.821144834716522]
								}, {
									"case":	58,
									"scores":	[-4.821144834716522]
								}, {
									"case":	59,
									"scores":	[-4.821144834716522]
								}, {
									"case":	60,
									"scores":	[-4.821144834716522]
								}, {
									"case":	61,
									"scores":	[-4.821144834716522]
								}, {
									"case":	62,
									"scores":	[-4.821144834716522]
								}, {
									"case":	63,
									"scores":	[-4.821144834716522]
								}, {
									"case":	64,
									"scores":	[-4.821144834716522]
								}, {
									"case":	65,
									"scores":	[-4.821144834716522]
								}, {
									"case":	66,
									"scores":	[-4.821144834716522]
								}, {
									"case":	67,
									"scores":	[-4.821144834716522]
								}, {
									"case":	68,
									"scores":	[-4.821144834716522]
								}, {
									"case":	69,
									"scores":	[-4.821144834716522]
								}, {
									"case":	70,
									"scores":	[-4.821144834716522]
								}, {
									"case":	71,
									"scores":	[-4.821144834716522]
								}, {
									"case":	72,
									"scores":	[-4.821144834716522]
								}, {
									"case":	73,
									"scores":	[-4.821144834716522]
								}, {
									"case":	74,
									"scores":	[-4.821144834716522]
								}, {
									"case":	75,
									"scores":	[-4.821144834716522]
								}, {
									"case":	76,
									"scores":	[-4.821144834716522]
								}, {
									"case":	77,
									"scores":	[-4.821144834716522]
								}, {
									"case":	78,
									"scores":	[-4.821144834716522]
								}, {
									"case":	79,
									"scores":	[-4.821144834716522]
								}, {
									"case":	80,
									"scores":	[-4.821144834716522]
								}, {
									"case":	81,
									"scores":	[-4.821144834716522]
								}, {
									"case":	82,
									"scores":	[-4.821144834716522]
								}, {
									"case":	83,
									"scores":	[-4.821144834716522]
								}, {
									"case":	84,
									"scores":	[-4.821144834716522]
								}, {
									"case":	85,
									"scores":	[-4.821144834716522]
								}, {
									"case":	86,
									"scores":	[-4.821144834716522]
								}, {
									"case":	87,
									"scores":	[-4.821144834716522]
								}, {
									"case":	88,
									"scores":	[-4.821144834716522]
								}, {
									"case":	89,
									"scores":	[-4.821144834716522]
								}, {
									"case":	90,
									"scores":	[-4.821144834716522]
								}, {
									"case":	91,
									"scores":	[-4.821144834716522]
								}, {
									"case":	92,
									"scores":	[-4.821144834716522]
								}, {
									"case":	93,
									"scores":	[-4.821144834716522]
								}, {
									"case":	94,
									"scores":	[-4.821144834716522]
								}, {
									"case":	95,
									"scores":	[-4.821144834716522]
								}, {
									"case":	96,
									"scores":	[-4.821144834716522]
								}, {
									"case":	97,
									"scores":	[-4.821144834716522]
								}, {
									"case":	98,
									"scores":	[-4.821144834716522]
								}, {
									"case":	99,
									"scores":	[-4.821144834716522]
								}, {
									"case":	100,
									"scores":	[-4.821144834716522]
								}, {
									"case":	101,
									"scores":	[-4.821144834716522]
								}, {
									"case":	102,
									"scores":	[-4.821144834716522]
								}, {
									"case":	103,
									"scores":	[-4.821144834716522]
								}, {
									"case":	104,
									"scores":	[-4.821144834716522]
								}, {
									"case":	105,
									"scores":	[-4.821144834716522]
								}, {
									"case":	106,
									"scores":	[-4.821144834716522]
								}, {
									"case":	107,
									"scores":	[-4.821144834716522]
								}, {
									"case":	108,
									"scores":	[-4.821144834716522]
								}, {
									"case":	109,
									"scores":	[-4.821144834716522]
								}, {
									"case":	110,
									"scores":	[-4.821144834716522]
								}, {
									"case":	111,
									"scores":	[-4.821144834716522]
								}, {
									"case":	112,
									"scores":	[-4.821144834716522]
								}, {
									"case":	113,
									"scores":	[-4.821144834716522]
								}, {
									"case":	114,
									"scores":	[-4.821144834716522]
								}, {
									"case":	115,
									"scores":	[-4.821144834716522]
								}, {
									"case":	116,
									"scores":	[-4.821144834716522]
								}, {
									"case":	117,
									"scores":	[-4.821144834716522]
								}, {
									"case":	118,
									"scores":	[-4.821144834716522]
								}, {
									"case":	119,
									"scores":	[-4.821144834716522]
								}, {
									"case":	120,
									"scores":	[-4.821144834716522]
								}, {
									"case":	121,
									"scores":	[-4.821144834716522]
								}, {
									"case":	122,
									"scores":	[-4.821144834716522]
								}, {
									"case":	123,
									"scores":	[-4.821144834716522]
								}, {
									"case":	124,
									"scores":	[-4.821144834716522]
								}, {
									"case":	125,
									"scores":	[-4.821144834716522]
								}, {
									"case":	126,
									"scores":	[-4.821144834716522]
								}, {
									"case":	127,
									"scores":	[-4.821144834716522]
								}, {
									"case":	128,
									"scores":	[-4.821144834716522]
								}, {
									"case":	129,
									"scores":	[-4.821144834716522]
								}, {
									"case":	130,
									"scores":	[-4.821144834716522]
								}, {
									"case":	131,
									"scores":	[-4.821144834716522]
								}, {
									"case":	132,
									"scores":	[-4.821144834716522]
								}, {
									"case":	133,
									"scores":	[-4.821144834716522]
								}, {
									"case":	134,
									"scores":	[-4.821144834716522]
								}, {
									"case":	135,
									"scores":	[-4.821144834716522]
								}, {
									"case":	136,
									"scores":	[-4.821144834716522]
								}, {
									"case":	137,
									"scores":	[-4.821144834716522]
								}, {
									"case":	138,
									"scores":	[-4.821144834716522]
								}, {
									"case":	139,
									"scores":	[-4.821144834716522]
								}, {
									"case":	140,
									"scores":	[-4.821144834716522]
								}, {
									"case":	141,
									"scores":	[-4.821144834716522]
								}, {
									"case":	142,
									"scores":	[-4.821144834716522]
								}, {
									"case":	143,
									"scores":	[-4.821144834716522]
								}, {
									"case":	144,
									"scores":	[-4.821144834716522]
								}, {
									"case":	145,
									"scores":	[-4.821144834716522]
								}, {
									"case":	146,
									"scores":	[-4.821144834716522]
								}, {
									"case":	147,
									"scores":	[-4.821144834716522]
								}, {
									"case":	148,
									"scores":	[-4.821144834716522]
								}, {
									"case":	149,
									"scores":	[-4.821144834716522]
								}, {
									"case":	150,
									"scores":	[-4.821144834716522]
								}, {
									"case":	151,
									"scores":	[-4.821144834716522]
								}, {
									"case":	152,
									"scores":	[-4.821144834716522]
								}, {
									"case":	153,
									"scores":	[-4.821144834716522]
								}, {
									"case":	154,
									"scores":	[-4.821144834716522]
								}, {
									"case":	155,
									"scores":	[-4.821144834716522]
								}, {
									"case":	156,
									"scores":	[-4.821144834716522]
								}, {
									"case":	157,
									"scores":	[-4.821144834716522]
								}, {
									"case":	158,
									"scores":	[-4.821144834716522]
								}, {
									"case":	159,
									"scores":	[-4.821144834716522]
								}, {
									"case":	160,
									"scores":	[-4.821144834716522]
								}, {
									"case":	161,
									"scores":	[-4.821144834716522]
								}, {
									"case":	162,
									"scores":	[-4.821144834716522]
								}, {
									"case":	163,
									"scores":	[-4.821144834716522]
								}, {
									"case":	164,
									"scores":	[-4.821144834716522]
								}, {
									"case":	165,
									"scores":	[-4.821144834716522]
								}, {
									"case":	166,
									"scores":	[-4.821144834716522]
								}, {
									"case":	167,
									"scores":	[-4.821144834716522]
								}, {
									"case":	168,
									"scores":	[-4.821144834716522]
								}, {
									"case":	169,
									"scores":	[-4.821144834716522]
								}, {
									"case":	170,
									"scores":	[-4.821144834716522]
								}, {
									"case":	171,
									"scores":	[-4.821144834716522]
								}, {
									"case":	172,
									"scores":	[-4.821144834716522]
								}, {
									"case":	173,
									"scores":	[-4.821144834716522]
								}, {
									"case":	174,
									"scores":	[-4.821144834716522]
								}, {
									"case":	175,
									"scores":	[-4.821144834716522]
								}, {
									"case":	176,
									"scores":	[-4.821144834716522]
								}, {
									"case":	177,
									"scores":	[-4.821144834716522]
								}, {
									"case":	178,
									"scores":	[-4.821144834716522]
								}, {
									"case":	179,
									"scores":	[-4.821144834716522]
								}, {
									"case":	180,
									"scores":	[-4.821144834716522]
								}, {
									"case":	181,
									"scores":	[-4.821144834716522]
								}, {
									"case":	182,
									"scores":	[-4.821144834716522]
								}, {
									"case":	183,
									"scores":	[-4.821144834716522]
								}, {
									"case":	184,
									"scores":	[-4.821144834716522]
								}, {
									"case":	185,
									"scores":	[-4.821144834716522]
								}, {
									"case":	186,
									"scores":	[-4.821144834716522]
								}, {
									"case":	187,
									"scores":	[-4.821144834716522]
								}, {
									"case":	188,
									"scores":	[-4.821144834716522]
								}, {
									"case":	189,
									"scores":	[-4.821144834716522]
								}, {
									"case":	190,
									"scores":	[-4.821144834716522]
								}, {
									"case":	191,
									"scores":	[-4.821144834716522]
								}, {
									"case":	192,
									"scores":	[-4.821144834716522]
								}, {
									"case":	193,
									"scores":	[-4.821144834716522]
								}, {
									"case":	194,
									"scores":	[-4.821144834716522]
								}, {
									"case":	195,
									"scores":	[-4.821144834716522]
								}, {
									"case":	196,
									"scores":	[-4.821144834716522]
								}, {
									"case":	197,
									"scores":	[-4.821144834716522]
								}, {
									"case":	198,
									"scores":	[-4.821144834716522]
								}, {
									"case":	199,
									"scores":	[-4.821144834716522]
								}, {
									"case":	200,
									"scores":	[-4.821144834716522]
								}, {
									"case":	201,
									"scores":	[-4.821144834716522]
								}, {
									"case":	202,
									"scores":	[-4.821144834716522]
								}, {
									"case":	203,
									"scores":	[-6.6842207109165219, -7.3587876921165218, -7.2799479221165218, -6.1805966231165224, -7.28194350591652, -7.5766290799165219, -7.539528679916522, -7.5726132465265223, -7.539528679916522, -7.28194350591652, -7.28194350591652, -7.28194350591652, -7.539528679916522, -7.5410157139165221, -7.5410157139165221, -7.3305901661165223, -7.5766290799165219]
								}]
						}, {
							"switch":	54,
							"types":	[[], [], [1], [], [], [], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], [], [3, 4, 5, 6], [], [], [], [], [], [], [], [2]],
							"begin_line":	2332,
							"begin_column":	3,
							"end_line":	2332,
							"end_column":	52,
							"patch_codes":	["if (!__is_neg(\"\", \"L2332\", 17, &(docp), sizeof (docp), &(mem), sizeof (mem), &(size), sizeof (size), &(format), sizeof (format), &(buf), sizeof (buf), &(return_value), sizeof (return_value), &(node), sizeof (node), &(xmlFree), sizeof (xmlFree), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n", "{\n}\n", "Debug(docp, &mem, &size, format)", "php_printf(docp, &mem, &size, format)", "printf(docp, &mem, &size, format)", "xmlDocDumpFormatMemory(docp, &mem, &size, format)", "htmlDocDumpMemoryFormat((&buf), &mem, &size, format)", "htmlDocDumpMemoryFormat((&doc_props), &mem, &size, format)", "htmlDocDumpMemoryFormat((&docp), &mem, &size, format)", "htmlDocDumpMemoryFormat((&format), &mem, &size, format)", "htmlDocDumpMemoryFormat((&ht), &mem, &size, format)", "htmlDocDumpMemoryFormat((&id), &mem, &size, format)", "htmlDocDumpMemoryFormat((&intern), &mem, &size, format)", "htmlDocDumpMemoryFormat((&mem), &mem, &size, format)", "htmlDocDumpMemoryFormat((&node), &mem, &size, format)", "htmlDocDumpMemoryFormat((&nodeobj), &mem, &size, format)", "htmlDocDumpMemoryFormat((&nodep), &mem, &size, format)", "htmlDocDumpMemoryFormat((&return_value), &mem, &size, format)", "htmlDocDumpMemoryFormat((&return_value_ptr), &mem, &size, format)", "htmlDocDumpMemoryFormat((&return_value_used), &mem, &size, format)", "htmlDocDumpMemoryFormat((&size), &mem, &size, format)", "htmlDocDumpMemoryFormat((&this_ptr), &mem, &size, format)", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(&buf), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&doc_props), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&docp), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&format), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&ht), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&id), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&intern), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&mem), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&node), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&nodeobj), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&nodep), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&return_value), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&return_value_ptr), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&return_value_used), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&size), &size, format)", "htmlDocDumpMemoryFormat(docp, &(&this_ptr), &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlDocDumpMemoryFormat(docp, &mem, &(0 * format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(0 * ht), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(0 * return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(0 * size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(buf != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(buf == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(doc_props != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(doc_props == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(docp != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(docp == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format * ht), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format * return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format * size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format + 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format - 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht != format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht != return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht != size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht * format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht * return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht * size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht + 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht + format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht + return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht + size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht - 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht - format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht - return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht - size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht == format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht == return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht == size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(ht), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(id != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(id != nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(id == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(id == nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(intern != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(intern != nodeobj), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(intern == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(intern == nodeobj), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(mem != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(mem == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(node != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(node == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(nodeobj != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(nodeobj == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(nodep != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(nodep == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value != id), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value != nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value != this_ptr), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value == id), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value == nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value == this_ptr), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_ptr != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_ptr == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used != format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used != size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used * format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used * ht), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used * size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used + 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used + format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used + size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used - 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used - format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used - size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used == format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used == size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size != format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size * format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size * ht), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size * return_value_used), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size + 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size + format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size - 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size - format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size == format), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(size), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr != 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr != id), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr != nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr == 0), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr == id), format)", "htmlDocDumpMemoryFormat(docp, &mem, &(this_ptr == nodep), format)", "htmlDocDumpMemoryFormat(docp, &mem, &size, (0 * format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (0 * ht))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (0 * return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (0 * size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (buf != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (buf == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (doc_props != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (doc_props == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (docp != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (docp == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format * ht))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format * return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format * size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format + 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format - 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht != format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht != return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht != size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht * format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht * return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht * size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht + 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht + format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht + return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht + size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht - 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht - format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht - return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht - size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht == format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht == return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht == size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (ht))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (id != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (id != nodep))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (id == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (id == nodep))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (intern != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (intern != nodeobj))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (intern == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (intern == nodeobj))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (mem != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (mem == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (node != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (node == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (nodeobj != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (nodeobj == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (nodep != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (nodep == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value != id))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value != nodep))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value != this_ptr))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value == id))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value == nodep))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value == this_ptr))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_ptr != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_ptr == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used != format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used != size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used * format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used * ht))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used * size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used + 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used + format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used + size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used - 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used - format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used - size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used == format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used == size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size != format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size * format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size * ht))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size * return_value_used))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size + 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size + format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size - 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size - format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size == format))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (size))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr != 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr != id))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr != nodep))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr == 0))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr == id))", "htmlDocDumpMemoryFormat(docp, &mem, &size, (this_ptr == nodep))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8479420947165224, -6.5367762037165225, -6.0343406947165219, -5.7762562947165224, -7.2475796947165225, -7.85572819471652, -7.5613773947165219, -6.9402899301265215, -7.5613773947165219, -7.2475796947165225, -7.2475796947165225, -7.2475796947165225, -7.5613773947165219, -7.5646348347165215, -7.5646348347165215, -7.0978400947165223, -7.85572819471652]
								}, {
									"case":	2,
									"scores":	[-4.821144834716522]
								}, {
									"case":	3,
									"scores":	[-4.821144834716522]
								}, {
									"case":	4,
									"scores":	[-4.821144834716522]
								}, {
									"case":	5,
									"scores":	[-4.821144834716522]
								}, {
									"case":	6,
									"scores":	[-4.821144834716522]
								}, {
									"case":	7,
									"scores":	[-4.821144834716522]
								}, {
									"case":	8,
									"scores":	[-4.821144834716522]
								}, {
									"case":	9,
									"scores":	[-4.821144834716522]
								}, {
									"case":	10,
									"scores":	[-4.821144834716522]
								}, {
									"case":	11,
									"scores":	[-4.821144834716522]
								}, {
									"case":	12,
									"scores":	[-4.821144834716522]
								}, {
									"case":	13,
									"scores":	[-4.821144834716522]
								}, {
									"case":	14,
									"scores":	[-4.821144834716522]
								}, {
									"case":	15,
									"scores":	[-4.821144834716522]
								}, {
									"case":	16,
									"scores":	[-4.821144834716522]
								}, {
									"case":	17,
									"scores":	[-4.821144834716522]
								}, {
									"case":	18,
									"scores":	[-4.821144834716522]
								}, {
									"case":	19,
									"scores":	[-4.821144834716522]
								}, {
									"case":	20,
									"scores":	[-4.821144834716522]
								}, {
									"case":	21,
									"scores":	[-4.821144834716522]
								}, {
									"case":	22,
									"scores":	[-4.821144834716522]
								}, {
									"case":	23,
									"scores":	[-4.821144834716522]
								}, {
									"case":	24,
									"scores":	[-4.821144834716522]
								}, {
									"case":	25,
									"scores":	[-4.821144834716522]
								}, {
									"case":	26,
									"scores":	[-4.821144834716522]
								}, {
									"case":	27,
									"scores":	[-4.821144834716522]
								}, {
									"case":	28,
									"scores":	[-4.821144834716522]
								}, {
									"case":	29,
									"scores":	[-4.821144834716522]
								}, {
									"case":	30,
									"scores":	[-4.821144834716522]
								}, {
									"case":	31,
									"scores":	[-4.821144834716522]
								}, {
									"case":	32,
									"scores":	[-4.821144834716522]
								}, {
									"case":	33,
									"scores":	[-4.821144834716522]
								}, {
									"case":	34,
									"scores":	[-4.821144834716522]
								}, {
									"case":	35,
									"scores":	[-4.821144834716522]
								}, {
									"case":	36,
									"scores":	[-4.821144834716522]
								}, {
									"case":	37,
									"scores":	[-4.821144834716522]
								}, {
									"case":	38,
									"scores":	[-4.821144834716522]
								}, {
									"case":	39,
									"scores":	[-4.821144834716522]
								}, {
									"case":	40,
									"scores":	[-4.821144834716522]
								}, {
									"case":	41,
									"scores":	[-4.821144834716522]
								}, {
									"case":	42,
									"scores":	[-4.821144834716522]
								}, {
									"case":	43,
									"scores":	[-4.821144834716522]
								}, {
									"case":	44,
									"scores":	[-4.821144834716522]
								}, {
									"case":	45,
									"scores":	[-4.821144834716522]
								}, {
									"case":	46,
									"scores":	[-4.821144834716522]
								}, {
									"case":	47,
									"scores":	[-4.821144834716522]
								}, {
									"case":	48,
									"scores":	[-4.821144834716522]
								}, {
									"case":	49,
									"scores":	[-4.821144834716522]
								}, {
									"case":	50,
									"scores":	[-4.821144834716522]
								}, {
									"case":	51,
									"scores":	[-4.821144834716522]
								}, {
									"case":	52,
									"scores":	[-4.821144834716522]
								}, {
									"case":	53,
									"scores":	[-4.821144834716522]
								}, {
									"case":	54,
									"scores":	[-4.821144834716522]
								}, {
									"case":	55,
									"scores":	[-4.821144834716522]
								}, {
									"case":	56,
									"scores":	[-4.821144834716522]
								}, {
									"case":	57,
									"scores":	[-4.821144834716522]
								}, {
									"case":	58,
									"scores":	[-4.821144834716522]
								}, {
									"case":	59,
									"scores":	[-4.821144834716522]
								}, {
									"case":	60,
									"scores":	[-4.821144834716522]
								}, {
									"case":	61,
									"scores":	[-4.821144834716522]
								}, {
									"case":	62,
									"scores":	[-4.821144834716522]
								}, {
									"case":	63,
									"scores":	[-4.821144834716522]
								}, {
									"case":	64,
									"scores":	[-4.821144834716522]
								}, {
									"case":	65,
									"scores":	[-4.821144834716522]
								}, {
									"case":	66,
									"scores":	[-4.821144834716522]
								}, {
									"case":	67,
									"scores":	[-4.821144834716522]
								}, {
									"case":	68,
									"scores":	[-4.821144834716522]
								}, {
									"case":	69,
									"scores":	[-4.821144834716522]
								}, {
									"case":	70,
									"scores":	[-4.821144834716522]
								}, {
									"case":	71,
									"scores":	[-4.821144834716522]
								}, {
									"case":	72,
									"scores":	[-4.821144834716522]
								}, {
									"case":	73,
									"scores":	[-4.821144834716522]
								}, {
									"case":	74,
									"scores":	[-4.821144834716522]
								}, {
									"case":	75,
									"scores":	[-4.821144834716522]
								}, {
									"case":	76,
									"scores":	[-4.821144834716522]
								}, {
									"case":	77,
									"scores":	[-4.821144834716522]
								}, {
									"case":	78,
									"scores":	[-4.821144834716522]
								}, {
									"case":	79,
									"scores":	[-4.821144834716522]
								}, {
									"case":	80,
									"scores":	[-4.821144834716522]
								}, {
									"case":	81,
									"scores":	[-4.821144834716522]
								}, {
									"case":	82,
									"scores":	[-4.821144834716522]
								}, {
									"case":	83,
									"scores":	[-4.821144834716522]
								}, {
									"case":	84,
									"scores":	[-4.821144834716522]
								}, {
									"case":	85,
									"scores":	[-4.821144834716522]
								}, {
									"case":	86,
									"scores":	[-4.821144834716522]
								}, {
									"case":	87,
									"scores":	[-4.821144834716522]
								}, {
									"case":	88,
									"scores":	[-4.821144834716522]
								}, {
									"case":	89,
									"scores":	[-4.821144834716522]
								}, {
									"case":	90,
									"scores":	[-4.821144834716522]
								}, {
									"case":	91,
									"scores":	[-4.821144834716522]
								}, {
									"case":	92,
									"scores":	[-4.821144834716522]
								}, {
									"case":	93,
									"scores":	[-4.821144834716522]
								}, {
									"case":	94,
									"scores":	[-4.821144834716522]
								}, {
									"case":	95,
									"scores":	[-4.821144834716522]
								}, {
									"case":	96,
									"scores":	[-4.821144834716522]
								}, {
									"case":	97,
									"scores":	[-4.821144834716522]
								}, {
									"case":	98,
									"scores":	[-4.821144834716522]
								}, {
									"case":	99,
									"scores":	[-4.821144834716522]
								}, {
									"case":	100,
									"scores":	[-4.821144834716522]
								}, {
									"case":	101,
									"scores":	[-4.821144834716522]
								}, {
									"case":	102,
									"scores":	[-4.821144834716522]
								}, {
									"case":	103,
									"scores":	[-4.821144834716522]
								}, {
									"case":	104,
									"scores":	[-4.821144834716522]
								}, {
									"case":	105,
									"scores":	[-4.821144834716522]
								}, {
									"case":	106,
									"scores":	[-4.821144834716522]
								}, {
									"case":	107,
									"scores":	[-4.821144834716522]
								}, {
									"case":	108,
									"scores":	[-4.821144834716522]
								}, {
									"case":	109,
									"scores":	[-4.821144834716522]
								}, {
									"case":	110,
									"scores":	[-4.821144834716522]
								}, {
									"case":	111,
									"scores":	[-4.821144834716522]
								}, {
									"case":	112,
									"scores":	[-4.821144834716522]
								}, {
									"case":	113,
									"scores":	[-4.821144834716522]
								}, {
									"case":	114,
									"scores":	[-4.821144834716522]
								}, {
									"case":	115,
									"scores":	[-4.821144834716522]
								}, {
									"case":	116,
									"scores":	[-4.821144834716522]
								}, {
									"case":	117,
									"scores":	[-4.821144834716522]
								}, {
									"case":	118,
									"scores":	[-4.821144834716522]
								}, {
									"case":	119,
									"scores":	[-4.821144834716522]
								}, {
									"case":	120,
									"scores":	[-4.821144834716522]
								}, {
									"case":	121,
									"scores":	[-4.821144834716522]
								}, {
									"case":	122,
									"scores":	[-4.821144834716522]
								}, {
									"case":	123,
									"scores":	[-4.821144834716522]
								}, {
									"case":	124,
									"scores":	[-4.821144834716522]
								}, {
									"case":	125,
									"scores":	[-4.821144834716522]
								}, {
									"case":	126,
									"scores":	[-4.821144834716522]
								}, {
									"case":	127,
									"scores":	[-4.821144834716522]
								}, {
									"case":	128,
									"scores":	[-4.821144834716522]
								}, {
									"case":	129,
									"scores":	[-4.821144834716522]
								}, {
									"case":	130,
									"scores":	[-4.821144834716522]
								}, {
									"case":	131,
									"scores":	[-4.821144834716522]
								}, {
									"case":	132,
									"scores":	[-4.821144834716522]
								}, {
									"case":	133,
									"scores":	[-4.821144834716522]
								}, {
									"case":	134,
									"scores":	[-4.821144834716522]
								}, {
									"case":	135,
									"scores":	[-4.821144834716522]
								}, {
									"case":	136,
									"scores":	[-4.821144834716522]
								}, {
									"case":	137,
									"scores":	[-4.821144834716522]
								}, {
									"case":	138,
									"scores":	[-4.821144834716522]
								}, {
									"case":	139,
									"scores":	[-4.821144834716522]
								}, {
									"case":	140,
									"scores":	[-4.821144834716522]
								}, {
									"case":	141,
									"scores":	[-4.821144834716522]
								}, {
									"case":	142,
									"scores":	[-4.821144834716522]
								}, {
									"case":	143,
									"scores":	[-4.821144834716522]
								}, {
									"case":	144,
									"scores":	[-4.821144834716522]
								}, {
									"case":	145,
									"scores":	[-4.821144834716522]
								}, {
									"case":	146,
									"scores":	[-4.821144834716522]
								}, {
									"case":	147,
									"scores":	[-4.821144834716522]
								}, {
									"case":	148,
									"scores":	[-4.821144834716522]
								}, {
									"case":	149,
									"scores":	[-4.821144834716522]
								}, {
									"case":	150,
									"scores":	[-4.821144834716522]
								}, {
									"case":	151,
									"scores":	[-4.821144834716522]
								}, {
									"case":	152,
									"scores":	[-4.821144834716522]
								}, {
									"case":	153,
									"scores":	[-4.821144834716522]
								}, {
									"case":	154,
									"scores":	[-4.821144834716522]
								}, {
									"case":	155,
									"scores":	[-4.821144834716522]
								}, {
									"case":	156,
									"scores":	[-4.821144834716522]
								}, {
									"case":	157,
									"scores":	[-4.821144834716522]
								}, {
									"case":	158,
									"scores":	[-4.821144834716522]
								}, {
									"case":	159,
									"scores":	[-4.821144834716522]
								}, {
									"case":	160,
									"scores":	[-4.821144834716522]
								}, {
									"case":	161,
									"scores":	[-4.821144834716522]
								}, {
									"case":	162,
									"scores":	[-4.821144834716522]
								}, {
									"case":	163,
									"scores":	[-4.821144834716522]
								}, {
									"case":	164,
									"scores":	[-4.821144834716522]
								}, {
									"case":	165,
									"scores":	[-4.821144834716522]
								}, {
									"case":	166,
									"scores":	[-4.821144834716522]
								}, {
									"case":	167,
									"scores":	[-4.821144834716522]
								}, {
									"case":	168,
									"scores":	[-4.821144834716522]
								}, {
									"case":	169,
									"scores":	[-4.821144834716522]
								}, {
									"case":	170,
									"scores":	[-4.821144834716522]
								}, {
									"case":	171,
									"scores":	[-4.821144834716522]
								}, {
									"case":	172,
									"scores":	[-4.821144834716522]
								}, {
									"case":	173,
									"scores":	[-4.821144834716522]
								}, {
									"case":	174,
									"scores":	[-4.821144834716522]
								}, {
									"case":	175,
									"scores":	[-4.821144834716522]
								}, {
									"case":	176,
									"scores":	[-4.821144834716522]
								}, {
									"case":	177,
									"scores":	[-4.821144834716522]
								}, {
									"case":	178,
									"scores":	[-4.821144834716522]
								}, {
									"case":	179,
									"scores":	[-4.821144834716522]
								}, {
									"case":	180,
									"scores":	[-4.821144834716522]
								}, {
									"case":	181,
									"scores":	[-4.821144834716522]
								}, {
									"case":	182,
									"scores":	[-4.821144834716522]
								}, {
									"case":	183,
									"scores":	[-4.821144834716522]
								}, {
									"case":	184,
									"scores":	[-4.821144834716522]
								}, {
									"case":	185,
									"scores":	[-4.821144834716522]
								}, {
									"case":	186,
									"scores":	[-4.821144834716522]
								}, {
									"case":	187,
									"scores":	[-4.821144834716522]
								}, {
									"case":	188,
									"scores":	[-4.821144834716522]
								}, {
									"case":	189,
									"scores":	[-4.821144834716522]
								}, {
									"case":	190,
									"scores":	[-4.821144834716522]
								}, {
									"case":	191,
									"scores":	[-4.821144834716522]
								}, {
									"case":	192,
									"scores":	[-4.821144834716522]
								}, {
									"case":	193,
									"scores":	[-4.821144834716522]
								}, {
									"case":	194,
									"scores":	[-4.821144834716522]
								}, {
									"case":	195,
									"scores":	[-4.821144834716522]
								}, {
									"case":	196,
									"scores":	[-4.821144834716522]
								}, {
									"case":	197,
									"scores":	[-4.821144834716522]
								}, {
									"case":	198,
									"scores":	[-4.821144834716522]
								}, {
									"case":	199,
									"scores":	[-4.821144834716522]
								}, {
									"case":	200,
									"scores":	[-4.821144834716522]
								}, {
									"case":	201,
									"scores":	[-4.821144834716522]
								}, {
									"case":	202,
									"scores":	[-4.821144834716522]
								}, {
									"case":	203,
									"scores":	[-4.821144834716522]
								}, {
									"case":	204,
									"scores":	[-4.821144834716522]
								}, {
									"case":	205,
									"scores":	[-4.821144834716522]
								}, {
									"case":	206,
									"scores":	[-4.821144834716522]
								}, {
									"case":	207,
									"scores":	[-4.821144834716522]
								}, {
									"case":	208,
									"scores":	[-4.821144834716522]
								}, {
									"case":	209,
									"scores":	[-4.821144834716522]
								}, {
									"case":	210,
									"scores":	[-4.821144834716522]
								}, {
									"case":	211,
									"scores":	[-4.821144834716522]
								}, {
									"case":	212,
									"scores":	[-4.821144834716522]
								}, {
									"case":	213,
									"scores":	[-4.821144834716522]
								}, {
									"case":	214,
									"scores":	[-4.821144834716522]
								}, {
									"case":	215,
									"scores":	[-4.821144834716522]
								}, {
									"case":	216,
									"scores":	[-4.821144834716522]
								}, {
									"case":	217,
									"scores":	[-4.821144834716522]
								}, {
									"case":	218,
									"scores":	[-4.821144834716522]
								}, {
									"case":	219,
									"scores":	[-4.821144834716522]
								}, {
									"case":	220,
									"scores":	[-4.821144834716522]
								}, {
									"case":	221,
									"scores":	[-4.821144834716522]
								}, {
									"case":	222,
									"scores":	[-4.821144834716522]
								}, {
									"case":	223,
									"scores":	[-4.821144834716522]
								}, {
									"case":	224,
									"scores":	[-4.821144834716522]
								}, {
									"case":	225,
									"scores":	[-4.821144834716522]
								}, {
									"case":	226,
									"scores":	[-4.821144834716522]
								}, {
									"case":	227,
									"scores":	[-4.821144834716522]
								}, {
									"case":	228,
									"scores":	[-4.821144834716522]
								}, {
									"case":	229,
									"scores":	[-4.821144834716522]
								}, {
									"case":	230,
									"scores":	[-4.821144834716522]
								}, {
									"case":	231,
									"scores":	[-4.821144834716522]
								}, {
									"case":	232,
									"scores":	[-4.821144834716522]
								}, {
									"case":	233,
									"scores":	[-4.821144834716522]
								}, {
									"case":	234,
									"scores":	[-4.821144834716522]
								}, {
									"case":	235,
									"scores":	[-4.821144834716522]
								}, {
									"case":	236,
									"scores":	[-4.821144834716522]
								}]
						}]
				}, {
					"line":	2338,
					"switches":	[{
							"switch":	57,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2339,
							"begin_column":	2,
							"end_line":	2339,
							"end_column":	2,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2339\", 17, &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.780739420081483]
								}, {
									"case":	2,
									"scores":	[-4.780739420081483]
								}, {
									"case":	3,
									"scores":	[-4.780739420081483]
								}, {
									"case":	4,
									"scores":	[-4.780739420081483]
								}, {
									"case":	5,
									"scores":	[-4.780739420081483]
								}, {
									"case":	6,
									"scores":	[-4.780739420081483]
								}, {
									"case":	7,
									"scores":	[-4.780739420081483]
								}, {
									"case":	8,
									"scores":	[-4.780739420081483]
								}, {
									"case":	9,
									"scores":	[-4.780739420081483]
								}, {
									"case":	10,
									"scores":	[-4.780739420081483]
								}, {
									"case":	11,
									"scores":	[-4.780739420081483]
								}, {
									"case":	12,
									"scores":	[-4.780739420081483]
								}, {
									"case":	13,
									"scores":	[-4.780739420081483]
								}, {
									"case":	14,
									"scores":	[-4.780739420081483]
								}, {
									"case":	15,
									"scores":	[-4.780739420081483]
								}, {
									"case":	16,
									"scores":	[-4.780739420081483]
								}, {
									"case":	17,
									"scores":	[-4.780739420081483]
								}, {
									"case":	18,
									"scores":	[-4.780739420081483]
								}, {
									"case":	19,
									"scores":	[-4.780739420081483]
								}, {
									"case":	20,
									"scores":	[-4.780739420081483]
								}, {
									"case":	21,
									"scores":	[-4.780739420081483]
								}, {
									"case":	22,
									"scores":	[-4.780739420081483]
								}, {
									"case":	23,
									"scores":	[-4.780739420081483]
								}, {
									"case":	24,
									"scores":	[-4.780739420081483]
								}, {
									"case":	25,
									"scores":	[-4.780739420081483]
								}, {
									"case":	26,
									"scores":	[-4.780739420081483]
								}, {
									"case":	27,
									"scores":	[-4.780739420081483]
								}, {
									"case":	28,
									"scores":	[-4.780739420081483]
								}, {
									"case":	29,
									"scores":	[-4.780739420081483]
								}, {
									"case":	30,
									"scores":	[-4.780739420081483]
								}, {
									"case":	31,
									"scores":	[-4.780739420081483]
								}, {
									"case":	32,
									"scores":	[-4.780739420081483]
								}, {
									"case":	33,
									"scores":	[-4.780739420081483]
								}, {
									"case":	34,
									"scores":	[-4.780739420081483]
								}, {
									"case":	35,
									"scores":	[-4.780739420081483]
								}, {
									"case":	36,
									"scores":	[-4.780739420081483]
								}, {
									"case":	37,
									"scores":	[-4.780739420081483]
								}, {
									"case":	38,
									"scores":	[-4.780739420081483]
								}, {
									"case":	39,
									"scores":	[-4.780739420081483]
								}, {
									"case":	40,
									"scores":	[-4.780739420081483]
								}, {
									"case":	41,
									"scores":	[-4.780739420081483]
								}, {
									"case":	42,
									"scores":	[-4.780739420081483]
								}, {
									"case":	43,
									"scores":	[-4.780739420081483]
								}, {
									"case":	44,
									"scores":	[-4.780739420081483]
								}, {
									"case":	45,
									"scores":	[-4.780739420081483]
								}, {
									"case":	46,
									"scores":	[-4.780739420081483]
								}, {
									"case":	47,
									"scores":	[-4.780739420081483]
								}, {
									"case":	48,
									"scores":	[-4.780739420081483]
								}, {
									"case":	49,
									"scores":	[-4.780739420081483]
								}, {
									"case":	50,
									"scores":	[-4.780739420081483]
								}, {
									"case":	51,
									"scores":	[-4.780739420081483]
								}, {
									"case":	52,
									"scores":	[-4.780739420081483]
								}, {
									"case":	53,
									"scores":	[-4.780739420081483]
								}, {
									"case":	54,
									"scores":	[-4.780739420081483]
								}, {
									"case":	55,
									"scores":	[-4.780739420081483]
								}, {
									"case":	56,
									"scores":	[-4.780739420081483]
								}, {
									"case":	57,
									"scores":	[-4.780739420081483]
								}, {
									"case":	58,
									"scores":	[-4.780739420081483]
								}, {
									"case":	59,
									"scores":	[-4.780739420081483]
								}, {
									"case":	60,
									"scores":	[-4.780739420081483]
								}, {
									"case":	61,
									"scores":	[-4.780739420081483]
								}, {
									"case":	62,
									"scores":	[-4.780739420081483]
								}, {
									"case":	63,
									"scores":	[-4.780739420081483]
								}, {
									"case":	64,
									"scores":	[-4.780739420081483]
								}, {
									"case":	65,
									"scores":	[-4.780739420081483]
								}, {
									"case":	66,
									"scores":	[-4.780739420081483]
								}, {
									"case":	67,
									"scores":	[-4.780739420081483]
								}, {
									"case":	68,
									"scores":	[-4.780739420081483]
								}, {
									"case":	69,
									"scores":	[-4.780739420081483]
								}, {
									"case":	70,
									"scores":	[-4.780739420081483]
								}, {
									"case":	71,
									"scores":	[-4.780739420081483]
								}, {
									"case":	72,
									"scores":	[-4.780739420081483]
								}, {
									"case":	73,
									"scores":	[-4.780739420081483]
								}, {
									"case":	74,
									"scores":	[-4.780739420081483]
								}, {
									"case":	75,
									"scores":	[-4.780739420081483]
								}, {
									"case":	76,
									"scores":	[-4.780739420081483]
								}, {
									"case":	77,
									"scores":	[-4.780739420081483]
								}, {
									"case":	78,
									"scores":	[-4.780739420081483]
								}, {
									"case":	79,
									"scores":	[-4.780739420081483]
								}, {
									"case":	80,
									"scores":	[-4.780739420081483]
								}, {
									"case":	81,
									"scores":	[-4.780739420081483]
								}, {
									"case":	82,
									"scores":	[-4.780739420081483]
								}, {
									"case":	83,
									"scores":	[-4.780739420081483]
								}, {
									"case":	84,
									"scores":	[-4.780739420081483]
								}, {
									"case":	85,
									"scores":	[-4.780739420081483]
								}, {
									"case":	86,
									"scores":	[-4.780739420081483]
								}, {
									"case":	87,
									"scores":	[-4.780739420081483]
								}, {
									"case":	88,
									"scores":	[-4.780739420081483]
								}, {
									"case":	89,
									"scores":	[-4.780739420081483]
								}, {
									"case":	90,
									"scores":	[-4.780739420081483]
								}, {
									"case":	91,
									"scores":	[-4.780739420081483]
								}, {
									"case":	92,
									"scores":	[-4.780739420081483]
								}, {
									"case":	93,
									"scores":	[-4.780739420081483]
								}, {
									"case":	94,
									"scores":	[-4.780739420081483]
								}, {
									"case":	95,
									"scores":	[-4.780739420081483]
								}, {
									"case":	96,
									"scores":	[-4.780739420081483]
								}, {
									"case":	97,
									"scores":	[-4.780739420081483]
								}, {
									"case":	98,
									"scores":	[-4.780739420081483]
								}, {
									"case":	99,
									"scores":	[-4.780739420081483]
								}, {
									"case":	100,
									"scores":	[-4.780739420081483]
								}, {
									"case":	101,
									"scores":	[-4.780739420081483]
								}, {
									"case":	102,
									"scores":	[-4.780739420081483]
								}, {
									"case":	103,
									"scores":	[-4.780739420081483]
								}, {
									"case":	104,
									"scores":	[-4.780739420081483]
								}, {
									"case":	105,
									"scores":	[-4.780739420081483]
								}, {
									"case":	106,
									"scores":	[-4.780739420081483]
								}, {
									"case":	107,
									"scores":	[-4.780739420081483]
								}, {
									"case":	108,
									"scores":	[-4.780739420081483]
								}, {
									"case":	109,
									"scores":	[-4.780739420081483]
								}, {
									"case":	110,
									"scores":	[-4.780739420081483]
								}, {
									"case":	111,
									"scores":	[-4.780739420081483]
								}, {
									"case":	112,
									"scores":	[-4.780739420081483]
								}, {
									"case":	113,
									"scores":	[-4.780739420081483]
								}, {
									"case":	114,
									"scores":	[-4.780739420081483]
								}, {
									"case":	115,
									"scores":	[-4.780739420081483]
								}, {
									"case":	116,
									"scores":	[-4.780739420081483]
								}, {
									"case":	117,
									"scores":	[-4.780739420081483]
								}, {
									"case":	118,
									"scores":	[-4.780739420081483]
								}, {
									"case":	119,
									"scores":	[-4.780739420081483]
								}, {
									"case":	120,
									"scores":	[-4.780739420081483]
								}, {
									"case":	121,
									"scores":	[-4.780739420081483]
								}, {
									"case":	122,
									"scores":	[-4.780739420081483]
								}, {
									"case":	123,
									"scores":	[-4.780739420081483]
								}, {
									"case":	124,
									"scores":	[-4.780739420081483]
								}, {
									"case":	125,
									"scores":	[-4.780739420081483]
								}, {
									"case":	126,
									"scores":	[-4.780739420081483]
								}, {
									"case":	127,
									"scores":	[-4.780739420081483]
								}, {
									"case":	128,
									"scores":	[-4.780739420081483]
								}, {
									"case":	129,
									"scores":	[-4.780739420081483]
								}, {
									"case":	130,
									"scores":	[-4.780739420081483]
								}, {
									"case":	131,
									"scores":	[-4.780739420081483]
								}, {
									"case":	132,
									"scores":	[-4.780739420081483]
								}, {
									"case":	133,
									"scores":	[-4.780739420081483]
								}, {
									"case":	134,
									"scores":	[-4.780739420081483]
								}, {
									"case":	135,
									"scores":	[-4.780739420081483]
								}, {
									"case":	136,
									"scores":	[-4.780739420081483]
								}, {
									"case":	137,
									"scores":	[-4.780739420081483]
								}, {
									"case":	138,
									"scores":	[-4.780739420081483]
								}, {
									"case":	139,
									"scores":	[-4.780739420081483]
								}, {
									"case":	140,
									"scores":	[-4.780739420081483]
								}, {
									"case":	141,
									"scores":	[-4.780739420081483]
								}, {
									"case":	142,
									"scores":	[-4.780739420081483]
								}, {
									"case":	143,
									"scores":	[-4.780739420081483]
								}, {
									"case":	144,
									"scores":	[-4.780739420081483]
								}, {
									"case":	145,
									"scores":	[-4.780739420081483]
								}, {
									"case":	146,
									"scores":	[-4.780739420081483]
								}, {
									"case":	147,
									"scores":	[-4.780739420081483]
								}, {
									"case":	148,
									"scores":	[-4.780739420081483]
								}, {
									"case":	149,
									"scores":	[-4.780739420081483]
								}, {
									"case":	150,
									"scores":	[-4.780739420081483]
								}, {
									"case":	151,
									"scores":	[-4.780739420081483]
								}, {
									"case":	152,
									"scores":	[-4.780739420081483]
								}, {
									"case":	153,
									"scores":	[-4.780739420081483]
								}, {
									"case":	154,
									"scores":	[-4.780739420081483]
								}, {
									"case":	155,
									"scores":	[-4.780739420081483]
								}, {
									"case":	156,
									"scores":	[-4.780739420081483]
								}, {
									"case":	157,
									"scores":	[-4.780739420081483]
								}, {
									"case":	158,
									"scores":	[-4.780739420081483]
								}, {
									"case":	159,
									"scores":	[-4.780739420081483]
								}, {
									"case":	160,
									"scores":	[-4.780739420081483]
								}, {
									"case":	161,
									"scores":	[-4.780739420081483]
								}, {
									"case":	162,
									"scores":	[-4.780739420081483]
								}, {
									"case":	163,
									"scores":	[-4.780739420081483]
								}, {
									"case":	164,
									"scores":	[-4.780739420081483]
								}, {
									"case":	165,
									"scores":	[-4.780739420081483]
								}, {
									"case":	166,
									"scores":	[-4.780739420081483]
								}, {
									"case":	167,
									"scores":	[-4.780739420081483]
								}, {
									"case":	168,
									"scores":	[-4.780739420081483]
								}, {
									"case":	169,
									"scores":	[-4.780739420081483]
								}, {
									"case":	170,
									"scores":	[-4.780739420081483]
								}, {
									"case":	171,
									"scores":	[-4.780739420081483]
								}, {
									"case":	172,
									"scores":	[-4.780739420081483]
								}, {
									"case":	173,
									"scores":	[-4.780739420081483]
								}, {
									"case":	174,
									"scores":	[-4.780739420081483]
								}, {
									"case":	175,
									"scores":	[-4.780739420081483]
								}, {
									"case":	176,
									"scores":	[-4.780739420081483]
								}, {
									"case":	177,
									"scores":	[-4.780739420081483]
								}, {
									"case":	178,
									"scores":	[-4.780739420081483]
								}, {
									"case":	179,
									"scores":	[-4.780739420081483]
								}, {
									"case":	180,
									"scores":	[-4.780739420081483]
								}, {
									"case":	181,
									"scores":	[-4.780739420081483]
								}, {
									"case":	182,
									"scores":	[-4.780739420081483]
								}, {
									"case":	183,
									"scores":	[-4.780739420081483]
								}, {
									"case":	184,
									"scores":	[-4.780739420081483]
								}, {
									"case":	185,
									"scores":	[-4.780739420081483]
								}, {
									"case":	186,
									"scores":	[-4.780739420081483]
								}, {
									"case":	187,
									"scores":	[-4.780739420081483]
								}, {
									"case":	188,
									"scores":	[-4.780739420081483]
								}, {
									"case":	189,
									"scores":	[-4.780739420081483]
								}, {
									"case":	190,
									"scores":	[-4.780739420081483]
								}, {
									"case":	191,
									"scores":	[-4.780739420081483]
								}, {
									"case":	192,
									"scores":	[-4.780739420081483]
								}, {
									"case":	193,
									"scores":	[-4.780739420081483]
								}, {
									"case":	194,
									"scores":	[-4.780739420081483]
								}, {
									"case":	195,
									"scores":	[-4.780739420081483]
								}, {
									"case":	196,
									"scores":	[-4.780739420081483]
								}, {
									"case":	197,
									"scores":	[-4.780739420081483]
								}, {
									"case":	198,
									"scores":	[-4.780739420081483]
								}, {
									"case":	199,
									"scores":	[-4.780739420081483]
								}, {
									"case":	200,
									"scores":	[-4.780739420081483]
								}, {
									"case":	201,
									"scores":	[-4.780739420081483]
								}, {
									"case":	202,
									"scores":	[-4.780739420081483]
								}, {
									"case":	203,
									"scores":	[-7.0247888038814832, -6.6949534330814835, -6.4840643160814828, -6.7431365240814829, -6.9876884038814833, -6.4840643160814828, -6.7301032298814834, -6.9876884038814833, -6.9876884038814833, -6.7301032298814834, -6.7301032298814834, -6.7301032298814834, -6.9876884038814833, -6.9891754378814834, -6.9891754378814834, -6.7787498900814827, -7.0247888038814832]
								}]
						}, {
							"switch":	58,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2339,
							"begin_column":	4,
							"end_line":	2339,
							"end_column":	31,
							"patch_codes":	["if (!__is_neg(\"\", \"L2339\", 17, &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    do {\n        const char *__s = (mem);\n        int __l = size;\n        zval *__z = (return_value);\n        (*__z).value.str.len = __l;\n        (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.4744643900814829, -5.577687790081483, -5.1084277900814827, -5.4254829300814826, -6.1801135900814828, -5.1084277900814827, -5.8663158900814834, -6.1801135900814828, -6.1801135900814828, -5.8663158900814834, -5.8663158900814834, -5.8663158900814834, -6.1801135900814828, -6.1833710300814833, -6.1833710300814833, -5.7165762900814832, -6.4744643900814829]
								}]
						}]
				}, {
					"line":	2335,
					"switches":	[{
							"switch":	55,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2336,
							"begin_column":	1,
							"end_line":	2336,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	2,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	3,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	4,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	5,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	6,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	7,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	8,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	9,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	10,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	11,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	12,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	13,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	14,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	15,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	16,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	17,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	18,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	19,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	20,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	21,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	22,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	23,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	24,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	25,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	26,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	27,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	28,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	29,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	30,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	31,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	32,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	33,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	34,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	35,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	36,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	37,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	38,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	39,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	40,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	41,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	42,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	43,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	44,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	45,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	46,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	47,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	48,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	49,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	50,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	51,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	52,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	53,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	54,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	55,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	56,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	57,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	58,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	59,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	60,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	61,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	62,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	63,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	64,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	65,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	66,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	67,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	68,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	69,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	70,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	71,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	72,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	73,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	74,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	75,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	76,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	77,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	78,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	79,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	80,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	81,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	82,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	83,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	84,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	85,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	86,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	87,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	88,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	89,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	90,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	91,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	92,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	93,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	94,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	95,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	96,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	97,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	98,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	99,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	100,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	101,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	102,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	103,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	104,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	105,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	106,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	107,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	108,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	109,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	110,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	111,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	112,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	113,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	114,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	115,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	116,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	117,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	118,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	119,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	120,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	121,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	122,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	123,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	124,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	125,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	126,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	127,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	128,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	129,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	130,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	131,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	132,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	133,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	134,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	135,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	136,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	137,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	138,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	139,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	140,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	141,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	142,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	143,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	144,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	145,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	146,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	147,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	148,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	149,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	150,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	151,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	152,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	153,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	154,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	155,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	156,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	157,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	158,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	159,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	160,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	161,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	162,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	163,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	164,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	165,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	166,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	167,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	168,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	169,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	170,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	171,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	172,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	173,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	174,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	175,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	176,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	177,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	178,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	179,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	180,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	181,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	182,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	183,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	184,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	185,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	186,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	187,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	188,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	189,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	190,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	191,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	192,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	193,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	194,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	195,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	196,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	197,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	198,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	199,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	200,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	201,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	202,
									"scores":	[-4.8009421273990025]
								}, {
									"case":	203,
									"scores":	[-7.5863086633990022, -8.468717511199003, -7.9428804333990026, -8.4517311911990038, -7.9481071033990034, -8.4647016778090034, -8.174031937199, -8.431617111199003, -8.431617111199003, -8.174031937199, -8.174031937199, -8.174031937199, -8.431617111199003, -8.4331041451990032, -8.4331041451990032, -8.2226785973990033, -8.468717511199003]
								}]
						}, {
							"switch":	56,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2336,
							"begin_column":	3,
							"end_line":	2340,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        int __l = size;\n        zval *__z = (return_value);\n        (*__z).value.str.len = __l;\n        (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n", "if ((!size) || __is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        int __l = size;\n        zval *__z = (return_value);\n        (*__z).value.str.len = __l;\n        (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n", "if ((!size) && !__is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr))) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        int __l = size;\n        zval *__z = (return_value);\n        (*__z).value.str.len = __l;\n        (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.8227021564281456, -4.3847115324281463, -3.3251376654281457, -4.1793435784281456, -3.1076577784281456, -3.4692732678381457, -3.7765630324281458, -4.0903607324281461, -4.0903607324281461, -3.7765630324281458, -3.7765630324281458, -3.7765630324281458, -4.0903607324281461, -4.0936181724281457, -4.0936181724281457, -3.6268234324281461, -4.3847115324281463]
								}, {
									"case":	2,
									"scores":	[-4.2099474224281463, -5.7719567984281461, -4.712382931428146, -5.5665888444281464, -4.4949030444281455, -4.8565185338381456, -5.1638082984281457, -5.477605998428146, -5.477605998428146, -5.1638082984281457, -5.1638082984281457, -5.1638082984281457, -5.477605998428146, -5.4808634384281456, -5.4808634384281456, -5.0140686984281455, -5.7719567984281461]
								}, {
									"case":	3,
									"scores":	[-4.2099474224281463, -5.7719567984281461, -4.712382931428146, -5.5665888444281464, -4.4949030444281455, -4.8565185338381456, -5.1638082984281457, -5.477605998428146, -5.477605998428146, -5.1638082984281457, -5.1638082984281457, -5.1638082984281457, -5.477605998428146, -5.4808634384281456, -5.4808634384281456, -5.0140686984281455, -5.7719567984281461]
								}]
						}, {
							"switch":	59,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2336,
							"begin_column":	3,
							"end_line":	2340,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    if (!size) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            int __l = size;\n            zval *__z = (return_value);\n            (*__z).value.str.len = __l;\n            (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n", "if (!__is_neg(\"\", \"L2336\", 17, &(size), sizeof (size), &(return_value), sizeof (return_value), &(mem), sizeof (mem), &(docp), sizeof (docp), &(format), sizeof (format), &(xmlFree), sizeof (xmlFree), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)) && (!size)) {\n    do {\n        zval *__z = (return_value);\n        (*__z).value.lval = ((0) != 0);\n        (*__z).type = 3;\n    } while (0);\n} else {\n    do {\n        const char *__s = (mem);\n        int __l = size;\n        zval *__z = (return_value);\n        (*__z).value.str.len = __l;\n        (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n        (*__z).type = 6;\n    } while (0);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.5856341113990027, -8.1476434873990033, -6.3746343203990028, -7.9422755333990018, -6.8705897333990018, -5.7909842228090023, -7.5394949873990029, -7.8532926873990032, -7.8532926873990032, -7.5394949873990029, -7.5394949873990029, -7.5394949873990029, -7.8532926873990032, -7.8565501273990019, -7.8565501273990019, -7.3897553873990027, -8.1476434873990033]
								}, {
									"case":	2,
									"scores":	[-6.3887151113990024, -7.9507244873990022, -6.8911506203990029, -7.7453565333990024, -6.6736707333990015, -7.0352862228090025, -7.3425759873990017, -7.656373687399002, -7.656373687399002, -7.3425759873990017, -7.3425759873990017, -7.3425759873990017, -7.656373687399002, -7.6596311273990025, -7.6596311273990025, -7.1928363873990024, -7.9507244873990022]
								}]
						}]
				}, {
					"line":	2341,
					"switches":	[{
							"switch":	62,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2342,
							"begin_column":	2,
							"end_line":	2342,
							"end_column":	2,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2342\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.619117761541327]
								}, {
									"case":	2,
									"scores":	[-4.619117761541327]
								}, {
									"case":	3,
									"scores":	[-4.619117761541327]
								}, {
									"case":	4,
									"scores":	[-4.619117761541327]
								}, {
									"case":	5,
									"scores":	[-4.619117761541327]
								}, {
									"case":	6,
									"scores":	[-4.619117761541327]
								}, {
									"case":	7,
									"scores":	[-4.619117761541327]
								}, {
									"case":	8,
									"scores":	[-4.619117761541327]
								}, {
									"case":	9,
									"scores":	[-4.619117761541327]
								}, {
									"case":	10,
									"scores":	[-4.619117761541327]
								}, {
									"case":	11,
									"scores":	[-4.619117761541327]
								}, {
									"case":	12,
									"scores":	[-4.619117761541327]
								}, {
									"case":	13,
									"scores":	[-4.619117761541327]
								}, {
									"case":	14,
									"scores":	[-4.619117761541327]
								}, {
									"case":	15,
									"scores":	[-4.619117761541327]
								}, {
									"case":	16,
									"scores":	[-4.619117761541327]
								}, {
									"case":	17,
									"scores":	[-4.619117761541327]
								}, {
									"case":	18,
									"scores":	[-4.619117761541327]
								}, {
									"case":	19,
									"scores":	[-4.619117761541327]
								}, {
									"case":	20,
									"scores":	[-4.619117761541327]
								}, {
									"case":	21,
									"scores":	[-4.619117761541327]
								}, {
									"case":	22,
									"scores":	[-4.619117761541327]
								}, {
									"case":	23,
									"scores":	[-4.619117761541327]
								}, {
									"case":	24,
									"scores":	[-4.619117761541327]
								}, {
									"case":	25,
									"scores":	[-4.619117761541327]
								}, {
									"case":	26,
									"scores":	[-4.619117761541327]
								}, {
									"case":	27,
									"scores":	[-4.619117761541327]
								}, {
									"case":	28,
									"scores":	[-4.619117761541327]
								}, {
									"case":	29,
									"scores":	[-4.619117761541327]
								}, {
									"case":	30,
									"scores":	[-4.619117761541327]
								}, {
									"case":	31,
									"scores":	[-4.619117761541327]
								}, {
									"case":	32,
									"scores":	[-4.619117761541327]
								}, {
									"case":	33,
									"scores":	[-4.619117761541327]
								}, {
									"case":	34,
									"scores":	[-4.619117761541327]
								}, {
									"case":	35,
									"scores":	[-4.619117761541327]
								}, {
									"case":	36,
									"scores":	[-4.619117761541327]
								}, {
									"case":	37,
									"scores":	[-4.619117761541327]
								}, {
									"case":	38,
									"scores":	[-4.619117761541327]
								}, {
									"case":	39,
									"scores":	[-4.619117761541327]
								}, {
									"case":	40,
									"scores":	[-4.619117761541327]
								}, {
									"case":	41,
									"scores":	[-4.619117761541327]
								}, {
									"case":	42,
									"scores":	[-4.619117761541327]
								}, {
									"case":	43,
									"scores":	[-4.619117761541327]
								}, {
									"case":	44,
									"scores":	[-4.619117761541327]
								}, {
									"case":	45,
									"scores":	[-4.619117761541327]
								}, {
									"case":	46,
									"scores":	[-4.619117761541327]
								}, {
									"case":	47,
									"scores":	[-4.619117761541327]
								}, {
									"case":	48,
									"scores":	[-4.619117761541327]
								}, {
									"case":	49,
									"scores":	[-4.619117761541327]
								}, {
									"case":	50,
									"scores":	[-4.619117761541327]
								}, {
									"case":	51,
									"scores":	[-4.619117761541327]
								}, {
									"case":	52,
									"scores":	[-4.619117761541327]
								}, {
									"case":	53,
									"scores":	[-4.619117761541327]
								}, {
									"case":	54,
									"scores":	[-4.619117761541327]
								}, {
									"case":	55,
									"scores":	[-4.619117761541327]
								}, {
									"case":	56,
									"scores":	[-4.619117761541327]
								}, {
									"case":	57,
									"scores":	[-4.619117761541327]
								}, {
									"case":	58,
									"scores":	[-4.619117761541327]
								}, {
									"case":	59,
									"scores":	[-4.619117761541327]
								}, {
									"case":	60,
									"scores":	[-4.619117761541327]
								}, {
									"case":	61,
									"scores":	[-4.619117761541327]
								}, {
									"case":	62,
									"scores":	[-4.619117761541327]
								}, {
									"case":	63,
									"scores":	[-4.619117761541327]
								}, {
									"case":	64,
									"scores":	[-4.619117761541327]
								}, {
									"case":	65,
									"scores":	[-4.619117761541327]
								}, {
									"case":	66,
									"scores":	[-4.619117761541327]
								}, {
									"case":	67,
									"scores":	[-4.619117761541327]
								}, {
									"case":	68,
									"scores":	[-4.619117761541327]
								}, {
									"case":	69,
									"scores":	[-4.619117761541327]
								}, {
									"case":	70,
									"scores":	[-4.619117761541327]
								}, {
									"case":	71,
									"scores":	[-4.619117761541327]
								}, {
									"case":	72,
									"scores":	[-4.619117761541327]
								}, {
									"case":	73,
									"scores":	[-4.619117761541327]
								}, {
									"case":	74,
									"scores":	[-4.619117761541327]
								}, {
									"case":	75,
									"scores":	[-4.619117761541327]
								}, {
									"case":	76,
									"scores":	[-4.619117761541327]
								}, {
									"case":	77,
									"scores":	[-4.619117761541327]
								}, {
									"case":	78,
									"scores":	[-4.619117761541327]
								}, {
									"case":	79,
									"scores":	[-4.619117761541327]
								}, {
									"case":	80,
									"scores":	[-4.619117761541327]
								}, {
									"case":	81,
									"scores":	[-4.619117761541327]
								}, {
									"case":	82,
									"scores":	[-4.619117761541327]
								}, {
									"case":	83,
									"scores":	[-4.619117761541327]
								}, {
									"case":	84,
									"scores":	[-4.619117761541327]
								}, {
									"case":	85,
									"scores":	[-4.619117761541327]
								}, {
									"case":	86,
									"scores":	[-4.619117761541327]
								}, {
									"case":	87,
									"scores":	[-4.619117761541327]
								}, {
									"case":	88,
									"scores":	[-4.619117761541327]
								}, {
									"case":	89,
									"scores":	[-4.619117761541327]
								}, {
									"case":	90,
									"scores":	[-4.619117761541327]
								}, {
									"case":	91,
									"scores":	[-4.619117761541327]
								}, {
									"case":	92,
									"scores":	[-4.619117761541327]
								}, {
									"case":	93,
									"scores":	[-4.619117761541327]
								}, {
									"case":	94,
									"scores":	[-4.619117761541327]
								}, {
									"case":	95,
									"scores":	[-4.619117761541327]
								}, {
									"case":	96,
									"scores":	[-4.619117761541327]
								}, {
									"case":	97,
									"scores":	[-4.619117761541327]
								}, {
									"case":	98,
									"scores":	[-4.619117761541327]
								}, {
									"case":	99,
									"scores":	[-4.619117761541327]
								}, {
									"case":	100,
									"scores":	[-4.619117761541327]
								}, {
									"case":	101,
									"scores":	[-4.619117761541327]
								}, {
									"case":	102,
									"scores":	[-4.619117761541327]
								}, {
									"case":	103,
									"scores":	[-4.619117761541327]
								}, {
									"case":	104,
									"scores":	[-4.619117761541327]
								}, {
									"case":	105,
									"scores":	[-4.619117761541327]
								}, {
									"case":	106,
									"scores":	[-4.619117761541327]
								}, {
									"case":	107,
									"scores":	[-4.619117761541327]
								}, {
									"case":	108,
									"scores":	[-4.619117761541327]
								}, {
									"case":	109,
									"scores":	[-4.619117761541327]
								}, {
									"case":	110,
									"scores":	[-4.619117761541327]
								}, {
									"case":	111,
									"scores":	[-4.619117761541327]
								}, {
									"case":	112,
									"scores":	[-4.619117761541327]
								}, {
									"case":	113,
									"scores":	[-4.619117761541327]
								}, {
									"case":	114,
									"scores":	[-4.619117761541327]
								}, {
									"case":	115,
									"scores":	[-4.619117761541327]
								}, {
									"case":	116,
									"scores":	[-4.619117761541327]
								}, {
									"case":	117,
									"scores":	[-4.619117761541327]
								}, {
									"case":	118,
									"scores":	[-4.619117761541327]
								}, {
									"case":	119,
									"scores":	[-4.619117761541327]
								}, {
									"case":	120,
									"scores":	[-4.619117761541327]
								}, {
									"case":	121,
									"scores":	[-4.619117761541327]
								}, {
									"case":	122,
									"scores":	[-4.619117761541327]
								}, {
									"case":	123,
									"scores":	[-4.619117761541327]
								}, {
									"case":	124,
									"scores":	[-4.619117761541327]
								}, {
									"case":	125,
									"scores":	[-4.619117761541327]
								}, {
									"case":	126,
									"scores":	[-4.619117761541327]
								}, {
									"case":	127,
									"scores":	[-4.619117761541327]
								}, {
									"case":	128,
									"scores":	[-4.619117761541327]
								}, {
									"case":	129,
									"scores":	[-4.619117761541327]
								}, {
									"case":	130,
									"scores":	[-4.619117761541327]
								}, {
									"case":	131,
									"scores":	[-4.619117761541327]
								}, {
									"case":	132,
									"scores":	[-4.619117761541327]
								}, {
									"case":	133,
									"scores":	[-4.619117761541327]
								}, {
									"case":	134,
									"scores":	[-4.619117761541327]
								}, {
									"case":	135,
									"scores":	[-4.619117761541327]
								}, {
									"case":	136,
									"scores":	[-4.619117761541327]
								}, {
									"case":	137,
									"scores":	[-4.619117761541327]
								}, {
									"case":	138,
									"scores":	[-4.619117761541327]
								}, {
									"case":	139,
									"scores":	[-4.619117761541327]
								}, {
									"case":	140,
									"scores":	[-4.619117761541327]
								}, {
									"case":	141,
									"scores":	[-4.619117761541327]
								}, {
									"case":	142,
									"scores":	[-4.619117761541327]
								}, {
									"case":	143,
									"scores":	[-4.619117761541327]
								}, {
									"case":	144,
									"scores":	[-4.619117761541327]
								}, {
									"case":	145,
									"scores":	[-4.619117761541327]
								}, {
									"case":	146,
									"scores":	[-4.619117761541327]
								}, {
									"case":	147,
									"scores":	[-4.619117761541327]
								}, {
									"case":	148,
									"scores":	[-4.619117761541327]
								}, {
									"case":	149,
									"scores":	[-4.619117761541327]
								}, {
									"case":	150,
									"scores":	[-4.619117761541327]
								}, {
									"case":	151,
									"scores":	[-4.619117761541327]
								}, {
									"case":	152,
									"scores":	[-4.619117761541327]
								}, {
									"case":	153,
									"scores":	[-4.619117761541327]
								}, {
									"case":	154,
									"scores":	[-4.619117761541327]
								}, {
									"case":	155,
									"scores":	[-4.619117761541327]
								}, {
									"case":	156,
									"scores":	[-4.619117761541327]
								}, {
									"case":	157,
									"scores":	[-4.619117761541327]
								}, {
									"case":	158,
									"scores":	[-4.619117761541327]
								}, {
									"case":	159,
									"scores":	[-4.619117761541327]
								}, {
									"case":	160,
									"scores":	[-4.619117761541327]
								}, {
									"case":	161,
									"scores":	[-4.619117761541327]
								}, {
									"case":	162,
									"scores":	[-4.619117761541327]
								}, {
									"case":	163,
									"scores":	[-4.619117761541327]
								}, {
									"case":	164,
									"scores":	[-4.619117761541327]
								}, {
									"case":	165,
									"scores":	[-4.619117761541327]
								}, {
									"case":	166,
									"scores":	[-4.619117761541327]
								}, {
									"case":	167,
									"scores":	[-4.619117761541327]
								}, {
									"case":	168,
									"scores":	[-4.619117761541327]
								}, {
									"case":	169,
									"scores":	[-4.619117761541327]
								}, {
									"case":	170,
									"scores":	[-4.619117761541327]
								}, {
									"case":	171,
									"scores":	[-4.619117761541327]
								}, {
									"case":	172,
									"scores":	[-4.619117761541327]
								}, {
									"case":	173,
									"scores":	[-4.619117761541327]
								}, {
									"case":	174,
									"scores":	[-4.619117761541327]
								}, {
									"case":	175,
									"scores":	[-4.619117761541327]
								}, {
									"case":	176,
									"scores":	[-4.619117761541327]
								}, {
									"case":	177,
									"scores":	[-4.619117761541327]
								}, {
									"case":	178,
									"scores":	[-4.619117761541327]
								}, {
									"case":	179,
									"scores":	[-4.619117761541327]
								}, {
									"case":	180,
									"scores":	[-4.619117761541327]
								}, {
									"case":	181,
									"scores":	[-4.619117761541327]
								}, {
									"case":	182,
									"scores":	[-4.619117761541327]
								}, {
									"case":	183,
									"scores":	[-4.619117761541327]
								}, {
									"case":	184,
									"scores":	[-4.619117761541327]
								}, {
									"case":	185,
									"scores":	[-4.619117761541327]
								}, {
									"case":	186,
									"scores":	[-4.619117761541327]
								}, {
									"case":	187,
									"scores":	[-4.619117761541327]
								}, {
									"case":	188,
									"scores":	[-4.619117761541327]
								}, {
									"case":	189,
									"scores":	[-4.619117761541327]
								}, {
									"case":	190,
									"scores":	[-4.619117761541327]
								}, {
									"case":	191,
									"scores":	[-4.619117761541327]
								}, {
									"case":	192,
									"scores":	[-4.619117761541327]
								}, {
									"case":	193,
									"scores":	[-4.619117761541327]
								}, {
									"case":	194,
									"scores":	[-4.619117761541327]
								}, {
									"case":	195,
									"scores":	[-4.619117761541327]
								}, {
									"case":	196,
									"scores":	[-4.619117761541327]
								}, {
									"case":	197,
									"scores":	[-4.619117761541327]
								}, {
									"case":	198,
									"scores":	[-4.619117761541327]
								}, {
									"case":	199,
									"scores":	[-4.619117761541327]
								}, {
									"case":	200,
									"scores":	[-4.619117761541327]
								}, {
									"case":	201,
									"scores":	[-4.619117761541327]
								}, {
									"case":	202,
									"scores":	[-4.619117761541327]
								}, {
									"case":	203,
									"scores":	[-5.1594486669413273, -5.5390771983513272, -6.3445920067413271, -5.8038675189413276, -6.3074916067413271, -5.8038675189413276, -6.0499064327413272, -6.3074916067413271, -6.3074916067413271, -6.0499064327413272, -6.0499064327413272, -6.0499064327413272, -6.3074916067413271, -6.3089786407413273, -6.3089786407413273, -6.0985530929413265, -6.3445920067413271]
								}]
						}, {
							"switch":	63,
							"types":	[[], [], [1], [], [], [], [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], [], [], [99]],
							"begin_line":	2342,
							"begin_column":	4,
							"end_line":	2342,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L2342\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    xmlFree(mem);\n", "__zend_realloc(mem, -1)", "__zend_realloc(mem, 0)", "__zend_realloc(mem, 1)", "__zend_realloc(mem, 2)", "__zend_realloc(mem, 3)", "__zend_realloc(mem, 6)", "bzero(mem, -1)", "bzero(mem, 0)", "bzero(mem, 1)", "bzero(mem, 2)", "bzero(mem, 3)", "bzero(mem, 6)", "checkNamespace(mem, 0)", "checkNamespace(mem, mem)", "comment(mem, 0)", "dlsym(mem, 0)", "endElement(mem, 0)", "explicit_bzero(mem, -1)", "explicit_bzero(mem, 0)", "explicit_bzero(mem, 1)", "explicit_bzero(mem, 2)", "explicit_bzero(mem, 3)", "explicit_bzero(mem, 6)", "getEntity(mem, 0)", "getParameterEntity(mem, 0)", "getentropy(mem, -1)", "getentropy(mem, 0)", "getentropy(mem, 1)", "getentropy(mem, 2)", "getentropy(mem, 3)", "getentropy(mem, 6)", "php_write(mem, -1)", "php_write(mem, 0)", "php_write(mem, 1)", "php_write(mem, 2)", "php_write(mem, 3)", "php_write(mem, 6)", "php_write(mem, xmlParserMaxDepth)", "realloc(mem, -1)", "realloc(mem, 0)", "realloc(mem, 1)", "realloc(mem, 2)", "realloc(mem, 3)", "realloc(mem, 6)", "reference(mem, 0)", "setDocumentLocator(mem, 0)", "setNamespace(mem, 0)", "timer_gettime(mem, 0)", "xmlBufferCreateStatic(mem, -1)", "xmlBufferCreateStatic(mem, 0)", "xmlBufferCreateStatic(mem, 1)", "xmlBufferCreateStatic(mem, 2)", "xmlBufferCreateStatic(mem, 3)", "xmlBufferCreateStatic(mem, 6)", "xmlMemRealloc(mem, -1)", "xmlMemRealloc(mem, 0)", "xmlMemRealloc(mem, 1)", "xmlMemRealloc(mem, 2)", "xmlMemRealloc(mem, 3)", "xmlMemRealloc(mem, 6)", "xmlSAX2Comment(mem, 0)", "xmlSAX2EndElement(mem, 0)", "xmlSAX2GetEntity(mem, 0)", "xmlSAX2GetParameterEntity(mem, 0)", "xmlSAX2Reference(mem, 0)", "xmlSAX2SetDocumentLocator(mem, 0)", "xmlSetGenericErrorFunc(mem, 0)", "xmlSetGenericErrorFunc(mem, php_libxml_ctx_error)", "xmlSetGenericErrorFunc(mem, php_libxml_ctx_warning)", "xmlSetGenericErrorFunc(mem, php_libxml_error_handler)", "xmlSetGenericErrorFunc(mem, xmlParserError)", "xmlSetGenericErrorFunc(mem, xmlParserValidityError)", "xmlSetGenericErrorFunc(mem, xmlParserValidityWarning)", "xmlSetGenericErrorFunc(mem, xmlParserWarning)", "xmlSetStructuredErrorFunc(mem, 0)", "xmlThrDefSetGenericErrorFunc(mem, 0)", "xmlThrDefSetGenericErrorFunc(mem, php_libxml_ctx_error)", "xmlThrDefSetGenericErrorFunc(mem, php_libxml_ctx_warning)", "xmlThrDefSetGenericErrorFunc(mem, php_libxml_error_handler)", "xmlThrDefSetGenericErrorFunc(mem, xmlParserError)", "xmlThrDefSetGenericErrorFunc(mem, xmlParserValidityError)", "xmlThrDefSetGenericErrorFunc(mem, xmlParserValidityWarning)", "xmlThrDefSetGenericErrorFunc(mem, xmlParserWarning)", "xmlThrDefSetStructuredErrorFunc(mem, 0)", "zend_add_to_list(mem, 0)", "zend_init_list(mem, 0)", "zend_list_insert(mem, -1)", "zend_list_insert(mem, 0)", "zend_list_insert(mem, 1)", "zend_list_insert(mem, 2)", "zend_list_insert(mem, 3)", "zend_list_insert(mem, 6)", "zend_list_insert(mem, format)", "zend_list_insert(mem, ht)", "zend_list_insert(mem, le_index_ptr)", "zend_list_insert(mem, return_value_used)", "zend_list_insert(mem, size)", "{\n}\n", "_efree(mem)", "_zend_mem_block_size(mem)", "brk(mem)", "dlclose(mem)", "endDocument(mem)", "free(mem)", "getColumnNumber(mem)", "getLineNumber(mem)", "getNamespace(mem)", "getPublicId(mem)", "getSystemId(mem)", "hasExternalSubset(mem)", "hasInternalSubset(mem)", "iconv_close(mem)", "isStandalone(mem)", "list_entry_destructor(mem)", "plist_entry_destructor(mem)", "startDocument(mem)", "xmlCtxtGetLastError(mem)", "xmlCtxtResetLastError(mem)", "xmlFileClose(mem)", "xmlIOFTPClose(mem)", "xmlIOHTTPClose(mem)", "xmlMemFree(mem)", "xmlSAX2EndDocument(mem)", "xmlSAX2GetColumnNumber(mem)", "xmlSAX2GetLineNumber(mem)", "xmlSAX2GetPublicId(mem)", "xmlSAX2GetSystemId(mem)", "xmlSAX2HasExternalSubset(mem)", "xmlSAX2HasInternalSubset(mem)", "xmlSAX2IsStandalone(mem)", "xmlSAX2StartDocument(mem)", "xmlXPathWrapExternal(mem)", "zend_vm_stack_free(mem)", "zend_vm_stack_free_int(mem)", "zend_vm_stack_push(mem)", "zend_vm_stack_push_nocheck(mem)", "(&buf)(mem)", "(&doc_props)(mem)", "(&docp)(mem)", "(&format)(mem)", "(&ht)(mem)", "(&id)(mem)", "(&intern)(mem)", "(&mem)(mem)", "(&node)(mem)", "(&nodeobj)(mem)", "(&nodep)(mem)", "(&return_value)(mem)", "(&return_value_ptr)(mem)", "(&return_value_used)(mem)", "(&size)(mem)", "(&this_ptr)(mem)", "xmlFree((&buf))", "xmlFree((&doc_props))", "xmlFree((&docp))", "xmlFree((&format))", "xmlFree((&ht))", "xmlFree((&id))", "xmlFree((&intern))", "xmlFree((&mem))", "xmlFree((&node))", "xmlFree((&nodeobj))", "xmlFree((&nodep))", "xmlFree((&return_value))", "xmlFree((&return_value_ptr))", "xmlFree((&return_value_used))", "xmlFree((&size))", "xmlFree((&this_ptr))", "xmlFree((mem))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.7857358315413272, -3.9057452715413272, -6.3959477315413267, -5.0299111315413274, -6.1015969315413265, -5.0299111315413274, -5.7877992315413271, -6.1015969315413265, -6.1015969315413265, -5.7877992315413271, -5.7877992315413271, -5.7877992315413271, -6.1015969315413265, -6.104854371541327, -6.104854371541327, -5.6380596315413269, -6.3959477315413267]
								}, {
									"case":	2,
									"scores":	[-4.619117761541327]
								}, {
									"case":	3,
									"scores":	[-4.619117761541327]
								}, {
									"case":	4,
									"scores":	[-4.619117761541327]
								}, {
									"case":	5,
									"scores":	[-4.619117761541327]
								}, {
									"case":	6,
									"scores":	[-4.619117761541327]
								}, {
									"case":	7,
									"scores":	[-4.619117761541327]
								}, {
									"case":	8,
									"scores":	[-4.619117761541327]
								}, {
									"case":	9,
									"scores":	[-4.619117761541327]
								}, {
									"case":	10,
									"scores":	[-4.619117761541327]
								}, {
									"case":	11,
									"scores":	[-4.619117761541327]
								}, {
									"case":	12,
									"scores":	[-4.619117761541327]
								}, {
									"case":	13,
									"scores":	[-4.619117761541327]
								}, {
									"case":	14,
									"scores":	[-4.619117761541327]
								}, {
									"case":	15,
									"scores":	[-4.619117761541327]
								}, {
									"case":	16,
									"scores":	[-4.619117761541327]
								}, {
									"case":	17,
									"scores":	[-4.619117761541327]
								}, {
									"case":	18,
									"scores":	[-4.619117761541327]
								}, {
									"case":	19,
									"scores":	[-4.619117761541327]
								}, {
									"case":	20,
									"scores":	[-4.619117761541327]
								}, {
									"case":	21,
									"scores":	[-4.619117761541327]
								}, {
									"case":	22,
									"scores":	[-4.619117761541327]
								}, {
									"case":	23,
									"scores":	[-4.619117761541327]
								}, {
									"case":	24,
									"scores":	[-4.619117761541327]
								}, {
									"case":	25,
									"scores":	[-4.619117761541327]
								}, {
									"case":	26,
									"scores":	[-4.619117761541327]
								}, {
									"case":	27,
									"scores":	[-4.619117761541327]
								}, {
									"case":	28,
									"scores":	[-4.619117761541327]
								}, {
									"case":	29,
									"scores":	[-4.619117761541327]
								}, {
									"case":	30,
									"scores":	[-4.619117761541327]
								}, {
									"case":	31,
									"scores":	[-4.619117761541327]
								}, {
									"case":	32,
									"scores":	[-4.619117761541327]
								}, {
									"case":	33,
									"scores":	[-4.619117761541327]
								}, {
									"case":	34,
									"scores":	[-4.619117761541327]
								}, {
									"case":	35,
									"scores":	[-4.619117761541327]
								}, {
									"case":	36,
									"scores":	[-4.619117761541327]
								}, {
									"case":	37,
									"scores":	[-4.619117761541327]
								}, {
									"case":	38,
									"scores":	[-4.619117761541327]
								}, {
									"case":	39,
									"scores":	[-4.619117761541327]
								}, {
									"case":	40,
									"scores":	[-4.619117761541327]
								}, {
									"case":	41,
									"scores":	[-4.619117761541327]
								}, {
									"case":	42,
									"scores":	[-4.619117761541327]
								}, {
									"case":	43,
									"scores":	[-4.619117761541327]
								}, {
									"case":	44,
									"scores":	[-4.619117761541327]
								}, {
									"case":	45,
									"scores":	[-4.619117761541327]
								}, {
									"case":	46,
									"scores":	[-4.619117761541327]
								}, {
									"case":	47,
									"scores":	[-4.619117761541327]
								}, {
									"case":	48,
									"scores":	[-4.619117761541327]
								}, {
									"case":	49,
									"scores":	[-4.619117761541327]
								}, {
									"case":	50,
									"scores":	[-4.619117761541327]
								}, {
									"case":	51,
									"scores":	[-4.619117761541327]
								}, {
									"case":	52,
									"scores":	[-4.619117761541327]
								}, {
									"case":	53,
									"scores":	[-4.619117761541327]
								}, {
									"case":	54,
									"scores":	[-4.619117761541327]
								}, {
									"case":	55,
									"scores":	[-4.619117761541327]
								}, {
									"case":	56,
									"scores":	[-4.619117761541327]
								}, {
									"case":	57,
									"scores":	[-4.619117761541327]
								}, {
									"case":	58,
									"scores":	[-4.619117761541327]
								}, {
									"case":	59,
									"scores":	[-4.619117761541327]
								}, {
									"case":	60,
									"scores":	[-4.619117761541327]
								}, {
									"case":	61,
									"scores":	[-4.619117761541327]
								}, {
									"case":	62,
									"scores":	[-4.619117761541327]
								}, {
									"case":	63,
									"scores":	[-4.619117761541327]
								}, {
									"case":	64,
									"scores":	[-4.619117761541327]
								}, {
									"case":	65,
									"scores":	[-4.619117761541327]
								}, {
									"case":	66,
									"scores":	[-4.619117761541327]
								}, {
									"case":	67,
									"scores":	[-4.619117761541327]
								}, {
									"case":	68,
									"scores":	[-4.619117761541327]
								}, {
									"case":	69,
									"scores":	[-4.619117761541327]
								}, {
									"case":	70,
									"scores":	[-4.619117761541327]
								}, {
									"case":	71,
									"scores":	[-4.619117761541327]
								}, {
									"case":	72,
									"scores":	[-4.619117761541327]
								}, {
									"case":	73,
									"scores":	[-4.619117761541327]
								}, {
									"case":	74,
									"scores":	[-4.619117761541327]
								}, {
									"case":	75,
									"scores":	[-4.619117761541327]
								}, {
									"case":	76,
									"scores":	[-4.619117761541327]
								}, {
									"case":	77,
									"scores":	[-4.619117761541327]
								}, {
									"case":	78,
									"scores":	[-4.619117761541327]
								}, {
									"case":	79,
									"scores":	[-4.619117761541327]
								}, {
									"case":	80,
									"scores":	[-4.619117761541327]
								}, {
									"case":	81,
									"scores":	[-4.619117761541327]
								}, {
									"case":	82,
									"scores":	[-4.619117761541327]
								}, {
									"case":	83,
									"scores":	[-4.619117761541327]
								}, {
									"case":	84,
									"scores":	[-4.619117761541327]
								}, {
									"case":	85,
									"scores":	[-4.619117761541327]
								}, {
									"case":	86,
									"scores":	[-4.619117761541327]
								}, {
									"case":	87,
									"scores":	[-4.619117761541327]
								}, {
									"case":	88,
									"scores":	[-4.619117761541327]
								}, {
									"case":	89,
									"scores":	[-4.619117761541327]
								}, {
									"case":	90,
									"scores":	[-4.619117761541327]
								}, {
									"case":	91,
									"scores":	[-4.619117761541327]
								}, {
									"case":	92,
									"scores":	[-4.619117761541327]
								}, {
									"case":	93,
									"scores":	[-4.619117761541327]
								}, {
									"case":	94,
									"scores":	[-4.619117761541327]
								}, {
									"case":	95,
									"scores":	[-4.619117761541327]
								}, {
									"case":	96,
									"scores":	[-4.619117761541327]
								}, {
									"case":	97,
									"scores":	[-4.619117761541327]
								}, {
									"case":	98,
									"scores":	[-4.619117761541327]
								}, {
									"case":	99,
									"scores":	[-4.619117761541327]
								}, {
									"case":	100,
									"scores":	[-4.619117761541327]
								}, {
									"case":	101,
									"scores":	[-4.619117761541327]
								}, {
									"case":	102,
									"scores":	[-4.619117761541327]
								}, {
									"case":	103,
									"scores":	[-4.619117761541327]
								}, {
									"case":	104,
									"scores":	[-4.619117761541327]
								}, {
									"case":	105,
									"scores":	[-4.619117761541327]
								}, {
									"case":	106,
									"scores":	[-4.619117761541327]
								}, {
									"case":	107,
									"scores":	[-4.619117761541327]
								}, {
									"case":	108,
									"scores":	[-4.619117761541327]
								}, {
									"case":	109,
									"scores":	[-4.619117761541327]
								}, {
									"case":	110,
									"scores":	[-4.619117761541327]
								}, {
									"case":	111,
									"scores":	[-4.619117761541327]
								}, {
									"case":	112,
									"scores":	[-4.619117761541327]
								}, {
									"case":	113,
									"scores":	[-4.619117761541327]
								}, {
									"case":	114,
									"scores":	[-4.619117761541327]
								}, {
									"case":	115,
									"scores":	[-4.619117761541327]
								}, {
									"case":	116,
									"scores":	[-4.619117761541327]
								}, {
									"case":	117,
									"scores":	[-4.619117761541327]
								}, {
									"case":	118,
									"scores":	[-4.619117761541327]
								}, {
									"case":	119,
									"scores":	[-4.619117761541327]
								}, {
									"case":	120,
									"scores":	[-4.619117761541327]
								}, {
									"case":	121,
									"scores":	[-4.619117761541327]
								}, {
									"case":	122,
									"scores":	[-4.619117761541327]
								}, {
									"case":	123,
									"scores":	[-4.619117761541327]
								}, {
									"case":	124,
									"scores":	[-4.619117761541327]
								}, {
									"case":	125,
									"scores":	[-4.619117761541327]
								}, {
									"case":	126,
									"scores":	[-4.619117761541327]
								}, {
									"case":	127,
									"scores":	[-4.619117761541327]
								}, {
									"case":	128,
									"scores":	[-4.619117761541327]
								}, {
									"case":	129,
									"scores":	[-4.619117761541327]
								}, {
									"case":	130,
									"scores":	[-4.619117761541327]
								}, {
									"case":	131,
									"scores":	[-4.619117761541327]
								}, {
									"case":	132,
									"scores":	[-4.619117761541327]
								}, {
									"case":	133,
									"scores":	[-4.619117761541327]
								}, {
									"case":	134,
									"scores":	[-4.619117761541327]
								}, {
									"case":	135,
									"scores":	[-4.619117761541327]
								}, {
									"case":	136,
									"scores":	[-4.619117761541327]
								}, {
									"case":	137,
									"scores":	[-4.619117761541327]
								}, {
									"case":	138,
									"scores":	[-4.619117761541327]
								}, {
									"case":	139,
									"scores":	[-4.619117761541327]
								}, {
									"case":	140,
									"scores":	[-4.619117761541327]
								}, {
									"case":	141,
									"scores":	[-4.619117761541327]
								}, {
									"case":	142,
									"scores":	[-4.619117761541327]
								}, {
									"case":	143,
									"scores":	[-4.619117761541327]
								}, {
									"case":	144,
									"scores":	[-4.619117761541327]
								}, {
									"case":	145,
									"scores":	[-4.619117761541327]
								}, {
									"case":	146,
									"scores":	[-4.619117761541327]
								}, {
									"case":	147,
									"scores":	[-4.619117761541327]
								}, {
									"case":	148,
									"scores":	[-4.619117761541327]
								}, {
									"case":	149,
									"scores":	[-4.619117761541327]
								}, {
									"case":	150,
									"scores":	[-4.619117761541327]
								}, {
									"case":	151,
									"scores":	[-4.619117761541327]
								}, {
									"case":	152,
									"scores":	[-4.619117761541327]
								}, {
									"case":	153,
									"scores":	[-4.619117761541327]
								}, {
									"case":	154,
									"scores":	[-4.619117761541327]
								}, {
									"case":	155,
									"scores":	[-4.619117761541327]
								}, {
									"case":	156,
									"scores":	[-4.619117761541327]
								}, {
									"case":	157,
									"scores":	[-4.619117761541327]
								}, {
									"case":	158,
									"scores":	[-4.619117761541327]
								}, {
									"case":	159,
									"scores":	[-4.619117761541327]
								}, {
									"case":	160,
									"scores":	[-4.619117761541327]
								}, {
									"case":	161,
									"scores":	[-4.619117761541327]
								}, {
									"case":	162,
									"scores":	[-4.619117761541327]
								}, {
									"case":	163,
									"scores":	[-4.619117761541327]
								}, {
									"case":	164,
									"scores":	[-4.619117761541327]
								}, {
									"case":	165,
									"scores":	[-4.619117761541327]
								}, {
									"case":	166,
									"scores":	[-4.619117761541327]
								}, {
									"case":	167,
									"scores":	[-4.619117761541327]
								}, {
									"case":	168,
									"scores":	[-4.619117761541327]
								}, {
									"case":	169,
									"scores":	[-4.619117761541327]
								}, {
									"case":	170,
									"scores":	[-4.619117761541327]
								}]
						}]
				}, {
					"line":	2340,
					"switches":	[{
							"switch":	60,
							"types":	[[], [], [], [], [203], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [], [], [], [], [], []],
							"begin_line":	2341,
							"begin_column":	1,
							"end_line":	2341,
							"end_column":	1,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	2,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	3,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	4,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	5,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	6,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	7,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	8,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	9,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	10,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	11,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	12,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	13,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	14,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	15,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	16,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	17,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	18,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	19,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	20,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	21,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	22,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	23,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	24,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	25,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	26,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	27,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	28,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	29,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	30,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	31,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	32,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	33,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	34,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	35,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	36,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	37,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	38,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	39,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	40,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	41,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	42,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	43,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	44,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	45,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	46,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	47,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	48,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	49,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	50,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	51,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	52,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	53,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	54,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	55,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	56,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	57,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	58,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	59,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	60,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	61,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	62,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	63,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	64,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	65,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	66,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	67,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	68,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	69,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	70,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	71,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	72,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	73,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	74,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	75,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	76,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	77,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	78,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	79,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	80,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	81,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	82,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	83,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	84,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	85,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	86,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	87,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	88,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	89,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	90,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	91,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	92,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	93,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	94,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	95,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	96,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	97,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	98,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	99,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	100,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	101,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	102,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	103,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	104,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	105,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	106,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	107,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	108,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	109,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	110,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	111,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	112,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	113,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	114,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	115,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	116,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	117,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	118,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	119,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	120,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	121,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	122,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	123,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	124,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	125,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	126,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	127,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	128,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	129,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	130,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	131,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	132,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	133,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	134,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	135,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	136,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	137,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	138,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	139,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	140,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	141,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	142,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	143,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	144,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	145,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	146,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	147,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	148,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	149,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	150,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	151,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	152,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	153,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	154,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	155,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	156,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	157,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	158,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	159,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	160,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	161,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	162,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	163,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	164,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	165,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	166,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	167,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	168,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	169,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	170,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	171,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	172,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	173,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	174,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	175,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	176,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	177,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	178,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	179,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	180,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	181,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	182,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	183,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	184,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	185,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	186,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	187,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	188,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	189,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	190,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	191,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	192,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	193,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	194,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	195,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	196,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	197,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	198,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	199,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	200,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	201,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	202,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	203,
									"scores":	[-7.2810701528588462, -8.0023830442688464, -8.8078978526588472, -7.9254890048588464, -8.7909115326588463, -8.2872874448588458, -8.5132122786588464, -8.7707974526588472, -8.7707974526588472, -8.5132122786588464, -8.5132122786588464, -8.5132122786588464, -8.7707974526588472, -8.77228448665885, -8.77228448665885, -8.56185893885885, -8.8078978526588472]
								}]
						}, {
							"switch":	61,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2341,
							"begin_column":	3,
							"end_line":	2342,
							"end_column":	15,
							"patch_codes":	["if (__is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    xmlFree(mem);\n", "if ((mem) || __is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    xmlFree(mem);\n", "if ((mem) && !__is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    xmlFree(mem);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.1224377664281464, -0.438419982428147, -2.9286224424281455, -1.3666130664281457, -2.7232544884281453, -1.6515686884281453, -2.3204739424281455, -2.6342716424281454, -2.6342716424281454, -2.3204739424281455, -2.3204739424281455, -2.3204739424281455, -2.6342716424281454, -2.6375290824281454, -2.6375290824281454, -2.1707343424281453, -2.9286224424281455]
								}, {
									"case":	2,
									"scores":	[-3.9609298224281457, -3.2769120384281458, -5.7671144984281462, -4.2051051224281464, -5.5617465444281464, -4.4900607444281455, -5.1589659984281457, -5.472763698428146, -5.472763698428146, -5.1589659984281457, -5.1589659984281457, -5.1589659984281457, -5.472763698428146, -5.4760211384281456, -5.4760211384281456, -5.0092263984281455, -5.7671144984281462]
								}, {
									"case":	3,
									"scores":	[-3.9609298224281457, -3.2769120384281458, -5.7671144984281462, -4.2051051224281464, -5.5617465444281464, -4.4900607444281455, -5.1589659984281457, -5.472763698428146, -5.472763698428146, -5.1589659984281457, -5.1589659984281457, -5.1589659984281457, -5.472763698428146, -5.4760211384281456, -5.4760211384281456, -5.0092263984281455, -5.7671144984281462]
								}]
						}, {
							"switch":	64,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2341,
							"begin_column":	3,
							"end_line":	2342,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)))\n    if (mem)\n        xmlFree(mem);\n", "if (!__is_neg(\"\", \"L2341\", 17, &(mem), sizeof (mem), &(xmlFree), sizeof (xmlFree), &(return_value), sizeof (return_value), &(size), sizeof (size), &(docp), sizeof (docp), &(format), sizeof (format), &(buf), sizeof (buf), &(node), sizeof (node), &(intern), sizeof (intern), &(nodep), sizeof (nodep), &(nodeobj), sizeof (nodeobj), &(doc_props), sizeof (doc_props), &(id), sizeof (id), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr)) && (mem))\n    xmlFree(mem);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.4293107628588473, -5.7452929788588465, -8.2354954388588464, -6.6734860628588457, -8.0301274848588466, -6.9584416848588457, -7.627346938858846, -7.9411446388588462, -7.9411446388588462, -7.627346938858846, -7.627346938858846, -7.627346938858846, -7.9411446388588462, -7.9444020788588467, -7.9444020788588467, -7.4776073388588467, -8.2354954388588464]
								}, {
									"case":	2,
									"scores":	[-6.3154967628588468, -5.631478978858846, -8.1216814388588467, -6.5596720628588461, -7.916313484858847, -6.8446276848588461, -7.5135329388588463, -7.8273306388588466, -7.8273306388588466, -7.5135329388588463, -7.5135329388588463, -7.5135329388588463, -7.8273306388588466, -7.8305880788588471, -7.8305880788588471, -7.3637933388588461, -8.1216814388588467]
								}]
						}]
				}, {
					"line":	2307,
					"switches":	[{
							"switch":	32,
							"types":	[[], [], [], [], [204], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], [], [], [], [], [], []],
							"begin_line":	2308,
							"begin_column":	0,
							"end_line":	2308,
							"end_column":	0,
							"patch_codes":	["memset(&doc_props->classmap, 0, sizeof (*(&doc_props->classmap)))", "memset(&doc_props->formatoutput, 0, sizeof (*(&doc_props->formatoutput)))", "memset(&doc_props->preservewhitespace, 0, sizeof (*(&doc_props->preservewhitespace)))", "memset(&doc_props->recover, 0, sizeof (*(&doc_props->recover)))", "memset(&doc_props->resolveexternals, 0, sizeof (*(&doc_props->resolveexternals)))", "memset(&doc_props->stricterror, 0, sizeof (*(&doc_props->stricterror)))", "memset(&doc_props->substituteentities, 0, sizeof (*(&doc_props->substituteentities)))", "memset(&doc_props->validateonparse, 0, sizeof (*(&doc_props->validateonparse)))", "memset(&intern->document, 0, sizeof (*(&intern->document)))", "memset(&intern->handle, 0, sizeof (*(&intern->handle)))", "memset(&intern->prop_handler, 0, sizeof (*(&intern->prop_handler)))", "memset(&intern->ptr, 0, sizeof (*(&intern->ptr)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(doc_props->classmap, 0, sizeof (*(doc_props->classmap)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->document, 0, sizeof (*(intern->document)))", "memset(intern->prop_handler, 0, sizeof (*(intern->prop_handler)))", "memset(intern->ptr, 0, sizeof (*(intern->ptr)))", "(executor_globals.error_reporting) = (-1)", "(executor_globals.error_reporting) = (0)", "(executor_globals.error_reporting) = (1)", "(executor_globals.error_reporting) = (2)", "(executor_globals.error_reporting) = (3)", "(executor_globals.error_reporting) = (6)", "(executor_globals.error_reporting) = (format)", "(executor_globals.error_reporting) = (ht)", "(executor_globals.error_reporting) = (return_value_used)", "(executor_globals.error_reporting) = (size)", "_convert_to_string(((id)))", "_convert_to_string(((nodep)))", "_convert_to_string(((return_value)))", "_convert_to_string(((this_ptr)))", "_efree(((doc_props)))", "_efree(((id)))", "_efree(((nodep)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor_func((id))", "_zval_copy_ctor_func((nodep))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((id)))", "_zval_dtor(((nodep)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((id))", "_zval_dtor_func((nodep))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(id)))", "_zval_ptr_dtor((&(nodep)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "buf = (buf)", "convert_to_boolean((id))", "convert_to_boolean((nodep))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long((id))", "convert_to_long((nodep))", "convert_to_long((return_value))", "convert_to_long((this_ptr))", "doc_props = (doc_props)", "doc_props = dom_get_doc_props((intern)->document)", "doc_props = dom_get_doc_props((nodeobj)->document)", "format = (-1)", "format = (0)", "format = (1)", "format = (2)", "format = (3)", "format = (6)", "format = (doc_props)->formatoutput", "format = (format)", "format = (ht)", "format = (return_value_used)", "format = (size)", "gc_remove_zval_from_buffer((id))", "gc_remove_zval_from_buffer((nodep))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((id)))", "gc_zval_check_possible_root(((nodep)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((id))", "gc_zval_possible_root((nodep))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "htmlDocDumpMemoryFormat((docp), &mem, &size, format)", "htmlDocDumpMemoryFormat(docp, &(mem), &size, format)", "htmlNodeDumpFormatOutput((buf), docp, node, 0, format)", "htmlNodeDumpFormatOutput(buf, (docp), node, 0, format)", "htmlNodeDumpFormatOutput(buf, docp, (node), 0, format)", "i_zval_ptr_dtor((id))", "i_zval_ptr_dtor((nodep))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "mem = (mem)", "php_dom_create_implementation((return_value_ptr))", "php_dom_create_interator((id), 0)", "php_dom_create_interator((nodep), 0)", "php_dom_create_interator((return_value), 0)", "php_dom_create_interator((this_ptr), 0)", "php_dom_remove_xinclude_nodes((node))", "php_dom_remove_xinclude_nodes((node)->children)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 0)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), 1)", "php_dom_throw_error((DOMSTRING_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 0)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), 1)", "php_dom_throw_error((HIERARCHY_REQUEST_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INDEX_SIZE_ERR), 0)", "php_dom_throw_error((INDEX_SIZE_ERR), 1)", "php_dom_throw_error((INDEX_SIZE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 0)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), 1)", "php_dom_throw_error((INUSE_ATTRIBUTE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_ACCESS_ERR), 0)", "php_dom_throw_error((INVALID_ACCESS_ERR), 1)", "php_dom_throw_error((INVALID_ACCESS_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_CHARACTER_ERR), 0)", "php_dom_throw_error((INVALID_CHARACTER_ERR), 1)", "php_dom_throw_error((INVALID_CHARACTER_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 0)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), 1)", "php_dom_throw_error((INVALID_MODIFICATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((INVALID_STATE_ERR), 0)", "php_dom_throw_error((INVALID_STATE_ERR), 1)", "php_dom_throw_error((INVALID_STATE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NAMESPACE_ERR), 0)", "php_dom_throw_error((NAMESPACE_ERR), 1)", "php_dom_throw_error((NAMESPACE_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_FOUND_ERR), 0)", "php_dom_throw_error((NOT_FOUND_ERR), 1)", "php_dom_throw_error((NOT_FOUND_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NOT_SUPPORTED_ERR), 0)", "php_dom_throw_error((NOT_SUPPORTED_ERR), 1)", "php_dom_throw_error((NOT_SUPPORTED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_DATA_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 0)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), 1)", "php_dom_throw_error((NO_MODIFICATION_ALLOWED_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((PHP_ERR), 0)", "php_dom_throw_error((PHP_ERR), 1)", "php_dom_throw_error((PHP_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((SYNTAX_ERR), 0)", "php_dom_throw_error((SYNTAX_ERR), 1)", "php_dom_throw_error((SYNTAX_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((VALIDATION_ERR), 0)", "php_dom_throw_error((VALIDATION_ERR), 1)", "php_dom_throw_error((VALIDATION_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 0)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), 1)", "php_dom_throw_error((WRONG_DOCUMENT_ERR), dom_get_strict_error(intern->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(INVALID_CHARACTER_ERR, dom_get_strict_error((nodeobj)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((intern)->document))", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error((nodeobj)->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (intern)->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", (nodeobj)->std.ce->name)", "php_libxml_node_free_resource((node))", "xmlBufferFree((buf))", "xmlFree((mem))", "xmlFreeNode((node))", "xmlUnlinkNode((node))", "zval_unset_isref_p((id))", "zval_unset_isref_p((nodep))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "buf = xmlBufferCreate()", "doc_props = dom_get_doc_props(intern->document)", "exit(1)", "format = doc_props->formatoutput", "htmlDocDumpMemoryFormat(docp, &mem, &size, format)", "htmlNodeDumpFormatOutput(buf, docp, node, 0, format)", "mem = (xmlChar *)xmlBufferContent(buf)", "php_dom_throw_error(INVALID_STATE_ERR, 0)", "php_dom_throw_error(INVALID_STATE_ERR, 1)", "php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document))", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot create required DOM object\")", "php_error_docref0(((void *)0), (1 << 1L), \"Cannot import: Node Type Not Supported\")", "php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\")", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", intern->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name)", "php_error_docref0(((void *)0), (1 << 1L), \"Document Missing Root Element\")", "php_error_docref0(((void *)0), (1 << 1L), \"Empty string supplied as input\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Document Encoding\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Filename\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid RelaxNG\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema file source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema source\")", "php_error_docref0(((void *)0), (1 << 1L), \"Invalid Schema\")", "php_error_docref0(((void *)0), (1 << 1L), \"Not yet implemented\")", "xmlBufferFree(buf)", "xmlFree(mem)", "xmlInitParser()", "zend_error((1 << 0L), \"Invalid RelaxNG Validation Context\")", "zend_error((1 << 0L), \"Invalid Schema Validation Context\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "if (__is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.295874444461016]
								}, {
									"case":	2,
									"scores":	[-4.295874444461016]
								}, {
									"case":	3,
									"scores":	[-4.295874444461016]
								}, {
									"case":	4,
									"scores":	[-4.295874444461016]
								}, {
									"case":	5,
									"scores":	[-4.295874444461016]
								}, {
									"case":	6,
									"scores":	[-4.295874444461016]
								}, {
									"case":	7,
									"scores":	[-4.295874444461016]
								}, {
									"case":	8,
									"scores":	[-4.295874444461016]
								}, {
									"case":	9,
									"scores":	[-4.295874444461016]
								}, {
									"case":	10,
									"scores":	[-4.295874444461016]
								}, {
									"case":	11,
									"scores":	[-4.295874444461016]
								}, {
									"case":	12,
									"scores":	[-4.295874444461016]
								}, {
									"case":	13,
									"scores":	[-4.295874444461016]
								}, {
									"case":	14,
									"scores":	[-4.295874444461016]
								}, {
									"case":	15,
									"scores":	[-4.295874444461016]
								}, {
									"case":	16,
									"scores":	[-4.295874444461016]
								}, {
									"case":	17,
									"scores":	[-4.295874444461016]
								}, {
									"case":	18,
									"scores":	[-4.295874444461016]
								}, {
									"case":	19,
									"scores":	[-4.295874444461016]
								}, {
									"case":	20,
									"scores":	[-4.295874444461016]
								}, {
									"case":	21,
									"scores":	[-4.295874444461016]
								}, {
									"case":	22,
									"scores":	[-4.295874444461016]
								}, {
									"case":	23,
									"scores":	[-4.295874444461016]
								}, {
									"case":	24,
									"scores":	[-4.295874444461016]
								}, {
									"case":	25,
									"scores":	[-4.295874444461016]
								}, {
									"case":	26,
									"scores":	[-4.295874444461016]
								}, {
									"case":	27,
									"scores":	[-4.295874444461016]
								}, {
									"case":	28,
									"scores":	[-4.295874444461016]
								}, {
									"case":	29,
									"scores":	[-4.295874444461016]
								}, {
									"case":	30,
									"scores":	[-4.295874444461016]
								}, {
									"case":	31,
									"scores":	[-4.295874444461016]
								}, {
									"case":	32,
									"scores":	[-4.295874444461016]
								}, {
									"case":	33,
									"scores":	[-4.295874444461016]
								}, {
									"case":	34,
									"scores":	[-4.295874444461016]
								}, {
									"case":	35,
									"scores":	[-4.295874444461016]
								}, {
									"case":	36,
									"scores":	[-4.295874444461016]
								}, {
									"case":	37,
									"scores":	[-4.295874444461016]
								}, {
									"case":	38,
									"scores":	[-4.295874444461016]
								}, {
									"case":	39,
									"scores":	[-4.295874444461016]
								}, {
									"case":	40,
									"scores":	[-4.295874444461016]
								}, {
									"case":	41,
									"scores":	[-4.295874444461016]
								}, {
									"case":	42,
									"scores":	[-4.295874444461016]
								}, {
									"case":	43,
									"scores":	[-4.295874444461016]
								}, {
									"case":	44,
									"scores":	[-4.295874444461016]
								}, {
									"case":	45,
									"scores":	[-4.295874444461016]
								}, {
									"case":	46,
									"scores":	[-4.295874444461016]
								}, {
									"case":	47,
									"scores":	[-4.295874444461016]
								}, {
									"case":	48,
									"scores":	[-4.295874444461016]
								}, {
									"case":	49,
									"scores":	[-4.295874444461016]
								}, {
									"case":	50,
									"scores":	[-4.295874444461016]
								}, {
									"case":	51,
									"scores":	[-4.295874444461016]
								}, {
									"case":	52,
									"scores":	[-4.295874444461016]
								}, {
									"case":	53,
									"scores":	[-4.295874444461016]
								}, {
									"case":	54,
									"scores":	[-4.295874444461016]
								}, {
									"case":	55,
									"scores":	[-4.295874444461016]
								}, {
									"case":	56,
									"scores":	[-4.295874444461016]
								}, {
									"case":	57,
									"scores":	[-4.295874444461016]
								}, {
									"case":	58,
									"scores":	[-4.295874444461016]
								}, {
									"case":	59,
									"scores":	[-4.295874444461016]
								}, {
									"case":	60,
									"scores":	[-4.295874444461016]
								}, {
									"case":	61,
									"scores":	[-4.295874444461016]
								}, {
									"case":	62,
									"scores":	[-4.295874444461016]
								}, {
									"case":	63,
									"scores":	[-4.295874444461016]
								}, {
									"case":	64,
									"scores":	[-4.295874444461016]
								}, {
									"case":	65,
									"scores":	[-4.295874444461016]
								}, {
									"case":	66,
									"scores":	[-4.295874444461016]
								}, {
									"case":	67,
									"scores":	[-4.295874444461016]
								}, {
									"case":	68,
									"scores":	[-4.295874444461016]
								}, {
									"case":	69,
									"scores":	[-4.295874444461016]
								}, {
									"case":	70,
									"scores":	[-4.295874444461016]
								}, {
									"case":	71,
									"scores":	[-4.295874444461016]
								}, {
									"case":	72,
									"scores":	[-4.295874444461016]
								}, {
									"case":	73,
									"scores":	[-4.295874444461016]
								}, {
									"case":	74,
									"scores":	[-4.295874444461016]
								}, {
									"case":	75,
									"scores":	[-4.295874444461016]
								}, {
									"case":	76,
									"scores":	[-4.295874444461016]
								}, {
									"case":	77,
									"scores":	[-4.295874444461016]
								}, {
									"case":	78,
									"scores":	[-4.295874444461016]
								}, {
									"case":	79,
									"scores":	[-4.295874444461016]
								}, {
									"case":	80,
									"scores":	[-4.295874444461016]
								}, {
									"case":	81,
									"scores":	[-4.295874444461016]
								}, {
									"case":	82,
									"scores":	[-4.295874444461016]
								}, {
									"case":	83,
									"scores":	[-4.295874444461016]
								}, {
									"case":	84,
									"scores":	[-4.295874444461016]
								}, {
									"case":	85,
									"scores":	[-4.295874444461016]
								}, {
									"case":	86,
									"scores":	[-4.295874444461016]
								}, {
									"case":	87,
									"scores":	[-4.295874444461016]
								}, {
									"case":	88,
									"scores":	[-4.295874444461016]
								}, {
									"case":	89,
									"scores":	[-4.295874444461016]
								}, {
									"case":	90,
									"scores":	[-4.295874444461016]
								}, {
									"case":	91,
									"scores":	[-4.295874444461016]
								}, {
									"case":	92,
									"scores":	[-4.295874444461016]
								}, {
									"case":	93,
									"scores":	[-4.295874444461016]
								}, {
									"case":	94,
									"scores":	[-4.295874444461016]
								}, {
									"case":	95,
									"scores":	[-4.295874444461016]
								}, {
									"case":	96,
									"scores":	[-4.295874444461016]
								}, {
									"case":	97,
									"scores":	[-4.295874444461016]
								}, {
									"case":	98,
									"scores":	[-4.295874444461016]
								}, {
									"case":	99,
									"scores":	[-4.295874444461016]
								}, {
									"case":	100,
									"scores":	[-4.295874444461016]
								}, {
									"case":	101,
									"scores":	[-4.295874444461016]
								}, {
									"case":	102,
									"scores":	[-4.295874444461016]
								}, {
									"case":	103,
									"scores":	[-4.295874444461016]
								}, {
									"case":	104,
									"scores":	[-4.295874444461016]
								}, {
									"case":	105,
									"scores":	[-4.295874444461016]
								}, {
									"case":	106,
									"scores":	[-4.295874444461016]
								}, {
									"case":	107,
									"scores":	[-4.295874444461016]
								}, {
									"case":	108,
									"scores":	[-4.295874444461016]
								}, {
									"case":	109,
									"scores":	[-4.295874444461016]
								}, {
									"case":	110,
									"scores":	[-4.295874444461016]
								}, {
									"case":	111,
									"scores":	[-4.295874444461016]
								}, {
									"case":	112,
									"scores":	[-4.295874444461016]
								}, {
									"case":	113,
									"scores":	[-4.295874444461016]
								}, {
									"case":	114,
									"scores":	[-4.295874444461016]
								}, {
									"case":	115,
									"scores":	[-4.295874444461016]
								}, {
									"case":	116,
									"scores":	[-4.295874444461016]
								}, {
									"case":	117,
									"scores":	[-4.295874444461016]
								}, {
									"case":	118,
									"scores":	[-4.295874444461016]
								}, {
									"case":	119,
									"scores":	[-4.295874444461016]
								}, {
									"case":	120,
									"scores":	[-4.295874444461016]
								}, {
									"case":	121,
									"scores":	[-4.295874444461016]
								}, {
									"case":	122,
									"scores":	[-4.295874444461016]
								}, {
									"case":	123,
									"scores":	[-4.295874444461016]
								}, {
									"case":	124,
									"scores":	[-4.295874444461016]
								}, {
									"case":	125,
									"scores":	[-4.295874444461016]
								}, {
									"case":	126,
									"scores":	[-4.295874444461016]
								}, {
									"case":	127,
									"scores":	[-4.295874444461016]
								}, {
									"case":	128,
									"scores":	[-4.295874444461016]
								}, {
									"case":	129,
									"scores":	[-4.295874444461016]
								}, {
									"case":	130,
									"scores":	[-4.295874444461016]
								}, {
									"case":	131,
									"scores":	[-4.295874444461016]
								}, {
									"case":	132,
									"scores":	[-4.295874444461016]
								}, {
									"case":	133,
									"scores":	[-4.295874444461016]
								}, {
									"case":	134,
									"scores":	[-4.295874444461016]
								}, {
									"case":	135,
									"scores":	[-4.295874444461016]
								}, {
									"case":	136,
									"scores":	[-4.295874444461016]
								}, {
									"case":	137,
									"scores":	[-4.295874444461016]
								}, {
									"case":	138,
									"scores":	[-4.295874444461016]
								}, {
									"case":	139,
									"scores":	[-4.295874444461016]
								}, {
									"case":	140,
									"scores":	[-4.295874444461016]
								}, {
									"case":	141,
									"scores":	[-4.295874444461016]
								}, {
									"case":	142,
									"scores":	[-4.295874444461016]
								}, {
									"case":	143,
									"scores":	[-4.295874444461016]
								}, {
									"case":	144,
									"scores":	[-4.295874444461016]
								}, {
									"case":	145,
									"scores":	[-4.295874444461016]
								}, {
									"case":	146,
									"scores":	[-4.295874444461016]
								}, {
									"case":	147,
									"scores":	[-4.295874444461016]
								}, {
									"case":	148,
									"scores":	[-4.295874444461016]
								}, {
									"case":	149,
									"scores":	[-4.295874444461016]
								}, {
									"case":	150,
									"scores":	[-4.295874444461016]
								}, {
									"case":	151,
									"scores":	[-4.295874444461016]
								}, {
									"case":	152,
									"scores":	[-4.295874444461016]
								}, {
									"case":	153,
									"scores":	[-4.295874444461016]
								}, {
									"case":	154,
									"scores":	[-4.295874444461016]
								}, {
									"case":	155,
									"scores":	[-4.295874444461016]
								}, {
									"case":	156,
									"scores":	[-4.295874444461016]
								}, {
									"case":	157,
									"scores":	[-4.295874444461016]
								}, {
									"case":	158,
									"scores":	[-4.295874444461016]
								}, {
									"case":	159,
									"scores":	[-4.295874444461016]
								}, {
									"case":	160,
									"scores":	[-4.295874444461016]
								}, {
									"case":	161,
									"scores":	[-4.295874444461016]
								}, {
									"case":	162,
									"scores":	[-4.295874444461016]
								}, {
									"case":	163,
									"scores":	[-4.295874444461016]
								}, {
									"case":	164,
									"scores":	[-4.295874444461016]
								}, {
									"case":	165,
									"scores":	[-4.295874444461016]
								}, {
									"case":	166,
									"scores":	[-4.295874444461016]
								}, {
									"case":	167,
									"scores":	[-4.295874444461016]
								}, {
									"case":	168,
									"scores":	[-4.295874444461016]
								}, {
									"case":	169,
									"scores":	[-4.295874444461016]
								}, {
									"case":	170,
									"scores":	[-4.295874444461016]
								}, {
									"case":	171,
									"scores":	[-4.295874444461016]
								}, {
									"case":	172,
									"scores":	[-4.295874444461016]
								}, {
									"case":	173,
									"scores":	[-4.295874444461016]
								}, {
									"case":	174,
									"scores":	[-4.295874444461016]
								}, {
									"case":	175,
									"scores":	[-4.295874444461016]
								}, {
									"case":	176,
									"scores":	[-4.295874444461016]
								}, {
									"case":	177,
									"scores":	[-4.295874444461016]
								}, {
									"case":	178,
									"scores":	[-4.295874444461016]
								}, {
									"case":	179,
									"scores":	[-4.295874444461016]
								}, {
									"case":	180,
									"scores":	[-4.295874444461016]
								}, {
									"case":	181,
									"scores":	[-4.295874444461016]
								}, {
									"case":	182,
									"scores":	[-4.295874444461016]
								}, {
									"case":	183,
									"scores":	[-4.295874444461016]
								}, {
									"case":	184,
									"scores":	[-4.295874444461016]
								}, {
									"case":	185,
									"scores":	[-4.295874444461016]
								}, {
									"case":	186,
									"scores":	[-4.295874444461016]
								}, {
									"case":	187,
									"scores":	[-4.295874444461016]
								}, {
									"case":	188,
									"scores":	[-4.295874444461016]
								}, {
									"case":	189,
									"scores":	[-4.295874444461016]
								}, {
									"case":	190,
									"scores":	[-4.295874444461016]
								}, {
									"case":	191,
									"scores":	[-4.295874444461016]
								}, {
									"case":	192,
									"scores":	[-4.295874444461016]
								}, {
									"case":	193,
									"scores":	[-4.295874444461016]
								}, {
									"case":	194,
									"scores":	[-4.295874444461016]
								}, {
									"case":	195,
									"scores":	[-4.295874444461016]
								}, {
									"case":	196,
									"scores":	[-4.295874444461016]
								}, {
									"case":	197,
									"scores":	[-4.295874444461016]
								}, {
									"case":	198,
									"scores":	[-4.295874444461016]
								}, {
									"case":	199,
									"scores":	[-4.295874444461016]
								}, {
									"case":	200,
									"scores":	[-4.295874444461016]
								}, {
									"case":	201,
									"scores":	[-4.295874444461016]
								}, {
									"case":	202,
									"scores":	[-4.295874444461016]
								}, {
									"case":	203,
									"scores":	[-4.295874444461016]
								}, {
									"case":	204,
									"scores":	[-5.497176905261016, -7.2025346282610165, -7.8855284911610166, -8.3480776641610159, -5.1959348914610164, -6.8325454742610159, -7.4712300792610158, -9.83254425716102, -8.3596984282610158, -6.3567785262610155, -8.361185462261016, -8.361185462261016, -8.1507599144610161, -8.3967988282610158, -6.7008456814610158, -8.1001176704610156, -7.5912840198710159]
								}]
						}, {
							"switch":	33,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2308,
							"begin_column":	2,
							"end_line":	2343,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree))) {\n    {\n        nodeobj = (dom_object *)zend_object_store_get_object(nodep);\n        if (nodeobj->ptr == ((void *)0) || !(node = (xmlNodePtr)((php_libxml_node_ptr *)nodeobj->ptr)->node)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name);\n            {\n                {\n                    (*return_value).type = 0;\n                }\n                ;\n                return;\n            }\n            ;\n        }\n    }\n    ;\n    if (node->doc != docp) {\n        php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    buf = xmlBufferCreate();\n    if (!buf) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n    mem = (xmlChar *)xmlBufferContent(buf);\n    if (!mem) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            zval *__z = (return_value);\n            (*__z).value.str.len = strlen(__s);\n            (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    xmlBufferFree(buf);\n} else {\n    htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n    if (!size) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            int __l = size;\n            zval *__z = (return_value);\n            (*__z).value.str.len = __l;\n            (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    if (mem)\n        xmlFree(mem);\n}\n", "if ((nodep != ((void *)0)) || __is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree))) {\n    {\n        nodeobj = (dom_object *)zend_object_store_get_object(nodep);\n        if (nodeobj->ptr == ((void *)0) || !(node = (xmlNodePtr)((php_libxml_node_ptr *)nodeobj->ptr)->node)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name);\n            {\n                {\n                    (*return_value).type = 0;\n                }\n                ;\n                return;\n            }\n            ;\n        }\n    }\n    ;\n    if (node->doc != docp) {\n        php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    buf = xmlBufferCreate();\n    if (!buf) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n    mem = (xmlChar *)xmlBufferContent(buf);\n    if (!mem) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            zval *__z = (return_value);\n            (*__z).value.str.len = strlen(__s);\n            (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    xmlBufferFree(buf);\n} else {\n    htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n    if (!size) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            int __l = size;\n            zval *__z = (return_value);\n            (*__z).value.str.len = __l;\n            (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    if (mem)\n        xmlFree(mem);\n}\n", "if ((nodep != ((void *)0)) && !__is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree))) {\n    {\n        nodeobj = (dom_object *)zend_object_store_get_object(nodep);\n        if (nodeobj->ptr == ((void *)0) || !(node = (xmlNodePtr)((php_libxml_node_ptr *)nodeobj->ptr)->node)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name);\n            {\n                {\n                    (*return_value).type = 0;\n                }\n                ;\n                return;\n            }\n            ;\n        }\n    }\n    ;\n    if (node->doc != docp) {\n        php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    buf = xmlBufferCreate();\n    if (!buf) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n    mem = (xmlChar *)xmlBufferContent(buf);\n    if (!mem) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            zval *__z = (return_value);\n            (*__z).value.str.len = strlen(__s);\n            (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    xmlBufferFree(buf);\n} else {\n    htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n    if (!size) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            int __l = size;\n            zval *__z = (return_value);\n            (*__z).value.str.len = __l;\n            (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    if (mem)\n        xmlFree(mem);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7161867428281457, -5.9633745428281451, -6.6231919538281439, -6.406726553828145, -4.696520772828146, -6.4096316633281454, -4.5248934328281463, -6.8090800233281463, -7.3623187328281432, -6.2020282538281446, -7.3655761728281437, -7.3655761728281437, -6.8987814328281445, -7.6566695328281442, -6.0741522538281458, -5.8352820328281449, -5.1664670728281461]
								}, {
									"case":	2,
									"scores":	[-4.0184466854281462, -6.265634485428146, -6.9254518964281457, -6.7089864964281452, -4.9987807154281461, -6.7118916059281455, -4.8271533754281455, -7.1113399659281455, -7.664578675428146, -6.5042881964281456, -7.6678361154281456, -7.6678361154281456, -7.2010413754281455, -7.9589294754281461, -6.3764121964281451, -6.1375419754281459, -5.4687270154281453]
								}, {
									"case":	3,
									"scores":	[-4.0184466854281462, -6.265634485428146, -6.9254518964281457, -6.7089864964281452, -4.9987807154281461, -6.7118916059281455, -4.8271533754281455, -7.1113399659281455, -7.664578675428146, -6.5042881964281456, -7.6678361154281456, -7.6678361154281456, -7.2010413754281455, -7.9589294754281461, -6.3764121964281451, -6.1375419754281459, -5.4687270154281453]
								}]
						}, {
							"switch":	65,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2308,
							"begin_column":	2,
							"end_line":	2343,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree)))\n    if (nodep != ((void *)0)) {\n        {\n            nodeobj = (dom_object *)zend_object_store_get_object(nodep);\n            if (nodeobj->ptr == ((void *)0) || !(node = (xmlNodePtr)((php_libxml_node_ptr *)nodeobj->ptr)->node)) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name);\n                {\n                    {\n                        (*return_value).type = 0;\n                    }\n                    ;\n                    return;\n                }\n                ;\n            }\n        }\n        ;\n        if (node->doc != docp) {\n            php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        buf = xmlBufferCreate();\n        if (!buf) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n        mem = (xmlChar *)xmlBufferContent(buf);\n        if (!mem) {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n        } else {\n            do {\n                const char *__s = (mem);\n                zval *__z = (return_value);\n                (*__z).value.str.len = strlen(__s);\n                (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n                (*__z).type = 6;\n            } while (0);\n        }\n        xmlBufferFree(buf);\n    } else {\n        htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n        if (!size) {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n        } else {\n            do {\n                const char *__s = (mem);\n                int __l = size;\n                zval *__z = (return_value);\n                (*__z).value.str.len = __l;\n                (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n                (*__z).type = 6;\n            } while (0);\n        }\n        if (mem)\n            xmlFree(mem);\n    }\n", "if (!__is_neg(\"\", \"L2308\", 17, &(nodep), sizeof (nodep), &(return_value), sizeof (return_value), &(node), sizeof (node), &(nodeobj), sizeof (nodeobj), &(format), sizeof (format), &(doc_props), sizeof (doc_props), &(docp), sizeof (docp), &(intern), sizeof (intern), &(id), sizeof (id), &(buf), sizeof (buf), &(dom_node_class_entry), sizeof (dom_node_class_entry), &(dom_document_class_entry), sizeof (dom_document_class_entry), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(mem), sizeof (mem), &(size), sizeof (size), &(xmlFree), sizeof (xmlFree)) && (nodep != ((void *)0))) {\n    {\n        nodeobj = (dom_object *)zend_object_store_get_object(nodep);\n        if (nodeobj->ptr == ((void *)0) || !(node = (xmlNodePtr)((php_libxml_node_ptr *)nodeobj->ptr)->node)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Couldn't fetch %s\", nodeobj->std.ce->name);\n            {\n                {\n                    (*return_value).type = 0;\n                }\n                ;\n                return;\n            }\n            ;\n        }\n    }\n    ;\n    if (node->doc != docp) {\n        php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    buf = xmlBufferCreate();\n    if (!buf) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Could not fetch buffer\");\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n    htmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n    mem = (xmlChar *)xmlBufferContent(buf);\n    if (!mem) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            zval *__z = (return_value);\n            (*__z).value.str.len = strlen(__s);\n            (*__z).value.str.val = (1 ? _estrndup((__s), ((*__z).value.str.len)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    xmlBufferFree(buf);\n} else {\n    htmlDocDumpMemoryFormat(docp, &mem, &size, format);\n    if (!size) {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n    } else {\n        do {\n            const char *__s = (mem);\n            int __l = size;\n            zval *__z = (return_value);\n            (*__z).value.str.len = __l;\n            (*__z).value.str.val = (1 ? _estrndup((__s), (__l)) : (char *)__s);\n            (*__z).type = 6;\n        } while (0);\n    }\n    if (mem)\n        xmlFree(mem);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.978810624461016, -6.2259984244610163, -6.8858158354610151, -6.6693504354610162, -4.9591446544610163, -6.6722555449610157, -4.7875173144610157, -7.0717039049610158, -7.6249426144610162, -6.4646521354610158, -7.6282000544610149, -7.6282000544610149, -7.1614053144610157, -7.9192934144610163, -6.3367761354610161, -6.0979059144610162, -5.4290909544610155]
								}, {
									"case":	2,
									"scores":	[-5.3072440244610162, -7.554431824461016, -8.2142492354610166, -7.997783835461016, -6.287578054461016, -8.0006889449610163, -6.1159507144610163, -8.4001373049610155, -8.9533760144610159, -7.7930855354610156, -8.9566334544610164, -8.9566334544610164, -8.4898387144610155, -9.2477268144610161, -7.6652095354610159, -7.4263393144610159, -6.7575243544610153]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	0,
			"case":	167,
			"size":	49
		}, {
			"switch":	1,
			"case":	1,
			"size":	49
		}, {
			"switch":	1,
			"case":	2,
			"size":	49
		}, {
			"switch":	1,
			"case":	6,
			"size":	49
		}, {
			"switch":	2,
			"case":	1,
			"size":	49
		}, {
			"switch":	2,
			"case":	2,
			"size":	49
		}, {
			"switch":	3,
			"case":	167,
			"size":	14
		}, {
			"switch":	4,
			"case":	1,
			"size":	14
		}, {
			"switch":	4,
			"case":	2,
			"size":	14
		}, {
			"switch":	4,
			"case":	273,
			"size":	14
		}, {
			"switch":	5,
			"case":	1,
			"size":	14
		}, {
			"switch":	5,
			"case":	2,
			"size":	14
		}, {
			"switch":	6,
			"case":	167,
			"size":	14
		}, {
			"switch":	7,
			"case":	1,
			"size":	14
		}, {
			"switch":	8,
			"case":	167,
			"size":	14
		}, {
			"switch":	9,
			"case":	1,
			"size":	14
		}, {
			"switch":	9,
			"case":	2,
			"size":	14
		}, {
			"switch":	9,
			"case":	3,
			"size":	14
		}, {
			"switch":	10,
			"case":	1,
			"size":	14
		}, {
			"switch":	11,
			"case":	167,
			"size":	14
		}, {
			"switch":	12,
			"case":	1,
			"size":	14
		}, {
			"switch":	12,
			"case":	2,
			"size":	14
		}, {
			"switch":	12,
			"case":	3,
			"size":	14
		}, {
			"switch":	13,
			"case":	1,
			"size":	14
		}, {
			"switch":	13,
			"case":	2,
			"size":	14
		}, {
			"switch":	14,
			"case":	139,
			"size":	47
		}, {
			"switch":	15,
			"case":	1,
			"size":	47
		}, {
			"switch":	15,
			"case":	2,
			"size":	47
		}, {
			"switch":	15,
			"case":	6,
			"size":	47
		}, {
			"switch":	16,
			"case":	1,
			"size":	47
		}, {
			"switch":	16,
			"case":	2,
			"size":	47
		}, {
			"switch":	17,
			"case":	139,
			"size":	12
		}, {
			"switch":	18,
			"case":	1,
			"size":	12
		}, {
			"switch":	19,
			"case":	139,
			"size":	12
		}, {
			"switch":	20,
			"case":	1,
			"size":	12
		}, {
			"switch":	20,
			"case":	2,
			"size":	12
		}, {
			"switch":	20,
			"case":	3,
			"size":	12
		}, {
			"switch":	21,
			"case":	1,
			"size":	12
		}, {
			"switch":	22,
			"case":	139,
			"size":	12
		}, {
			"switch":	23,
			"case":	1,
			"size":	12
		}, {
			"switch":	23,
			"case":	2,
			"size":	12
		}, {
			"switch":	23,
			"case":	3,
			"size":	12
		}, {
			"switch":	24,
			"case":	1,
			"size":	12
		}, {
			"switch":	24,
			"case":	2,
			"size":	12
		}, {
			"switch":	25,
			"case":	203,
			"size":	87
		}, {
			"switch":	26,
			"case":	1,
			"size":	87
		}, {
			"switch":	26,
			"case":	2,
			"size":	87
		}, {
			"switch":	26,
			"case":	6,
			"size":	87
		}, {
			"switch":	27,
			"case":	1,
			"size":	87
		}, {
			"switch":	27,
			"case":	2,
			"size":	87
		}, {
			"switch":	28,
			"case":	205,
			"size":	29
		}, {
			"switch":	29,
			"case":	1,
			"size":	29
		}, {
			"switch":	30,
			"case":	204,
			"size":	29
		}, {
			"switch":	31,
			"case":	1,
			"size":	29
		}, {
			"switch":	32,
			"case":	204,
			"size":	17
		}, {
			"switch":	33,
			"case":	1,
			"size":	17
		}, {
			"switch":	33,
			"case":	2,
			"size":	17
		}, {
			"switch":	33,
			"case":	3,
			"size":	17
		}, {
			"switch":	34,
			"case":	234,
			"size":	37
		}, {
			"switch":	35,
			"case":	1,
			"size":	37
		}, {
			"switch":	35,
			"case":	2,
			"size":	37
		}, {
			"switch":	35,
			"case":	3,
			"size":	37
		}, {
			"switch":	36,
			"case":	1,
			"size":	37
		}, {
			"switch":	36,
			"case":	2,
			"size":	37
		}, {
			"switch":	37,
			"case":	232,
			"size":	17
		}, {
			"switch":	38,
			"case":	1,
			"size":	17
		}, {
			"switch":	39,
			"case":	232,
			"size":	17
		}, {
			"switch":	40,
			"case":	1,
			"size":	17
		}, {
			"switch":	40,
			"case":	2,
			"size":	17
		}, {
			"switch":	40,
			"case":	3,
			"size":	17
		}, {
			"switch":	41,
			"case":	1,
			"size":	17
		}, {
			"switch":	41,
			"case":	2,
			"size":	17
		}, {
			"switch":	42,
			"case":	233,
			"size":	33
		}, {
			"switch":	43,
			"case":	1,
			"size":	33
		}, {
			"switch":	44,
			"case":	232,
			"size":	33
		}, {
			"switch":	45,
			"case":	1,
			"size":	33
		}, {
			"switch":	46,
			"case":	232,
			"size":	17
		}, {
			"switch":	47,
			"case":	1,
			"size":	17
		}, {
			"switch":	47,
			"case":	2,
			"size":	17
		}, {
			"switch":	47,
			"case":	3,
			"size":	17
		}, {
			"switch":	48,
			"case":	232,
			"size":	17
		}, {
			"switch":	49,
			"case":	1,
			"size":	17
		}, {
			"switch":	50,
			"case":	1,
			"size":	17
		}, {
			"switch":	50,
			"case":	2,
			"size":	17
		}, {
			"switch":	51,
			"case":	232,
			"size":	17
		}, {
			"switch":	52,
			"case":	1,
			"size":	17
		}, {
			"switch":	53,
			"case":	203,
			"size":	17
		}, {
			"switch":	54,
			"case":	1,
			"size":	17
		}, {
			"switch":	55,
			"case":	203,
			"size":	17
		}, {
			"switch":	56,
			"case":	1,
			"size":	17
		}, {
			"switch":	56,
			"case":	2,
			"size":	17
		}, {
			"switch":	56,
			"case":	3,
			"size":	17
		}, {
			"switch":	57,
			"case":	203,
			"size":	17
		}, {
			"switch":	58,
			"case":	1,
			"size":	17
		}, {
			"switch":	59,
			"case":	1,
			"size":	17
		}, {
			"switch":	59,
			"case":	2,
			"size":	17
		}, {
			"switch":	60,
			"case":	203,
			"size":	17
		}, {
			"switch":	61,
			"case":	1,
			"size":	17
		}, {
			"switch":	61,
			"case":	2,
			"size":	17
		}, {
			"switch":	61,
			"case":	3,
			"size":	17
		}, {
			"switch":	62,
			"case":	203,
			"size":	17
		}, {
			"switch":	63,
			"case":	1,
			"size":	17
		}, {
			"switch":	64,
			"case":	1,
			"size":	17
		}, {
			"switch":	64,
			"case":	2,
			"size":	17
		}, {
			"switch":	65,
			"case":	1,
			"size":	17
		}, {
			"switch":	65,
			"case":	2,
			"size":	17
		}],
	"func_locations":	[{
			"file":	"ext/dom/document.c",
			"functions":	[{
					"function":	"__cmsg_nxthdr",
					"begin":	308,
					"end":	324
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"__zend_calloc",
					"begin":	103,
					"end":	108
				}, {
					"function":	"__zend_malloc",
					"begin":	93,
					"end":	101
				}, {
					"function":	"__zend_realloc",
					"begin":	110,
					"end":	118
				}, {
					"function":	"_dom_document_relaxNG_validate",
					"begin":	2059,
					"end":	2131
				}, {
					"function":	"_dom_document_schema_validate",
					"begin":	1970,
					"end":	2042
				}, {
					"function":	"_dom_get_valid_file_path",
					"begin":	1498,
					"end":	1543
				}, {
					"function":	"_zval_copy_ctor",
					"begin":	40,
					"end":	46
				}, {
					"function":	"_zval_dtor",
					"begin":	30,
					"end":	36
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"dom_document_config_read",
					"begin":	888,
					"end":	893
				}, {
					"function":	"dom_document_doctype_read",
					"begin":	242,
					"end":	269
				}, {
					"function":	"dom_document_document_element_read",
					"begin":	292,
					"end":	318
				}, {
					"function":	"dom_document_document_uri_read",
					"begin":	824,
					"end":	845
				}, {
					"function":	"dom_document_document_uri_write",
					"begin":	847,
					"end":	879
				}, {
					"function":	"dom_document_encoding_read",
					"begin":	326,
					"end":	348
				}, {
					"function":	"dom_document_encoding_write",
					"begin":	350,
					"end":	389
				}, {
					"function":	"dom_document_format_output_read",
					"begin":	570,
					"end":	582
				}, {
					"function":	"dom_document_format_output_write",
					"begin":	584,
					"end":	606
				}, {
					"function":	"dom_document_implementation_read",
					"begin":	278,
					"end":	283
				}, {
					"function":	"dom_document_parser",
					"begin":	1546,
					"end":	1659
				}, {
					"function":	"dom_document_preserve_whitespace_read",
					"begin":	696,
					"end":	708
				}, {
					"function":	"dom_document_preserve_whitespace_write",
					"begin":	710,
					"end":	732
				}, {
					"function":	"dom_document_recover_read",
					"begin":	738,
					"end":	750
				}, {
					"function":	"dom_document_recover_write",
					"begin":	752,
					"end":	774
				}, {
					"function":	"dom_document_resolve_externals_read",
					"begin":	654,
					"end":	666
				}, {
					"function":	"dom_document_resolve_externals_write",
					"begin":	668,
					"end":	690
				}, {
					"function":	"dom_document_standalone_read",
					"begin":	398,
					"end":	415
				}, {
					"function":	"dom_document_standalone_write",
					"begin":	417,
					"end":	453
				}, {
					"function":	"dom_document_strict_error_checking_read",
					"begin":	527,
					"end":	539
				}, {
					"function":	"dom_document_strict_error_checking_write",
					"begin":	541,
					"end":	563
				}, {
					"function":	"dom_document_substitue_entities_read",
					"begin":	780,
					"end":	792
				}, {
					"function":	"dom_document_substitue_entities_write",
					"begin":	794,
					"end":	816
				}, {
					"function":	"dom_document_validate_on_parse_read",
					"begin":	612,
					"end":	624
				}, {
					"function":	"dom_document_validate_on_parse_write",
					"begin":	626,
					"end":	648
				}, {
					"function":	"dom_document_version_read",
					"begin":	462,
					"end":	484
				}, {
					"function":	"dom_document_version_write",
					"begin":	486,
					"end":	518
				}, {
					"function":	"dom_load_html",
					"begin":	2152,
					"end":	2224
				}, {
					"function":	"dom_parse_document",
					"begin":	1663,
					"end":	1718
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"fstat",
					"begin":	462,
					"end":	466
				}, {
					"function":	"fstatat",
					"begin":	469,
					"end":	474
				}, {
					"function":	"gc_remove_from_buffer",
					"begin":	187,
					"end":	194
				}, {
					"function":	"gc_zval_check_possible_root",
					"begin":	180,
					"end":	185
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"i_zend_is_true",
					"begin":	101,
					"end":	156
				}, {
					"function":	"i_zval_ptr_dtor",
					"begin":	80,
					"end":	99
				}, {
					"function":	"is_numeric_string",
					"begin":	102,
					"end":	224
				}, {
					"function":	"lstat",
					"begin":	455,
					"end":	459
				}, {
					"function":	"mknod",
					"begin":	478,
					"end":	482
				}, {
					"function":	"mknodat",
					"begin":	486,
					"end":	491
				}, {
					"function":	"php_dom_free_xinclude_node",
					"begin":	1855,
					"end":	1865
				}, {
					"function":	"php_dom_remove_xinclude_nodes",
					"begin":	1868,
					"end":	1893
				}, {
					"function":	"php_set_error_handling",
					"begin":	292,
					"end":	295
				}, {
					"function":	"php_std_error_handling",
					"begin":	296,
					"end":	296
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"safe_free_zval_ptr_rel",
					"begin":	62,
					"end":	69
				}, {
					"function":	"smart_str_print_long",
					"begin":	153,
					"end":	157
				}, {
					"function":	"smart_str_print_unsigned",
					"begin":	159,
					"end":	163
				}, {
					"function":	"stat",
					"begin":	448,
					"end":	452
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"zend_arg_types_stack_2_pop",
					"begin":	355,
					"end":	363
				}, {
					"function":	"zend_arg_types_stack_3_pop",
					"begin":	365,
					"end":	374
				}, {
					"function":	"zend_dval_to_lval",
					"begin":	77,
					"end":	83
				}, {
					"function":	"zend_inline_hash_func",
					"begin":	261,
					"end":	288
				}, {
					"function":	"zend_memnstr",
					"begin":	226,
					"end":	257
				}, {
					"function":	"zend_memrchr",
					"begin":	259,
					"end":	274
				}, {
					"function":	"zend_objects_store_del_ref_by_handle",
					"begin":	71,
					"end":	73
				}, {
					"function":	"zend_ptr_stack_2_pop",
					"begin":	93,
					"end":	98
				}, {
					"function":	"zend_ptr_stack_2_push",
					"begin":	72,
					"end":	83
				}, {
					"function":	"zend_ptr_stack_3_pop",
					"begin":	85,
					"end":	91
				}, {
					"function":	"zend_ptr_stack_3_push",
					"begin":	58,
					"end":	70
				}, {
					"function":	"zend_ptr_stack_pop",
					"begin":	108,
					"end":	112
				}, {
					"function":	"zend_ptr_stack_push",
					"begin":	100,
					"end":	106
				}, {
					"function":	"zend_symtable_del",
					"begin":	355,
					"end":	359
				}, {
					"function":	"zend_symtable_exists",
					"begin":	369,
					"end":	373
				}, {
					"function":	"zend_symtable_find",
					"begin":	362,
					"end":	366
				}, {
					"function":	"zend_symtable_update",
					"begin":	348,
					"end":	352
				}, {
					"function":	"zend_symtable_update_current_key_ex",
					"begin":	375,
					"end":	379
				}, {
					"function":	"zend_vm_stack_alloc",
					"begin":	243,
					"end":	270
				}, {
					"function":	"zend_vm_stack_clear_multiple",
					"begin":	331,
					"end":	342
				}, {
					"function":	"zend_vm_stack_destroy",
					"begin":	197,
					"end":	206
				}, {
					"function":	"zend_vm_stack_extend",
					"begin":	208,
					"end":	213
				}, {
					"function":	"zend_vm_stack_free",
					"begin":	284,
					"end":	300
				}, {
					"function":	"zend_vm_stack_free_int",
					"begin":	272,
					"end":	282
				}, {
					"function":	"zend_vm_stack_get_arg",
					"begin":	344,
					"end":	353
				}, {
					"function":	"zend_vm_stack_init",
					"begin":	192,
					"end":	195
				}, {
					"function":	"zend_vm_stack_new_page",
					"begin":	183,
					"end":	190
				}, {
					"function":	"zend_vm_stack_pop",
					"begin":	231,
					"end":	241
				}, {
					"function":	"zend_vm_stack_push",
					"begin":	220,
					"end":	224
				}, {
					"function":	"zend_vm_stack_push_args",
					"begin":	302,
					"end":	329
				}, {
					"function":	"zend_vm_stack_push_nocheck",
					"begin":	226,
					"end":	229
				}, {
					"function":	"zend_vm_stack_top",
					"begin":	215,
					"end":	218
				}, {
					"function":	"zif_dom_document_adopt_node",
					"begin":	1414,
					"end":	1417
				}, {
					"function":	"zif_dom_document_create_attribute",
					"begin":	1080,
					"end":	1107
				}, {
					"function":	"zif_dom_document_create_attribute_ns",
					"begin":	1292,
					"end":	1350
				}, {
					"function":	"zif_dom_document_create_cdatasection",
					"begin":	1017,
					"end":	1038
				}, {
					"function":	"zif_dom_document_create_comment",
					"begin":	989,
					"end":	1010
				}, {
					"function":	"zif_dom_document_create_document_fragment",
					"begin":	934,
					"end":	954
				}, {
					"function":	"zif_dom_document_create_element",
					"begin":	901,
					"end":	927
				}, {
					"function":	"zif_dom_document_create_element_ns",
					"begin":	1229,
					"end":	1285
				}, {
					"function":	"zif_dom_document_create_entity_reference",
					"begin":	1114,
					"end":	1140
				}, {
					"function":	"zif_dom_document_create_processing_instruction",
					"begin":	1045,
					"end":	1073
				}, {
					"function":	"zif_dom_document_create_text_node",
					"begin":	961,
					"end":	982
				}, {
					"function":	"zif_dom_document_get_element_by_id",
					"begin":	1384,
					"end":	1407
				}, {
					"function":	"zif_dom_document_get_elements_by_tag_name",
					"begin":	1147,
					"end":	1166
				}, {
					"function":	"zif_dom_document_get_elements_by_tag_name_ns",
					"begin":	1357,
					"end":	1377
				}, {
					"function":	"zif_dom_document_import_node",
					"begin":	1173,
					"end":	1222
				}, {
					"function":	"zif_dom_document_normalize_document",
					"begin":	1424,
					"end":	1437
				}, {
					"function":	"zif_dom_document_relaxNG_validate_file",
					"begin":	2135,
					"end":	2138
				}, {
					"function":	"zif_dom_document_relaxNG_validate_xml",
					"begin":	2142,
					"end":	2145
				}, {
					"function":	"zif_dom_document_rename_node",
					"begin":	1444,
					"end":	1447
				}, {
					"function":	"zif_dom_document_save",
					"begin":	1744,
					"end":	1781
				}, {
					"function":	"zif_dom_document_save_html",
					"begin":	2286,
					"end":	2345
				}, {
					"function":	"zif_dom_document_save_html_file",
					"begin":	2248,
					"end":	2280
				}, {
					"function":	"zif_dom_document_savexml",
					"begin":	1788,
					"end":	1852
				}, {
					"function":	"zif_dom_document_schema_validate_file",
					"begin":	2046,
					"end":	2049
				}, {
					"function":	"zif_dom_document_schema_validate_xml",
					"begin":	2053,
					"end":	2056
				}, {
					"function":	"zif_dom_document_validate",
					"begin":	1939,
					"end":	1966
				}, {
					"function":	"zif_dom_document_xinclude",
					"begin":	1898,
					"end":	1933
				}, {
					"function":	"zim_domdocument___construct",
					"begin":	1451,
					"end":	1495
				}, {
					"function":	"zim_domdocument_load",
					"begin":	1725,
					"end":	1728
				}, {
					"function":	"zim_domdocument_loadHTML",
					"begin":	2239,
					"end":	2242
				}, {
					"function":	"zim_domdocument_loadHTMLFile",
					"begin":	2230,
					"end":	2233
				}, {
					"function":	"zim_domdocument_loadXML",
					"begin":	1735,
					"end":	1738
				}, {
					"function":	"zim_domdocument_registerNodeClass",
					"begin":	2352,
					"end":	2400
				}, {
					"function":	"zval_addref_p",
					"begin":	386,
					"end":	388
				}, {
					"function":	"zval_delref_p",
					"begin":	390,
					"end":	392
				}, {
					"function":	"zval_isref_p",
					"begin":	394,
					"end":	396
				}, {
					"function":	"zval_refcount_p",
					"begin":	378,
					"end":	380
				}, {
					"function":	"zval_set_isref_p",
					"begin":	398,
					"end":	400
				}, {
					"function":	"zval_set_isref_to_p",
					"begin":	406,
					"end":	408
				}, {
					"function":	"zval_set_refcount_p",
					"begin":	382,
					"end":	384
				}, {
					"function":	"zval_unset_isref_p",
					"begin":	402,
					"end":	404
				}]
		}]
}
