{
	"switch_num":	67,
	"case_num":	[136, 163, 136, 3, 135, 2, 135, 56, 2, 136, 13, 135, 1, 237, 3, 2, 236, 4, 238, 43, 2, 238, 43, 2, 238, 43, 2, 238, 43, 2, 238, 43, 2, 238, 43, 2, 238, 43, 2, 238, 43, 2, 236, 1, 236, 1652, 238, 3, 238, 104, 2, 192, 56, 192, 5, 192, 10, 199, 15, 199, 13, 199, 56, 2, 2, 192, 4],
	"switch_cluster":	[[1, 5, 7, 8, 10, 12, 15, 17, 20, 23, 26, 29, 32, 35, 38, 41, 43, 45, 49, 50, 52, 58, 60, 62, 63, 64, 66], [3, 14, 19, 22, 25, 28, 31, 34, 37, 40, 47, 54, 56], [0, 2, 4, 6, 9, 11, 13, 16, 18, 21, 24, 27, 30, 33, 36, 39, 42, 44, 46, 48, 51, 53, 55, 57, 59, 61, 65], []],
	"priority":	[{
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	428,
			"primary_score":	999644,
			"second_score":	3110
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	429,
			"primary_score":	999644,
			"second_score":	3108
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	479,
			"primary_score":	999644,
			"second_score":	3111
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	485,
			"primary_score":	999644,
			"second_score":	2
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	590,
			"primary_score":	999644,
			"second_score":	3107
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	592,
			"primary_score":	999644,
			"second_score":	3106
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	593,
			"primary_score":	999644,
			"second_score":	6
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	594,
			"primary_score":	999644,
			"second_score":	5
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	595,
			"primary_score":	999644,
			"second_score":	241
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	596,
			"primary_score":	999644,
			"second_score":	240
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	597,
			"primary_score":	999644,
			"second_score":	239
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	599,
			"primary_score":	999644,
			"second_score":	4
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	601,
			"primary_score":	999644,
			"second_score":	3
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	692,
			"primary_score":	999644,
			"second_score":	121599
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	121598
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	699,
			"primary_score":	999644,
			"second_score":	121597
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	812,
			"primary_score":	999644,
			"second_score":	121596
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	816,
			"primary_score":	999644,
			"second_score":	121595
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	819,
			"primary_score":	999644,
			"second_score":	121594
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	820,
			"primary_score":	999644,
			"second_score":	121593
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1897,
			"primary_score":	999644,
			"second_score":	121815
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1898,
			"primary_score":	999644,
			"second_score":	121814
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1901,
			"primary_score":	999644,
			"second_score":	121813
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1902,
			"primary_score":	999644,
			"second_score":	121812
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1903,
			"primary_score":	999644,
			"second_score":	121811
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1904,
			"primary_score":	999644,
			"second_score":	121810
		}, {
			"file":	"Zend/zend.c",
			"line":	227,
			"primary_score":	999644,
			"second_score":	119577
		}, {
			"file":	"Zend/zend.c",
			"line":	228,
			"primary_score":	999644,
			"second_score":	119576
		}, {
			"file":	"Zend/zend.c",
			"line":	229,
			"primary_score":	999644,
			"second_score":	119575
		}, {
			"file":	"Zend/zend.c",
			"line":	305,
			"primary_score":	999644,
			"second_score":	119581
		}, {
			"file":	"Zend/zend.c",
			"line":	311,
			"primary_score":	999644,
			"second_score":	119580
		}, {
			"file":	"Zend/zend.c",
			"line":	312,
			"primary_score":	999644,
			"second_score":	119579
		}, {
			"file":	"Zend/zend.c",
			"line":	314,
			"primary_score":	999644,
			"second_score":	119578
		}, {
			"file":	"Zend/zend.c",
			"line":	315,
			"primary_score":	999644,
			"second_score":	119574
		}, {
			"file":	"Zend/zend.c",
			"line":	318,
			"primary_score":	999644,
			"second_score":	119573
		}, {
			"file":	"Zend/zend.c",
			"line":	319,
			"primary_score":	999644,
			"second_score":	119572
		}, {
			"file":	"Zend/zend.c",
			"line":	322,
			"primary_score":	999644,
			"second_score":	119571
		}, {
			"file":	"Zend/zend.c",
			"line":	324,
			"primary_score":	999644,
			"second_score":	121228
		}, {
			"file":	"Zend/zend.c",
			"line":	325,
			"primary_score":	999644,
			"second_score":	121180
		}, {
			"file":	"Zend/zend.c",
			"line":	328,
			"primary_score":	999644,
			"second_score":	121179
		}, {
			"file":	"Zend/zend.c",
			"line":	797,
			"primary_score":	999644,
			"second_score":	103391
		}, {
			"file":	"Zend/zend.c",
			"line":	798,
			"primary_score":	999644,
			"second_score":	103383
		}, {
			"file":	"Zend/zend.c",
			"line":	800,
			"primary_score":	999644,
			"second_score":	47188
		}, {
			"file":	"Zend/zend.c",
			"line":	801,
			"primary_score":	999644,
			"second_score":	47169
		}, {
			"file":	"Zend/zend.c",
			"line":	803,
			"primary_score":	999644,
			"second_score":	14813
		}, {
			"file":	"Zend/zend.c",
			"line":	804,
			"primary_score":	999644,
			"second_score":	14750
		}, {
			"file":	"Zend/zend.c",
			"line":	806,
			"primary_score":	999644,
			"second_score":	14749
		}, {
			"file":	"Zend/zend.c",
			"line":	807,
			"primary_score":	999644,
			"second_score":	14741
		}, {
			"file":	"Zend/zend.c",
			"line":	809,
			"primary_score":	999644,
			"second_score":	14740
		}, {
			"file":	"Zend/zend.c",
			"line":	810,
			"primary_score":	999644,
			"second_score":	14739
		}, {
			"file":	"Zend/zend.c",
			"line":	812,
			"primary_score":	999644,
			"second_score":	14738
		}, {
			"file":	"Zend/zend.c",
			"line":	813,
			"primary_score":	999644,
			"second_score":	6281
		}, {
			"file":	"Zend/zend.c",
			"line":	814,
			"primary_score":	999644,
			"second_score":	6280
		}, {
			"file":	"Zend/zend.c",
			"line":	822,
			"primary_score":	999644,
			"second_score":	6224
		}, {
			"file":	"Zend/zend.c",
			"line":	824,
			"primary_score":	999644,
			"second_score":	6124
		}, {
			"file":	"Zend/zend.c",
			"line":	845,
			"primary_score":	999998,
			"second_score":	119834
		}, {
			"file":	"Zend/zend.c",
			"line":	847,
			"primary_score":	999998,
			"second_score":	119833
		}, {
			"file":	"Zend/zend.c",
			"line":	851,
			"primary_score":	999998,
			"second_score":	119832
		}, {
			"file":	"Zend/zend.c",
			"line":	852,
			"primary_score":	999998,
			"second_score":	119831
		}, {
			"file":	"Zend/zend.c",
			"line":	853,
			"primary_score":	999998,
			"second_score":	119830
		}, {
			"file":	"Zend/zend.c",
			"line":	854,
			"primary_score":	999998,
			"second_score":	119829
		}, {
			"file":	"Zend/zend.c",
			"line":	898,
			"primary_score":	999644,
			"second_score":	119787
		}, {
			"file":	"Zend/zend.c",
			"line":	899,
			"primary_score":	999644,
			"second_score":	119781
		}, {
			"file":	"Zend/zend.c",
			"line":	900,
			"primary_score":	999644,
			"second_score":	119432
		}, {
			"file":	"Zend/zend.c",
			"line":	907,
			"primary_score":	999644,
			"second_score":	118598
		}, {
			"file":	"Zend/zend.c",
			"line":	908,
			"primary_score":	999644,
			"second_score":	118597
		}, {
			"file":	"Zend/zend.c",
			"line":	910,
			"primary_score":	999644,
			"second_score":	118596
		}, {
			"file":	"Zend/zend.c",
			"line":	911,
			"primary_score":	999644,
			"second_score":	118590
		}, {
			"file":	"Zend/zend.c",
			"line":	912,
			"primary_score":	999644,
			"second_score":	118580
		}, {
			"file":	"Zend/zend.c",
			"line":	915,
			"primary_score":	999644,
			"second_score":	118578
		}, {
			"file":	"Zend/zend.c",
			"line":	917,
			"primary_score":	999644,
			"second_score":	113520
		}, {
			"file":	"Zend/zend.c",
			"line":	918,
			"primary_score":	999644,
			"second_score":	113514
		}, {
			"file":	"Zend/zend.c",
			"line":	919,
			"primary_score":	999644,
			"second_score":	113365
		}, {
			"file":	"Zend/zend.c",
			"line":	921,
			"primary_score":	999644,
			"second_score":	113363
		}, {
			"file":	"Zend/zend.c",
			"line":	924,
			"primary_score":	999644,
			"second_score":	113336
		}, {
			"file":	"Zend/zend.c",
			"line":	925,
			"primary_score":	999644,
			"second_score":	113335
		}, {
			"file":	"Zend/zend.c",
			"line":	943,
			"primary_score":	999644,
			"second_score":	113331
		}, {
			"file":	"Zend/zend.c",
			"line":	944,
			"primary_score":	999644,
			"second_score":	113325
		}, {
			"file":	"Zend/zend.c",
			"line":	945,
			"primary_score":	999644,
			"second_score":	113322
		}, {
			"file":	"Zend/zend.c",
			"line":	971,
			"primary_score":	999840,
			"second_score":	120934
		}, {
			"file":	"Zend/zend.c",
			"line":	972,
			"primary_score":	999840,
			"second_score":	120933
		}, {
			"file":	"Zend/zend.c",
			"line":	973,
			"primary_score":	999840,
			"second_score":	120932
		}, {
			"file":	"Zend/zend.c",
			"line":	974,
			"primary_score":	999840,
			"second_score":	120931
		}, {
			"file":	"Zend/zend.c",
			"line":	975,
			"primary_score":	999840,
			"second_score":	120930
		}, {
			"file":	"Zend/zend.c",
			"line":	976,
			"primary_score":	999840,
			"second_score":	120929
		}, {
			"file":	"Zend/zend.c",
			"line":	977,
			"primary_score":	999840,
			"second_score":	120928
		}, {
			"file":	"Zend/zend.c",
			"line":	978,
			"primary_score":	999840,
			"second_score":	120927
		}, {
			"file":	"Zend/zend.c",
			"line":	979,
			"primary_score":	999840,
			"second_score":	120926
		}, {
			"file":	"Zend/zend.c",
			"line":	980,
			"primary_score":	999840,
			"second_score":	120925
		}, {
			"file":	"Zend/zend.c",
			"line":	981,
			"primary_score":	999840,
			"second_score":	120924
		}, {
			"file":	"Zend/zend.c",
			"line":	984,
			"primary_score":	999840,
			"second_score":	120923
		}, {
			"file":	"Zend/zend.c",
			"line":	1006,
			"primary_score":	999840,
			"second_score":	120921
		}, {
			"file":	"Zend/zend.c",
			"line":	1007,
			"primary_score":	999840,
			"second_score":	120919
		}, {
			"file":	"Zend/zend.c",
			"line":	1008,
			"primary_score":	999840,
			"second_score":	120916
		}, {
			"file":	"Zend/zend.c",
			"line":	1013,
			"primary_score":	999840,
			"second_score":	120912
		}, {
			"file":	"Zend/zend.c",
			"line":	1019,
			"primary_score":	999840,
			"second_score":	120911
		}, {
			"file":	"Zend/zend.c",
			"line":	1023,
			"primary_score":	999840,
			"second_score":	120910
		}, {
			"file":	"Zend/zend.c",
			"line":	1035,
			"primary_score":	999840,
			"second_score":	120909
		}, {
			"file":	"Zend/zend.c",
			"line":	1038,
			"primary_score":	999840,
			"second_score":	120908
		}, {
			"file":	"Zend/zend.c",
			"line":	1205,
			"primary_score":	999644,
			"second_score":	133400
		}, {
			"file":	"Zend/zend.c",
			"line":	1206,
			"primary_score":	999644,
			"second_score":	133399
		}, {
			"file":	"Zend/zend.c",
			"line":	1207,
			"primary_score":	999644,
			"second_score":	133398
		}, {
			"file":	"Zend/zend.c",
			"line":	1209,
			"primary_score":	999644,
			"second_score":	133277
		}, {
			"file":	"Zend/zend.c",
			"line":	1210,
			"primary_score":	999644,
			"second_score":	133198
		}, {
			"file":	"Zend/zend.c",
			"line":	1211,
			"primary_score":	999644,
			"second_score":	133197
		}, {
			"file":	"Zend/zend.c",
			"line":	1212,
			"primary_score":	999644,
			"second_score":	133196
		}, {
			"file":	"Zend/zend.c",
			"line":	1213,
			"primary_score":	999644,
			"second_score":	119517
		}, {
			"file":	"Zend/zend.c",
			"line":	1214,
			"primary_score":	999644,
			"second_score":	119515
		}, {
			"file":	"Zend/zend.c",
			"line":	1239,
			"primary_score":	999644,
			"second_score":	119514
		}, {
			"file":	"Zend/zend.c",
			"line":	1240,
			"primary_score":	999644,
			"second_score":	119160
		}, {
			"file":	"Zend/zend.c",
			"line":	1248,
			"primary_score":	999644,
			"second_score":	119138
		}, {
			"file":	"Zend/zend.c",
			"line":	1249,
			"primary_score":	999644,
			"second_score":	119137
		}, {
			"file":	"Zend/zend.c",
			"line":	1250,
			"primary_score":	999644,
			"second_score":	119136
		}, {
			"file":	"Zend/zend.c",
			"line":	1252,
			"primary_score":	999644,
			"second_score":	119135
		}, {
			"file":	"Zend/zend.c",
			"line":	1282,
			"primary_score":	999644,
			"second_score":	113433
		}, {
			"file":	"Zend/zend.h",
			"line":	379,
			"primary_score":	999644,
			"second_score":	15289
		}, {
			"file":	"Zend/zend.h",
			"line":	383,
			"primary_score":	999644,
			"second_score":	122524
		}, {
			"file":	"Zend/zend.h",
			"line":	387,
			"primary_score":	999644,
			"second_score":	124926
		}, {
			"file":	"Zend/zend.h",
			"line":	391,
			"primary_score":	999644,
			"second_score":	15291
		}, {
			"file":	"Zend/zend.h",
			"line":	395,
			"primary_score":	999644,
			"second_score":	123023
		}, {
			"file":	"Zend/zend.h",
			"line":	399,
			"primary_score":	999644,
			"second_score":	133634
		}, {
			"file":	"Zend/zend.h",
			"line":	403,
			"primary_score":	999644,
			"second_score":	17648
		}, {
			"file":	"Zend/zend_API.c",
			"line":	307,
			"primary_score":	999644,
			"second_score":	123157
		}, {
			"file":	"Zend/zend_API.c",
			"line":	308,
			"primary_score":	999644,
			"second_score":	123156
		}, {
			"file":	"Zend/zend_API.c",
			"line":	309,
			"primary_score":	999644,
			"second_score":	123155
		}, {
			"file":	"Zend/zend_API.c",
			"line":	312,
			"primary_score":	999644,
			"second_score":	123154
		}, {
			"file":	"Zend/zend_API.c",
			"line":	313,
			"primary_score":	999644,
			"second_score":	123153
		}, {
			"file":	"Zend/zend_API.c",
			"line":	315,
			"primary_score":	999644,
			"second_score":	123152
		}, {
			"file":	"Zend/zend_API.c",
			"line":	320,
			"primary_score":	999644,
			"second_score":	123151
		}, {
			"file":	"Zend/zend_API.c",
			"line":	325,
			"primary_score":	999644,
			"second_score":	123150
		}, {
			"file":	"Zend/zend_API.c",
			"line":	416,
			"primary_score":	999644,
			"second_score":	123149
		}, {
			"file":	"Zend/zend_API.c",
			"line":	417,
			"primary_score":	999644,
			"second_score":	123148
		}, {
			"file":	"Zend/zend_API.c",
			"line":	418,
			"primary_score":	999644,
			"second_score":	123147
		}, {
			"file":	"Zend/zend_API.c",
			"line":	431,
			"primary_score":	999644,
			"second_score":	123146
		}, {
			"file":	"Zend/zend_API.c",
			"line":	432,
			"primary_score":	999644,
			"second_score":	123145
		}, {
			"file":	"Zend/zend_API.c",
			"line":	438,
			"primary_score":	999644,
			"second_score":	123143
		}, {
			"file":	"Zend/zend_API.c",
			"line":	439,
			"primary_score":	999644,
			"second_score":	123142
		}, {
			"file":	"Zend/zend_API.c",
			"line":	440,
			"primary_score":	999644,
			"second_score":	123141
		}, {
			"file":	"Zend/zend_API.c",
			"line":	453,
			"primary_score":	999644,
			"second_score":	123140
		}, {
			"file":	"Zend/zend_API.c",
			"line":	643,
			"primary_score":	999644,
			"second_score":	122704
		}, {
			"file":	"Zend/zend_API.c",
			"line":	644,
			"primary_score":	999644,
			"second_score":	122703
		}, {
			"file":	"Zend/zend_API.c",
			"line":	647,
			"primary_score":	999644,
			"second_score":	122702
		}, {
			"file":	"Zend/zend_API.c",
			"line":	650,
			"primary_score":	999644,
			"second_score":	122701
		}, {
			"file":	"Zend/zend_API.c",
			"line":	656,
			"primary_score":	999644,
			"second_score":	123139
		}, {
			"file":	"Zend/zend_API.c",
			"line":	658,
			"primary_score":	999644,
			"second_score":	123138
		}, {
			"file":	"Zend/zend_API.c",
			"line":	664,
			"primary_score":	999644,
			"second_score":	123160
		}, {
			"file":	"Zend/zend_API.c",
			"line":	665,
			"primary_score":	999644,
			"second_score":	123159
		}, {
			"file":	"Zend/zend_API.c",
			"line":	667,
			"primary_score":	999644,
			"second_score":	123158
		}, {
			"file":	"Zend/zend_API.c",
			"line":	668,
			"primary_score":	999644,
			"second_score":	123137
		}, {
			"file":	"Zend/zend_API.c",
			"line":	688,
			"primary_score":	999644,
			"second_score":	123136
		}, {
			"file":	"Zend/zend_API.c",
			"line":	694,
			"primary_score":	999644,
			"second_score":	123189
		}, {
			"file":	"Zend/zend_API.c",
			"line":	695,
			"primary_score":	999644,
			"second_score":	123188
		}, {
			"file":	"Zend/zend_API.c",
			"line":	696,
			"primary_score":	999644,
			"second_score":	123187
		}, {
			"file":	"Zend/zend_API.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	123186
		}, {
			"file":	"Zend/zend_API.c",
			"line":	698,
			"primary_score":	999644,
			"second_score":	123185
		}, {
			"file":	"Zend/zend_API.c",
			"line":	699,
			"primary_score":	999644,
			"second_score":	123184
		}, {
			"file":	"Zend/zend_API.c",
			"line":	700,
			"primary_score":	999644,
			"second_score":	123183
		}, {
			"file":	"Zend/zend_API.c",
			"line":	701,
			"primary_score":	999644,
			"second_score":	123182
		}, {
			"file":	"Zend/zend_API.c",
			"line":	702,
			"primary_score":	999644,
			"second_score":	123181
		}, {
			"file":	"Zend/zend_API.c",
			"line":	703,
			"primary_score":	999644,
			"second_score":	123180
		}, {
			"file":	"Zend/zend_API.c",
			"line":	704,
			"primary_score":	999644,
			"second_score":	123179
		}, {
			"file":	"Zend/zend_API.c",
			"line":	706,
			"primary_score":	999644,
			"second_score":	123178
		}, {
			"file":	"Zend/zend_API.c",
			"line":	707,
			"primary_score":	999644,
			"second_score":	123177
		}, {
			"file":	"Zend/zend_API.c",
			"line":	708,
			"primary_score":	999644,
			"second_score":	123176
		}, {
			"file":	"Zend/zend_API.c",
			"line":	718,
			"primary_score":	999644,
			"second_score":	123175
		}, {
			"file":	"Zend/zend_API.c",
			"line":	722,
			"primary_score":	999644,
			"second_score":	122758
		}, {
			"file":	"Zend/zend_API.c",
			"line":	764,
			"primary_score":	999644,
			"second_score":	123174
		}, {
			"file":	"Zend/zend_API.c",
			"line":	765,
			"primary_score":	999644,
			"second_score":	123173
		}, {
			"file":	"Zend/zend_API.c",
			"line":	768,
			"primary_score":	999644,
			"second_score":	123172
		}, {
			"file":	"Zend/zend_API.c",
			"line":	774,
			"primary_score":	999644,
			"second_score":	123171
		}, {
			"file":	"Zend/zend_API.c",
			"line":	790,
			"primary_score":	999644,
			"second_score":	123170
		}, {
			"file":	"Zend/zend_API.c",
			"line":	792,
			"primary_score":	999644,
			"second_score":	123168
		}, {
			"file":	"Zend/zend_API.c",
			"line":	798,
			"primary_score":	999644,
			"second_score":	123167
		}, {
			"file":	"Zend/zend_API.c",
			"line":	799,
			"primary_score":	999644,
			"second_score":	123166
		}, {
			"file":	"Zend/zend_API.c",
			"line":	800,
			"primary_score":	999644,
			"second_score":	123165
		}, {
			"file":	"Zend/zend_API.c",
			"line":	801,
			"primary_score":	999644,
			"second_score":	122720
		}, {
			"file":	"Zend/zend_API.c",
			"line":	804,
			"primary_score":	999644,
			"second_score":	123164
		}, {
			"file":	"Zend/zend_API.c",
			"line":	834,
			"primary_score":	999644,
			"second_score":	123163
		}, {
			"file":	"Zend/zend_API.c",
			"line":	836,
			"primary_score":	999644,
			"second_score":	123161
		}, {
			"file":	"Zend/zend_API.c",
			"line":	844,
			"primary_score":	999644,
			"second_score":	123135
		}, {
			"file":	"Zend/zend_API.c",
			"line":	847,
			"primary_score":	999644,
			"second_score":	123134
		}, {
			"file":	"Zend/zend_API.c",
			"line":	881,
			"primary_score":	999644,
			"second_score":	123197
		}, {
			"file":	"Zend/zend_API.c",
			"line":	882,
			"primary_score":	999644,
			"second_score":	123196
		}, {
			"file":	"Zend/zend_API.c",
			"line":	884,
			"primary_score":	999644,
			"second_score":	123195
		}, {
			"file":	"Zend/zend_API.c",
			"line":	886,
			"primary_score":	999644,
			"second_score":	123191
		}, {
			"file":	"Zend/zend_API.c",
			"line":	887,
			"primary_score":	999644,
			"second_score":	123190
		}, {
			"file":	"Zend/zend_API.c",
			"line":	888,
			"primary_score":	999644,
			"second_score":	123133
		}, {
			"file":	"Zend/zend_API.c",
			"line":	890,
			"primary_score":	999644,
			"second_score":	123132
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1018,
			"primary_score":	999838,
			"second_score":	123589
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1019,
			"primary_score":	999838,
			"second_score":	123588
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1020,
			"primary_score":	999838,
			"second_score":	123587
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1021,
			"primary_score":	999838,
			"second_score":	123586
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1023,
			"primary_score":	999838,
			"second_score":	123585
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1024,
			"primary_score":	999838,
			"second_score":	123584
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1026,
			"primary_score":	999838,
			"second_score":	123575
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1027,
			"primary_score":	999985,
			"second_score":	123574
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1028,
			"primary_score":	999985,
			"second_score":	123573
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1032,
			"primary_score":	999838,
			"second_score":	123563
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1068,
			"primary_score":	999838,
			"second_score":	123562
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1072,
			"primary_score":	999838,
			"second_score":	123561
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1073,
			"primary_score":	999838,
			"second_score":	123560
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1080,
			"primary_score":	999839,
			"second_score":	123523
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1082,
			"primary_score":	999839,
			"second_score":	123522
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1083,
			"primary_score":	999985,
			"second_score":	123521
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1084,
			"primary_score":	999985,
			"second_score":	123499
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1085,
			"primary_score":	999985,
			"second_score":	123498
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1086,
			"primary_score":	999985,
			"second_score":	123497
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1087,
			"primary_score":	999985,
			"second_score":	123496
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1090,
			"primary_score":	999985,
			"second_score":	123494
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1101,
			"primary_score":	999838,
			"second_score":	123592
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1103,
			"primary_score":	999838,
			"second_score":	123591
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1108,
			"primary_score":	999838,
			"second_score":	123590
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1110,
			"primary_score":	999838,
			"second_score":	123559
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1111,
			"primary_score":	999838,
			"second_score":	123558
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1120,
			"primary_score":	999885,
			"second_score":	123557
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1122,
			"primary_score":	999838,
			"second_score":	123474
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1128,
			"primary_score":	999838,
			"second_score":	123593
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1368,
			"primary_score":	999644,
			"second_score":	123444
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1370,
			"primary_score":	999644,
			"second_score":	123443
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1371,
			"primary_score":	999644,
			"second_score":	123333
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1373,
			"primary_score":	999644,
			"second_score":	123218
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1779,
			"primary_score":	999644,
			"second_score":	103382
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1780,
			"primary_score":	999644,
			"second_score":	103381
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1781,
			"primary_score":	999644,
			"second_score":	103380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2171,
			"primary_score":	999644,
			"second_score":	50133
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2172,
			"primary_score":	999644,
			"second_score":	50132
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2173,
			"primary_score":	999644,
			"second_score":	50131
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2175,
			"primary_score":	999644,
			"second_score":	50130
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2176,
			"primary_score":	999644,
			"second_score":	50129
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2178,
			"primary_score":	999644,
			"second_score":	50128
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2179,
			"primary_score":	999644,
			"second_score":	47249
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2185,
			"primary_score":	999644,
			"second_score":	47248
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2186,
			"primary_score":	999644,
			"second_score":	47200
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2187,
			"primary_score":	999644,
			"second_score":	47199
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2213,
			"primary_score":	999644,
			"second_score":	50140
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2215,
			"primary_score":	999644,
			"second_score":	50139
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2220,
			"primary_score":	999644,
			"second_score":	50138
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2224,
			"primary_score":	999644,
			"second_score":	53380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2228,
			"primary_score":	999644,
			"second_score":	50137
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2232,
			"primary_score":	999644,
			"second_score":	52697
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2233,
			"primary_score":	999644,
			"second_score":	53765
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2238,
			"primary_score":	999644,
			"second_score":	50136
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2239,
			"primary_score":	999644,
			"second_score":	50135
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2240,
			"primary_score":	999644,
			"second_score":	50134
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2245,
			"primary_score":	999644,
			"second_score":	47198
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2284,
			"primary_score":	999644,
			"second_score":	119393
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2286,
			"primary_score":	999644,
			"second_score":	119392
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2287,
			"primary_score":	999644,
			"second_score":	119386
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2290,
			"primary_score":	999644,
			"second_score":	119385
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2292,
			"primary_score":	999644,
			"second_score":	119384
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2293,
			"primary_score":	999644,
			"second_score":	118802
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2295,
			"primary_score":	999644,
			"second_score":	118801
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2296,
			"primary_score":	999644,
			"second_score":	118795
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2299,
			"primary_score":	999644,
			"second_score":	118794
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2305,
			"primary_score":	999644,
			"second_score":	114935
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2307,
			"primary_score":	999644,
			"second_score":	114934
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2331,
			"primary_score":	999644,
			"second_score":	113313
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2335,
			"primary_score":	999644,
			"second_score":	113312
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2337,
			"primary_score":	999644,
			"second_score":	113311
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3321,
			"primary_score":	999991,
			"second_score":	141450
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3782,
			"primary_score":	999927,
			"second_score":	123205
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3783,
			"primary_score":	999927,
			"second_score":	123204
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3784,
			"primary_score":	999927,
			"second_score":	123203
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3785,
			"primary_score":	999927,
			"second_score":	123202
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3793,
			"primary_score":	999927,
			"second_score":	123207
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3794,
			"primary_score":	999927,
			"second_score":	123206
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3795,
			"primary_score":	999927,
			"second_score":	123201
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3800,
			"primary_score":	999927,
			"second_score":	123200
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3801,
			"primary_score":	999927,
			"second_score":	123199
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3807,
			"primary_score":	999927,
			"second_score":	122915
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3808,
			"primary_score":	999927,
			"second_score":	122914
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3809,
			"primary_score":	999927,
			"second_score":	122913
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3814,
			"primary_score":	999927,
			"second_score":	122912
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3817,
			"primary_score":	999927,
			"second_score":	122911
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	144,
			"primary_score":	999644,
			"second_score":	3194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	293,
			"primary_score":	999644,
			"second_score":	3197
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	669,
			"primary_score":	999644,
			"second_score":	112836
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	671,
			"primary_score":	999644,
			"second_score":	112835
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	672,
			"primary_score":	999644,
			"second_score":	112834
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	695,
			"primary_score":	999644,
			"second_score":	112894
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	112893
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	698,
			"primary_score":	999644,
			"second_score":	112892
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	721,
			"primary_score":	999644,
			"second_score":	112843
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	722,
			"primary_score":	999644,
			"second_score":	112842
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	724,
			"primary_score":	999644,
			"second_score":	112841
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	726,
			"primary_score":	999644,
			"second_score":	112840
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	727,
			"primary_score":	999644,
			"second_score":	112839
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	728,
			"primary_score":	999644,
			"second_score":	112838
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	730,
			"primary_score":	999644,
			"second_score":	112837
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	731,
			"primary_score":	999644,
			"second_score":	112833
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	732,
			"primary_score":	999644,
			"second_score":	112832
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	733,
			"primary_score":	999644,
			"second_score":	112831
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	734,
			"primary_score":	999644,
			"second_score":	112830
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	735,
			"primary_score":	999644,
			"second_score":	112829
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	736,
			"primary_score":	999644,
			"second_score":	112828
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	737,
			"primary_score":	999644,
			"second_score":	112827
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	739,
			"primary_score":	999644,
			"second_score":	116899
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	741,
			"primary_score":	999644,
			"second_score":	116898
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	742,
			"primary_score":	999644,
			"second_score":	116897
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	744,
			"primary_score":	999644,
			"second_score":	116896
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	745,
			"primary_score":	999644,
			"second_score":	116895
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	746,
			"primary_score":	999644,
			"second_score":	116894
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	747,
			"primary_score":	999644,
			"second_score":	116893
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	748,
			"primary_score":	999644,
			"second_score":	116892
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	749,
			"primary_score":	999644,
			"second_score":	116891
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	750,
			"primary_score":	999644,
			"second_score":	116890
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	764,
			"primary_score":	999644,
			"second_score":	127181
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	766,
			"primary_score":	999644,
			"second_score":	127180
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	768,
			"primary_score":	999644,
			"second_score":	127179
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	769,
			"primary_score":	999644,
			"second_score":	127178
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	770,
			"primary_score":	999644,
			"second_score":	127177
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	772,
			"primary_score":	999644,
			"second_score":	127176
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	774,
			"primary_score":	999644,
			"second_score":	127175
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	775,
			"primary_score":	999644,
			"second_score":	127174
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	776,
			"primary_score":	999644,
			"second_score":	127173
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	782,
			"primary_score":	999644,
			"second_score":	112880
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	783,
			"primary_score":	999644,
			"second_score":	112879
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	785,
			"primary_score":	999644,
			"second_score":	112878
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	787,
			"primary_score":	999644,
			"second_score":	112877
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	788,
			"primary_score":	999644,
			"second_score":	112876
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	791,
			"primary_score":	999644,
			"second_score":	112875
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	796,
			"primary_score":	999644,
			"second_score":	112874
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	797,
			"primary_score":	999644,
			"second_score":	112873
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	798,
			"primary_score":	999644,
			"second_score":	112872
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	799,
			"primary_score":	999644,
			"second_score":	112871
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	801,
			"primary_score":	999644,
			"second_score":	112867
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	802,
			"primary_score":	999644,
			"second_score":	112865
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	803,
			"primary_score":	999644,
			"second_score":	112864
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	804,
			"primary_score":	999644,
			"second_score":	112863
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	829,
			"primary_score":	999644,
			"second_score":	126970
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	834,
			"primary_score":	999644,
			"second_score":	126969
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	835,
			"primary_score":	999644,
			"second_score":	126968
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	837,
			"primary_score":	999644,
			"second_score":	126967
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	838,
			"primary_score":	999644,
			"second_score":	126966
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	839,
			"primary_score":	999644,
			"second_score":	126965
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	841,
			"primary_score":	999644,
			"second_score":	126964
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	842,
			"primary_score":	999644,
			"second_score":	126963
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	886,
			"primary_score":	999644,
			"second_score":	113218
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	887,
			"primary_score":	999644,
			"second_score":	113217
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	889,
			"primary_score":	999644,
			"second_score":	113216
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	890,
			"primary_score":	999644,
			"second_score":	113215
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	892,
			"primary_score":	999644,
			"second_score":	113214
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	893,
			"primary_score":	999644,
			"second_score":	113213
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	900,
			"primary_score":	999644,
			"second_score":	113212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	901,
			"primary_score":	999644,
			"second_score":	113211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	902,
			"primary_score":	999644,
			"second_score":	112958
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	903,
			"primary_score":	999644,
			"second_score":	112957
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	904,
			"primary_score":	999644,
			"second_score":	112956
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	905,
			"primary_score":	999644,
			"second_score":	112955
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	907,
			"primary_score":	999644,
			"second_score":	112954
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	908,
			"primary_score":	999644,
			"second_score":	112953
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1589,
			"primary_score":	999644,
			"second_score":	3212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1590,
			"primary_score":	999644,
			"second_score":	3211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1591,
			"primary_score":	999644,
			"second_score":	3210
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1592,
			"primary_score":	999644,
			"second_score":	3209
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1594,
			"primary_score":	999644,
			"second_score":	3208
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1598,
			"primary_score":	999644,
			"second_score":	3207
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1604,
			"primary_score":	999644,
			"second_score":	3206
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1659,
			"primary_score":	999644,
			"second_score":	3205
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1660,
			"primary_score":	999644,
			"second_score":	3204
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1661,
			"primary_score":	999644,
			"second_score":	3203
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1662,
			"primary_score":	999644,
			"second_score":	3202
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1663,
			"primary_score":	999644,
			"second_score":	3201
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1664,
			"primary_score":	999644,
			"second_score":	3200
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1665,
			"primary_score":	999644,
			"second_score":	3199
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1666,
			"primary_score":	999644,
			"second_score":	3198
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1668,
			"primary_score":	999644,
			"second_score":	3196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1669,
			"primary_score":	999644,
			"second_score":	3195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1670,
			"primary_score":	999644,
			"second_score":	3193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1671,
			"primary_score":	999644,
			"second_score":	3192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1674,
			"primary_score":	999644,
			"second_score":	113224
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1676,
			"primary_score":	999644,
			"second_score":	113223
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1677,
			"primary_score":	999644,
			"second_score":	113222
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1682,
			"primary_score":	999644,
			"second_score":	113221
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1695,
			"primary_score":	999644,
			"second_score":	113220
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1699,
			"primary_score":	999644,
			"second_score":	113219
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1700,
			"primary_score":	999644,
			"second_score":	112952
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1701,
			"primary_score":	999644,
			"second_score":	112951
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1702,
			"primary_score":	999644,
			"second_score":	112950
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1707,
			"primary_score":	999644,
			"second_score":	112949
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1708,
			"primary_score":	999644,
			"second_score":	112948
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1709,
			"primary_score":	999644,
			"second_score":	112947
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1711,
			"primary_score":	999644,
			"second_score":	112946
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1712,
			"primary_score":	999644,
			"second_score":	112945
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1714,
			"primary_score":	999644,
			"second_score":	112944
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1715,
			"primary_score":	999644,
			"second_score":	112943
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1716,
			"primary_score":	999644,
			"second_score":	112939
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1717,
			"primary_score":	999644,
			"second_score":	112933
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1719,
			"primary_score":	999644,
			"second_score":	112915
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1720,
			"primary_score":	999644,
			"second_score":	112914
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1722,
			"primary_score":	999644,
			"second_score":	112819
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1792,
			"primary_score":	999644,
			"second_score":	112904
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1793,
			"primary_score":	999644,
			"second_score":	112903
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1794,
			"primary_score":	999644,
			"second_score":	112899
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1795,
			"primary_score":	999644,
			"second_score":	112898
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1797,
			"primary_score":	999644,
			"second_score":	112897
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1801,
			"primary_score":	999644,
			"second_score":	112896
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1854,
			"primary_score":	999644,
			"second_score":	112895
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1855,
			"primary_score":	999644,
			"second_score":	112891
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1860,
			"primary_score":	999644,
			"second_score":	112890
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1865,
			"primary_score":	999644,
			"second_score":	112913
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1866,
			"primary_score":	999644,
			"second_score":	112912
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1867,
			"primary_score":	999644,
			"second_score":	112911
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1868,
			"primary_score":	999644,
			"second_score":	112910
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1869,
			"primary_score":	999644,
			"second_score":	112909
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1870,
			"primary_score":	999644,
			"second_score":	112908
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1871,
			"primary_score":	999644,
			"second_score":	112907
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1873,
			"primary_score":	999644,
			"second_score":	112906
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1874,
			"primary_score":	999644,
			"second_score":	120031
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1875,
			"primary_score":	999644,
			"second_score":	120030
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1877,
			"primary_score":	999644,
			"second_score":	120029
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1881,
			"primary_score":	999644,
			"second_score":	120028
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1887,
			"primary_score":	999644,
			"second_score":	120052
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1888,
			"primary_score":	999644,
			"second_score":	120051
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1889,
			"primary_score":	999644,
			"second_score":	120050
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1890,
			"primary_score":	999644,
			"second_score":	120049
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1891,
			"primary_score":	999644,
			"second_score":	120048
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1892,
			"primary_score":	999644,
			"second_score":	120047
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1899,
			"primary_score":	999644,
			"second_score":	122632
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1900,
			"primary_score":	999644,
			"second_score":	122631
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1902,
			"primary_score":	999644,
			"second_score":	126986
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1903,
			"primary_score":	999644,
			"second_score":	126982
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1907,
			"primary_score":	999644,
			"second_score":	126981
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1915,
			"primary_score":	999644,
			"second_score":	112905
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1917,
			"primary_score":	999644,
			"second_score":	112889
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1934,
			"primary_score":	999644,
			"second_score":	112888
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1995,
			"primary_score":	999644,
			"second_score":	112887
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1997,
			"primary_score":	999644,
			"second_score":	112886
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1998,
			"primary_score":	999644,
			"second_score":	112885
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1999,
			"primary_score":	999644,
			"second_score":	112884
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2000,
			"primary_score":	999644,
			"second_score":	112883
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2001,
			"primary_score":	999644,
			"second_score":	112881
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2003,
			"primary_score":	999644,
			"second_score":	112862
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2006,
			"primary_score":	999644,
			"second_score":	112861
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2008,
			"primary_score":	999644,
			"second_score":	112860
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2009,
			"primary_score":	999644,
			"second_score":	126959
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2010,
			"primary_score":	999644,
			"second_score":	126958
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2012,
			"primary_score":	999644,
			"second_score":	112859
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2015,
			"primary_score":	999644,
			"second_score":	112858
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2016,
			"primary_score":	999644,
			"second_score":	112852
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2017,
			"primary_score":	999644,
			"second_score":	112851
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2020,
			"primary_score":	999644,
			"second_score":	112845
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2021,
			"primary_score":	999644,
			"second_score":	112844
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2027,
			"primary_score":	999644,
			"second_score":	112826
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2029,
			"primary_score":	999644,
			"second_score":	112825
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2030,
			"primary_score":	999644,
			"second_score":	112824
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2031,
			"primary_score":	999644,
			"second_score":	112823
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2034,
			"primary_score":	999644,
			"second_score":	112822
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2036,
			"primary_score":	999644,
			"second_score":	112820
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2042,
			"primary_score":	999644,
			"second_score":	113278
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2043,
			"primary_score":	999644,
			"second_score":	113277
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2044,
			"primary_score":	999644,
			"second_score":	113276
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2046,
			"primary_score":	999644,
			"second_score":	113275
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2050,
			"primary_score":	999644,
			"second_score":	113274
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2051,
			"primary_score":	999644,
			"second_score":	113273
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2052,
			"primary_score":	999644,
			"second_score":	113272
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2059,
			"primary_score":	999644,
			"second_score":	113271
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2060,
			"primary_score":	999644,
			"second_score":	113270
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2061,
			"primary_score":	999644,
			"second_score":	113269
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2063,
			"primary_score":	999644,
			"second_score":	113268
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2064,
			"primary_score":	999644,
			"second_score":	113267
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2065,
			"primary_score":	999644,
			"second_score":	113266
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2066,
			"primary_score":	999644,
			"second_score":	113265
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2072,
			"primary_score":	999644,
			"second_score":	113264
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2076,
			"primary_score":	999644,
			"second_score":	113584
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2078,
			"primary_score":	999644,
			"second_score":	113582
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2080,
			"primary_score":	999644,
			"second_score":	113581
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2081,
			"primary_score":	999644,
			"second_score":	113580
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2085,
			"primary_score":	999644,
			"second_score":	113579
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2086,
			"primary_score":	999644,
			"second_score":	113578
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2087,
			"primary_score":	999644,
			"second_score":	113577
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2088,
			"primary_score":	999644,
			"second_score":	113558
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2090,
			"primary_score":	999644,
			"second_score":	113557
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2094,
			"primary_score":	999644,
			"second_score":	113556
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2095,
			"primary_score":	999644,
			"second_score":	113550
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2097,
			"primary_score":	999644,
			"second_score":	113532
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2102,
			"primary_score":	999644,
			"second_score":	124531
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2103,
			"primary_score":	999644,
			"second_score":	124530
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2104,
			"primary_score":	999644,
			"second_score":	124529
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2105,
			"primary_score":	999644,
			"second_score":	124528
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2106,
			"primary_score":	999644,
			"second_score":	124527
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2108,
			"primary_score":	999644,
			"second_score":	124526
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2109,
			"primary_score":	999644,
			"second_score":	124525
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2111,
			"primary_score":	999644,
			"second_score":	125624
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2112,
			"primary_score":	999644,
			"second_score":	125623
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2113,
			"primary_score":	999644,
			"second_score":	125622
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2114,
			"primary_score":	999644,
			"second_score":	125621
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2116,
			"primary_score":	999644,
			"second_score":	125620
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2120,
			"primary_score":	999644,
			"second_score":	125619
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2121,
			"primary_score":	999644,
			"second_score":	133535
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2123,
			"primary_score":	999644,
			"second_score":	133534
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2124,
			"primary_score":	999644,
			"second_score":	133533
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2126,
			"primary_score":	999644,
			"second_score":	133532
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2127,
			"primary_score":	999644,
			"second_score":	133530
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2128,
			"primary_score":	999644,
			"second_score":	133529
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2129,
			"primary_score":	999644,
			"second_score":	125611
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2130,
			"primary_score":	999644,
			"second_score":	125610
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2134,
			"primary_score":	999644,
			"second_score":	133528
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2135,
			"primary_score":	999644,
			"second_score":	133522
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2137,
			"primary_score":	999644,
			"second_score":	133521
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2140,
			"primary_score":	999644,
			"second_score":	133515
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2141,
			"primary_score":	999644,
			"second_score":	133500
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2142,
			"primary_score":	999644,
			"second_score":	133499
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2144,
			"primary_score":	999644,
			"second_score":	133497
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2145,
			"primary_score":	999644,
			"second_score":	133496
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2149,
			"primary_score":	999644,
			"second_score":	130486
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2153,
			"primary_score":	999644,
			"second_score":	126653
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2154,
			"primary_score":	999644,
			"second_score":	126652
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2160,
			"primary_score":	999644,
			"second_score":	126651
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2161,
			"primary_score":	999644,
			"second_score":	126650
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2162,
			"primary_score":	999644,
			"second_score":	126649
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2163,
			"primary_score":	999644,
			"second_score":	126648
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2165,
			"primary_score":	999644,
			"second_score":	126647
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2170,
			"primary_score":	999644,
			"second_score":	126646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2173,
			"primary_score":	999644,
			"second_score":	126645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2175,
			"primary_score":	999644,
			"second_score":	126644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2176,
			"primary_score":	999644,
			"second_score":	126643
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2178,
			"primary_score":	999644,
			"second_score":	126642
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2179,
			"primary_score":	999644,
			"second_score":	126641
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2180,
			"primary_score":	999644,
			"second_score":	126640
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2187,
			"primary_score":	999644,
			"second_score":	126639
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2192,
			"primary_score":	999644,
			"second_score":	130485
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2194,
			"primary_score":	999644,
			"second_score":	130484
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2195,
			"primary_score":	999644,
			"second_score":	122106
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2196,
			"primary_score":	999644,
			"second_score":	122105
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2197,
			"primary_score":	999644,
			"second_score":	122103
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2198,
			"primary_score":	999644,
			"second_score":	122102
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2199,
			"primary_score":	999644,
			"second_score":	122101
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2201,
			"primary_score":	999644,
			"second_score":	122100
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2202,
			"primary_score":	999644,
			"second_score":	122098
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2204,
			"primary_score":	999644,
			"second_score":	122079
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2208,
			"primary_score":	999644,
			"second_score":	122078
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2211,
			"primary_score":	999644,
			"second_score":	122077
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2212,
			"primary_score":	999644,
			"second_score":	122071
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2213,
			"primary_score":	999644,
			"second_score":	122070
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2216,
			"primary_score":	999644,
			"second_score":	122064
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2220,
			"primary_score":	999644,
			"second_score":	122063
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2223,
			"primary_score":	999644,
			"second_score":	122045
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2224,
			"primary_score":	999644,
			"second_score":	122044
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2225,
			"primary_score":	999644,
			"second_score":	122043
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2226,
			"primary_score":	999644,
			"second_score":	122042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2228,
			"primary_score":	999644,
			"second_score":	122041
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2229,
			"primary_score":	999644,
			"second_score":	122039
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2398,
			"primary_score":	999644,
			"second_score":	120042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2400,
			"primary_score":	999644,
			"second_score":	120041
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2403,
			"primary_score":	999644,
			"second_score":	120040
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2408,
			"primary_score":	999644,
			"second_score":	113281
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2410,
			"primary_score":	999644,
			"second_score":	113280
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2414,
			"primary_score":	999644,
			"second_score":	113279
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2419,
			"primary_score":	999644,
			"second_score":	124534
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2421,
			"primary_score":	999644,
			"second_score":	124533
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2424,
			"primary_score":	999644,
			"second_score":	124532
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2459,
			"primary_score":	999644,
			"second_score":	132643
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2460,
			"primary_score":	999644,
			"second_score":	132642
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2462,
			"primary_score":	999644,
			"second_score":	132641
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2468,
			"primary_score":	999644,
			"second_score":	132640
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2472,
			"primary_score":	999644,
			"second_score":	132639
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2507,
			"primary_score":	999644,
			"second_score":	132644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2517,
			"primary_score":	999644,
			"second_score":	121427
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2528,
			"primary_score":	999644,
			"second_score":	132646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2530,
			"primary_score":	999644,
			"second_score":	132645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2531,
			"primary_score":	999644,
			"second_score":	132558
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2534,
			"primary_score":	999644,
			"second_score":	132557
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2535,
			"primary_score":	999644,
			"second_score":	132556
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2554,
			"primary_score":	999644,
			"second_score":	123328
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2556,
			"primary_score":	999644,
			"second_score":	123327
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2557,
			"primary_score":	999644,
			"second_score":	123223
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2560,
			"primary_score":	999644,
			"second_score":	123222
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2561,
			"primary_score":	999644,
			"second_score":	123221
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2562,
			"primary_score":	999644,
			"second_score":	123220
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2593,
			"primary_score":	999998,
			"second_score":	119420
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2594,
			"primary_score":	999998,
			"second_score":	119419
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2615,
			"primary_score":	999644,
			"second_score":	3213
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	346,
			"primary_score":	999644,
			"second_score":	123994
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1335,
			"primary_score":	999644,
			"second_score":	121018
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1336,
			"primary_score":	999644,
			"second_score":	121017
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1337,
			"primary_score":	999644,
			"second_score":	121016
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1338,
			"primary_score":	999644,
			"second_score":	121015
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1339,
			"primary_score":	999644,
			"second_score":	121014
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1341,
			"primary_score":	999644,
			"second_score":	121013
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1345,
			"primary_score":	999644,
			"second_score":	120946
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1348,
			"primary_score":	999644,
			"second_score":	120770
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1349,
			"primary_score":	999644,
			"second_score":	120769
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1354,
			"primary_score":	999644,
			"second_score":	120768
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1356,
			"primary_score":	999644,
			"second_score":	120728
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1362,
			"primary_score":	999644,
			"second_score":	120709
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1367,
			"primary_score":	999644,
			"second_score":	120708
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1891,
			"primary_score":	999644,
			"second_score":	123446
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1892,
			"primary_score":	999644,
			"second_score":	123445
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1893,
			"primary_score":	999644,
			"second_score":	123070
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1921,
			"primary_score":	999644,
			"second_score":	132868
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1923,
			"primary_score":	999644,
			"second_score":	132867
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1927,
			"primary_score":	999644,
			"second_score":	132829
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1929,
			"primary_score":	999644,
			"second_score":	132727
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1932,
			"primary_score":	999644,
			"second_score":	132726
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	121,
			"primary_score":	999991,
			"second_score":	114763
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	122,
			"primary_score":	999991,
			"second_score":	114761
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	131,
			"primary_score":	999644,
			"second_score":	18912
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	137,
			"primary_score":	999919,
			"second_score":	142932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	138,
			"primary_score":	999919,
			"second_score":	142931
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	139,
			"primary_score":	999919,
			"second_score":	142930
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	141,
			"primary_score":	999919,
			"second_score":	142929
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	142,
			"primary_score":	999919,
			"second_score":	142928
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	143,
			"primary_score":	999919,
			"second_score":	142927
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	149,
			"primary_score":	999919,
			"second_score":	142926
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	152,
			"primary_score":	999919,
			"second_score":	142925
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	153,
			"primary_score":	999919,
			"second_score":	142815
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	154,
			"primary_score":	999919,
			"second_score":	142814
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	156,
			"primary_score":	999919,
			"second_score":	142813
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	157,
			"primary_score":	999919,
			"second_score":	142812
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	171,
			"primary_score":	999644,
			"second_score":	144933
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	172,
			"primary_score":	999644,
			"second_score":	144932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	173,
			"primary_score":	999644,
			"second_score":	144931
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	174,
			"primary_score":	999644,
			"second_score":	144930
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	175,
			"primary_score":	999644,
			"second_score":	144929
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	176,
			"primary_score":	999644,
			"second_score":	144928
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	208,
			"primary_score":	999644,
			"second_score":	133262
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	210,
			"primary_score":	999644,
			"second_score":	133261
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	229,
			"primary_score":	999644,
			"second_score":	113513
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	230,
			"primary_score":	999644,
			"second_score":	113488
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	231,
			"primary_score":	999644,
			"second_score":	113463
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	232,
			"primary_score":	999644,
			"second_score":	113459
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	233,
			"primary_score":	999644,
			"second_score":	113455
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	234,
			"primary_score":	999644,
			"second_score":	113451
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	235,
			"primary_score":	999644,
			"second_score":	113447
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	236,
			"primary_score":	999644,
			"second_score":	113443
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	237,
			"primary_score":	999644,
			"second_score":	113373
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	238,
			"primary_score":	999644,
			"second_score":	113369
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	254,
			"primary_score":	999644,
			"second_score":	145187
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	255,
			"primary_score":	999644,
			"second_score":	145186
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	262,
			"primary_score":	999644,
			"second_score":	133416
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	269,
			"primary_score":	999644,
			"second_score":	143109
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	276,
			"primary_score":	999919,
			"second_score":	140796
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	283,
			"primary_score":	999644,
			"second_score":	124728
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	290,
			"primary_score":	999644,
			"second_score":	134422
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	296,
			"primary_score":	999733,
			"second_score":	125591
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	297,
			"primary_score":	999733,
			"second_score":	125590
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	299,
			"primary_score":	999733,
			"second_score":	125583
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	300,
			"primary_score":	999734,
			"second_score":	125582
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	304,
			"primary_score":	999736,
			"second_score":	125581
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	305,
			"primary_score":	999736,
			"second_score":	125560
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	309,
			"primary_score":	999733,
			"second_score":	138757
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	310,
			"primary_score":	999733,
			"second_score":	138756
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	311,
			"primary_score":	999733,
			"second_score":	138755
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	312,
			"primary_score":	999733,
			"second_score":	138754
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	313,
			"primary_score":	999733,
			"second_score":	138753
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	315,
			"primary_score":	999733,
			"second_score":	138642
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	316,
			"primary_score":	999733,
			"second_score":	138578
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	317,
			"primary_score":	999733,
			"second_score":	138577
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	318,
			"primary_score":	999733,
			"second_score":	138576
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	324,
			"primary_score":	999919,
			"second_score":	139291
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	325,
			"primary_score":	999919,
			"second_score":	139284
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	326,
			"primary_score":	999919,
			"second_score":	139283
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	328,
			"primary_score":	999919,
			"second_score":	139293
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	335,
			"primary_score":	999644,
			"second_score":	133642
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	336,
			"primary_score":	999644,
			"second_score":	133641
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	337,
			"primary_score":	999644,
			"second_score":	133640
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	338,
			"primary_score":	999644,
			"second_score":	136286
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	339,
			"primary_score":	999644,
			"second_score":	136285
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	341,
			"primary_score":	999644,
			"second_score":	133639
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	342,
			"primary_score":	999644,
			"second_score":	134479
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	343,
			"primary_score":	999644,
			"second_score":	134478
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	345,
			"primary_score":	999644,
			"second_score":	134477
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	348,
			"primary_score":	999644,
			"second_score":	133638
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	349,
			"primary_score":	999644,
			"second_score":	133637
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	350,
			"primary_score":	999644,
			"second_score":	133635
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	351,
			"primary_score":	999644,
			"second_score":	133633
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	352,
			"primary_score":	999644,
			"second_score":	133632
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	353,
			"primary_score":	999644,
			"second_score":	133631
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	417,
			"primary_score":	999857,
			"second_score":	138012
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	418,
			"primary_score":	999857,
			"second_score":	138011
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	419,
			"primary_score":	999857,
			"second_score":	138010
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	420,
			"primary_score":	999857,
			"second_score":	138009
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	421,
			"primary_score":	999857,
			"second_score":	138008
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	423,
			"primary_score":	999857,
			"second_score":	138007
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	429,
			"primary_score":	999857,
			"second_score":	138006
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	432,
			"primary_score":	999857,
			"second_score":	137952
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	436,
			"primary_score":	999857,
			"second_score":	137951
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	437,
			"primary_score":	999857,
			"second_score":	137950
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	439,
			"primary_score":	999857,
			"second_score":	137907
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	440,
			"primary_score":	999857,
			"second_score":	137900
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	441,
			"primary_score":	999857,
			"second_score":	137846
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	443,
			"primary_score":	999857,
			"second_score":	137843
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	445,
			"primary_score":	999857,
			"second_score":	137841
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	546,
			"primary_score":	999644,
			"second_score":	134639
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	548,
			"primary_score":	999644,
			"second_score":	134638
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	554,
			"primary_score":	999919,
			"second_score":	128052
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	556,
			"primary_score":	999919,
			"second_score":	128042
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	557,
			"primary_score":	999919,
			"second_score":	128041
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	558,
			"primary_score":	999919,
			"second_score":	128040
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	559,
			"primary_score":	999919,
			"second_score":	128038
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	560,
			"primary_score":	999919,
			"second_score":	128034
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	561,
			"primary_score":	999919,
			"second_score":	127978
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	583,
			"primary_score":	999983,
			"second_score":	129818
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	584,
			"primary_score":	999983,
			"second_score":	129817
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	585,
			"primary_score":	999983,
			"second_score":	129801
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	632,
			"primary_score":	999724,
			"second_score":	125619
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	633,
			"primary_score":	999724,
			"second_score":	125618
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	634,
			"primary_score":	999724,
			"second_score":	125617
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	636,
			"primary_score":	999724,
			"second_score":	125616
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	637,
			"primary_score":	999724,
			"second_score":	125615
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	640,
			"primary_score":	999724,
			"second_score":	125614
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	645,
			"primary_score":	999735,
			"second_score":	125593
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	646,
			"primary_score":	999735,
			"second_score":	125592
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	647,
			"primary_score":	999735,
			"second_score":	125559
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	648,
			"primary_score":	999735,
			"second_score":	125558
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	649,
			"primary_score":	999735,
			"second_score":	125557
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	685,
			"primary_score":	999724,
			"second_score":	125620
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	841,
			"primary_score":	999644,
			"second_score":	134141
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	843,
			"primary_score":	999644,
			"second_score":	134131
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	844,
			"primary_score":	999644,
			"second_score":	134130
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	845,
			"primary_score":	999644,
			"second_score":	134126
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	884,
			"primary_score":	999846,
			"second_score":	126675
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	890,
			"primary_score":	999846,
			"second_score":	126674
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	897,
			"primary_score":	999729,
			"second_score":	129926
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	898,
			"primary_score":	999729,
			"second_score":	129925
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	900,
			"primary_score":	999729,
			"second_score":	129924
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	927,
			"primary_score":	999729,
			"second_score":	129923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	929,
			"primary_score":	999729,
			"second_score":	129841
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	930,
			"primary_score":	999729,
			"second_score":	129839
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	932,
			"primary_score":	999729,
			"second_score":	129829
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	933,
			"primary_score":	999737,
			"second_score":	136936
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	936,
			"primary_score":	999983,
			"second_score":	129828
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	937,
			"primary_score":	999983,
			"second_score":	129827
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	939,
			"primary_score":	999983,
			"second_score":	129826
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	940,
			"primary_score":	999983,
			"second_score":	129825
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	942,
			"primary_score":	999983,
			"second_score":	129824
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	944,
			"primary_score":	999983,
			"second_score":	129823
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	946,
			"primary_score":	999983,
			"second_score":	129822
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	947,
			"primary_score":	999997,
			"second_score":	129821
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	956,
			"primary_score":	999997,
			"second_score":	129820
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	957,
			"primary_score":	999997,
			"second_score":	129819
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	958,
			"primary_score":	999997,
			"second_score":	129800
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	959,
			"primary_score":	999997,
			"second_score":	129799
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	960,
			"primary_score":	999997,
			"second_score":	129794
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	989,
			"primary_score":	999737,
			"second_score":	136935
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	990,
			"primary_score":	999737,
			"second_score":	136934
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	991,
			"primary_score":	999737,
			"second_score":	136930
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	992,
			"primary_score":	999737,
			"second_score":	136926
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	993,
			"primary_score":	999737,
			"second_score":	136925
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	994,
			"primary_score":	999737,
			"second_score":	136923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1172,
			"primary_score":	999982,
			"second_score":	126557
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1173,
			"primary_score":	999982,
			"second_score":	126555
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1175,
			"primary_score":	999982,
			"second_score":	126554
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1176,
			"primary_score":	999982,
			"second_score":	126553
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1178,
			"primary_score":	999982,
			"second_score":	126552
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1179,
			"primary_score":	999998,
			"second_score":	126551
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1180,
			"primary_score":	999998,
			"second_score":	126550
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1181,
			"primary_score":	999998,
			"second_score":	126549
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1182,
			"primary_score":	999998,
			"second_score":	126547
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1183,
			"primary_score":	999998,
			"second_score":	126542
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1251,
			"primary_score":	999728,
			"second_score":	126604
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1253,
			"primary_score":	999728,
			"second_score":	126603
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1256,
			"primary_score":	999728,
			"second_score":	126602
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1264,
			"primary_score":	999644,
			"second_score":	134325
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1266,
			"primary_score":	999644,
			"second_score":	134324
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1267,
			"primary_score":	999644,
			"second_score":	134317
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1273,
			"primary_score":	999644,
			"second_score":	134231
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1274,
			"primary_score":	999644,
			"second_score":	134230
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1275,
			"primary_score":	999644,
			"second_score":	134229
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1276,
			"primary_score":	999644,
			"second_score":	134228
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1277,
			"primary_score":	999644,
			"second_score":	134227
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1279,
			"primary_score":	999644,
			"second_score":	134226
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1281,
			"primary_score":	999644,
			"second_score":	134222
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1285,
			"primary_score":	999644,
			"second_score":	134221
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1286,
			"primary_score":	999846,
			"second_score":	126677
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1287,
			"primary_score":	999846,
			"second_score":	126676
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1310,
			"primary_score":	999846,
			"second_score":	126673
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1311,
			"primary_score":	999846,
			"second_score":	126672
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1312,
			"primary_score":	999846,
			"second_score":	126671
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1320,
			"primary_score":	999846,
			"second_score":	126670
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1321,
			"primary_score":	999846,
			"second_score":	126660
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1322,
			"primary_score":	999846,
			"second_score":	126659
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1327,
			"primary_score":	999846,
			"second_score":	126658
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1332,
			"primary_score":	999850,
			"second_score":	128413
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1333,
			"primary_score":	999850,
			"second_score":	128412
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1338,
			"primary_score":	999998,
			"second_score":	126657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1356,
			"primary_score":	999846,
			"second_score":	126656
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1358,
			"primary_score":	999846,
			"second_score":	126655
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1362,
			"primary_score":	999644,
			"second_score":	134220
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1363,
			"primary_score":	999644,
			"second_score":	134216
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1421,
			"primary_score":	999653,
			"second_score":	124718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1422,
			"primary_score":	999971,
			"second_score":	126440
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1424,
			"primary_score":	999971,
			"second_score":	126430
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1425,
			"primary_score":	999971,
			"second_score":	126429
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1426,
			"primary_score":	999971,
			"second_score":	126425
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1427,
			"primary_score":	999653,
			"second_score":	124717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1428,
			"primary_score":	999653,
			"second_score":	124716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1430,
			"primary_score":	999653,
			"second_score":	124715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1431,
			"primary_score":	999982,
			"second_score":	129722
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1433,
			"primary_score":	999653,
			"second_score":	124714
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1435,
			"primary_score":	999653,
			"second_score":	124713
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1446,
			"primary_score":	999653,
			"second_score":	124712
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1917,
			"primary_score":	999644,
			"second_score":	135606
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1918,
			"primary_score":	999644,
			"second_score":	135605
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1919,
			"primary_score":	999644,
			"second_score":	135604
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1921,
			"primary_score":	999644,
			"second_score":	135603
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1923,
			"primary_score":	999644,
			"second_score":	135594
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1933,
			"primary_score":	999644,
			"second_score":	135593
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1934,
			"primary_score":	999644,
			"second_score":	135335
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1941,
			"primary_score":	999644,
			"second_score":	135297
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1942,
			"primary_score":	999644,
			"second_score":	135278
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1944,
			"primary_score":	999644,
			"second_score":	135277
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1945,
			"primary_score":	999644,
			"second_score":	135251
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1946,
			"primary_score":	999644,
			"second_score":	135247
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2047,
			"primary_score":	999644,
			"second_score":	135602
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2048,
			"primary_score":	999644,
			"second_score":	135601
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2049,
			"primary_score":	999644,
			"second_score":	135600
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2050,
			"primary_score":	999644,
			"second_score":	135599
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2052,
			"primary_score":	999644,
			"second_score":	135598
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2059,
			"primary_score":	999644,
			"second_score":	135597
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2063,
			"primary_score":	999644,
			"second_score":	135596
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2083,
			"primary_score":	999644,
			"second_score":	135595
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2098,
			"primary_score":	999857,
			"second_score":	138022
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2099,
			"primary_score":	999857,
			"second_score":	138021
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2100,
			"primary_score":	999857,
			"second_score":	138020
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2101,
			"primary_score":	999857,
			"second_score":	138019
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2102,
			"primary_score":	999857,
			"second_score":	138018
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2104,
			"primary_score":	999857,
			"second_score":	138017
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2105,
			"primary_score":	999857,
			"second_score":	138016
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2147,
			"primary_score":	999857,
			"second_score":	138015
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2172,
			"primary_score":	999861,
			"second_score":	138049
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2173,
			"primary_score":	999861,
			"second_score":	138048
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2175,
			"primary_score":	999861,
			"second_score":	138047
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2184,
			"primary_score":	999861,
			"second_score":	138046
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2185,
			"primary_score":	999861,
			"second_score":	138044
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2187,
			"primary_score":	999861,
			"second_score":	138034
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2188,
			"primary_score":	999861,
			"second_score":	138033
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2189,
			"primary_score":	999861,
			"second_score":	138032
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2190,
			"primary_score":	999861,
			"second_score":	138031
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2191,
			"primary_score":	999861,
			"second_score":	138030
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2192,
			"primary_score":	999861,
			"second_score":	138029
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2194,
			"primary_score":	999861,
			"second_score":	138028
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2195,
			"primary_score":	999861,
			"second_score":	138023
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2205,
			"primary_score":	999861,
			"second_score":	138014
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2206,
			"primary_score":	999861,
			"second_score":	138013
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2208,
			"primary_score":	999861,
			"second_score":	137840
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2213,
			"primary_score":	999861,
			"second_score":	137839
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2214,
			"primary_score":	999861,
			"second_score":	137837
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2215,
			"primary_score":	999861,
			"second_score":	137836
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2216,
			"primary_score":	999861,
			"second_score":	137831
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2315,
			"primary_score":	999644,
			"second_score":	133436
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2319,
			"primary_score":	999644,
			"second_score":	133435
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2414,
			"primary_score":	999644,
			"second_score":	134501
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2416,
			"primary_score":	999644,
			"second_score":	134500
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2423,
			"primary_score":	999644,
			"second_score":	134499
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2424,
			"primary_score":	999644,
			"second_score":	134489
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2425,
			"primary_score":	999644,
			"second_score":	134488
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2426,
			"primary_score":	999644,
			"second_score":	134487
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2427,
			"primary_score":	999644,
			"second_score":	134428
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2428,
			"primary_score":	999644,
			"second_score":	134425
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2430,
			"primary_score":	999850,
			"second_score":	137132
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2431,
			"primary_score":	999850,
			"second_score":	137131
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2435,
			"primary_score":	999644,
			"second_score":	134423
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2436,
			"primary_score":	999644,
			"second_score":	134421
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2437,
			"primary_score":	999644,
			"second_score":	134420
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2438,
			"primary_score":	999644,
			"second_score":	134415
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2440,
			"primary_score":	999644,
			"second_score":	134414
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2441,
			"primary_score":	999644,
			"second_score":	134392
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2447,
			"primary_score":	999644,
			"second_score":	134654
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2448,
			"primary_score":	999644,
			"second_score":	134653
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2449,
			"primary_score":	999644,
			"second_score":	134652
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2450,
			"primary_score":	999644,
			"second_score":	134651
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2451,
			"primary_score":	999644,
			"second_score":	134650
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2453,
			"primary_score":	999644,
			"second_score":	134649
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2454,
			"primary_score":	999644,
			"second_score":	134645
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2456,
			"primary_score":	999644,
			"second_score":	134644
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2471,
			"primary_score":	999644,
			"second_score":	134643
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2472,
			"primary_score":	999644,
			"second_score":	134642
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2485,
			"primary_score":	999644,
			"second_score":	134641
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2488,
			"primary_score":	999916,
			"second_score":	137349
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2491,
			"primary_score":	999644,
			"second_score":	134640
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2493,
			"primary_score":	999644,
			"second_score":	134637
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2494,
			"primary_score":	999644,
			"second_score":	134636
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2495,
			"primary_score":	999644,
			"second_score":	136310
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2499,
			"primary_score":	999644,
			"second_score":	134635
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2512,
			"primary_score":	999644,
			"second_score":	134634
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2513,
			"primary_score":	999644,
			"second_score":	134633
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2516,
			"primary_score":	999644,
			"second_score":	134595
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2519,
			"primary_score":	999775,
			"second_score":	125388
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2523,
			"primary_score":	999760,
			"second_score":	125350
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2530,
			"primary_score":	999644,
			"second_score":	134594
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2532,
			"primary_score":	999644,
			"second_score":	134584
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2533,
			"primary_score":	999644,
			"second_score":	134583
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2534,
			"primary_score":	999644,
			"second_score":	134582
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2539,
			"primary_score":	999644,
			"second_score":	136296
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2540,
			"primary_score":	999644,
			"second_score":	136295
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2542,
			"primary_score":	999916,
			"second_score":	137332
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2545,
			"primary_score":	999644,
			"second_score":	134581
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2546,
			"primary_score":	999644,
			"second_score":	134580
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2547,
			"primary_score":	999644,
			"second_score":	134576
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2548,
			"primary_score":	999644,
			"second_score":	134575
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2601,
			"primary_score":	999644,
			"second_score":	133674
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2602,
			"primary_score":	999644,
			"second_score":	133673
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2604,
			"primary_score":	999644,
			"second_score":	133672
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2612,
			"primary_score":	999644,
			"second_score":	133671
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2618,
			"primary_score":	999644,
			"second_score":	133669
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2619,
			"primary_score":	999644,
			"second_score":	133665
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2622,
			"primary_score":	999644,
			"second_score":	133661
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2623,
			"primary_score":	999644,
			"second_score":	133659
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2628,
			"primary_score":	999644,
			"second_score":	133658
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2630,
			"primary_score":	999644,
			"second_score":	133648
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2632,
			"primary_score":	999644,
			"second_score":	133647
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2633,
			"primary_score":	999644,
			"second_score":	133646
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2635,
			"primary_score":	999644,
			"second_score":	133630
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2639,
			"primary_score":	999644,
			"second_score":	119454
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2640,
			"primary_score":	999644,
			"second_score":	119453
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2643,
			"primary_score":	999644,
			"second_score":	133629
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	3242,
			"primary_score":	999990,
			"second_score":	140549
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	3243,
			"primary_score":	999990,
			"second_score":	140529
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	3285,
			"primary_score":	999995,
			"second_score":	140518
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	3286,
			"primary_score":	999995,
			"second_score":	140517
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	3289,
			"primary_score":	999996,
			"second_score":	140516
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4176,
			"primary_score":	999990,
			"second_score":	140586
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4177,
			"primary_score":	999990,
			"second_score":	140585
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4178,
			"primary_score":	999990,
			"second_score":	140584
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4180,
			"primary_score":	999990,
			"second_score":	140583
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4181,
			"primary_score":	999990,
			"second_score":	140582
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4182,
			"primary_score":	999990,
			"second_score":	140581
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4188,
			"primary_score":	999990,
			"second_score":	140580
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4190,
			"primary_score":	999990,
			"second_score":	140569
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4201,
			"primary_score":	999990,
			"second_score":	140568
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4204,
			"primary_score":	999990,
			"second_score":	140567
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4206,
			"primary_score":	999990,
			"second_score":	140566
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4210,
			"primary_score":	999990,
			"second_score":	140565
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4212,
			"primary_score":	999990,
			"second_score":	139402
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4215,
			"primary_score":	999990,
			"second_score":	139401
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4218,
			"primary_score":	999990,
			"second_score":	139352
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4224,
			"primary_score":	999919,
			"second_score":	140738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4225,
			"primary_score":	999919,
			"second_score":	140737
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4227,
			"primary_score":	999919,
			"second_score":	140736
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4231,
			"primary_score":	999919,
			"second_score":	140735
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4246,
			"primary_score":	999990,
			"second_score":	140734
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4247,
			"primary_score":	999990,
			"second_score":	140733
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4248,
			"primary_score":	999990,
			"second_score":	140732
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4250,
			"primary_score":	999990,
			"second_score":	140731
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4251,
			"primary_score":	999990,
			"second_score":	140730
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4267,
			"primary_score":	999990,
			"second_score":	140587
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4271,
			"primary_score":	999990,
			"second_score":	139351
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4272,
			"primary_score":	999990,
			"second_score":	139341
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4274,
			"primary_score":	999990,
			"second_score":	139334
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4275,
			"primary_score":	999990,
			"second_score":	139333
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4289,
			"primary_score":	999919,
			"second_score":	139332
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4290,
			"primary_score":	999919,
			"second_score":	139302
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4291,
			"primary_score":	999919,
			"second_score":	139292
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4292,
			"primary_score":	999919,
			"second_score":	139282
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4569,
			"primary_score":	999924,
			"second_score":	143275
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4570,
			"primary_score":	999924,
			"second_score":	143274
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4571,
			"primary_score":	999924,
			"second_score":	143273
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4572,
			"primary_score":	999924,
			"second_score":	143272
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4573,
			"primary_score":	999924,
			"second_score":	143271
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4574,
			"primary_score":	999924,
			"second_score":	143270
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4576,
			"primary_score":	999924,
			"second_score":	143269
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4581,
			"primary_score":	999924,
			"second_score":	143268
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4583,
			"primary_score":	999924,
			"second_score":	143225
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4589,
			"primary_score":	999924,
			"second_score":	143220
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4594,
			"primary_score":	999924,
			"second_score":	143219
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4606,
			"primary_score":	999924,
			"second_score":	143218
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4616,
			"primary_score":	999924,
			"second_score":	143217
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4617,
			"primary_score":	999924,
			"second_score":	143119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4618,
			"primary_score":	999924,
			"second_score":	143118
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4619,
			"primary_score":	999924,
			"second_score":	143056
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4621,
			"primary_score":	999924,
			"second_score":	143055
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4622,
			"primary_score":	999924,
			"second_score":	142951
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4623,
			"primary_score":	999924,
			"second_score":	142949
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4624,
			"primary_score":	999924,
			"second_score":	142948
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4626,
			"primary_score":	999924,
			"second_score":	142947
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4627,
			"primary_score":	999990,
			"second_score":	142946
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4640,
			"primary_score":	999990,
			"second_score":	142945
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4643,
			"primary_score":	999924,
			"second_score":	142944
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4644,
			"primary_score":	999924,
			"second_score":	142934
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4645,
			"primary_score":	999924,
			"second_score":	142933
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4646,
			"primary_score":	999924,
			"second_score":	142810
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4647,
			"primary_score":	999924,
			"second_score":	142609
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4649,
			"primary_score":	999924,
			"second_score":	142484
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4651,
			"primary_score":	999924,
			"second_score":	142483
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4652,
			"primary_score":	999990,
			"second_score":	142482
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4653,
			"primary_score":	999990,
			"second_score":	142481
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4658,
			"primary_score":	999924,
			"second_score":	142480
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4659,
			"primary_score":	999924,
			"second_score":	142417
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4661,
			"primary_score":	999924,
			"second_score":	142414
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4662,
			"primary_score":	999924,
			"second_score":	142368
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4664,
			"primary_score":	999924,
			"second_score":	142367
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4665,
			"primary_score":	999924,
			"second_score":	142365
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4666,
			"primary_score":	999924,
			"second_score":	142364
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4668,
			"primary_score":	999924,
			"second_score":	142359
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4689,
			"primary_score":	999924,
			"second_score":	140801
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4691,
			"primary_score":	999924,
			"second_score":	140800
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4697,
			"primary_score":	999924,
			"second_score":	140799
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4703,
			"primary_score":	999924,
			"second_score":	140798
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4710,
			"primary_score":	999924,
			"second_score":	140797
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4715,
			"primary_score":	999924,
			"second_score":	140795
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4728,
			"primary_score":	999924,
			"second_score":	140794
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4730,
			"primary_score":	999924,
			"second_score":	140793
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4731,
			"primary_score":	999924,
			"second_score":	140790
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4739,
			"primary_score":	999924,
			"second_score":	140789
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4745,
			"primary_score":	999924,
			"second_score":	140788
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4860,
			"primary_score":	999991,
			"second_score":	141608
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4861,
			"primary_score":	999991,
			"second_score":	141607
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4862,
			"primary_score":	999991,
			"second_score":	141606
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4863,
			"primary_score":	999991,
			"second_score":	141605
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4865,
			"primary_score":	999991,
			"second_score":	141604
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4869,
			"primary_score":	999991,
			"second_score":	141603
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4873,
			"primary_score":	999991,
			"second_score":	141602
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4878,
			"primary_score":	999991,
			"second_score":	141601
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4881,
			"primary_score":	999991,
			"second_score":	141582
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4883,
			"primary_score":	999991,
			"second_score":	141558
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4884,
			"primary_score":	999991,
			"second_score":	141557
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4890,
			"primary_score":	999991,
			"second_score":	141556
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4897,
			"primary_score":	999991,
			"second_score":	141555
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4898,
			"primary_score":	999991,
			"second_score":	141066
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4934,
			"primary_score":	999927,
			"second_score":	127091
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4935,
			"primary_score":	999927,
			"second_score":	127090
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4937,
			"primary_score":	999927,
			"second_score":	127089
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4939,
			"primary_score":	999927,
			"second_score":	127085
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4940,
			"primary_score":	999932,
			"second_score":	127084
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4981,
			"primary_score":	999928,
			"second_score":	127083
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4991,
			"primary_score":	999928,
			"second_score":	127080
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4992,
			"primary_score":	999928,
			"second_score":	127076
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4993,
			"primary_score":	999928,
			"second_score":	127075
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4994,
			"primary_score":	999928,
			"second_score":	127074
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4995,
			"primary_score":	999928,
			"second_score":	127072
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4996,
			"primary_score":	999928,
			"second_score":	127068
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4997,
			"primary_score":	999928,
			"second_score":	126986
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4998,
			"primary_score":	999928,
			"second_score":	126985
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4999,
			"primary_score":	999928,
			"second_score":	126982
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5001,
			"primary_score":	999928,
			"second_score":	126979
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5003,
			"primary_score":	999928,
			"second_score":	126974
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5022,
			"primary_score":	999927,
			"second_score":	126856
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5028,
			"primary_score":	999927,
			"second_score":	126749
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5029,
			"primary_score":	999927,
			"second_score":	126748
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5031,
			"primary_score":	999927,
			"second_score":	126747
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5032,
			"primary_score":	999927,
			"second_score":	126743
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5034,
			"primary_score":	999927,
			"second_score":	126742
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5040,
			"primary_score":	999862,
			"second_score":	137803
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5041,
			"primary_score":	999862,
			"second_score":	137802
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5043,
			"primary_score":	999862,
			"second_score":	137801
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5044,
			"primary_score":	999862,
			"second_score":	137799
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5045,
			"primary_score":	999862,
			"second_score":	137789
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5046,
			"primary_score":	999862,
			"second_score":	137788
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5047,
			"primary_score":	999862,
			"second_score":	137787
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5048,
			"primary_score":	999862,
			"second_score":	137785
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5049,
			"primary_score":	999862,
			"second_score":	137781
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5051,
			"primary_score":	999862,
			"second_score":	137780
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5057,
			"primary_score":	999862,
			"second_score":	137147
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5059,
			"primary_score":	999862,
			"second_score":	137146
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5060,
			"primary_score":	999862,
			"second_score":	137098
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5062,
			"primary_score":	999862,
			"second_score":	137090
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5063,
			"primary_score":	999862,
			"second_score":	137088
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5069,
			"primary_score":	999644,
			"second_score":	137166
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5071,
			"primary_score":	999644,
			"second_score":	137165
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5084,
			"primary_score":	999644,
			"second_score":	137164
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5096,
			"primary_score":	999644,
			"second_score":	137137
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5099,
			"primary_score":	999644,
			"second_score":	137136
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5104,
			"primary_score":	999644,
			"second_score":	137135
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5112,
			"primary_score":	999644,
			"second_score":	137167
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5114,
			"primary_score":	999644,
			"second_score":	137134
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5115,
			"primary_score":	999644,
			"second_score":	137133
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5116,
			"primary_score":	999644,
			"second_score":	137107
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5117,
			"primary_score":	999644,
			"second_score":	137106
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5118,
			"primary_score":	999644,
			"second_score":	137105
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5119,
			"primary_score":	999644,
			"second_score":	137071
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5120,
			"primary_score":	999644,
			"second_score":	137068
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5128,
			"primary_score":	999644,
			"second_score":	137184
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5129,
			"primary_score":	999644,
			"second_score":	137183
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5130,
			"primary_score":	999644,
			"second_score":	137182
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5131,
			"primary_score":	999644,
			"second_score":	137181
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5132,
			"primary_score":	999644,
			"second_score":	137180
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5134,
			"primary_score":	999644,
			"second_score":	137179
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5181,
			"primary_score":	999644,
			"second_score":	137178
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5202,
			"primary_score":	999644,
			"second_score":	137177
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5204,
			"primary_score":	999644,
			"second_score":	137168
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5205,
			"primary_score":	999644,
			"second_score":	137067
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6095,
			"primary_score":	999644,
			"second_score":	129756
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6096,
			"primary_score":	999644,
			"second_score":	129754
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6098,
			"primary_score":	999644,
			"second_score":	129753
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6100,
			"primary_score":	999644,
			"second_score":	129743
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6101,
			"primary_score":	999644,
			"second_score":	129742
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6102,
			"primary_score":	999644,
			"second_score":	129738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6103,
			"primary_score":	999644,
			"second_score":	129737
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6104,
			"primary_score":	999644,
			"second_score":	129736
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6106,
			"primary_score":	999644,
			"second_score":	129731
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6112,
			"primary_score":	999644,
			"second_score":	126929
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6114,
			"primary_score":	999644,
			"second_score":	126919
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6116,
			"primary_score":	999644,
			"second_score":	126917
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6117,
			"primary_score":	999644,
			"second_score":	126916
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6118,
			"primary_score":	999644,
			"second_score":	126915
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6119,
			"primary_score":	999644,
			"second_score":	126913
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6120,
			"primary_score":	999644,
			"second_score":	126909
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6122,
			"primary_score":	999644,
			"second_score":	126908
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6123,
			"primary_score":	999644,
			"second_score":	126903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6125,
			"primary_score":	999644,
			"second_score":	126901
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6126,
			"primary_score":	999644,
			"second_score":	126891
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6127,
			"primary_score":	999644,
			"second_score":	126890
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6128,
			"primary_score":	999644,
			"second_score":	126889
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6134,
			"primary_score":	999644,
			"second_score":	126499
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6136,
			"primary_score":	999644,
			"second_score":	126489
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6137,
			"primary_score":	999644,
			"second_score":	126488
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6138,
			"primary_score":	999644,
			"second_score":	126484
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6139,
			"primary_score":	999644,
			"second_score":	126386
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6141,
			"primary_score":	999644,
			"second_score":	126385
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6143,
			"primary_score":	999644,
			"second_score":	126383
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6145,
			"primary_score":	999644,
			"second_score":	126378
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6151,
			"primary_score":	999644,
			"second_score":	133901
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6153,
			"primary_score":	999644,
			"second_score":	133900
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6154,
			"primary_score":	999644,
			"second_score":	133899
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6167,
			"primary_score":	999644,
			"second_score":	135250
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6169,
			"primary_score":	999644,
			"second_score":	135249
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6170,
			"primary_score":	999644,
			"second_score":	135248
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6183,
			"primary_score":	999644,
			"second_score":	134390
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6185,
			"primary_score":	999644,
			"second_score":	134389
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6186,
			"primary_score":	999644,
			"second_score":	134388
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6199,
			"primary_score":	999644,
			"second_score":	133833
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6220,
			"primary_score":	999733,
			"second_score":	125594
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6258,
			"primary_score":	999644,
			"second_score":	133765
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6260,
			"primary_score":	999644,
			"second_score":	133764
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6265,
			"primary_score":	999644,
			"second_score":	133763
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6267,
			"primary_score":	999644,
			"second_score":	133762
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6268,
			"primary_score":	999644,
			"second_score":	133739
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6279,
			"primary_score":	999644,
			"second_score":	133921
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6282,
			"primary_score":	999644,
			"second_score":	133920
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6283,
			"primary_score":	999644,
			"second_score":	133919
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6292,
			"primary_score":	999644,
			"second_score":	133738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6293,
			"primary_score":	999644,
			"second_score":	133735
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6294,
			"primary_score":	999644,
			"second_score":	133734
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6327,
			"primary_score":	999924,
			"second_score":	142984
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6328,
			"primary_score":	999924,
			"second_score":	142983
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6329,
			"primary_score":	999924,
			"second_score":	142982
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6336,
			"primary_score":	999924,
			"second_score":	142978
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6337,
			"primary_score":	999924,
			"second_score":	142977
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6338,
			"primary_score":	999924,
			"second_score":	142976
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6339,
			"primary_score":	999924,
			"second_score":	142975
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6340,
			"primary_score":	999924,
			"second_score":	142974
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6341,
			"primary_score":	999924,
			"second_score":	142973
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6342,
			"primary_score":	999924,
			"second_score":	142972
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6343,
			"primary_score":	999924,
			"second_score":	142971
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6344,
			"primary_score":	999924,
			"second_score":	142970
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6345,
			"primary_score":	999924,
			"second_score":	142969
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6346,
			"primary_score":	999924,
			"second_score":	142968
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6347,
			"primary_score":	999924,
			"second_score":	142967
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6348,
			"primary_score":	999924,
			"second_score":	142966
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6349,
			"primary_score":	999924,
			"second_score":	142965
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6350,
			"primary_score":	999924,
			"second_score":	142964
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6351,
			"primary_score":	999924,
			"second_score":	142963
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6352,
			"primary_score":	999924,
			"second_score":	142962
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6353,
			"primary_score":	999924,
			"second_score":	142961
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6354,
			"primary_score":	999924,
			"second_score":	142960
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6355,
			"primary_score":	999924,
			"second_score":	142959
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6356,
			"primary_score":	999924,
			"second_score":	142958
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6357,
			"primary_score":	999924,
			"second_score":	142957
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6358,
			"primary_score":	999924,
			"second_score":	142956
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6359,
			"primary_score":	999924,
			"second_score":	142955
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6360,
			"primary_score":	999924,
			"second_score":	142954
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6361,
			"primary_score":	999924,
			"second_score":	142953
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6362,
			"primary_score":	999924,
			"second_score":	142952
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6372,
			"primary_score":	999857,
			"second_score":	138027
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6375,
			"primary_score":	999857,
			"second_score":	138026
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6378,
			"primary_score":	999857,
			"second_score":	138025
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6382,
			"primary_score":	999857,
			"second_score":	138024
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6609,
			"primary_score":	999644,
			"second_score":	133809
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6617,
			"primary_score":	999644,
			"second_score":	133717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6618,
			"primary_score":	999644,
			"second_score":	133716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6623,
			"primary_score":	999644,
			"second_score":	133715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6633,
			"primary_score":	999644,
			"second_score":	133719
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6634,
			"primary_score":	999644,
			"second_score":	133718
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	32,
			"primary_score":	999644,
			"second_score":	6291
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	33,
			"primary_score":	999644,
			"second_score":	113929
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	35,
			"primary_score":	999644,
			"second_score":	6290
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	60,
			"primary_score":	999644,
			"second_score":	113711
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	171,
			"primary_score":	999644,
			"second_score":	114445
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	174,
			"primary_score":	999644,
			"second_score":	114444
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	73,
			"primary_score":	999644,
			"second_score":	119516
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	71,
			"primary_score":	999644,
			"second_score":	122776
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	72,
			"primary_score":	999644,
			"second_score":	122774
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	73,
			"primary_score":	999644,
			"second_score":	122772
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	74,
			"primary_score":	999644,
			"second_score":	122770
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	177,
			"primary_score":	999644,
			"second_score":	119585
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	182,
			"primary_score":	999644,
			"second_score":	122778
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	184,
			"primary_score":	999644,
			"second_score":	122777
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	185,
			"primary_score":	999644,
			"second_score":	122769
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	273,
			"primary_score":	999734,
			"second_score":	122764
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	275,
			"primary_score":	999734,
			"second_score":	122763
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	279,
			"primary_score":	999736,
			"second_score":	122762
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	280,
			"primary_score":	999736,
			"second_score":	122753
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	281,
			"primary_score":	999736,
			"second_score":	122751
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	283,
			"primary_score":	999734,
			"second_score":	122686
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	298,
			"primary_score":	999741,
			"second_score":	122625
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	300,
			"primary_score":	999741,
			"second_score":	122624
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	303,
			"primary_score":	999741,
			"second_score":	122623
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	439,
			"primary_score":	999734,
			"second_score":	122767
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	441,
			"primary_score":	999734,
			"second_score":	122766
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	442,
			"primary_score":	999734,
			"second_score":	122765
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	602,
			"primary_score":	999644,
			"second_score":	123224
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	603,
			"primary_score":	999644,
			"second_score":	123223
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	604,
			"primary_score":	999644,
			"second_score":	123222
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	606,
			"primary_score":	999644,
			"second_score":	123221
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	611,
			"primary_score":	999644,
			"second_score":	123220
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	613,
			"primary_score":	999644,
			"second_score":	123219
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	629,
			"primary_score":	999644,
			"second_score":	123218
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	638,
			"primary_score":	999644,
			"second_score":	123217
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	856,
			"primary_score":	999765,
			"second_score":	122680
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	857,
			"primary_score":	999765,
			"second_score":	122679
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	859,
			"primary_score":	999765,
			"second_score":	122678
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	865,
			"primary_score":	999765,
			"second_score":	122677
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	866,
			"primary_score":	999766,
			"second_score":	122675
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	884,
			"primary_score":	999766,
			"second_score":	122673
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	885,
			"primary_score":	999766,
			"second_score":	122671
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	886,
			"primary_score":	999766,
			"second_score":	122669
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	893,
			"primary_score":	999766,
			"second_score":	122667
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	894,
			"primary_score":	999766,
			"second_score":	122666
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	895,
			"primary_score":	999766,
			"second_score":	122664
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	896,
			"primary_score":	999766,
			"second_score":	122662
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	82,
			"primary_score":	999644,
			"second_score":	122658
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	83,
			"primary_score":	999644,
			"second_score":	122822
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	85,
			"primary_score":	999644,
			"second_score":	122821
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	86,
			"primary_score":	999644,
			"second_score":	122820
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	87,
			"primary_score":	999644,
			"second_score":	122818
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	88,
			"primary_score":	999644,
			"second_score":	122811
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	91,
			"primary_score":	999644,
			"second_score":	123012
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	93,
			"primary_score":	999644,
			"second_score":	123011
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	94,
			"primary_score":	999644,
			"second_score":	123009
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	97,
			"primary_score":	999644,
			"second_score":	123007
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	103,
			"primary_score":	999644,
			"second_score":	120631
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	105,
			"primary_score":	999644,
			"second_score":	120630
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	113,
			"primary_score":	999644,
			"second_score":	120629
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	155,
			"primary_score":	999644,
			"second_score":	120628
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	199,
			"primary_score":	999644,
			"second_score":	114932
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	201,
			"primary_score":	999644,
			"second_score":	114931
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	202,
			"primary_score":	999644,
			"second_score":	114930
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	203,
			"primary_score":	999644,
			"second_score":	114929
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	204,
			"primary_score":	999644,
			"second_score":	114884
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	217,
			"primary_score":	999644,
			"second_score":	123162
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	245,
			"primary_score":	999644,
			"second_score":	133189
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	247,
			"primary_score":	999644,
			"second_score":	133188
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	250,
			"primary_score":	999644,
			"second_score":	133187
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	265,
			"primary_score":	999644,
			"second_score":	133186
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	267,
			"primary_score":	999644,
			"second_score":	133184
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	268,
			"primary_score":	999644,
			"second_score":	133183
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	269,
			"primary_score":	999644,
			"second_score":	133182
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	274,
			"primary_score":	999644,
			"second_score":	122791
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	280,
			"primary_score":	999644,
			"second_score":	122790
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	286,
			"primary_score":	999644,
			"second_score":	119525
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	293,
			"primary_score":	999644,
			"second_score":	119524
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	297,
			"primary_score":	999644,
			"second_score":	119523
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	305,
			"primary_score":	999644,
			"second_score":	123328
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	327,
			"primary_score":	999644,
			"second_score":	123327
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	328,
			"primary_score":	999644,
			"second_score":	123326
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	333,
			"primary_score":	999644,
			"second_score":	122830
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	334,
			"primary_score":	999644,
			"second_score":	122829
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	336,
			"primary_score":	999644,
			"second_score":	122828
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	337,
			"primary_score":	999644,
			"second_score":	122827
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	338,
			"primary_score":	999644,
			"second_score":	122826
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	339,
			"primary_score":	999644,
			"second_score":	122825
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	341,
			"primary_score":	999644,
			"second_score":	122792
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	367,
			"primary_score":	999644,
			"second_score":	123338
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	369,
			"primary_score":	999644,
			"second_score":	123337
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	371,
			"primary_score":	999644,
			"second_score":	123332
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	372,
			"primary_score":	999644,
			"second_score":	123331
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	373,
			"primary_score":	999644,
			"second_score":	123330
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	107,
			"primary_score":	999644,
			"second_score":	114870
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	119,
			"primary_score":	999644,
			"second_score":	114463
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	203,
			"primary_score":	999644,
			"second_score":	119449
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	204,
			"primary_score":	999898,
			"second_score":	119751
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	206,
			"primary_score":	999644,
			"second_score":	119448
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	213,
			"primary_score":	999644,
			"second_score":	119780
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	214,
			"primary_score":	999644,
			"second_score":	119774
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	215,
			"primary_score":	999644,
			"second_score":	119773
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	216,
			"primary_score":	999644,
			"second_score":	119510
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	217,
			"primary_score":	999644,
			"second_score":	119507
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	219,
			"primary_score":	999644,
			"second_score":	119438
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	223,
			"primary_score":	999644,
			"second_score":	119434
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	229,
			"primary_score":	999644,
			"second_score":	118577
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	246,
			"primary_score":	999644,
			"second_score":	118571
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	247,
			"primary_score":	999644,
			"second_score":	118568
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	248,
			"primary_score":	999644,
			"second_score":	115027
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	250,
			"primary_score":	999644,
			"second_score":	115025
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	251,
			"primary_score":	999644,
			"second_score":	115019
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	254,
			"primary_score":	999644,
			"second_score":	115018
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	261,
			"primary_score":	999644,
			"second_score":	115017
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	268,
			"primary_score":	999644,
			"second_score":	115016
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	269,
			"primary_score":	999644,
			"second_score":	115012
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	270,
			"primary_score":	999644,
			"second_score":	115007
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	271,
			"primary_score":	999644,
			"second_score":	114998
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	272,
			"primary_score":	999644,
			"second_score":	114989
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	274,
			"primary_score":	999644,
			"second_score":	114987
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	284,
			"primary_score":	999644,
			"second_score":	114981
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	288,
			"primary_score":	999644,
			"second_score":	114980
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	289,
			"primary_score":	999644,
			"second_score":	114963
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	290,
			"primary_score":	999644,
			"second_score":	114936
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	293,
			"primary_score":	999644,
			"second_score":	114933
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	295,
			"primary_score":	999644,
			"second_score":	114883
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	298,
			"primary_score":	999644,
			"second_score":	114879
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	302,
			"primary_score":	999644,
			"second_score":	114878
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	303,
			"primary_score":	999644,
			"second_score":	114862
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	306,
			"primary_score":	999644,
			"second_score":	114455
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	311,
			"primary_score":	999644,
			"second_score":	114454
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	313,
			"primary_score":	999644,
			"second_score":	114452
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	314,
			"primary_score":	999644,
			"second_score":	114446
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	315,
			"primary_score":	999644,
			"second_score":	113703
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	317,
			"primary_score":	999644,
			"second_score":	113701
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	322,
			"primary_score":	999644,
			"second_score":	113695
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	324,
			"primary_score":	999644,
			"second_score":	113626
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	325,
			"primary_score":	999644,
			"second_score":	113605
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	326,
			"primary_score":	999644,
			"second_score":	113601
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	327,
			"primary_score":	999644,
			"second_score":	113599
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	328,
			"primary_score":	999644,
			"second_score":	113597
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	329,
			"primary_score":	999644,
			"second_score":	113529
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	333,
			"primary_score":	999644,
			"second_score":	113528
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	335,
			"primary_score":	999644,
			"second_score":	113526
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	337,
			"primary_score":	999644,
			"second_score":	113521
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	344,
			"primary_score":	999908,
			"second_score":	122128
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	350,
			"primary_score":	999908,
			"second_score":	122126
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	354,
			"primary_score":	999908,
			"second_score":	122125
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	356,
			"primary_score":	999908,
			"second_score":	122124
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	357,
			"primary_score":	999908,
			"second_score":	122123
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	359,
			"primary_score":	999908,
			"second_score":	122122
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	372,
			"primary_score":	999908,
			"second_score":	122137
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	375,
			"primary_score":	999908,
			"second_score":	122135
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	377,
			"primary_score":	1000000,
			"second_score":	122134
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	379,
			"primary_score":	1000000,
			"second_score":	122133
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	382,
			"primary_score":	1000000,
			"second_score":	122132
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	397,
			"primary_score":	999644,
			"second_score":	124724
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	398,
			"primary_score":	999644,
			"second_score":	124723
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	407,
			"primary_score":	999644,
			"second_score":	124721
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	411,
			"primary_score":	999644,
			"second_score":	124720
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	412,
			"primary_score":	999644,
			"second_score":	124719
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	421,
			"primary_score":	999644,
			"second_score":	124726
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	430,
			"primary_score":	999644,
			"second_score":	114823
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	431,
			"primary_score":	999644,
			"second_score":	114821
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	432,
			"primary_score":	999644,
			"second_score":	114819
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	434,
			"primary_score":	999644,
			"second_score":	114818
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	435,
			"primary_score":	999644,
			"second_score":	115136
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	436,
			"primary_score":	999644,
			"second_score":	114815
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	437,
			"primary_score":	999644,
			"second_score":	114812
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	440,
			"primary_score":	999644,
			"second_score":	115897
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	442,
			"primary_score":	999644,
			"second_score":	115896
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	443,
			"primary_score":	999644,
			"second_score":	115894
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	446,
			"primary_score":	999644,
			"second_score":	115892
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	456,
			"primary_score":	999644,
			"second_score":	15292
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	457,
			"primary_score":	999644,
			"second_score":	15290
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	458,
			"primary_score":	999644,
			"second_score":	15288
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	459,
			"primary_score":	999644,
			"second_score":	15286
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	460,
			"primary_score":	999644,
			"second_score":	17651
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	461,
			"primary_score":	999644,
			"second_score":	17649
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	494,
			"primary_score":	999884,
			"second_score":	123571
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	495,
			"primary_score":	999884,
			"second_score":	123570
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	496,
			"primary_score":	999884,
			"second_score":	123569
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	497,
			"primary_score":	999884,
			"second_score":	123568
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	499,
			"primary_score":	999884,
			"second_score":	123567
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	501,
			"primary_score":	999884,
			"second_score":	123566
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	582,
			"primary_score":	999884,
			"second_score":	123565
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	683,
			"primary_score":	999884,
			"second_score":	123564
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	701,
			"primary_score":	999884,
			"second_score":	123572
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1032,
			"primary_score":	999856,
			"second_score":	123660
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1033,
			"primary_score":	999856,
			"second_score":	123659
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1034,
			"primary_score":	999856,
			"second_score":	123658
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1035,
			"primary_score":	999856,
			"second_score":	123657
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1036,
			"primary_score":	999856,
			"second_score":	123656
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1037,
			"primary_score":	999856,
			"second_score":	123655
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1038,
			"primary_score":	999856,
			"second_score":	123654
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1039,
			"primary_score":	999856,
			"second_score":	123653
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1040,
			"primary_score":	999856,
			"second_score":	123652
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1041,
			"primary_score":	999856,
			"second_score":	123651
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1042,
			"primary_score":	999856,
			"second_score":	123650
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1043,
			"primary_score":	999856,
			"second_score":	123649
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1045,
			"primary_score":	999856,
			"second_score":	123648
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1046,
			"primary_score":	999857,
			"second_score":	123647
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1047,
			"primary_score":	999857,
			"second_score":	123646
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1048,
			"primary_score":	999857,
			"second_score":	123645
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1050,
			"primary_score":	999981,
			"second_score":	140715
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1054,
			"primary_score":	999981,
			"second_score":	140714
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1055,
			"primary_score":	999981,
			"second_score":	140713
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1056,
			"primary_score":	999981,
			"second_score":	140622
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1058,
			"primary_score":	999981,
			"second_score":	140621
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1063,
			"primary_score":	999981,
			"second_score":	140620
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1066,
			"primary_score":	999856,
			"second_score":	123644
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1067,
			"primary_score":	999857,
			"second_score":	123633
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1068,
			"primary_score":	999982,
			"second_score":	140590
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1070,
			"primary_score":	999857,
			"second_score":	123632
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1149,
			"primary_score":	999981,
			"second_score":	140729
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1155,
			"primary_score":	999644,
			"second_score":	121701
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1156,
			"primary_score":	999644,
			"second_score":	121700
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1157,
			"primary_score":	999644,
			"second_score":	121699
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1158,
			"primary_score":	999644,
			"second_score":	121698
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1159,
			"primary_score":	999644,
			"second_score":	121697
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1161,
			"primary_score":	999644,
			"second_score":	121696
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1169,
			"primary_score":	999644,
			"second_score":	121695
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1170,
			"primary_score":	999644,
			"second_score":	121694
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1172,
			"primary_score":	999644,
			"second_score":	121693
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1176,
			"primary_score":	999644,
			"second_score":	121692
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1177,
			"primary_score":	999644,
			"second_score":	121691
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1178,
			"primary_score":	999644,
			"second_score":	121690
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1179,
			"primary_score":	999644,
			"second_score":	119203
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1181,
			"primary_score":	999644,
			"second_score":	119202
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1182,
			"primary_score":	999644,
			"second_score":	119201
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1183,
			"primary_score":	999644,
			"second_score":	119200
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1184,
			"primary_score":	999644,
			"second_score":	119199
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1185,
			"primary_score":	999644,
			"second_score":	119198
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1187,
			"primary_score":	999644,
			"second_score":	119197
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1188,
			"primary_score":	999644,
			"second_score":	119196
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1189,
			"primary_score":	999644,
			"second_score":	119195
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1190,
			"primary_score":	999644,
			"second_score":	119194
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1193,
			"primary_score":	999644,
			"second_score":	119193
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1195,
			"primary_score":	999644,
			"second_score":	119192
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1197,
			"primary_score":	999644,
			"second_score":	118828
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1198,
			"primary_score":	999644,
			"second_score":	118827
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1199,
			"primary_score":	999644,
			"second_score":	118826
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1202,
			"primary_score":	999644,
			"second_score":	118825
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1210,
			"primary_score":	999644,
			"second_score":	118794
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1211,
			"primary_score":	999644,
			"second_score":	118793
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1212,
			"primary_score":	999644,
			"second_score":	118792
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1213,
			"primary_score":	999644,
			"second_score":	118791
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1214,
			"primary_score":	999644,
			"second_score":	118702
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1215,
			"primary_score":	999644,
			"second_score":	118683
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1216,
			"primary_score":	999644,
			"second_score":	118682
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1220,
			"primary_score":	999644,
			"second_score":	118681
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1223,
			"primary_score":	999644,
			"second_score":	118680
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1235,
			"primary_score":	999644,
			"second_score":	121703
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1237,
			"primary_score":	999644,
			"second_score":	121702
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1238,
			"primary_score":	999644,
			"second_score":	118679
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1242,
			"primary_score":	999644,
			"second_score":	118678
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1248,
			"primary_score":	999644,
			"second_score":	121704
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1510,
			"primary_score":	999644,
			"second_score":	103409
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1583,
			"primary_score":	999857,
			"second_score":	123663
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1584,
			"primary_score":	999857,
			"second_score":	123662
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1586,
			"primary_score":	999857,
			"second_score":	123661
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1600,
			"primary_score":	999857,
			"second_score":	123631
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	182,
			"primary_score":	999644,
			"second_score":	14748
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	183,
			"primary_score":	999644,
			"second_score":	14745
		}, {
			"file":	"Zend/zend_float.c",
			"line":	44,
			"primary_score":	999644,
			"second_score":	113525
		}, {
			"file":	"Zend/zend_float.c",
			"line":	45,
			"primary_score":	999644,
			"second_score":	113524
		}, {
			"file":	"Zend/zend_float.c",
			"line":	48,
			"primary_score":	999644,
			"second_score":	113522
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	35,
			"primary_score":	999644,
			"second_score":	3139
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	36,
			"primary_score":	999644,
			"second_score":	3138
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	37,
			"primary_score":	999644,
			"second_score":	3137
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	84,
			"primary_score":	999644,
			"second_score":	3140
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	132,
			"primary_score":	999644,
			"second_score":	115929
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	142,
			"primary_score":	999644,
			"second_score":	115928
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	143,
			"primary_score":	999839,
			"second_score":	122646
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	144,
			"primary_score":	999839,
			"second_score":	122638
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	147,
			"primary_score":	999644,
			"second_score":	115927
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	149,
			"primary_score":	999644,
			"second_score":	115926
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	150,
			"primary_score":	999644,
			"second_score":	118624
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	152,
			"primary_score":	999644,
			"second_score":	118623
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	153,
			"primary_score":	999644,
			"second_score":	118622
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	155,
			"primary_score":	999644,
			"second_score":	118621
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	156,
			"primary_score":	999644,
			"second_score":	118759
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	157,
			"primary_score":	999644,
			"second_score":	118620
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	158,
			"primary_score":	999644,
			"second_score":	118619
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	159,
			"primary_score":	999644,
			"second_score":	118618
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	176,
			"primary_score":	999644,
			"second_score":	118617
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	177,
			"primary_score":	999644,
			"second_score":	118616
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	178,
			"primary_score":	999644,
			"second_score":	118615
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	179,
			"primary_score":	999644,
			"second_score":	118614
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	181,
			"primary_score":	999644,
			"second_score":	118613
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	183,
			"primary_score":	999644,
			"second_score":	118612
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	184,
			"primary_score":	999644,
			"second_score":	118611
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	186,
			"primary_score":	999644,
			"second_score":	118610
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	187,
			"primary_score":	999644,
			"second_score":	118609
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	188,
			"primary_score":	999644,
			"second_score":	118608
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	195,
			"primary_score":	999839,
			"second_score":	122643
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	197,
			"primary_score":	999839,
			"second_score":	122642
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	202,
			"primary_score":	999839,
			"second_score":	122641
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	204,
			"primary_score":	999839,
			"second_score":	122640
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	205,
			"primary_score":	999839,
			"second_score":	122639
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	206,
			"primary_score":	999839,
			"second_score":	122854
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	207,
			"primary_score":	999839,
			"second_score":	122853
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	208,
			"primary_score":	999839,
			"second_score":	122852
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	210,
			"primary_score":	999839,
			"second_score":	122851
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	212,
			"primary_score":	999840,
			"second_score":	122850
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	213,
			"primary_score":	999840,
			"second_score":	122849
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	214,
			"primary_score":	999840,
			"second_score":	122848
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	232,
			"primary_score":	999839,
			"second_score":	122847
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	233,
			"primary_score":	999839,
			"second_score":	122846
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	234,
			"primary_score":	999839,
			"second_score":	122845
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	235,
			"primary_score":	999839,
			"second_score":	122844
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	237,
			"primary_score":	999839,
			"second_score":	122843
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	239,
			"primary_score":	999839,
			"second_score":	122842
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	240,
			"primary_score":	999839,
			"second_score":	122841
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	242,
			"primary_score":	999839,
			"second_score":	122840
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	243,
			"primary_score":	999839,
			"second_score":	122839
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	244,
			"primary_score":	999839,
			"second_score":	122838
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	251,
			"primary_score":	999644,
			"second_score":	115135
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	253,
			"primary_score":	999644,
			"second_score":	115134
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	264,
			"primary_score":	999644,
			"second_score":	115133
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	265,
			"primary_score":	999644,
			"second_score":	115132
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	266,
			"primary_score":	999644,
			"second_score":	115126
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	653,
			"primary_score":	999644,
			"second_score":	113334
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	655,
			"primary_score":	999644,
			"second_score":	113333
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	728,
			"primary_score":	999644,
			"second_score":	113332
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	182,
			"primary_score":	999644,
			"second_score":	115891
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	183,
			"primary_score":	999644,
			"second_score":	115930
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	189,
			"primary_score":	999644,
			"second_score":	115131
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	190,
			"primary_score":	999644,
			"second_score":	115130
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	191,
			"primary_score":	999644,
			"second_score":	115129
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	192,
			"primary_score":	999644,
			"second_score":	115128
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	193,
			"primary_score":	999644,
			"second_score":	115127
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	103,
			"primary_score":	999917,
			"second_score":	142608
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	197,
			"primary_score":	999644,
			"second_score":	133397
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	198,
			"primary_score":	999644,
			"second_score":	133396
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	199,
			"primary_score":	999644,
			"second_score":	133395
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	201,
			"primary_score":	999644,
			"second_score":	133394
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	203,
			"primary_score":	999644,
			"second_score":	133393
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	210,
			"primary_score":	999644,
			"second_score":	145552
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	212,
			"primary_score":	999644,
			"second_score":	133390
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	213,
			"primary_score":	999644,
			"second_score":	133283
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	215,
			"primary_score":	999644,
			"second_score":	133282
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	216,
			"primary_score":	999644,
			"second_score":	133281
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	217,
			"primary_score":	999644,
			"second_score":	133280
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	220,
			"primary_score":	999644,
			"second_score":	133278
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	243,
			"primary_score":	999644,
			"second_score":	143476
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	250,
			"primary_score":	999644,
			"second_score":	143475
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	251,
			"primary_score":	999644,
			"second_score":	143371
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	254,
			"primary_score":	999644,
			"second_score":	143370
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	255,
			"primary_score":	999644,
			"second_score":	143369
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	257,
			"primary_score":	999644,
			"second_score":	143368
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	258,
			"primary_score":	999644,
			"second_score":	143367
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	259,
			"primary_score":	999644,
			"second_score":	143362
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	260,
			"primary_score":	999644,
			"second_score":	143361
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	261,
			"primary_score":	999644,
			"second_score":	143357
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	262,
			"primary_score":	999644,
			"second_score":	145206
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	265,
			"primary_score":	999644,
			"second_score":	143355
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	266,
			"primary_score":	999644,
			"second_score":	145198
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	267,
			"primary_score":	999644,
			"second_score":	143344
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	268,
			"primary_score":	999644,
			"second_score":	143343
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	270,
			"primary_score":	999644,
			"second_score":	143341
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	271,
			"primary_score":	999644,
			"second_score":	143340
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	272,
			"primary_score":	999644,
			"second_score":	143338
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	376,
			"primary_score":	999644,
			"second_score":	126814
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	401,
			"primary_score":	999644,
			"second_score":	126813
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	415,
			"primary_score":	999644,
			"second_score":	126695
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	426,
			"primary_score":	999644,
			"second_score":	126676
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	476,
			"primary_score":	999644,
			"second_score":	47247
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	477,
			"primary_score":	999644,
			"second_score":	47246
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	479,
			"primary_score":	999644,
			"second_score":	47245
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	481,
			"primary_score":	999644,
			"second_score":	47244
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	482,
			"primary_score":	999644,
			"second_score":	47243
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	484,
			"primary_score":	999644,
			"second_score":	47227
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	486,
			"primary_score":	999644,
			"second_score":	47226
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	487,
			"primary_score":	999644,
			"second_score":	47225
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	488,
			"primary_score":	999644,
			"second_score":	47224
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	492,
			"primary_score":	999644,
			"second_score":	47223
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	493,
			"primary_score":	999644,
			"second_score":	47221
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	494,
			"primary_score":	999644,
			"second_score":	47220
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	496,
			"primary_score":	999644,
			"second_score":	47271
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	498,
			"primary_score":	999644,
			"second_score":	47219
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	499,
			"primary_score":	999644,
			"second_score":	51598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	501,
			"primary_score":	999644,
			"second_score":	47218
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	502,
			"primary_score":	999644,
			"second_score":	50185
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	505,
			"primary_score":	999644,
			"second_score":	47217
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	507,
			"primary_score":	999644,
			"second_score":	47216
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	508,
			"primary_score":	999644,
			"second_score":	47215
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	510,
			"primary_score":	999644,
			"second_score":	62017
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	512,
			"primary_score":	999644,
			"second_score":	47214
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	513,
			"primary_score":	999644,
			"second_score":	47213
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	515,
			"primary_score":	999644,
			"second_score":	47212
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	516,
			"primary_score":	999644,
			"second_score":	47211
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	518,
			"primary_score":	999644,
			"second_score":	47207
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	519,
			"primary_score":	999644,
			"second_score":	47206
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	521,
			"primary_score":	999644,
			"second_score":	47205
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	522,
			"primary_score":	999644,
			"second_score":	47204
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	523,
			"primary_score":	999644,
			"second_score":	47202
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	524,
			"primary_score":	999644,
			"second_score":	47201
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	526,
			"primary_score":	999644,
			"second_score":	47276
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	534,
			"primary_score":	999644,
			"second_score":	3133
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	536,
			"primary_score":	999644,
			"second_score":	3132
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	538,
			"primary_score":	999644,
			"second_score":	3131
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	540,
			"primary_score":	999644,
			"second_score":	3130
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	541,
			"primary_score":	999644,
			"second_score":	3129
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	542,
			"primary_score":	999644,
			"second_score":	3122
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	543,
			"primary_score":	999644,
			"second_score":	3121
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	544,
			"primary_score":	999644,
			"second_score":	3120
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	545,
			"primary_score":	999644,
			"second_score":	3257
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	547,
			"primary_score":	999644,
			"second_score":	3119
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	548,
			"primary_score":	999644,
			"second_score":	3118
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	550,
			"primary_score":	999644,
			"second_score":	3117
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	552,
			"primary_score":	999644,
			"second_score":	3116
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	553,
			"primary_score":	999644,
			"second_score":	3115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	556,
			"primary_score":	999644,
			"second_score":	3114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	599,
			"primary_score":	999644,
			"second_score":	3611
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	601,
			"primary_score":	999644,
			"second_score":	3610
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	602,
			"primary_score":	999644,
			"second_score":	3608
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	603,
			"primary_score":	999644,
			"second_score":	3924
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	605,
			"primary_score":	999644,
			"second_score":	3607
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	607,
			"primary_score":	999644,
			"second_score":	3606
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	608,
			"primary_score":	999644,
			"second_score":	3605
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	610,
			"primary_score":	999644,
			"second_score":	3604
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	611,
			"primary_score":	999644,
			"second_score":	52792
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	616,
			"primary_score":	999644,
			"second_score":	3603
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	617,
			"primary_score":	999644,
			"second_score":	52734
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	620,
			"primary_score":	999644,
			"second_score":	3602
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	622,
			"primary_score":	999644,
			"second_score":	3601
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	623,
			"primary_score":	999644,
			"second_score":	3600
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	625,
			"primary_score":	999644,
			"second_score":	50148
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	627,
			"primary_score":	999644,
			"second_score":	3599
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	628,
			"primary_score":	999644,
			"second_score":	3598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	630,
			"primary_score":	999644,
			"second_score":	3597
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	631,
			"primary_score":	999644,
			"second_score":	3596
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	633,
			"primary_score":	999644,
			"second_score":	3594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	634,
			"primary_score":	999644,
			"second_score":	50141
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	636,
			"primary_score":	999644,
			"second_score":	3593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	637,
			"primary_score":	999644,
			"second_score":	3592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	639,
			"primary_score":	999644,
			"second_score":	3591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	640,
			"primary_score":	999644,
			"second_score":	3590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	642,
			"primary_score":	999644,
			"second_score":	3589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	665,
			"primary_score":	999644,
			"second_score":	103379
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	667,
			"primary_score":	999644,
			"second_score":	103378
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	669,
			"primary_score":	999644,
			"second_score":	103377
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	670,
			"primary_score":	999644,
			"second_score":	103376
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	671,
			"primary_score":	999644,
			"second_score":	50160
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	672,
			"primary_score":	999644,
			"second_score":	47192
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	675,
			"primary_score":	999644,
			"second_score":	47191
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	676,
			"primary_score":	999644,
			"second_score":	47190
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	679,
			"primary_score":	999644,
			"second_score":	47189
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	693,
			"primary_score":	999644,
			"second_score":	119337
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	695,
			"primary_score":	999644,
			"second_score":	119336
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	119335
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	698,
			"primary_score":	999644,
			"second_score":	119333
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	699,
			"primary_score":	999644,
			"second_score":	119332
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	711,
			"primary_score":	999644,
			"second_score":	119331
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	717,
			"primary_score":	999644,
			"second_score":	6024
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	719,
			"primary_score":	999644,
			"second_score":	6023
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	721,
			"primary_score":	999644,
			"second_score":	6022
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	722,
			"primary_score":	999644,
			"second_score":	6020
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	723,
			"primary_score":	999644,
			"second_score":	6019
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	724,
			"primary_score":	999644,
			"second_score":	3575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	726,
			"primary_score":	999644,
			"second_score":	3572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	727,
			"primary_score":	999644,
			"second_score":	3612
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	729,
			"primary_score":	999644,
			"second_score":	3571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	731,
			"primary_score":	999644,
			"second_score":	3570
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	735,
			"primary_score":	999644,
			"second_score":	3569
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	775,
			"primary_score":	999644,
			"second_score":	114443
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	777,
			"primary_score":	999644,
			"second_score":	114442
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	779,
			"primary_score":	999644,
			"second_score":	119503
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	780,
			"primary_score":	999644,
			"second_score":	114439
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	781,
			"primary_score":	999644,
			"second_score":	114438
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	782,
			"primary_score":	999644,
			"second_score":	113712
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	784,
			"primary_score":	999644,
			"second_score":	113710
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	785,
			"primary_score":	999644,
			"second_score":	113709
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	786,
			"primary_score":	999644,
			"second_score":	113708
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	787,
			"primary_score":	999644,
			"second_score":	113950
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	789,
			"primary_score":	999644,
			"second_score":	113707
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	790,
			"primary_score":	999644,
			"second_score":	113706
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	793,
			"primary_score":	999644,
			"second_score":	119442
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	898,
			"primary_score":	999644,
			"second_score":	97488
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	899,
			"primary_score":	999644,
			"second_score":	97487
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	900,
			"primary_score":	999644,
			"second_score":	97486
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	902,
			"primary_score":	999644,
			"second_score":	97485
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	904,
			"primary_score":	999644,
			"second_score":	97484
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	905,
			"primary_score":	999644,
			"second_score":	97470
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	907,
			"primary_score":	999644,
			"second_score":	97469
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	908,
			"primary_score":	999644,
			"second_score":	97468
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	909,
			"primary_score":	999644,
			"second_score":	97465
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	911,
			"primary_score":	999644,
			"second_score":	97464
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	912,
			"primary_score":	999644,
			"second_score":	97463
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	914,
			"primary_score":	999644,
			"second_score":	97466
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	916,
			"primary_score":	999644,
			"second_score":	138253
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	948,
			"primary_score":	999644,
			"second_score":	64575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	949,
			"primary_score":	999644,
			"second_score":	64574
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	950,
			"primary_score":	999644,
			"second_score":	64573
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	952,
			"primary_score":	999644,
			"second_score":	64572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	954,
			"primary_score":	999644,
			"second_score":	64571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	955,
			"primary_score":	999644,
			"second_score":	64562
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	957,
			"primary_score":	999644,
			"second_score":	64561
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	958,
			"primary_score":	999644,
			"second_score":	64560
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	959,
			"primary_score":	999644,
			"second_score":	64559
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	961,
			"primary_score":	999644,
			"second_score":	64558
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	997,
			"primary_score":	999644,
			"second_score":	113885
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	998,
			"primary_score":	999644,
			"second_score":	113884
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1000,
			"primary_score":	999644,
			"second_score":	113883
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1002,
			"primary_score":	999644,
			"second_score":	113882
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1004,
			"primary_score":	999644,
			"second_score":	113881
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1005,
			"primary_score":	999644,
			"second_score":	113880
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1006,
			"primary_score":	999644,
			"second_score":	113879
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1007,
			"primary_score":	999644,
			"second_score":	113878
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1008,
			"primary_score":	999644,
			"second_score":	113877
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1038,
			"primary_score":	999644,
			"second_score":	119440
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1040,
			"primary_score":	999644,
			"second_score":	119439
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	263,
			"primary_score":	999644,
			"second_score":	47242
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	266,
			"primary_score":	999644,
			"second_score":	47241
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	267,
			"primary_score":	999644,
			"second_score":	47240
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	268,
			"primary_score":	999644,
			"second_score":	47239
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	269,
			"primary_score":	999644,
			"second_score":	47238
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	270,
			"primary_score":	999644,
			"second_score":	47237
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	271,
			"primary_score":	999644,
			"second_score":	47236
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	272,
			"primary_score":	999644,
			"second_score":	47235
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	273,
			"primary_score":	999644,
			"second_score":	47234
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	274,
			"primary_score":	999644,
			"second_score":	47233
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	276,
			"primary_score":	999644,
			"second_score":	47232
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	278,
			"primary_score":	999644,
			"second_score":	48691
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	279,
			"primary_score":	999644,
			"second_score":	47446
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	280,
			"primary_score":	999644,
			"second_score":	47445
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	281,
			"primary_score":	999644,
			"second_score":	47444
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	282,
			"primary_score":	999644,
			"second_score":	47231
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	283,
			"primary_score":	999644,
			"second_score":	47230
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	287,
			"primary_score":	999644,
			"second_score":	47228
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	39,
			"primary_score":	999644,
			"second_score":	3574
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	40,
			"primary_score":	999644,
			"second_score":	3614
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	42,
			"primary_score":	999644,
			"second_score":	3573
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	3243
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	106,
			"primary_score":	999644,
			"second_score":	3216
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	107,
			"primary_score":	999644,
			"second_score":	3215
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	121,
			"primary_score":	999644,
			"second_score":	113324
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	127,
			"primary_score":	999644,
			"second_score":	113323
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	226,
			"primary_score":	999644,
			"second_score":	6025
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	384,
			"primary_score":	999644,
			"second_score":	97491
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	385,
			"primary_score":	999644,
			"second_score":	97490
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	387,
			"primary_score":	999644,
			"second_score":	97489
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	388,
			"primary_score":	999644,
			"second_score":	97462
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	392,
			"primary_score":	999644,
			"second_score":	97461
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	395,
			"primary_score":	999644,
			"second_score":	97460
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3151,
			"primary_score":	999644,
			"second_score":	133683
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3153,
			"primary_score":	999644,
			"second_score":	133682
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3155,
			"primary_score":	999644,
			"second_score":	133681
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3157,
			"primary_score":	999644,
			"second_score":	133680
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3214,
			"primary_score":	999644,
			"second_score":	144926
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3217,
			"primary_score":	999644,
			"second_score":	144925
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3220,
			"primary_score":	999644,
			"second_score":	144924
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3222,
			"primary_score":	999644,
			"second_score":	144923
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3223,
			"primary_score":	999644,
			"second_score":	144922
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3224,
			"primary_score":	999644,
			"second_score":	144921
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3226,
			"primary_score":	999644,
			"second_score":	144920
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3228,
			"primary_score":	999644,
			"second_score":	144919
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3231,
			"primary_score":	999644,
			"second_score":	144918
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3232,
			"primary_score":	999644,
			"second_score":	144917
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3233,
			"primary_score":	999644,
			"second_score":	144916
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3245,
			"primary_score":	999644,
			"second_score":	144915
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3246,
			"primary_score":	999644,
			"second_score":	144914
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3247,
			"primary_score":	999644,
			"second_score":	144913
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3250,
			"primary_score":	999644,
			"second_score":	144912
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3251,
			"primary_score":	999644,
			"second_score":	144911
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3252,
			"primary_score":	999644,
			"second_score":	144910
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3258,
			"primary_score":	999644,
			"second_score":	144909
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3262,
			"primary_score":	999644,
			"second_score":	144908
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3267,
			"primary_score":	999644,
			"second_score":	144907
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3269,
			"primary_score":	999644,
			"second_score":	144906
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3271,
			"primary_score":	999644,
			"second_score":	144905
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3272,
			"primary_score":	999644,
			"second_score":	144904
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3273,
			"primary_score":	999644,
			"second_score":	144903
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3274,
			"primary_score":	999644,
			"second_score":	144902
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3281,
			"primary_score":	999644,
			"second_score":	144901
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3282,
			"primary_score":	999644,
			"second_score":	144900
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3284,
			"primary_score":	999644,
			"second_score":	144899
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3294,
			"primary_score":	999644,
			"second_score":	133703
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3297,
			"primary_score":	999644,
			"second_score":	133702
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3362,
			"primary_score":	999644,
			"second_score":	133701
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3364,
			"primary_score":	999644,
			"second_score":	133700
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3376,
			"primary_score":	999644,
			"second_score":	133699
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3377,
			"primary_score":	999644,
			"second_score":	133792
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3382,
			"primary_score":	999644,
			"second_score":	133698
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3384,
			"primary_score":	999644,
			"second_score":	133767
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3385,
			"primary_score":	999644,
			"second_score":	133766
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3388,
			"primary_score":	999644,
			"second_score":	133697
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3390,
			"primary_score":	999644,
			"second_score":	133696
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3391,
			"primary_score":	999644,
			"second_score":	133695
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3395,
			"primary_score":	999644,
			"second_score":	133880
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3396,
			"primary_score":	999644,
			"second_score":	133879
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3401,
			"primary_score":	999644,
			"second_score":	133694
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3402,
			"primary_score":	999644,
			"second_score":	133693
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3403,
			"primary_score":	999644,
			"second_score":	133908
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3404,
			"primary_score":	999644,
			"second_score":	133692
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3405,
			"primary_score":	999644,
			"second_score":	133691
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3407,
			"primary_score":	999644,
			"second_score":	133726
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3409,
			"primary_score":	999644,
			"second_score":	133725
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3410,
			"primary_score":	999644,
			"second_score":	133724
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3413,
			"primary_score":	999644,
			"second_score":	133690
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3414,
			"primary_score":	999644,
			"second_score":	133689
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3418,
			"primary_score":	999644,
			"second_score":	133873
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3422,
			"primary_score":	999644,
			"second_score":	133872
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3425,
			"primary_score":	999644,
			"second_score":	133871
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3426,
			"primary_score":	999644,
			"second_score":	133870
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3428,
			"primary_score":	999644,
			"second_score":	133869
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3429,
			"primary_score":	999644,
			"second_score":	133868
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3431,
			"primary_score":	999644,
			"second_score":	133867
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3439,
			"primary_score":	999644,
			"second_score":	133791
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3441,
			"primary_score":	999644,
			"second_score":	133790
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3459,
			"primary_score":	999644,
			"second_score":	133723
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3462,
			"primary_score":	999644,
			"second_score":	133722
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3463,
			"primary_score":	999644,
			"second_score":	133721
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3467,
			"primary_score":	999644,
			"second_score":	133720
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3468,
			"primary_score":	999644,
			"second_score":	133714
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3472,
			"primary_score":	999644,
			"second_score":	133902
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3473,
			"primary_score":	999644,
			"second_score":	133898
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3477,
			"primary_score":	999644,
			"second_score":	133786
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3478,
			"primary_score":	999644,
			"second_score":	133784
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3482,
			"primary_score":	999644,
			"second_score":	135689
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3483,
			"primary_score":	999644,
			"second_score":	135688
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3492,
			"primary_score":	999644,
			"second_score":	133810
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3493,
			"primary_score":	999644,
			"second_score":	133808
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3502,
			"primary_score":	999924,
			"second_score":	140741
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3503,
			"primary_score":	999924,
			"second_score":	139275
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3592,
			"primary_score":	999644,
			"second_score":	133834
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3593,
			"primary_score":	999644,
			"second_score":	133832
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3732,
			"primary_score":	999653,
			"second_score":	124719
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3733,
			"primary_score":	999653,
			"second_score":	124711
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3862,
			"primary_score":	999924,
			"second_score":	140765
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3863,
			"primary_score":	999924,
			"second_score":	140763
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3887,
			"primary_score":	999924,
			"second_score":	143276
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3888,
			"primary_score":	999924,
			"second_score":	142358
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3892,
			"primary_score":	999924,
			"second_score":	140802
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3893,
			"primary_score":	999924,
			"second_score":	140787
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3907,
			"primary_score":	999924,
			"second_score":	144706
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3908,
			"primary_score":	999924,
			"second_score":	144704
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3932,
			"primary_score":	999990,
			"second_score":	143714
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3933,
			"primary_score":	999990,
			"second_score":	143298
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4142,
			"primary_score":	999644,
			"second_score":	134546
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4143,
			"primary_score":	999644,
			"second_score":	134545
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4147,
			"primary_score":	999644,
			"second_score":	135185
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4148,
			"primary_score":	999644,
			"second_score":	135184
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4152,
			"primary_score":	999644,
			"second_score":	137363
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4153,
			"primary_score":	999644,
			"second_score":	137243
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4157,
			"primary_score":	999644,
			"second_score":	132914
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4158,
			"primary_score":	999644,
			"second_score":	132832
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4167,
			"primary_score":	999644,
			"second_score":	128789
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4168,
			"primary_score":	999644,
			"second_score":	128675
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4172,
			"primary_score":	999644,
			"second_score":	134656
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4173,
			"primary_score":	999644,
			"second_score":	134574
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4227,
			"primary_score":	999991,
			"second_score":	141887
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4228,
			"primary_score":	999991,
			"second_score":	141886
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4322,
			"primary_score":	999991,
			"second_score":	141910
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4323,
			"primary_score":	999991,
			"second_score":	141909
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4342,
			"primary_score":	999925,
			"second_score":	142083
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4343,
			"primary_score":	999925,
			"second_score":	142082
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4352,
			"primary_score":	999925,
			"second_score":	142106
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4353,
			"primary_score":	999925,
			"second_score":	142105
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4397,
			"primary_score":	999991,
			"second_score":	141609
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4398,
			"primary_score":	999991,
			"second_score":	141047
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4412,
			"primary_score":	999644,
			"second_score":	126225
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4413,
			"primary_score":	999644,
			"second_score":	126208
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4417,
			"primary_score":	999644,
			"second_score":	142404
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4418,
			"primary_score":	999644,
			"second_score":	142192
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4457,
			"primary_score":	999729,
			"second_score":	129931
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4458,
			"primary_score":	999729,
			"second_score":	129793
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4477,
			"primary_score":	999862,
			"second_score":	137808
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4478,
			"primary_score":	999862,
			"second_score":	137642
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4482,
			"primary_score":	999862,
			"second_score":	137148
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4483,
			"primary_score":	999862,
			"second_score":	137079
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4547,
			"primary_score":	999983,
			"second_score":	126558
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4548,
			"primary_score":	999983,
			"second_score":	126541
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4627,
			"primary_score":	999945,
			"second_score":	128053
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4628,
			"primary_score":	999945,
			"second_score":	127973
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4732,
			"primary_score":	999644,
			"second_score":	126310
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4733,
			"primary_score":	999644,
			"second_score":	126309
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4737,
			"primary_score":	999644,
			"second_score":	129757
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4738,
			"primary_score":	999644,
			"second_score":	129729
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4742,
			"primary_score":	999644,
			"second_score":	126930
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4743,
			"primary_score":	999644,
			"second_score":	126888
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4747,
			"primary_score":	999644,
			"second_score":	126500
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4748,
			"primary_score":	999644,
			"second_score":	126376
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4827,
			"primary_score":	999644,
			"second_score":	136391
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4828,
			"primary_score":	999644,
			"second_score":	136390
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4892,
			"primary_score":	999644,
			"second_score":	135607
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4893,
			"primary_score":	999644,
			"second_score":	135246
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4897,
			"primary_score":	999644,
			"second_score":	134502
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4898,
			"primary_score":	999644,
			"second_score":	134387
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4977,
			"primary_score":	999857,
			"second_score":	138079
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4978,
			"primary_score":	999857,
			"second_score":	138078
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4992,
			"primary_score":	999987,
			"second_score":	143737
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4993,
			"primary_score":	999987,
			"second_score":	143736
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5007,
			"primary_score":	999861,
			"second_score":	138050
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5008,
			"primary_score":	999861,
			"second_score":	137830
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5077,
			"primary_score":	999866,
			"second_score":	137171
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5078,
			"primary_score":	999866,
			"second_score":	137170
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5082,
			"primary_score":	999792,
			"second_score":	130062
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5083,
			"primary_score":	999792,
			"second_score":	130061
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5092,
			"primary_score":	999644,
			"second_score":	136437
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5093,
			"primary_score":	999644,
			"second_score":	136436
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5142,
			"primary_score":	999991,
			"second_score":	141632
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5143,
			"primary_score":	999991,
			"second_score":	141631
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5197,
			"primary_score":	999644,
			"second_score":	137185
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5198,
			"primary_score":	999644,
			"second_score":	137066
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5212,
			"primary_score":	999644,
			"second_score":	136414
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5213,
			"primary_score":	999644,
			"second_score":	136413
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5257,
			"primary_score":	999644,
			"second_score":	134171
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5258,
			"primary_score":	999644,
			"second_score":	134170
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5262,
			"primary_score":	999644,
			"second_score":	126519
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5263,
			"primary_score":	999644,
			"second_score":	126518
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5267,
			"primary_score":	999644,
			"second_score":	134232
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5268,
			"primary_score":	999644,
			"second_score":	134193
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5278,
			"primary_score":	999982,
			"second_score":	126689
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5279,
			"primary_score":	999982,
			"second_score":	126605
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5280,
			"primary_score":	999982,
			"second_score":	126601
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5284,
			"primary_score":	999927,
			"second_score":	127316
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5285,
			"primary_score":	999927,
			"second_score":	127289
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5289,
			"primary_score":	999927,
			"second_score":	126857
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5290,
			"primary_score":	999927,
			"second_score":	126830
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5294,
			"primary_score":	999927,
			"second_score":	126750
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5295,
			"primary_score":	999927,
			"second_score":	126719
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5299,
			"primary_score":	999644,
			"second_score":	134261
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5300,
			"primary_score":	999644,
			"second_score":	134260
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5309,
			"primary_score":	999927,
			"second_score":	126779
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5310,
			"primary_score":	999927,
			"second_score":	126778
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5354,
			"primary_score":	999995,
			"second_score":	126802
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5355,
			"primary_score":	999995,
			"second_score":	126801
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5399,
			"primary_score":	999724,
			"second_score":	125471
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5400,
			"primary_score":	999724,
			"second_score":	125470
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5409,
			"primary_score":	999644,
			"second_score":	134326
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5410,
			"primary_score":	999644,
			"second_score":	134289
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5414,
			"primary_score":	999724,
			"second_score":	125495
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5415,
			"primary_score":	999724,
			"second_score":	125493
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5439,
			"primary_score":	999724,
			"second_score":	125656
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5440,
			"primary_score":	999724,
			"second_score":	125556
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5444,
			"primary_score":	999724,
			"second_score":	125679
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5445,
			"primary_score":	999724,
			"second_score":	125678
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5464,
			"primary_score":	999927,
			"second_score":	126880
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5465,
			"primary_score":	999927,
			"second_score":	126879
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5489,
			"primary_score":	999927,
			"second_score":	127123
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5490,
			"primary_score":	999927,
			"second_score":	126944
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5494,
			"primary_score":	999927,
			"second_score":	127146
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5495,
			"primary_score":	999927,
			"second_score":	127145
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5717,
			"primary_score":	999644,
			"second_score":	133713
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5719,
			"primary_score":	999644,
			"second_score":	133712
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5720,
			"primary_score":	999644,
			"second_score":	133711
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5721,
			"primary_score":	999644,
			"second_score":	133710
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5723,
			"primary_score":	999644,
			"second_score":	133709
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5730,
			"primary_score":	999644,
			"second_score":	133708
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5732,
			"primary_score":	999644,
			"second_score":	133707
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5733,
			"primary_score":	999644,
			"second_score":	133706
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5734,
			"primary_score":	999644,
			"second_score":	133823
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5736,
			"primary_score":	999644,
			"second_score":	133705
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5738,
			"primary_score":	999644,
			"second_score":	133704
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5882,
			"primary_score":	999644,
			"second_score":	133688
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5907,
			"primary_score":	999644,
			"second_score":	133687
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5908,
			"primary_score":	999644,
			"second_score":	133686
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5909,
			"primary_score":	999644,
			"second_score":	133685
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5911,
			"primary_score":	999644,
			"second_score":	133684
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5913,
			"primary_score":	999644,
			"second_score":	133679
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5916,
			"primary_score":	999644,
			"second_score":	133678
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5920,
			"primary_score":	999644,
			"second_score":	133677
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5923,
			"primary_score":	999644,
			"second_score":	133676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	127,
			"primary_score":	999807,
			"second_score":	127429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	128,
			"primary_score":	999807,
			"second_score":	127403
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	135,
			"primary_score":	999807,
			"second_score":	127239
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	136,
			"primary_score":	999807,
			"second_score":	127238
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	137,
			"primary_score":	999807,
			"second_score":	127234
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	138,
			"primary_score":	999807,
			"second_score":	127233
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	146,
			"primary_score":	999644,
			"second_score":	121323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	161,
			"primary_score":	999644,
			"second_score":	118589
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	165,
			"primary_score":	999644,
			"second_score":	118588
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	166,
			"primary_score":	999644,
			"second_score":	118584
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	197,
			"primary_score":	999644,
			"second_score":	133431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	198,
			"primary_score":	999644,
			"second_score":	133430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	199,
			"primary_score":	999644,
			"second_score":	133429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	200,
			"primary_score":	999644,
			"second_score":	133428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	201,
			"primary_score":	999644,
			"second_score":	133427
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	202,
			"primary_score":	999644,
			"second_score":	133426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	204,
			"primary_score":	999644,
			"second_score":	133425
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	205,
			"primary_score":	999644,
			"second_score":	133421
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	207,
			"primary_score":	999644,
			"second_score":	133420
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	208,
			"primary_score":	999644,
			"second_score":	133419
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	209,
			"primary_score":	999644,
			"second_score":	133418
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	210,
			"primary_score":	999644,
			"second_score":	133417
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	212,
			"primary_score":	999644,
			"second_score":	133415
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	216,
			"primary_score":	999644,
			"second_score":	133414
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	217,
			"primary_score":	999644,
			"second_score":	133413
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	218,
			"primary_score":	999644,
			"second_score":	133412
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	219,
			"primary_score":	999644,
			"second_score":	133411
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	220,
			"primary_score":	999644,
			"second_score":	133410
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	221,
			"primary_score":	999644,
			"second_score":	133409
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	222,
			"primary_score":	999644,
			"second_score":	133408
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	224,
			"primary_score":	999644,
			"second_score":	133407
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	233,
			"primary_score":	999644,
			"second_score":	133276
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	235,
			"primary_score":	999644,
			"second_score":	133200
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	236,
			"primary_score":	999644,
			"second_score":	133199
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	500,
			"primary_score":	999644,
			"second_score":	145185
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	501,
			"primary_score":	999644,
			"second_score":	145184
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	502,
			"primary_score":	999644,
			"second_score":	145183
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	507,
			"primary_score":	999644,
			"second_score":	145182
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	508,
			"primary_score":	999644,
			"second_score":	145181
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	543,
			"primary_score":	999644,
			"second_score":	145180
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	544,
			"primary_score":	999644,
			"second_score":	144936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	545,
			"primary_score":	999644,
			"second_score":	144935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	546,
			"primary_score":	999644,
			"second_score":	144934
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	547,
			"primary_score":	999644,
			"second_score":	144927
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	548,
			"primary_score":	999644,
			"second_score":	133675
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	549,
			"primary_score":	999644,
			"second_score":	133628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	550,
			"primary_score":	999644,
			"second_score":	133627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	553,
			"primary_score":	999644,
			"second_score":	133626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	556,
			"primary_score":	999644,
			"second_score":	133625
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	557,
			"primary_score":	999644,
			"second_score":	133624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	558,
			"primary_score":	999644,
			"second_score":	133623
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	559,
			"primary_score":	999644,
			"second_score":	133622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	560,
			"primary_score":	999644,
			"second_score":	133437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	566,
			"primary_score":	999644,
			"second_score":	133432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	567,
			"primary_score":	999644,
			"second_score":	133406
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	614,
			"primary_score":	999644,
			"second_score":	121431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	615,
			"primary_score":	999644,
			"second_score":	121430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	618,
			"primary_score":	999644,
			"second_score":	121429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	623,
			"primary_score":	999644,
			"second_score":	121428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	626,
			"primary_score":	999644,
			"second_score":	121333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	628,
			"primary_score":	999644,
			"second_score":	121332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	629,
			"primary_score":	999644,
			"second_score":	121331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	631,
			"primary_score":	999644,
			"second_score":	121330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	632,
			"primary_score":	999644,
			"second_score":	121329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	634,
			"primary_score":	999644,
			"second_score":	121328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	651,
			"primary_score":	999644,
			"second_score":	121327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	653,
			"primary_score":	999644,
			"second_score":	121322
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	654,
			"primary_score":	999644,
			"second_score":	120886
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	655,
			"primary_score":	999644,
			"second_score":	120885
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	656,
			"primary_score":	999644,
			"second_score":	120884
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	684,
			"primary_score":	999644,
			"second_score":	121689
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	685,
			"primary_score":	999644,
			"second_score":	121688
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	686,
			"primary_score":	999644,
			"second_score":	121584
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	687,
			"primary_score":	999644,
			"second_score":	121583
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	688,
			"primary_score":	999644,
			"second_score":	121582
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	689,
			"primary_score":	999644,
			"second_score":	121581
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	690,
			"primary_score":	999644,
			"second_score":	121580
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	692,
			"primary_score":	999644,
			"second_score":	121579
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	121578
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	699,
			"primary_score":	999644,
			"second_score":	121577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	700,
			"primary_score":	999644,
			"second_score":	121576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	701,
			"primary_score":	999644,
			"second_score":	121460
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	702,
			"primary_score":	999644,
			"second_score":	121458
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	704,
			"primary_score":	999644,
			"second_score":	121457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	705,
			"primary_score":	999644,
			"second_score":	121432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	709,
			"primary_score":	999644,
			"second_score":	120883
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	711,
			"primary_score":	999644,
			"second_score":	120882
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	712,
			"primary_score":	999644,
			"second_score":	120881
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	713,
			"primary_score":	999644,
			"second_score":	120637
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	714,
			"primary_score":	999644,
			"second_score":	120636
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	715,
			"primary_score":	999644,
			"second_score":	120635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	716,
			"primary_score":	999644,
			"second_score":	120628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	717,
			"primary_score":	999644,
			"second_score":	120627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	719,
			"primary_score":	999644,
			"second_score":	119485
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	724,
			"primary_score":	999644,
			"second_score":	119484
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	729,
			"primary_score":	999644,
			"second_score":	119483
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	730,
			"primary_score":	999644,
			"second_score":	119435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	731,
			"primary_score":	999644,
			"second_score":	119434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	732,
			"primary_score":	999644,
			"second_score":	119263
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	733,
			"primary_score":	999644,
			"second_score":	119258
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	736,
			"primary_score":	999644,
			"second_score":	119257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	737,
			"primary_score":	999644,
			"second_score":	119231
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	738,
			"primary_score":	999644,
			"second_score":	119205
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	739,
			"primary_score":	999644,
			"second_score":	119204
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	848,
			"primary_score":	999644,
			"second_score":	136597
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	849,
			"primary_score":	999644,
			"second_score":	136596
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	851,
			"primary_score":	999644,
			"second_score":	136595
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	854,
			"primary_score":	999644,
			"second_score":	136479
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	855,
			"primary_score":	999644,
			"second_score":	136478
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	856,
			"primary_score":	999644,
			"second_score":	136477
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	857,
			"primary_score":	999644,
			"second_score":	136476
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	858,
			"primary_score":	999644,
			"second_score":	129311
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	859,
			"primary_score":	999644,
			"second_score":	129310
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	864,
			"primary_score":	999644,
			"second_score":	129309
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	867,
			"primary_score":	999644,
			"second_score":	129308
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	868,
			"primary_score":	999644,
			"second_score":	129307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	939,
			"primary_score":	999644,
			"second_score":	136475
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	942,
			"primary_score":	999644,
			"second_score":	136474
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	943,
			"primary_score":	999644,
			"second_score":	132182
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	945,
			"primary_score":	999644,
			"second_score":	136473
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	947,
			"primary_score":	999644,
			"second_score":	136472
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	948,
			"primary_score":	999644,
			"second_score":	136471
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	960,
			"primary_score":	999644,
			"second_score":	133761
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	963,
			"primary_score":	999644,
			"second_score":	133760
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	968,
			"primary_score":	999644,
			"second_score":	133759
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	969,
			"primary_score":	999644,
			"second_score":	133758
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	970,
			"primary_score":	999644,
			"second_score":	133757
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	971,
			"primary_score":	999644,
			"second_score":	133947
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	972,
			"primary_score":	999644,
			"second_score":	133946
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	973,
			"primary_score":	999644,
			"second_score":	133945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	975,
			"primary_score":	999927,
			"second_score":	127259
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	989,
			"primary_score":	999644,
			"second_score":	144861
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	996,
			"primary_score":	999644,
			"second_score":	144860
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	997,
			"primary_score":	999644,
			"second_score":	144859
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1010,
			"primary_score":	999644,
			"second_score":	144858
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1045,
			"primary_score":	999644,
			"second_score":	144857
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1046,
			"primary_score":	999644,
			"second_score":	144856
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1047,
			"primary_score":	999644,
			"second_score":	144853
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1048,
			"primary_score":	999644,
			"second_score":	144852
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1049,
			"primary_score":	999644,
			"second_score":	144851
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1050,
			"primary_score":	999644,
			"second_score":	144850
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1051,
			"primary_score":	999644,
			"second_score":	144849
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1052,
			"primary_score":	999644,
			"second_score":	144848
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1053,
			"primary_score":	999644,
			"second_score":	144847
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1054,
			"primary_score":	999644,
			"second_score":	144846
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1064,
			"primary_score":	999644,
			"second_score":	133743
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1066,
			"primary_score":	999644,
			"second_score":	133742
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1067,
			"primary_score":	999644,
			"second_score":	133741
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1068,
			"primary_score":	999644,
			"second_score":	133740
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1128,
			"primary_score":	999644,
			"second_score":	133745
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1129,
			"primary_score":	999644,
			"second_score":	133744
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1132,
			"primary_score":	999644,
			"second_score":	144844
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1133,
			"primary_score":	999644,
			"second_score":	144843
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1134,
			"primary_score":	999644,
			"second_score":	144842
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1137,
			"primary_score":	999644,
			"second_score":	144841
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1138,
			"primary_score":	999644,
			"second_score":	144840
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1437,
			"primary_score":	999644,
			"second_score":	144838
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1438,
			"primary_score":	999644,
			"second_score":	144837
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1439,
			"primary_score":	999644,
			"second_score":	144836
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1440,
			"primary_score":	999644,
			"second_score":	144835
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1442,
			"primary_score":	999644,
			"second_score":	144834
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1443,
			"primary_score":	999644,
			"second_score":	144833
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1444,
			"primary_score":	999644,
			"second_score":	144832
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1445,
			"primary_score":	999644,
			"second_score":	144831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1447,
			"primary_score":	999644,
			"second_score":	144830
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1448,
			"primary_score":	999644,
			"second_score":	144829
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1449,
			"primary_score":	999648,
			"second_score":	144828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1450,
			"primary_score":	999648,
			"second_score":	144827
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1452,
			"primary_score":	999644,
			"second_score":	142978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1453,
			"primary_score":	999644,
			"second_score":	142977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1455,
			"primary_score":	999644,
			"second_score":	144826
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1457,
			"primary_score":	999644,
			"second_score":	144825
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1458,
			"primary_score":	999644,
			"second_score":	144824
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1460,
			"primary_score":	999644,
			"second_score":	144823
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1462,
			"primary_score":	999644,
			"second_score":	144822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1463,
			"primary_score":	999644,
			"second_score":	144821
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1464,
			"primary_score":	999644,
			"second_score":	144820
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1465,
			"primary_score":	999644,
			"second_score":	144819
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1466,
			"primary_score":	999648,
			"second_score":	144816
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1467,
			"primary_score":	999644,
			"second_score":	144814
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1468,
			"primary_score":	999644,
			"second_score":	144813
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2191,
			"primary_score":	999644,
			"second_score":	133944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2225,
			"primary_score":	999644,
			"second_score":	133943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2226,
			"primary_score":	999644,
			"second_score":	133942
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2227,
			"primary_score":	999644,
			"second_score":	133939
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2228,
			"primary_score":	999644,
			"second_score":	133938
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2229,
			"primary_score":	999644,
			"second_score":	133937
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2347,
			"primary_score":	999644,
			"second_score":	142945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2348,
			"primary_score":	999644,
			"second_score":	142944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2349,
			"primary_score":	999644,
			"second_score":	142943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2366,
			"primary_score":	999644,
			"second_score":	135838
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2368,
			"primary_score":	999644,
			"second_score":	135837
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2369,
			"primary_score":	999644,
			"second_score":	135836
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2370,
			"primary_score":	999644,
			"second_score":	135723
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2371,
			"primary_score":	999644,
			"second_score":	135722
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2376,
			"primary_score":	999716,
			"second_score":	138224
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2377,
			"primary_score":	999716,
			"second_score":	138223
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2387,
			"primary_score":	999716,
			"second_score":	138222
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2388,
			"primary_score":	999716,
			"second_score":	144298
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2389,
			"primary_score":	999721,
			"second_score":	144297
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2391,
			"primary_score":	999987,
			"second_score":	138221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2398,
			"primary_score":	999644,
			"second_score":	131639
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2399,
			"primary_score":	999644,
			"second_score":	131638
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2410,
			"primary_score":	999644,
			"second_score":	131637
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2415,
			"primary_score":	999644,
			"second_score":	131636
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2419,
			"primary_score":	999644,
			"second_score":	131635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2426,
			"primary_score":	999904,
			"second_score":	144794
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2427,
			"primary_score":	999904,
			"second_score":	144793
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2437,
			"primary_score":	999906,
			"second_score":	144792
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2441,
			"primary_score":	999920,
			"second_score":	144790
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2448,
			"primary_score":	999644,
			"second_score":	134790
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2449,
			"primary_score":	999644,
			"second_score":	134789
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2450,
			"primary_score":	999644,
			"second_score":	134788
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2525,
			"primary_score":	999644,
			"second_score":	129889
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2526,
			"primary_score":	999644,
			"second_score":	129888
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2536,
			"primary_score":	999644,
			"second_score":	129887
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2540,
			"primary_score":	999644,
			"second_score":	129886
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2585,
			"primary_score":	999644,
			"second_score":	136005
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2586,
			"primary_score":	999644,
			"second_score":	136004
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2591,
			"primary_score":	999644,
			"second_score":	136003
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2592,
			"primary_score":	999644,
			"second_score":	136002
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2601,
			"primary_score":	999644,
			"second_score":	128579
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2602,
			"primary_score":	999644,
			"second_score":	128578
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2603,
			"primary_score":	999644,
			"second_score":	137395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2604,
			"primary_score":	999644,
			"second_score":	137394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2607,
			"primary_score":	999644,
			"second_score":	128577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2608,
			"primary_score":	999644,
			"second_score":	128576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2609,
			"primary_score":	999976,
			"second_score":	126272
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2611,
			"primary_score":	999916,
			"second_score":	142162
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2617,
			"primary_score":	999850,
			"second_score":	127439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2618,
			"primary_score":	999850,
			"second_score":	127438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2621,
			"primary_score":	999926,
			"second_score":	127437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2622,
			"primary_score":	999927,
			"second_score":	127435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2626,
			"primary_score":	999644,
			"second_score":	134346
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2628,
			"primary_score":	999644,
			"second_score":	134345
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2629,
			"primary_score":	999644,
			"second_score":	134344
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2634,
			"primary_score":	999644,
			"second_score":	133972
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2635,
			"primary_score":	999644,
			"second_score":	133971
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2636,
			"primary_score":	999644,
			"second_score":	133970
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2639,
			"primary_score":	999644,
			"second_score":	133965
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2641,
			"primary_score":	999644,
			"second_score":	133964
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2642,
			"primary_score":	999644,
			"second_score":	133963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2643,
			"primary_score":	999644,
			"second_score":	133962
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2644,
			"primary_score":	999644,
			"second_score":	133961
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2645,
			"primary_score":	999647,
			"second_score":	124585
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2646,
			"primary_score":	999644,
			"second_score":	133955
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2651,
			"primary_score":	999644,
			"second_score":	127152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2652,
			"primary_score":	999644,
			"second_score":	127151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2653,
			"primary_score":	999644,
			"second_score":	127150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2666,
			"primary_score":	999858,
			"second_score":	138324
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2667,
			"primary_score":	999858,
			"second_score":	138323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2677,
			"primary_score":	999858,
			"second_score":	138322
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2681,
			"primary_score":	999862,
			"second_score":	138320
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2694,
			"primary_score":	999644,
			"second_score":	135649
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2695,
			"primary_score":	999644,
			"second_score":	135648
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2696,
			"primary_score":	999644,
			"second_score":	135647
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2697,
			"primary_score":	999644,
			"second_score":	135646
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2698,
			"primary_score":	999644,
			"second_score":	135645
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2703,
			"primary_score":	999644,
			"second_score":	135644
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2719,
			"primary_score":	999644,
			"second_score":	131712
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2720,
			"primary_score":	999644,
			"second_score":	131711
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2725,
			"primary_score":	999644,
			"second_score":	131710
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2726,
			"primary_score":	999644,
			"second_score":	131709
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2727,
			"primary_score":	999644,
			"second_score":	131708
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2730,
			"primary_score":	999644,
			"second_score":	134630
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2731,
			"primary_score":	999644,
			"second_score":	134629
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2732,
			"primary_score":	999644,
			"second_score":	134628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2768,
			"primary_score":	999728,
			"second_score":	130397
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2769,
			"primary_score":	999730,
			"second_score":	130395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2807,
			"primary_score":	999983,
			"second_score":	126905
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2808,
			"primary_score":	999983,
			"second_score":	126904
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2854,
			"primary_score":	999886,
			"second_score":	128657
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2855,
			"primary_score":	999947,
			"second_score":	128655
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2891,
			"primary_score":	999723,
			"second_score":	125843
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2892,
			"primary_score":	999723,
			"second_score":	125842
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2893,
			"primary_score":	999981,
			"second_score":	125841
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2894,
			"primary_score":	999998,
			"second_score":	125839
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2898,
			"primary_score":	999733,
			"second_score":	142005
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2899,
			"primary_score":	999733,
			"second_score":	142004
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2905,
			"primary_score":	999644,
			"second_score":	134348
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2906,
			"primary_score":	999644,
			"second_score":	134347
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2909,
			"primary_score":	999644,
			"second_score":	133936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2910,
			"primary_score":	999644,
			"second_score":	133935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2911,
			"primary_score":	999644,
			"second_score":	130162
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2914,
			"primary_score":	999854,
			"second_score":	143981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2915,
			"primary_score":	999854,
			"second_score":	143980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2916,
			"primary_score":	999854,
			"second_score":	143979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2918,
			"primary_score":	999854,
			"second_score":	143978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2919,
			"primary_score":	999854,
			"second_score":	143977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2920,
			"primary_score":	999854,
			"second_score":	143755
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2925,
			"primary_score":	999854,
			"second_score":	140875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2926,
			"primary_score":	999854,
			"second_score":	140874
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2927,
			"primary_score":	999854,
			"second_score":	140873
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2929,
			"primary_score":	999854,
			"second_score":	140872
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2930,
			"primary_score":	999854,
			"second_score":	140871
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2931,
			"primary_score":	999854,
			"second_score":	140867
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2932,
			"primary_score":	999854,
			"second_score":	140864
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2934,
			"primary_score":	999854,
			"second_score":	140835
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2958,
			"primary_score":	999794,
			"second_score":	130100
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2960,
			"primary_score":	999794,
			"second_score":	130099
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2961,
			"primary_score":	999794,
			"second_score":	130098
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2962,
			"primary_score":	999794,
			"second_score":	130097
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2977,
			"primary_score":	999794,
			"second_score":	130096
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2978,
			"primary_score":	999794,
			"second_score":	130095
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2983,
			"primary_score":	999798,
			"second_score":	130117
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2984,
			"primary_score":	999798,
			"second_score":	130116
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2985,
			"primary_score":	999798,
			"second_score":	130115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2986,
			"primary_score":	999807,
			"second_score":	130114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2987,
			"primary_score":	999807,
			"second_score":	130113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2988,
			"primary_score":	999813,
			"second_score":	130112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2990,
			"primary_score":	999950,
			"second_score":	141696
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2991,
			"primary_score":	999954,
			"second_score":	141695
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3000,
			"primary_score":	999644,
			"second_score":	138994
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3001,
			"primary_score":	999644,
			"second_score":	138993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3045,
			"primary_score":	999644,
			"second_score":	137582
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3046,
			"primary_score":	999644,
			"second_score":	137581
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3048,
			"primary_score":	999644,
			"second_score":	137580
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3050,
			"primary_score":	999644,
			"second_score":	137579
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3051,
			"primary_score":	999644,
			"second_score":	137578
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3052,
			"primary_score":	999644,
			"second_score":	137577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3053,
			"primary_score":	999644,
			"second_score":	137576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3055,
			"primary_score":	999644,
			"second_score":	137575
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3056,
			"primary_score":	999644,
			"second_score":	137562
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3057,
			"primary_score":	999644,
			"second_score":	137561
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3058,
			"primary_score":	999644,
			"second_score":	137560
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3059,
			"primary_score":	999644,
			"second_score":	137559
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3061,
			"primary_score":	999644,
			"second_score":	137558
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3062,
			"primary_score":	999644,
			"second_score":	137563
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3075,
			"primary_score":	999644,
			"second_score":	137557
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3076,
			"primary_score":	999644,
			"second_score":	137529
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3077,
			"primary_score":	999644,
			"second_score":	137528
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3080,
			"primary_score":	999644,
			"second_score":	137527
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3081,
			"primary_score":	999644,
			"second_score":	137526
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3082,
			"primary_score":	999644,
			"second_score":	137525
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3083,
			"primary_score":	999644,
			"second_score":	137512
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3098,
			"primary_score":	999644,
			"second_score":	137511
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3101,
			"primary_score":	999644,
			"second_score":	137510
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3104,
			"primary_score":	999644,
			"second_score":	137509
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3106,
			"primary_score":	999644,
			"second_score":	137508
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3108,
			"primary_score":	999644,
			"second_score":	137507
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3115,
			"primary_score":	999644,
			"second_score":	137506
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3120,
			"primary_score":	999644,
			"second_score":	136606
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3121,
			"primary_score":	999644,
			"second_score":	136605
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3123,
			"primary_score":	999644,
			"second_score":	136604
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3125,
			"primary_score":	999644,
			"second_score":	136603
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3126,
			"primary_score":	999644,
			"second_score":	136602
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3128,
			"primary_score":	999644,
			"second_score":	136601
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3129,
			"primary_score":	999644,
			"second_score":	136599
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3132,
			"primary_score":	999644,
			"second_score":	136598
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3133,
			"primary_score":	999644,
			"second_score":	136470
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3146,
			"primary_score":	999644,
			"second_score":	129355
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3149,
			"primary_score":	999644,
			"second_score":	129354
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3179,
			"primary_score":	999644,
			"second_score":	124564
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3180,
			"primary_score":	999644,
			"second_score":	124563
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3181,
			"primary_score":	999644,
			"second_score":	124562
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3183,
			"primary_score":	999644,
			"second_score":	124561
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3184,
			"primary_score":	999644,
			"second_score":	124560
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3185,
			"primary_score":	999644,
			"second_score":	124559
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3194,
			"primary_score":	999644,
			"second_score":	135846
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3195,
			"primary_score":	999644,
			"second_score":	135845
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3196,
			"primary_score":	999644,
			"second_score":	135842
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3197,
			"primary_score":	999644,
			"second_score":	135841
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3199,
			"primary_score":	999644,
			"second_score":	135840
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3200,
			"primary_score":	999644,
			"second_score":	135847
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3202,
			"primary_score":	999644,
			"second_score":	135839
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3227,
			"primary_score":	999811,
			"second_score":	130111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3228,
			"primary_score":	999811,
			"second_score":	130110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3229,
			"primary_score":	999811,
			"second_score":	130109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3230,
			"primary_score":	999811,
			"second_score":	130106
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3231,
			"primary_score":	999811,
			"second_score":	130105
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3232,
			"primary_score":	999811,
			"second_score":	130104
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3237,
			"primary_score":	999891,
			"second_score":	130103
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3238,
			"primary_score":	999892,
			"second_score":	130102
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3255,
			"primary_score":	999644,
			"second_score":	131696
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3256,
			"primary_score":	999644,
			"second_score":	131695
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3257,
			"primary_score":	999644,
			"second_score":	131694
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3258,
			"primary_score":	999644,
			"second_score":	131693
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3261,
			"primary_score":	999644,
			"second_score":	131692
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3333,
			"primary_score":	999644,
			"second_score":	133933
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3334,
			"primary_score":	999644,
			"second_score":	133932
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3335,
			"primary_score":	999644,
			"second_score":	133931
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3336,
			"primary_score":	999644,
			"second_score":	133930
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3338,
			"primary_score":	999644,
			"second_score":	133929
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3340,
			"primary_score":	999644,
			"second_score":	133928
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3341,
			"primary_score":	999644,
			"second_score":	133927
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3342,
			"primary_score":	999644,
			"second_score":	133926
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3343,
			"primary_score":	999644,
			"second_score":	133925
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3344,
			"primary_score":	999644,
			"second_score":	133924
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3345,
			"primary_score":	999644,
			"second_score":	133923
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3359,
			"primary_score":	999723,
			"second_score":	125838
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3360,
			"primary_score":	999723,
			"second_score":	125837
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3361,
			"primary_score":	999723,
			"second_score":	125834
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3362,
			"primary_score":	999723,
			"second_score":	125833
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3363,
			"primary_score":	999723,
			"second_score":	125832
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3364,
			"primary_score":	999723,
			"second_score":	125831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3365,
			"primary_score":	999723,
			"second_score":	125830
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3371,
			"primary_score":	999752,
			"second_score":	141975
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3374,
			"primary_score":	999752,
			"second_score":	141974
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3378,
			"primary_score":	999723,
			"second_score":	125829
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3380,
			"primary_score":	999723,
			"second_score":	125828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3382,
			"primary_score":	999723,
			"second_score":	125827
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3383,
			"primary_score":	999723,
			"second_score":	125826
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3384,
			"primary_score":	999723,
			"second_score":	125713
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3385,
			"primary_score":	999723,
			"second_score":	125712
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3944,
			"primary_score":	999983,
			"second_score":	126902
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3945,
			"primary_score":	999983,
			"second_score":	126901
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3946,
			"primary_score":	999983,
			"second_score":	126900
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3948,
			"primary_score":	999983,
			"second_score":	126899
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3949,
			"primary_score":	999983,
			"second_score":	126898
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4739,
			"primary_score":	999644,
			"second_score":	131707
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4772,
			"primary_score":	999644,
			"second_score":	131706
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4773,
			"primary_score":	999644,
			"second_score":	131705
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4778,
			"primary_score":	999644,
			"second_score":	131704
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4782,
			"primary_score":	999644,
			"second_score":	131703
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4783,
			"primary_score":	999644,
			"second_score":	131702
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4784,
			"primary_score":	999644,
			"second_score":	131701
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4870,
			"primary_score":	999644,
			"second_score":	131700
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4871,
			"primary_score":	999644,
			"second_score":	131699
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4872,
			"primary_score":	999644,
			"second_score":	131698
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4873,
			"primary_score":	999644,
			"second_score":	131697
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5297,
			"primary_score":	999862,
			"second_score":	138319
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5298,
			"primary_score":	999862,
			"second_score":	138318
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5299,
			"primary_score":	999862,
			"second_score":	138317
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5410,
			"primary_score":	999862,
			"second_score":	138315
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5411,
			"primary_score":	999862,
			"second_score":	138314
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5414,
			"primary_score":	999862,
			"second_score":	138313
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5415,
			"primary_score":	999862,
			"second_score":	138312
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5417,
			"primary_score":	999862,
			"second_score":	138311
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5418,
			"primary_score":	999862,
			"second_score":	138310
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5476,
			"primary_score":	999684,
			"second_score":	139205
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5477,
			"primary_score":	999684,
			"second_score":	139204
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5478,
			"primary_score":	999684,
			"second_score":	139201
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5479,
			"primary_score":	999684,
			"second_score":	139200
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5481,
			"primary_score":	999644,
			"second_score":	133969
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5482,
			"primary_score":	999990,
			"second_score":	124595
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5483,
			"primary_score":	999689,
			"second_score":	139207
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5486,
			"primary_score":	999644,
			"second_score":	133968
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5487,
			"primary_score":	999851,
			"second_score":	142214
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5488,
			"primary_score":	999644,
			"second_score":	133966
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5512,
			"primary_score":	999927,
			"second_score":	127434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5513,
			"primary_score":	999927,
			"second_score":	127433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5514,
			"primary_score":	999927,
			"second_score":	127432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5516,
			"primary_score":	999927,
			"second_score":	127431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5517,
			"primary_score":	999927,
			"second_score":	127430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5518,
			"primary_score":	999927,
			"second_score":	127402
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5523,
			"primary_score":	999976,
			"second_score":	126271
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5524,
			"primary_score":	999976,
			"second_score":	126270
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5529,
			"primary_score":	999976,
			"second_score":	126269
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5530,
			"primary_score":	999976,
			"second_score":	126268
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5531,
			"primary_score":	999976,
			"second_score":	126267
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5539,
			"primary_score":	999916,
			"second_score":	142160
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5540,
			"primary_score":	999916,
			"second_score":	142159
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5541,
			"primary_score":	999916,
			"second_score":	142158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5542,
			"primary_score":	999925,
			"second_score":	142157
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5544,
			"primary_score":	999925,
			"second_score":	142156
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5545,
			"primary_score":	999925,
			"second_score":	142155
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5546,
			"primary_score":	999925,
			"second_score":	142154
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5547,
			"primary_score":	999925,
			"second_score":	142153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5549,
			"primary_score":	999925,
			"second_score":	142152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5550,
			"primary_score":	999925,
			"second_score":	142151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5551,
			"primary_score":	999925,
			"second_score":	142150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5552,
			"primary_score":	999925,
			"second_score":	142149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5554,
			"primary_score":	999925,
			"second_score":	142148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5555,
			"primary_score":	999925,
			"second_score":	142147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5556,
			"primary_score":	999925,
			"second_score":	142146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5557,
			"primary_score":	999925,
			"second_score":	142145
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5559,
			"primary_score":	999925,
			"second_score":	142144
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5560,
			"primary_score":	999925,
			"second_score":	142143
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5563,
			"primary_score":	999925,
			"second_score":	142142
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5564,
			"primary_score":	999925,
			"second_score":	142141
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5566,
			"primary_score":	999925,
			"second_score":	142140
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5567,
			"primary_score":	999925,
			"second_score":	142139
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5572,
			"primary_score":	999976,
			"second_score":	126266
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5573,
			"primary_score":	999976,
			"second_score":	126265
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5578,
			"primary_score":	999976,
			"second_score":	126264
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5579,
			"primary_score":	999978,
			"second_score":	126263
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5580,
			"primary_score":	999978,
			"second_score":	126262
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5631,
			"primary_score":	999978,
			"second_score":	126261
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5632,
			"primary_score":	999978,
			"second_score":	126260
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5633,
			"primary_score":	999978,
			"second_score":	126259
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5665,
			"primary_score":	999978,
			"second_score":	126257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5666,
			"primary_score":	999978,
			"second_score":	126256
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5667,
			"primary_score":	999992,
			"second_score":	126255
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6045,
			"primary_score":	999644,
			"second_score":	129884
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6046,
			"primary_score":	999644,
			"second_score":	129883
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6051,
			"primary_score":	999644,
			"second_score":	129882
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6055,
			"primary_score":	999644,
			"second_score":	129881
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6100,
			"primary_score":	999644,
			"second_score":	129879
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6101,
			"primary_score":	999644,
			"second_score":	129878
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6102,
			"primary_score":	999644,
			"second_score":	129877
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6842,
			"primary_score":	999644,
			"second_score":	134786
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6843,
			"primary_score":	999644,
			"second_score":	134785
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6853,
			"primary_score":	999644,
			"second_score":	134784
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6854,
			"primary_score":	999644,
			"second_score":	134783
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6876,
			"primary_score":	999644,
			"second_score":	134781
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6877,
			"primary_score":	999644,
			"second_score":	134780
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6878,
			"primary_score":	999644,
			"second_score":	134779
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6989,
			"primary_score":	999644,
			"second_score":	134777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6990,
			"primary_score":	999644,
			"second_score":	134776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6991,
			"primary_score":	999644,
			"second_score":	134775
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6992,
			"primary_score":	999644,
			"second_score":	134774
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7187,
			"primary_score":	999920,
			"second_score":	144789
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7188,
			"primary_score":	999920,
			"second_score":	144788
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7193,
			"primary_score":	999920,
			"second_score":	144787
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7194,
			"primary_score":	999924,
			"second_score":	144786
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7195,
			"primary_score":	999924,
			"second_score":	144785
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7272,
			"primary_score":	999924,
			"second_score":	144784
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7273,
			"primary_score":	999924,
			"second_score":	144783
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7274,
			"primary_score":	999924,
			"second_score":	144782
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7301,
			"primary_score":	999924,
			"second_score":	144780
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7302,
			"primary_score":	999924,
			"second_score":	144779
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7303,
			"primary_score":	999924,
			"second_score":	144778
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7304,
			"primary_score":	999924,
			"second_score":	144777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7306,
			"primary_score":	999924,
			"second_score":	144776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7307,
			"primary_score":	999924,
			"second_score":	144775
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7310,
			"primary_score":	999924,
			"second_score":	144774
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7311,
			"primary_score":	999924,
			"second_score":	144773
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7313,
			"primary_score":	999924,
			"second_score":	144772
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7314,
			"primary_score":	999924,
			"second_score":	144771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7379,
			"primary_score":	999644,
			"second_score":	131633
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7380,
			"primary_score":	999644,
			"second_score":	131632
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7381,
			"primary_score":	999644,
			"second_score":	131631
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7382,
			"primary_score":	999644,
			"second_score":	131630
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7384,
			"primary_score":	999644,
			"second_score":	131629
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7385,
			"primary_score":	999644,
			"second_score":	131628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7386,
			"primary_score":	999644,
			"second_score":	131627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7387,
			"primary_score":	999644,
			"second_score":	131626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7389,
			"primary_score":	999644,
			"second_score":	131625
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7390,
			"primary_score":	999644,
			"second_score":	131624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7391,
			"primary_score":	999644,
			"second_score":	131623
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7392,
			"primary_score":	999644,
			"second_score":	131622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7394,
			"primary_score":	999644,
			"second_score":	131621
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7395,
			"primary_score":	999644,
			"second_score":	131620
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7396,
			"primary_score":	999644,
			"second_score":	131619
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7397,
			"primary_score":	999644,
			"second_score":	131618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7399,
			"primary_score":	999644,
			"second_score":	131617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7400,
			"primary_score":	999644,
			"second_score":	131616
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7401,
			"primary_score":	999644,
			"second_score":	131615
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7402,
			"primary_score":	999644,
			"second_score":	131614
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7404,
			"primary_score":	999644,
			"second_score":	131613
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7405,
			"primary_score":	999644,
			"second_score":	131612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7406,
			"primary_score":	999644,
			"second_score":	131611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7407,
			"primary_score":	999644,
			"second_score":	131610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7409,
			"primary_score":	999644,
			"second_score":	131609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7410,
			"primary_score":	999644,
			"second_score":	131608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7411,
			"primary_score":	999644,
			"second_score":	131607
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7528,
			"primary_score":	999987,
			"second_score":	138219
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7529,
			"primary_score":	999987,
			"second_score":	138218
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7530,
			"primary_score":	999987,
			"second_score":	138217
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7531,
			"primary_score":	999999,
			"second_score":	138216
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7658,
			"primary_score":	999644,
			"second_score":	142942
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7659,
			"primary_score":	999644,
			"second_score":	142941
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7660,
			"primary_score":	999644,
			"second_score":	142940
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7688,
			"primary_score":	999985,
			"second_score":	144413
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7689,
			"primary_score":	999985,
			"second_score":	144412
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7694,
			"primary_score":	999986,
			"second_score":	144411
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7697,
			"primary_score":	999990,
			"second_score":	144409
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7709,
			"primary_score":	999990,
			"second_score":	144408
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7710,
			"primary_score":	999990,
			"second_score":	144407
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7711,
			"primary_score":	999990,
			"second_score":	144406
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7712,
			"primary_score":	999990,
			"second_score":	144405
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7714,
			"primary_score":	999990,
			"second_score":	144404
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7715,
			"primary_score":	999990,
			"second_score":	144403
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7716,
			"primary_score":	999990,
			"second_score":	144402
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7717,
			"primary_score":	999990,
			"second_score":	144401
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7719,
			"primary_score":	999990,
			"second_score":	144400
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7720,
			"primary_score":	999990,
			"second_score":	144399
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7721,
			"primary_score":	999990,
			"second_score":	144398
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7722,
			"primary_score":	999990,
			"second_score":	144397
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7724,
			"primary_score":	999990,
			"second_score":	144396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7725,
			"primary_score":	999990,
			"second_score":	144395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7726,
			"primary_score":	999990,
			"second_score":	144394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7727,
			"primary_score":	999990,
			"second_score":	144393
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7729,
			"primary_score":	999990,
			"second_score":	144392
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7730,
			"primary_score":	999990,
			"second_score":	144391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7733,
			"primary_score":	999990,
			"second_score":	144390
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7734,
			"primary_score":	999990,
			"second_score":	144389
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7736,
			"primary_score":	999990,
			"second_score":	144388
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7737,
			"primary_score":	999990,
			"second_score":	144387
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8066,
			"primary_score":	999644,
			"second_score":	142938
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8067,
			"primary_score":	999644,
			"second_score":	142937
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8068,
			"primary_score":	999644,
			"second_score":	142936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8069,
			"primary_score":	999644,
			"second_score":	142935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8071,
			"primary_score":	999644,
			"second_score":	142934
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8072,
			"primary_score":	999644,
			"second_score":	142933
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8075,
			"primary_score":	999644,
			"second_score":	142932
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8076,
			"primary_score":	999644,
			"second_score":	142931
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8078,
			"primary_score":	999644,
			"second_score":	142930
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8079,
			"primary_score":	999644,
			"second_score":	142929
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8086,
			"primary_score":	999927,
			"second_score":	127258
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8120,
			"primary_score":	999927,
			"second_score":	127257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8121,
			"primary_score":	999927,
			"second_score":	127256
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8122,
			"primary_score":	999927,
			"second_score":	127253
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8123,
			"primary_score":	999927,
			"second_score":	127252
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8134,
			"primary_score":	999927,
			"second_score":	127251
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8140,
			"primary_score":	999927,
			"second_score":	127250
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8141,
			"primary_score":	999927,
			"second_score":	127249
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8179,
			"primary_score":	999927,
			"second_score":	127247
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8180,
			"primary_score":	999927,
			"second_score":	127246
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8181,
			"primary_score":	999927,
			"second_score":	127245
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8184,
			"primary_score":	999927,
			"second_score":	127242
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8186,
			"primary_score":	999927,
			"second_score":	127241
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8187,
			"primary_score":	999927,
			"second_score":	127240
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8188,
			"primary_score":	999927,
			"second_score":	127211
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8189,
			"primary_score":	999927,
			"second_score":	127180
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8190,
			"primary_score":	999927,
			"second_score":	127179
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8199,
			"primary_score":	999928,
			"second_score":	128979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8200,
			"primary_score":	999928,
			"second_score":	128978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8201,
			"primary_score":	999928,
			"second_score":	128975
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8202,
			"primary_score":	999928,
			"second_score":	128974
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8204,
			"primary_score":	999927,
			"second_score":	127244
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8205,
			"primary_score":	999928,
			"second_score":	128980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8207,
			"primary_score":	999927,
			"second_score":	127243
		}, {
			"file":	"Zend/zend_list.c",
			"line":	52,
			"primary_score":	999644,
			"second_score":	113923
		}, {
			"file":	"Zend/zend_list.c",
			"line":	54,
			"primary_score":	999644,
			"second_score":	113922
		}, {
			"file":	"Zend/zend_list.c",
			"line":	56,
			"primary_score":	999644,
			"second_score":	113912
		}, {
			"file":	"Zend/zend_list.c",
			"line":	57,
			"primary_score":	999644,
			"second_score":	113911
		}, {
			"file":	"Zend/zend_list.c",
			"line":	170,
			"primary_score":	999644,
			"second_score":	113889
		}, {
			"file":	"Zend/zend_list.c",
			"line":	171,
			"primary_score":	999644,
			"second_score":	113888
		}, {
			"file":	"Zend/zend_list.c",
			"line":	172,
			"primary_score":	999644,
			"second_score":	113887
		}, {
			"file":	"Zend/zend_list.c",
			"line":	174,
			"primary_score":	999644,
			"second_score":	113886
		}, {
			"file":	"Zend/zend_list.c",
			"line":	175,
			"primary_score":	999644,
			"second_score":	113876
		}, {
			"file":	"Zend/zend_list.c",
			"line":	183,
			"primary_score":	999644,
			"second_score":	113875
		}, {
			"file":	"Zend/zend_list.c",
			"line":	185,
			"primary_score":	999644,
			"second_score":	113766
		}, {
			"file":	"Zend/zend_list.c",
			"line":	239,
			"primary_score":	999644,
			"second_score":	103390
		}, {
			"file":	"Zend/zend_list.c",
			"line":	347,
			"primary_score":	999644,
			"second_score":	6223
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	39,
			"primary_score":	999644,
			"second_score":	144071
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	41,
			"primary_score":	999644,
			"second_score":	143967
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	42,
			"primary_score":	999644,
			"second_score":	143966
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	43,
			"primary_score":	999644,
			"second_score":	143965
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	46,
			"primary_score":	999644,
			"second_score":	143964
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	48,
			"primary_score":	999644,
			"second_score":	143963
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	49,
			"primary_score":	999644,
			"second_score":	143962
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	51,
			"primary_score":	999644,
			"second_score":	143961
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	93,
			"primary_score":	999644,
			"second_score":	133275
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	94,
			"primary_score":	999644,
			"second_score":	133274
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	96,
			"primary_score":	999644,
			"second_score":	133273
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	97,
			"primary_score":	999644,
			"second_score":	133272
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	98,
			"primary_score":	999644,
			"second_score":	133271
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	99,
			"primary_score":	999644,
			"second_score":	133268
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	100,
			"primary_score":	999644,
			"second_score":	133201
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	109,
			"primary_score":	999644,
			"second_score":	3144
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	111,
			"primary_score":	999644,
			"second_score":	3143
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	112,
			"primary_score":	999823,
			"second_score":	126651
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	113,
			"primary_score":	999823,
			"second_score":	126650
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	116,
			"primary_score":	999823,
			"second_score":	126649
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	117,
			"primary_score":	999823,
			"second_score":	126630
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	120,
			"primary_score":	999644,
			"second_score":	3142
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	126,
			"primary_score":	999644,
			"second_score":	119809
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	127,
			"primary_score":	999644,
			"second_score":	119805
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	190,
			"primary_score":	999644,
			"second_score":	14747
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	192,
			"primary_score":	999644,
			"second_score":	14746
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	233,
			"primary_score":	999644,
			"second_score":	124435
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	235,
			"primary_score":	999644,
			"second_score":	124434
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1251,
			"primary_score":	999862,
			"second_score":	123469
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1252,
			"primary_score":	999862,
			"second_score":	123468
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1254,
			"primary_score":	999862,
			"second_score":	123467
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1255,
			"primary_score":	999925,
			"second_score":	123466
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1282,
			"primary_score":	999862,
			"second_score":	123465
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	31,
			"primary_score":	999886,
			"second_score":	123528
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	32,
			"primary_score":	999886,
			"second_score":	123527
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	33,
			"primary_score":	999886,
			"second_score":	123526
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	34,
			"primary_score":	999886,
			"second_score":	123525
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	39,
			"primary_score":	999838,
			"second_score":	119675
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	43,
			"primary_score":	999838,
			"second_score":	119674
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	49,
			"primary_score":	999855,
			"second_score":	119673
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	50,
			"primary_score":	999996,
			"second_score":	119672
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	52,
			"primary_score":	999996,
			"second_score":	119671
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	53,
			"primary_score":	999996,
			"second_score":	119670
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	54,
			"primary_score":	999996,
			"second_score":	119669
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	57,
			"primary_score":	999996,
			"second_score":	119657
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	157,
			"primary_score":	999999,
			"second_score":	122611
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	41,
			"primary_score":	999644,
			"second_score":	113596
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	42,
			"primary_score":	999644,
			"second_score":	113530
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	47,
			"primary_score":	999644,
			"second_score":	119437
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	49,
			"primary_score":	999644,
			"second_score":	119436
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	50,
			"primary_score":	999838,
			"second_score":	119435
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	68,
			"primary_score":	999998,
			"second_score":	119840
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	70,
			"primary_score":	999998,
			"second_score":	119839
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	73,
			"primary_score":	999998,
			"second_score":	119838
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	74,
			"primary_score":	999998,
			"second_score":	119837
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	75,
			"primary_score":	999998,
			"second_score":	119836
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	82,
			"primary_score":	999644,
			"second_score":	114882
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	84,
			"primary_score":	999644,
			"second_score":	114881
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	85,
			"primary_score":	999838,
			"second_score":	114880
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	104,
			"primary_score":	999838,
			"second_score":	123492
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	105,
			"primary_score":	999838,
			"second_score":	123491
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	107,
			"primary_score":	999838,
			"second_score":	123490
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	111,
			"primary_score":	999838,
			"second_score":	123489
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	115,
			"primary_score":	999838,
			"second_score":	123488
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	117,
			"primary_score":	999838,
			"second_score":	123487
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	118,
			"primary_score":	999838,
			"second_score":	123486
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	119,
			"primary_score":	999838,
			"second_score":	123485
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	121,
			"primary_score":	999838,
			"second_score":	123484
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	122,
			"primary_score":	999838,
			"second_score":	123483
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	123,
			"primary_score":	999838,
			"second_score":	123482
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	124,
			"primary_score":	999838,
			"second_score":	123481
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	125,
			"primary_score":	999838,
			"second_score":	123480
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	126,
			"primary_score":	999838,
			"second_score":	123479
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	127,
			"primary_score":	999838,
			"second_score":	123478
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	132,
			"primary_score":	999838,
			"second_score":	123477
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	167,
			"primary_score":	999839,
			"second_score":	119714
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	169,
			"primary_score":	999839,
			"second_score":	119713
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	171,
			"primary_score":	999839,
			"second_score":	119712
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	172,
			"primary_score":	999839,
			"second_score":	119710
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	173,
			"primary_score":	999839,
			"second_score":	119611
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	175,
			"primary_score":	999839,
			"second_score":	119609
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	183,
			"primary_score":	999839,
			"second_score":	119709
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	184,
			"primary_score":	999839,
			"second_score":	119708
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	186,
			"primary_score":	999839,
			"second_score":	119707
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	190,
			"primary_score":	999839,
			"second_score":	119706
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	196,
			"primary_score":	999839,
			"second_score":	119705
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	197,
			"primary_score":	999839,
			"second_score":	119704
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	198,
			"primary_score":	999839,
			"second_score":	119703
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	214,
			"primary_score":	999839,
			"second_score":	119702
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	216,
			"primary_score":	999839,
			"second_score":	119701
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	217,
			"primary_score":	999842,
			"second_score":	119698
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	218,
			"primary_score":	999839,
			"second_score":	119690
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	219,
			"primary_score":	999839,
			"second_score":	119689
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	220,
			"primary_score":	999839,
			"second_score":	119683
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	223,
			"primary_score":	999839,
			"second_score":	119619
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	225,
			"primary_score":	999839,
			"second_score":	119615
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	230,
			"primary_score":	999839,
			"second_score":	119613
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	239,
			"primary_score":	999839,
			"second_score":	119612
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	270,
			"primary_score":	999887,
			"second_score":	122610
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	272,
			"primary_score":	999887,
			"second_score":	122609
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	48,
			"primary_score":	999644,
			"second_score":	145069
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	53,
			"primary_score":	999644,
			"second_score":	145179
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	55,
			"primary_score":	999644,
			"second_score":	145178
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	62,
			"primary_score":	999644,
			"second_score":	145177
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	63,
			"primary_score":	999644,
			"second_score":	145073
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	64,
			"primary_score":	999644,
			"second_score":	145072
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	65,
			"primary_score":	999644,
			"second_score":	145071
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	66,
			"primary_score":	999644,
			"second_score":	145070
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	68,
			"primary_score":	999644,
			"second_score":	144964
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	69,
			"primary_score":	999644,
			"second_score":	144963
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	71,
			"primary_score":	999644,
			"second_score":	144962
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	73,
			"primary_score":	999644,
			"second_score":	144961
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	74,
			"primary_score":	999644,
			"second_score":	144960
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	75,
			"primary_score":	999644,
			"second_score":	144958
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	76,
			"primary_score":	999644,
			"second_score":	144957
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	78,
			"primary_score":	999644,
			"second_score":	144956
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	79,
			"primary_score":	999644,
			"second_score":	144955
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	80,
			"primary_score":	999644,
			"second_score":	144954
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	82,
			"primary_score":	999644,
			"second_score":	144953
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	84,
			"primary_score":	999644,
			"second_score":	144952
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	85,
			"primary_score":	999644,
			"second_score":	144951
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	86,
			"primary_score":	999644,
			"second_score":	144950
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	88,
			"primary_score":	999644,
			"second_score":	144949
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	89,
			"primary_score":	999644,
			"second_score":	144948
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	91,
			"primary_score":	999644,
			"second_score":	144947
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	93,
			"primary_score":	999644,
			"second_score":	144946
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	95,
			"primary_score":	999644,
			"second_score":	144945
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	97,
			"primary_score":	999644,
			"second_score":	144944
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	98,
			"primary_score":	999644,
			"second_score":	144943
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	100,
			"primary_score":	999644,
			"second_score":	144942
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	101,
			"primary_score":	999644,
			"second_score":	144941
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	103,
			"primary_score":	999644,
			"second_score":	144940
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	144939
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	110,
			"primary_score":	999644,
			"second_score":	14836
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	122,
			"primary_score":	999644,
			"second_score":	14838
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	124,
			"primary_score":	999644,
			"second_score":	14837
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	136,
			"primary_score":	999644,
			"second_score":	114972
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	140,
			"primary_score":	999644,
			"second_score":	114971
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	157,
			"primary_score":	999924,
			"second_score":	114953
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	160,
			"primary_score":	999924,
			"second_score":	114952
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	197,
			"primary_score":	999644,
			"second_score":	114945
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	198,
			"primary_score":	999924,
			"second_score":	114954
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	199,
			"primary_score":	999924,
			"second_score":	114951
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	201,
			"primary_score":	999644,
			"second_score":	114944
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	217,
			"primary_score":	999924,
			"second_score":	114523
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	221,
			"primary_score":	999924,
			"second_score":	114522
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	245,
			"primary_score":	999924,
			"second_score":	114521
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	266,
			"primary_score":	999644,
			"second_score":	15271
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	268,
			"primary_score":	999644,
			"second_score":	15270
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	269,
			"primary_score":	999924,
			"second_score":	139309
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	271,
			"primary_score":	999644,
			"second_score":	15269
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	274,
			"primary_score":	999992,
			"second_score":	114827
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	276,
			"primary_score":	999992,
			"second_score":	114826
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	277,
			"primary_score":	999992,
			"second_score":	114825
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	278,
			"primary_score":	999992,
			"second_score":	114824
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	281,
			"primary_score":	999992,
			"second_score":	114793
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	283,
			"primary_score":	999924,
			"second_score":	114774
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	293,
			"primary_score":	999924,
			"second_score":	114773
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	294,
			"primary_score":	999924,
			"second_score":	114700
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	297,
			"primary_score":	999924,
			"second_score":	114699
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	298,
			"primary_score":	999924,
			"second_score":	114534
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	299,
			"primary_score":	999924,
			"second_score":	114526
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	302,
			"primary_score":	999924,
			"second_score":	114525
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	306,
			"primary_score":	999924,
			"second_score":	114524
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	308,
			"primary_score":	999924,
			"second_score":	114520
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	309,
			"primary_score":	999924,
			"second_score":	114460
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	312,
			"primary_score":	999644,
			"second_score":	19051
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	314,
			"primary_score":	999644,
			"second_score":	19050
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	315,
			"primary_score":	999644,
			"second_score":	18987
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	316,
			"primary_score":	999644,
			"second_score":	18986
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	319,
			"primary_score":	999644,
			"second_score":	18978
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	321,
			"primary_score":	999644,
			"second_score":	15268
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	329,
			"primary_score":	999644,
			"second_score":	15267
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	330,
			"primary_score":	999644,
			"second_score":	15259
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	333,
			"primary_score":	999644,
			"second_score":	15258
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	334,
			"primary_score":	999644,
			"second_score":	14829
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	335,
			"primary_score":	999644,
			"second_score":	14821
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	336,
			"primary_score":	999644,
			"second_score":	16325
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	338,
			"primary_score":	999644,
			"second_score":	14820
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	339,
			"primary_score":	999644,
			"second_score":	14819
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	350,
			"primary_score":	999644,
			"second_score":	119513
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	351,
			"primary_score":	999644,
			"second_score":	119512
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	352,
			"primary_score":	999644,
			"second_score":	119511
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	354,
			"primary_score":	999644,
			"second_score":	119510
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	359,
			"primary_score":	999644,
			"second_score":	119509
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	360,
			"primary_score":	999644,
			"second_score":	119508
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	363,
			"primary_score":	999644,
			"second_score":	119489
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	367,
			"primary_score":	999644,
			"second_score":	119488
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	369,
			"primary_score":	999644,
			"second_score":	119469
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	378,
			"primary_score":	999644,
			"second_score":	119468
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	379,
			"primary_score":	999644,
			"second_score":	119467
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	380,
			"primary_score":	999644,
			"second_score":	119466
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	381,
			"primary_score":	999644,
			"second_score":	119289
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	382,
			"primary_score":	999644,
			"second_score":	119286
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	384,
			"primary_score":	999644,
			"second_score":	119285
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	386,
			"primary_score":	999644,
			"second_score":	119220
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	388,
			"primary_score":	999644,
			"second_score":	119169
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	391,
			"primary_score":	999644,
			"second_score":	119168
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	394,
			"primary_score":	999644,
			"second_score":	119167
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	397,
			"primary_score":	999644,
			"second_score":	119166
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	400,
			"primary_score":	999644,
			"second_score":	119165
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	401,
			"primary_score":	999644,
			"second_score":	119164
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	403,
			"primary_score":	999644,
			"second_score":	119161
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	416,
			"primary_score":	999644,
			"second_score":	133652
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	417,
			"primary_score":	999644,
			"second_score":	133651
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	418,
			"primary_score":	999644,
			"second_score":	133650
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	423,
			"primary_score":	999644,
			"second_score":	133657
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	424,
			"primary_score":	999644,
			"second_score":	133656
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	426,
			"primary_score":	999644,
			"second_score":	133655
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	437,
			"primary_score":	999644,
			"second_score":	133654
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	439,
			"primary_score":	999644,
			"second_score":	133653
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	441,
			"primary_score":	999644,
			"second_score":	133649
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	446,
			"primary_score":	999644,
			"second_score":	133660
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	488,
			"primary_score":	999644,
			"second_score":	133621
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	490,
			"primary_score":	999644,
			"second_score":	133620
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	493,
			"primary_score":	999644,
			"second_score":	133619
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	496,
			"primary_score":	999644,
			"second_score":	133618
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	497,
			"primary_score":	999644,
			"second_score":	133617
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	500,
			"primary_score":	999644,
			"second_score":	133614
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	501,
			"primary_score":	999733,
			"second_score":	124432
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	502,
			"primary_score":	999733,
			"second_score":	124376
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	504,
			"primary_score":	999644,
			"second_score":	133613
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	505,
			"primary_score":	999644,
			"second_score":	133612
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	506,
			"primary_score":	999644,
			"second_score":	133553
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	508,
			"primary_score":	999644,
			"second_score":	133552
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	509,
			"primary_score":	999644,
			"second_score":	133551
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	510,
			"primary_score":	999644,
			"second_score":	133495
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	513,
			"primary_score":	999644,
			"second_score":	133494
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	514,
			"primary_score":	999644,
			"second_score":	133493
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	515,
			"primary_score":	999644,
			"second_score":	133492
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	516,
			"primary_score":	999644,
			"second_score":	133448
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	517,
			"primary_score":	999644,
			"second_score":	133447
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	519,
			"primary_score":	999644,
			"second_score":	133446
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	520,
			"primary_score":	999735,
			"second_score":	124057
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	522,
			"primary_score":	999644,
			"second_score":	133445
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	530,
			"primary_score":	999644,
			"second_score":	125294
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	537,
			"primary_score":	999644,
			"second_score":	125355
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	539,
			"primary_score":	999644,
			"second_score":	133444
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	540,
			"primary_score":	999644,
			"second_score":	133440
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	543,
			"primary_score":	999644,
			"second_score":	133439
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	544,
			"primary_score":	999644,
			"second_score":	133438
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	543,
			"primary_score":	999644,
			"second_score":	119924
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	544,
			"primary_score":	999644,
			"second_score":	119923
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	546,
			"primary_score":	999644,
			"second_score":	119922
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	558,
			"primary_score":	999644,
			"second_score":	119921
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	559,
			"primary_score":	999644,
			"second_score":	119893
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	561,
			"primary_score":	999644,
			"second_score":	119892
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	608,
			"primary_score":	999644,
			"second_score":	119891
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	78,
			"primary_score":	999644,
			"second_score":	113598
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	79,
			"primary_score":	999644,
			"second_score":	113624
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	86,
			"primary_score":	999644,
			"second_score":	114996
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	88,
			"primary_score":	999644,
			"second_score":	114995
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	96,
			"primary_score":	999644,
			"second_score":	114997
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	97,
			"primary_score":	999644,
			"second_score":	114994
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	98,
			"primary_score":	999644,
			"second_score":	114993
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	100,
			"primary_score":	999644,
			"second_score":	114992
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	104,
			"primary_score":	999644,
			"second_score":	114991
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	114990
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	62,
			"primary_score":	999644,
			"second_score":	133065
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	64,
			"primary_score":	999644,
			"second_score":	123422
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	65,
			"primary_score":	999644,
			"second_score":	123421
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	66,
			"primary_score":	999644,
			"second_score":	123420
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	67,
			"primary_score":	999644,
			"second_score":	123419
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	87,
			"primary_score":	999644,
			"second_score":	123336
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	88,
			"primary_score":	999644,
			"second_score":	123335
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	89,
			"primary_score":	999644,
			"second_score":	123334
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	90,
			"primary_score":	999644,
			"second_score":	123333
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	27,
			"primary_score":	999644,
			"second_score":	115011
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	28,
			"primary_score":	999644,
			"second_score":	115010
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	29,
			"primary_score":	999644,
			"second_score":	115009
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	30,
			"primary_score":	999644,
			"second_score":	115008
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	50,
			"primary_score":	999644,
			"second_score":	134225
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	51,
			"primary_score":	999644,
			"second_score":	134224
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	52,
			"primary_score":	999644,
			"second_score":	134223
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	62,
			"primary_score":	999644,
			"second_score":	134215
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	63,
			"primary_score":	999644,
			"second_score":	134214
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	65,
			"primary_score":	999644,
			"second_score":	134195
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	83,
			"primary_score":	999644,
			"second_score":	133434
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	84,
			"primary_score":	999644,
			"second_score":	133433
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	86,
			"primary_score":	999854,
			"second_score":	140865
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	93,
			"primary_score":	999644,
			"second_score":	113368
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	95,
			"primary_score":	999644,
			"second_score":	113367
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	103,
			"primary_score":	999644,
			"second_score":	113366
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	121,
			"primary_score":	999644,
			"second_score":	133664
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	123,
			"primary_score":	999644,
			"second_score":	133663
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	130,
			"primary_score":	999644,
			"second_score":	133662
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	46,
			"primary_score":	999644,
			"second_score":	133248
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	47,
			"primary_score":	999644,
			"second_score":	133247
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	67,
			"primary_score":	999644,
			"second_score":	133257
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	68,
			"primary_score":	999644,
			"second_score":	133256
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	74,
			"primary_score":	999644,
			"second_score":	133255
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	75,
			"primary_score":	999644,
			"second_score":	133254
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	76,
			"primary_score":	999644,
			"second_score":	133253
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	77,
			"primary_score":	999644,
			"second_score":	133252
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	78,
			"primary_score":	999644,
			"second_score":	133251
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	83,
			"primary_score":	999644,
			"second_score":	133258
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	84,
			"primary_score":	999644,
			"second_score":	133250
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	85,
			"primary_score":	999644,
			"second_score":	133249
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	289,
			"primary_score":	999644,
			"second_score":	133260
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	299,
			"primary_score":	999644,
			"second_score":	133259
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	301,
			"primary_score":	999644,
			"second_score":	133246
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	302,
			"primary_score":	999644,
			"second_score":	133245
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	309,
			"primary_score":	999644,
			"second_score":	133244
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	310,
			"primary_score":	999644,
			"second_score":	133243
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	311,
			"primary_score":	999644,
			"second_score":	133224
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	313,
			"primary_score":	999644,
			"second_score":	133223
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	322,
			"primary_score":	999644,
			"second_score":	133270
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	325,
			"primary_score":	999644,
			"second_score":	133269
		}, {
			"file":	"Zend/zend_string.c",
			"line":	77,
			"primary_score":	999644,
			"second_score":	6123
		}, {
			"file":	"Zend/zend_string.c",
			"line":	78,
			"primary_score":	999644,
			"second_score":	6122
		}, {
			"file":	"Zend/zend_string.c",
			"line":	85,
			"primary_score":	999644,
			"second_score":	134476
		}, {
			"file":	"Zend/zend_string.c",
			"line":	86,
			"primary_score":	999644,
			"second_score":	134475
		}, {
			"file":	"Zend/zend_string.c",
			"line":	87,
			"primary_score":	999644,
			"second_score":	134474
		}, {
			"file":	"Zend/zend_string.c",
			"line":	89,
			"primary_score":	999644,
			"second_score":	134473
		}, {
			"file":	"Zend/zend_string.c",
			"line":	90,
			"primary_score":	999922,
			"second_score":	141442
		}, {
			"file":	"Zend/zend_string.c",
			"line":	93,
			"primary_score":	999644,
			"second_score":	134472
		}, {
			"file":	"Zend/zend_string.c",
			"line":	94,
			"primary_score":	999644,
			"second_score":	134462
		}, {
			"file":	"Zend/zend_string.c",
			"line":	95,
			"primary_score":	999644,
			"second_score":	134461
		}, {
			"file":	"Zend/zend_string.c",
			"line":	96,
			"primary_score":	999644,
			"second_score":	134460
		}, {
			"file":	"Zend/zend_string.c",
			"line":	97,
			"primary_score":	999644,
			"second_score":	134459
		}, {
			"file":	"Zend/zend_string.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	135080
		}, {
			"file":	"Zend/zend_string.c",
			"line":	108,
			"primary_score":	999644,
			"second_score":	136158
		}, {
			"file":	"Zend/zend_string.c",
			"line":	114,
			"primary_score":	999644,
			"second_score":	136157
		}, {
			"file":	"Zend/zend_string.c",
			"line":	115,
			"primary_score":	999644,
			"second_score":	136156
		}, {
			"file":	"Zend/zend_string.c",
			"line":	121,
			"primary_score":	999644,
			"second_score":	136155
		}, {
			"file":	"Zend/zend_string.c",
			"line":	122,
			"primary_score":	999644,
			"second_score":	136154
		}, {
			"file":	"Zend/zend_string.c",
			"line":	123,
			"primary_score":	999644,
			"second_score":	136153
		}, {
			"file":	"Zend/zend_string.c",
			"line":	124,
			"primary_score":	999644,
			"second_score":	136152
		}, {
			"file":	"Zend/zend_string.c",
			"line":	126,
			"primary_score":	999644,
			"second_score":	136133
		}, {
			"file":	"Zend/zend_string.c",
			"line":	127,
			"primary_score":	999644,
			"second_score":	136132
		}, {
			"file":	"Zend/zend_string.c",
			"line":	128,
			"primary_score":	999644,
			"second_score":	136131
		}, {
			"file":	"Zend/zend_string.c",
			"line":	129,
			"primary_score":	999644,
			"second_score":	136130
		}, {
			"file":	"Zend/zend_string.c",
			"line":	131,
			"primary_score":	999644,
			"second_score":	136129
		}, {
			"file":	"Zend/zend_string.c",
			"line":	132,
			"primary_score":	999644,
			"second_score":	136128
		}, {
			"file":	"Zend/zend_string.c",
			"line":	133,
			"primary_score":	999644,
			"second_score":	136127
		}, {
			"file":	"Zend/zend_string.c",
			"line":	134,
			"primary_score":	999644,
			"second_score":	136126
		}, {
			"file":	"Zend/zend_string.c",
			"line":	137,
			"primary_score":	999644,
			"second_score":	136125
		}, {
			"file":	"Zend/zend_string.c",
			"line":	139,
			"primary_score":	999644,
			"second_score":	136123
		}, {
			"file":	"Zend/zend_string.c",
			"line":	140,
			"primary_score":	999644,
			"second_score":	136122
		}, {
			"file":	"Zend/zend_string.c",
			"line":	141,
			"primary_score":	999644,
			"second_score":	136121
		}, {
			"file":	"Zend/zend_string.c",
			"line":	142,
			"primary_score":	999644,
			"second_score":	136120
		}, {
			"file":	"Zend/zend_string.c",
			"line":	143,
			"primary_score":	999644,
			"second_score":	136119
		}, {
			"file":	"Zend/zend_string.c",
			"line":	145,
			"primary_score":	999644,
			"second_score":	136118
		}, {
			"file":	"Zend/zend_string.c",
			"line":	149,
			"primary_score":	999644,
			"second_score":	136117
		}, {
			"file":	"Zend/zend_string.c",
			"line":	151,
			"primary_score":	999644,
			"second_score":	136116
		}, {
			"file":	"Zend/zend_string.c",
			"line":	153,
			"primary_score":	999644,
			"second_score":	136114
		}, {
			"file":	"Zend/zend_string.c",
			"line":	155,
			"primary_score":	999644,
			"second_score":	136113
		}, {
			"file":	"Zend/zend_string.c",
			"line":	174,
			"primary_score":	999644,
			"second_score":	136112
		}, {
			"file":	"Zend/zend_string.c",
			"line":	188,
			"primary_score":	999644,
			"second_score":	112815
		}, {
			"file":	"Zend/zend_string.c",
			"line":	189,
			"primary_score":	999644,
			"second_score":	112814
		}, {
			"file":	"Zend/zend_string.c",
			"line":	192,
			"primary_score":	999644,
			"second_score":	112813
		}, {
			"file":	"Zend/zend_string.c",
			"line":	199,
			"primary_score":	999644,
			"second_score":	112812
		}, {
			"file":	"Zend/zend_string.c",
			"line":	200,
			"primary_score":	999644,
			"second_score":	103421
		}, {
			"file":	"Zend/zend_string.c",
			"line":	201,
			"primary_score":	999644,
			"second_score":	103420
		}, {
			"file":	"Zend/zend_string.c",
			"line":	202,
			"primary_score":	999644,
			"second_score":	109989
		}, {
			"file":	"Zend/zend_string.c",
			"line":	203,
			"primary_score":	999644,
			"second_score":	109988
		}, {
			"file":	"Zend/zend_string.c",
			"line":	204,
			"primary_score":	999644,
			"second_score":	109987
		}, {
			"file":	"Zend/zend_string.c",
			"line":	208,
			"primary_score":	999644,
			"second_score":	109986
		}, {
			"file":	"Zend/zend_string.c",
			"line":	209,
			"primary_score":	999644,
			"second_score":	105033
		}, {
			"file":	"Zend/zend_string.c",
			"line":	211,
			"primary_score":	999644,
			"second_score":	109985
		}, {
			"file":	"Zend/zend_string.c",
			"line":	213,
			"primary_score":	999644,
			"second_score":	109984
		}, {
			"file":	"Zend/zend_string.c",
			"line":	215,
			"primary_score":	999644,
			"second_score":	103419
		}, {
			"file":	"Zend/zend_string.c",
			"line":	216,
			"primary_score":	999644,
			"second_score":	103418
		}, {
			"file":	"Zend/zend_string.c",
			"line":	218,
			"primary_score":	999644,
			"second_score":	103417
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	459,
			"primary_score":	999644,
			"second_score":	6279
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	467,
			"primary_score":	999644,
			"second_score":	6225
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1379,
			"primary_score":	999644,
			"second_score":	6278
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1380,
			"primary_score":	999644,
			"second_score":	6277
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1382,
			"primary_score":	999644,
			"second_score":	6276
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1383,
			"primary_score":	999644,
			"second_score":	6275
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1384,
			"primary_score":	999644,
			"second_score":	6229
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1385,
			"primary_score":	999644,
			"second_score":	6228
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1389,
			"primary_score":	999644,
			"second_score":	6227
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1391,
			"primary_score":	999644,
			"second_score":	6226
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	32,
			"primary_score":	999644,
			"second_score":	113926
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	37,
			"primary_score":	999644,
			"second_score":	115649
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	38,
			"primary_score":	999644,
			"second_score":	115628
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	41,
			"primary_score":	999644,
			"second_score":	115120
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	43,
			"primary_score":	999644,
			"second_score":	115119
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	44,
			"primary_score":	999644,
			"second_score":	115118
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	45,
			"primary_score":	999644,
			"second_score":	115110
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	48,
			"primary_score":	999644,
			"second_score":	115091
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	51,
			"primary_score":	999839,
			"second_score":	119716
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	53,
			"primary_score":	999839,
			"second_score":	119715
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	55,
			"primary_score":	999839,
			"second_score":	119607
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	58,
			"primary_score":	999644,
			"second_score":	113925
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	61,
			"primary_score":	999644,
			"second_score":	113924
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	63,
			"primary_score":	999644,
			"second_score":	113722
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	77,
			"primary_score":	999644,
			"second_score":	15287
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	81,
			"primary_score":	999644,
			"second_score":	19028
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	82,
			"primary_score":	999644,
			"second_score":	19025
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	107,
			"primary_score":	999644,
			"second_score":	133081
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	121,
			"primary_score":	999644,
			"second_score":	133080
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	124,
			"primary_score":	999644,
			"second_score":	133079
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	153,
			"primary_score":	999644,
			"second_score":	119582
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	32,
			"primary_score":	999644,
			"second_score":	113928
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	33,
			"primary_score":	999644,
			"second_score":	115356
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	35,
			"primary_score":	999644,
			"second_score":	113927
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	42,
			"primary_score":	999644,
			"second_score":	133083
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	43,
			"primary_score":	999644,
			"second_score":	118846
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	45,
			"primary_score":	999644,
			"second_score":	133082
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	345,
			"primary_score":	999644,
			"second_score":	133195
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	346,
			"primary_score":	999644,
			"second_score":	133194
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	347,
			"primary_score":	999644,
			"second_score":	133193
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	350,
			"primary_score":	999644,
			"second_score":	133192
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	354,
			"primary_score":	999644,
			"second_score":	133191
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	356,
			"primary_score":	999644,
			"second_score":	133190
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	363,
			"primary_score":	999644,
			"second_score":	133181
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	364,
			"primary_score":	999644,
			"second_score":	133180
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	365,
			"primary_score":	999644,
			"second_score":	133179
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	366,
			"primary_score":	999644,
			"second_score":	133178
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	367,
			"primary_score":	999644,
			"second_score":	133177
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	368,
			"primary_score":	999644,
			"second_score":	133176
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	369,
			"primary_score":	999644,
			"second_score":	133175
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	370,
			"primary_score":	999644,
			"second_score":	133174
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	371,
			"primary_score":	999644,
			"second_score":	133173
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	372,
			"primary_score":	999644,
			"second_score":	133172
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	373,
			"primary_score":	999644,
			"second_score":	133171
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	374,
			"primary_score":	999644,
			"second_score":	133170
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	375,
			"primary_score":	999644,
			"second_score":	133169
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	377,
			"primary_score":	999644,
			"second_score":	133168
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	379,
			"primary_score":	999644,
			"second_score":	133167
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	380,
			"primary_score":	999644,
			"second_score":	133166
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	383,
			"primary_score":	999644,
			"second_score":	133133
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	395,
			"primary_score":	999644,
			"second_score":	133132
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	396,
			"primary_score":	999644,
			"second_score":	133131
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	397,
			"primary_score":	999644,
			"second_score":	133130
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	399,
			"primary_score":	999644,
			"second_score":	133129
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	400,
			"primary_score":	999644,
			"second_score":	133128
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	402,
			"primary_score":	999644,
			"second_score":	133127
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	403,
			"primary_score":	999644,
			"second_score":	122633
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	410,
			"primary_score":	999644,
			"second_score":	122632
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	411,
			"primary_score":	999644,
			"second_score":	119519
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	414,
			"primary_score":	999644,
			"second_score":	119518
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	431,
			"primary_score":	999644,
			"second_score":	119596
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	436,
			"primary_score":	999644,
			"second_score":	119595
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	437,
			"primary_score":	999644,
			"second_score":	119594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	458,
			"primary_score":	999644,
			"second_score":	119532
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	459,
			"primary_score":	999644,
			"second_score":	119531
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	461,
			"primary_score":	999644,
			"second_score":	119530
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	462,
			"primary_score":	999644,
			"second_score":	119529
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	463,
			"primary_score":	999644,
			"second_score":	119528
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	474,
			"primary_score":	999644,
			"second_score":	119527
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	476,
			"primary_score":	999644,
			"second_score":	119526
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	478,
			"primary_score":	999644,
			"second_score":	119522
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	481,
			"primary_score":	999644,
			"second_score":	119521
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	566,
			"primary_score":	999644,
			"second_score":	119520
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	571,
			"primary_score":	999644,
			"second_score":	123353
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	572,
			"primary_score":	999644,
			"second_score":	123352
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	573,
			"primary_score":	999644,
			"second_score":	123351
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	575,
			"primary_score":	999644,
			"second_score":	123350
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	576,
			"primary_score":	999644,
			"second_score":	123349
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	589,
			"primary_score":	999644,
			"second_score":	123348
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	603,
			"primary_score":	999644,
			"second_score":	123347
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	604,
			"primary_score":	999909,
			"second_score":	123346
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	605,
			"primary_score":	999909,
			"second_score":	123345
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	606,
			"primary_score":	999909,
			"second_score":	123344
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	607,
			"primary_score":	999909,
			"second_score":	123343
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	608,
			"primary_score":	999909,
			"second_score":	123342
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	609,
			"primary_score":	999909,
			"second_score":	123341
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	610,
			"primary_score":	999909,
			"second_score":	123340
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	613,
			"primary_score":	999644,
			"second_score":	123339
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	614,
			"primary_score":	999644,
			"second_score":	123329
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	615,
			"primary_score":	999644,
			"second_score":	123325
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	617,
			"primary_score":	999644,
			"second_score":	123324
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	618,
			"primary_score":	999644,
			"second_score":	123323
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	620,
			"primary_score":	999644,
			"second_score":	123322
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	621,
			"primary_score":	999644,
			"second_score":	123235
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	622,
			"primary_score":	999644,
			"second_score":	123232
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	623,
			"primary_score":	999644,
			"second_score":	123231
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	625,
			"primary_score":	999644,
			"second_score":	123230
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	626,
			"primary_score":	999644,
			"second_score":	123229
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	627,
			"primary_score":	999644,
			"second_score":	123228
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	628,
			"primary_score":	999644,
			"second_score":	123227
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	630,
			"primary_score":	999644,
			"second_score":	123226
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	631,
			"primary_score":	999644,
			"second_score":	123225
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	632,
			"primary_score":	999644,
			"second_score":	123216
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	636,
			"primary_score":	999644,
			"second_score":	123215
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	638,
			"primary_score":	999644,
			"second_score":	123214
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	643,
			"primary_score":	999644,
			"second_score":	122910
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	644,
			"primary_score":	999660,
			"second_score":	122909
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	709,
			"primary_score":	999644,
			"second_score":	122880
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	710,
			"primary_score":	999644,
			"second_score":	122879
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	712,
			"primary_score":	999644,
			"second_score":	122878
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	713,
			"primary_score":	999914,
			"second_score":	122877
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	714,
			"primary_score":	999916,
			"second_score":	122876
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	722,
			"primary_score":	999916,
			"second_score":	122875
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	724,
			"primary_score":	999914,
			"second_score":	122836
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	725,
			"primary_score":	999914,
			"second_score":	122835
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	726,
			"primary_score":	999914,
			"second_score":	122834
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	729,
			"primary_score":	999644,
			"second_score":	122833
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	730,
			"primary_score":	999644,
			"second_score":	122832
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	732,
			"primary_score":	999644,
			"second_score":	122831
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	734,
			"primary_score":	999644,
			"second_score":	122789
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	742,
			"primary_score":	999644,
			"second_score":	122788
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	747,
			"primary_score":	999909,
			"second_score":	123355
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	748,
			"primary_score":	999909,
			"second_score":	123354
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	794,
			"primary_score":	999862,
			"second_score":	123623
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	795,
			"primary_score":	999862,
			"second_score":	123622
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	796,
			"primary_score":	999862,
			"second_score":	123621
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	798,
			"primary_score":	999862,
			"second_score":	123620
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	799,
			"primary_score":	999862,
			"second_score":	123619
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	808,
			"primary_score":	999862,
			"second_score":	123618
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	809,
			"primary_score":	999862,
			"second_score":	123594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	810,
			"primary_score":	999862,
			"second_score":	123473
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	812,
			"primary_score":	999862,
			"second_score":	123470
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	814,
			"primary_score":	999862,
			"second_score":	123464
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	822,
			"primary_score":	999925,
			"second_score":	123463
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	823,
			"primary_score":	999926,
			"second_score":	123462
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	824,
			"primary_score":	999926,
			"second_score":	123460
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	827,
			"primary_score":	999925,
			"second_score":	123456
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	830,
			"primary_score":	999925,
			"second_score":	123418
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	831,
			"primary_score":	999925,
			"second_score":	123417
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	832,
			"primary_score":	999925,
			"second_score":	123416
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	834,
			"primary_score":	999925,
			"second_score":	123415
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	835,
			"primary_score":	999925,
			"second_score":	123414
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	984,
			"primary_score":	999919,
			"second_score":	123675
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1151,
			"primary_score":	999861,
			"second_score":	123671
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1153,
			"primary_score":	999861,
			"second_score":	123670
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1154,
			"primary_score":	999861,
			"second_score":	123669
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1155,
			"primary_score":	999861,
			"second_score":	123668
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1161,
			"primary_score":	999861,
			"second_score":	123667
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1163,
			"primary_score":	999861,
			"second_score":	123666
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1164,
			"primary_score":	999861,
			"second_score":	123665
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1167,
			"primary_score":	999861,
			"second_score":	123664
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1168,
			"primary_score":	999861,
			"second_score":	123630
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1178,
			"primary_score":	999861,
			"second_score":	123628
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1179,
			"primary_score":	999861,
			"second_score":	123627
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1731,
			"primary_score":	999644,
			"second_score":	121245
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1733,
			"primary_score":	999644,
			"second_score":	121244
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1734,
			"primary_score":	999644,
			"second_score":	121243
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1736,
			"primary_score":	999644,
			"second_score":	121242
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1737,
			"primary_score":	999644,
			"second_score":	121241
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1739,
			"primary_score":	999644,
			"second_score":	121240
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1746,
			"primary_score":	999644,
			"second_score":	121239
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1749,
			"primary_score":	999644,
			"second_score":	121178
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1750,
			"primary_score":	999644,
			"second_score":	121177
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1919,
			"primary_score":	999644,
			"second_score":	122977
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1921,
			"primary_score":	999644,
			"second_score":	122976
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1923,
			"primary_score":	999644,
			"second_score":	122975
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1925,
			"primary_score":	999644,
			"second_score":	122969
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1927,
			"primary_score":	999644,
			"second_score":	122968
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1931,
			"primary_score":	999644,
			"second_score":	122955
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1933,
			"primary_score":	999644,
			"second_score":	122953
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1935,
			"primary_score":	999644,
			"second_score":	122952
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1940,
			"primary_score":	999644,
			"second_score":	119539
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1941,
			"primary_score":	999644,
			"second_score":	119538
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1944,
			"primary_score":	999644,
			"second_score":	119537
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1945,
			"primary_score":	999644,
			"second_score":	119536
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1947,
			"primary_score":	999644,
			"second_score":	119535
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1948,
			"primary_score":	999644,
			"second_score":	119534
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1951,
			"primary_score":	999644,
			"second_score":	118883
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1952,
			"primary_score":	999644,
			"second_score":	118882
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1954,
			"primary_score":	999644,
			"second_score":	118881
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1956,
			"primary_score":	999644,
			"second_score":	118880
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1957,
			"primary_score":	999644,
			"second_score":	118856
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1958,
			"primary_score":	999644,
			"second_score":	118848
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1959,
			"primary_score":	999644,
			"second_score":	118845
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1978,
			"primary_score":	999644,
			"second_score":	119533
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2077,
			"primary_score":	999644,
			"second_score":	133124
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2079,
			"primary_score":	999644,
			"second_score":	133123
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2080,
			"primary_score":	999644,
			"second_score":	133122
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2084,
			"primary_score":	999644,
			"second_score":	133121
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2085,
			"primary_score":	999644,
			"second_score":	133120
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2086,
			"primary_score":	999644,
			"second_score":	133119
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2089,
			"primary_score":	999644,
			"second_score":	133118
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2091,
			"primary_score":	999644,
			"second_score":	133117
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2092,
			"primary_score":	999644,
			"second_score":	133093
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2093,
			"primary_score":	999644,
			"second_score":	133085
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2094,
			"primary_score":	999644,
			"second_score":	133084
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2096,
			"primary_score":	999644,
			"second_score":	133078
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2099,
			"primary_score":	999644,
			"second_score":	133074
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2100,
			"primary_score":	999644,
			"second_score":	133073
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	5999,
			"primary_score":	999644,
			"second_score":	119591
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6000,
			"primary_score":	999644,
			"second_score":	119590
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6001,
			"primary_score":	999644,
			"second_score":	119589
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6002,
			"primary_score":	999644,
			"second_score":	119588
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6004,
			"primary_score":	999644,
			"second_score":	119587
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6005,
			"primary_score":	999644,
			"second_score":	119586
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6007,
			"primary_score":	999644,
			"second_score":	119584
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6014,
			"primary_score":	999644,
			"second_score":	119583
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6017,
			"primary_score":	999644,
			"second_score":	119570
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6018,
			"primary_score":	999644,
			"second_score":	119544
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6019,
			"primary_score":	999644,
			"second_score":	119543
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10178,
			"primary_score":	999644,
			"second_score":	121382
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10179,
			"primary_score":	999644,
			"second_score":	121381
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10180,
			"primary_score":	999644,
			"second_score":	121380
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10181,
			"primary_score":	999644,
			"second_score":	121379
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10183,
			"primary_score":	999644,
			"second_score":	121378
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10184,
			"primary_score":	999644,
			"second_score":	121377
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10186,
			"primary_score":	999644,
			"second_score":	121366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10193,
			"primary_score":	999644,
			"second_score":	121365
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10196,
			"primary_score":	999644,
			"second_score":	121304
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10197,
			"primary_score":	999644,
			"second_score":	121250
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10198,
			"primary_score":	999644,
			"second_score":	121249
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10211,
			"primary_score":	999644,
			"second_score":	120649
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10212,
			"primary_score":	999644,
			"second_score":	120648
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10213,
			"primary_score":	999644,
			"second_score":	120647
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10214,
			"primary_score":	999644,
			"second_score":	120646
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10216,
			"primary_score":	999644,
			"second_score":	120645
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10217,
			"primary_score":	999644,
			"second_score":	120644
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10219,
			"primary_score":	999644,
			"second_score":	120633
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10222,
			"primary_score":	999644,
			"second_score":	120632
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10223,
			"primary_score":	999644,
			"second_score":	120627
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10224,
			"primary_score":	999644,
			"second_score":	120596
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10228,
			"primary_score":	999644,
			"second_score":	120595
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10236,
			"primary_score":	999644,
			"second_score":	120594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10519,
			"primary_score":	999644,
			"second_score":	123039
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10520,
			"primary_score":	999644,
			"second_score":	123038
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10521,
			"primary_score":	999644,
			"second_score":	123037
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10522,
			"primary_score":	999644,
			"second_score":	123036
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10524,
			"primary_score":	999644,
			"second_score":	123025
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10528,
			"primary_score":	999644,
			"second_score":	123024
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10537,
			"primary_score":	999644,
			"second_score":	123022
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10538,
			"primary_score":	999644,
			"second_score":	123020
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10539,
			"primary_score":	999644,
			"second_score":	123016
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10541,
			"primary_score":	999644,
			"second_score":	122982
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10542,
			"primary_score":	999644,
			"second_score":	122981
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10547,
			"primary_score":	999644,
			"second_score":	123046
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10548,
			"primary_score":	999644,
			"second_score":	123045
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10549,
			"primary_score":	999644,
			"second_score":	123044
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10551,
			"primary_score":	999644,
			"second_score":	123043
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10552,
			"primary_score":	999644,
			"second_score":	123042
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10553,
			"primary_score":	999644,
			"second_score":	123041
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10554,
			"primary_score":	999644,
			"second_score":	123040
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11261,
			"primary_score":	999644,
			"second_score":	119708
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11262,
			"primary_score":	999644,
			"second_score":	119707
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11263,
			"primary_score":	999644,
			"second_score":	119706
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11265,
			"primary_score":	999644,
			"second_score":	119705
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11266,
			"primary_score":	999644,
			"second_score":	119704
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11268,
			"primary_score":	999644,
			"second_score":	119693
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11269,
			"primary_score":	999644,
			"second_score":	119690
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11270,
			"primary_score":	999644,
			"second_score":	119689
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11272,
			"primary_score":	999644,
			"second_score":	119655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11273,
			"primary_score":	999644,
			"second_score":	119601
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11274,
			"primary_score":	999644,
			"second_score":	119600
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27883,
			"primary_score":	999998,
			"second_score":	122630
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27885,
			"primary_score":	999998,
			"second_score":	122629
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27887,
			"primary_score":	999998,
			"second_score":	122628
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27889,
			"primary_score":	999998,
			"second_score":	122627
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27890,
			"primary_score":	999998,
			"second_score":	122626
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27891,
			"primary_score":	999998,
			"second_score":	122622
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27893,
			"primary_score":	999998,
			"second_score":	122621
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27900,
			"primary_score":	999998,
			"second_score":	122620
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27902,
			"primary_score":	999998,
			"second_score":	122619
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27907,
			"primary_score":	999998,
			"second_score":	122618
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	27925,
			"primary_score":	999998,
			"second_score":	122631
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32090,
			"primary_score":	999766,
			"second_score":	122784
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32091,
			"primary_score":	999766,
			"second_score":	122783
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32092,
			"primary_score":	999766,
			"second_score":	122782
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32093,
			"primary_score":	999766,
			"second_score":	122781
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32095,
			"primary_score":	999766,
			"second_score":	122780
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32096,
			"primary_score":	999766,
			"second_score":	122779
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32097,
			"primary_score":	999766,
			"second_score":	122768
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32099,
			"primary_score":	999766,
			"second_score":	122685
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32113,
			"primary_score":	999766,
			"second_score":	122684
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32122,
			"primary_score":	999766,
			"second_score":	122683
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32124,
			"primary_score":	999766,
			"second_score":	122682
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32127,
			"primary_score":	999766,
			"second_score":	122681
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32129,
			"primary_score":	999766,
			"second_score":	122661
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32136,
			"primary_score":	999794,
			"second_score":	122659
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32138,
			"primary_score":	999766,
			"second_score":	122636
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32139,
			"primary_score":	999766,
			"second_score":	122635
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39394,
			"primary_score":	999644,
			"second_score":	133442
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39413,
			"primary_score":	999644,
			"second_score":	133441
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39418,
			"primary_score":	999644,
			"second_score":	133443
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	129,
			"primary_score":	999994,
			"second_score":	123019
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	130,
			"primary_score":	999994,
			"second_score":	123018
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	132,
			"primary_score":	999994,
			"second_score":	123017
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	137,
			"primary_score":	999994,
			"second_score":	123006
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	138,
			"primary_score":	999994,
			"second_score":	123005
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	139,
			"primary_score":	999994,
			"second_score":	123004
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	141,
			"primary_score":	999994,
			"second_score":	123003
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	147,
			"primary_score":	999994,
			"second_score":	123002
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	148,
			"primary_score":	999994,
			"second_score":	123001
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	149,
			"primary_score":	999994,
			"second_score":	122998
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	150,
			"primary_score":	999994,
			"second_score":	122997
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	152,
			"primary_score":	999994,
			"second_score":	122996
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	153,
			"primary_score":	999994,
			"second_score":	122995
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	154,
			"primary_score":	999994,
			"second_score":	122994
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	155,
			"primary_score":	999994,
			"second_score":	122993
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	156,
			"primary_score":	999994,
			"second_score":	122992
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	157,
			"primary_score":	999994,
			"second_score":	122991
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	162,
			"primary_score":	999994,
			"second_score":	123010
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	164,
			"primary_score":	999994,
			"second_score":	123009
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	171,
			"primary_score":	999994,
			"second_score":	123008
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	178,
			"primary_score":	999994,
			"second_score":	123007
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	280,
			"primary_score":	999993,
			"second_score":	122983
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	281,
			"primary_score":	999993,
			"second_score":	122982
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	283,
			"primary_score":	999993,
			"second_score":	122981
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	285,
			"primary_score":	999993,
			"second_score":	122962
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	291,
			"primary_score":	999993,
			"second_score":	122961
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	292,
			"primary_score":	999993,
			"second_score":	122960
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	293,
			"primary_score":	999993,
			"second_score":	122959
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	294,
			"primary_score":	999993,
			"second_score":	122958
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	329,
			"primary_score":	999993,
			"second_score":	122957
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	330,
			"primary_score":	999993,
			"second_score":	122956
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	331,
			"primary_score":	999993,
			"second_score":	122973
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	332,
			"primary_score":	999993,
			"second_score":	122972
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	333,
			"primary_score":	999993,
			"second_score":	122971
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	334,
			"primary_score":	999993,
			"second_score":	122970
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	344,
			"primary_score":	999993,
			"second_score":	123046
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	350,
			"primary_score":	999994,
			"second_score":	123045
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	375,
			"primary_score":	999994,
			"second_score":	123043
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	376,
			"primary_score":	999994,
			"second_score":	123042
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	377,
			"primary_score":	999994,
			"second_score":	123041
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	378,
			"primary_score":	999994,
			"second_score":	123040
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	383,
			"primary_score":	999994,
			"second_score":	123025
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	384,
			"primary_score":	999994,
			"second_score":	123024
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	385,
			"primary_score":	999994,
			"second_score":	123023
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	386,
			"primary_score":	999994,
			"second_score":	123022
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	387,
			"primary_score":	999994,
			"second_score":	123021
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	388,
			"primary_score":	999994,
			"second_score":	123015
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	389,
			"primary_score":	999994,
			"second_score":	123014
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	390,
			"primary_score":	999994,
			"second_score":	123013
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	394,
			"primary_score":	999994,
			"second_score":	123012
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	399,
			"primary_score":	999994,
			"second_score":	123011
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	400,
			"primary_score":	999994,
			"second_score":	122990
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	403,
			"primary_score":	999994,
			"second_score":	122989
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	417,
			"primary_score":	999994,
			"second_score":	122988
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	419,
			"primary_score":	999994,
			"second_score":	122987
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	420,
			"primary_score":	999994,
			"second_score":	122986
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	421,
			"primary_score":	999994,
			"second_score":	122985
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	435,
			"primary_score":	999993,
			"second_score":	122968
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	436,
			"primary_score":	999993,
			"second_score":	122967
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	438,
			"primary_score":	999993,
			"second_score":	122966
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	439,
			"primary_score":	999993,
			"second_score":	122965
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	440,
			"primary_score":	999993,
			"second_score":	122963
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	449,
			"primary_score":	999994,
			"second_score":	123038
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	450,
			"primary_score":	999994,
			"second_score":	123037
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	451,
			"primary_score":	999996,
			"second_score":	123036
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	452,
			"primary_score":	1000000,
			"second_score":	123035
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	540,
			"primary_score":	999994,
			"second_score":	123028
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	541,
			"primary_score":	999994,
			"second_score":	123027
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	542,
			"primary_score":	999996,
			"second_score":	123026
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	545,
			"primary_score":	1000000,
			"second_score":	123033
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	546,
			"primary_score":	1000000,
			"second_score":	123032
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	547,
			"primary_score":	1000000,
			"second_score":	123031
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	551,
			"primary_score":	1000000,
			"second_score":	123030
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1047,
			"primary_score":	999993,
			"second_score":	123124
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1048,
			"primary_score":	999993,
			"second_score":	123123
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1049,
			"primary_score":	999993,
			"second_score":	123122
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1051,
			"primary_score":	999993,
			"second_score":	123121
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1052,
			"primary_score":	999993,
			"second_score":	123120
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1053,
			"primary_score":	999993,
			"second_score":	123119
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1054,
			"primary_score":	999993,
			"second_score":	123118
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1055,
			"primary_score":	999993,
			"second_score":	123117
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1056,
			"primary_score":	999993,
			"second_score":	123116
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1058,
			"primary_score":	999993,
			"second_score":	123115
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1059,
			"primary_score":	999993,
			"second_score":	123114
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1062,
			"primary_score":	999993,
			"second_score":	123113
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1066,
			"primary_score":	999993,
			"second_score":	123112
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1075,
			"primary_score":	999993,
			"second_score":	123111
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1078,
			"primary_score":	999993,
			"second_score":	123110
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1079,
			"primary_score":	999993,
			"second_score":	123109
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1080,
			"primary_score":	999993,
			"second_score":	123108
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1081,
			"primary_score":	999993,
			"second_score":	123107
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1082,
			"primary_score":	999993,
			"second_score":	123106
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1085,
			"primary_score":	999993,
			"second_score":	123105
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1086,
			"primary_score":	999993,
			"second_score":	123101
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1087,
			"primary_score":	999993,
			"second_score":	123100
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1088,
			"primary_score":	999993,
			"second_score":	123099
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1089,
			"primary_score":	999993,
			"second_score":	123098
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1090,
			"primary_score":	999993,
			"second_score":	123097
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1091,
			"primary_score":	999993,
			"second_score":	123096
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1092,
			"primary_score":	999993,
			"second_score":	123095
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1093,
			"primary_score":	999993,
			"second_score":	123094
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1094,
			"primary_score":	999993,
			"second_score":	123093
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1095,
			"primary_score":	999993,
			"second_score":	123092
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1096,
			"primary_score":	999993,
			"second_score":	123091
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1098,
			"primary_score":	999993,
			"second_score":	123090
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1099,
			"primary_score":	999993,
			"second_score":	123086
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1100,
			"primary_score":	999993,
			"second_score":	123085
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1101,
			"primary_score":	999993,
			"second_score":	123084
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1102,
			"primary_score":	999993,
			"second_score":	123083
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1103,
			"primary_score":	999993,
			"second_score":	123082
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1104,
			"primary_score":	999993,
			"second_score":	123081
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1105,
			"primary_score":	999993,
			"second_score":	123080
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1106,
			"primary_score":	999993,
			"second_score":	123079
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1107,
			"primary_score":	999993,
			"second_score":	123078
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1108,
			"primary_score":	999993,
			"second_score":	123077
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1109,
			"primary_score":	999993,
			"second_score":	123076
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1111,
			"primary_score":	999993,
			"second_score":	123075
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1112,
			"primary_score":	999993,
			"second_score":	123071
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1113,
			"primary_score":	999993,
			"second_score":	123070
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1114,
			"primary_score":	999993,
			"second_score":	123069
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1115,
			"primary_score":	999993,
			"second_score":	123068
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1116,
			"primary_score":	999993,
			"second_score":	123067
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1117,
			"primary_score":	999993,
			"second_score":	123066
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1118,
			"primary_score":	999993,
			"second_score":	123065
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1119,
			"primary_score":	999993,
			"second_score":	123064
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1120,
			"primary_score":	999993,
			"second_score":	123063
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1121,
			"primary_score":	999993,
			"second_score":	123062
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1123,
			"primary_score":	999993,
			"second_score":	123061
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1125,
			"primary_score":	999993,
			"second_score":	123060
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1126,
			"primary_score":	999993,
			"second_score":	122984
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1132,
			"primary_score":	999993,
			"second_score":	122954
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1133,
			"primary_score":	999993,
			"second_score":	122953
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1134,
			"primary_score":	999993,
			"second_score":	122952
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1138,
			"primary_score":	999993,
			"second_score":	122951
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1141,
			"primary_score":	999994,
			"second_score":	122950
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1143,
			"primary_score":	999993,
			"second_score":	122943
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1146,
			"primary_score":	999993,
			"second_score":	122942
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1148,
			"primary_score":	999993,
			"second_score":	122935
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1149,
			"primary_score":	999994,
			"second_score":	122934
		}, {
			"file":	"ext/date/lib/parse_iso_intervals.c",
			"line":	1153,
			"primary_score":	999993,
			"second_score":	122933
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	35,
			"primary_score":	999744,
			"second_score":	123089
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	36,
			"primary_score":	999744,
			"second_score":	123088
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	38,
			"primary_score":	999744,
			"second_score":	123087
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	43,
			"primary_score":	999990,
			"second_score":	123074
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	44,
			"primary_score":	999990,
			"second_score":	123073
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	46,
			"primary_score":	999990,
			"second_score":	123072
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	82,
			"primary_score":	999744,
			"second_score":	122941
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	83,
			"primary_score":	999744,
			"second_score":	122939
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	88,
			"primary_score":	999990,
			"second_score":	119679
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	164,
			"primary_score":	999841,
			"second_score":	122928
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	166,
			"primary_score":	999841,
			"second_score":	122927
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	169,
			"primary_score":	999841,
			"second_score":	122926
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	170,
			"primary_score":	999841,
			"second_score":	122925
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	173,
			"primary_score":	999841,
			"second_score":	122924
		}, {
			"file":	"ext/date/lib/timelib.c",
			"line":	174,
			"primary_score":	999841,
			"second_score":	122923
		}, {
			"file":	"ext/date/php_date.c",
			"line":	626,
			"primary_score":	999644,
			"second_score":	118800
		}, {
			"file":	"ext/date/php_date.c",
			"line":	629,
			"primary_score":	999644,
			"second_score":	118799
		}, {
			"file":	"ext/date/php_date.c",
			"line":	630,
			"primary_score":	999644,
			"second_score":	118798
		}, {
			"file":	"ext/date/php_date.c",
			"line":	635,
			"primary_score":	999644,
			"second_score":	118797
		}, {
			"file":	"ext/date/php_date.c",
			"line":	640,
			"primary_score":	999644,
			"second_score":	118796
		}, {
			"file":	"ext/date/php_date.c",
			"line":	789,
			"primary_score":	999644,
			"second_score":	53379
		}, {
			"file":	"ext/date/php_date.c",
			"line":	791,
			"primary_score":	999644,
			"second_score":	52700
		}, {
			"file":	"ext/date/php_date.c",
			"line":	795,
			"primary_score":	999644,
			"second_score":	52699
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2188,
			"primary_score":	999991,
			"second_score":	123555
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2189,
			"primary_score":	999991,
			"second_score":	123554
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2191,
			"primary_score":	999991,
			"second_score":	123553
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2192,
			"primary_score":	999991,
			"second_score":	123531
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2193,
			"primary_score":	999991,
			"second_score":	123530
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2197,
			"primary_score":	999991,
			"second_score":	123529
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2198,
			"primary_score":	999991,
			"second_score":	123524
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2200,
			"primary_score":	999991,
			"second_score":	123493
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2201,
			"primary_score":	999991,
			"second_score":	123476
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2203,
			"primary_score":	999991,
			"second_score":	123475
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2208,
			"primary_score":	999991,
			"second_score":	123556
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2323,
			"primary_score":	999991,
			"second_score":	119682
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2325,
			"primary_score":	999991,
			"second_score":	119681
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2326,
			"primary_score":	999991,
			"second_score":	119676
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2327,
			"primary_score":	999991,
			"second_score":	119638
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3446,
			"primary_score":	999995,
			"second_score":	123130
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3447,
			"primary_score":	999995,
			"second_score":	123129
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3448,
			"primary_score":	999995,
			"second_score":	123128
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3449,
			"primary_score":	999995,
			"second_score":	123127
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3450,
			"primary_score":	999995,
			"second_score":	123126
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3452,
			"primary_score":	999995,
			"second_score":	123125
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3454,
			"primary_score":	999995,
			"second_score":	122932
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3458,
			"primary_score":	999995,
			"second_score":	122931
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3459,
			"primary_score":	999995,
			"second_score":	122930
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3461,
			"primary_score":	999995,
			"second_score":	122929
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3462,
			"primary_score":	999995,
			"second_score":	122922
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3468,
			"primary_score":	999999,
			"second_score":	122617
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3469,
			"primary_score":	999999,
			"second_score":	122616
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3470,
			"primary_score":	999999,
			"second_score":	122615
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3471,
			"primary_score":	999999,
			"second_score":	122614
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3473,
			"primary_score":	999999,
			"second_score":	122613
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3480,
			"primary_score":	999999,
			"second_score":	122612
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3486,
			"primary_score":	999999,
			"second_score":	122608
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3487,
			"primary_score":	999999,
			"second_score":	122600
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3488,
			"primary_score":	999999,
			"second_score":	122592
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3489,
			"primary_score":	999999,
			"second_score":	122584
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3490,
			"primary_score":	999999,
			"second_score":	122576
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3491,
			"primary_score":	999999,
			"second_score":	122568
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3492,
			"primary_score":	999999,
			"second_score":	122560
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3493,
			"primary_score":	999999,
			"second_score":	122556
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3495,
			"primary_score":	999999,
			"second_score":	122552
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3496,
			"primary_score":	999999,
			"second_score":	122525
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3498,
			"primary_score":	999999,
			"second_score":	122523
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3499,
			"primary_score":	1000000,
			"second_score":	122522
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3566,
			"primary_score":	999995,
			"second_score":	123213
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3567,
			"primary_score":	999995,
			"second_score":	123212
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3568,
			"primary_score":	999995,
			"second_score":	123211
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3569,
			"primary_score":	999995,
			"second_score":	123210
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3570,
			"primary_score":	999995,
			"second_score":	123209
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3572,
			"primary_score":	999995,
			"second_score":	123208
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3573,
			"primary_score":	999995,
			"second_score":	123198
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3574,
			"primary_score":	999995,
			"second_score":	123131
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3575,
			"primary_score":	999995,
			"second_score":	122921
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3576,
			"primary_score":	999995,
			"second_score":	122918
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3577,
			"primary_score":	999995,
			"second_score":	122917
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3582,
			"primary_score":	999995,
			"second_score":	122916
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	910,
			"primary_score":	999644,
			"second_score":	58443
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	911,
			"primary_score":	999644,
			"second_score":	58428
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	912,
			"primary_score":	999644,
			"second_score":	58413
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	913,
			"primary_score":	999644,
			"second_score":	58398
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	914,
			"primary_score":	999644,
			"second_score":	58179
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	915,
			"primary_score":	999644,
			"second_score":	58074
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	916,
			"primary_score":	999644,
			"second_score":	58017
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	917,
			"primary_score":	999644,
			"second_score":	58002
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	918,
			"primary_score":	999644,
			"second_score":	57987
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	919,
			"primary_score":	999644,
			"second_score":	57870
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	920,
			"primary_score":	999644,
			"second_score":	57735
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	921,
			"primary_score":	999644,
			"second_score":	57618
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	922,
			"primary_score":	999644,
			"second_score":	57495
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	923,
			"primary_score":	999644,
			"second_score":	57474
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	924,
			"primary_score":	999644,
			"second_score":	57429
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	925,
			"primary_score":	999644,
			"second_score":	57390
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	926,
			"primary_score":	999644,
			"second_score":	57249
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	927,
			"primary_score":	999644,
			"second_score":	57132
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	928,
			"primary_score":	999644,
			"second_score":	56991
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	930,
			"primary_score":	999644,
			"second_score":	56874
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	932,
			"primary_score":	999644,
			"second_score":	56859
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	939,
			"primary_score":	999644,
			"second_score":	56706
		}, {
			"file":	"ext/ereg/ereg.c",
			"line":	230,
			"primary_score":	999644,
			"second_score":	53764
		}, {
			"file":	"ext/filter/filter.c",
			"line":	287,
			"primary_score":	999644,
			"second_score":	59851
		}, {
			"file":	"ext/filter/filter.c",
			"line":	289,
			"primary_score":	999644,
			"second_score":	59210
		}, {
			"file":	"ext/filter/filter.c",
			"line":	303,
			"primary_score":	999644,
			"second_score":	119293
		}, {
			"file":	"ext/filter/filter.c",
			"line":	304,
			"primary_score":	999644,
			"second_score":	119292
		}, {
			"file":	"ext/filter/filter.c",
			"line":	305,
			"primary_score":	999644,
			"second_score":	119291
		}, {
			"file":	"ext/filter/filter.c",
			"line":	306,
			"primary_score":	999644,
			"second_score":	119290
		}, {
			"file":	"ext/filter/filter.c",
			"line":	307,
			"primary_score":	999644,
			"second_score":	118822
		}, {
			"file":	"ext/filter/filter.c",
			"line":	308,
			"primary_score":	999644,
			"second_score":	118821
		}, {
			"file":	"ext/filter/filter.c",
			"line":	309,
			"primary_score":	999644,
			"second_score":	118820
		}, {
			"file":	"ext/hash/hash.c",
			"line":	889,
			"primary_score":	999644,
			"second_score":	60730
		}, {
			"file":	"ext/hash/hash.c",
			"line":	891,
			"primary_score":	999644,
			"second_score":	60451
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	289,
			"primary_score":	999644,
			"second_score":	62057
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	290,
			"primary_score":	999644,
			"second_score":	62006
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	291,
			"primary_score":	999644,
			"second_score":	61323
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2852,
			"primary_score":	999644,
			"second_score":	62056
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2856,
			"primary_score":	999644,
			"second_score":	62007
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	581,
			"primary_score":	999644,
			"second_score":	54208
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	583,
			"primary_score":	999644,
			"second_score":	54207
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	585,
			"primary_score":	999644,
			"second_score":	54206
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	586,
			"primary_score":	999644,
			"second_score":	54205
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	587,
			"primary_score":	999644,
			"second_score":	54186
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	683,
			"primary_score":	999644,
			"second_score":	54210
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	690,
			"primary_score":	999644,
			"second_score":	54209
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	692,
			"primary_score":	999644,
			"second_score":	54185
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	699,
			"primary_score":	999644,
			"second_score":	118816
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	700,
			"primary_score":	999644,
			"second_score":	118815
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	701,
			"primary_score":	999644,
			"second_score":	118814
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	703,
			"primary_score":	999644,
			"second_score":	118813
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	704,
			"primary_score":	999644,
			"second_score":	118812
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	707,
			"primary_score":	999644,
			"second_score":	118811
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	711,
			"primary_score":	999644,
			"second_score":	118810
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	712,
			"primary_score":	999644,
			"second_score":	118806
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	717,
			"primary_score":	999644,
			"second_score":	118805
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	719,
			"primary_score":	999644,
			"second_score":	118804
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	113,
			"primary_score":	999644,
			"second_score":	54730
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	163,
			"primary_score":	999644,
			"second_score":	55358
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	165,
			"primary_score":	999644,
			"second_score":	54734
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	199,
			"primary_score":	999644,
			"second_score":	64576
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	203,
			"primary_score":	999644,
			"second_score":	64557
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	389,
			"primary_score":	999644,
			"second_score":	64477
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	390,
			"primary_score":	999644,
			"second_score":	64468
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	391,
			"primary_score":	999644,
			"second_score":	63128
		}, {
			"file":	"ext/pdo/pdo_sqlstate.c",
			"line":	309,
			"primary_score":	999644,
			"second_score":	64467
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	87,
			"primary_score":	999644,
			"second_score":	64577
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	88,
			"primary_score":	999644,
			"second_score":	64519
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1102,
			"primary_score":	999644,
			"second_score":	98779
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1104,
			"primary_score":	999644,
			"second_score":	98778
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1105,
			"primary_score":	999644,
			"second_score":	98753
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1106,
			"primary_score":	999644,
			"second_score":	98716
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1107,
			"primary_score":	999644,
			"second_score":	98689
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1108,
			"primary_score":	999644,
			"second_score":	98663
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1109,
			"primary_score":	999644,
			"second_score":	98636
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1110,
			"primary_score":	999644,
			"second_score":	98605
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1111,
			"primary_score":	999644,
			"second_score":	98576
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1112,
			"primary_score":	999644,
			"second_score":	98547
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1113,
			"primary_score":	999644,
			"second_score":	98519
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1114,
			"primary_score":	999644,
			"second_score":	98490
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1115,
			"primary_score":	999644,
			"second_score":	98461
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1116,
			"primary_score":	999644,
			"second_score":	98432
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1117,
			"primary_score":	999644,
			"second_score":	98403
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1118,
			"primary_score":	999644,
			"second_score":	98374
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1119,
			"primary_score":	999644,
			"second_score":	98346
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1120,
			"primary_score":	999644,
			"second_score":	98315
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1121,
			"primary_score":	999644,
			"second_score":	98284
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1122,
			"primary_score":	999644,
			"second_score":	98251
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1123,
			"primary_score":	999644,
			"second_score":	98226
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1124,
			"primary_score":	999644,
			"second_score":	98202
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1125,
			"primary_score":	999644,
			"second_score":	98172
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3394,
			"primary_score":	999644,
			"second_score":	133405
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3396,
			"primary_score":	999644,
			"second_score":	133403
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3400,
			"primary_score":	999644,
			"second_score":	133402
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3404,
			"primary_score":	999644,
			"second_score":	133401
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3527,
			"primary_score":	999644,
			"second_score":	98164
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3557,
			"primary_score":	999644,
			"second_score":	98817
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3559,
			"primary_score":	999644,
			"second_score":	98780
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3561,
			"primary_score":	999644,
			"second_score":	98171
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3562,
			"primary_score":	999644,
			"second_score":	98170
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3570,
			"primary_score":	999644,
			"second_score":	98169
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3575,
			"primary_score":	999644,
			"second_score":	98168
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3617,
			"primary_score":	999644,
			"second_score":	119381
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3619,
			"primary_score":	999644,
			"second_score":	119380
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3621,
			"primary_score":	999644,
			"second_score":	119379
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3657,
			"primary_score":	999644,
			"second_score":	119378
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3658,
			"primary_score":	999644,
			"second_score":	119377
		}, {
			"file":	"ext/session/session.c",
			"line":	93,
			"primary_score":	999644,
			"second_score":	119314
		}, {
			"file":	"ext/session/session.c",
			"line":	98,
			"primary_score":	999644,
			"second_score":	119313
		}, {
			"file":	"ext/session/session.c",
			"line":	103,
			"primary_score":	999644,
			"second_score":	119312
		}, {
			"file":	"ext/session/session.c",
			"line":	1441,
			"primary_score":	999644,
			"second_score":	119316
		}, {
			"file":	"ext/session/session.c",
			"line":	1958,
			"primary_score":	999644,
			"second_score":	119318
		}, {
			"file":	"ext/session/session.c",
			"line":	1960,
			"primary_score":	999644,
			"second_score":	119317
		}, {
			"file":	"ext/session/session.c",
			"line":	1961,
			"primary_score":	999644,
			"second_score":	119315
		}, {
			"file":	"ext/session/session.c",
			"line":	1964,
			"primary_score":	999644,
			"second_score":	119311
		}, {
			"file":	"ext/session/session.c",
			"line":	1965,
			"primary_score":	999644,
			"second_score":	119305
		}, {
			"file":	"ext/session/session.c",
			"line":	1971,
			"primary_score":	999644,
			"second_score":	119304
		}, {
			"file":	"ext/session/session.c",
			"line":	2013,
			"primary_score":	999644,
			"second_score":	67036
		}, {
			"file":	"ext/session/session.c",
			"line":	2019,
			"primary_score":	999644,
			"second_score":	65604
		}, {
			"file":	"ext/session/session.c",
			"line":	2020,
			"primary_score":	999644,
			"second_score":	65603
		}, {
			"file":	"ext/session/session.c",
			"line":	2022,
			"primary_score":	999644,
			"second_score":	65602
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2561,
			"primary_score":	999644,
			"second_score":	97876
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2562,
			"primary_score":	999644,
			"second_score":	97875
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	919,
			"primary_score":	999644,
			"second_score":	119300
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	924,
			"primary_score":	999644,
			"second_score":	119299
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	929,
			"primary_score":	999644,
			"second_score":	119298
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	932,
			"primary_score":	999644,
			"second_score":	119297
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2140,
			"primary_score":	999644,
			"second_score":	56002
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2142,
			"primary_score":	999644,
			"second_score":	55393
		}, {
			"file":	"ext/standard/array.c",
			"line":	138,
			"primary_score":	999644,
			"second_score":	97456
		}, {
			"file":	"ext/standard/assert.c",
			"line":	114,
			"primary_score":	999644,
			"second_score":	97454
		}, {
			"file":	"ext/standard/assert.c",
			"line":	118,
			"primary_score":	999644,
			"second_score":	97453
		}, {
			"file":	"ext/standard/assert.c",
			"line":	124,
			"primary_score":	999644,
			"second_score":	119352
		}, {
			"file":	"ext/standard/assert.c",
			"line":	129,
			"primary_score":	999644,
			"second_score":	119351
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3455,
			"primary_score":	999644,
			"second_score":	97650
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3456,
			"primary_score":	999644,
			"second_score":	97649
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3457,
			"primary_score":	999644,
			"second_score":	97610
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3628,
			"primary_score":	999644,
			"second_score":	97654
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3636,
			"primary_score":	999644,
			"second_score":	97651
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3642,
			"primary_score":	999644,
			"second_score":	97609
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3644,
			"primary_score":	999644,
			"second_score":	97568
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3645,
			"primary_score":	999644,
			"second_score":	97530
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3648,
			"primary_score":	999644,
			"second_score":	97493
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3649,
			"primary_score":	999644,
			"second_score":	97457
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3650,
			"primary_score":	999644,
			"second_score":	97455
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3651,
			"primary_score":	999644,
			"second_score":	97452
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3652,
			"primary_score":	999644,
			"second_score":	96375
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3653,
			"primary_score":	999644,
			"second_score":	96372
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3658,
			"primary_score":	999644,
			"second_score":	96050
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3661,
			"primary_score":	999644,
			"second_score":	96047
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3709,
			"primary_score":	999644,
			"second_score":	119373
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3712,
			"primary_score":	999644,
			"second_score":	119372
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3713,
			"primary_score":	999644,
			"second_score":	119371
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3715,
			"primary_score":	999644,
			"second_score":	119370
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3718,
			"primary_score":	999644,
			"second_score":	119362
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3724,
			"primary_score":	999644,
			"second_score":	119361
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3729,
			"primary_score":	999644,
			"second_score":	119360
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3730,
			"primary_score":	999644,
			"second_score":	119358
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3735,
			"primary_score":	999644,
			"second_score":	119357
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3741,
			"primary_score":	999644,
			"second_score":	119353
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3742,
			"primary_score":	999644,
			"second_score":	119350
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3743,
			"primary_score":	999644,
			"second_score":	119339
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3748,
			"primary_score":	999644,
			"second_score":	119328
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3754,
			"primary_score":	999644,
			"second_score":	119327
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3756,
			"primary_score":	999644,
			"second_score":	119324
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3757,
			"primary_score":	999644,
			"second_score":	119323
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3758,
			"primary_score":	999644,
			"second_score":	119322
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4509,
			"primary_score":	999644,
			"second_score":	122238
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4510,
			"primary_score":	999644,
			"second_score":	122237
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4511,
			"primary_score":	999644,
			"second_score":	122236
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4513,
			"primary_score":	999644,
			"second_score":	122235
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4517,
			"primary_score":	999644,
			"second_score":	122168
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4519,
			"primary_score":	999644,
			"second_score":	122137
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4528,
			"primary_score":	999644,
			"second_score":	122136
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4989,
			"primary_score":	999644,
			"second_score":	119797
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5001,
			"primary_score":	999644,
			"second_score":	118791
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5007,
			"primary_score":	999644,
			"second_score":	118790
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	234,
			"primary_score":	999644,
			"second_score":	97492
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	235,
			"primary_score":	999644,
			"second_score":	97459
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	238,
			"primary_score":	999644,
			"second_score":	97458
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	130,
			"primary_score":	999644,
			"second_score":	96049
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	133,
			"primary_score":	999644,
			"second_score":	96048
		}, {
			"file":	"ext/standard/file.c",
			"line":	318,
			"primary_score":	999644,
			"second_score":	96374
		}, {
			"file":	"ext/standard/file.c",
			"line":	320,
			"primary_score":	999644,
			"second_score":	96373
		}, {
			"file":	"ext/standard/file.c",
			"line":	2342,
			"primary_score":	999644,
			"second_score":	121932
		}, {
			"file":	"ext/standard/file.c",
			"line":	2343,
			"primary_score":	999644,
			"second_score":	121931
		}, {
			"file":	"ext/standard/file.c",
			"line":	2344,
			"primary_score":	999644,
			"second_score":	121930
		}, {
			"file":	"ext/standard/file.c",
			"line":	2346,
			"primary_score":	999644,
			"second_score":	121929
		}, {
			"file":	"ext/standard/file.c",
			"line":	2350,
			"primary_score":	999644,
			"second_score":	121819
		}, {
			"file":	"ext/standard/file.c",
			"line":	2351,
			"primary_score":	999644,
			"second_score":	121574
		}, {
			"file":	"ext/standard/file.c",
			"line":	2360,
			"primary_score":	999644,
			"second_score":	121570
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	110,
			"primary_score":	999644,
			"second_score":	119356
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	114,
			"primary_score":	999644,
			"second_score":	119355
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	118,
			"primary_score":	999644,
			"second_score":	119354
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2148,
			"primary_score":	999644,
			"second_score":	96371
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2150,
			"primary_score":	999644,
			"second_score":	96370
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2151,
			"primary_score":	999644,
			"second_score":	96091
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2153,
			"primary_score":	999644,
			"second_score":	96051
		}, {
			"file":	"ext/standard/head.c",
			"line":	68,
			"primary_score":	999644,
			"second_score":	124830
		}, {
			"file":	"ext/standard/head.c",
			"line":	71,
			"primary_score":	999644,
			"second_score":	124730
		}, {
			"file":	"ext/standard/info.c",
			"line":	527,
			"primary_score":	999644,
			"second_score":	123454
		}, {
			"file":	"ext/standard/info.c",
			"line":	528,
			"primary_score":	999644,
			"second_score":	123453
		}, {
			"file":	"ext/standard/info.c",
			"line":	577,
			"primary_score":	999644,
			"second_score":	123452
		}, {
			"file":	"ext/standard/info.c",
			"line":	578,
			"primary_score":	999644,
			"second_score":	123451
		}, {
			"file":	"ext/standard/info.c",
			"line":	605,
			"primary_score":	999644,
			"second_score":	123450
		}, {
			"file":	"ext/standard/info.c",
			"line":	607,
			"primary_score":	999644,
			"second_score":	123449
		}, {
			"file":	"ext/standard/info.c",
			"line":	609,
			"primary_score":	999644,
			"second_score":	123448
		}, {
			"file":	"ext/standard/info.c",
			"line":	611,
			"primary_score":	999644,
			"second_score":	123447
		}, {
			"file":	"ext/standard/info.c",
			"line":	613,
			"primary_score":	999644,
			"second_score":	123446
		}, {
			"file":	"ext/standard/info.c",
			"line":	616,
			"primary_score":	999644,
			"second_score":	123445
		}, {
			"file":	"ext/standard/info.c",
			"line":	619,
			"primary_score":	999644,
			"second_score":	122738
		}, {
			"file":	"ext/standard/info.c",
			"line":	627,
			"primary_score":	999644,
			"second_score":	122737
		}, {
			"file":	"ext/standard/info.c",
			"line":	1153,
			"primary_score":	999644,
			"second_score":	124385
		}, {
			"file":	"ext/standard/info.c",
			"line":	1154,
			"primary_score":	999644,
			"second_score":	124384
		}, {
			"file":	"ext/standard/info.c",
			"line":	1156,
			"primary_score":	999644,
			"second_score":	124383
		}, {
			"file":	"ext/standard/info.c",
			"line":	1160,
			"primary_score":	999644,
			"second_score":	124345
		}, {
			"file":	"ext/standard/info.c",
			"line":	1161,
			"primary_score":	999644,
			"second_score":	124344
		}, {
			"file":	"ext/standard/info.c",
			"line":	1280,
			"primary_score":	999644,
			"second_score":	123497
		}, {
			"file":	"ext/standard/info.c",
			"line":	1281,
			"primary_score":	999644,
			"second_score":	123496
		}, {
			"file":	"ext/standard/info.c",
			"line":	1283,
			"primary_score":	999644,
			"second_score":	123495
		}, {
			"file":	"ext/standard/info.c",
			"line":	1286,
			"primary_score":	999644,
			"second_score":	123457
		}, {
			"file":	"ext/standard/info.c",
			"line":	1295,
			"primary_score":	999644,
			"second_score":	120390
		}, {
			"file":	"ext/standard/info.c",
			"line":	1299,
			"primary_score":	999644,
			"second_score":	120357
		}, {
			"file":	"ext/standard/info.c",
			"line":	1302,
			"primary_score":	999644,
			"second_score":	120356
		}, {
			"file":	"ext/standard/string.c",
			"line":	1058,
			"primary_score":	999644,
			"second_score":	122684
		}, {
			"file":	"ext/standard/string.c",
			"line":	1059,
			"primary_score":	999644,
			"second_score":	122683
		}, {
			"file":	"ext/standard/string.c",
			"line":	1060,
			"primary_score":	999644,
			"second_score":	122682
		}, {
			"file":	"ext/standard/string.c",
			"line":	1061,
			"primary_score":	999644,
			"second_score":	122681
		}, {
			"file":	"ext/standard/string.c",
			"line":	1062,
			"primary_score":	999644,
			"second_score":	122680
		}, {
			"file":	"ext/standard/string.c",
			"line":	1063,
			"primary_score":	999644,
			"second_score":	122679
		}, {
			"file":	"ext/standard/string.c",
			"line":	1065,
			"primary_score":	999644,
			"second_score":	122678
		}, {
			"file":	"ext/standard/string.c",
			"line":	1067,
			"primary_score":	999644,
			"second_score":	122675
		}, {
			"file":	"ext/standard/string.c",
			"line":	1071,
			"primary_score":	999644,
			"second_score":	122674
		}, {
			"file":	"ext/standard/string.c",
			"line":	1073,
			"primary_score":	999644,
			"second_score":	122670
		}, {
			"file":	"ext/standard/string.c",
			"line":	1074,
			"primary_score":	999644,
			"second_score":	121661
		}, {
			"file":	"ext/standard/string.c",
			"line":	1076,
			"primary_score":	999644,
			"second_score":	122658
		}, {
			"file":	"ext/standard/string.c",
			"line":	1077,
			"primary_score":	999644,
			"second_score":	121652
		}, {
			"file":	"ext/standard/string.c",
			"line":	1124,
			"primary_score":	999644,
			"second_score":	121651
		}, {
			"file":	"ext/standard/string.c",
			"line":	1125,
			"primary_score":	999644,
			"second_score":	121682
		}, {
			"file":	"ext/standard/string.c",
			"line":	1127,
			"primary_score":	999644,
			"second_score":	121650
		}, {
			"file":	"ext/standard/string.c",
			"line":	1129,
			"primary_score":	999644,
			"second_score":	121639
		}, {
			"file":	"ext/standard/string.c",
			"line":	1131,
			"primary_score":	999644,
			"second_score":	121636
		}, {
			"file":	"ext/standard/string.c",
			"line":	1132,
			"primary_score":	999644,
			"second_score":	121635
		}, {
			"file":	"ext/standard/string.c",
			"line":	1144,
			"primary_score":	999644,
			"second_score":	122785
		}, {
			"file":	"ext/standard/string.c",
			"line":	1146,
			"primary_score":	999644,
			"second_score":	122784
		}, {
			"file":	"ext/standard/string.c",
			"line":	1150,
			"primary_score":	999644,
			"second_score":	122692
		}, {
			"file":	"ext/standard/string.c",
			"line":	1163,
			"primary_score":	999644,
			"second_score":	122691
		}, {
			"file":	"ext/standard/string.c",
			"line":	1167,
			"primary_score":	999644,
			"second_score":	122690
		}, {
			"file":	"ext/standard/string.c",
			"line":	1168,
			"primary_score":	999644,
			"second_score":	122689
		}, {
			"file":	"ext/standard/string.c",
			"line":	1169,
			"primary_score":	999644,
			"second_score":	122688
		}, {
			"file":	"ext/standard/string.c",
			"line":	1170,
			"primary_score":	999644,
			"second_score":	122686
		}, {
			"file":	"ext/standard/string.c",
			"line":	1177,
			"primary_score":	999644,
			"second_score":	122685
		}, {
			"file":	"ext/standard/string.c",
			"line":	1179,
			"primary_score":	999644,
			"second_score":	121626
		}, {
			"file":	"ext/standard/string.c",
			"line":	1309,
			"primary_score":	999927,
			"second_score":	121599
		}, {
			"file":	"ext/standard/string.c",
			"line":	1311,
			"primary_score":	999927,
			"second_score":	121598
		}, {
			"file":	"ext/standard/string.c",
			"line":	1312,
			"primary_score":	999927,
			"second_score":	121597
		}, {
			"file":	"ext/standard/string.c",
			"line":	1314,
			"primary_score":	999927,
			"second_score":	121596
		}, {
			"file":	"ext/standard/string.c",
			"line":	1315,
			"primary_score":	999927,
			"second_score":	121523
		}, {
			"file":	"ext/standard/string.c",
			"line":	1316,
			"primary_score":	999927,
			"second_score":	121518
		}, {
			"file":	"ext/standard/string.c",
			"line":	1318,
			"primary_score":	999927,
			"second_score":	121517
		}, {
			"file":	"ext/standard/string.c",
			"line":	3536,
			"primary_score":	999644,
			"second_score":	119936
		}, {
			"file":	"ext/standard/string.c",
			"line":	3539,
			"primary_score":	999644,
			"second_score":	119935
		}, {
			"file":	"ext/standard/string.c",
			"line":	3540,
			"primary_score":	999644,
			"second_score":	119934
		}, {
			"file":	"ext/standard/string.c",
			"line":	3543,
			"primary_score":	999644,
			"second_score":	119933
		}, {
			"file":	"ext/standard/string.c",
			"line":	3544,
			"primary_score":	999644,
			"second_score":	119888
		}, {
			"file":	"ext/standard/string.c",
			"line":	3545,
			"primary_score":	999644,
			"second_score":	119887
		}, {
			"file":	"ext/standard/string.c",
			"line":	3546,
			"primary_score":	999644,
			"second_score":	119886
		}, {
			"file":	"ext/standard/string.c",
			"line":	3547,
			"primary_score":	999644,
			"second_score":	119852
		}, {
			"file":	"ext/standard/string.c",
			"line":	3647,
			"primary_score":	999644,
			"second_score":	120081
		}, {
			"file":	"ext/standard/string.c",
			"line":	3648,
			"primary_score":	999644,
			"second_score":	120080
		}, {
			"file":	"ext/standard/string.c",
			"line":	3649,
			"primary_score":	999644,
			"second_score":	120079
		}, {
			"file":	"ext/standard/string.c",
			"line":	3650,
			"primary_score":	999644,
			"second_score":	120078
		}, {
			"file":	"ext/standard/string.c",
			"line":	3651,
			"primary_score":	999644,
			"second_score":	120077
		}, {
			"file":	"ext/standard/string.c",
			"line":	3652,
			"primary_score":	999644,
			"second_score":	120076
		}, {
			"file":	"ext/standard/string.c",
			"line":	3653,
			"primary_score":	999644,
			"second_score":	120075
		}, {
			"file":	"ext/standard/string.c",
			"line":	3655,
			"primary_score":	999644,
			"second_score":	120074
		}, {
			"file":	"ext/standard/string.c",
			"line":	3659,
			"primary_score":	999644,
			"second_score":	119952
		}, {
			"file":	"ext/standard/string.c",
			"line":	3660,
			"primary_score":	999644,
			"second_score":	119949
		}, {
			"file":	"ext/standard/string.c",
			"line":	3661,
			"primary_score":	999644,
			"second_score":	119946
		}, {
			"file":	"ext/standard/string.c",
			"line":	3664,
			"primary_score":	999644,
			"second_score":	119943
		}, {
			"file":	"ext/standard/string.c",
			"line":	3665,
			"primary_score":	999644,
			"second_score":	119942
		}, {
			"file":	"ext/standard/string.c",
			"line":	3666,
			"primary_score":	999644,
			"second_score":	119940
		}, {
			"file":	"ext/standard/string.c",
			"line":	3672,
			"primary_score":	999644,
			"second_score":	119938
		}, {
			"file":	"ext/standard/string.c",
			"line":	3703,
			"primary_score":	999644,
			"second_score":	119937
		}, {
			"file":	"ext/standard/string.c",
			"line":	3705,
			"primary_score":	999644,
			"second_score":	119851
		}, {
			"file":	"ext/standard/string.c",
			"line":	3716,
			"primary_score":	999644,
			"second_score":	120082
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	121,
			"primary_score":	999644,
			"second_score":	97653
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	125,
			"primary_score":	999644,
			"second_score":	97652
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1083,
			"primary_score":	999644,
			"second_score":	97451
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1085,
			"primary_score":	999644,
			"second_score":	96376
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1097,
			"primary_score":	999644,
			"second_score":	119349
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1102,
			"primary_score":	999644,
			"second_score":	119348
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1103,
			"primary_score":	999644,
			"second_score":	119344
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1105,
			"primary_score":	999644,
			"second_score":	119340
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	129,
			"primary_score":	999644,
			"second_score":	119326
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	135,
			"primary_score":	999644,
			"second_score":	119325
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1378,
			"primary_score":	999644,
			"second_score":	100662
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1379,
			"primary_score":	999644,
			"second_score":	100569
		}, {
			"file":	"ext/xmlwriter/php_xmlwriter.c",
			"line":	1972,
			"primary_score":	999644,
			"second_score":	103352
		}, {
			"file":	"main/SAPI.c",
			"line":	69,
			"primary_score":	999644,
			"second_score":	3134
		}, {
			"file":	"main/SAPI.c",
			"line":	101,
			"primary_score":	999644,
			"second_score":	3135
		}, {
			"file":	"main/SAPI.c",
			"line":	104,
			"primary_score":	999644,
			"second_score":	3113
		}, {
			"file":	"main/SAPI.c",
			"line":	106,
			"primary_score":	999644,
			"second_score":	3112
		}, {
			"file":	"main/SAPI.c",
			"line":	116,
			"primary_score":	999644,
			"second_score":	124759
		}, {
			"file":	"main/SAPI.c",
			"line":	231,
			"primary_score":	999644,
			"second_score":	124822
		}, {
			"file":	"main/SAPI.c",
			"line":	232,
			"primary_score":	999644,
			"second_score":	124821
		}, {
			"file":	"main/SAPI.c",
			"line":	234,
			"primary_score":	999644,
			"second_score":	124820
		}, {
			"file":	"main/SAPI.c",
			"line":	235,
			"primary_score":	999644,
			"second_score":	124819
		}, {
			"file":	"main/SAPI.c",
			"line":	236,
			"primary_score":	999644,
			"second_score":	124818
		}, {
			"file":	"main/SAPI.c",
			"line":	241,
			"primary_score":	999644,
			"second_score":	124817
		}, {
			"file":	"main/SAPI.c",
			"line":	242,
			"primary_score":	999644,
			"second_score":	124816
		}, {
			"file":	"main/SAPI.c",
			"line":	243,
			"primary_score":	999644,
			"second_score":	124815
		}, {
			"file":	"main/SAPI.c",
			"line":	249,
			"primary_score":	999644,
			"second_score":	124814
		}, {
			"file":	"main/SAPI.c",
			"line":	261,
			"primary_score":	999644,
			"second_score":	124813
		}, {
			"file":	"main/SAPI.c",
			"line":	262,
			"primary_score":	999644,
			"second_score":	124812
		}, {
			"file":	"main/SAPI.c",
			"line":	263,
			"primary_score":	999644,
			"second_score":	124790
		}, {
			"file":	"main/SAPI.c",
			"line":	265,
			"primary_score":	999644,
			"second_score":	124789
		}, {
			"file":	"main/SAPI.c",
			"line":	427,
			"primary_score":	999644,
			"second_score":	113261
		}, {
			"file":	"main/SAPI.c",
			"line":	435,
			"primary_score":	999644,
			"second_score":	113301
		}, {
			"file":	"main/SAPI.c",
			"line":	436,
			"primary_score":	999644,
			"second_score":	113297
		}, {
			"file":	"main/SAPI.c",
			"line":	438,
			"primary_score":	999644,
			"second_score":	113296
		}, {
			"file":	"main/SAPI.c",
			"line":	449,
			"primary_score":	999644,
			"second_score":	113295
		}, {
			"file":	"main/SAPI.c",
			"line":	452,
			"primary_score":	999644,
			"second_score":	113294
		}, {
			"file":	"main/SAPI.c",
			"line":	455,
			"primary_score":	999644,
			"second_score":	113293
		}, {
			"file":	"main/SAPI.c",
			"line":	458,
			"primary_score":	999644,
			"second_score":	113292
		}, {
			"file":	"main/SAPI.c",
			"line":	461,
			"primary_score":	999644,
			"second_score":	113291
		}, {
			"file":	"main/SAPI.c",
			"line":	464,
			"primary_score":	999644,
			"second_score":	113290
		}, {
			"file":	"main/SAPI.c",
			"line":	467,
			"primary_score":	999644,
			"second_score":	113289
		}, {
			"file":	"main/SAPI.c",
			"line":	468,
			"primary_score":	999644,
			"second_score":	113288
		}, {
			"file":	"main/SAPI.c",
			"line":	470,
			"primary_score":	999644,
			"second_score":	113284
		}, {
			"file":	"main/SAPI.c",
			"line":	473,
			"primary_score":	999644,
			"second_score":	113283
		}, {
			"file":	"main/SAPI.c",
			"line":	474,
			"primary_score":	999644,
			"second_score":	113282
		}, {
			"file":	"main/SAPI.c",
			"line":	475,
			"primary_score":	999644,
			"second_score":	113263
		}, {
			"file":	"main/SAPI.c",
			"line":	477,
			"primary_score":	999644,
			"second_score":	113262
		}, {
			"file":	"main/SAPI.c",
			"line":	478,
			"primary_score":	999644,
			"second_score":	113260
		}, {
			"file":	"main/SAPI.c",
			"line":	479,
			"primary_score":	999644,
			"second_score":	113259
		}, {
			"file":	"main/SAPI.c",
			"line":	480,
			"primary_score":	999644,
			"second_score":	113258
		}, {
			"file":	"main/SAPI.c",
			"line":	481,
			"primary_score":	999644,
			"second_score":	113257
		}, {
			"file":	"main/SAPI.c",
			"line":	550,
			"primary_score":	999644,
			"second_score":	124762
		}, {
			"file":	"main/SAPI.c",
			"line":	565,
			"primary_score":	999644,
			"second_score":	124760
		}, {
			"file":	"main/SAPI.c",
			"line":	754,
			"primary_score":	999644,
			"second_score":	119401
		}, {
			"file":	"main/SAPI.c",
			"line":	755,
			"primary_score":	999644,
			"second_score":	119400
		}, {
			"file":	"main/SAPI.c",
			"line":	757,
			"primary_score":	999644,
			"second_score":	119399
		}, {
			"file":	"main/SAPI.c",
			"line":	758,
			"primary_score":	999644,
			"second_score":	119398
		}, {
			"file":	"main/SAPI.c",
			"line":	764,
			"primary_score":	999644,
			"second_score":	124826
		}, {
			"file":	"main/SAPI.c",
			"line":	765,
			"primary_score":	999644,
			"second_score":	124825
		}, {
			"file":	"main/SAPI.c",
			"line":	766,
			"primary_score":	999644,
			"second_score":	124824
		}, {
			"file":	"main/SAPI.c",
			"line":	768,
			"primary_score":	999644,
			"second_score":	124823
		}, {
			"file":	"main/SAPI.c",
			"line":	769,
			"primary_score":	999644,
			"second_score":	124788
		}, {
			"file":	"main/SAPI.c",
			"line":	770,
			"primary_score":	999644,
			"second_score":	124787
		}, {
			"file":	"main/SAPI.c",
			"line":	771,
			"primary_score":	999644,
			"second_score":	124765
		}, {
			"file":	"main/SAPI.c",
			"line":	772,
			"primary_score":	999644,
			"second_score":	124764
		}, {
			"file":	"main/SAPI.c",
			"line":	773,
			"primary_score":	999644,
			"second_score":	124763
		}, {
			"file":	"main/SAPI.c",
			"line":	774,
			"primary_score":	999644,
			"second_score":	124740
		}, {
			"file":	"main/SAPI.c",
			"line":	777,
			"primary_score":	999644,
			"second_score":	124739
		}, {
			"file":	"main/SAPI.c",
			"line":	779,
			"primary_score":	999644,
			"second_score":	124738
		}, {
			"file":	"main/SAPI.c",
			"line":	780,
			"primary_score":	999644,
			"second_score":	124737
		}, {
			"file":	"main/SAPI.c",
			"line":	785,
			"primary_score":	999644,
			"second_score":	124735
		}, {
			"file":	"main/SAPI.c",
			"line":	788,
			"primary_score":	999644,
			"second_score":	124734
		}, {
			"file":	"main/SAPI.c",
			"line":	819,
			"primary_score":	999644,
			"second_score":	124733
		}, {
			"file":	"main/SAPI.c",
			"line":	821,
			"primary_score":	999644,
			"second_score":	124731
		}, {
			"file":	"main/SAPI.c",
			"line":	890,
			"primary_score":	999644,
			"second_score":	103396
		}, {
			"file":	"main/SAPI.c",
			"line":	891,
			"primary_score":	999644,
			"second_score":	103395
		}, {
			"file":	"main/SAPI.c",
			"line":	892,
			"primary_score":	999644,
			"second_score":	103393
		}, {
			"file":	"main/main.c",
			"line":	516,
			"primary_score":	999927,
			"second_score":	122142
		}, {
			"file":	"main/main.c",
			"line":	523,
			"primary_score":	999927,
			"second_score":	122140
		}, {
			"file":	"main/main.c",
			"line":	591,
			"primary_score":	999749,
			"second_score":	120690
		}, {
			"file":	"main/main.c",
			"line":	592,
			"primary_score":	999749,
			"second_score":	120689
		}, {
			"file":	"main/main.c",
			"line":	593,
			"primary_score":	999749,
			"second_score":	120688
		}, {
			"file":	"main/main.c",
			"line":	594,
			"primary_score":	999749,
			"second_score":	120687
		}, {
			"file":	"main/main.c",
			"line":	595,
			"primary_score":	999749,
			"second_score":	120686
		}, {
			"file":	"main/main.c",
			"line":	597,
			"primary_score":	999749,
			"second_score":	120685
		}, {
			"file":	"main/main.c",
			"line":	598,
			"primary_score":	999749,
			"second_score":	120684
		}, {
			"file":	"main/main.c",
			"line":	599,
			"primary_score":	999749,
			"second_score":	120106
		}, {
			"file":	"main/main.c",
			"line":	600,
			"primary_score":	999749,
			"second_score":	119889
		}, {
			"file":	"main/main.c",
			"line":	601,
			"primary_score":	999749,
			"second_score":	119870
		}, {
			"file":	"main/main.c",
			"line":	603,
			"primary_score":	999749,
			"second_score":	119869
		}, {
			"file":	"main/main.c",
			"line":	615,
			"primary_score":	999927,
			"second_score":	122518
		}, {
			"file":	"main/main.c",
			"line":	616,
			"primary_score":	999927,
			"second_score":	122517
		}, {
			"file":	"main/main.c",
			"line":	617,
			"primary_score":	999927,
			"second_score":	122516
		}, {
			"file":	"main/main.c",
			"line":	618,
			"primary_score":	999927,
			"second_score":	122515
		}, {
			"file":	"main/main.c",
			"line":	619,
			"primary_score":	999927,
			"second_score":	122514
		}, {
			"file":	"main/main.c",
			"line":	620,
			"primary_score":	999927,
			"second_score":	122513
		}, {
			"file":	"main/main.c",
			"line":	621,
			"primary_score":	999927,
			"second_score":	122512
		}, {
			"file":	"main/main.c",
			"line":	622,
			"primary_score":	999927,
			"second_score":	122511
		}, {
			"file":	"main/main.c",
			"line":	623,
			"primary_score":	999927,
			"second_score":	122510
		}, {
			"file":	"main/main.c",
			"line":	624,
			"primary_score":	999927,
			"second_score":	122509
		}, {
			"file":	"main/main.c",
			"line":	625,
			"primary_score":	999927,
			"second_score":	122508
		}, {
			"file":	"main/main.c",
			"line":	628,
			"primary_score":	999927,
			"second_score":	122507
		}, {
			"file":	"main/main.c",
			"line":	630,
			"primary_score":	999927,
			"second_score":	122144
		}, {
			"file":	"main/main.c",
			"line":	639,
			"primary_score":	999927,
			"second_score":	122143
		}, {
			"file":	"main/main.c",
			"line":	641,
			"primary_score":	999927,
			"second_score":	122141
		}, {
			"file":	"main/main.c",
			"line":	643,
			"primary_score":	999927,
			"second_score":	122139
		}, {
			"file":	"main/main.c",
			"line":	672,
			"primary_score":	999972,
			"second_score":	122138
		}, {
			"file":	"main/main.c",
			"line":	673,
			"primary_score":	999972,
			"second_score":	122131
		}, {
			"file":	"main/main.c",
			"line":	676,
			"primary_score":	999972,
			"second_score":	122130
		}, {
			"file":	"main/main.c",
			"line":	677,
			"primary_score":	999972,
			"second_score":	122129
		}, {
			"file":	"main/main.c",
			"line":	682,
			"primary_score":	999927,
			"second_score":	122121
		}, {
			"file":	"main/main.c",
			"line":	683,
			"primary_score":	999927,
			"second_score":	122120
		}, {
			"file":	"main/main.c",
			"line":	688,
			"primary_score":	999927,
			"second_score":	121842
		}, {
			"file":	"main/main.c",
			"line":	696,
			"primary_score":	999927,
			"second_score":	121841
		}, {
			"file":	"main/main.c",
			"line":	702,
			"primary_score":	999927,
			"second_score":	121840
		}, {
			"file":	"main/main.c",
			"line":	703,
			"primary_score":	999927,
			"second_score":	121839
		}, {
			"file":	"main/main.c",
			"line":	704,
			"primary_score":	999927,
			"second_score":	121838
		}, {
			"file":	"main/main.c",
			"line":	705,
			"primary_score":	999933,
			"second_score":	121837
		}, {
			"file":	"main/main.c",
			"line":	709,
			"primary_score":	999927,
			"second_score":	121601
		}, {
			"file":	"main/main.c",
			"line":	712,
			"primary_score":	999927,
			"second_score":	121600
		}, {
			"file":	"main/main.c",
			"line":	719,
			"primary_score":	999927,
			"second_score":	121516
		}, {
			"file":	"main/main.c",
			"line":	758,
			"primary_score":	999927,
			"second_score":	121515
		}, {
			"file":	"main/main.c",
			"line":	760,
			"primary_score":	999927,
			"second_score":	121279
		}, {
			"file":	"main/main.c",
			"line":	761,
			"primary_score":	999927,
			"second_score":	121260
		}, {
			"file":	"main/main.c",
			"line":	762,
			"primary_score":	999927,
			"second_score":	121259
		}, {
			"file":	"main/main.c",
			"line":	765,
			"primary_score":	999927,
			"second_score":	121240
		}, {
			"file":	"main/main.c",
			"line":	767,
			"primary_score":	999927,
			"second_score":	121239
		}, {
			"file":	"main/main.c",
			"line":	770,
			"primary_score":	999927,
			"second_score":	121238
		}, {
			"file":	"main/main.c",
			"line":	771,
			"primary_score":	999927,
			"second_score":	121237
		}, {
			"file":	"main/main.c",
			"line":	772,
			"primary_score":	999927,
			"second_score":	121236
		}, {
			"file":	"main/main.c",
			"line":	773,
			"primary_score":	999927,
			"second_score":	121209
		}, {
			"file":	"main/main.c",
			"line":	774,
			"primary_score":	999927,
			"second_score":	121097
		}, {
			"file":	"main/main.c",
			"line":	777,
			"primary_score":	999927,
			"second_score":	120954
		}, {
			"file":	"main/main.c",
			"line":	779,
			"primary_score":	999927,
			"second_score":	120935
		}, {
			"file":	"main/main.c",
			"line":	788,
			"primary_score":	999927,
			"second_score":	122521
		}, {
			"file":	"main/main.c",
			"line":	790,
			"primary_score":	999927,
			"second_score":	122520
		}, {
			"file":	"main/main.c",
			"line":	791,
			"primary_score":	999927,
			"second_score":	122519
		}, {
			"file":	"main/main.c",
			"line":	857,
			"primary_score":	999840,
			"second_score":	120907
		}, {
			"file":	"main/main.c",
			"line":	858,
			"primary_score":	999840,
			"second_score":	120906
		}, {
			"file":	"main/main.c",
			"line":	859,
			"primary_score":	999840,
			"second_score":	120905
		}, {
			"file":	"main/main.c",
			"line":	861,
			"primary_score":	999840,
			"second_score":	120904
		}, {
			"file":	"main/main.c",
			"line":	864,
			"primary_score":	999840,
			"second_score":	120809
		}, {
			"file":	"main/main.c",
			"line":	876,
			"primary_score":	999840,
			"second_score":	120808
		}, {
			"file":	"main/main.c",
			"line":	880,
			"primary_score":	999840,
			"second_score":	120807
		}, {
			"file":	"main/main.c",
			"line":	881,
			"primary_score":	999840,
			"second_score":	120806
		}, {
			"file":	"main/main.c",
			"line":	884,
			"primary_score":	999840,
			"second_score":	120805
		}, {
			"file":	"main/main.c",
			"line":	887,
			"primary_score":	999840,
			"second_score":	120804
		}, {
			"file":	"main/main.c",
			"line":	890,
			"primary_score":	999840,
			"second_score":	120803
		}, {
			"file":	"main/main.c",
			"line":	891,
			"primary_score":	999840,
			"second_score":	120802
		}, {
			"file":	"main/main.c",
			"line":	892,
			"primary_score":	999840,
			"second_score":	120801
		}, {
			"file":	"main/main.c",
			"line":	893,
			"primary_score":	999840,
			"second_score":	120800
		}, {
			"file":	"main/main.c",
			"line":	897,
			"primary_score":	999840,
			"second_score":	120799
		}, {
			"file":	"main/main.c",
			"line":	928,
			"primary_score":	999841,
			"second_score":	120798
		}, {
			"file":	"main/main.c",
			"line":	930,
			"primary_score":	999892,
			"second_score":	120797
		}, {
			"file":	"main/main.c",
			"line":	932,
			"primary_score":	999892,
			"second_score":	120796
		}, {
			"file":	"main/main.c",
			"line":	938,
			"primary_score":	999998,
			"second_score":	120795
		}, {
			"file":	"main/main.c",
			"line":	967,
			"primary_score":	999892,
			"second_score":	120794
		}, {
			"file":	"main/main.c",
			"line":	979,
			"primary_score":	999892,
			"second_score":	120793
		}, {
			"file":	"main/main.c",
			"line":	980,
			"primary_score":	999892,
			"second_score":	120792
		}, {
			"file":	"main/main.c",
			"line":	983,
			"primary_score":	999892,
			"second_score":	120791
		}, {
			"file":	"main/main.c",
			"line":	984,
			"primary_score":	999892,
			"second_score":	120746
		}, {
			"file":	"main/main.c",
			"line":	986,
			"primary_score":	999892,
			"second_score":	120704
		}, {
			"file":	"main/main.c",
			"line":	997,
			"primary_score":	999892,
			"second_score":	120703
		}, {
			"file":	"main/main.c",
			"line":	1007,
			"primary_score":	999892,
			"second_score":	120691
		}, {
			"file":	"main/main.c",
			"line":	1033,
			"primary_score":	999841,
			"second_score":	119868
		}, {
			"file":	"main/main.c",
			"line":	1046,
			"primary_score":	999998,
			"second_score":	119867
		}, {
			"file":	"main/main.c",
			"line":	1047,
			"primary_score":	999998,
			"second_score":	119866
		}, {
			"file":	"main/main.c",
			"line":	1058,
			"primary_score":	999998,
			"second_score":	119865
		}, {
			"file":	"main/main.c",
			"line":	1060,
			"primary_score":	999998,
			"second_score":	119864
		}, {
			"file":	"main/main.c",
			"line":	1061,
			"primary_score":	999998,
			"second_score":	119860
		}, {
			"file":	"main/main.c",
			"line":	1062,
			"primary_score":	999998,
			"second_score":	119841
		}, {
			"file":	"main/main.c",
			"line":	1063,
			"primary_score":	999998,
			"second_score":	119835
		}, {
			"file":	"main/main.c",
			"line":	1599,
			"primary_score":	999644,
			"second_score":	119816
		}, {
			"file":	"main/main.c",
			"line":	1600,
			"primary_score":	999644,
			"second_score":	119815
		}, {
			"file":	"main/main.c",
			"line":	1602,
			"primary_score":	999644,
			"second_score":	119814
		}, {
			"file":	"main/main.c",
			"line":	1607,
			"primary_score":	999644,
			"second_score":	119813
		}, {
			"file":	"main/main.c",
			"line":	1608,
			"primary_score":	999644,
			"second_score":	119812
		}, {
			"file":	"main/main.c",
			"line":	1610,
			"primary_score":	999644,
			"second_score":	119811
		}, {
			"file":	"main/main.c",
			"line":	1613,
			"primary_score":	999644,
			"second_score":	119804
		}, {
			"file":	"main/main.c",
			"line":	1614,
			"primary_score":	999644,
			"second_score":	119798
		}, {
			"file":	"main/main.c",
			"line":	1615,
			"primary_score":	999644,
			"second_score":	119796
		}, {
			"file":	"main/main.c",
			"line":	1618,
			"primary_score":	999644,
			"second_score":	119794
		}, {
			"file":	"main/main.c",
			"line":	1619,
			"primary_score":	999644,
			"second_score":	119788
		}, {
			"file":	"main/main.c",
			"line":	1620,
			"primary_score":	999644,
			"second_score":	119430
		}, {
			"file":	"main/main.c",
			"line":	1623,
			"primary_score":	999644,
			"second_score":	119428
		}, {
			"file":	"main/main.c",
			"line":	1624,
			"primary_score":	999644,
			"second_score":	119422
		}, {
			"file":	"main/main.c",
			"line":	1626,
			"primary_score":	999644,
			"second_score":	119421
		}, {
			"file":	"main/main.c",
			"line":	1632,
			"primary_score":	999644,
			"second_score":	119418
		}, {
			"file":	"main/main.c",
			"line":	1635,
			"primary_score":	999644,
			"second_score":	119417
		}, {
			"file":	"main/main.c",
			"line":	1637,
			"primary_score":	999644,
			"second_score":	119415
		}, {
			"file":	"main/main.c",
			"line":	1638,
			"primary_score":	999644,
			"second_score":	119410
		}, {
			"file":	"main/main.c",
			"line":	1641,
			"primary_score":	999644,
			"second_score":	119408
		}, {
			"file":	"main/main.c",
			"line":	1642,
			"primary_score":	999644,
			"second_score":	119402
		}, {
			"file":	"main/main.c",
			"line":	1643,
			"primary_score":	999644,
			"second_score":	119397
		}, {
			"file":	"main/main.c",
			"line":	1646,
			"primary_score":	999644,
			"second_score":	119395
		}, {
			"file":	"main/main.c",
			"line":	1647,
			"primary_score":	999644,
			"second_score":	119394
		}, {
			"file":	"main/main.c",
			"line":	1648,
			"primary_score":	999644,
			"second_score":	118792
		}, {
			"file":	"main/main.c",
			"line":	1652,
			"primary_score":	999644,
			"second_score":	118789
		}, {
			"file":	"main/main.c",
			"line":	1653,
			"primary_score":	999644,
			"second_score":	118783
		}, {
			"file":	"main/main.c",
			"line":	1655,
			"primary_score":	999644,
			"second_score":	118782
		}, {
			"file":	"main/main.c",
			"line":	1656,
			"primary_score":	999644,
			"second_score":	118642
		}, {
			"file":	"main/main.c",
			"line":	1657,
			"primary_score":	999644,
			"second_score":	118641
		}, {
			"file":	"main/main.c",
			"line":	1660,
			"primary_score":	999644,
			"second_score":	118607
		}, {
			"file":	"main/main.c",
			"line":	1663,
			"primary_score":	999644,
			"second_score":	118605
		}, {
			"file":	"main/main.c",
			"line":	1664,
			"primary_score":	999840,
			"second_score":	118604
		}, {
			"file":	"main/main.c",
			"line":	1665,
			"primary_score":	999840,
			"second_score":	118603
		}, {
			"file":	"main/main.c",
			"line":	1667,
			"primary_score":	999644,
			"second_score":	118602
		}, {
			"file":	"main/main.c",
			"line":	1668,
			"primary_score":	999840,
			"second_score":	118601
		}, {
			"file":	"main/main.c",
			"line":	1669,
			"primary_score":	999840,
			"second_score":	118600
		}, {
			"file":	"main/main.c",
			"line":	1673,
			"primary_score":	999644,
			"second_score":	118599
		}, {
			"file":	"main/main.c",
			"line":	1676,
			"primary_score":	999644,
			"second_score":	113320
		}, {
			"file":	"main/main.c",
			"line":	1677,
			"primary_score":	999644,
			"second_score":	113314
		}, {
			"file":	"main/main.c",
			"line":	1678,
			"primary_score":	999644,
			"second_score":	113310
		}, {
			"file":	"main/main.c",
			"line":	1681,
			"primary_score":	999644,
			"second_score":	113308
		}, {
			"file":	"main/main.c",
			"line":	1682,
			"primary_score":	999644,
			"second_score":	113302
		}, {
			"file":	"main/main.c",
			"line":	1683,
			"primary_score":	999644,
			"second_score":	113256
		}, {
			"file":	"main/main.c",
			"line":	1686,
			"primary_score":	999644,
			"second_score":	113254
		}, {
			"file":	"main/main.c",
			"line":	1687,
			"primary_score":	999644,
			"second_score":	113248
		}, {
			"file":	"main/main.c",
			"line":	1688,
			"primary_score":	999644,
			"second_score":	113245
		}, {
			"file":	"main/main.c",
			"line":	1691,
			"primary_score":	999644,
			"second_score":	113243
		}, {
			"file":	"main/main.c",
			"line":	1692,
			"primary_score":	999644,
			"second_score":	113237
		}, {
			"file":	"main/main.c",
			"line":	1693,
			"primary_score":	999644,
			"second_score":	112818
		}, {
			"file":	"main/main.c",
			"line":	1694,
			"primary_score":	999644,
			"second_score":	112816
		}, {
			"file":	"main/main.c",
			"line":	1697,
			"primary_score":	999644,
			"second_score":	103416
		}, {
			"file":	"main/main.c",
			"line":	1698,
			"primary_score":	999644,
			"second_score":	103410
		}, {
			"file":	"main/main.c",
			"line":	1699,
			"primary_score":	999644,
			"second_score":	103408
		}, {
			"file":	"main/main.c",
			"line":	1732,
			"primary_score":	999644,
			"second_score":	121227
		}, {
			"file":	"main/main.c",
			"line":	1733,
			"primary_score":	999644,
			"second_score":	121226
		}, {
			"file":	"main/main.c",
			"line":	1753,
			"primary_score":	999644,
			"second_score":	3150
		}, {
			"file":	"main/main.c",
			"line":	1756,
			"primary_score":	999644,
			"second_score":	3149
		}, {
			"file":	"main/main.c",
			"line":	1759,
			"primary_score":	999644,
			"second_score":	3148
		}, {
			"file":	"main/main.c",
			"line":	1762,
			"primary_score":	999644,
			"second_score":	3147
		}, {
			"file":	"main/main.c",
			"line":	1766,
			"primary_score":	999644,
			"second_score":	3146
		}, {
			"file":	"main/main.c",
			"line":	2198,
			"primary_score":	999644,
			"second_score":	103400
		}, {
			"file":	"main/main.c",
			"line":	2200,
			"primary_score":	999644,
			"second_score":	103399
		}, {
			"file":	"main/main.c",
			"line":	2202,
			"primary_score":	999644,
			"second_score":	103398
		}, {
			"file":	"main/main.c",
			"line":	2215,
			"primary_score":	999644,
			"second_score":	103397
		}, {
			"file":	"main/main.c",
			"line":	2217,
			"primary_score":	999644,
			"second_score":	103392
		}, {
			"file":	"main/main.c",
			"line":	2220,
			"primary_score":	999644,
			"second_score":	6121
		}, {
			"file":	"main/main.c",
			"line":	2222,
			"primary_score":	999644,
			"second_score":	6055
		}, {
			"file":	"main/main.c",
			"line":	2223,
			"primary_score":	999644,
			"second_score":	6026
		}, {
			"file":	"main/main.c",
			"line":	2226,
			"primary_score":	999644,
			"second_score":	3567
		}, {
			"file":	"main/main.c",
			"line":	2229,
			"primary_score":	999644,
			"second_score":	3244
		}, {
			"file":	"main/main.c",
			"line":	2230,
			"primary_score":	999644,
			"second_score":	3214
		}, {
			"file":	"main/main.c",
			"line":	2235,
			"primary_score":	999644,
			"second_score":	3191
		}, {
			"file":	"main/main.c",
			"line":	2236,
			"primary_score":	999644,
			"second_score":	3154
		}, {
			"file":	"main/main.c",
			"line":	2238,
			"primary_score":	999644,
			"second_score":	3152
		}, {
			"file":	"main/main.c",
			"line":	2241,
			"primary_score":	999644,
			"second_score":	3151
		}, {
			"file":	"main/main.c",
			"line":	2242,
			"primary_score":	999644,
			"second_score":	3141
		}, {
			"file":	"main/main.c",
			"line":	2346,
			"primary_score":	999644,
			"second_score":	119828
		}, {
			"file":	"main/main.c",
			"line":	2354,
			"primary_score":	999644,
			"second_score":	119826
		}, {
			"file":	"main/main.c",
			"line":	2357,
			"primary_score":	999644,
			"second_score":	119825
		}, {
			"file":	"main/main.c",
			"line":	2359,
			"primary_score":	999644,
			"second_score":	119823
		}, {
			"file":	"main/output.c",
			"line":	103,
			"primary_score":	999644,
			"second_score":	3190
		}, {
			"file":	"main/output.c",
			"line":	104,
			"primary_score":	999644,
			"second_score":	3176
		}, {
			"file":	"main/output.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	3162
		}, {
			"file":	"main/output.c",
			"line":	129,
			"primary_score":	999644,
			"second_score":	119414
		}, {
			"file":	"main/output.c",
			"line":	131,
			"primary_score":	999644,
			"second_score":	119413
		}, {
			"file":	"main/output.c",
			"line":	132,
			"primary_score":	999644,
			"second_score":	119412
		}, {
			"file":	"main/output.c",
			"line":	135,
			"primary_score":	999644,
			"second_score":	119411
		}, {
			"file":	"main/output.c",
			"line":	198,
			"primary_score":	999644,
			"second_score":	121225
		}, {
			"file":	"main/output.c",
			"line":	201,
			"primary_score":	999644,
			"second_score":	121224
		}, {
			"file":	"main/output.c",
			"line":	202,
			"primary_score":	999644,
			"second_score":	121181
		}, {
			"file":	"main/output.c",
			"line":	281,
			"primary_score":	999644,
			"second_score":	119416
		}, {
			"file":	"main/output.c",
			"line":	697,
			"primary_score":	999644,
			"second_score":	121219
		}, {
			"file":	"main/output.c",
			"line":	703,
			"primary_score":	999644,
			"second_score":	121218
		}, {
			"file":	"main/output.c",
			"line":	711,
			"primary_score":	999644,
			"second_score":	121216
		}, {
			"file":	"main/output.c",
			"line":	715,
			"primary_score":	999644,
			"second_score":	121215
		}, {
			"file":	"main/output.c",
			"line":	716,
			"primary_score":	999644,
			"second_score":	121214
		}, {
			"file":	"main/output.c",
			"line":	717,
			"primary_score":	999644,
			"second_score":	121213
		}, {
			"file":	"main/output.c",
			"line":	719,
			"primary_score":	999644,
			"second_score":	121212
		}, {
			"file":	"main/output.c",
			"line":	785,
			"primary_score":	999644,
			"second_score":	121183
		}, {
			"file":	"main/output.c",
			"line":	789,
			"primary_score":	999644,
			"second_score":	121182
		}, {
			"file":	"main/output.c",
			"line":	975,
			"primary_score":	999644,
			"second_score":	121223
		}, {
			"file":	"main/output.c",
			"line":	976,
			"primary_score":	999644,
			"second_score":	121222
		}, {
			"file":	"main/output.c",
			"line":	977,
			"primary_score":	999644,
			"second_score":	121221
		}, {
			"file":	"main/output.c",
			"line":	979,
			"primary_score":	999644,
			"second_score":	121220
		}, {
			"file":	"main/output.c",
			"line":	983,
			"primary_score":	999644,
			"second_score":	121217
		}, {
			"file":	"main/output.c",
			"line":	990,
			"primary_score":	999644,
			"second_score":	121211
		}, {
			"file":	"main/output.c",
			"line":	1002,
			"primary_score":	999644,
			"second_score":	121210
		}, {
			"file":	"main/output.c",
			"line":	1003,
			"primary_score":	999644,
			"second_score":	121209
		}, {
			"file":	"main/output.c",
			"line":	1006,
			"primary_score":	999644,
			"second_score":	121208
		}, {
			"file":	"main/output.c",
			"line":	1010,
			"primary_score":	999644,
			"second_score":	121207
		}, {
			"file":	"main/output.c",
			"line":	1011,
			"primary_score":	999644,
			"second_score":	124729
		}, {
			"file":	"main/output.c",
			"line":	1014,
			"primary_score":	999644,
			"second_score":	124727
		}, {
			"file":	"main/output.c",
			"line":	1015,
			"primary_score":	999644,
			"second_score":	124725
		}, {
			"file":	"main/output.c",
			"line":	1016,
			"primary_score":	999644,
			"second_score":	124722
		}, {
			"file":	"main/output.c",
			"line":	1022,
			"primary_score":	999644,
			"second_score":	121206
		}, {
			"file":	"main/output.c",
			"line":	1023,
			"primary_score":	999644,
			"second_score":	121191
		}, {
			"file":	"main/output.c",
			"line":	1024,
			"primary_score":	999644,
			"second_score":	121190
		}, {
			"file":	"main/output.c",
			"line":	1026,
			"primary_score":	999644,
			"second_score":	121185
		}, {
			"file":	"main/output.c",
			"line":	1028,
			"primary_score":	999644,
			"second_score":	121184
		}, {
			"file":	"main/php_ini.c",
			"line":	194,
			"primary_score":	999644,
			"second_score":	3256
		}, {
			"file":	"main/php_ini.c",
			"line":	197,
			"primary_score":	999644,
			"second_score":	3255
		}, {
			"file":	"main/php_ini.c",
			"line":	198,
			"primary_score":	999644,
			"second_score":	3254
		}, {
			"file":	"main/php_ini.c",
			"line":	729,
			"primary_score":	999644,
			"second_score":	3566
		}, {
			"file":	"main/php_ini.c",
			"line":	730,
			"primary_score":	999644,
			"second_score":	3247
		}, {
			"file":	"main/php_ini.c",
			"line":	734,
			"primary_score":	999644,
			"second_score":	3246
		}, {
			"file":	"main/php_ini.c",
			"line":	738,
			"primary_score":	999644,
			"second_score":	3245
		}, {
			"file":	"main/php_logos.c",
			"line":	67,
			"primary_score":	999644,
			"second_score":	6054
		}, {
			"file":	"main/php_logos.c",
			"line":	68,
			"primary_score":	999644,
			"second_score":	6027
		}, {
			"file":	"main/php_open_temporary_file.c",
			"line":	183,
			"primary_score":	999644,
			"second_score":	3153
		}, {
			"file":	"main/php_ticks.c",
			"line":	32,
			"primary_score":	999644,
			"second_score":	119810
		}, {
			"file":	"main/php_ticks.c",
			"line":	37,
			"primary_score":	999644,
			"second_score":	3145
		}, {
			"file":	"main/snprintf.c",
			"line":	317,
			"primary_score":	999658,
			"second_score":	120190
		}, {
			"file":	"main/snprintf.c",
			"line":	318,
			"primary_score":	999658,
			"second_score":	120189
		}, {
			"file":	"main/snprintf.c",
			"line":	320,
			"primary_score":	999658,
			"second_score":	120188
		}, {
			"file":	"main/snprintf.c",
			"line":	324,
			"primary_score":	999658,
			"second_score":	120187
		}, {
			"file":	"main/snprintf.c",
			"line":	335,
			"primary_score":	999658,
			"second_score":	120186
		}, {
			"file":	"main/snprintf.c",
			"line":	339,
			"primary_score":	999658,
			"second_score":	120185
		}, {
			"file":	"main/snprintf.c",
			"line":	346,
			"primary_score":	999658,
			"second_score":	120184
		}, {
			"file":	"main/snprintf.c",
			"line":	347,
			"primary_score":	999658,
			"second_score":	120183
		}, {
			"file":	"main/snprintf.c",
			"line":	349,
			"primary_score":	999658,
			"second_score":	120182
		}, {
			"file":	"main/snprintf.c",
			"line":	350,
			"primary_score":	999658,
			"second_score":	120181
		}, {
			"file":	"main/snprintf.c",
			"line":	354,
			"primary_score":	999658,
			"second_score":	120180
		}, {
			"file":	"main/snprintf.c",
			"line":	355,
			"primary_score":	999658,
			"second_score":	120179
		}, {
			"file":	"main/spprintf.c",
			"line":	441,
			"primary_score":	999719,
			"second_score":	120193
		}, {
			"file":	"main/spprintf.c",
			"line":	444,
			"primary_score":	999771,
			"second_score":	120192
		}, {
			"file":	"main/spprintf.c",
			"line":	474,
			"primary_score":	999719,
			"second_score":	120191
		}, {
			"file":	"main/spprintf.c",
			"line":	476,
			"primary_score":	999719,
			"second_score":	120178
		}, {
			"file":	"main/spprintf.c",
			"line":	478,
			"primary_score":	999719,
			"second_score":	120176
		}, {
			"file":	"main/spprintf.c",
			"line":	479,
			"primary_score":	999719,
			"second_score":	120175
		}, {
			"file":	"main/spprintf.c",
			"line":	481,
			"primary_score":	999719,
			"second_score":	120174
		}, {
			"file":	"main/spprintf.c",
			"line":	483,
			"primary_score":	999719,
			"second_score":	120173
		}, {
			"file":	"main/spprintf.c",
			"line":	486,
			"primary_score":	999719,
			"second_score":	120172
		}, {
			"file":	"main/spprintf.c",
			"line":	775,
			"primary_score":	999847,
			"second_score":	120428
		}, {
			"file":	"main/streams/filter.c",
			"line":	37,
			"primary_score":	999644,
			"second_score":	6095
		}, {
			"file":	"main/streams/filter.c",
			"line":	54,
			"primary_score":	999644,
			"second_score":	62055
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	371,
			"primary_score":	999644,
			"second_score":	113847
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	372,
			"primary_score":	999644,
			"second_score":	113846
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	374,
			"primary_score":	999644,
			"second_score":	113845
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	377,
			"primary_score":	999644,
			"second_score":	113844
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	392,
			"primary_score":	999644,
			"second_score":	113843
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	393,
			"primary_score":	999644,
			"second_score":	113842
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	394,
			"primary_score":	999644,
			"second_score":	113841
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	404,
			"primary_score":	999644,
			"second_score":	113840
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	405,
			"primary_score":	999644,
			"second_score":	113839
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	413,
			"primary_score":	999644,
			"second_score":	113838
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	425,
			"primary_score":	999644,
			"second_score":	113837
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	427,
			"primary_score":	999644,
			"second_score":	113818
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	432,
			"primary_score":	999644,
			"second_score":	113857
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	434,
			"primary_score":	999644,
			"second_score":	113856
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	441,
			"primary_score":	999644,
			"second_score":	113855
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	442,
			"primary_score":	999644,
			"second_score":	113854
		}, {
			"file":	"main/streams/streams.c",
			"line":	104,
			"primary_score":	999644,
			"second_score":	119338
		}, {
			"file":	"main/streams/streams.c",
			"line":	105,
			"primary_score":	999644,
			"second_score":	119329
		}, {
			"file":	"main/streams/streams.c",
			"line":	333,
			"primary_score":	999644,
			"second_score":	113872
		}, {
			"file":	"main/streams/streams.c",
			"line":	334,
			"primary_score":	999644,
			"second_score":	113871
		}, {
			"file":	"main/streams/streams.c",
			"line":	335,
			"primary_score":	999644,
			"second_score":	113870
		}, {
			"file":	"main/streams/streams.c",
			"line":	336,
			"primary_score":	999644,
			"second_score":	113869
		}, {
			"file":	"main/streams/streams.c",
			"line":	337,
			"primary_score":	999644,
			"second_score":	113868
		}, {
			"file":	"main/streams/streams.c",
			"line":	339,
			"primary_score":	999644,
			"second_score":	113867
		}, {
			"file":	"main/streams/streams.c",
			"line":	352,
			"primary_score":	999644,
			"second_score":	113866
		}, {
			"file":	"main/streams/streams.c",
			"line":	361,
			"primary_score":	999644,
			"second_score":	113865
		}, {
			"file":	"main/streams/streams.c",
			"line":	365,
			"primary_score":	999644,
			"second_score":	113864
		}, {
			"file":	"main/streams/streams.c",
			"line":	383,
			"primary_score":	999644,
			"second_score":	113863
		}, {
			"file":	"main/streams/streams.c",
			"line":	402,
			"primary_score":	999644,
			"second_score":	113862
		}, {
			"file":	"main/streams/streams.c",
			"line":	405,
			"primary_score":	999644,
			"second_score":	113852
		}, {
			"file":	"main/streams/streams.c",
			"line":	410,
			"primary_score":	999644,
			"second_score":	113851
		}, {
			"file":	"main/streams/streams.c",
			"line":	414,
			"primary_score":	999644,
			"second_score":	113850
		}, {
			"file":	"main/streams/streams.c",
			"line":	415,
			"primary_score":	999644,
			"second_score":	113849
		}, {
			"file":	"main/streams/streams.c",
			"line":	427,
			"primary_score":	999644,
			"second_score":	113848
		}, {
			"file":	"main/streams/streams.c",
			"line":	428,
			"primary_score":	999644,
			"second_score":	113817
		}, {
			"file":	"main/streams/streams.c",
			"line":	431,
			"primary_score":	999644,
			"second_score":	113816
		}, {
			"file":	"main/streams/streams.c",
			"line":	438,
			"primary_score":	999644,
			"second_score":	113815
		}, {
			"file":	"main/streams/streams.c",
			"line":	439,
			"primary_score":	999644,
			"second_score":	113814
		}, {
			"file":	"main/streams/streams.c",
			"line":	442,
			"primary_score":	999644,
			"second_score":	113813
		}, {
			"file":	"main/streams/streams.c",
			"line":	446,
			"primary_score":	999644,
			"second_score":	113812
		}, {
			"file":	"main/streams/streams.c",
			"line":	451,
			"primary_score":	999644,
			"second_score":	113811
		}, {
			"file":	"main/streams/streams.c",
			"line":	456,
			"primary_score":	999644,
			"second_score":	113810
		}, {
			"file":	"main/streams/streams.c",
			"line":	461,
			"primary_score":	999644,
			"second_score":	113809
		}, {
			"file":	"main/streams/streams.c",
			"line":	493,
			"primary_score":	999644,
			"second_score":	113808
		}, {
			"file":	"main/streams/streams.c",
			"line":	494,
			"primary_score":	999644,
			"second_score":	113807
		}, {
			"file":	"main/streams/streams.c",
			"line":	495,
			"primary_score":	999644,
			"second_score":	113788
		}, {
			"file":	"main/streams/streams.c",
			"line":	498,
			"primary_score":	999644,
			"second_score":	113787
		}, {
			"file":	"main/streams/streams.c",
			"line":	502,
			"primary_score":	999644,
			"second_score":	113768
		}, {
			"file":	"main/streams/streams.c",
			"line":	506,
			"primary_score":	999644,
			"second_score":	113767
		}, {
			"file":	"main/streams/streams.c",
			"line":	1114,
			"primary_score":	999644,
			"second_score":	113861
		}, {
			"file":	"main/streams/streams.c",
			"line":	1116,
			"primary_score":	999644,
			"second_score":	113860
		}, {
			"file":	"main/streams/streams.c",
			"line":	1120,
			"primary_score":	999644,
			"second_score":	113859
		}, {
			"file":	"main/streams/streams.c",
			"line":	1121,
			"primary_score":	999644,
			"second_score":	113858
		}, {
			"file":	"main/streams/streams.c",
			"line":	1124,
			"primary_score":	999644,
			"second_score":	113853
		}, {
			"file":	"main/streams/streams.c",
			"line":	1498,
			"primary_score":	999644,
			"second_score":	113874
		}, {
			"file":	"main/streams/streams.c",
			"line":	1500,
			"primary_score":	999644,
			"second_score":	113873
		}, {
			"file":	"main/streams/streams.c",
			"line":	1511,
			"primary_score":	999644,
			"second_score":	113247
		}, {
			"file":	"main/streams/streams.c",
			"line":	1517,
			"primary_score":	999644,
			"second_score":	113246
		}, {
			"file":	"main/streams/streams.c",
			"line":	1553,
			"primary_score":	999644,
			"second_score":	6120
		}, {
			"file":	"main/streams/streams.c",
			"line":	1554,
			"primary_score":	999644,
			"second_score":	6096
		}, {
			"file":	"main/streams/streams.c",
			"line":	1555,
			"primary_score":	999644,
			"second_score":	6086
		}, {
			"file":	"main/streams/streams.c",
			"line":	1556,
			"primary_score":	999644,
			"second_score":	6056
		}, {
			"file":	"main/streams/streams.c",
			"line":	1592,
			"primary_score":	999644,
			"second_score":	97529
		}, {
			"file":	"main/streams/transports.c",
			"line":	29,
			"primary_score":	999644,
			"second_score":	6085
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	262,
			"primary_score":	999644,
			"second_score":	121200
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	280,
			"primary_score":	999644,
			"second_score":	121199
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	281,
			"primary_score":	999644,
			"second_score":	121198
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	284,
			"primary_score":	999644,
			"second_score":	121197
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	288,
			"primary_score":	999644,
			"second_score":	121196
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	300,
			"primary_score":	999644,
			"second_score":	121205
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	301,
			"primary_score":	999644,
			"second_score":	121204
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	302,
			"primary_score":	999644,
			"second_score":	121203
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	311,
			"primary_score":	999644,
			"second_score":	121202
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	313,
			"primary_score":	999644,
			"second_score":	121201
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	314,
			"primary_score":	999644,
			"second_score":	121195
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	320,
			"primary_score":	999644,
			"second_score":	121194
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	321,
			"primary_score":	999644,
			"second_score":	121193
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	324,
			"primary_score":	999644,
			"second_score":	121192
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	333,
			"primary_score":	999644,
			"second_score":	103394
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	386,
			"primary_score":	999644,
			"second_score":	113287
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	387,
			"primary_score":	999644,
			"second_score":	113286
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	391,
			"primary_score":	999644,
			"second_score":	113285
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	403,
			"primary_score":	999644,
			"second_score":	124761
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	411,
			"primary_score":	999644,
			"second_score":	124736
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	928,
			"primary_score":	999646,
			"second_score":	176004
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	932,
			"primary_score":	999646,
			"second_score":	176003
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	933,
			"primary_score":	999646,
			"second_score":	176002
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1255,
			"primary_score":	999644,
			"second_score":	119822
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1256,
			"primary_score":	999644,
			"second_score":	119821
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1293,
			"primary_score":	999644,
			"second_score":	121705
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1296,
			"primary_score":	999644,
			"second_score":	118677
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1435,
			"primary_score":	999644,
			"second_score":	119820
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1437,
			"primary_score":	999644,
			"second_score":	119818
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1439,
			"primary_score":	999644,
			"second_score":	119817
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1441,
			"primary_score":	999644,
			"second_score":	103406
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1442,
			"primary_score":	999644,
			"second_score":	103396
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1444,
			"primary_score":	999644,
			"second_score":	103405
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1448,
			"primary_score":	999644,
			"second_score":	103404
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1449,
			"primary_score":	999644,
			"second_score":	103403
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1452,
			"primary_score":	999644,
			"second_score":	103402
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1453,
			"primary_score":	999644,
			"second_score":	103401
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1455,
			"primary_score":	999644,
			"second_score":	3136
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1460,
			"primary_score":	999644,
			"second_score":	1
		}],
	"mutation_info":	[{
			"file":	"ext/date/php_date.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"ext/date/php_date.c",
			"lines":	[{
					"line":	3446,
					"switches":	[]
				}, {
					"line":	3447,
					"switches":	[]
				}, {
					"line":	3448,
					"switches":	[]
				}, {
					"line":	3449,
					"switches":	[]
				}, {
					"line":	3450,
					"switches":	[]
				}, {
					"line":	3452,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [133, 134, 135, 136], [1, 2, 3, 4, 5, 6, 7], [], [], [], [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [], [], [], [], [], []],
							"begin_line":	3453,
							"begin_column":	0,
							"end_line":	3453,
							"end_column":	0,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors, 0, sizeof (*(errors)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3453\", 13, &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return -1;\n", "if (__is_neg(\"\", \"L3453\", 13, &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 0;\n", "if (__is_neg(\"\", \"L3453\", 13, &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 1;\n", "if (__is_neg(\"\", \"L3453\", 13, &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	2,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	3,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	4,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	5,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	6,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	7,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-11.960520430408625, -11.248696313408624, -13.057921126208624, -13.057921126208624, -12.514884126208624, -12.811882212408623, -13.792375036108623, -13.844420140408625, -12.863037888408623, -13.138897399408624, -13.381985056408624, -13.628023970208623, -13.628023970208623]
								}, {
									"case":	134,
									"scores":	[-9.1360514304086244, -8.4242273134086254, -10.233452126208624, -10.233452126208624, -9.6904151262086238, -9.9874132124086241, -10.967906036108623, -11.019951140408624, -10.038568888408623, -10.314428399408623, -10.557516056408623, -10.803554970208623, -10.803554970208623]
								}, {
									"case":	135,
									"scores":	[-11.960520430408625, -11.248696313408624, -13.057921126208624, -13.057921126208624, -12.514884126208624, -12.811882212408623, -13.792375036108623, -13.844420140408625, -12.863037888408623, -13.138897399408624, -13.381985056408624, -13.628023970208623, -13.628023970208623]
								}, {
									"case":	136,
									"scores":	[-11.960520430408625, -11.248696313408624, -13.057921126208624, -13.057921126208624, -12.514884126208624, -12.811882212408623, -13.792375036108623, -13.844420140408625, -12.863037888408623, -13.138897399408624, -13.381985056408624, -13.628023970208623, -13.628023970208623]
								}]
						}, {
							"switch":	1,
							"types":	[[], [], [1], [], [], [], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], [], [3, 4, 5, 6, 7, 8, 9, 10, 11], [], [], [], [], [], [], [], [2]],
							"begin_line":	3453,
							"begin_column":	2,
							"end_line":	3453,
							"end_column":	70,
							"patch_codes":	["if (!__is_neg(\"\", \"L3453\", 13, &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors);\n", "{\n}\n", "Debug(format, format_length, &b, &e, &p, &r, &errors)", "php_printf(format, format_length, &b, &e, &p, &r, &errors)", "printf(format, format_length, &b, &e, &p, &r, &errors)", "virtual_open(format, format_length, &b, &e, &p, &r, &errors)", "wprintf(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(format, format_length, &b, &e, &p, &r, &errors)", "zend_fcall_info_argn(format, format_length, &b, &e, &p, &r, &errors)", "zend_ptr_stack_n_pop(format, format_length, &b, &e, &p, &r, &errors)", "zend_ptr_stack_n_push(format, format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&b), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&e), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&errors), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&format_length), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&p), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&r), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&retval), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((&rt), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (0 * format_length), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (0 * r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (0 * retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (b != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (b != e), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (b == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (b == e), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (e != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (e == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (errors != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (errors == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length != r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length != retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length * r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length * retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length + 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length + r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length + retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length - 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length - r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length - retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length == r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length == retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (format_length), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (p != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (p == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r != retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r * format_length), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r * retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r + 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r + retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r - 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r - retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r == retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval * format_length), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval * r), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval + 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval - 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (retval), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (rt != 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, (rt == 0), &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&errors), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&format), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&format_length), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&p), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&r), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&retval), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(&rt), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&errors), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&format), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&format_length), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&p), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&r), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&retval), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(&rt), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&b), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&e), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&errors), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&format), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&format_length), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&r), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&retval), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(&rt), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(0 * format_length), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(0 * r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(0 * retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(b != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(b != e), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(b == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(b == e), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(e != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(e == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(errors != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(errors == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length != r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length != retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length * r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length * retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length + 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length + r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length + retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length - 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length - r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length - retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length == r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length == retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(format_length), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(p != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(p == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r != retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r * format_length), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r * retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r + 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r + retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r - 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r - retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r == retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval * format_length), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval * r), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval + 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval - 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(retval), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(rt != 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &(rt == 0), &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&b))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&e))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&errors))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&format))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&format_length))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&p))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&r))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&retval))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(&rt))", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.1391308940086233, -7.314684355008624, -8.3583170850086237, -8.3583170850086237, -7.7446336450086246, -7.600428985008624, -9.0356803319086243, -7.8905506950086242, -8.7460907460086244, -7.6924840450086247, -8.5806246950086233, -9.338512795008624, -9.338512795008624]
								}, {
									"case":	2,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	3,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	4,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	5,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	6,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	7,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	8,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	9,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	10,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	11,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	12,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	13,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	14,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	15,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	16,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	17,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	18,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	19,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	20,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	21,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	22,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	23,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	24,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	25,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	26,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	27,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	28,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	29,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	30,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	31,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	32,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	33,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	34,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	35,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	36,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	37,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	38,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	39,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	40,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	41,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	42,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	43,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	44,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	45,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	46,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	47,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	48,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	49,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	50,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	51,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	52,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	53,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	54,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	55,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	56,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	57,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	58,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	59,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	60,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	61,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	62,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	63,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	64,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	65,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	66,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	67,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	68,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	69,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	70,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	71,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	72,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	73,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	74,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	75,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	76,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	77,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	78,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	79,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	80,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	81,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	82,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	83,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	84,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	85,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	86,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	87,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	88,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	89,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	90,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	91,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	92,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	93,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	94,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	95,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	96,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	97,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	98,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	99,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	100,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	101,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	102,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	103,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	104,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	105,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	106,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	107,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	108,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	109,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	110,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	111,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	112,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	113,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	114,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	115,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	116,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	117,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	118,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	119,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	120,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	121,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	122,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	123,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	124,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	125,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	126,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	127,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	128,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	129,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	130,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	131,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	132,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	133,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	134,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	135,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	136,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	137,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	138,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	139,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	140,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	141,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	142,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	143,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	144,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	145,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	146,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	147,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	148,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	149,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	150,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	151,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	152,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	153,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	154,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	155,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	156,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	157,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	158,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	159,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	160,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	161,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	162,
									"scores":	[-7.0030372250086241]
								}, {
									"case":	163,
									"scores":	[-7.0030372250086241]
								}]
						}]
				}, {
					"line":	3458,
					"switches":	[{
							"switch":	4,
							"types":	[[], [], [], [], [132, 133, 134, 135], [1, 2, 3, 4, 5, 6], [], [], [], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [], [], [], [], [], []],
							"begin_line":	3459,
							"begin_column":	1,
							"end_line":	3459,
							"end_column":	1,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3459\", 9, &(rt), sizeof (rt), &(p), sizeof (p), &(retval), sizeof (retval), &(format), sizeof (format), &(errors), sizeof (errors), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return -1;\n", "if (__is_neg(\"\", \"L3459\", 9, &(rt), sizeof (rt), &(p), sizeof (p), &(retval), sizeof (retval), &(format), sizeof (format), &(errors), sizeof (errors), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 0;\n", "if (__is_neg(\"\", \"L3459\", 9, &(rt), sizeof (rt), &(p), sizeof (p), &(retval), sizeof (retval), &(format), sizeof (format), &(errors), sizeof (errors), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 1;\n", "if (__is_neg(\"\", \"L3459\", 9, &(rt), sizeof (rt), &(p), sizeof (p), &(retval), sizeof (retval), &(format), sizeof (format), &(errors), sizeof (errors), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	2,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	3,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	4,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	5,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	6,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	7,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	8,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	9,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	10,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	11,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	12,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	13,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	14,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	15,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	16,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	17,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	18,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	19,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	20,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	21,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	22,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	23,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	24,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	25,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	26,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	27,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	28,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	29,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	30,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	31,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	32,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	33,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	34,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	35,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	36,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	37,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	38,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	39,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	40,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	41,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	42,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	43,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	44,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	45,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	46,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	47,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	48,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	49,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	50,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	51,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	52,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	53,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	54,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	55,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	56,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	57,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	58,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	59,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	60,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	61,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	62,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	63,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	64,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	65,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	66,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	67,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	68,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	69,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	70,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	71,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	72,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	73,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	74,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	75,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	76,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	77,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	78,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	79,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	80,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	81,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	82,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	83,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	84,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	85,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	86,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	87,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	88,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	89,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	90,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	91,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	92,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	93,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	94,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	95,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	96,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	97,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	98,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	99,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	100,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	101,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	102,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	103,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	104,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	105,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	106,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	107,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	108,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	109,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	110,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	111,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	112,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	113,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	114,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	115,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	116,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	117,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	118,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	119,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	120,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	121,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	122,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	123,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	124,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	125,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	126,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	127,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	128,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	129,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	130,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	131,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	132,
									"scores":	[-10.771392623373586, -10.247238220173585, -11.818245806373586, -11.965656823373585, -11.963706220173584, -11.253832706373586, -11.963706220173584, -11.963706220173584, -11.717667306373585]
								}, {
									"case":	133,
									"scores":	[-7.9469236233735856, -7.4227692201735849, -8.9937768063735852, -9.1411878233735848, -9.1392372201735839, -8.4293637063735858, -9.1392372201735839, -9.1392372201735839, -8.8931983063735842]
								}, {
									"case":	134,
									"scores":	[-10.771392623373586, -10.247238220173585, -11.818245806373586, -11.965656823373585, -11.963706220173584, -11.253832706373586, -11.963706220173584, -11.963706220173584, -11.717667306373585]
								}, {
									"case":	135,
									"scores":	[-10.771392623373586, -10.247238220173585, -11.818245806373586, -11.965656823373585, -11.963706220173584, -11.253832706373586, -11.963706220173584, -11.963706220173584, -11.717667306373585]
								}]
						}, {
							"switch":	5,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3459,
							"begin_column":	3,
							"end_line":	3459,
							"end_column":	9,
							"patch_codes":	["if (!__is_neg(\"\", \"L3459\", 9, &(rt), sizeof (rt), &(p), sizeof (p), &(retval), sizeof (retval), &(format), sizeof (format), &(errors), sizeof (errors), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    *rt = p;\n", "{\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.1853415903735849, -7.3780048903735853, -7.9300411353735853, -7.8786365803735849, -7.8729138803735852, -7.0873655503735851, -7.8729138803735852, -7.8729138803735852, -7.1150257803735855]
								}, {
									"case":	2,
									"scores":	[-6.9626318103735851]
								}]
						}]
				}, {
					"line":	3459,
					"switches":	[{
							"switch":	6,
							"types":	[[], [], [], [], [132, 133, 134, 135], [1, 2, 3, 4, 5, 6], [], [], [], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [], [], [], [], [], []],
							"begin_line":	3460,
							"begin_column":	1,
							"end_line":	3460,
							"end_column":	1,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3460\", 9, &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(errors), sizeof (errors), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return -1;\n", "if (__is_neg(\"\", \"L3460\", 9, &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(errors), sizeof (errors), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 0;\n", "if (__is_neg(\"\", \"L3460\", 9, &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(errors), sizeof (errors), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 1;\n", "if (__is_neg(\"\", \"L3460\", 9, &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(errors), sizeof (errors), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	2,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	3,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	4,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	5,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	6,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	7,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	8,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	9,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	10,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	11,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	12,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	13,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	14,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	15,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	16,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	17,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	18,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	19,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	20,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	21,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	22,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	23,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	24,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	25,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	26,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	27,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	28,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	29,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	30,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	31,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	32,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	33,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	34,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	35,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	36,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	37,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	38,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	39,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	40,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	41,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	42,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	43,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	44,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	45,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	46,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	47,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	48,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	49,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	50,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	51,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	52,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	53,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	54,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	55,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	56,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	57,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	58,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	59,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	60,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	61,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	62,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	63,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	64,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	65,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	66,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	67,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	68,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	69,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	70,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	71,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	72,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	73,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	74,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	75,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	76,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	77,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	78,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	79,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	80,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	81,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	82,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	83,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	84,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	85,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	86,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	87,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	88,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	89,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	90,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	91,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	92,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	93,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	94,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	95,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	96,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	97,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	98,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	99,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	100,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	101,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	102,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	103,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	104,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	105,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	106,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	107,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	108,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	109,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	110,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	111,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	112,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	113,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	114,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	115,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	116,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	117,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	118,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	119,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	120,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	121,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	122,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	123,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	124,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	125,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	126,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	127,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	128,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	129,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	130,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	131,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	132,
									"scores":	[-12.075634954056065, -12.647686236056066, -12.336682232856065, -12.550757512856064, -12.552708116056065, -11.840883999056064, -12.550757512856064, -12.550757512856064, -12.304718599056065]
								}, {
									"case":	133,
									"scores":	[-9.2511659540560647, -9.823217236056065, -9.512213232856066, -9.7262885128560654, -9.7282391160560646, -9.0164149990560656, -9.7262885128560654, -9.7262885128560654, -9.4802495990560658]
								}, {
									"case":	134,
									"scores":	[-12.075634954056065, -12.647686236056066, -12.336682232856065, -12.550757512856064, -12.552708116056065, -11.840883999056064, -12.550757512856064, -12.550757512856064, -12.304718599056065]
								}, {
									"case":	135,
									"scores":	[-12.075634954056065, -12.647686236056066, -12.336682232856065, -12.550757512856064, -12.552708116056065, -11.840883999056064, -12.550757512856064, -12.550757512856064, -12.304718599056065]
								}]
						}, {
							"switch":	7,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3460,
							"begin_column":	3,
							"end_line":	3460,
							"end_column":	12,
							"patch_codes":	["if (!__is_neg(\"\", \"L3460\", 9, &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(errors), sizeof (errors), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r)))\n    retval = 0;\n", "{\n}\n", "retval = (-1)", "retval = (0 * format_length)", "retval = (0 * r)", "retval = (0 * retval)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (b != 0)", "retval = (b != e)", "retval = (b == 0)", "retval = (b == e)", "retval = (e != 0)", "retval = (e == 0)", "retval = (errors != 0)", "retval = (errors == 0)", "retval = (format != 0)", "retval = (format == 0)", "retval = (format_length != 0)", "retval = (format_length != r)", "retval = (format_length != retval)", "retval = (format_length * r)", "retval = (format_length * retval)", "retval = (format_length + 0)", "retval = (format_length + r)", "retval = (format_length + retval)", "retval = (format_length - 0)", "retval = (format_length - r)", "retval = (format_length - retval)", "retval = (format_length == 0)", "retval = (format_length == r)", "retval = (format_length == retval)", "retval = (format_length)", "retval = (p != 0)", "retval = (p == 0)", "retval = (r != 0)", "retval = (r != retval)", "retval = (r * format_length)", "retval = (r * retval)", "retval = (r + 0)", "retval = (r + retval)", "retval = (r - 0)", "retval = (r - retval)", "retval = (r == 0)", "retval = (r == retval)", "retval = (r)", "retval = (retval != 0)", "retval = (retval * format_length)", "retval = (retval * r)", "retval = (retval + 0)", "retval = (retval - 0)", "retval = (retval == 0)", "retval = (retval)", "retval = (rt != 0)", "retval = (rt == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.6497157640560651, -8.303904583556065, -8.2216781730560662, -8.5922411730560651, -8.5979638730560666, -7.8066928430560658, -8.5922411730560651, -8.5922411730560651, -7.8343530730560653]
								}, {
									"case":	2,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	3,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	4,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	5,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	6,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	7,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	8,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	9,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	10,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	11,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	12,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	13,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	14,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	15,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	16,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	17,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	18,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	19,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	20,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	21,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	22,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	23,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	24,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	25,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	26,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	27,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	28,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	29,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	30,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	31,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	32,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	33,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	34,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	35,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	36,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	37,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	38,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	39,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	40,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	41,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	42,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	43,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	44,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	45,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	46,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	47,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	48,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	49,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	50,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	51,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	52,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	53,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	54,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	55,
									"scores":	[-6.9424291030560656]
								}, {
									"case":	56,
									"scores":	[-6.9424291030560656]
								}]
						}]
				}, {
					"line":	3454,
					"switches":	[{
							"switch":	2,
							"types":	[[], [], [], [], [133, 134, 135, 136], [1, 2, 3, 4, 5, 6, 7], [], [], [], [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [], [], [], [], [], []],
							"begin_line":	3455,
							"begin_column":	0,
							"end_line":	3455,
							"end_column":	0,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors, 0, sizeof (*(errors)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return -1;\n", "if (__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 0;\n", "if (__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 1;\n", "if (__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	2,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	3,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	4,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	5,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	6,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	7,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	8,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	9,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	10,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	11,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	12,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	13,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	14,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	15,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	16,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	17,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	18,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	19,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	20,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	21,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	22,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	23,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	24,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	25,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	26,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	27,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	28,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	29,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	30,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	31,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	32,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	33,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	34,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	35,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	36,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	37,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	38,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	39,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	40,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	41,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	42,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	43,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	44,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	45,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	46,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	47,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	48,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	49,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	50,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	51,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	52,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	53,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	54,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	55,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	56,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	57,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	58,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	59,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	60,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	61,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	62,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	63,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	64,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	65,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	66,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	67,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	68,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	69,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	70,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	71,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	72,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	73,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	74,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	75,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	76,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	77,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	78,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	79,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	80,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	81,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	82,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	83,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	84,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	85,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	86,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	87,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	88,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	89,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	90,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	91,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	92,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	93,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	94,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	95,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	96,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	97,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	98,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	99,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	100,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	101,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	102,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	103,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	104,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	105,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	106,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	107,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	108,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	109,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	110,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	111,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	112,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	113,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	114,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	115,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	116,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	117,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	118,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	119,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	120,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	121,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	122,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	123,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	124,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	125,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	126,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	127,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	128,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	129,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	130,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	131,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	132,
									"scores":	[-6.9828345176911046]
								}, {
									"case":	133,
									"scores":	[-14.781099372791106, -14.051548017091104, -12.872693003091104, -13.016176855091105, -13.364251928891104, -13.364251928891104, -11.647783928891105, -13.118213015091104, -13.425434236091103, -12.513622692091104, -14.274043549091104, -14.520082462891104, -14.520082462891104]
								}, {
									"case":	134,
									"scores":	[-11.956630372791105, -11.227079017091103, -10.048224003091105, -10.191707855091105, -10.539782928891103, -10.539782928891103, -8.8233149288911044, -10.293744015091104, -10.6009652360911, -9.6891536920911054, -11.449574549091103, -11.695613462891103, -11.695613462891103]
								}, {
									"case":	135,
									"scores":	[-14.781099372791106, -14.051548017091104, -12.872693003091104, -13.016176855091105, -13.364251928891104, -13.364251928891104, -11.647783928891105, -13.118213015091104, -13.425434236091103, -12.513622692091104, -14.274043549091104, -14.520082462891104, -14.520082462891104]
								}, {
									"case":	136,
									"scores":	[-14.781099372791106, -14.051548017091104, -12.872693003091104, -13.016176855091105, -13.364251928891104, -13.364251928891104, -11.647783928891105, -13.118213015091104, -13.425434236091103, -12.513622692091104, -14.274043549091104, -14.520082462891104, -14.520082462891104]
								}]
						}, {
							"switch":	3,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	3455,
							"begin_column":	2,
							"end_line":	3461,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format);\n    retval = -1;\n} else {\n    *rt = p;\n    retval = 0;\n}\n", "if ((errors->error_count > 0) || __is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format);\n    retval = -1;\n} else {\n    *rt = p;\n    retval = 0;\n}\n", "if ((errors->error_count > 0) && !__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format);\n    retval = -1;\n} else {\n    *rt = p;\n    retval = 0;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.5452866044281457, -1.9121205814281452, -2.9819881174281448, -2.9041523874281454, -3.4047450954281455, -3.4047450954281455, -2.9098361054281452, -2.6468569954281458, -3.5334879684281457, -1.9131455814281455, -3.3676745814281457, -4.1255626814281454, -4.1255626814281454]
								}, {
									"case":	2,
									"scores":	[-4.6234006904281451, -2.9902346674281457, -4.060102203428146, -3.9822664734281457, -4.4828591814281458, -4.4828591814281458, -3.9879501914281459, -3.7249710814281456, -4.611602054428146, -2.991259667428146, -4.445788667428145, -5.2036767674281457, -5.2036767674281457]
								}, {
									"case":	3,
									"scores":	[-4.6234006904281451, -2.9902346674281457, -4.060102203428146, -3.9822664734281457, -4.4828591814281458, -4.4828591814281458, -3.9879501914281459, -3.7249710814281456, -4.611602054428146, -2.991259667428146, -4.445788667428145, -5.2036767674281457, -5.2036767674281457]
								}]
						}, {
							"switch":	8,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3455,
							"begin_column":	2,
							"end_line":	3461,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    if (errors->error_count > 0) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format);\n        retval = -1;\n    } else {\n        *rt = p;\n        retval = 0;\n    }\n", "if (!__is_neg(\"\", \"L3455\", 13, &(errors), sizeof (errors), &(errors->error_count), sizeof (errors->error_count), &(format), sizeof (format), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(p), sizeof (p), &(r), sizeof (r), &(retval), sizeof (retval), &(rt), sizeof (rt), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)) && (errors->error_count > 0)) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format);\n    retval = -1;\n} else {\n    *rt = p;\n    retval = 0;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.2167093206911055, -7.2969785976911048, -8.3668461336911051, -8.2890104036911048, -8.789603111691104, -8.789603111691104, -8.294694121691105, -8.0317150116911051, -8.9183459846911042, -7.2980035976911051, -8.7525325976911041, -9.5104206976911048, -9.5104206976911048]
								}, {
									"case":	2,
									"scores":	[-8.1187579426911043, -6.485591919691104, -7.5554594556911043, -7.4776237256911049, -7.9782164336911041, -7.9782164336911041, -7.4833074436911042, -7.2203283336911044, -8.1069593066911043, -6.4866169196911052, -7.9411459196911043, -8.6990340196911049, -8.6990340196911049]
								}]
						}]
				}, {
					"line":	3461,
					"switches":	[{
							"switch":	9,
							"types":	[[], [], [], [], [133, 134, 135, 136], [1, 2, 3, 4, 5, 6, 7], [], [], [], [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [], [], [], [], [], []],
							"begin_line":	3462,
							"begin_column":	0,
							"end_line":	3462,
							"end_column":	0,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors, 0, sizeof (*(errors)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3462\", 13, &(errors), sizeof (errors), &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return -1;\n", "if (__is_neg(\"\", \"L3462\", 13, &(errors), sizeof (errors), &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 0;\n", "if (__is_neg(\"\", \"L3462\", 13, &(errors), sizeof (errors), &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 1;\n", "if (__is_neg(\"\", \"L3462\", 13, &(errors), sizeof (errors), &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	2,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	3,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	4,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	5,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	6,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	7,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	8,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	9,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	10,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	11,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	12,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	13,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	14,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	15,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	16,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	17,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	18,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	19,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	20,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	21,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	22,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	23,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	24,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	25,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	26,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	27,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	28,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	29,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	30,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	31,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	32,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	33,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	34,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	35,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	36,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	37,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	38,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	39,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	40,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	41,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	42,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	43,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	44,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	45,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	46,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	47,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	48,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	49,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	50,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	51,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	52,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	53,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	54,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	55,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	56,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	57,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	58,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	59,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	60,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	61,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	62,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	63,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	64,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	65,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	66,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	67,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	68,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	69,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	70,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	71,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	72,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	73,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	74,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	75,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	76,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	77,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	78,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	79,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	80,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	81,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	82,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	83,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	84,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	85,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	86,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	87,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	88,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	89,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	90,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	91,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	92,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	93,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	94,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	95,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	96,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	97,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	98,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	99,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	100,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	101,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	102,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	103,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	104,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	105,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	106,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	107,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	108,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	109,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	110,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	111,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	112,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	113,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	114,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	115,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	116,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	117,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	118,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	119,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	120,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	121,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	122,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	123,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	124,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	125,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	126,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	127,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	128,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	129,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	130,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	131,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	132,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	133,
									"scores":	[-11.716235337938546, -11.190333414138546, -12.474892690138546, -11.822204326938547, -12.400028650138545, -12.681331227138546, -11.688204533138546, -12.036279606938546, -12.036279606938546, -11.790240693138546, -12.946071227138546, -13.192110140938546, -13.192110140938546]
								}, {
									"case":	134,
									"scores":	[-8.8917663379385452, -8.3658644141385459, -9.6504236901385454, -8.9977353269385461, -9.5755596501385458, -9.8568622271385458, -8.863735533138545, -9.2118106069385455, -9.2118106069385455, -8.9657716931385458, -10.121602227138546, -10.367641140938545, -10.367641140938545]
								}, {
									"case":	135,
									"scores":	[-11.716235337938546, -11.190333414138546, -12.474892690138546, -11.822204326938547, -12.400028650138545, -12.681331227138546, -11.688204533138546, -12.036279606938546, -12.036279606938546, -11.790240693138546, -12.946071227138546, -13.192110140938546, -13.192110140938546]
								}, {
									"case":	136,
									"scores":	[-11.716235337938546, -11.190333414138546, -12.474892690138546, -11.822204326938547, -12.400028650138545, -12.681331227138546, -11.688204533138546, -12.036279606938546, -12.036279606938546, -11.790240693138546, -12.946071227138546, -13.192110140938546, -13.192110140938546]
								}]
						}, {
							"switch":	10,
							"types":	[[], [], [1], [], [], [], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [], [3], [], [], [], [], [], [], [], [2]],
							"begin_line":	3462,
							"begin_column":	2,
							"end_line":	3462,
							"end_column":	37,
							"patch_codes":	["if (!__is_neg(\"\", \"L3462\", 13, &(errors), sizeof (errors), &(retval), sizeof (retval), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    timelib_error_container_dtor(errors);\n", "{\n}\n", "update_errors_warnings(errors)", "timelib_error_container_dtor((&b))", "timelib_error_container_dtor((&e))", "timelib_error_container_dtor((&errors))", "timelib_error_container_dtor((&format))", "timelib_error_container_dtor((&format_length))", "timelib_error_container_dtor((&p))", "timelib_error_container_dtor((&r))", "timelib_error_container_dtor((&retval))", "timelib_error_container_dtor((&rt))", "timelib_error_container_dtor((errors))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.6461787802385466, -7.6976711077385467, -8.0254627762385464, -7.7472635897385462, -8.4085049117385466, -7.8800700297385458, -7.6172338817385459, -8.1178265897385469, -8.1178265897385469, -7.3599384897385463, -8.0807560757385453, -8.8386441757385459, -8.8386441757385459]
								}, {
									"case":	2,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	3,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	4,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	5,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	6,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	7,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	8,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	9,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	10,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	11,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	12,
									"scores":	[-6.9222263957385461]
								}, {
									"case":	13,
									"scores":	[-6.9222263957385461]
								}]
						}]
				}, {
					"line":	3462,
					"switches":	[{
							"switch":	11,
							"types":	[[], [], [], [], [132, 133, 134, 135], [1, 2, 3, 4, 5, 6], [], [], [], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [], [], [], [], [], []],
							"begin_line":	3463,
							"begin_column":	0,
							"end_line":	3463,
							"end_column":	0,
							"patch_codes":	["memset(&errors->error_count, 0, sizeof (*(&errors->error_count)))", "memset(&errors->error_messages, 0, sizeof (*(&errors->error_messages)))", "memset(&errors->warning_count, 0, sizeof (*(&errors->warning_count)))", "memset(&errors->warning_messages, 0, sizeof (*(&errors->warning_messages)))", "memset(errors->error_messages, 0, sizeof (*(errors->error_messages)))", "memset(errors->warning_messages, 0, sizeof (*(errors->warning_messages)))", "(date_globals.last_errors) = (errors)", "(date_globals.timezone) = (format)", "(format)++", "_efree(((format)))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (format_length)", "php_date_global_timezone_db_enabled = (r)", "php_date_global_timezone_db_enabled = (retval)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (format))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (format))", "retval = (-1)", "retval = (0)", "retval = (1)", "retval = (2)", "retval = (format_length)", "retval = (r)", "retval = (retval)", "timelib_error_container_dtor((errors))", "timelib_strtointerval((format), format_length, &b, &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(b), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &(e), &e, &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(b), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &(e), &p, &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &(p), &r, &errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &(errors))", "timelib_time_dtor((b))", "timelib_time_dtor((e))", "timelib_unixtime2gmt((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2gmt((e), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((b), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((e), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((b))", "timelib_update_from_sse((e))", "timelib_update_ts((b), ((void *)0))", "timelib_update_ts((e), ((void *)0))", "update_errors_warnings((errors))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", format)", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval = -1", "retval = 0", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_error_container_dtor(errors)", "timelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors)", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "if (__is_neg(\"\", \"L3463\", 13, &(retval), sizeof (retval), &(errors), sizeof (errors), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return -1;\n", "if (__is_neg(\"\", \"L3463\", 13, &(retval), sizeof (retval), &(errors), sizeof (errors), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 0;\n", "if (__is_neg(\"\", \"L3463\", 13, &(retval), sizeof (retval), &(errors), sizeof (errors), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 1;\n", "if (__is_neg(\"\", \"L3463\", 13, &(retval), sizeof (retval), &(errors), sizeof (errors), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return 2;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	2,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	3,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	4,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	5,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	6,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	7,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	8,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	9,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	10,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	11,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	12,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	13,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	14,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	15,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	16,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	17,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	18,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	19,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	20,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	21,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	22,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	23,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	24,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	25,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	26,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	27,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	28,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	29,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	30,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	31,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	32,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	33,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	34,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	35,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	36,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	37,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	38,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	39,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	40,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	41,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	42,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	43,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	44,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	45,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	46,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	47,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	48,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	49,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	50,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	51,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	52,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	53,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	54,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	55,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	56,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	57,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	58,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	59,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	60,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	61,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	62,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	63,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	64,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	65,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	66,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	67,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	68,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	69,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	70,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	71,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	72,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	73,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	74,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	75,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	76,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	77,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	78,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	79,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	80,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	81,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	82,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	83,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	84,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	85,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	86,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	87,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	88,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	89,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	90,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	91,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	92,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	93,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	94,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	95,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	96,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	97,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	98,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	99,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	100,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	101,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	102,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	103,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	104,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	105,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	106,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	107,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	108,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	109,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	110,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	111,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	112,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	113,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	114,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	115,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	116,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	117,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	118,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	119,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	120,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	121,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	122,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	123,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	124,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	125,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	126,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	127,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	128,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	129,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	130,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	131,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	132,
									"scores":	[-10.939853552421027, -12.324090578221027, -12.222992121421026, -11.570303758221026, -12.148128081421026, -12.429430658421026, -11.436303964421025, -11.784379038221026, -11.784379038221026, -11.538340124421026, -12.694170658421028, -12.940209572221027, -12.940209572221027]
								}, {
									"case":	133,
									"scores":	[-8.1153845524210269, -9.499621578221026, -9.398523121421027, -8.7458347582210259, -9.3236590814210256, -9.60496165842103, -8.6118349644210266, -8.9599100382210271, -8.9599100382210271, -8.71387112442103, -9.8697016584210271, -10.115740572221027, -10.115740572221027]
								}, {
									"case":	134,
									"scores":	[-10.939853552421027, -12.324090578221027, -12.222992121421026, -11.570303758221026, -12.148128081421026, -12.429430658421026, -11.436303964421025, -11.784379038221026, -11.784379038221026, -11.538340124421026, -12.694170658421028, -12.940209572221027, -12.940209572221027]
								}, {
									"case":	135,
									"scores":	[-10.939853552421027, -12.324090578221027, -12.222992121421026, -11.570303758221026, -12.148128081421026, -12.429430658421026, -11.436303964421025, -11.784379038221026, -11.784379038221026, -11.538340124421026, -12.694170658421028, -12.940209572221027, -12.940209572221027]
								}]
						}, {
							"switch":	12,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3463,
							"begin_column":	2,
							"end_line":	3463,
							"end_column":	9,
							"patch_codes":	["if (!__is_neg(\"\", \"L3463\", 13, &(retval), sizeof (retval), &(errors), sizeof (errors), &(rt), sizeof (rt), &(p), sizeof (p), &(format), sizeof (format), &(errors->error_count), sizeof (errors->error_count), &(format_length), sizeof (format_length), &(b), sizeof (b), &(e), sizeof (e), &(r), sizeof (r), &(errors->warning_count), sizeof (errors->warning_count), &(errors->warning_messages), sizeof (errors->warning_messages), &(errors->error_messages), sizeof (errors->error_messages)))\n    return retval;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.3008988944210262, -8.84284641892103, -8.5039860689210265, -8.2257868824210263, -8.8870282044210267, -8.3585933224210258, -8.09575717442103, -8.5963498824210269, -8.5963498824210269, -7.8384617824210263, -8.5592793684210271, -9.3171674684210259, -9.3171674684210259]
								}]
						}]
				}, {
					"line":	3468,
					"switches":	[]
				}, {
					"line":	3469,
					"switches":	[]
				}, {
					"line":	3470,
					"switches":	[]
				}, {
					"line":	3471,
					"switches":	[]
				}, {
					"line":	3473,
					"switches":	[{
							"switch":	13,
							"types":	[[], [], [], [], [237], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	3474,
							"begin_column":	1,
							"end_line":	3474,
							"end_column":	1,
							"patch_codes":	["memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.467631468877145]
								}, {
									"case":	2,
									"scores":	[-5.467631468877145]
								}, {
									"case":	3,
									"scores":	[-5.467631468877145]
								}, {
									"case":	4,
									"scores":	[-5.467631468877145]
								}, {
									"case":	5,
									"scores":	[-5.467631468877145]
								}, {
									"case":	6,
									"scores":	[-5.467631468877145]
								}, {
									"case":	7,
									"scores":	[-5.467631468877145]
								}, {
									"case":	8,
									"scores":	[-5.467631468877145]
								}, {
									"case":	9,
									"scores":	[-5.467631468877145]
								}, {
									"case":	10,
									"scores":	[-5.467631468877145]
								}, {
									"case":	11,
									"scores":	[-5.467631468877145]
								}, {
									"case":	12,
									"scores":	[-5.467631468877145]
								}, {
									"case":	13,
									"scores":	[-5.467631468877145]
								}, {
									"case":	14,
									"scores":	[-5.467631468877145]
								}, {
									"case":	15,
									"scores":	[-5.467631468877145]
								}, {
									"case":	16,
									"scores":	[-5.467631468877145]
								}, {
									"case":	17,
									"scores":	[-5.467631468877145]
								}, {
									"case":	18,
									"scores":	[-5.467631468877145]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	168,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	169,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	170,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	171,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	172,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	173,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	174,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	175,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	176,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	177,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	178,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	179,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	180,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	181,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	182,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	183,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	184,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	185,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	186,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	187,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	188,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	189,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	190,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	191,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	192,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	193,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	194,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	195,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	196,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	197,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	198,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	199,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	200,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	201,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	202,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	203,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	204,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	205,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	206,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	207,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	208,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	209,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	210,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	211,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	212,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	213,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	214,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	215,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	216,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	217,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	218,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	219,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	220,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	221,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	222,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	223,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	224,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	225,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	226,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	227,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	228,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	229,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	230,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	231,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	232,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	233,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	234,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	235,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	236,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	237,
									"scores":	[-10.209087010577147, -10.048063458877145, -9.1528626316771451, -10.348221355577145, -9.235679184877144, -9.5246628388771448, -10.081223838877143, -10.081223838877143]
								}]
						}, {
							"switch":	14,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	3474,
							"begin_column":	3,
							"end_line":	3479,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc))) {\n    tmp_member = *member;\n    _zval_copy_ctor((&tmp_member));\n    if ((&tmp_member)->type != 6) {\n        _convert_to_string((&tmp_member));\n    }\n    ;\n    member = &tmp_member;\n}\n", "if ((member->type != 6) || __is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc))) {\n    tmp_member = *member;\n    _zval_copy_ctor((&tmp_member));\n    if ((&tmp_member)->type != 6) {\n        _convert_to_string((&tmp_member));\n    }\n    ;\n    member = &tmp_member;\n}\n", "if ((member->type != 6) && !__is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc))) {\n    tmp_member = *member;\n    _zval_copy_ctor((&tmp_member));\n    if ((&tmp_member)->type != 6) {\n        _convert_to_string((&tmp_member));\n    }\n    ;\n    member = &tmp_member;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9101572058281473, -0.43457448482814787, -1.7920153438281461, -3.0622654537281475, -1.9006130948281466, -2.3475173748281462, -2.5585644848281461, -2.5585644848281461]
								}, {
									"case":	2,
									"scores":	[-5.4620055014281457, -1.9864227804281449, -3.3438636394281449, -4.6141137493281459, -3.4524613904281458, -3.8993656704281454, -4.1104127804281454, -4.1104127804281454]
								}, {
									"case":	3,
									"scores":	[-5.4620055014281457, -1.9864227804281449, -3.3438636394281449, -4.6141137493281459, -3.4524613904281458, -3.8993656704281454, -4.1104127804281454, -4.1104127804281454]
								}]
						}, {
							"switch":	15,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3474,
							"begin_column":	3,
							"end_line":	3479,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc)))\n    if (member->type != 6) {\n        tmp_member = *member;\n        _zval_copy_ctor((&tmp_member));\n        if ((&tmp_member)->type != 6) {\n            _convert_to_string((&tmp_member));\n        }\n        ;\n        member = &tmp_member;\n    }\n", "if (!__is_neg(\"\", \"L3474\", 8, &(member), sizeof (member), &(member->type), sizeof (member->type), &(object), sizeof (object), &(obj), sizeof (obj), &(value), sizeof (value), &(retval), sizeof (retval), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc)) && (member->type != 6)) {\n    tmp_member = *member;\n    _zval_copy_ctor((&tmp_member));\n    if ((&tmp_member)->type != 6) {\n        _convert_to_string((&tmp_member));\n    }\n    ;\n    member = &tmp_member;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.6896830598771455, -5.2141003388771452, -6.5715411978771447, -7.8417913077771448, -6.6801389488771452, -7.1270432288771453, -7.3380903388771443, -7.3380903388771443]
								}, {
									"case":	2,
									"scores":	[-7.7192212548771444, -4.2436385338771441, -5.6010793928771445, -6.8713295027771446, -5.709677143877145, -6.156581423877145, -6.367628533877145, -6.367628533877145]
								}]
						}]
				}, {
					"line":	3480,
					"switches":	[{
							"switch":	16,
							"types":	[[], [], [], [], [236], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [], [], [], [], [], []],
							"begin_line":	3481,
							"begin_column":	0,
							"end_line":	3481,
							"end_column":	0,
							"patch_codes":	["memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3481\", 5, &(object), sizeof (object), &(obj), sizeof (obj), &(member), sizeof (member), &(value), sizeof (value), &(retval), sizeof (retval)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	2,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	3,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	4,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	5,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	6,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	7,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	8,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	9,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	10,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	11,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	12,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	13,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	14,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	15,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	16,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	17,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	18,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	19,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	20,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	21,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	22,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	23,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	24,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	25,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	26,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	27,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	28,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	29,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	30,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	31,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	32,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	33,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	34,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	35,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	36,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	37,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	38,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	39,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	40,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	41,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	42,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	43,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	44,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	45,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	46,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	47,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	48,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	49,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	50,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	51,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	52,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	53,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	54,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	55,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	56,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	57,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	58,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	59,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	60,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	61,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	62,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	63,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	64,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	65,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	66,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	67,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	68,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	69,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	70,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	71,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	72,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	73,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	74,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	75,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	76,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	77,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	78,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	79,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	80,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	81,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	82,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	83,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	84,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	85,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	86,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	87,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	88,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	89,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	90,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	91,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	92,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	93,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	94,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	95,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	96,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	97,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	98,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	99,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	100,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	101,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	102,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	103,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	104,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	105,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	106,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	107,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	108,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	109,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	110,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	111,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	112,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	113,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	114,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	115,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	116,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	117,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	118,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	119,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	120,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	121,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	122,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	123,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	124,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	125,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	126,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	127,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	128,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	129,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	130,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	131,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	132,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	133,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	134,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	135,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	136,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	137,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	138,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	139,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	140,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	141,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	142,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	143,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	144,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	145,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	146,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	147,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	148,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	149,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	150,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	151,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	152,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	153,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	154,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	155,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	156,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	157,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	158,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	159,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	160,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	161,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	162,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	163,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	164,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	165,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	166,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	167,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	168,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	169,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	170,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	171,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	172,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	173,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	174,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	175,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	176,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	177,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	178,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	179,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	180,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	181,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	182,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	183,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	184,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	185,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	186,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	187,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	188,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	189,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	190,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	191,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	192,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	193,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	194,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	195,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	196,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	197,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	198,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	199,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	200,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	201,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	202,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	203,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	204,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	205,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	206,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	207,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	208,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	209,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	210,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	211,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	212,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	213,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	214,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	215,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	216,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	217,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	218,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	219,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	220,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	221,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	222,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	223,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	224,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	225,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	226,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	227,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	228,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	229,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	230,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	231,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	232,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	233,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	234,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	235,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	236,
									"scores":	[-6.5371500023596258, -9.0483020692596252, -8.9831961913596263, -8.7943881775596253, -9.0833718315596244]
								}]
						}, {
							"switch":	17,
							"types":	[[], [], [1], [], [], [], [3, 4], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3481,
							"begin_column":	2,
							"end_line":	3481,
							"end_column":	69,
							"patch_codes":	["if (!__is_neg(\"\", \"L3481\", 5, &(object), sizeof (object), &(obj), sizeof (obj), &(member), sizeof (member), &(value), sizeof (value), &(retval), sizeof (retval)))\n    obj = (php_interval_obj *)zend_objects_get_address(object);\n", "{\n}\n", "obj = (obj)", "obj = (php_interval_obj *)zend_objects_get_address(object)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1324321315596251, -8.4387814304596258, -6.7372881620596257, -7.0223734625596252, -7.6023352215596249]
								}, {
									"case":	2,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	3,
									"scores":	[-5.4474287615596255]
								}, {
									"case":	4,
									"scores":	[-5.4474287615596255]
								}]
						}]
				}, {
					"line":	3486,
					"switches":	[{
							"switch":	18,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3487,
							"begin_column":	0,
							"end_line":	3487,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.386820639607067]
								}, {
									"case":	2,
									"scores":	[-5.386820639607067]
								}, {
									"case":	3,
									"scores":	[-5.386820639607067]
								}, {
									"case":	4,
									"scores":	[-5.386820639607067]
								}, {
									"case":	5,
									"scores":	[-5.386820639607067]
								}, {
									"case":	6,
									"scores":	[-5.386820639607067]
								}, {
									"case":	7,
									"scores":	[-5.386820639607067]
								}, {
									"case":	8,
									"scores":	[-5.386820639607067]
								}, {
									"case":	9,
									"scores":	[-5.386820639607067]
								}, {
									"case":	10,
									"scores":	[-5.386820639607067]
								}, {
									"case":	11,
									"scores":	[-5.386820639607067]
								}, {
									"case":	12,
									"scores":	[-5.386820639607067]
								}, {
									"case":	13,
									"scores":	[-5.386820639607067]
								}, {
									"case":	14,
									"scores":	[-5.386820639607067]
								}, {
									"case":	15,
									"scores":	[-5.386820639607067]
								}, {
									"case":	16,
									"scores":	[-5.386820639607067]
								}, {
									"case":	17,
									"scores":	[-5.386820639607067]
								}, {
									"case":	18,
									"scores":	[-5.386820639607067]
								}, {
									"case":	19,
									"scores":	[-5.386820639607067]
								}, {
									"case":	20,
									"scores":	[-5.386820639607067]
								}, {
									"case":	21,
									"scores":	[-5.386820639607067]
								}, {
									"case":	22,
									"scores":	[-5.386820639607067]
								}, {
									"case":	23,
									"scores":	[-5.386820639607067]
								}, {
									"case":	24,
									"scores":	[-5.386820639607067]
								}, {
									"case":	25,
									"scores":	[-5.386820639607067]
								}, {
									"case":	26,
									"scores":	[-5.386820639607067]
								}, {
									"case":	27,
									"scores":	[-5.386820639607067]
								}, {
									"case":	28,
									"scores":	[-5.386820639607067]
								}, {
									"case":	29,
									"scores":	[-5.386820639607067]
								}, {
									"case":	30,
									"scores":	[-5.386820639607067]
								}, {
									"case":	31,
									"scores":	[-5.386820639607067]
								}, {
									"case":	32,
									"scores":	[-5.386820639607067]
								}, {
									"case":	33,
									"scores":	[-5.386820639607067]
								}, {
									"case":	34,
									"scores":	[-5.386820639607067]
								}, {
									"case":	35,
									"scores":	[-5.386820639607067]
								}, {
									"case":	36,
									"scores":	[-5.386820639607067]
								}, {
									"case":	37,
									"scores":	[-5.386820639607067]
								}, {
									"case":	38,
									"scores":	[-5.386820639607067]
								}, {
									"case":	39,
									"scores":	[-5.386820639607067]
								}, {
									"case":	40,
									"scores":	[-5.386820639607067]
								}, {
									"case":	41,
									"scores":	[-5.386820639607067]
								}, {
									"case":	42,
									"scores":	[-5.386820639607067]
								}, {
									"case":	43,
									"scores":	[-5.386820639607067]
								}, {
									"case":	44,
									"scores":	[-5.386820639607067]
								}, {
									"case":	45,
									"scores":	[-5.386820639607067]
								}, {
									"case":	46,
									"scores":	[-5.386820639607067]
								}, {
									"case":	47,
									"scores":	[-5.386820639607067]
								}, {
									"case":	48,
									"scores":	[-5.386820639607067]
								}, {
									"case":	49,
									"scores":	[-5.386820639607067]
								}, {
									"case":	50,
									"scores":	[-5.386820639607067]
								}, {
									"case":	51,
									"scores":	[-5.386820639607067]
								}, {
									"case":	52,
									"scores":	[-5.386820639607067]
								}, {
									"case":	53,
									"scores":	[-5.386820639607067]
								}, {
									"case":	54,
									"scores":	[-5.386820639607067]
								}, {
									"case":	55,
									"scores":	[-5.386820639607067]
								}, {
									"case":	56,
									"scores":	[-5.386820639607067]
								}, {
									"case":	57,
									"scores":	[-5.386820639607067]
								}, {
									"case":	58,
									"scores":	[-5.386820639607067]
								}, {
									"case":	59,
									"scores":	[-5.386820639607067]
								}, {
									"case":	60,
									"scores":	[-5.386820639607067]
								}, {
									"case":	61,
									"scores":	[-5.386820639607067]
								}, {
									"case":	62,
									"scores":	[-5.386820639607067]
								}, {
									"case":	63,
									"scores":	[-5.386820639607067]
								}, {
									"case":	64,
									"scores":	[-5.386820639607067]
								}, {
									"case":	65,
									"scores":	[-5.386820639607067]
								}, {
									"case":	66,
									"scores":	[-5.386820639607067]
								}, {
									"case":	67,
									"scores":	[-5.386820639607067]
								}, {
									"case":	68,
									"scores":	[-5.386820639607067]
								}, {
									"case":	69,
									"scores":	[-5.386820639607067]
								}, {
									"case":	70,
									"scores":	[-5.386820639607067]
								}, {
									"case":	71,
									"scores":	[-5.386820639607067]
								}, {
									"case":	72,
									"scores":	[-5.386820639607067]
								}, {
									"case":	73,
									"scores":	[-5.386820639607067]
								}, {
									"case":	74,
									"scores":	[-5.386820639607067]
								}, {
									"case":	75,
									"scores":	[-5.386820639607067]
								}, {
									"case":	76,
									"scores":	[-5.386820639607067]
								}, {
									"case":	77,
									"scores":	[-5.386820639607067]
								}, {
									"case":	78,
									"scores":	[-5.386820639607067]
								}, {
									"case":	79,
									"scores":	[-5.386820639607067]
								}, {
									"case":	80,
									"scores":	[-5.386820639607067]
								}, {
									"case":	81,
									"scores":	[-5.386820639607067]
								}, {
									"case":	82,
									"scores":	[-5.386820639607067]
								}, {
									"case":	83,
									"scores":	[-5.386820639607067]
								}, {
									"case":	84,
									"scores":	[-5.386820639607067]
								}, {
									"case":	85,
									"scores":	[-5.386820639607067]
								}, {
									"case":	86,
									"scores":	[-5.386820639607067]
								}, {
									"case":	87,
									"scores":	[-5.386820639607067]
								}, {
									"case":	88,
									"scores":	[-5.386820639607067]
								}, {
									"case":	89,
									"scores":	[-5.386820639607067]
								}, {
									"case":	90,
									"scores":	[-5.386820639607067]
								}, {
									"case":	91,
									"scores":	[-5.386820639607067]
								}, {
									"case":	92,
									"scores":	[-5.386820639607067]
								}, {
									"case":	93,
									"scores":	[-5.386820639607067]
								}, {
									"case":	94,
									"scores":	[-5.386820639607067]
								}, {
									"case":	95,
									"scores":	[-5.386820639607067]
								}, {
									"case":	96,
									"scores":	[-5.386820639607067]
								}, {
									"case":	97,
									"scores":	[-5.386820639607067]
								}, {
									"case":	98,
									"scores":	[-5.386820639607067]
								}, {
									"case":	99,
									"scores":	[-5.386820639607067]
								}, {
									"case":	100,
									"scores":	[-5.386820639607067]
								}, {
									"case":	101,
									"scores":	[-5.386820639607067]
								}, {
									"case":	102,
									"scores":	[-5.386820639607067]
								}, {
									"case":	103,
									"scores":	[-5.386820639607067]
								}, {
									"case":	104,
									"scores":	[-5.386820639607067]
								}, {
									"case":	105,
									"scores":	[-5.386820639607067]
								}, {
									"case":	106,
									"scores":	[-5.386820639607067]
								}, {
									"case":	107,
									"scores":	[-5.386820639607067]
								}, {
									"case":	108,
									"scores":	[-5.386820639607067]
								}, {
									"case":	109,
									"scores":	[-5.386820639607067]
								}, {
									"case":	110,
									"scores":	[-5.386820639607067]
								}, {
									"case":	111,
									"scores":	[-5.386820639607067]
								}, {
									"case":	112,
									"scores":	[-5.386820639607067]
								}, {
									"case":	113,
									"scores":	[-5.386820639607067]
								}, {
									"case":	114,
									"scores":	[-5.386820639607067]
								}, {
									"case":	115,
									"scores":	[-5.386820639607067]
								}, {
									"case":	116,
									"scores":	[-5.386820639607067]
								}, {
									"case":	117,
									"scores":	[-5.386820639607067]
								}, {
									"case":	118,
									"scores":	[-5.386820639607067]
								}, {
									"case":	119,
									"scores":	[-5.386820639607067]
								}, {
									"case":	120,
									"scores":	[-5.386820639607067]
								}, {
									"case":	121,
									"scores":	[-5.386820639607067]
								}, {
									"case":	122,
									"scores":	[-5.386820639607067]
								}, {
									"case":	123,
									"scores":	[-5.386820639607067]
								}, {
									"case":	124,
									"scores":	[-5.386820639607067]
								}, {
									"case":	125,
									"scores":	[-5.386820639607067]
								}, {
									"case":	126,
									"scores":	[-5.386820639607067]
								}, {
									"case":	127,
									"scores":	[-5.386820639607067]
								}, {
									"case":	128,
									"scores":	[-5.386820639607067]
								}, {
									"case":	129,
									"scores":	[-5.386820639607067]
								}, {
									"case":	130,
									"scores":	[-5.386820639607067]
								}, {
									"case":	131,
									"scores":	[-5.386820639607067]
								}, {
									"case":	132,
									"scores":	[-5.386820639607067]
								}, {
									"case":	133,
									"scores":	[-5.386820639607067]
								}, {
									"case":	134,
									"scores":	[-5.386820639607067]
								}, {
									"case":	135,
									"scores":	[-5.386820639607067]
								}, {
									"case":	136,
									"scores":	[-5.386820639607067]
								}, {
									"case":	137,
									"scores":	[-5.386820639607067]
								}, {
									"case":	138,
									"scores":	[-5.386820639607067]
								}, {
									"case":	139,
									"scores":	[-5.386820639607067]
								}, {
									"case":	140,
									"scores":	[-5.386820639607067]
								}, {
									"case":	141,
									"scores":	[-5.386820639607067]
								}, {
									"case":	142,
									"scores":	[-5.386820639607067]
								}, {
									"case":	143,
									"scores":	[-5.386820639607067]
								}, {
									"case":	144,
									"scores":	[-5.386820639607067]
								}, {
									"case":	145,
									"scores":	[-5.386820639607067]
								}, {
									"case":	146,
									"scores":	[-5.386820639607067]
								}, {
									"case":	147,
									"scores":	[-5.386820639607067]
								}, {
									"case":	148,
									"scores":	[-5.386820639607067]
								}, {
									"case":	149,
									"scores":	[-5.386820639607067]
								}, {
									"case":	150,
									"scores":	[-5.386820639607067]
								}, {
									"case":	151,
									"scores":	[-5.386820639607067]
								}, {
									"case":	152,
									"scores":	[-5.386820639607067]
								}, {
									"case":	153,
									"scores":	[-5.386820639607067]
								}, {
									"case":	154,
									"scores":	[-5.386820639607067]
								}, {
									"case":	155,
									"scores":	[-5.386820639607067]
								}, {
									"case":	156,
									"scores":	[-5.386820639607067]
								}, {
									"case":	157,
									"scores":	[-5.386820639607067]
								}, {
									"case":	158,
									"scores":	[-5.386820639607067]
								}, {
									"case":	159,
									"scores":	[-5.386820639607067]
								}, {
									"case":	160,
									"scores":	[-5.386820639607067]
								}, {
									"case":	161,
									"scores":	[-5.386820639607067]
								}, {
									"case":	162,
									"scores":	[-5.386820639607067]
								}, {
									"case":	163,
									"scores":	[-5.386820639607067]
								}, {
									"case":	164,
									"scores":	[-5.386820639607067]
								}, {
									"case":	165,
									"scores":	[-5.386820639607067]
								}, {
									"case":	166,
									"scores":	[-5.386820639607067]
								}, {
									"case":	167,
									"scores":	[-5.386820639607067]
								}, {
									"case":	168,
									"scores":	[-5.386820639607067]
								}, {
									"case":	169,
									"scores":	[-5.386820639607067]
								}, {
									"case":	170,
									"scores":	[-5.386820639607067]
								}, {
									"case":	171,
									"scores":	[-5.386820639607067]
								}, {
									"case":	172,
									"scores":	[-5.386820639607067]
								}, {
									"case":	173,
									"scores":	[-5.386820639607067]
								}, {
									"case":	174,
									"scores":	[-5.386820639607067]
								}, {
									"case":	175,
									"scores":	[-5.386820639607067]
								}, {
									"case":	176,
									"scores":	[-5.386820639607067]
								}, {
									"case":	177,
									"scores":	[-5.386820639607067]
								}, {
									"case":	178,
									"scores":	[-5.386820639607067]
								}, {
									"case":	179,
									"scores":	[-5.386820639607067]
								}, {
									"case":	180,
									"scores":	[-5.386820639607067]
								}, {
									"case":	181,
									"scores":	[-5.386820639607067]
								}, {
									"case":	182,
									"scores":	[-5.386820639607067]
								}, {
									"case":	183,
									"scores":	[-5.386820639607067]
								}, {
									"case":	184,
									"scores":	[-5.386820639607067]
								}, {
									"case":	185,
									"scores":	[-5.386820639607067]
								}, {
									"case":	186,
									"scores":	[-5.386820639607067]
								}, {
									"case":	187,
									"scores":	[-5.386820639607067]
								}, {
									"case":	188,
									"scores":	[-5.386820639607067]
								}, {
									"case":	189,
									"scores":	[-5.386820639607067]
								}, {
									"case":	190,
									"scores":	[-5.386820639607067]
								}, {
									"case":	191,
									"scores":	[-5.386820639607067]
								}, {
									"case":	192,
									"scores":	[-5.386820639607067]
								}, {
									"case":	193,
									"scores":	[-5.386820639607067]
								}, {
									"case":	194,
									"scores":	[-5.386820639607067]
								}, {
									"case":	195,
									"scores":	[-5.386820639607067]
								}, {
									"case":	196,
									"scores":	[-5.386820639607067]
								}, {
									"case":	197,
									"scores":	[-5.386820639607067]
								}, {
									"case":	198,
									"scores":	[-5.386820639607067]
								}, {
									"case":	199,
									"scores":	[-5.386820639607067]
								}, {
									"case":	200,
									"scores":	[-5.386820639607067]
								}, {
									"case":	201,
									"scores":	[-5.386820639607067]
								}, {
									"case":	202,
									"scores":	[-5.386820639607067]
								}, {
									"case":	203,
									"scores":	[-5.386820639607067]
								}, {
									"case":	204,
									"scores":	[-5.386820639607067]
								}, {
									"case":	205,
									"scores":	[-5.386820639607067]
								}, {
									"case":	206,
									"scores":	[-5.386820639607067]
								}, {
									"case":	207,
									"scores":	[-5.386820639607067]
								}, {
									"case":	208,
									"scores":	[-5.386820639607067]
								}, {
									"case":	209,
									"scores":	[-5.386820639607067]
								}, {
									"case":	210,
									"scores":	[-5.386820639607067]
								}, {
									"case":	211,
									"scores":	[-5.386820639607067]
								}, {
									"case":	212,
									"scores":	[-5.386820639607067]
								}, {
									"case":	213,
									"scores":	[-5.386820639607067]
								}, {
									"case":	214,
									"scores":	[-5.386820639607067]
								}, {
									"case":	215,
									"scores":	[-5.386820639607067]
								}, {
									"case":	216,
									"scores":	[-5.386820639607067]
								}, {
									"case":	217,
									"scores":	[-5.386820639607067]
								}, {
									"case":	218,
									"scores":	[-5.386820639607067]
								}, {
									"case":	219,
									"scores":	[-5.386820639607067]
								}, {
									"case":	220,
									"scores":	[-5.386820639607067]
								}, {
									"case":	221,
									"scores":	[-5.386820639607067]
								}, {
									"case":	222,
									"scores":	[-5.386820639607067]
								}, {
									"case":	223,
									"scores":	[-5.386820639607067]
								}, {
									"case":	224,
									"scores":	[-5.386820639607067]
								}, {
									"case":	225,
									"scores":	[-5.386820639607067]
								}, {
									"case":	226,
									"scores":	[-5.386820639607067]
								}, {
									"case":	227,
									"scores":	[-5.386820639607067]
								}, {
									"case":	228,
									"scores":	[-5.386820639607067]
								}, {
									"case":	229,
									"scores":	[-5.386820639607067]
								}, {
									"case":	230,
									"scores":	[-5.386820639607067]
								}, {
									"case":	231,
									"scores":	[-5.386820639607067]
								}, {
									"case":	232,
									"scores":	[-5.386820639607067]
								}, {
									"case":	233,
									"scores":	[-5.386820639607067]
								}, {
									"case":	234,
									"scores":	[-5.386820639607067]
								}, {
									"case":	235,
									"scores":	[-5.386820639607067]
								}, {
									"case":	236,
									"scores":	[-5.386820639607067]
								}, {
									"case":	237,
									"scores":	[-5.386820639607067]
								}, {
									"case":	238,
									"scores":	[-9.0941531474070665, -7.6894556603070665, -8.8035246766070649, -9.8632787576070662, -9.7827295494070672, -9.9511366096070653, -10.015893609607065, -10.507697609607066, -10.507697609607066, -10.507697609607066, -10.507697609607066, -10.507697609607066, -10.006762609607065]
								}]
						}, {
							"switch":	19,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3487,
							"begin_column":	2,
							"end_line":	3487,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->y;\n}\n", "if ((strcmp((*member).value.str.val, \"y\") == 0) || __is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->y;\n}\n", "if (Debug((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (cfg_get_double((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (cfg_get_long((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (cfg_get_string((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (execl((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (execle((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (execlp((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (execv((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (execvp((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (fprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (fputs((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (link((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (lstat((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (lutimes((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_printf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_sprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (php_version_compare((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (printf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (rename((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (sprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (stat((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (strcasecmp((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (strcmp((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (strcoll((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (symlink((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (utime((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (utimes((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (virtual_filepath((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (virtual_lstat((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (virtual_stat((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (virtual_utime((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (vprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (wprintf((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if (zend_stream_open((*member).value.str.val, \"y\") == 0) {\n    value = obj->diff->y;\n}\n", "if ((strcmp((*member).value.str.val, \"y\") == 0) && !__is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->y;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.8369390889281454, -4.2959039863281472, -4.1220243894281454, -4.7020334674281461, -5.1588471944281462, -4.701986148428146, -4.5262774184281458, -4.913033258428146, -4.913033258428146, -4.913033258428146, -4.913033258428146, -4.913033258428146, -4.5910222284281454]
								}, {
									"case":	2,
									"scores":	[-4.0804449859281462, -4.5394098833281458, -4.3655302864281458, -4.9455393644281465, -5.4023530914281466, -4.9454920454281464, -4.7697833154281462, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -4.8345281254281458]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-4.0804449859281462, -4.5394098833281458, -4.3655302864281458, -4.9455393644281465, -5.4023530914281466, -4.9454920454281464, -4.7697833154281462, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -5.1565391554281454, -4.8345281254281458]
								}]
						}, {
							"switch":	20,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3487,
							"begin_column":	2,
							"end_line":	3487,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"y\") == 0) {\n        value = obj->diff->y;\n    }\n", "if (!__is_neg(\"\", \"L3487\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"y\") == 0)) {\n    value = obj->diff->y;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4563219401070668, -7.9152868375070664, -7.7414072406070673, -8.3214163186070671, -8.7782300456070672, -8.321368999607067, -8.1456602696070668, -8.5324161096070661, -8.5324161096070661, -8.5324161096070661, -8.5324161096070661, -8.5324161096070661, -8.21040507960707]
								}, {
									"case":	2,
									"scores":	[-6.6875068101070667, -7.1464717075070663, -6.9725921106070672, -7.5526011886070661, -8.0094149156070671, -7.5525538696070669, -7.3768451396070667, -7.7636009796070677, -7.7636009796070677, -7.7636009796070677, -7.7636009796070677, -7.7636009796070677, -7.4415899496070672]
								}]
						}]
				}, {
					"line":	3487,
					"switches":	[{
							"switch":	21,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3488,
							"begin_column":	0,
							"end_line":	3488,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.22519898106691]
								}, {
									"case":	2,
									"scores":	[-5.22519898106691]
								}, {
									"case":	3,
									"scores":	[-5.22519898106691]
								}, {
									"case":	4,
									"scores":	[-5.22519898106691]
								}, {
									"case":	5,
									"scores":	[-5.22519898106691]
								}, {
									"case":	6,
									"scores":	[-5.22519898106691]
								}, {
									"case":	7,
									"scores":	[-5.22519898106691]
								}, {
									"case":	8,
									"scores":	[-5.22519898106691]
								}, {
									"case":	9,
									"scores":	[-5.22519898106691]
								}, {
									"case":	10,
									"scores":	[-5.22519898106691]
								}, {
									"case":	11,
									"scores":	[-5.22519898106691]
								}, {
									"case":	12,
									"scores":	[-5.22519898106691]
								}, {
									"case":	13,
									"scores":	[-5.22519898106691]
								}, {
									"case":	14,
									"scores":	[-5.22519898106691]
								}, {
									"case":	15,
									"scores":	[-5.22519898106691]
								}, {
									"case":	16,
									"scores":	[-5.22519898106691]
								}, {
									"case":	17,
									"scores":	[-5.22519898106691]
								}, {
									"case":	18,
									"scores":	[-5.22519898106691]
								}, {
									"case":	19,
									"scores":	[-5.22519898106691]
								}, {
									"case":	20,
									"scores":	[-5.22519898106691]
								}, {
									"case":	21,
									"scores":	[-5.22519898106691]
								}, {
									"case":	22,
									"scores":	[-5.22519898106691]
								}, {
									"case":	23,
									"scores":	[-5.22519898106691]
								}, {
									"case":	24,
									"scores":	[-5.22519898106691]
								}, {
									"case":	25,
									"scores":	[-5.22519898106691]
								}, {
									"case":	26,
									"scores":	[-5.22519898106691]
								}, {
									"case":	27,
									"scores":	[-5.22519898106691]
								}, {
									"case":	28,
									"scores":	[-5.22519898106691]
								}, {
									"case":	29,
									"scores":	[-5.22519898106691]
								}, {
									"case":	30,
									"scores":	[-5.22519898106691]
								}, {
									"case":	31,
									"scores":	[-5.22519898106691]
								}, {
									"case":	32,
									"scores":	[-5.22519898106691]
								}, {
									"case":	33,
									"scores":	[-5.22519898106691]
								}, {
									"case":	34,
									"scores":	[-5.22519898106691]
								}, {
									"case":	35,
									"scores":	[-5.22519898106691]
								}, {
									"case":	36,
									"scores":	[-5.22519898106691]
								}, {
									"case":	37,
									"scores":	[-5.22519898106691]
								}, {
									"case":	38,
									"scores":	[-5.22519898106691]
								}, {
									"case":	39,
									"scores":	[-5.22519898106691]
								}, {
									"case":	40,
									"scores":	[-5.22519898106691]
								}, {
									"case":	41,
									"scores":	[-5.22519898106691]
								}, {
									"case":	42,
									"scores":	[-5.22519898106691]
								}, {
									"case":	43,
									"scores":	[-5.22519898106691]
								}, {
									"case":	44,
									"scores":	[-5.22519898106691]
								}, {
									"case":	45,
									"scores":	[-5.22519898106691]
								}, {
									"case":	46,
									"scores":	[-5.22519898106691]
								}, {
									"case":	47,
									"scores":	[-5.22519898106691]
								}, {
									"case":	48,
									"scores":	[-5.22519898106691]
								}, {
									"case":	49,
									"scores":	[-5.22519898106691]
								}, {
									"case":	50,
									"scores":	[-5.22519898106691]
								}, {
									"case":	51,
									"scores":	[-5.22519898106691]
								}, {
									"case":	52,
									"scores":	[-5.22519898106691]
								}, {
									"case":	53,
									"scores":	[-5.22519898106691]
								}, {
									"case":	54,
									"scores":	[-5.22519898106691]
								}, {
									"case":	55,
									"scores":	[-5.22519898106691]
								}, {
									"case":	56,
									"scores":	[-5.22519898106691]
								}, {
									"case":	57,
									"scores":	[-5.22519898106691]
								}, {
									"case":	58,
									"scores":	[-5.22519898106691]
								}, {
									"case":	59,
									"scores":	[-5.22519898106691]
								}, {
									"case":	60,
									"scores":	[-5.22519898106691]
								}, {
									"case":	61,
									"scores":	[-5.22519898106691]
								}, {
									"case":	62,
									"scores":	[-5.22519898106691]
								}, {
									"case":	63,
									"scores":	[-5.22519898106691]
								}, {
									"case":	64,
									"scores":	[-5.22519898106691]
								}, {
									"case":	65,
									"scores":	[-5.22519898106691]
								}, {
									"case":	66,
									"scores":	[-5.22519898106691]
								}, {
									"case":	67,
									"scores":	[-5.22519898106691]
								}, {
									"case":	68,
									"scores":	[-5.22519898106691]
								}, {
									"case":	69,
									"scores":	[-5.22519898106691]
								}, {
									"case":	70,
									"scores":	[-5.22519898106691]
								}, {
									"case":	71,
									"scores":	[-5.22519898106691]
								}, {
									"case":	72,
									"scores":	[-5.22519898106691]
								}, {
									"case":	73,
									"scores":	[-5.22519898106691]
								}, {
									"case":	74,
									"scores":	[-5.22519898106691]
								}, {
									"case":	75,
									"scores":	[-5.22519898106691]
								}, {
									"case":	76,
									"scores":	[-5.22519898106691]
								}, {
									"case":	77,
									"scores":	[-5.22519898106691]
								}, {
									"case":	78,
									"scores":	[-5.22519898106691]
								}, {
									"case":	79,
									"scores":	[-5.22519898106691]
								}, {
									"case":	80,
									"scores":	[-5.22519898106691]
								}, {
									"case":	81,
									"scores":	[-5.22519898106691]
								}, {
									"case":	82,
									"scores":	[-5.22519898106691]
								}, {
									"case":	83,
									"scores":	[-5.22519898106691]
								}, {
									"case":	84,
									"scores":	[-5.22519898106691]
								}, {
									"case":	85,
									"scores":	[-5.22519898106691]
								}, {
									"case":	86,
									"scores":	[-5.22519898106691]
								}, {
									"case":	87,
									"scores":	[-5.22519898106691]
								}, {
									"case":	88,
									"scores":	[-5.22519898106691]
								}, {
									"case":	89,
									"scores":	[-5.22519898106691]
								}, {
									"case":	90,
									"scores":	[-5.22519898106691]
								}, {
									"case":	91,
									"scores":	[-5.22519898106691]
								}, {
									"case":	92,
									"scores":	[-5.22519898106691]
								}, {
									"case":	93,
									"scores":	[-5.22519898106691]
								}, {
									"case":	94,
									"scores":	[-5.22519898106691]
								}, {
									"case":	95,
									"scores":	[-5.22519898106691]
								}, {
									"case":	96,
									"scores":	[-5.22519898106691]
								}, {
									"case":	97,
									"scores":	[-5.22519898106691]
								}, {
									"case":	98,
									"scores":	[-5.22519898106691]
								}, {
									"case":	99,
									"scores":	[-5.22519898106691]
								}, {
									"case":	100,
									"scores":	[-5.22519898106691]
								}, {
									"case":	101,
									"scores":	[-5.22519898106691]
								}, {
									"case":	102,
									"scores":	[-5.22519898106691]
								}, {
									"case":	103,
									"scores":	[-5.22519898106691]
								}, {
									"case":	104,
									"scores":	[-5.22519898106691]
								}, {
									"case":	105,
									"scores":	[-5.22519898106691]
								}, {
									"case":	106,
									"scores":	[-5.22519898106691]
								}, {
									"case":	107,
									"scores":	[-5.22519898106691]
								}, {
									"case":	108,
									"scores":	[-5.22519898106691]
								}, {
									"case":	109,
									"scores":	[-5.22519898106691]
								}, {
									"case":	110,
									"scores":	[-5.22519898106691]
								}, {
									"case":	111,
									"scores":	[-5.22519898106691]
								}, {
									"case":	112,
									"scores":	[-5.22519898106691]
								}, {
									"case":	113,
									"scores":	[-5.22519898106691]
								}, {
									"case":	114,
									"scores":	[-5.22519898106691]
								}, {
									"case":	115,
									"scores":	[-5.22519898106691]
								}, {
									"case":	116,
									"scores":	[-5.22519898106691]
								}, {
									"case":	117,
									"scores":	[-5.22519898106691]
								}, {
									"case":	118,
									"scores":	[-5.22519898106691]
								}, {
									"case":	119,
									"scores":	[-5.22519898106691]
								}, {
									"case":	120,
									"scores":	[-5.22519898106691]
								}, {
									"case":	121,
									"scores":	[-5.22519898106691]
								}, {
									"case":	122,
									"scores":	[-5.22519898106691]
								}, {
									"case":	123,
									"scores":	[-5.22519898106691]
								}, {
									"case":	124,
									"scores":	[-5.22519898106691]
								}, {
									"case":	125,
									"scores":	[-5.22519898106691]
								}, {
									"case":	126,
									"scores":	[-5.22519898106691]
								}, {
									"case":	127,
									"scores":	[-5.22519898106691]
								}, {
									"case":	128,
									"scores":	[-5.22519898106691]
								}, {
									"case":	129,
									"scores":	[-5.22519898106691]
								}, {
									"case":	130,
									"scores":	[-5.22519898106691]
								}, {
									"case":	131,
									"scores":	[-5.22519898106691]
								}, {
									"case":	132,
									"scores":	[-5.22519898106691]
								}, {
									"case":	133,
									"scores":	[-5.22519898106691]
								}, {
									"case":	134,
									"scores":	[-5.22519898106691]
								}, {
									"case":	135,
									"scores":	[-5.22519898106691]
								}, {
									"case":	136,
									"scores":	[-5.22519898106691]
								}, {
									"case":	137,
									"scores":	[-5.22519898106691]
								}, {
									"case":	138,
									"scores":	[-5.22519898106691]
								}, {
									"case":	139,
									"scores":	[-5.22519898106691]
								}, {
									"case":	140,
									"scores":	[-5.22519898106691]
								}, {
									"case":	141,
									"scores":	[-5.22519898106691]
								}, {
									"case":	142,
									"scores":	[-5.22519898106691]
								}, {
									"case":	143,
									"scores":	[-5.22519898106691]
								}, {
									"case":	144,
									"scores":	[-5.22519898106691]
								}, {
									"case":	145,
									"scores":	[-5.22519898106691]
								}, {
									"case":	146,
									"scores":	[-5.22519898106691]
								}, {
									"case":	147,
									"scores":	[-5.22519898106691]
								}, {
									"case":	148,
									"scores":	[-5.22519898106691]
								}, {
									"case":	149,
									"scores":	[-5.22519898106691]
								}, {
									"case":	150,
									"scores":	[-5.22519898106691]
								}, {
									"case":	151,
									"scores":	[-5.22519898106691]
								}, {
									"case":	152,
									"scores":	[-5.22519898106691]
								}, {
									"case":	153,
									"scores":	[-5.22519898106691]
								}, {
									"case":	154,
									"scores":	[-5.22519898106691]
								}, {
									"case":	155,
									"scores":	[-5.22519898106691]
								}, {
									"case":	156,
									"scores":	[-5.22519898106691]
								}, {
									"case":	157,
									"scores":	[-5.22519898106691]
								}, {
									"case":	158,
									"scores":	[-5.22519898106691]
								}, {
									"case":	159,
									"scores":	[-5.22519898106691]
								}, {
									"case":	160,
									"scores":	[-5.22519898106691]
								}, {
									"case":	161,
									"scores":	[-5.22519898106691]
								}, {
									"case":	162,
									"scores":	[-5.22519898106691]
								}, {
									"case":	163,
									"scores":	[-5.22519898106691]
								}, {
									"case":	164,
									"scores":	[-5.22519898106691]
								}, {
									"case":	165,
									"scores":	[-5.22519898106691]
								}, {
									"case":	166,
									"scores":	[-5.22519898106691]
								}, {
									"case":	167,
									"scores":	[-5.22519898106691]
								}, {
									"case":	168,
									"scores":	[-5.22519898106691]
								}, {
									"case":	169,
									"scores":	[-5.22519898106691]
								}, {
									"case":	170,
									"scores":	[-5.22519898106691]
								}, {
									"case":	171,
									"scores":	[-5.22519898106691]
								}, {
									"case":	172,
									"scores":	[-5.22519898106691]
								}, {
									"case":	173,
									"scores":	[-5.22519898106691]
								}, {
									"case":	174,
									"scores":	[-5.22519898106691]
								}, {
									"case":	175,
									"scores":	[-5.22519898106691]
								}, {
									"case":	176,
									"scores":	[-5.22519898106691]
								}, {
									"case":	177,
									"scores":	[-5.22519898106691]
								}, {
									"case":	178,
									"scores":	[-5.22519898106691]
								}, {
									"case":	179,
									"scores":	[-5.22519898106691]
								}, {
									"case":	180,
									"scores":	[-5.22519898106691]
								}, {
									"case":	181,
									"scores":	[-5.22519898106691]
								}, {
									"case":	182,
									"scores":	[-5.22519898106691]
								}, {
									"case":	183,
									"scores":	[-5.22519898106691]
								}, {
									"case":	184,
									"scores":	[-5.22519898106691]
								}, {
									"case":	185,
									"scores":	[-5.22519898106691]
								}, {
									"case":	186,
									"scores":	[-5.22519898106691]
								}, {
									"case":	187,
									"scores":	[-5.22519898106691]
								}, {
									"case":	188,
									"scores":	[-5.22519898106691]
								}, {
									"case":	189,
									"scores":	[-5.22519898106691]
								}, {
									"case":	190,
									"scores":	[-5.22519898106691]
								}, {
									"case":	191,
									"scores":	[-5.22519898106691]
								}, {
									"case":	192,
									"scores":	[-5.22519898106691]
								}, {
									"case":	193,
									"scores":	[-5.22519898106691]
								}, {
									"case":	194,
									"scores":	[-5.22519898106691]
								}, {
									"case":	195,
									"scores":	[-5.22519898106691]
								}, {
									"case":	196,
									"scores":	[-5.22519898106691]
								}, {
									"case":	197,
									"scores":	[-5.22519898106691]
								}, {
									"case":	198,
									"scores":	[-5.22519898106691]
								}, {
									"case":	199,
									"scores":	[-5.22519898106691]
								}, {
									"case":	200,
									"scores":	[-5.22519898106691]
								}, {
									"case":	201,
									"scores":	[-5.22519898106691]
								}, {
									"case":	202,
									"scores":	[-5.22519898106691]
								}, {
									"case":	203,
									"scores":	[-5.22519898106691]
								}, {
									"case":	204,
									"scores":	[-5.22519898106691]
								}, {
									"case":	205,
									"scores":	[-5.22519898106691]
								}, {
									"case":	206,
									"scores":	[-5.22519898106691]
								}, {
									"case":	207,
									"scores":	[-5.22519898106691]
								}, {
									"case":	208,
									"scores":	[-5.22519898106691]
								}, {
									"case":	209,
									"scores":	[-5.22519898106691]
								}, {
									"case":	210,
									"scores":	[-5.22519898106691]
								}, {
									"case":	211,
									"scores":	[-5.22519898106691]
								}, {
									"case":	212,
									"scores":	[-5.22519898106691]
								}, {
									"case":	213,
									"scores":	[-5.22519898106691]
								}, {
									"case":	214,
									"scores":	[-5.22519898106691]
								}, {
									"case":	215,
									"scores":	[-5.22519898106691]
								}, {
									"case":	216,
									"scores":	[-5.22519898106691]
								}, {
									"case":	217,
									"scores":	[-5.22519898106691]
								}, {
									"case":	218,
									"scores":	[-5.22519898106691]
								}, {
									"case":	219,
									"scores":	[-5.22519898106691]
								}, {
									"case":	220,
									"scores":	[-5.22519898106691]
								}, {
									"case":	221,
									"scores":	[-5.22519898106691]
								}, {
									"case":	222,
									"scores":	[-5.22519898106691]
								}, {
									"case":	223,
									"scores":	[-5.22519898106691]
								}, {
									"case":	224,
									"scores":	[-5.22519898106691]
								}, {
									"case":	225,
									"scores":	[-5.22519898106691]
								}, {
									"case":	226,
									"scores":	[-5.22519898106691]
								}, {
									"case":	227,
									"scores":	[-5.22519898106691]
								}, {
									"case":	228,
									"scores":	[-5.22519898106691]
								}, {
									"case":	229,
									"scores":	[-5.22519898106691]
								}, {
									"case":	230,
									"scores":	[-5.22519898106691]
								}, {
									"case":	231,
									"scores":	[-5.22519898106691]
								}, {
									"case":	232,
									"scores":	[-5.22519898106691]
								}, {
									"case":	233,
									"scores":	[-5.22519898106691]
								}, {
									"case":	234,
									"scores":	[-5.22519898106691]
								}, {
									"case":	235,
									"scores":	[-5.22519898106691]
								}, {
									"case":	236,
									"scores":	[-5.22519898106691]
								}, {
									"case":	237,
									"scores":	[-5.22519898106691]
								}, {
									"case":	238,
									"scores":	[-10.526818908866913, -8.06309770176691, -6.83707153806691, -9.72177117906691, -9.62110789086691, -9.78951495106691, -10.34607595106691, -10.34607595106691, -10.34607595106691, -10.34607595106691, -10.34607595106691, -10.34607595106691, -9.84514095106691]
								}]
						}, {
							"switch":	22,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3488,
							"begin_column":	2,
							"end_line":	3488,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->m;\n}\n", "if ((strcmp((*member).value.str.val, \"m\") == 0) || __is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->m;\n}\n", "if (Debug((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (cfg_get_double((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (cfg_get_long((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (cfg_get_string((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (execl((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (execle((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (execlp((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (execv((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (execvp((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (fprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (fputs((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (link((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (lstat((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (lutimes((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_printf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_sprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (php_version_compare((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (printf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (rename((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (sprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (stat((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (strcasecmp((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (strcmp((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (strcoll((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (symlink((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (utime((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (utimes((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (virtual_filepath((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (virtual_lstat((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (virtual_stat((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (virtual_utime((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (vprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (wprintf((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if (zend_stream_open((*member).value.str.val, \"m\") == 0) {\n    value = obj->diff->m;\n}\n", "if ((strcmp((*member).value.str.val, \"m\") == 0) && !__is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->m;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.2490137649281454, -6.1500992728281467, -4.8537553254281454, -6.4034241094281459, -6.7712549904281474, -6.3143939444281454, -6.5254410544281454, -6.5254410544281454, -6.5254410544281454, -6.5254410544281454, -6.5254410544281454, -6.5254410544281454, -6.2034300244281457]
								}, {
									"case":	2,
									"scores":	[-3.2274984319281463, -3.1285839398281454, -1.8322399924281454, -3.381908776428145, -3.7497396574281461, -3.2928786114281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.1819146914281462]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.2274984319281463, -3.1285839398281454, -1.8322399924281454, -3.381908776428145, -3.7497396574281461, -3.2928786114281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.5039257214281463, -3.1819146914281462]
								}]
						}, {
							"switch":	23,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3488,
							"begin_column":	2,
							"end_line":	3488,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"m\") == 0) {\n        value = obj->diff->m;\n    }\n", "if (!__is_neg(\"\", \"L3488\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(object), sizeof (object), &(retval), sizeof (retval), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"m\") == 0)) {\n    value = obj->diff->m;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.09436716156691, -7.99545266946691, -6.69910872206691, -8.24877750606691, -8.61660838706691, -8.15974734106691, -8.37079445106691, -8.37079445106691, -8.37079445106691, -8.37079445106691, -8.37079445106691, -8.37079445106691, -8.04878342106691]
								}, {
									"case":	2,
									"scores":	[-5.67293859756691, -5.57402410546691, -4.27768015806691, -5.82734894206691, -6.19517982306691, -5.73831877706691, -5.94936588706691, -5.94936588706691, -5.94936588706691, -5.94936588706691, -5.94936588706691, -5.94936588706691, -5.62735485706691]
								}]
						}]
				}, {
					"line":	3488,
					"switches":	[{
							"switch":	24,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3489,
							"begin_column":	0,
							"end_line":	3489,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.063577322526756]
								}, {
									"case":	2,
									"scores":	[-5.063577322526756]
								}, {
									"case":	3,
									"scores":	[-5.063577322526756]
								}, {
									"case":	4,
									"scores":	[-5.063577322526756]
								}, {
									"case":	5,
									"scores":	[-5.063577322526756]
								}, {
									"case":	6,
									"scores":	[-5.063577322526756]
								}, {
									"case":	7,
									"scores":	[-5.063577322526756]
								}, {
									"case":	8,
									"scores":	[-5.063577322526756]
								}, {
									"case":	9,
									"scores":	[-5.063577322526756]
								}, {
									"case":	10,
									"scores":	[-5.063577322526756]
								}, {
									"case":	11,
									"scores":	[-5.063577322526756]
								}, {
									"case":	12,
									"scores":	[-5.063577322526756]
								}, {
									"case":	13,
									"scores":	[-5.063577322526756]
								}, {
									"case":	14,
									"scores":	[-5.063577322526756]
								}, {
									"case":	15,
									"scores":	[-5.063577322526756]
								}, {
									"case":	16,
									"scores":	[-5.063577322526756]
								}, {
									"case":	17,
									"scores":	[-5.063577322526756]
								}, {
									"case":	18,
									"scores":	[-5.063577322526756]
								}, {
									"case":	19,
									"scores":	[-5.063577322526756]
								}, {
									"case":	20,
									"scores":	[-5.063577322526756]
								}, {
									"case":	21,
									"scores":	[-5.063577322526756]
								}, {
									"case":	22,
									"scores":	[-5.063577322526756]
								}, {
									"case":	23,
									"scores":	[-5.063577322526756]
								}, {
									"case":	24,
									"scores":	[-5.063577322526756]
								}, {
									"case":	25,
									"scores":	[-5.063577322526756]
								}, {
									"case":	26,
									"scores":	[-5.063577322526756]
								}, {
									"case":	27,
									"scores":	[-5.063577322526756]
								}, {
									"case":	28,
									"scores":	[-5.063577322526756]
								}, {
									"case":	29,
									"scores":	[-5.063577322526756]
								}, {
									"case":	30,
									"scores":	[-5.063577322526756]
								}, {
									"case":	31,
									"scores":	[-5.063577322526756]
								}, {
									"case":	32,
									"scores":	[-5.063577322526756]
								}, {
									"case":	33,
									"scores":	[-5.063577322526756]
								}, {
									"case":	34,
									"scores":	[-5.063577322526756]
								}, {
									"case":	35,
									"scores":	[-5.063577322526756]
								}, {
									"case":	36,
									"scores":	[-5.063577322526756]
								}, {
									"case":	37,
									"scores":	[-5.063577322526756]
								}, {
									"case":	38,
									"scores":	[-5.063577322526756]
								}, {
									"case":	39,
									"scores":	[-5.063577322526756]
								}, {
									"case":	40,
									"scores":	[-5.063577322526756]
								}, {
									"case":	41,
									"scores":	[-5.063577322526756]
								}, {
									"case":	42,
									"scores":	[-5.063577322526756]
								}, {
									"case":	43,
									"scores":	[-5.063577322526756]
								}, {
									"case":	44,
									"scores":	[-5.063577322526756]
								}, {
									"case":	45,
									"scores":	[-5.063577322526756]
								}, {
									"case":	46,
									"scores":	[-5.063577322526756]
								}, {
									"case":	47,
									"scores":	[-5.063577322526756]
								}, {
									"case":	48,
									"scores":	[-5.063577322526756]
								}, {
									"case":	49,
									"scores":	[-5.063577322526756]
								}, {
									"case":	50,
									"scores":	[-5.063577322526756]
								}, {
									"case":	51,
									"scores":	[-5.063577322526756]
								}, {
									"case":	52,
									"scores":	[-5.063577322526756]
								}, {
									"case":	53,
									"scores":	[-5.063577322526756]
								}, {
									"case":	54,
									"scores":	[-5.063577322526756]
								}, {
									"case":	55,
									"scores":	[-5.063577322526756]
								}, {
									"case":	56,
									"scores":	[-5.063577322526756]
								}, {
									"case":	57,
									"scores":	[-5.063577322526756]
								}, {
									"case":	58,
									"scores":	[-5.063577322526756]
								}, {
									"case":	59,
									"scores":	[-5.063577322526756]
								}, {
									"case":	60,
									"scores":	[-5.063577322526756]
								}, {
									"case":	61,
									"scores":	[-5.063577322526756]
								}, {
									"case":	62,
									"scores":	[-5.063577322526756]
								}, {
									"case":	63,
									"scores":	[-5.063577322526756]
								}, {
									"case":	64,
									"scores":	[-5.063577322526756]
								}, {
									"case":	65,
									"scores":	[-5.063577322526756]
								}, {
									"case":	66,
									"scores":	[-5.063577322526756]
								}, {
									"case":	67,
									"scores":	[-5.063577322526756]
								}, {
									"case":	68,
									"scores":	[-5.063577322526756]
								}, {
									"case":	69,
									"scores":	[-5.063577322526756]
								}, {
									"case":	70,
									"scores":	[-5.063577322526756]
								}, {
									"case":	71,
									"scores":	[-5.063577322526756]
								}, {
									"case":	72,
									"scores":	[-5.063577322526756]
								}, {
									"case":	73,
									"scores":	[-5.063577322526756]
								}, {
									"case":	74,
									"scores":	[-5.063577322526756]
								}, {
									"case":	75,
									"scores":	[-5.063577322526756]
								}, {
									"case":	76,
									"scores":	[-5.063577322526756]
								}, {
									"case":	77,
									"scores":	[-5.063577322526756]
								}, {
									"case":	78,
									"scores":	[-5.063577322526756]
								}, {
									"case":	79,
									"scores":	[-5.063577322526756]
								}, {
									"case":	80,
									"scores":	[-5.063577322526756]
								}, {
									"case":	81,
									"scores":	[-5.063577322526756]
								}, {
									"case":	82,
									"scores":	[-5.063577322526756]
								}, {
									"case":	83,
									"scores":	[-5.063577322526756]
								}, {
									"case":	84,
									"scores":	[-5.063577322526756]
								}, {
									"case":	85,
									"scores":	[-5.063577322526756]
								}, {
									"case":	86,
									"scores":	[-5.063577322526756]
								}, {
									"case":	87,
									"scores":	[-5.063577322526756]
								}, {
									"case":	88,
									"scores":	[-5.063577322526756]
								}, {
									"case":	89,
									"scores":	[-5.063577322526756]
								}, {
									"case":	90,
									"scores":	[-5.063577322526756]
								}, {
									"case":	91,
									"scores":	[-5.063577322526756]
								}, {
									"case":	92,
									"scores":	[-5.063577322526756]
								}, {
									"case":	93,
									"scores":	[-5.063577322526756]
								}, {
									"case":	94,
									"scores":	[-5.063577322526756]
								}, {
									"case":	95,
									"scores":	[-5.063577322526756]
								}, {
									"case":	96,
									"scores":	[-5.063577322526756]
								}, {
									"case":	97,
									"scores":	[-5.063577322526756]
								}, {
									"case":	98,
									"scores":	[-5.063577322526756]
								}, {
									"case":	99,
									"scores":	[-5.063577322526756]
								}, {
									"case":	100,
									"scores":	[-5.063577322526756]
								}, {
									"case":	101,
									"scores":	[-5.063577322526756]
								}, {
									"case":	102,
									"scores":	[-5.063577322526756]
								}, {
									"case":	103,
									"scores":	[-5.063577322526756]
								}, {
									"case":	104,
									"scores":	[-5.063577322526756]
								}, {
									"case":	105,
									"scores":	[-5.063577322526756]
								}, {
									"case":	106,
									"scores":	[-5.063577322526756]
								}, {
									"case":	107,
									"scores":	[-5.063577322526756]
								}, {
									"case":	108,
									"scores":	[-5.063577322526756]
								}, {
									"case":	109,
									"scores":	[-5.063577322526756]
								}, {
									"case":	110,
									"scores":	[-5.063577322526756]
								}, {
									"case":	111,
									"scores":	[-5.063577322526756]
								}, {
									"case":	112,
									"scores":	[-5.063577322526756]
								}, {
									"case":	113,
									"scores":	[-5.063577322526756]
								}, {
									"case":	114,
									"scores":	[-5.063577322526756]
								}, {
									"case":	115,
									"scores":	[-5.063577322526756]
								}, {
									"case":	116,
									"scores":	[-5.063577322526756]
								}, {
									"case":	117,
									"scores":	[-5.063577322526756]
								}, {
									"case":	118,
									"scores":	[-5.063577322526756]
								}, {
									"case":	119,
									"scores":	[-5.063577322526756]
								}, {
									"case":	120,
									"scores":	[-5.063577322526756]
								}, {
									"case":	121,
									"scores":	[-5.063577322526756]
								}, {
									"case":	122,
									"scores":	[-5.063577322526756]
								}, {
									"case":	123,
									"scores":	[-5.063577322526756]
								}, {
									"case":	124,
									"scores":	[-5.063577322526756]
								}, {
									"case":	125,
									"scores":	[-5.063577322526756]
								}, {
									"case":	126,
									"scores":	[-5.063577322526756]
								}, {
									"case":	127,
									"scores":	[-5.063577322526756]
								}, {
									"case":	128,
									"scores":	[-5.063577322526756]
								}, {
									"case":	129,
									"scores":	[-5.063577322526756]
								}, {
									"case":	130,
									"scores":	[-5.063577322526756]
								}, {
									"case":	131,
									"scores":	[-5.063577322526756]
								}, {
									"case":	132,
									"scores":	[-5.063577322526756]
								}, {
									"case":	133,
									"scores":	[-5.063577322526756]
								}, {
									"case":	134,
									"scores":	[-5.063577322526756]
								}, {
									"case":	135,
									"scores":	[-5.063577322526756]
								}, {
									"case":	136,
									"scores":	[-5.063577322526756]
								}, {
									"case":	137,
									"scores":	[-5.063577322526756]
								}, {
									"case":	138,
									"scores":	[-5.063577322526756]
								}, {
									"case":	139,
									"scores":	[-5.063577322526756]
								}, {
									"case":	140,
									"scores":	[-5.063577322526756]
								}, {
									"case":	141,
									"scores":	[-5.063577322526756]
								}, {
									"case":	142,
									"scores":	[-5.063577322526756]
								}, {
									"case":	143,
									"scores":	[-5.063577322526756]
								}, {
									"case":	144,
									"scores":	[-5.063577322526756]
								}, {
									"case":	145,
									"scores":	[-5.063577322526756]
								}, {
									"case":	146,
									"scores":	[-5.063577322526756]
								}, {
									"case":	147,
									"scores":	[-5.063577322526756]
								}, {
									"case":	148,
									"scores":	[-5.063577322526756]
								}, {
									"case":	149,
									"scores":	[-5.063577322526756]
								}, {
									"case":	150,
									"scores":	[-5.063577322526756]
								}, {
									"case":	151,
									"scores":	[-5.063577322526756]
								}, {
									"case":	152,
									"scores":	[-5.063577322526756]
								}, {
									"case":	153,
									"scores":	[-5.063577322526756]
								}, {
									"case":	154,
									"scores":	[-5.063577322526756]
								}, {
									"case":	155,
									"scores":	[-5.063577322526756]
								}, {
									"case":	156,
									"scores":	[-5.063577322526756]
								}, {
									"case":	157,
									"scores":	[-5.063577322526756]
								}, {
									"case":	158,
									"scores":	[-5.063577322526756]
								}, {
									"case":	159,
									"scores":	[-5.063577322526756]
								}, {
									"case":	160,
									"scores":	[-5.063577322526756]
								}, {
									"case":	161,
									"scores":	[-5.063577322526756]
								}, {
									"case":	162,
									"scores":	[-5.063577322526756]
								}, {
									"case":	163,
									"scores":	[-5.063577322526756]
								}, {
									"case":	164,
									"scores":	[-5.063577322526756]
								}, {
									"case":	165,
									"scores":	[-5.063577322526756]
								}, {
									"case":	166,
									"scores":	[-5.063577322526756]
								}, {
									"case":	167,
									"scores":	[-5.063577322526756]
								}, {
									"case":	168,
									"scores":	[-5.063577322526756]
								}, {
									"case":	169,
									"scores":	[-5.063577322526756]
								}, {
									"case":	170,
									"scores":	[-5.063577322526756]
								}, {
									"case":	171,
									"scores":	[-5.063577322526756]
								}, {
									"case":	172,
									"scores":	[-5.063577322526756]
								}, {
									"case":	173,
									"scores":	[-5.063577322526756]
								}, {
									"case":	174,
									"scores":	[-5.063577322526756]
								}, {
									"case":	175,
									"scores":	[-5.063577322526756]
								}, {
									"case":	176,
									"scores":	[-5.063577322526756]
								}, {
									"case":	177,
									"scores":	[-5.063577322526756]
								}, {
									"case":	178,
									"scores":	[-5.063577322526756]
								}, {
									"case":	179,
									"scores":	[-5.063577322526756]
								}, {
									"case":	180,
									"scores":	[-5.063577322526756]
								}, {
									"case":	181,
									"scores":	[-5.063577322526756]
								}, {
									"case":	182,
									"scores":	[-5.063577322526756]
								}, {
									"case":	183,
									"scores":	[-5.063577322526756]
								}, {
									"case":	184,
									"scores":	[-5.063577322526756]
								}, {
									"case":	185,
									"scores":	[-5.063577322526756]
								}, {
									"case":	186,
									"scores":	[-5.063577322526756]
								}, {
									"case":	187,
									"scores":	[-5.063577322526756]
								}, {
									"case":	188,
									"scores":	[-5.063577322526756]
								}, {
									"case":	189,
									"scores":	[-5.063577322526756]
								}, {
									"case":	190,
									"scores":	[-5.063577322526756]
								}, {
									"case":	191,
									"scores":	[-5.063577322526756]
								}, {
									"case":	192,
									"scores":	[-5.063577322526756]
								}, {
									"case":	193,
									"scores":	[-5.063577322526756]
								}, {
									"case":	194,
									"scores":	[-5.063577322526756]
								}, {
									"case":	195,
									"scores":	[-5.063577322526756]
								}, {
									"case":	196,
									"scores":	[-5.063577322526756]
								}, {
									"case":	197,
									"scores":	[-5.063577322526756]
								}, {
									"case":	198,
									"scores":	[-5.063577322526756]
								}, {
									"case":	199,
									"scores":	[-5.063577322526756]
								}, {
									"case":	200,
									"scores":	[-5.063577322526756]
								}, {
									"case":	201,
									"scores":	[-5.063577322526756]
								}, {
									"case":	202,
									"scores":	[-5.063577322526756]
								}, {
									"case":	203,
									"scores":	[-5.063577322526756]
								}, {
									"case":	204,
									"scores":	[-5.063577322526756]
								}, {
									"case":	205,
									"scores":	[-5.063577322526756]
								}, {
									"case":	206,
									"scores":	[-5.063577322526756]
								}, {
									"case":	207,
									"scores":	[-5.063577322526756]
								}, {
									"case":	208,
									"scores":	[-5.063577322526756]
								}, {
									"case":	209,
									"scores":	[-5.063577322526756]
								}, {
									"case":	210,
									"scores":	[-5.063577322526756]
								}, {
									"case":	211,
									"scores":	[-5.063577322526756]
								}, {
									"case":	212,
									"scores":	[-5.063577322526756]
								}, {
									"case":	213,
									"scores":	[-5.063577322526756]
								}, {
									"case":	214,
									"scores":	[-5.063577322526756]
								}, {
									"case":	215,
									"scores":	[-5.063577322526756]
								}, {
									"case":	216,
									"scores":	[-5.063577322526756]
								}, {
									"case":	217,
									"scores":	[-5.063577322526756]
								}, {
									"case":	218,
									"scores":	[-5.063577322526756]
								}, {
									"case":	219,
									"scores":	[-5.063577322526756]
								}, {
									"case":	220,
									"scores":	[-5.063577322526756]
								}, {
									"case":	221,
									"scores":	[-5.063577322526756]
								}, {
									"case":	222,
									"scores":	[-5.063577322526756]
								}, {
									"case":	223,
									"scores":	[-5.063577322526756]
								}, {
									"case":	224,
									"scores":	[-5.063577322526756]
								}, {
									"case":	225,
									"scores":	[-5.063577322526756]
								}, {
									"case":	226,
									"scores":	[-5.063577322526756]
								}, {
									"case":	227,
									"scores":	[-5.063577322526756]
								}, {
									"case":	228,
									"scores":	[-5.063577322526756]
								}, {
									"case":	229,
									"scores":	[-5.063577322526756]
								}, {
									"case":	230,
									"scores":	[-5.063577322526756]
								}, {
									"case":	231,
									"scores":	[-5.063577322526756]
								}, {
									"case":	232,
									"scores":	[-5.063577322526756]
								}, {
									"case":	233,
									"scores":	[-5.063577322526756]
								}, {
									"case":	234,
									"scores":	[-5.063577322526756]
								}, {
									"case":	235,
									"scores":	[-5.063577322526756]
								}, {
									"case":	236,
									"scores":	[-5.063577322526756]
								}, {
									"case":	237,
									"scores":	[-5.063577322526756]
								}, {
									"case":	238,
									"scores":	[-9.75794325032676, -8.8849782432267546, -6.0681958795267557, -8.9528955205267557, -9.0206392925267558, -9.0461934323267563, -9.5772002925267543, -9.5772002925267543, -9.5772002925267543, -9.5772002925267543, -9.5772002925267543, -9.5772002925267543, -9.076265292526756]
								}]
						}, {
							"switch":	25,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3489,
							"begin_column":	2,
							"end_line":	3489,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->d;\n}\n", "if ((strcmp((*member).value.str.val, \"d\") == 0) || __is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->d;\n}\n", "if (Debug((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (cfg_get_double((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (cfg_get_long((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (cfg_get_string((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (execl((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (execle((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (execlp((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (execv((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (execvp((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (fprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (fputs((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (link((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (lstat((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (lutimes((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_printf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_sprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (php_version_compare((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (printf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (rename((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (sprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (stat((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (strcasecmp((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (strcmp((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (strcoll((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (symlink((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (utime((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (utimes((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (virtual_filepath((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (virtual_lstat((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (virtual_stat((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (virtual_utime((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (vprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (wprintf((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if (zend_stream_open((*member).value.str.val, \"d\") == 0) {\n    value = obj->diff->d;\n}\n", "if ((strcmp((*member).value.str.val, \"d\") == 0) && !__is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->d;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3760609549281462, -5.7872603228281454, -3.9808025154281457, -5.5304712994281457, -5.4414411344281461, -6.1798823344281466, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.3304772144281456]
								}, {
									"case":	2,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}]
						}, {
							"switch":	26,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3489,
							"begin_column":	2,
							"end_line":	3489,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"d\") == 0) {\n        value = obj->diff->d;\n    }\n", "if (!__is_neg(\"\", \"L3489\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"d\") == 0)) {\n    value = obj->diff->d;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4515305030267562, -7.8627298709267563, -6.0562720635267562, -7.6059408475267567, -7.5169106825267562, -8.2553518825267567, -7.7279577925267562, -7.7279577925267562, -7.7279577925267562, -7.7279577925267562, -7.7279577925267562, -7.7279577925267562, -7.4059467625267565]
								}, {
									"case":	2,
									"scores":	[-5.0301019390267561, -5.4413013069267562, -3.634843499526756, -5.1845122835267565, -5.0954821185267551, -5.8339233185267556, -5.306529228526756, -5.306529228526756, -5.306529228526756, -5.306529228526756, -5.306529228526756, -5.306529228526756, -4.9845181985267555]
								}]
						}]
				}, {
					"line":	3489,
					"switches":	[{
							"switch":	27,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3490,
							"begin_column":	0,
							"end_line":	3490,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9019556639866]
								}, {
									"case":	2,
									"scores":	[-4.9019556639866]
								}, {
									"case":	3,
									"scores":	[-4.9019556639866]
								}, {
									"case":	4,
									"scores":	[-4.9019556639866]
								}, {
									"case":	5,
									"scores":	[-4.9019556639866]
								}, {
									"case":	6,
									"scores":	[-4.9019556639866]
								}, {
									"case":	7,
									"scores":	[-4.9019556639866]
								}, {
									"case":	8,
									"scores":	[-4.9019556639866]
								}, {
									"case":	9,
									"scores":	[-4.9019556639866]
								}, {
									"case":	10,
									"scores":	[-4.9019556639866]
								}, {
									"case":	11,
									"scores":	[-4.9019556639866]
								}, {
									"case":	12,
									"scores":	[-4.9019556639866]
								}, {
									"case":	13,
									"scores":	[-4.9019556639866]
								}, {
									"case":	14,
									"scores":	[-4.9019556639866]
								}, {
									"case":	15,
									"scores":	[-4.9019556639866]
								}, {
									"case":	16,
									"scores":	[-4.9019556639866]
								}, {
									"case":	17,
									"scores":	[-4.9019556639866]
								}, {
									"case":	18,
									"scores":	[-4.9019556639866]
								}, {
									"case":	19,
									"scores":	[-4.9019556639866]
								}, {
									"case":	20,
									"scores":	[-4.9019556639866]
								}, {
									"case":	21,
									"scores":	[-4.9019556639866]
								}, {
									"case":	22,
									"scores":	[-4.9019556639866]
								}, {
									"case":	23,
									"scores":	[-4.9019556639866]
								}, {
									"case":	24,
									"scores":	[-4.9019556639866]
								}, {
									"case":	25,
									"scores":	[-4.9019556639866]
								}, {
									"case":	26,
									"scores":	[-4.9019556639866]
								}, {
									"case":	27,
									"scores":	[-4.9019556639866]
								}, {
									"case":	28,
									"scores":	[-4.9019556639866]
								}, {
									"case":	29,
									"scores":	[-4.9019556639866]
								}, {
									"case":	30,
									"scores":	[-4.9019556639866]
								}, {
									"case":	31,
									"scores":	[-4.9019556639866]
								}, {
									"case":	32,
									"scores":	[-4.9019556639866]
								}, {
									"case":	33,
									"scores":	[-4.9019556639866]
								}, {
									"case":	34,
									"scores":	[-4.9019556639866]
								}, {
									"case":	35,
									"scores":	[-4.9019556639866]
								}, {
									"case":	36,
									"scores":	[-4.9019556639866]
								}, {
									"case":	37,
									"scores":	[-4.9019556639866]
								}, {
									"case":	38,
									"scores":	[-4.9019556639866]
								}, {
									"case":	39,
									"scores":	[-4.9019556639866]
								}, {
									"case":	40,
									"scores":	[-4.9019556639866]
								}, {
									"case":	41,
									"scores":	[-4.9019556639866]
								}, {
									"case":	42,
									"scores":	[-4.9019556639866]
								}, {
									"case":	43,
									"scores":	[-4.9019556639866]
								}, {
									"case":	44,
									"scores":	[-4.9019556639866]
								}, {
									"case":	45,
									"scores":	[-4.9019556639866]
								}, {
									"case":	46,
									"scores":	[-4.9019556639866]
								}, {
									"case":	47,
									"scores":	[-4.9019556639866]
								}, {
									"case":	48,
									"scores":	[-4.9019556639866]
								}, {
									"case":	49,
									"scores":	[-4.9019556639866]
								}, {
									"case":	50,
									"scores":	[-4.9019556639866]
								}, {
									"case":	51,
									"scores":	[-4.9019556639866]
								}, {
									"case":	52,
									"scores":	[-4.9019556639866]
								}, {
									"case":	53,
									"scores":	[-4.9019556639866]
								}, {
									"case":	54,
									"scores":	[-4.9019556639866]
								}, {
									"case":	55,
									"scores":	[-4.9019556639866]
								}, {
									"case":	56,
									"scores":	[-4.9019556639866]
								}, {
									"case":	57,
									"scores":	[-4.9019556639866]
								}, {
									"case":	58,
									"scores":	[-4.9019556639866]
								}, {
									"case":	59,
									"scores":	[-4.9019556639866]
								}, {
									"case":	60,
									"scores":	[-4.9019556639866]
								}, {
									"case":	61,
									"scores":	[-4.9019556639866]
								}, {
									"case":	62,
									"scores":	[-4.9019556639866]
								}, {
									"case":	63,
									"scores":	[-4.9019556639866]
								}, {
									"case":	64,
									"scores":	[-4.9019556639866]
								}, {
									"case":	65,
									"scores":	[-4.9019556639866]
								}, {
									"case":	66,
									"scores":	[-4.9019556639866]
								}, {
									"case":	67,
									"scores":	[-4.9019556639866]
								}, {
									"case":	68,
									"scores":	[-4.9019556639866]
								}, {
									"case":	69,
									"scores":	[-4.9019556639866]
								}, {
									"case":	70,
									"scores":	[-4.9019556639866]
								}, {
									"case":	71,
									"scores":	[-4.9019556639866]
								}, {
									"case":	72,
									"scores":	[-4.9019556639866]
								}, {
									"case":	73,
									"scores":	[-4.9019556639866]
								}, {
									"case":	74,
									"scores":	[-4.9019556639866]
								}, {
									"case":	75,
									"scores":	[-4.9019556639866]
								}, {
									"case":	76,
									"scores":	[-4.9019556639866]
								}, {
									"case":	77,
									"scores":	[-4.9019556639866]
								}, {
									"case":	78,
									"scores":	[-4.9019556639866]
								}, {
									"case":	79,
									"scores":	[-4.9019556639866]
								}, {
									"case":	80,
									"scores":	[-4.9019556639866]
								}, {
									"case":	81,
									"scores":	[-4.9019556639866]
								}, {
									"case":	82,
									"scores":	[-4.9019556639866]
								}, {
									"case":	83,
									"scores":	[-4.9019556639866]
								}, {
									"case":	84,
									"scores":	[-4.9019556639866]
								}, {
									"case":	85,
									"scores":	[-4.9019556639866]
								}, {
									"case":	86,
									"scores":	[-4.9019556639866]
								}, {
									"case":	87,
									"scores":	[-4.9019556639866]
								}, {
									"case":	88,
									"scores":	[-4.9019556639866]
								}, {
									"case":	89,
									"scores":	[-4.9019556639866]
								}, {
									"case":	90,
									"scores":	[-4.9019556639866]
								}, {
									"case":	91,
									"scores":	[-4.9019556639866]
								}, {
									"case":	92,
									"scores":	[-4.9019556639866]
								}, {
									"case":	93,
									"scores":	[-4.9019556639866]
								}, {
									"case":	94,
									"scores":	[-4.9019556639866]
								}, {
									"case":	95,
									"scores":	[-4.9019556639866]
								}, {
									"case":	96,
									"scores":	[-4.9019556639866]
								}, {
									"case":	97,
									"scores":	[-4.9019556639866]
								}, {
									"case":	98,
									"scores":	[-4.9019556639866]
								}, {
									"case":	99,
									"scores":	[-4.9019556639866]
								}, {
									"case":	100,
									"scores":	[-4.9019556639866]
								}, {
									"case":	101,
									"scores":	[-4.9019556639866]
								}, {
									"case":	102,
									"scores":	[-4.9019556639866]
								}, {
									"case":	103,
									"scores":	[-4.9019556639866]
								}, {
									"case":	104,
									"scores":	[-4.9019556639866]
								}, {
									"case":	105,
									"scores":	[-4.9019556639866]
								}, {
									"case":	106,
									"scores":	[-4.9019556639866]
								}, {
									"case":	107,
									"scores":	[-4.9019556639866]
								}, {
									"case":	108,
									"scores":	[-4.9019556639866]
								}, {
									"case":	109,
									"scores":	[-4.9019556639866]
								}, {
									"case":	110,
									"scores":	[-4.9019556639866]
								}, {
									"case":	111,
									"scores":	[-4.9019556639866]
								}, {
									"case":	112,
									"scores":	[-4.9019556639866]
								}, {
									"case":	113,
									"scores":	[-4.9019556639866]
								}, {
									"case":	114,
									"scores":	[-4.9019556639866]
								}, {
									"case":	115,
									"scores":	[-4.9019556639866]
								}, {
									"case":	116,
									"scores":	[-4.9019556639866]
								}, {
									"case":	117,
									"scores":	[-4.9019556639866]
								}, {
									"case":	118,
									"scores":	[-4.9019556639866]
								}, {
									"case":	119,
									"scores":	[-4.9019556639866]
								}, {
									"case":	120,
									"scores":	[-4.9019556639866]
								}, {
									"case":	121,
									"scores":	[-4.9019556639866]
								}, {
									"case":	122,
									"scores":	[-4.9019556639866]
								}, {
									"case":	123,
									"scores":	[-4.9019556639866]
								}, {
									"case":	124,
									"scores":	[-4.9019556639866]
								}, {
									"case":	125,
									"scores":	[-4.9019556639866]
								}, {
									"case":	126,
									"scores":	[-4.9019556639866]
								}, {
									"case":	127,
									"scores":	[-4.9019556639866]
								}, {
									"case":	128,
									"scores":	[-4.9019556639866]
								}, {
									"case":	129,
									"scores":	[-4.9019556639866]
								}, {
									"case":	130,
									"scores":	[-4.9019556639866]
								}, {
									"case":	131,
									"scores":	[-4.9019556639866]
								}, {
									"case":	132,
									"scores":	[-4.9019556639866]
								}, {
									"case":	133,
									"scores":	[-4.9019556639866]
								}, {
									"case":	134,
									"scores":	[-4.9019556639866]
								}, {
									"case":	135,
									"scores":	[-4.9019556639866]
								}, {
									"case":	136,
									"scores":	[-4.9019556639866]
								}, {
									"case":	137,
									"scores":	[-4.9019556639866]
								}, {
									"case":	138,
									"scores":	[-4.9019556639866]
								}, {
									"case":	139,
									"scores":	[-4.9019556639866]
								}, {
									"case":	140,
									"scores":	[-4.9019556639866]
								}, {
									"case":	141,
									"scores":	[-4.9019556639866]
								}, {
									"case":	142,
									"scores":	[-4.9019556639866]
								}, {
									"case":	143,
									"scores":	[-4.9019556639866]
								}, {
									"case":	144,
									"scores":	[-4.9019556639866]
								}, {
									"case":	145,
									"scores":	[-4.9019556639866]
								}, {
									"case":	146,
									"scores":	[-4.9019556639866]
								}, {
									"case":	147,
									"scores":	[-4.9019556639866]
								}, {
									"case":	148,
									"scores":	[-4.9019556639866]
								}, {
									"case":	149,
									"scores":	[-4.9019556639866]
								}, {
									"case":	150,
									"scores":	[-4.9019556639866]
								}, {
									"case":	151,
									"scores":	[-4.9019556639866]
								}, {
									"case":	152,
									"scores":	[-4.9019556639866]
								}, {
									"case":	153,
									"scores":	[-4.9019556639866]
								}, {
									"case":	154,
									"scores":	[-4.9019556639866]
								}, {
									"case":	155,
									"scores":	[-4.9019556639866]
								}, {
									"case":	156,
									"scores":	[-4.9019556639866]
								}, {
									"case":	157,
									"scores":	[-4.9019556639866]
								}, {
									"case":	158,
									"scores":	[-4.9019556639866]
								}, {
									"case":	159,
									"scores":	[-4.9019556639866]
								}, {
									"case":	160,
									"scores":	[-4.9019556639866]
								}, {
									"case":	161,
									"scores":	[-4.9019556639866]
								}, {
									"case":	162,
									"scores":	[-4.9019556639866]
								}, {
									"case":	163,
									"scores":	[-4.9019556639866]
								}, {
									"case":	164,
									"scores":	[-4.9019556639866]
								}, {
									"case":	165,
									"scores":	[-4.9019556639866]
								}, {
									"case":	166,
									"scores":	[-4.9019556639866]
								}, {
									"case":	167,
									"scores":	[-4.9019556639866]
								}, {
									"case":	168,
									"scores":	[-4.9019556639866]
								}, {
									"case":	169,
									"scores":	[-4.9019556639866]
								}, {
									"case":	170,
									"scores":	[-4.9019556639866]
								}, {
									"case":	171,
									"scores":	[-4.9019556639866]
								}, {
									"case":	172,
									"scores":	[-4.9019556639866]
								}, {
									"case":	173,
									"scores":	[-4.9019556639866]
								}, {
									"case":	174,
									"scores":	[-4.9019556639866]
								}, {
									"case":	175,
									"scores":	[-4.9019556639866]
								}, {
									"case":	176,
									"scores":	[-4.9019556639866]
								}, {
									"case":	177,
									"scores":	[-4.9019556639866]
								}, {
									"case":	178,
									"scores":	[-4.9019556639866]
								}, {
									"case":	179,
									"scores":	[-4.9019556639866]
								}, {
									"case":	180,
									"scores":	[-4.9019556639866]
								}, {
									"case":	181,
									"scores":	[-4.9019556639866]
								}, {
									"case":	182,
									"scores":	[-4.9019556639866]
								}, {
									"case":	183,
									"scores":	[-4.9019556639866]
								}, {
									"case":	184,
									"scores":	[-4.9019556639866]
								}, {
									"case":	185,
									"scores":	[-4.9019556639866]
								}, {
									"case":	186,
									"scores":	[-4.9019556639866]
								}, {
									"case":	187,
									"scores":	[-4.9019556639866]
								}, {
									"case":	188,
									"scores":	[-4.9019556639866]
								}, {
									"case":	189,
									"scores":	[-4.9019556639866]
								}, {
									"case":	190,
									"scores":	[-4.9019556639866]
								}, {
									"case":	191,
									"scores":	[-4.9019556639866]
								}, {
									"case":	192,
									"scores":	[-4.9019556639866]
								}, {
									"case":	193,
									"scores":	[-4.9019556639866]
								}, {
									"case":	194,
									"scores":	[-4.9019556639866]
								}, {
									"case":	195,
									"scores":	[-4.9019556639866]
								}, {
									"case":	196,
									"scores":	[-4.9019556639866]
								}, {
									"case":	197,
									"scores":	[-4.9019556639866]
								}, {
									"case":	198,
									"scores":	[-4.9019556639866]
								}, {
									"case":	199,
									"scores":	[-4.9019556639866]
								}, {
									"case":	200,
									"scores":	[-4.9019556639866]
								}, {
									"case":	201,
									"scores":	[-4.9019556639866]
								}, {
									"case":	202,
									"scores":	[-4.9019556639866]
								}, {
									"case":	203,
									"scores":	[-4.9019556639866]
								}, {
									"case":	204,
									"scores":	[-4.9019556639866]
								}, {
									"case":	205,
									"scores":	[-4.9019556639866]
								}, {
									"case":	206,
									"scores":	[-4.9019556639866]
								}, {
									"case":	207,
									"scores":	[-4.9019556639866]
								}, {
									"case":	208,
									"scores":	[-4.9019556639866]
								}, {
									"case":	209,
									"scores":	[-4.9019556639866]
								}, {
									"case":	210,
									"scores":	[-4.9019556639866]
								}, {
									"case":	211,
									"scores":	[-4.9019556639866]
								}, {
									"case":	212,
									"scores":	[-4.9019556639866]
								}, {
									"case":	213,
									"scores":	[-4.9019556639866]
								}, {
									"case":	214,
									"scores":	[-4.9019556639866]
								}, {
									"case":	215,
									"scores":	[-4.9019556639866]
								}, {
									"case":	216,
									"scores":	[-4.9019556639866]
								}, {
									"case":	217,
									"scores":	[-4.9019556639866]
								}, {
									"case":	218,
									"scores":	[-4.9019556639866]
								}, {
									"case":	219,
									"scores":	[-4.9019556639866]
								}, {
									"case":	220,
									"scores":	[-4.9019556639866]
								}, {
									"case":	221,
									"scores":	[-4.9019556639866]
								}, {
									"case":	222,
									"scores":	[-4.9019556639866]
								}, {
									"case":	223,
									"scores":	[-4.9019556639866]
								}, {
									"case":	224,
									"scores":	[-4.9019556639866]
								}, {
									"case":	225,
									"scores":	[-4.9019556639866]
								}, {
									"case":	226,
									"scores":	[-4.9019556639866]
								}, {
									"case":	227,
									"scores":	[-4.9019556639866]
								}, {
									"case":	228,
									"scores":	[-4.9019556639866]
								}, {
									"case":	229,
									"scores":	[-4.9019556639866]
								}, {
									"case":	230,
									"scores":	[-4.9019556639866]
								}, {
									"case":	231,
									"scores":	[-4.9019556639866]
								}, {
									"case":	232,
									"scores":	[-4.9019556639866]
								}, {
									"case":	233,
									"scores":	[-4.9019556639866]
								}, {
									"case":	234,
									"scores":	[-4.9019556639866]
								}, {
									"case":	235,
									"scores":	[-4.9019556639866]
								}, {
									"case":	236,
									"scores":	[-4.9019556639866]
								}, {
									"case":	237,
									"scores":	[-4.9019556639866]
								}, {
									"case":	238,
									"scores":	[-9.5963215917866, -8.7233565846866, -5.9065742209866, -8.7912738619866, -8.8590176339866, -8.8845717737866, -9.4155786339866, -9.4155786339866, -9.4155786339866, -9.4155786339866, -9.4155786339866, -9.4155786339866, -8.9146436339866]
								}]
						}, {
							"switch":	28,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3490,
							"begin_column":	2,
							"end_line":	3490,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->h;\n}\n", "if ((strcmp((*member).value.str.val, \"h\") == 0) || __is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->h;\n}\n", "if (Debug((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (cfg_get_double((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (cfg_get_long((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (cfg_get_string((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (execl((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (execle((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (execlp((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (execv((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (execvp((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (fprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (fputs((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (link((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (lstat((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (lutimes((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_printf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_sprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (php_version_compare((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (printf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (rename((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (sprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (stat((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (strcasecmp((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (strcmp((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (strcoll((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (symlink((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (utime((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (utimes((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (virtual_filepath((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (virtual_lstat((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (virtual_stat((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (virtual_utime((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (vprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (wprintf((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if (zend_stream_open((*member).value.str.val, \"h\") == 0) {\n    value = obj->diff->h;\n}\n", "if ((strcmp((*member).value.str.val, \"h\") == 0) && !__is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->h;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3760609549281462, -5.7872603228281454, -3.9808025154281457, -5.5304712994281457, -5.4414411344281461, -6.1798823344281466, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.3304772144281456]
								}, {
									"case":	2,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}]
						}, {
							"switch":	29,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3490,
							"begin_column":	2,
							"end_line":	3490,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"h\") == 0) {\n        value = obj->diff->h;\n    }\n", "if (!__is_neg(\"\", \"L3490\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"h\") == 0)) {\n    value = obj->diff->h;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.2899088444866, -7.7011082123866, -5.8946504049866, -7.4443191889866, -7.3552890239866, -8.0937302239866, -7.5663361339866, -7.5663361339866, -7.5663361339866, -7.5663361339866, -7.5663361339866, -7.5663361339866, -7.2443251039866]
								}, {
									"case":	2,
									"scores":	[-4.8684802804866, -5.2796796483866, -3.4732218409866, -5.0228906249866, -4.9338604599866, -5.6723016599866, -5.1449075699866, -5.1449075699866, -5.1449075699866, -5.1449075699866, -5.1449075699866, -5.1449075699866, -4.8228965399866]
								}]
						}]
				}, {
					"line":	3490,
					"switches":	[{
							"switch":	30,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3491,
							"begin_column":	0,
							"end_line":	3491,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.740334005446444]
								}, {
									"case":	2,
									"scores":	[-4.740334005446444]
								}, {
									"case":	3,
									"scores":	[-4.740334005446444]
								}, {
									"case":	4,
									"scores":	[-4.740334005446444]
								}, {
									"case":	5,
									"scores":	[-4.740334005446444]
								}, {
									"case":	6,
									"scores":	[-4.740334005446444]
								}, {
									"case":	7,
									"scores":	[-4.740334005446444]
								}, {
									"case":	8,
									"scores":	[-4.740334005446444]
								}, {
									"case":	9,
									"scores":	[-4.740334005446444]
								}, {
									"case":	10,
									"scores":	[-4.740334005446444]
								}, {
									"case":	11,
									"scores":	[-4.740334005446444]
								}, {
									"case":	12,
									"scores":	[-4.740334005446444]
								}, {
									"case":	13,
									"scores":	[-4.740334005446444]
								}, {
									"case":	14,
									"scores":	[-4.740334005446444]
								}, {
									"case":	15,
									"scores":	[-4.740334005446444]
								}, {
									"case":	16,
									"scores":	[-4.740334005446444]
								}, {
									"case":	17,
									"scores":	[-4.740334005446444]
								}, {
									"case":	18,
									"scores":	[-4.740334005446444]
								}, {
									"case":	19,
									"scores":	[-4.740334005446444]
								}, {
									"case":	20,
									"scores":	[-4.740334005446444]
								}, {
									"case":	21,
									"scores":	[-4.740334005446444]
								}, {
									"case":	22,
									"scores":	[-4.740334005446444]
								}, {
									"case":	23,
									"scores":	[-4.740334005446444]
								}, {
									"case":	24,
									"scores":	[-4.740334005446444]
								}, {
									"case":	25,
									"scores":	[-4.740334005446444]
								}, {
									"case":	26,
									"scores":	[-4.740334005446444]
								}, {
									"case":	27,
									"scores":	[-4.740334005446444]
								}, {
									"case":	28,
									"scores":	[-4.740334005446444]
								}, {
									"case":	29,
									"scores":	[-4.740334005446444]
								}, {
									"case":	30,
									"scores":	[-4.740334005446444]
								}, {
									"case":	31,
									"scores":	[-4.740334005446444]
								}, {
									"case":	32,
									"scores":	[-4.740334005446444]
								}, {
									"case":	33,
									"scores":	[-4.740334005446444]
								}, {
									"case":	34,
									"scores":	[-4.740334005446444]
								}, {
									"case":	35,
									"scores":	[-4.740334005446444]
								}, {
									"case":	36,
									"scores":	[-4.740334005446444]
								}, {
									"case":	37,
									"scores":	[-4.740334005446444]
								}, {
									"case":	38,
									"scores":	[-4.740334005446444]
								}, {
									"case":	39,
									"scores":	[-4.740334005446444]
								}, {
									"case":	40,
									"scores":	[-4.740334005446444]
								}, {
									"case":	41,
									"scores":	[-4.740334005446444]
								}, {
									"case":	42,
									"scores":	[-4.740334005446444]
								}, {
									"case":	43,
									"scores":	[-4.740334005446444]
								}, {
									"case":	44,
									"scores":	[-4.740334005446444]
								}, {
									"case":	45,
									"scores":	[-4.740334005446444]
								}, {
									"case":	46,
									"scores":	[-4.740334005446444]
								}, {
									"case":	47,
									"scores":	[-4.740334005446444]
								}, {
									"case":	48,
									"scores":	[-4.740334005446444]
								}, {
									"case":	49,
									"scores":	[-4.740334005446444]
								}, {
									"case":	50,
									"scores":	[-4.740334005446444]
								}, {
									"case":	51,
									"scores":	[-4.740334005446444]
								}, {
									"case":	52,
									"scores":	[-4.740334005446444]
								}, {
									"case":	53,
									"scores":	[-4.740334005446444]
								}, {
									"case":	54,
									"scores":	[-4.740334005446444]
								}, {
									"case":	55,
									"scores":	[-4.740334005446444]
								}, {
									"case":	56,
									"scores":	[-4.740334005446444]
								}, {
									"case":	57,
									"scores":	[-4.740334005446444]
								}, {
									"case":	58,
									"scores":	[-4.740334005446444]
								}, {
									"case":	59,
									"scores":	[-4.740334005446444]
								}, {
									"case":	60,
									"scores":	[-4.740334005446444]
								}, {
									"case":	61,
									"scores":	[-4.740334005446444]
								}, {
									"case":	62,
									"scores":	[-4.740334005446444]
								}, {
									"case":	63,
									"scores":	[-4.740334005446444]
								}, {
									"case":	64,
									"scores":	[-4.740334005446444]
								}, {
									"case":	65,
									"scores":	[-4.740334005446444]
								}, {
									"case":	66,
									"scores":	[-4.740334005446444]
								}, {
									"case":	67,
									"scores":	[-4.740334005446444]
								}, {
									"case":	68,
									"scores":	[-4.740334005446444]
								}, {
									"case":	69,
									"scores":	[-4.740334005446444]
								}, {
									"case":	70,
									"scores":	[-4.740334005446444]
								}, {
									"case":	71,
									"scores":	[-4.740334005446444]
								}, {
									"case":	72,
									"scores":	[-4.740334005446444]
								}, {
									"case":	73,
									"scores":	[-4.740334005446444]
								}, {
									"case":	74,
									"scores":	[-4.740334005446444]
								}, {
									"case":	75,
									"scores":	[-4.740334005446444]
								}, {
									"case":	76,
									"scores":	[-4.740334005446444]
								}, {
									"case":	77,
									"scores":	[-4.740334005446444]
								}, {
									"case":	78,
									"scores":	[-4.740334005446444]
								}, {
									"case":	79,
									"scores":	[-4.740334005446444]
								}, {
									"case":	80,
									"scores":	[-4.740334005446444]
								}, {
									"case":	81,
									"scores":	[-4.740334005446444]
								}, {
									"case":	82,
									"scores":	[-4.740334005446444]
								}, {
									"case":	83,
									"scores":	[-4.740334005446444]
								}, {
									"case":	84,
									"scores":	[-4.740334005446444]
								}, {
									"case":	85,
									"scores":	[-4.740334005446444]
								}, {
									"case":	86,
									"scores":	[-4.740334005446444]
								}, {
									"case":	87,
									"scores":	[-4.740334005446444]
								}, {
									"case":	88,
									"scores":	[-4.740334005446444]
								}, {
									"case":	89,
									"scores":	[-4.740334005446444]
								}, {
									"case":	90,
									"scores":	[-4.740334005446444]
								}, {
									"case":	91,
									"scores":	[-4.740334005446444]
								}, {
									"case":	92,
									"scores":	[-4.740334005446444]
								}, {
									"case":	93,
									"scores":	[-4.740334005446444]
								}, {
									"case":	94,
									"scores":	[-4.740334005446444]
								}, {
									"case":	95,
									"scores":	[-4.740334005446444]
								}, {
									"case":	96,
									"scores":	[-4.740334005446444]
								}, {
									"case":	97,
									"scores":	[-4.740334005446444]
								}, {
									"case":	98,
									"scores":	[-4.740334005446444]
								}, {
									"case":	99,
									"scores":	[-4.740334005446444]
								}, {
									"case":	100,
									"scores":	[-4.740334005446444]
								}, {
									"case":	101,
									"scores":	[-4.740334005446444]
								}, {
									"case":	102,
									"scores":	[-4.740334005446444]
								}, {
									"case":	103,
									"scores":	[-4.740334005446444]
								}, {
									"case":	104,
									"scores":	[-4.740334005446444]
								}, {
									"case":	105,
									"scores":	[-4.740334005446444]
								}, {
									"case":	106,
									"scores":	[-4.740334005446444]
								}, {
									"case":	107,
									"scores":	[-4.740334005446444]
								}, {
									"case":	108,
									"scores":	[-4.740334005446444]
								}, {
									"case":	109,
									"scores":	[-4.740334005446444]
								}, {
									"case":	110,
									"scores":	[-4.740334005446444]
								}, {
									"case":	111,
									"scores":	[-4.740334005446444]
								}, {
									"case":	112,
									"scores":	[-4.740334005446444]
								}, {
									"case":	113,
									"scores":	[-4.740334005446444]
								}, {
									"case":	114,
									"scores":	[-4.740334005446444]
								}, {
									"case":	115,
									"scores":	[-4.740334005446444]
								}, {
									"case":	116,
									"scores":	[-4.740334005446444]
								}, {
									"case":	117,
									"scores":	[-4.740334005446444]
								}, {
									"case":	118,
									"scores":	[-4.740334005446444]
								}, {
									"case":	119,
									"scores":	[-4.740334005446444]
								}, {
									"case":	120,
									"scores":	[-4.740334005446444]
								}, {
									"case":	121,
									"scores":	[-4.740334005446444]
								}, {
									"case":	122,
									"scores":	[-4.740334005446444]
								}, {
									"case":	123,
									"scores":	[-4.740334005446444]
								}, {
									"case":	124,
									"scores":	[-4.740334005446444]
								}, {
									"case":	125,
									"scores":	[-4.740334005446444]
								}, {
									"case":	126,
									"scores":	[-4.740334005446444]
								}, {
									"case":	127,
									"scores":	[-4.740334005446444]
								}, {
									"case":	128,
									"scores":	[-4.740334005446444]
								}, {
									"case":	129,
									"scores":	[-4.740334005446444]
								}, {
									"case":	130,
									"scores":	[-4.740334005446444]
								}, {
									"case":	131,
									"scores":	[-4.740334005446444]
								}, {
									"case":	132,
									"scores":	[-4.740334005446444]
								}, {
									"case":	133,
									"scores":	[-4.740334005446444]
								}, {
									"case":	134,
									"scores":	[-4.740334005446444]
								}, {
									"case":	135,
									"scores":	[-4.740334005446444]
								}, {
									"case":	136,
									"scores":	[-4.740334005446444]
								}, {
									"case":	137,
									"scores":	[-4.740334005446444]
								}, {
									"case":	138,
									"scores":	[-4.740334005446444]
								}, {
									"case":	139,
									"scores":	[-4.740334005446444]
								}, {
									"case":	140,
									"scores":	[-4.740334005446444]
								}, {
									"case":	141,
									"scores":	[-4.740334005446444]
								}, {
									"case":	142,
									"scores":	[-4.740334005446444]
								}, {
									"case":	143,
									"scores":	[-4.740334005446444]
								}, {
									"case":	144,
									"scores":	[-4.740334005446444]
								}, {
									"case":	145,
									"scores":	[-4.740334005446444]
								}, {
									"case":	146,
									"scores":	[-4.740334005446444]
								}, {
									"case":	147,
									"scores":	[-4.740334005446444]
								}, {
									"case":	148,
									"scores":	[-4.740334005446444]
								}, {
									"case":	149,
									"scores":	[-4.740334005446444]
								}, {
									"case":	150,
									"scores":	[-4.740334005446444]
								}, {
									"case":	151,
									"scores":	[-4.740334005446444]
								}, {
									"case":	152,
									"scores":	[-4.740334005446444]
								}, {
									"case":	153,
									"scores":	[-4.740334005446444]
								}, {
									"case":	154,
									"scores":	[-4.740334005446444]
								}, {
									"case":	155,
									"scores":	[-4.740334005446444]
								}, {
									"case":	156,
									"scores":	[-4.740334005446444]
								}, {
									"case":	157,
									"scores":	[-4.740334005446444]
								}, {
									"case":	158,
									"scores":	[-4.740334005446444]
								}, {
									"case":	159,
									"scores":	[-4.740334005446444]
								}, {
									"case":	160,
									"scores":	[-4.740334005446444]
								}, {
									"case":	161,
									"scores":	[-4.740334005446444]
								}, {
									"case":	162,
									"scores":	[-4.740334005446444]
								}, {
									"case":	163,
									"scores":	[-4.740334005446444]
								}, {
									"case":	164,
									"scores":	[-4.740334005446444]
								}, {
									"case":	165,
									"scores":	[-4.740334005446444]
								}, {
									"case":	166,
									"scores":	[-4.740334005446444]
								}, {
									"case":	167,
									"scores":	[-4.740334005446444]
								}, {
									"case":	168,
									"scores":	[-4.740334005446444]
								}, {
									"case":	169,
									"scores":	[-4.740334005446444]
								}, {
									"case":	170,
									"scores":	[-4.740334005446444]
								}, {
									"case":	171,
									"scores":	[-4.740334005446444]
								}, {
									"case":	172,
									"scores":	[-4.740334005446444]
								}, {
									"case":	173,
									"scores":	[-4.740334005446444]
								}, {
									"case":	174,
									"scores":	[-4.740334005446444]
								}, {
									"case":	175,
									"scores":	[-4.740334005446444]
								}, {
									"case":	176,
									"scores":	[-4.740334005446444]
								}, {
									"case":	177,
									"scores":	[-4.740334005446444]
								}, {
									"case":	178,
									"scores":	[-4.740334005446444]
								}, {
									"case":	179,
									"scores":	[-4.740334005446444]
								}, {
									"case":	180,
									"scores":	[-4.740334005446444]
								}, {
									"case":	181,
									"scores":	[-4.740334005446444]
								}, {
									"case":	182,
									"scores":	[-4.740334005446444]
								}, {
									"case":	183,
									"scores":	[-4.740334005446444]
								}, {
									"case":	184,
									"scores":	[-4.740334005446444]
								}, {
									"case":	185,
									"scores":	[-4.740334005446444]
								}, {
									"case":	186,
									"scores":	[-4.740334005446444]
								}, {
									"case":	187,
									"scores":	[-4.740334005446444]
								}, {
									"case":	188,
									"scores":	[-4.740334005446444]
								}, {
									"case":	189,
									"scores":	[-4.740334005446444]
								}, {
									"case":	190,
									"scores":	[-4.740334005446444]
								}, {
									"case":	191,
									"scores":	[-4.740334005446444]
								}, {
									"case":	192,
									"scores":	[-4.740334005446444]
								}, {
									"case":	193,
									"scores":	[-4.740334005446444]
								}, {
									"case":	194,
									"scores":	[-4.740334005446444]
								}, {
									"case":	195,
									"scores":	[-4.740334005446444]
								}, {
									"case":	196,
									"scores":	[-4.740334005446444]
								}, {
									"case":	197,
									"scores":	[-4.740334005446444]
								}, {
									"case":	198,
									"scores":	[-4.740334005446444]
								}, {
									"case":	199,
									"scores":	[-4.740334005446444]
								}, {
									"case":	200,
									"scores":	[-4.740334005446444]
								}, {
									"case":	201,
									"scores":	[-4.740334005446444]
								}, {
									"case":	202,
									"scores":	[-4.740334005446444]
								}, {
									"case":	203,
									"scores":	[-4.740334005446444]
								}, {
									"case":	204,
									"scores":	[-4.740334005446444]
								}, {
									"case":	205,
									"scores":	[-4.740334005446444]
								}, {
									"case":	206,
									"scores":	[-4.740334005446444]
								}, {
									"case":	207,
									"scores":	[-4.740334005446444]
								}, {
									"case":	208,
									"scores":	[-4.740334005446444]
								}, {
									"case":	209,
									"scores":	[-4.740334005446444]
								}, {
									"case":	210,
									"scores":	[-4.740334005446444]
								}, {
									"case":	211,
									"scores":	[-4.740334005446444]
								}, {
									"case":	212,
									"scores":	[-4.740334005446444]
								}, {
									"case":	213,
									"scores":	[-4.740334005446444]
								}, {
									"case":	214,
									"scores":	[-4.740334005446444]
								}, {
									"case":	215,
									"scores":	[-4.740334005446444]
								}, {
									"case":	216,
									"scores":	[-4.740334005446444]
								}, {
									"case":	217,
									"scores":	[-4.740334005446444]
								}, {
									"case":	218,
									"scores":	[-4.740334005446444]
								}, {
									"case":	219,
									"scores":	[-4.740334005446444]
								}, {
									"case":	220,
									"scores":	[-4.740334005446444]
								}, {
									"case":	221,
									"scores":	[-4.740334005446444]
								}, {
									"case":	222,
									"scores":	[-4.740334005446444]
								}, {
									"case":	223,
									"scores":	[-4.740334005446444]
								}, {
									"case":	224,
									"scores":	[-4.740334005446444]
								}, {
									"case":	225,
									"scores":	[-4.740334005446444]
								}, {
									"case":	226,
									"scores":	[-4.740334005446444]
								}, {
									"case":	227,
									"scores":	[-4.740334005446444]
								}, {
									"case":	228,
									"scores":	[-4.740334005446444]
								}, {
									"case":	229,
									"scores":	[-4.740334005446444]
								}, {
									"case":	230,
									"scores":	[-4.740334005446444]
								}, {
									"case":	231,
									"scores":	[-4.740334005446444]
								}, {
									"case":	232,
									"scores":	[-4.740334005446444]
								}, {
									"case":	233,
									"scores":	[-4.740334005446444]
								}, {
									"case":	234,
									"scores":	[-4.740334005446444]
								}, {
									"case":	235,
									"scores":	[-4.740334005446444]
								}, {
									"case":	236,
									"scores":	[-4.740334005446444]
								}, {
									"case":	237,
									"scores":	[-4.740334005446444]
								}, {
									"case":	238,
									"scores":	[-9.4346999332464456, -8.56173492614644, -5.7449525624464437, -8.6296522034464438, -8.6973959754464438, -8.7229501152464444, -9.25395697544644, -9.25395697544644, -9.25395697544644, -9.25395697544644, -9.25395697544644, -9.25395697544644, -8.753021975446444]
								}]
						}, {
							"switch":	31,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3491,
							"begin_column":	2,
							"end_line":	3491,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->i;\n}\n", "if ((strcmp((*member).value.str.val, \"i\") == 0) || __is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->i;\n}\n", "if (Debug((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (cfg_get_double((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (cfg_get_long((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (cfg_get_string((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (execl((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (execle((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (execlp((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (execv((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (execvp((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (fprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (fputs((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (link((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (lstat((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (lutimes((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_printf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_sprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (php_version_compare((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (printf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (rename((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (sprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (stat((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (strcasecmp((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (strcmp((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (strcoll((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (symlink((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (utime((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (utimes((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (virtual_filepath((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (virtual_lstat((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (virtual_stat((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (virtual_utime((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (vprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (wprintf((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if (zend_stream_open((*member).value.str.val, \"i\") == 0) {\n    value = obj->diff->i;\n}\n", "if ((strcmp((*member).value.str.val, \"i\") == 0) && !__is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->i;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3760609549281462, -5.7872603228281454, -3.9808025154281457, -5.5304712994281457, -5.4414411344281461, -6.1798823344281466, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.3304772144281456]
								}, {
									"case":	2,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}]
						}, {
							"switch":	32,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3491,
							"begin_column":	2,
							"end_line":	3491,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"i\") == 0) {\n        value = obj->diff->i;\n    }\n", "if (!__is_neg(\"\", \"L3491\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"i\") == 0)) {\n    value = obj->diff->i;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1282871859464443, -7.5394865538464444, -5.7330287464464442, -7.2826975304464447, -7.1936673654464443, -7.9321085654464447, -7.4047144754464442, -7.4047144754464442, -7.4047144754464442, -7.4047144754464442, -7.4047144754464442, -7.4047144754464442, -7.0827034454464446]
								}, {
									"case":	2,
									"scores":	[-4.7068586219464441, -5.1180579898464442, -3.3116001824464441, -4.8612689664464446, -4.7722388014464432, -5.5106800014464437, -4.9832859114464441, -4.9832859114464441, -4.9832859114464441, -4.9832859114464441, -4.9832859114464441, -4.9832859114464441, -4.6612748814464435]
								}]
						}]
				}, {
					"line":	3491,
					"switches":	[{
							"switch":	33,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3492,
							"begin_column":	0,
							"end_line":	3492,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.578712346906288]
								}, {
									"case":	2,
									"scores":	[-4.578712346906288]
								}, {
									"case":	3,
									"scores":	[-4.578712346906288]
								}, {
									"case":	4,
									"scores":	[-4.578712346906288]
								}, {
									"case":	5,
									"scores":	[-4.578712346906288]
								}, {
									"case":	6,
									"scores":	[-4.578712346906288]
								}, {
									"case":	7,
									"scores":	[-4.578712346906288]
								}, {
									"case":	8,
									"scores":	[-4.578712346906288]
								}, {
									"case":	9,
									"scores":	[-4.578712346906288]
								}, {
									"case":	10,
									"scores":	[-4.578712346906288]
								}, {
									"case":	11,
									"scores":	[-4.578712346906288]
								}, {
									"case":	12,
									"scores":	[-4.578712346906288]
								}, {
									"case":	13,
									"scores":	[-4.578712346906288]
								}, {
									"case":	14,
									"scores":	[-4.578712346906288]
								}, {
									"case":	15,
									"scores":	[-4.578712346906288]
								}, {
									"case":	16,
									"scores":	[-4.578712346906288]
								}, {
									"case":	17,
									"scores":	[-4.578712346906288]
								}, {
									"case":	18,
									"scores":	[-4.578712346906288]
								}, {
									"case":	19,
									"scores":	[-4.578712346906288]
								}, {
									"case":	20,
									"scores":	[-4.578712346906288]
								}, {
									"case":	21,
									"scores":	[-4.578712346906288]
								}, {
									"case":	22,
									"scores":	[-4.578712346906288]
								}, {
									"case":	23,
									"scores":	[-4.578712346906288]
								}, {
									"case":	24,
									"scores":	[-4.578712346906288]
								}, {
									"case":	25,
									"scores":	[-4.578712346906288]
								}, {
									"case":	26,
									"scores":	[-4.578712346906288]
								}, {
									"case":	27,
									"scores":	[-4.578712346906288]
								}, {
									"case":	28,
									"scores":	[-4.578712346906288]
								}, {
									"case":	29,
									"scores":	[-4.578712346906288]
								}, {
									"case":	30,
									"scores":	[-4.578712346906288]
								}, {
									"case":	31,
									"scores":	[-4.578712346906288]
								}, {
									"case":	32,
									"scores":	[-4.578712346906288]
								}, {
									"case":	33,
									"scores":	[-4.578712346906288]
								}, {
									"case":	34,
									"scores":	[-4.578712346906288]
								}, {
									"case":	35,
									"scores":	[-4.578712346906288]
								}, {
									"case":	36,
									"scores":	[-4.578712346906288]
								}, {
									"case":	37,
									"scores":	[-4.578712346906288]
								}, {
									"case":	38,
									"scores":	[-4.578712346906288]
								}, {
									"case":	39,
									"scores":	[-4.578712346906288]
								}, {
									"case":	40,
									"scores":	[-4.578712346906288]
								}, {
									"case":	41,
									"scores":	[-4.578712346906288]
								}, {
									"case":	42,
									"scores":	[-4.578712346906288]
								}, {
									"case":	43,
									"scores":	[-4.578712346906288]
								}, {
									"case":	44,
									"scores":	[-4.578712346906288]
								}, {
									"case":	45,
									"scores":	[-4.578712346906288]
								}, {
									"case":	46,
									"scores":	[-4.578712346906288]
								}, {
									"case":	47,
									"scores":	[-4.578712346906288]
								}, {
									"case":	48,
									"scores":	[-4.578712346906288]
								}, {
									"case":	49,
									"scores":	[-4.578712346906288]
								}, {
									"case":	50,
									"scores":	[-4.578712346906288]
								}, {
									"case":	51,
									"scores":	[-4.578712346906288]
								}, {
									"case":	52,
									"scores":	[-4.578712346906288]
								}, {
									"case":	53,
									"scores":	[-4.578712346906288]
								}, {
									"case":	54,
									"scores":	[-4.578712346906288]
								}, {
									"case":	55,
									"scores":	[-4.578712346906288]
								}, {
									"case":	56,
									"scores":	[-4.578712346906288]
								}, {
									"case":	57,
									"scores":	[-4.578712346906288]
								}, {
									"case":	58,
									"scores":	[-4.578712346906288]
								}, {
									"case":	59,
									"scores":	[-4.578712346906288]
								}, {
									"case":	60,
									"scores":	[-4.578712346906288]
								}, {
									"case":	61,
									"scores":	[-4.578712346906288]
								}, {
									"case":	62,
									"scores":	[-4.578712346906288]
								}, {
									"case":	63,
									"scores":	[-4.578712346906288]
								}, {
									"case":	64,
									"scores":	[-4.578712346906288]
								}, {
									"case":	65,
									"scores":	[-4.578712346906288]
								}, {
									"case":	66,
									"scores":	[-4.578712346906288]
								}, {
									"case":	67,
									"scores":	[-4.578712346906288]
								}, {
									"case":	68,
									"scores":	[-4.578712346906288]
								}, {
									"case":	69,
									"scores":	[-4.578712346906288]
								}, {
									"case":	70,
									"scores":	[-4.578712346906288]
								}, {
									"case":	71,
									"scores":	[-4.578712346906288]
								}, {
									"case":	72,
									"scores":	[-4.578712346906288]
								}, {
									"case":	73,
									"scores":	[-4.578712346906288]
								}, {
									"case":	74,
									"scores":	[-4.578712346906288]
								}, {
									"case":	75,
									"scores":	[-4.578712346906288]
								}, {
									"case":	76,
									"scores":	[-4.578712346906288]
								}, {
									"case":	77,
									"scores":	[-4.578712346906288]
								}, {
									"case":	78,
									"scores":	[-4.578712346906288]
								}, {
									"case":	79,
									"scores":	[-4.578712346906288]
								}, {
									"case":	80,
									"scores":	[-4.578712346906288]
								}, {
									"case":	81,
									"scores":	[-4.578712346906288]
								}, {
									"case":	82,
									"scores":	[-4.578712346906288]
								}, {
									"case":	83,
									"scores":	[-4.578712346906288]
								}, {
									"case":	84,
									"scores":	[-4.578712346906288]
								}, {
									"case":	85,
									"scores":	[-4.578712346906288]
								}, {
									"case":	86,
									"scores":	[-4.578712346906288]
								}, {
									"case":	87,
									"scores":	[-4.578712346906288]
								}, {
									"case":	88,
									"scores":	[-4.578712346906288]
								}, {
									"case":	89,
									"scores":	[-4.578712346906288]
								}, {
									"case":	90,
									"scores":	[-4.578712346906288]
								}, {
									"case":	91,
									"scores":	[-4.578712346906288]
								}, {
									"case":	92,
									"scores":	[-4.578712346906288]
								}, {
									"case":	93,
									"scores":	[-4.578712346906288]
								}, {
									"case":	94,
									"scores":	[-4.578712346906288]
								}, {
									"case":	95,
									"scores":	[-4.578712346906288]
								}, {
									"case":	96,
									"scores":	[-4.578712346906288]
								}, {
									"case":	97,
									"scores":	[-4.578712346906288]
								}, {
									"case":	98,
									"scores":	[-4.578712346906288]
								}, {
									"case":	99,
									"scores":	[-4.578712346906288]
								}, {
									"case":	100,
									"scores":	[-4.578712346906288]
								}, {
									"case":	101,
									"scores":	[-4.578712346906288]
								}, {
									"case":	102,
									"scores":	[-4.578712346906288]
								}, {
									"case":	103,
									"scores":	[-4.578712346906288]
								}, {
									"case":	104,
									"scores":	[-4.578712346906288]
								}, {
									"case":	105,
									"scores":	[-4.578712346906288]
								}, {
									"case":	106,
									"scores":	[-4.578712346906288]
								}, {
									"case":	107,
									"scores":	[-4.578712346906288]
								}, {
									"case":	108,
									"scores":	[-4.578712346906288]
								}, {
									"case":	109,
									"scores":	[-4.578712346906288]
								}, {
									"case":	110,
									"scores":	[-4.578712346906288]
								}, {
									"case":	111,
									"scores":	[-4.578712346906288]
								}, {
									"case":	112,
									"scores":	[-4.578712346906288]
								}, {
									"case":	113,
									"scores":	[-4.578712346906288]
								}, {
									"case":	114,
									"scores":	[-4.578712346906288]
								}, {
									"case":	115,
									"scores":	[-4.578712346906288]
								}, {
									"case":	116,
									"scores":	[-4.578712346906288]
								}, {
									"case":	117,
									"scores":	[-4.578712346906288]
								}, {
									"case":	118,
									"scores":	[-4.578712346906288]
								}, {
									"case":	119,
									"scores":	[-4.578712346906288]
								}, {
									"case":	120,
									"scores":	[-4.578712346906288]
								}, {
									"case":	121,
									"scores":	[-4.578712346906288]
								}, {
									"case":	122,
									"scores":	[-4.578712346906288]
								}, {
									"case":	123,
									"scores":	[-4.578712346906288]
								}, {
									"case":	124,
									"scores":	[-4.578712346906288]
								}, {
									"case":	125,
									"scores":	[-4.578712346906288]
								}, {
									"case":	126,
									"scores":	[-4.578712346906288]
								}, {
									"case":	127,
									"scores":	[-4.578712346906288]
								}, {
									"case":	128,
									"scores":	[-4.578712346906288]
								}, {
									"case":	129,
									"scores":	[-4.578712346906288]
								}, {
									"case":	130,
									"scores":	[-4.578712346906288]
								}, {
									"case":	131,
									"scores":	[-4.578712346906288]
								}, {
									"case":	132,
									"scores":	[-4.578712346906288]
								}, {
									"case":	133,
									"scores":	[-4.578712346906288]
								}, {
									"case":	134,
									"scores":	[-4.578712346906288]
								}, {
									"case":	135,
									"scores":	[-4.578712346906288]
								}, {
									"case":	136,
									"scores":	[-4.578712346906288]
								}, {
									"case":	137,
									"scores":	[-4.578712346906288]
								}, {
									"case":	138,
									"scores":	[-4.578712346906288]
								}, {
									"case":	139,
									"scores":	[-4.578712346906288]
								}, {
									"case":	140,
									"scores":	[-4.578712346906288]
								}, {
									"case":	141,
									"scores":	[-4.578712346906288]
								}, {
									"case":	142,
									"scores":	[-4.578712346906288]
								}, {
									"case":	143,
									"scores":	[-4.578712346906288]
								}, {
									"case":	144,
									"scores":	[-4.578712346906288]
								}, {
									"case":	145,
									"scores":	[-4.578712346906288]
								}, {
									"case":	146,
									"scores":	[-4.578712346906288]
								}, {
									"case":	147,
									"scores":	[-4.578712346906288]
								}, {
									"case":	148,
									"scores":	[-4.578712346906288]
								}, {
									"case":	149,
									"scores":	[-4.578712346906288]
								}, {
									"case":	150,
									"scores":	[-4.578712346906288]
								}, {
									"case":	151,
									"scores":	[-4.578712346906288]
								}, {
									"case":	152,
									"scores":	[-4.578712346906288]
								}, {
									"case":	153,
									"scores":	[-4.578712346906288]
								}, {
									"case":	154,
									"scores":	[-4.578712346906288]
								}, {
									"case":	155,
									"scores":	[-4.578712346906288]
								}, {
									"case":	156,
									"scores":	[-4.578712346906288]
								}, {
									"case":	157,
									"scores":	[-4.578712346906288]
								}, {
									"case":	158,
									"scores":	[-4.578712346906288]
								}, {
									"case":	159,
									"scores":	[-4.578712346906288]
								}, {
									"case":	160,
									"scores":	[-4.578712346906288]
								}, {
									"case":	161,
									"scores":	[-4.578712346906288]
								}, {
									"case":	162,
									"scores":	[-4.578712346906288]
								}, {
									"case":	163,
									"scores":	[-4.578712346906288]
								}, {
									"case":	164,
									"scores":	[-4.578712346906288]
								}, {
									"case":	165,
									"scores":	[-4.578712346906288]
								}, {
									"case":	166,
									"scores":	[-4.578712346906288]
								}, {
									"case":	167,
									"scores":	[-4.578712346906288]
								}, {
									"case":	168,
									"scores":	[-4.578712346906288]
								}, {
									"case":	169,
									"scores":	[-4.578712346906288]
								}, {
									"case":	170,
									"scores":	[-4.578712346906288]
								}, {
									"case":	171,
									"scores":	[-4.578712346906288]
								}, {
									"case":	172,
									"scores":	[-4.578712346906288]
								}, {
									"case":	173,
									"scores":	[-4.578712346906288]
								}, {
									"case":	174,
									"scores":	[-4.578712346906288]
								}, {
									"case":	175,
									"scores":	[-4.578712346906288]
								}, {
									"case":	176,
									"scores":	[-4.578712346906288]
								}, {
									"case":	177,
									"scores":	[-4.578712346906288]
								}, {
									"case":	178,
									"scores":	[-4.578712346906288]
								}, {
									"case":	179,
									"scores":	[-4.578712346906288]
								}, {
									"case":	180,
									"scores":	[-4.578712346906288]
								}, {
									"case":	181,
									"scores":	[-4.578712346906288]
								}, {
									"case":	182,
									"scores":	[-4.578712346906288]
								}, {
									"case":	183,
									"scores":	[-4.578712346906288]
								}, {
									"case":	184,
									"scores":	[-4.578712346906288]
								}, {
									"case":	185,
									"scores":	[-4.578712346906288]
								}, {
									"case":	186,
									"scores":	[-4.578712346906288]
								}, {
									"case":	187,
									"scores":	[-4.578712346906288]
								}, {
									"case":	188,
									"scores":	[-4.578712346906288]
								}, {
									"case":	189,
									"scores":	[-4.578712346906288]
								}, {
									"case":	190,
									"scores":	[-4.578712346906288]
								}, {
									"case":	191,
									"scores":	[-4.578712346906288]
								}, {
									"case":	192,
									"scores":	[-4.578712346906288]
								}, {
									"case":	193,
									"scores":	[-4.578712346906288]
								}, {
									"case":	194,
									"scores":	[-4.578712346906288]
								}, {
									"case":	195,
									"scores":	[-4.578712346906288]
								}, {
									"case":	196,
									"scores":	[-4.578712346906288]
								}, {
									"case":	197,
									"scores":	[-4.578712346906288]
								}, {
									"case":	198,
									"scores":	[-4.578712346906288]
								}, {
									"case":	199,
									"scores":	[-4.578712346906288]
								}, {
									"case":	200,
									"scores":	[-4.578712346906288]
								}, {
									"case":	201,
									"scores":	[-4.578712346906288]
								}, {
									"case":	202,
									"scores":	[-4.578712346906288]
								}, {
									"case":	203,
									"scores":	[-4.578712346906288]
								}, {
									"case":	204,
									"scores":	[-4.578712346906288]
								}, {
									"case":	205,
									"scores":	[-4.578712346906288]
								}, {
									"case":	206,
									"scores":	[-4.578712346906288]
								}, {
									"case":	207,
									"scores":	[-4.578712346906288]
								}, {
									"case":	208,
									"scores":	[-4.578712346906288]
								}, {
									"case":	209,
									"scores":	[-4.578712346906288]
								}, {
									"case":	210,
									"scores":	[-4.578712346906288]
								}, {
									"case":	211,
									"scores":	[-4.578712346906288]
								}, {
									"case":	212,
									"scores":	[-4.578712346906288]
								}, {
									"case":	213,
									"scores":	[-4.578712346906288]
								}, {
									"case":	214,
									"scores":	[-4.578712346906288]
								}, {
									"case":	215,
									"scores":	[-4.578712346906288]
								}, {
									"case":	216,
									"scores":	[-4.578712346906288]
								}, {
									"case":	217,
									"scores":	[-4.578712346906288]
								}, {
									"case":	218,
									"scores":	[-4.578712346906288]
								}, {
									"case":	219,
									"scores":	[-4.578712346906288]
								}, {
									"case":	220,
									"scores":	[-4.578712346906288]
								}, {
									"case":	221,
									"scores":	[-4.578712346906288]
								}, {
									"case":	222,
									"scores":	[-4.578712346906288]
								}, {
									"case":	223,
									"scores":	[-4.578712346906288]
								}, {
									"case":	224,
									"scores":	[-4.578712346906288]
								}, {
									"case":	225,
									"scores":	[-4.578712346906288]
								}, {
									"case":	226,
									"scores":	[-4.578712346906288]
								}, {
									"case":	227,
									"scores":	[-4.578712346906288]
								}, {
									"case":	228,
									"scores":	[-4.578712346906288]
								}, {
									"case":	229,
									"scores":	[-4.578712346906288]
								}, {
									"case":	230,
									"scores":	[-4.578712346906288]
								}, {
									"case":	231,
									"scores":	[-4.578712346906288]
								}, {
									"case":	232,
									"scores":	[-4.578712346906288]
								}, {
									"case":	233,
									"scores":	[-4.578712346906288]
								}, {
									"case":	234,
									"scores":	[-4.578712346906288]
								}, {
									"case":	235,
									"scores":	[-4.578712346906288]
								}, {
									"case":	236,
									"scores":	[-4.578712346906288]
								}, {
									"case":	237,
									"scores":	[-4.578712346906288]
								}, {
									"case":	238,
									"scores":	[-9.27307827470629, -8.4001132676062866, -5.5833309039062877, -8.46803054490629, -8.53577431690629, -8.56132845670629, -9.0923353169062864, -9.0923353169062864, -9.0923353169062864, -9.0923353169062864, -9.0923353169062864, -9.0923353169062864, -8.59140031690629]
								}]
						}, {
							"switch":	34,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3492,
							"begin_column":	2,
							"end_line":	3492,
							"end_column":	30,
							"patch_codes":	["if (__is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->s;\n}\n", "if ((strcmp((*member).value.str.val, \"s\") == 0) || __is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->s;\n}\n", "if (Debug((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (cfg_get_double((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (cfg_get_long((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (cfg_get_string((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (execl((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (execle((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (execlp((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (execv((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (execvp((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (fprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (fputs((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (link((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (lstat((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (lutimes((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_printf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_sprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (php_version_compare((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (printf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (rename((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (sprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (stat((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (strcasecmp((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (strcmp((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (strcoll((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (symlink((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (utime((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (utimes((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (virtual_filepath((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (virtual_lstat((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (virtual_stat((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (virtual_utime((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (vprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (wprintf((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if (zend_stream_open((*member).value.str.val, \"s\") == 0) {\n    value = obj->diff->s;\n}\n", "if ((strcmp((*member).value.str.val, \"s\") == 0) && !__is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->s;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3760609549281462, -5.7872603228281454, -3.9808025154281457, -5.5304712994281457, -5.4414411344281461, -6.1798823344281466, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.3304772144281456]
								}, {
									"case":	2,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}]
						}, {
							"switch":	35,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3492,
							"begin_column":	2,
							"end_line":	3492,
							"end_column":	30,
							"patch_codes":	["if (!__is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"s\") == 0) {\n        value = obj->diff->s;\n    }\n", "if (!__is_neg(\"\", \"L3492\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"s\") == 0)) {\n    value = obj->diff->s;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9666655274062883, -7.3778648953062884, -5.5714070879062882, -7.12107587190629, -7.0320457069062883, -7.77048690690629, -7.2430928169062883, -7.2430928169062883, -7.2430928169062883, -7.2430928169062883, -7.2430928169062883, -7.2430928169062883, -6.9210817869062886]
								}, {
									"case":	2,
									"scores":	[-4.5452369634062881, -4.9564363313062882, -3.1499785239062881, -4.6996473079062886, -4.6106171429062872, -5.3490583429062877, -4.8216642529062881, -4.8216642529062881, -4.8216642529062881, -4.8216642529062881, -4.8216642529062881, -4.8216642529062881, -4.4996532229062876]
								}]
						}]
				}, {
					"line":	3492,
					"switches":	[{
							"switch":	36,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3493,
							"begin_column":	0,
							"end_line":	3493,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	2,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	3,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	4,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	5,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	6,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	7,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	8,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	9,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	10,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	11,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	12,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	13,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	14,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	15,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	16,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	17,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	18,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	19,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	20,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	21,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	22,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	23,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	24,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	25,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	26,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	27,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	28,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	29,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	30,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	31,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	32,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	33,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	34,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	35,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	36,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	37,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	38,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	39,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	40,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	41,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	42,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	43,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	44,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	45,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	46,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	47,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	48,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	49,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	50,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	51,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	52,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	53,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	54,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	55,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	56,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	57,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	58,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	59,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	60,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	61,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	62,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	63,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	64,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	65,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	66,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	67,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	68,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	69,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	70,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	71,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	72,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	73,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	74,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	75,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	76,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	77,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	78,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	79,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	80,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	81,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	82,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	83,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	84,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	85,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	86,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	87,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	88,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	89,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	90,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	91,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	92,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	93,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	94,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	95,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	96,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	97,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	98,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	99,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	100,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	101,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	102,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	103,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	104,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	105,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	106,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	107,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	108,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	109,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	110,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	111,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	112,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	113,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	114,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	115,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	116,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	117,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	118,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	119,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	120,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	121,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	122,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	123,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	124,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	125,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	126,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	127,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	128,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	129,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	130,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	131,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	132,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	133,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	134,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	135,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	136,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	137,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	138,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	139,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	140,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	141,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	142,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	143,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	144,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	145,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	146,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	147,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	148,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	149,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	150,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	151,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	152,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	153,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	154,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	155,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	156,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	157,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	158,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	159,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	160,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	161,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	162,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	163,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	164,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	165,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	166,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	167,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	168,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	169,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	170,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	171,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	172,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	173,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	174,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	175,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	176,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	177,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	178,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	179,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	180,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	181,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	182,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	183,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	184,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	185,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	186,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	187,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	188,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	189,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	190,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	191,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	192,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	193,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	194,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	195,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	196,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	197,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	198,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	199,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	200,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	201,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	202,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	203,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	204,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	205,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	206,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	207,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	208,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	209,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	210,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	211,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	212,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	213,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	214,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	215,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	216,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	217,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	218,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	219,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	220,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	221,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	222,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	223,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	224,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	225,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	226,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	227,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	228,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	229,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	230,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	231,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	232,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	233,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	234,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	235,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	236,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	237,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	238,
									"scores":	[-9.1114566161661337, -8.23849160906613, -5.4217092453661326, -8.3064088863661336, -8.37415265836613, -8.39970679816613, -8.93071365836613, -8.93071365836613, -8.93071365836613, -8.93071365836613, -8.93071365836613, -8.93071365836613, -8.42977865836613]
								}]
						}, {
							"switch":	37,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3493,
							"begin_column":	2,
							"end_line":	3493,
							"end_column":	40,
							"patch_codes":	["if (__is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->invert;\n}\n", "if ((strcmp((*member).value.str.val, \"invert\") == 0) || __is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->invert;\n}\n", "if (Debug((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (cfg_get_double((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (cfg_get_long((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (cfg_get_string((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (execl((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (execle((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (execlp((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (execv((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (execvp((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (fprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (fputs((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (link((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (lstat((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (lutimes((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_printf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_sprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (php_version_compare((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (printf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (rename((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (sprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (stat((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (strcasecmp((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (strcmp((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (strcoll((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (symlink((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (utime((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (utimes((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (virtual_filepath((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (virtual_lstat((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (virtual_stat((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (virtual_utime((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (vprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (wprintf((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if (zend_stream_open((*member).value.str.val, \"invert\") == 0) {\n    value = obj->diff->invert;\n}\n", "if ((strcmp((*member).value.str.val, \"invert\") == 0) && !__is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->invert;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.3760609549281462, -5.7872603228281454, -3.9808025154281457, -5.5304712994281457, -5.4414411344281461, -6.1798823344281466, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.6524882444281461, -5.3304772144281456]
								}, {
									"case":	2,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-2.609262431928145, -3.0204617998281451, -1.2140039924281449, -2.7636727764281455, -2.674642611428145, -3.4130838114281454, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.8856897214281449, -2.5636786914281453]
								}]
						}, {
							"switch":	38,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3493,
							"begin_column":	2,
							"end_line":	3493,
							"end_column":	40,
							"patch_codes":	["if (!__is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"invert\") == 0) {\n        value = obj->diff->invert;\n    }\n", "if (!__is_neg(\"\", \"L3493\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"invert\") == 0)) {\n    value = obj->diff->invert;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8050438688661332, -7.2162432367661324, -5.4097854293661332, -6.9594542133661328, -6.8704240483661332, -7.6088652483661328, -7.0814711583661332, -7.0814711583661332, -7.0814711583661332, -7.0814711583661332, -7.0814711583661332, -7.0814711583661332, -6.7594601283661326]
								}, {
									"case":	2,
									"scores":	[-4.383615304866133, -4.7948146727661332, -2.988356865366133, -4.5380256493661335, -4.448995484366133, -5.1874366843661326, -4.6600425943661321, -4.6600425943661321, -4.6600425943661321, -4.6600425943661321, -4.6600425943661321, -4.6600425943661321, -4.3380315643661325]
								}]
						}]
				}, {
					"line":	3493,
					"switches":	[{
							"switch":	39,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3494,
							"begin_column":	0,
							"end_line":	3494,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.336279859096055]
								}, {
									"case":	2,
									"scores":	[-4.336279859096055]
								}, {
									"case":	3,
									"scores":	[-4.336279859096055]
								}, {
									"case":	4,
									"scores":	[-4.336279859096055]
								}, {
									"case":	5,
									"scores":	[-4.336279859096055]
								}, {
									"case":	6,
									"scores":	[-4.336279859096055]
								}, {
									"case":	7,
									"scores":	[-4.336279859096055]
								}, {
									"case":	8,
									"scores":	[-4.336279859096055]
								}, {
									"case":	9,
									"scores":	[-4.336279859096055]
								}, {
									"case":	10,
									"scores":	[-4.336279859096055]
								}, {
									"case":	11,
									"scores":	[-4.336279859096055]
								}, {
									"case":	12,
									"scores":	[-4.336279859096055]
								}, {
									"case":	13,
									"scores":	[-4.336279859096055]
								}, {
									"case":	14,
									"scores":	[-4.336279859096055]
								}, {
									"case":	15,
									"scores":	[-4.336279859096055]
								}, {
									"case":	16,
									"scores":	[-4.336279859096055]
								}, {
									"case":	17,
									"scores":	[-4.336279859096055]
								}, {
									"case":	18,
									"scores":	[-4.336279859096055]
								}, {
									"case":	19,
									"scores":	[-4.336279859096055]
								}, {
									"case":	20,
									"scores":	[-4.336279859096055]
								}, {
									"case":	21,
									"scores":	[-4.336279859096055]
								}, {
									"case":	22,
									"scores":	[-4.336279859096055]
								}, {
									"case":	23,
									"scores":	[-4.336279859096055]
								}, {
									"case":	24,
									"scores":	[-4.336279859096055]
								}, {
									"case":	25,
									"scores":	[-4.336279859096055]
								}, {
									"case":	26,
									"scores":	[-4.336279859096055]
								}, {
									"case":	27,
									"scores":	[-4.336279859096055]
								}, {
									"case":	28,
									"scores":	[-4.336279859096055]
								}, {
									"case":	29,
									"scores":	[-4.336279859096055]
								}, {
									"case":	30,
									"scores":	[-4.336279859096055]
								}, {
									"case":	31,
									"scores":	[-4.336279859096055]
								}, {
									"case":	32,
									"scores":	[-4.336279859096055]
								}, {
									"case":	33,
									"scores":	[-4.336279859096055]
								}, {
									"case":	34,
									"scores":	[-4.336279859096055]
								}, {
									"case":	35,
									"scores":	[-4.336279859096055]
								}, {
									"case":	36,
									"scores":	[-4.336279859096055]
								}, {
									"case":	37,
									"scores":	[-4.336279859096055]
								}, {
									"case":	38,
									"scores":	[-4.336279859096055]
								}, {
									"case":	39,
									"scores":	[-4.336279859096055]
								}, {
									"case":	40,
									"scores":	[-4.336279859096055]
								}, {
									"case":	41,
									"scores":	[-4.336279859096055]
								}, {
									"case":	42,
									"scores":	[-4.336279859096055]
								}, {
									"case":	43,
									"scores":	[-4.336279859096055]
								}, {
									"case":	44,
									"scores":	[-4.336279859096055]
								}, {
									"case":	45,
									"scores":	[-4.336279859096055]
								}, {
									"case":	46,
									"scores":	[-4.336279859096055]
								}, {
									"case":	47,
									"scores":	[-4.336279859096055]
								}, {
									"case":	48,
									"scores":	[-4.336279859096055]
								}, {
									"case":	49,
									"scores":	[-4.336279859096055]
								}, {
									"case":	50,
									"scores":	[-4.336279859096055]
								}, {
									"case":	51,
									"scores":	[-4.336279859096055]
								}, {
									"case":	52,
									"scores":	[-4.336279859096055]
								}, {
									"case":	53,
									"scores":	[-4.336279859096055]
								}, {
									"case":	54,
									"scores":	[-4.336279859096055]
								}, {
									"case":	55,
									"scores":	[-4.336279859096055]
								}, {
									"case":	56,
									"scores":	[-4.336279859096055]
								}, {
									"case":	57,
									"scores":	[-4.336279859096055]
								}, {
									"case":	58,
									"scores":	[-4.336279859096055]
								}, {
									"case":	59,
									"scores":	[-4.336279859096055]
								}, {
									"case":	60,
									"scores":	[-4.336279859096055]
								}, {
									"case":	61,
									"scores":	[-4.336279859096055]
								}, {
									"case":	62,
									"scores":	[-4.336279859096055]
								}, {
									"case":	63,
									"scores":	[-4.336279859096055]
								}, {
									"case":	64,
									"scores":	[-4.336279859096055]
								}, {
									"case":	65,
									"scores":	[-4.336279859096055]
								}, {
									"case":	66,
									"scores":	[-4.336279859096055]
								}, {
									"case":	67,
									"scores":	[-4.336279859096055]
								}, {
									"case":	68,
									"scores":	[-4.336279859096055]
								}, {
									"case":	69,
									"scores":	[-4.336279859096055]
								}, {
									"case":	70,
									"scores":	[-4.336279859096055]
								}, {
									"case":	71,
									"scores":	[-4.336279859096055]
								}, {
									"case":	72,
									"scores":	[-4.336279859096055]
								}, {
									"case":	73,
									"scores":	[-4.336279859096055]
								}, {
									"case":	74,
									"scores":	[-4.336279859096055]
								}, {
									"case":	75,
									"scores":	[-4.336279859096055]
								}, {
									"case":	76,
									"scores":	[-4.336279859096055]
								}, {
									"case":	77,
									"scores":	[-4.336279859096055]
								}, {
									"case":	78,
									"scores":	[-4.336279859096055]
								}, {
									"case":	79,
									"scores":	[-4.336279859096055]
								}, {
									"case":	80,
									"scores":	[-4.336279859096055]
								}, {
									"case":	81,
									"scores":	[-4.336279859096055]
								}, {
									"case":	82,
									"scores":	[-4.336279859096055]
								}, {
									"case":	83,
									"scores":	[-4.336279859096055]
								}, {
									"case":	84,
									"scores":	[-4.336279859096055]
								}, {
									"case":	85,
									"scores":	[-4.336279859096055]
								}, {
									"case":	86,
									"scores":	[-4.336279859096055]
								}, {
									"case":	87,
									"scores":	[-4.336279859096055]
								}, {
									"case":	88,
									"scores":	[-4.336279859096055]
								}, {
									"case":	89,
									"scores":	[-4.336279859096055]
								}, {
									"case":	90,
									"scores":	[-4.336279859096055]
								}, {
									"case":	91,
									"scores":	[-4.336279859096055]
								}, {
									"case":	92,
									"scores":	[-4.336279859096055]
								}, {
									"case":	93,
									"scores":	[-4.336279859096055]
								}, {
									"case":	94,
									"scores":	[-4.336279859096055]
								}, {
									"case":	95,
									"scores":	[-4.336279859096055]
								}, {
									"case":	96,
									"scores":	[-4.336279859096055]
								}, {
									"case":	97,
									"scores":	[-4.336279859096055]
								}, {
									"case":	98,
									"scores":	[-4.336279859096055]
								}, {
									"case":	99,
									"scores":	[-4.336279859096055]
								}, {
									"case":	100,
									"scores":	[-4.336279859096055]
								}, {
									"case":	101,
									"scores":	[-4.336279859096055]
								}, {
									"case":	102,
									"scores":	[-4.336279859096055]
								}, {
									"case":	103,
									"scores":	[-4.336279859096055]
								}, {
									"case":	104,
									"scores":	[-4.336279859096055]
								}, {
									"case":	105,
									"scores":	[-4.336279859096055]
								}, {
									"case":	106,
									"scores":	[-4.336279859096055]
								}, {
									"case":	107,
									"scores":	[-4.336279859096055]
								}, {
									"case":	108,
									"scores":	[-4.336279859096055]
								}, {
									"case":	109,
									"scores":	[-4.336279859096055]
								}, {
									"case":	110,
									"scores":	[-4.336279859096055]
								}, {
									"case":	111,
									"scores":	[-4.336279859096055]
								}, {
									"case":	112,
									"scores":	[-4.336279859096055]
								}, {
									"case":	113,
									"scores":	[-4.336279859096055]
								}, {
									"case":	114,
									"scores":	[-4.336279859096055]
								}, {
									"case":	115,
									"scores":	[-4.336279859096055]
								}, {
									"case":	116,
									"scores":	[-4.336279859096055]
								}, {
									"case":	117,
									"scores":	[-4.336279859096055]
								}, {
									"case":	118,
									"scores":	[-4.336279859096055]
								}, {
									"case":	119,
									"scores":	[-4.336279859096055]
								}, {
									"case":	120,
									"scores":	[-4.336279859096055]
								}, {
									"case":	121,
									"scores":	[-4.336279859096055]
								}, {
									"case":	122,
									"scores":	[-4.336279859096055]
								}, {
									"case":	123,
									"scores":	[-4.336279859096055]
								}, {
									"case":	124,
									"scores":	[-4.336279859096055]
								}, {
									"case":	125,
									"scores":	[-4.336279859096055]
								}, {
									"case":	126,
									"scores":	[-4.336279859096055]
								}, {
									"case":	127,
									"scores":	[-4.336279859096055]
								}, {
									"case":	128,
									"scores":	[-4.336279859096055]
								}, {
									"case":	129,
									"scores":	[-4.336279859096055]
								}, {
									"case":	130,
									"scores":	[-4.336279859096055]
								}, {
									"case":	131,
									"scores":	[-4.336279859096055]
								}, {
									"case":	132,
									"scores":	[-4.336279859096055]
								}, {
									"case":	133,
									"scores":	[-4.336279859096055]
								}, {
									"case":	134,
									"scores":	[-4.336279859096055]
								}, {
									"case":	135,
									"scores":	[-4.336279859096055]
								}, {
									"case":	136,
									"scores":	[-4.336279859096055]
								}, {
									"case":	137,
									"scores":	[-4.336279859096055]
								}, {
									"case":	138,
									"scores":	[-4.336279859096055]
								}, {
									"case":	139,
									"scores":	[-4.336279859096055]
								}, {
									"case":	140,
									"scores":	[-4.336279859096055]
								}, {
									"case":	141,
									"scores":	[-4.336279859096055]
								}, {
									"case":	142,
									"scores":	[-4.336279859096055]
								}, {
									"case":	143,
									"scores":	[-4.336279859096055]
								}, {
									"case":	144,
									"scores":	[-4.336279859096055]
								}, {
									"case":	145,
									"scores":	[-4.336279859096055]
								}, {
									"case":	146,
									"scores":	[-4.336279859096055]
								}, {
									"case":	147,
									"scores":	[-4.336279859096055]
								}, {
									"case":	148,
									"scores":	[-4.336279859096055]
								}, {
									"case":	149,
									"scores":	[-4.336279859096055]
								}, {
									"case":	150,
									"scores":	[-4.336279859096055]
								}, {
									"case":	151,
									"scores":	[-4.336279859096055]
								}, {
									"case":	152,
									"scores":	[-4.336279859096055]
								}, {
									"case":	153,
									"scores":	[-4.336279859096055]
								}, {
									"case":	154,
									"scores":	[-4.336279859096055]
								}, {
									"case":	155,
									"scores":	[-4.336279859096055]
								}, {
									"case":	156,
									"scores":	[-4.336279859096055]
								}, {
									"case":	157,
									"scores":	[-4.336279859096055]
								}, {
									"case":	158,
									"scores":	[-4.336279859096055]
								}, {
									"case":	159,
									"scores":	[-4.336279859096055]
								}, {
									"case":	160,
									"scores":	[-4.336279859096055]
								}, {
									"case":	161,
									"scores":	[-4.336279859096055]
								}, {
									"case":	162,
									"scores":	[-4.336279859096055]
								}, {
									"case":	163,
									"scores":	[-4.336279859096055]
								}, {
									"case":	164,
									"scores":	[-4.336279859096055]
								}, {
									"case":	165,
									"scores":	[-4.336279859096055]
								}, {
									"case":	166,
									"scores":	[-4.336279859096055]
								}, {
									"case":	167,
									"scores":	[-4.336279859096055]
								}, {
									"case":	168,
									"scores":	[-4.336279859096055]
								}, {
									"case":	169,
									"scores":	[-4.336279859096055]
								}, {
									"case":	170,
									"scores":	[-4.336279859096055]
								}, {
									"case":	171,
									"scores":	[-4.336279859096055]
								}, {
									"case":	172,
									"scores":	[-4.336279859096055]
								}, {
									"case":	173,
									"scores":	[-4.336279859096055]
								}, {
									"case":	174,
									"scores":	[-4.336279859096055]
								}, {
									"case":	175,
									"scores":	[-4.336279859096055]
								}, {
									"case":	176,
									"scores":	[-4.336279859096055]
								}, {
									"case":	177,
									"scores":	[-4.336279859096055]
								}, {
									"case":	178,
									"scores":	[-4.336279859096055]
								}, {
									"case":	179,
									"scores":	[-4.336279859096055]
								}, {
									"case":	180,
									"scores":	[-4.336279859096055]
								}, {
									"case":	181,
									"scores":	[-4.336279859096055]
								}, {
									"case":	182,
									"scores":	[-4.336279859096055]
								}, {
									"case":	183,
									"scores":	[-4.336279859096055]
								}, {
									"case":	184,
									"scores":	[-4.336279859096055]
								}, {
									"case":	185,
									"scores":	[-4.336279859096055]
								}, {
									"case":	186,
									"scores":	[-4.336279859096055]
								}, {
									"case":	187,
									"scores":	[-4.336279859096055]
								}, {
									"case":	188,
									"scores":	[-4.336279859096055]
								}, {
									"case":	189,
									"scores":	[-4.336279859096055]
								}, {
									"case":	190,
									"scores":	[-4.336279859096055]
								}, {
									"case":	191,
									"scores":	[-4.336279859096055]
								}, {
									"case":	192,
									"scores":	[-4.336279859096055]
								}, {
									"case":	193,
									"scores":	[-4.336279859096055]
								}, {
									"case":	194,
									"scores":	[-4.336279859096055]
								}, {
									"case":	195,
									"scores":	[-4.336279859096055]
								}, {
									"case":	196,
									"scores":	[-4.336279859096055]
								}, {
									"case":	197,
									"scores":	[-4.336279859096055]
								}, {
									"case":	198,
									"scores":	[-4.336279859096055]
								}, {
									"case":	199,
									"scores":	[-4.336279859096055]
								}, {
									"case":	200,
									"scores":	[-4.336279859096055]
								}, {
									"case":	201,
									"scores":	[-4.336279859096055]
								}, {
									"case":	202,
									"scores":	[-4.336279859096055]
								}, {
									"case":	203,
									"scores":	[-4.336279859096055]
								}, {
									"case":	204,
									"scores":	[-4.336279859096055]
								}, {
									"case":	205,
									"scores":	[-4.336279859096055]
								}, {
									"case":	206,
									"scores":	[-4.336279859096055]
								}, {
									"case":	207,
									"scores":	[-4.336279859096055]
								}, {
									"case":	208,
									"scores":	[-4.336279859096055]
								}, {
									"case":	209,
									"scores":	[-4.336279859096055]
								}, {
									"case":	210,
									"scores":	[-4.336279859096055]
								}, {
									"case":	211,
									"scores":	[-4.336279859096055]
								}, {
									"case":	212,
									"scores":	[-4.336279859096055]
								}, {
									"case":	213,
									"scores":	[-4.336279859096055]
								}, {
									"case":	214,
									"scores":	[-4.336279859096055]
								}, {
									"case":	215,
									"scores":	[-4.336279859096055]
								}, {
									"case":	216,
									"scores":	[-4.336279859096055]
								}, {
									"case":	217,
									"scores":	[-4.336279859096055]
								}, {
									"case":	218,
									"scores":	[-4.336279859096055]
								}, {
									"case":	219,
									"scores":	[-4.336279859096055]
								}, {
									"case":	220,
									"scores":	[-4.336279859096055]
								}, {
									"case":	221,
									"scores":	[-4.336279859096055]
								}, {
									"case":	222,
									"scores":	[-4.336279859096055]
								}, {
									"case":	223,
									"scores":	[-4.336279859096055]
								}, {
									"case":	224,
									"scores":	[-4.336279859096055]
								}, {
									"case":	225,
									"scores":	[-4.336279859096055]
								}, {
									"case":	226,
									"scores":	[-4.336279859096055]
								}, {
									"case":	227,
									"scores":	[-4.336279859096055]
								}, {
									"case":	228,
									"scores":	[-4.336279859096055]
								}, {
									"case":	229,
									"scores":	[-4.336279859096055]
								}, {
									"case":	230,
									"scores":	[-4.336279859096055]
								}, {
									"case":	231,
									"scores":	[-4.336279859096055]
								}, {
									"case":	232,
									"scores":	[-4.336279859096055]
								}, {
									"case":	233,
									"scores":	[-4.336279859096055]
								}, {
									"case":	234,
									"scores":	[-4.336279859096055]
								}, {
									"case":	235,
									"scores":	[-4.336279859096055]
								}, {
									"case":	236,
									"scores":	[-4.336279859096055]
								}, {
									"case":	237,
									"scores":	[-4.336279859096055]
								}, {
									"case":	238,
									"scores":	[-9.7144377868960561, -8.8414727797960566, -6.0246904160960542, -8.9093900570960542, -9.8118413490960563, -9.0026879688960548, -9.5336948290960528, -9.5336948290960528, -9.5336948290960528, -9.5336948290960528, -9.5336948290960528, -9.5336948290960528, -9.0327598290960545]
								}]
						}, {
							"switch":	40,
							"types":	[[43], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], []],
							"begin_line":	3494,
							"begin_column":	2,
							"end_line":	3494,
							"end_column":	36,
							"patch_codes":	["if (__is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->days;\n}\n", "if ((strcmp((*member).value.str.val, \"days\") == 0) || __is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->days;\n}\n", "if (Debug((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (ap_php_asprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (cfg_get_double((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (cfg_get_long((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (cfg_get_string((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (execl((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (execle((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (execlp((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (execv((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (execvp((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (fprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (fputs((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (link((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (lstat((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (lutimes((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_check_specific_open_basedir((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_printf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_sprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_stream_filter_register_factory((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_stream_filter_register_factory_volatile((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_stream_from_persistent_id((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (php_version_compare((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (printf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (rename((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (sprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (stat((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (strcasecmp((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (strcmp((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (strcoll((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (symlink((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (utime((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (utimes((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (virtual_chdir_file((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (virtual_filepath((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (virtual_lstat((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (virtual_stat((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (virtual_utime((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (vprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (wprintf((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if (zend_stream_open((*member).value.str.val, \"days\") == 0) {\n    value = obj->diff->days;\n}\n", "if ((strcmp((*member).value.str.val, \"days\") == 0) && !__is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    value = obj->diff->days;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.5962766089281475, -5.439318798928146, -4.1840148594281459, -5.5674015544281454, -6.0636031184281451, -6.2499880984281457, -5.7225940084281453, -5.7225940084281453, -5.7225940084281453, -5.7225940084281453, -5.7225940084281453, -5.7225940084281453, -5.4005829784281456]
								}, {
									"case":	2,
									"scores":	[-1.7499032319281453, -2.5929454219281465, -1.3376414824281446, -2.7210281774281455, -3.2172297414281461, -3.4036147214281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.5542096014281457]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-1.7499032319281453, -2.5929454219281465, -1.3376414824281446, -2.7210281774281455, -3.2172297414281461, -3.4036147214281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.8762206314281458, -2.5542096014281457]
								}]
						}, {
							"switch":	41,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3494,
							"begin_column":	2,
							"end_line":	3494,
							"end_column":	36,
							"patch_codes":	["if (!__is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (strcmp((*member).value.str.val, \"days\") == 0) {\n        value = obj->diff->days;\n    }\n", "if (!__is_neg(\"\", \"L3494\", 13, &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (strcmp((*member).value.str.val, \"days\") == 0)) {\n    value = obj->diff->days;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.6098345395960552, -6.4528767295960545, -5.1975727900960544, -6.5809594850960549, -7.0771610490960555, -7.2635460290960552, -6.7361519390960547, -6.7361519390960547, -6.7361519390960547, -6.7361519390960547, -6.7361519390960547, -6.7361519390960547, -6.4141409090960551]
								}, {
									"case":	2,
									"scores":	[-3.5129728855960543, -4.3560150755960549, -3.1007111360960549, -4.4840978310960544, -4.980299395096055, -5.1666843750960547, -4.6392902850960542, -4.6392902850960542, -4.6392902850960542, -4.6392902850960542, -4.6392902850960542, -4.6392902850960542, -4.3172792550960546]
								}]
						}]
				}, {
					"line":	3495,
					"switches":	[{
							"switch":	42,
							"types":	[[], [], [], [], [236], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [], [], [], [], [], []],
							"begin_line":	3496,
							"begin_column":	0,
							"end_line":	3496,
							"end_column":	0,
							"patch_codes":	["memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3496\", 8, &(retval), sizeof (retval), &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &(object), sizeof (object), &(zval_used_for_init.refcount__gc), sizeof (zval_used_for_init.refcount__gc), &(zval_used_for_init.type), sizeof (zval_used_for_init.type), &(zval_used_for_init.is_ref__gc), sizeof (zval_used_for_init.is_ref__gc)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.215063615190938]
								}, {
									"case":	2,
									"scores":	[-4.215063615190938]
								}, {
									"case":	3,
									"scores":	[-4.215063615190938]
								}, {
									"case":	4,
									"scores":	[-4.215063615190938]
								}, {
									"case":	5,
									"scores":	[-4.215063615190938]
								}, {
									"case":	6,
									"scores":	[-4.215063615190938]
								}, {
									"case":	7,
									"scores":	[-4.215063615190938]
								}, {
									"case":	8,
									"scores":	[-4.215063615190938]
								}, {
									"case":	9,
									"scores":	[-4.215063615190938]
								}, {
									"case":	10,
									"scores":	[-4.215063615190938]
								}, {
									"case":	11,
									"scores":	[-4.215063615190938]
								}, {
									"case":	12,
									"scores":	[-4.215063615190938]
								}, {
									"case":	13,
									"scores":	[-4.215063615190938]
								}, {
									"case":	14,
									"scores":	[-4.215063615190938]
								}, {
									"case":	15,
									"scores":	[-4.215063615190938]
								}, {
									"case":	16,
									"scores":	[-4.215063615190938]
								}, {
									"case":	17,
									"scores":	[-4.215063615190938]
								}, {
									"case":	18,
									"scores":	[-4.215063615190938]
								}, {
									"case":	19,
									"scores":	[-4.215063615190938]
								}, {
									"case":	20,
									"scores":	[-4.215063615190938]
								}, {
									"case":	21,
									"scores":	[-4.215063615190938]
								}, {
									"case":	22,
									"scores":	[-4.215063615190938]
								}, {
									"case":	23,
									"scores":	[-4.215063615190938]
								}, {
									"case":	24,
									"scores":	[-4.215063615190938]
								}, {
									"case":	25,
									"scores":	[-4.215063615190938]
								}, {
									"case":	26,
									"scores":	[-4.215063615190938]
								}, {
									"case":	27,
									"scores":	[-4.215063615190938]
								}, {
									"case":	28,
									"scores":	[-4.215063615190938]
								}, {
									"case":	29,
									"scores":	[-4.215063615190938]
								}, {
									"case":	30,
									"scores":	[-4.215063615190938]
								}, {
									"case":	31,
									"scores":	[-4.215063615190938]
								}, {
									"case":	32,
									"scores":	[-4.215063615190938]
								}, {
									"case":	33,
									"scores":	[-4.215063615190938]
								}, {
									"case":	34,
									"scores":	[-4.215063615190938]
								}, {
									"case":	35,
									"scores":	[-4.215063615190938]
								}, {
									"case":	36,
									"scores":	[-4.215063615190938]
								}, {
									"case":	37,
									"scores":	[-4.215063615190938]
								}, {
									"case":	38,
									"scores":	[-4.215063615190938]
								}, {
									"case":	39,
									"scores":	[-4.215063615190938]
								}, {
									"case":	40,
									"scores":	[-4.215063615190938]
								}, {
									"case":	41,
									"scores":	[-4.215063615190938]
								}, {
									"case":	42,
									"scores":	[-4.215063615190938]
								}, {
									"case":	43,
									"scores":	[-4.215063615190938]
								}, {
									"case":	44,
									"scores":	[-4.215063615190938]
								}, {
									"case":	45,
									"scores":	[-4.215063615190938]
								}, {
									"case":	46,
									"scores":	[-4.215063615190938]
								}, {
									"case":	47,
									"scores":	[-4.215063615190938]
								}, {
									"case":	48,
									"scores":	[-4.215063615190938]
								}, {
									"case":	49,
									"scores":	[-4.215063615190938]
								}, {
									"case":	50,
									"scores":	[-4.215063615190938]
								}, {
									"case":	51,
									"scores":	[-4.215063615190938]
								}, {
									"case":	52,
									"scores":	[-4.215063615190938]
								}, {
									"case":	53,
									"scores":	[-4.215063615190938]
								}, {
									"case":	54,
									"scores":	[-4.215063615190938]
								}, {
									"case":	55,
									"scores":	[-4.215063615190938]
								}, {
									"case":	56,
									"scores":	[-4.215063615190938]
								}, {
									"case":	57,
									"scores":	[-4.215063615190938]
								}, {
									"case":	58,
									"scores":	[-4.215063615190938]
								}, {
									"case":	59,
									"scores":	[-4.215063615190938]
								}, {
									"case":	60,
									"scores":	[-4.215063615190938]
								}, {
									"case":	61,
									"scores":	[-4.215063615190938]
								}, {
									"case":	62,
									"scores":	[-4.215063615190938]
								}, {
									"case":	63,
									"scores":	[-4.215063615190938]
								}, {
									"case":	64,
									"scores":	[-4.215063615190938]
								}, {
									"case":	65,
									"scores":	[-4.215063615190938]
								}, {
									"case":	66,
									"scores":	[-4.215063615190938]
								}, {
									"case":	67,
									"scores":	[-4.215063615190938]
								}, {
									"case":	68,
									"scores":	[-4.215063615190938]
								}, {
									"case":	69,
									"scores":	[-4.215063615190938]
								}, {
									"case":	70,
									"scores":	[-4.215063615190938]
								}, {
									"case":	71,
									"scores":	[-4.215063615190938]
								}, {
									"case":	72,
									"scores":	[-4.215063615190938]
								}, {
									"case":	73,
									"scores":	[-4.215063615190938]
								}, {
									"case":	74,
									"scores":	[-4.215063615190938]
								}, {
									"case":	75,
									"scores":	[-4.215063615190938]
								}, {
									"case":	76,
									"scores":	[-4.215063615190938]
								}, {
									"case":	77,
									"scores":	[-4.215063615190938]
								}, {
									"case":	78,
									"scores":	[-4.215063615190938]
								}, {
									"case":	79,
									"scores":	[-4.215063615190938]
								}, {
									"case":	80,
									"scores":	[-4.215063615190938]
								}, {
									"case":	81,
									"scores":	[-4.215063615190938]
								}, {
									"case":	82,
									"scores":	[-4.215063615190938]
								}, {
									"case":	83,
									"scores":	[-4.215063615190938]
								}, {
									"case":	84,
									"scores":	[-4.215063615190938]
								}, {
									"case":	85,
									"scores":	[-4.215063615190938]
								}, {
									"case":	86,
									"scores":	[-4.215063615190938]
								}, {
									"case":	87,
									"scores":	[-4.215063615190938]
								}, {
									"case":	88,
									"scores":	[-4.215063615190938]
								}, {
									"case":	89,
									"scores":	[-4.215063615190938]
								}, {
									"case":	90,
									"scores":	[-4.215063615190938]
								}, {
									"case":	91,
									"scores":	[-4.215063615190938]
								}, {
									"case":	92,
									"scores":	[-4.215063615190938]
								}, {
									"case":	93,
									"scores":	[-4.215063615190938]
								}, {
									"case":	94,
									"scores":	[-4.215063615190938]
								}, {
									"case":	95,
									"scores":	[-4.215063615190938]
								}, {
									"case":	96,
									"scores":	[-4.215063615190938]
								}, {
									"case":	97,
									"scores":	[-4.215063615190938]
								}, {
									"case":	98,
									"scores":	[-4.215063615190938]
								}, {
									"case":	99,
									"scores":	[-4.215063615190938]
								}, {
									"case":	100,
									"scores":	[-4.215063615190938]
								}, {
									"case":	101,
									"scores":	[-4.215063615190938]
								}, {
									"case":	102,
									"scores":	[-4.215063615190938]
								}, {
									"case":	103,
									"scores":	[-4.215063615190938]
								}, {
									"case":	104,
									"scores":	[-4.215063615190938]
								}, {
									"case":	105,
									"scores":	[-4.215063615190938]
								}, {
									"case":	106,
									"scores":	[-4.215063615190938]
								}, {
									"case":	107,
									"scores":	[-4.215063615190938]
								}, {
									"case":	108,
									"scores":	[-4.215063615190938]
								}, {
									"case":	109,
									"scores":	[-4.215063615190938]
								}, {
									"case":	110,
									"scores":	[-4.215063615190938]
								}, {
									"case":	111,
									"scores":	[-4.215063615190938]
								}, {
									"case":	112,
									"scores":	[-4.215063615190938]
								}, {
									"case":	113,
									"scores":	[-4.215063615190938]
								}, {
									"case":	114,
									"scores":	[-4.215063615190938]
								}, {
									"case":	115,
									"scores":	[-4.215063615190938]
								}, {
									"case":	116,
									"scores":	[-4.215063615190938]
								}, {
									"case":	117,
									"scores":	[-4.215063615190938]
								}, {
									"case":	118,
									"scores":	[-4.215063615190938]
								}, {
									"case":	119,
									"scores":	[-4.215063615190938]
								}, {
									"case":	120,
									"scores":	[-4.215063615190938]
								}, {
									"case":	121,
									"scores":	[-4.215063615190938]
								}, {
									"case":	122,
									"scores":	[-4.215063615190938]
								}, {
									"case":	123,
									"scores":	[-4.215063615190938]
								}, {
									"case":	124,
									"scores":	[-4.215063615190938]
								}, {
									"case":	125,
									"scores":	[-4.215063615190938]
								}, {
									"case":	126,
									"scores":	[-4.215063615190938]
								}, {
									"case":	127,
									"scores":	[-4.215063615190938]
								}, {
									"case":	128,
									"scores":	[-4.215063615190938]
								}, {
									"case":	129,
									"scores":	[-4.215063615190938]
								}, {
									"case":	130,
									"scores":	[-4.215063615190938]
								}, {
									"case":	131,
									"scores":	[-4.215063615190938]
								}, {
									"case":	132,
									"scores":	[-4.215063615190938]
								}, {
									"case":	133,
									"scores":	[-4.215063615190938]
								}, {
									"case":	134,
									"scores":	[-4.215063615190938]
								}, {
									"case":	135,
									"scores":	[-4.215063615190938]
								}, {
									"case":	136,
									"scores":	[-4.215063615190938]
								}, {
									"case":	137,
									"scores":	[-4.215063615190938]
								}, {
									"case":	138,
									"scores":	[-4.215063615190938]
								}, {
									"case":	139,
									"scores":	[-4.215063615190938]
								}, {
									"case":	140,
									"scores":	[-4.215063615190938]
								}, {
									"case":	141,
									"scores":	[-4.215063615190938]
								}, {
									"case":	142,
									"scores":	[-4.215063615190938]
								}, {
									"case":	143,
									"scores":	[-4.215063615190938]
								}, {
									"case":	144,
									"scores":	[-4.215063615190938]
								}, {
									"case":	145,
									"scores":	[-4.215063615190938]
								}, {
									"case":	146,
									"scores":	[-4.215063615190938]
								}, {
									"case":	147,
									"scores":	[-4.215063615190938]
								}, {
									"case":	148,
									"scores":	[-4.215063615190938]
								}, {
									"case":	149,
									"scores":	[-4.215063615190938]
								}, {
									"case":	150,
									"scores":	[-4.215063615190938]
								}, {
									"case":	151,
									"scores":	[-4.215063615190938]
								}, {
									"case":	152,
									"scores":	[-4.215063615190938]
								}, {
									"case":	153,
									"scores":	[-4.215063615190938]
								}, {
									"case":	154,
									"scores":	[-4.215063615190938]
								}, {
									"case":	155,
									"scores":	[-4.215063615190938]
								}, {
									"case":	156,
									"scores":	[-4.215063615190938]
								}, {
									"case":	157,
									"scores":	[-4.215063615190938]
								}, {
									"case":	158,
									"scores":	[-4.215063615190938]
								}, {
									"case":	159,
									"scores":	[-4.215063615190938]
								}, {
									"case":	160,
									"scores":	[-4.215063615190938]
								}, {
									"case":	161,
									"scores":	[-4.215063615190938]
								}, {
									"case":	162,
									"scores":	[-4.215063615190938]
								}, {
									"case":	163,
									"scores":	[-4.215063615190938]
								}, {
									"case":	164,
									"scores":	[-4.215063615190938]
								}, {
									"case":	165,
									"scores":	[-4.215063615190938]
								}, {
									"case":	166,
									"scores":	[-4.215063615190938]
								}, {
									"case":	167,
									"scores":	[-4.215063615190938]
								}, {
									"case":	168,
									"scores":	[-4.215063615190938]
								}, {
									"case":	169,
									"scores":	[-4.215063615190938]
								}, {
									"case":	170,
									"scores":	[-4.215063615190938]
								}, {
									"case":	171,
									"scores":	[-4.215063615190938]
								}, {
									"case":	172,
									"scores":	[-4.215063615190938]
								}, {
									"case":	173,
									"scores":	[-4.215063615190938]
								}, {
									"case":	174,
									"scores":	[-4.215063615190938]
								}, {
									"case":	175,
									"scores":	[-4.215063615190938]
								}, {
									"case":	176,
									"scores":	[-4.215063615190938]
								}, {
									"case":	177,
									"scores":	[-4.215063615190938]
								}, {
									"case":	178,
									"scores":	[-4.215063615190938]
								}, {
									"case":	179,
									"scores":	[-4.215063615190938]
								}, {
									"case":	180,
									"scores":	[-4.215063615190938]
								}, {
									"case":	181,
									"scores":	[-4.215063615190938]
								}, {
									"case":	182,
									"scores":	[-4.215063615190938]
								}, {
									"case":	183,
									"scores":	[-4.215063615190938]
								}, {
									"case":	184,
									"scores":	[-4.215063615190938]
								}, {
									"case":	185,
									"scores":	[-4.215063615190938]
								}, {
									"case":	186,
									"scores":	[-4.215063615190938]
								}, {
									"case":	187,
									"scores":	[-4.215063615190938]
								}, {
									"case":	188,
									"scores":	[-4.215063615190938]
								}, {
									"case":	189,
									"scores":	[-4.215063615190938]
								}, {
									"case":	190,
									"scores":	[-4.215063615190938]
								}, {
									"case":	191,
									"scores":	[-4.215063615190938]
								}, {
									"case":	192,
									"scores":	[-4.215063615190938]
								}, {
									"case":	193,
									"scores":	[-4.215063615190938]
								}, {
									"case":	194,
									"scores":	[-4.215063615190938]
								}, {
									"case":	195,
									"scores":	[-4.215063615190938]
								}, {
									"case":	196,
									"scores":	[-4.215063615190938]
								}, {
									"case":	197,
									"scores":	[-4.215063615190938]
								}, {
									"case":	198,
									"scores":	[-4.215063615190938]
								}, {
									"case":	199,
									"scores":	[-4.215063615190938]
								}, {
									"case":	200,
									"scores":	[-4.215063615190938]
								}, {
									"case":	201,
									"scores":	[-4.215063615190938]
								}, {
									"case":	202,
									"scores":	[-4.215063615190938]
								}, {
									"case":	203,
									"scores":	[-4.215063615190938]
								}, {
									"case":	204,
									"scores":	[-4.215063615190938]
								}, {
									"case":	205,
									"scores":	[-4.215063615190938]
								}, {
									"case":	206,
									"scores":	[-4.215063615190938]
								}, {
									"case":	207,
									"scores":	[-4.215063615190938]
								}, {
									"case":	208,
									"scores":	[-4.215063615190938]
								}, {
									"case":	209,
									"scores":	[-4.215063615190938]
								}, {
									"case":	210,
									"scores":	[-4.215063615190938]
								}, {
									"case":	211,
									"scores":	[-4.215063615190938]
								}, {
									"case":	212,
									"scores":	[-4.215063615190938]
								}, {
									"case":	213,
									"scores":	[-4.215063615190938]
								}, {
									"case":	214,
									"scores":	[-4.215063615190938]
								}, {
									"case":	215,
									"scores":	[-4.215063615190938]
								}, {
									"case":	216,
									"scores":	[-4.215063615190938]
								}, {
									"case":	217,
									"scores":	[-4.215063615190938]
								}, {
									"case":	218,
									"scores":	[-4.215063615190938]
								}, {
									"case":	219,
									"scores":	[-4.215063615190938]
								}, {
									"case":	220,
									"scores":	[-4.215063615190938]
								}, {
									"case":	221,
									"scores":	[-4.215063615190938]
								}, {
									"case":	222,
									"scores":	[-4.215063615190938]
								}, {
									"case":	223,
									"scores":	[-4.215063615190938]
								}, {
									"case":	224,
									"scores":	[-4.215063615190938]
								}, {
									"case":	225,
									"scores":	[-4.215063615190938]
								}, {
									"case":	226,
									"scores":	[-4.215063615190938]
								}, {
									"case":	227,
									"scores":	[-4.215063615190938]
								}, {
									"case":	228,
									"scores":	[-4.215063615190938]
								}, {
									"case":	229,
									"scores":	[-4.215063615190938]
								}, {
									"case":	230,
									"scores":	[-4.215063615190938]
								}, {
									"case":	231,
									"scores":	[-4.215063615190938]
								}, {
									"case":	232,
									"scores":	[-4.215063615190938]
								}, {
									"case":	233,
									"scores":	[-4.215063615190938]
								}, {
									"case":	234,
									"scores":	[-4.215063615190938]
								}, {
									"case":	235,
									"scores":	[-4.215063615190938]
								}, {
									"case":	236,
									"scores":	[-6.8155632261909371, -7.1897577649909383, -7.1491261449909373, -4.7770673311909375, -6.8650381249909369, -7.3960449851909384, -7.3960449851909384, -7.3960449851909384]
								}]
						}, {
							"switch":	43,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3496,
							"begin_column":	2,
							"end_line":	3496,
							"end_column":	24,
							"patch_codes":	["if (!__is_neg(\"\", \"L3496\", 8, &(retval), sizeof (retval), &(member), sizeof (member), &(obj), sizeof (obj), &(value), sizeof (value), &(object), sizeof (object), &(zval_used_for_init.refcount__gc), sizeof (zval_used_for_init.refcount__gc), &(zval_used_for_init.type), sizeof (zval_used_for_init.type), &(zval_used_for_init.is_ref__gc), sizeof (zval_used_for_init.is_ref__gc)))\n    do {\n        (retval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(retval))->u.buffered = ((void *)0);\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.1073338561909383, -5.7716076956909381, -5.1877038756909375, -3.6779144251909379, -5.6108301851909381, -5.0834360951909376, -5.0834360951909376, -5.0834360951909376]
								}]
						}]
				}, {
					"line":	3496,
					"switches":	[{
							"switch":	44,
							"types":	[[], [], [], [], [236], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [], [], [], [], [], []],
							"begin_line":	3497,
							"begin_column":	0,
							"end_line":	3497,
							"end_column":	0,
							"patch_codes":	["memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3497\", 8, &(retval), sizeof (retval), &(value), sizeof (value), &(member), sizeof (member), &(obj), sizeof (obj), &(object), sizeof (object), &(zval_used_for_init.refcount__gc), sizeof (zval_used_for_init.refcount__gc), &(zval_used_for_init.type), sizeof (zval_used_for_init.type), &(zval_used_for_init.is_ref__gc), sizeof (zval_used_for_init.is_ref__gc)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.15445549323838]
								}, {
									"case":	2,
									"scores":	[-4.15445549323838]
								}, {
									"case":	3,
									"scores":	[-4.15445549323838]
								}, {
									"case":	4,
									"scores":	[-4.15445549323838]
								}, {
									"case":	5,
									"scores":	[-4.15445549323838]
								}, {
									"case":	6,
									"scores":	[-4.15445549323838]
								}, {
									"case":	7,
									"scores":	[-4.15445549323838]
								}, {
									"case":	8,
									"scores":	[-4.15445549323838]
								}, {
									"case":	9,
									"scores":	[-4.15445549323838]
								}, {
									"case":	10,
									"scores":	[-4.15445549323838]
								}, {
									"case":	11,
									"scores":	[-4.15445549323838]
								}, {
									"case":	12,
									"scores":	[-4.15445549323838]
								}, {
									"case":	13,
									"scores":	[-4.15445549323838]
								}, {
									"case":	14,
									"scores":	[-4.15445549323838]
								}, {
									"case":	15,
									"scores":	[-4.15445549323838]
								}, {
									"case":	16,
									"scores":	[-4.15445549323838]
								}, {
									"case":	17,
									"scores":	[-4.15445549323838]
								}, {
									"case":	18,
									"scores":	[-4.15445549323838]
								}, {
									"case":	19,
									"scores":	[-4.15445549323838]
								}, {
									"case":	20,
									"scores":	[-4.15445549323838]
								}, {
									"case":	21,
									"scores":	[-4.15445549323838]
								}, {
									"case":	22,
									"scores":	[-4.15445549323838]
								}, {
									"case":	23,
									"scores":	[-4.15445549323838]
								}, {
									"case":	24,
									"scores":	[-4.15445549323838]
								}, {
									"case":	25,
									"scores":	[-4.15445549323838]
								}, {
									"case":	26,
									"scores":	[-4.15445549323838]
								}, {
									"case":	27,
									"scores":	[-4.15445549323838]
								}, {
									"case":	28,
									"scores":	[-4.15445549323838]
								}, {
									"case":	29,
									"scores":	[-4.15445549323838]
								}, {
									"case":	30,
									"scores":	[-4.15445549323838]
								}, {
									"case":	31,
									"scores":	[-4.15445549323838]
								}, {
									"case":	32,
									"scores":	[-4.15445549323838]
								}, {
									"case":	33,
									"scores":	[-4.15445549323838]
								}, {
									"case":	34,
									"scores":	[-4.15445549323838]
								}, {
									"case":	35,
									"scores":	[-4.15445549323838]
								}, {
									"case":	36,
									"scores":	[-4.15445549323838]
								}, {
									"case":	37,
									"scores":	[-4.15445549323838]
								}, {
									"case":	38,
									"scores":	[-4.15445549323838]
								}, {
									"case":	39,
									"scores":	[-4.15445549323838]
								}, {
									"case":	40,
									"scores":	[-4.15445549323838]
								}, {
									"case":	41,
									"scores":	[-4.15445549323838]
								}, {
									"case":	42,
									"scores":	[-4.15445549323838]
								}, {
									"case":	43,
									"scores":	[-4.15445549323838]
								}, {
									"case":	44,
									"scores":	[-4.15445549323838]
								}, {
									"case":	45,
									"scores":	[-4.15445549323838]
								}, {
									"case":	46,
									"scores":	[-4.15445549323838]
								}, {
									"case":	47,
									"scores":	[-4.15445549323838]
								}, {
									"case":	48,
									"scores":	[-4.15445549323838]
								}, {
									"case":	49,
									"scores":	[-4.15445549323838]
								}, {
									"case":	50,
									"scores":	[-4.15445549323838]
								}, {
									"case":	51,
									"scores":	[-4.15445549323838]
								}, {
									"case":	52,
									"scores":	[-4.15445549323838]
								}, {
									"case":	53,
									"scores":	[-4.15445549323838]
								}, {
									"case":	54,
									"scores":	[-4.15445549323838]
								}, {
									"case":	55,
									"scores":	[-4.15445549323838]
								}, {
									"case":	56,
									"scores":	[-4.15445549323838]
								}, {
									"case":	57,
									"scores":	[-4.15445549323838]
								}, {
									"case":	58,
									"scores":	[-4.15445549323838]
								}, {
									"case":	59,
									"scores":	[-4.15445549323838]
								}, {
									"case":	60,
									"scores":	[-4.15445549323838]
								}, {
									"case":	61,
									"scores":	[-4.15445549323838]
								}, {
									"case":	62,
									"scores":	[-4.15445549323838]
								}, {
									"case":	63,
									"scores":	[-4.15445549323838]
								}, {
									"case":	64,
									"scores":	[-4.15445549323838]
								}, {
									"case":	65,
									"scores":	[-4.15445549323838]
								}, {
									"case":	66,
									"scores":	[-4.15445549323838]
								}, {
									"case":	67,
									"scores":	[-4.15445549323838]
								}, {
									"case":	68,
									"scores":	[-4.15445549323838]
								}, {
									"case":	69,
									"scores":	[-4.15445549323838]
								}, {
									"case":	70,
									"scores":	[-4.15445549323838]
								}, {
									"case":	71,
									"scores":	[-4.15445549323838]
								}, {
									"case":	72,
									"scores":	[-4.15445549323838]
								}, {
									"case":	73,
									"scores":	[-4.15445549323838]
								}, {
									"case":	74,
									"scores":	[-4.15445549323838]
								}, {
									"case":	75,
									"scores":	[-4.15445549323838]
								}, {
									"case":	76,
									"scores":	[-4.15445549323838]
								}, {
									"case":	77,
									"scores":	[-4.15445549323838]
								}, {
									"case":	78,
									"scores":	[-4.15445549323838]
								}, {
									"case":	79,
									"scores":	[-4.15445549323838]
								}, {
									"case":	80,
									"scores":	[-4.15445549323838]
								}, {
									"case":	81,
									"scores":	[-4.15445549323838]
								}, {
									"case":	82,
									"scores":	[-4.15445549323838]
								}, {
									"case":	83,
									"scores":	[-4.15445549323838]
								}, {
									"case":	84,
									"scores":	[-4.15445549323838]
								}, {
									"case":	85,
									"scores":	[-4.15445549323838]
								}, {
									"case":	86,
									"scores":	[-4.15445549323838]
								}, {
									"case":	87,
									"scores":	[-4.15445549323838]
								}, {
									"case":	88,
									"scores":	[-4.15445549323838]
								}, {
									"case":	89,
									"scores":	[-4.15445549323838]
								}, {
									"case":	90,
									"scores":	[-4.15445549323838]
								}, {
									"case":	91,
									"scores":	[-4.15445549323838]
								}, {
									"case":	92,
									"scores":	[-4.15445549323838]
								}, {
									"case":	93,
									"scores":	[-4.15445549323838]
								}, {
									"case":	94,
									"scores":	[-4.15445549323838]
								}, {
									"case":	95,
									"scores":	[-4.15445549323838]
								}, {
									"case":	96,
									"scores":	[-4.15445549323838]
								}, {
									"case":	97,
									"scores":	[-4.15445549323838]
								}, {
									"case":	98,
									"scores":	[-4.15445549323838]
								}, {
									"case":	99,
									"scores":	[-4.15445549323838]
								}, {
									"case":	100,
									"scores":	[-4.15445549323838]
								}, {
									"case":	101,
									"scores":	[-4.15445549323838]
								}, {
									"case":	102,
									"scores":	[-4.15445549323838]
								}, {
									"case":	103,
									"scores":	[-4.15445549323838]
								}, {
									"case":	104,
									"scores":	[-4.15445549323838]
								}, {
									"case":	105,
									"scores":	[-4.15445549323838]
								}, {
									"case":	106,
									"scores":	[-4.15445549323838]
								}, {
									"case":	107,
									"scores":	[-4.15445549323838]
								}, {
									"case":	108,
									"scores":	[-4.15445549323838]
								}, {
									"case":	109,
									"scores":	[-4.15445549323838]
								}, {
									"case":	110,
									"scores":	[-4.15445549323838]
								}, {
									"case":	111,
									"scores":	[-4.15445549323838]
								}, {
									"case":	112,
									"scores":	[-4.15445549323838]
								}, {
									"case":	113,
									"scores":	[-4.15445549323838]
								}, {
									"case":	114,
									"scores":	[-4.15445549323838]
								}, {
									"case":	115,
									"scores":	[-4.15445549323838]
								}, {
									"case":	116,
									"scores":	[-4.15445549323838]
								}, {
									"case":	117,
									"scores":	[-4.15445549323838]
								}, {
									"case":	118,
									"scores":	[-4.15445549323838]
								}, {
									"case":	119,
									"scores":	[-4.15445549323838]
								}, {
									"case":	120,
									"scores":	[-4.15445549323838]
								}, {
									"case":	121,
									"scores":	[-4.15445549323838]
								}, {
									"case":	122,
									"scores":	[-4.15445549323838]
								}, {
									"case":	123,
									"scores":	[-4.15445549323838]
								}, {
									"case":	124,
									"scores":	[-4.15445549323838]
								}, {
									"case":	125,
									"scores":	[-4.15445549323838]
								}, {
									"case":	126,
									"scores":	[-4.15445549323838]
								}, {
									"case":	127,
									"scores":	[-4.15445549323838]
								}, {
									"case":	128,
									"scores":	[-4.15445549323838]
								}, {
									"case":	129,
									"scores":	[-4.15445549323838]
								}, {
									"case":	130,
									"scores":	[-4.15445549323838]
								}, {
									"case":	131,
									"scores":	[-4.15445549323838]
								}, {
									"case":	132,
									"scores":	[-4.15445549323838]
								}, {
									"case":	133,
									"scores":	[-4.15445549323838]
								}, {
									"case":	134,
									"scores":	[-4.15445549323838]
								}, {
									"case":	135,
									"scores":	[-4.15445549323838]
								}, {
									"case":	136,
									"scores":	[-4.15445549323838]
								}, {
									"case":	137,
									"scores":	[-4.15445549323838]
								}, {
									"case":	138,
									"scores":	[-4.15445549323838]
								}, {
									"case":	139,
									"scores":	[-4.15445549323838]
								}, {
									"case":	140,
									"scores":	[-4.15445549323838]
								}, {
									"case":	141,
									"scores":	[-4.15445549323838]
								}, {
									"case":	142,
									"scores":	[-4.15445549323838]
								}, {
									"case":	143,
									"scores":	[-4.15445549323838]
								}, {
									"case":	144,
									"scores":	[-4.15445549323838]
								}, {
									"case":	145,
									"scores":	[-4.15445549323838]
								}, {
									"case":	146,
									"scores":	[-4.15445549323838]
								}, {
									"case":	147,
									"scores":	[-4.15445549323838]
								}, {
									"case":	148,
									"scores":	[-4.15445549323838]
								}, {
									"case":	149,
									"scores":	[-4.15445549323838]
								}, {
									"case":	150,
									"scores":	[-4.15445549323838]
								}, {
									"case":	151,
									"scores":	[-4.15445549323838]
								}, {
									"case":	152,
									"scores":	[-4.15445549323838]
								}, {
									"case":	153,
									"scores":	[-4.15445549323838]
								}, {
									"case":	154,
									"scores":	[-4.15445549323838]
								}, {
									"case":	155,
									"scores":	[-4.15445549323838]
								}, {
									"case":	156,
									"scores":	[-4.15445549323838]
								}, {
									"case":	157,
									"scores":	[-4.15445549323838]
								}, {
									"case":	158,
									"scores":	[-4.15445549323838]
								}, {
									"case":	159,
									"scores":	[-4.15445549323838]
								}, {
									"case":	160,
									"scores":	[-4.15445549323838]
								}, {
									"case":	161,
									"scores":	[-4.15445549323838]
								}, {
									"case":	162,
									"scores":	[-4.15445549323838]
								}, {
									"case":	163,
									"scores":	[-4.15445549323838]
								}, {
									"case":	164,
									"scores":	[-4.15445549323838]
								}, {
									"case":	165,
									"scores":	[-4.15445549323838]
								}, {
									"case":	166,
									"scores":	[-4.15445549323838]
								}, {
									"case":	167,
									"scores":	[-4.15445549323838]
								}, {
									"case":	168,
									"scores":	[-4.15445549323838]
								}, {
									"case":	169,
									"scores":	[-4.15445549323838]
								}, {
									"case":	170,
									"scores":	[-4.15445549323838]
								}, {
									"case":	171,
									"scores":	[-4.15445549323838]
								}, {
									"case":	172,
									"scores":	[-4.15445549323838]
								}, {
									"case":	173,
									"scores":	[-4.15445549323838]
								}, {
									"case":	174,
									"scores":	[-4.15445549323838]
								}, {
									"case":	175,
									"scores":	[-4.15445549323838]
								}, {
									"case":	176,
									"scores":	[-4.15445549323838]
								}, {
									"case":	177,
									"scores":	[-4.15445549323838]
								}, {
									"case":	178,
									"scores":	[-4.15445549323838]
								}, {
									"case":	179,
									"scores":	[-4.15445549323838]
								}, {
									"case":	180,
									"scores":	[-4.15445549323838]
								}, {
									"case":	181,
									"scores":	[-4.15445549323838]
								}, {
									"case":	182,
									"scores":	[-4.15445549323838]
								}, {
									"case":	183,
									"scores":	[-4.15445549323838]
								}, {
									"case":	184,
									"scores":	[-4.15445549323838]
								}, {
									"case":	185,
									"scores":	[-4.15445549323838]
								}, {
									"case":	186,
									"scores":	[-4.15445549323838]
								}, {
									"case":	187,
									"scores":	[-4.15445549323838]
								}, {
									"case":	188,
									"scores":	[-4.15445549323838]
								}, {
									"case":	189,
									"scores":	[-4.15445549323838]
								}, {
									"case":	190,
									"scores":	[-4.15445549323838]
								}, {
									"case":	191,
									"scores":	[-4.15445549323838]
								}, {
									"case":	192,
									"scores":	[-4.15445549323838]
								}, {
									"case":	193,
									"scores":	[-4.15445549323838]
								}, {
									"case":	194,
									"scores":	[-4.15445549323838]
								}, {
									"case":	195,
									"scores":	[-4.15445549323838]
								}, {
									"case":	196,
									"scores":	[-4.15445549323838]
								}, {
									"case":	197,
									"scores":	[-4.15445549323838]
								}, {
									"case":	198,
									"scores":	[-4.15445549323838]
								}, {
									"case":	199,
									"scores":	[-4.15445549323838]
								}, {
									"case":	200,
									"scores":	[-4.15445549323838]
								}, {
									"case":	201,
									"scores":	[-4.15445549323838]
								}, {
									"case":	202,
									"scores":	[-4.15445549323838]
								}, {
									"case":	203,
									"scores":	[-4.15445549323838]
								}, {
									"case":	204,
									"scores":	[-4.15445549323838]
								}, {
									"case":	205,
									"scores":	[-4.15445549323838]
								}, {
									"case":	206,
									"scores":	[-4.15445549323838]
								}, {
									"case":	207,
									"scores":	[-4.15445549323838]
								}, {
									"case":	208,
									"scores":	[-4.15445549323838]
								}, {
									"case":	209,
									"scores":	[-4.15445549323838]
								}, {
									"case":	210,
									"scores":	[-4.15445549323838]
								}, {
									"case":	211,
									"scores":	[-4.15445549323838]
								}, {
									"case":	212,
									"scores":	[-4.15445549323838]
								}, {
									"case":	213,
									"scores":	[-4.15445549323838]
								}, {
									"case":	214,
									"scores":	[-4.15445549323838]
								}, {
									"case":	215,
									"scores":	[-4.15445549323838]
								}, {
									"case":	216,
									"scores":	[-4.15445549323838]
								}, {
									"case":	217,
									"scores":	[-4.15445549323838]
								}, {
									"case":	218,
									"scores":	[-4.15445549323838]
								}, {
									"case":	219,
									"scores":	[-4.15445549323838]
								}, {
									"case":	220,
									"scores":	[-4.15445549323838]
								}, {
									"case":	221,
									"scores":	[-4.15445549323838]
								}, {
									"case":	222,
									"scores":	[-4.15445549323838]
								}, {
									"case":	223,
									"scores":	[-4.15445549323838]
								}, {
									"case":	224,
									"scores":	[-4.15445549323838]
								}, {
									"case":	225,
									"scores":	[-4.15445549323838]
								}, {
									"case":	226,
									"scores":	[-4.15445549323838]
								}, {
									"case":	227,
									"scores":	[-4.15445549323838]
								}, {
									"case":	228,
									"scores":	[-4.15445549323838]
								}, {
									"case":	229,
									"scores":	[-4.15445549323838]
								}, {
									"case":	230,
									"scores":	[-4.15445549323838]
								}, {
									"case":	231,
									"scores":	[-4.15445549323838]
								}, {
									"case":	232,
									"scores":	[-4.15445549323838]
								}, {
									"case":	233,
									"scores":	[-4.15445549323838]
								}, {
									"case":	234,
									"scores":	[-4.15445549323838]
								}, {
									"case":	235,
									"scores":	[-4.15445549323838]
								}, {
									"case":	236,
									"scores":	[-7.32022487563838, -8.16407055063838, -9.24994686443838, -8.06900846443838, -8.10610886443838, -8.63711572463838, -8.63711572463838, -8.63711572463838]
								}]
						}, {
							"switch":	45,
							"types":	[[], [], [1], [], [], [], [1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652], [], [1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214], [], [], [1215]],
							"begin_line":	3497,
							"begin_column":	2,
							"end_line":	3497,
							"end_column":	28,
							"patch_codes":	["if (!__is_neg(\"\", \"L3497\", 8, &(retval), sizeof (retval), &(value), sizeof (value), &(member), sizeof (member), &(obj), sizeof (obj), &(object), sizeof (object), &(zval_used_for_init.refcount__gc), sizeof (zval_used_for_init.refcount__gc), &(zval_used_for_init.type), sizeof (zval_used_for_init.type), &(zval_used_for_init.is_ref__gc), sizeof (zval_used_for_init.is_ref__gc)))\n    zval_set_refcount_p(retval, 0);\n", "_IO_padn(retval, 0, -1)", "_IO_padn(retval, 0, 0)", "_IO_padn(retval, 0, 1)", "_IO_padn(retval, 0, 6)", "_IO_seekpos(retval, 0, -1)", "_IO_seekpos(retval, 0, 0)", "_IO_seekpos(retval, 0, 1)", "_IO_seekpos(retval, 0, 6)", "_IO_seekpos(retval, 0, le_index_ptr)", "_IO_seekpos(retval, 0, php_date_global_timezone_db_enabled)", "_IO_seekpos(retval, 0, type)", "_IO_sgetn(retval, 0, -1)", "_IO_sgetn(retval, 0, 0)", "_IO_sgetn(retval, 0, 1)", "_IO_sgetn(retval, 0, 6)", "_IO_vfprintf(retval, 0, 0)", "__assert(retval, 0, -1)", "__assert(retval, 0, 0)", "__assert(retval, 0, 1)", "__assert(retval, 0, 6)", "__assert(retval, 0, le_index_ptr)", "__assert(retval, 0, php_date_global_timezone_db_enabled)", "__assert(retval, 0, type)", "__mbrlen(retval, 0, 0)", "__stpncpy(retval, 0, -1)", "__stpncpy(retval, 0, 0)", "__stpncpy(retval, 0, 1)", "__stpncpy(retval, 0, 6)", "__strtok_r(retval, 0, 0)", "__trident_output(retval, 0, -1)", "__trident_output(retval, 0, 0)", "__trident_output(retval, 0, 1)", "__trident_output(retval, 0, 6)", "__trident_output(retval, 0, le_index_ptr)", "__trident_output(retval, 0, php_date_global_timezone_db_enabled)", "__trident_output(retval, 0, type)", "_erealloc(retval, 0, -1)", "_erealloc(retval, 0, 0)", "_erealloc(retval, 0, 1)", "_erealloc(retval, 0, 6)", "_erealloc(retval, 0, le_index_ptr)", "_erealloc(retval, 0, php_date_global_timezone_db_enabled)", "_erealloc(retval, 0, type)", "_object_and_properties_init(retval, 0, 0)", "_php_glob_stream_get_path(retval, 0, 0)", "_php_glob_stream_get_pattern(retval, 0, 0)", "_php_math_basetozval(retval, 0, 0)", "_php_math_basetozval(retval, 0, member)", "_php_math_basetozval(retval, 0, object)", "_php_math_basetozval(retval, 0, retval)", "_php_stream_copy_to_stream(retval, 0, -1)", "_php_stream_copy_to_stream(retval, 0, 0)", "_php_stream_copy_to_stream(retval, 0, 1)", "_php_stream_copy_to_stream(retval, 0, 6)", "_php_stream_filter_alloc(retval, 0, -1)", "_php_stream_filter_alloc(retval, 0, 0)", "_php_stream_filter_alloc(retval, 0, 1)", "_php_stream_filter_alloc(retval, 0, 6)", "_php_stream_filter_alloc(retval, 0, le_index_ptr)", "_php_stream_filter_alloc(retval, 0, php_date_global_timezone_db_enabled)", "_php_stream_filter_alloc(retval, 0, type)", "_php_stream_fopen_temporary_file(retval, 0, 0)", "_php_stream_fopen_temporary_file(retval, 0, environ)", "_php_stream_make_seekable(retval, 0, -1)", "_php_stream_make_seekable(retval, 0, 0)", "_php_stream_make_seekable(retval, 0, 1)", "_php_stream_make_seekable(retval, 0, 6)", "_php_stream_make_seekable(retval, 0, le_index_ptr)", "_php_stream_make_seekable(retval, 0, php_date_global_timezone_db_enabled)", "_php_stream_make_seekable(retval, 0, type)", "_php_stream_opendir(retval, 0, 0)", "_php_stream_read(retval, 0, -1)", "_php_stream_read(retval, 0, 0)", "_php_stream_read(retval, 0, 1)", "_php_stream_read(retval, 0, 6)", "_php_stream_rmdir(retval, 0, 0)", "_php_stream_seek(retval, 0, -1)", "_php_stream_seek(retval, 0, 0)", "_php_stream_seek(retval, 0, 1)", "_php_stream_seek(retval, 0, 6)", "_php_stream_seek(retval, 0, le_index_ptr)", "_php_stream_seek(retval, 0, php_date_global_timezone_db_enabled)", "_php_stream_seek(retval, 0, type)", "_php_stream_write(retval, 0, -1)", "_php_stream_write(retval, 0, 0)", "_php_stream_write(retval, 0, 1)", "_php_stream_write(retval, 0, 6)", "_zend_mm_realloc(retval, 0, -1)", "_zend_mm_realloc(retval, 0, 0)", "_zend_mm_realloc(retval, 0, 1)", "_zend_mm_realloc(retval, 0, 6)", "add_assoc_function(retval, 0, 0)", "add_assoc_function(retval, 0, php_if_crc32)", "add_assoc_function(retval, 0, php_if_lstat)", "add_assoc_function(retval, 0, php_if_stat)", "add_assoc_function(retval, 0, php_inet_ntop)", "add_assoc_function(retval, 0, php_inet_pton)", "add_assoc_function(retval, 0, zend_std_call_user_call)", "add_assoc_function(retval, 0, zif_abs)", "add_assoc_function(retval, 0, zif_acos)", "add_assoc_function(retval, 0, zif_acosh)", "add_assoc_function(retval, 0, zif_asin)", "add_assoc_function(retval, 0, zif_asinh)", "add_assoc_function(retval, 0, zif_atan)", "add_assoc_function(retval, 0, zif_atan2)", "add_assoc_function(retval, 0, zif_atanh)", "add_assoc_function(retval, 0, zif_base_convert)", "add_assoc_function(retval, 0, zif_bindec)", "add_assoc_function(retval, 0, zif_call_user_func)", "add_assoc_function(retval, 0, zif_call_user_func_array)", "add_assoc_function(retval, 0, zif_call_user_method)", "add_assoc_function(retval, 0, zif_call_user_method_array)", "add_assoc_function(retval, 0, zif_ceil)", "add_assoc_function(retval, 0, zif_checkdate)", "add_assoc_function(retval, 0, zif_chgrp)", "add_assoc_function(retval, 0, zif_chmod)", "add_assoc_function(retval, 0, zif_chown)", "add_assoc_function(retval, 0, zif_clearstatcache)", "add_assoc_function(retval, 0, zif_connection_aborted)", "add_assoc_function(retval, 0, zif_connection_status)", "add_assoc_function(retval, 0, zif_constant)", "add_assoc_function(retval, 0, zif_cos)", "add_assoc_function(retval, 0, zif_cosh)", "add_assoc_function(retval, 0, zif_date)", "add_assoc_function(retval, 0, zif_date_add)", "add_assoc_function(retval, 0, zif_date_create)", "add_assoc_function(retval, 0, zif_date_create_from_format)", "add_assoc_function(retval, 0, zif_date_date_set)", "add_assoc_function(retval, 0, zif_date_default_timezone_get)", "add_assoc_function(retval, 0, zif_date_default_timezone_set)", "add_assoc_function(retval, 0, zif_date_diff)", "add_assoc_function(retval, 0, zif_date_format)", "add_assoc_function(retval, 0, zif_date_get_last_errors)", "add_assoc_function(retval, 0, zif_date_interval_create_from_date_string)", "add_assoc_function(retval, 0, zif_date_interval_format)", "add_assoc_function(retval, 0, zif_date_isodate_set)", "add_assoc_function(retval, 0, zif_date_modify)", "add_assoc_function(retval, 0, zif_date_offset_get)", "add_assoc_function(retval, 0, zif_date_parse)", "add_assoc_function(retval, 0, zif_date_parse_from_format)", "add_assoc_function(retval, 0, zif_date_sub)", "add_assoc_function(retval, 0, zif_date_sun_info)", "add_assoc_function(retval, 0, zif_date_sunrise)", "add_assoc_function(retval, 0, zif_date_sunset)", "add_assoc_function(retval, 0, zif_date_time_set)", "add_assoc_function(retval, 0, zif_date_timestamp_get)", "add_assoc_function(retval, 0, zif_date_timestamp_set)", "add_assoc_function(retval, 0, zif_date_timezone_get)", "add_assoc_function(retval, 0, zif_date_timezone_set)", "add_assoc_function(retval, 0, zif_decbin)", "add_assoc_function(retval, 0, zif_dechex)", "add_assoc_function(retval, 0, zif_decoct)", "add_assoc_function(retval, 0, zif_deg2rad)", "add_assoc_function(retval, 0, zif_disk_free_space)", "add_assoc_function(retval, 0, zif_disk_total_space)", "add_assoc_function(retval, 0, zif_display_disabled_class)", "add_assoc_function(retval, 0, zif_display_disabled_function)", "add_assoc_function(retval, 0, zif_error_get_last)", "add_assoc_function(retval, 0, zif_error_log)", "add_assoc_function(retval, 0, zif_exp)", "add_assoc_function(retval, 0, zif_expm1)", "add_assoc_function(retval, 0, zif_file_exists)", "add_assoc_function(retval, 0, zif_fileatime)", "add_assoc_function(retval, 0, zif_filectime)", "add_assoc_function(retval, 0, zif_filegroup)", "add_assoc_function(retval, 0, zif_fileinode)", "add_assoc_function(retval, 0, zif_filemtime)", "add_assoc_function(retval, 0, zif_fileowner)", "add_assoc_function(retval, 0, zif_fileperms)", "add_assoc_function(retval, 0, zif_filesize)", "add_assoc_function(retval, 0, zif_filetype)", "add_assoc_function(retval, 0, zif_floor)", "add_assoc_function(retval, 0, zif_flush)", "add_assoc_function(retval, 0, zif_fmod)", "add_assoc_function(retval, 0, zif_forward_static_call)", "add_assoc_function(retval, 0, zif_forward_static_call_array)", "add_assoc_function(retval, 0, zif_fprintf)", "add_assoc_function(retval, 0, zif_get_cfg_var)", "add_assoc_function(retval, 0, zif_get_current_user)", "add_assoc_function(retval, 0, zif_get_include_path)", "add_assoc_function(retval, 0, zif_get_magic_quotes_gpc)", "add_assoc_function(retval, 0, zif_get_magic_quotes_runtime)", "add_assoc_function(retval, 0, zif_getdate)", "add_assoc_function(retval, 0, zif_getenv)", "add_assoc_function(retval, 0, zif_getopt)", "add_assoc_function(retval, 0, zif_getprotobyname)", "add_assoc_function(retval, 0, zif_getprotobynumber)", "add_assoc_function(retval, 0, zif_getrandmax)", "add_assoc_function(retval, 0, zif_getservbyname)", "add_assoc_function(retval, 0, zif_getservbyport)", "add_assoc_function(retval, 0, zif_gmdate)", "add_assoc_function(retval, 0, zif_gmmktime)", "add_assoc_function(retval, 0, zif_gmstrftime)", "add_assoc_function(retval, 0, zif_hexdec)", "add_assoc_function(retval, 0, zif_highlight_file)", "add_assoc_function(retval, 0, zif_highlight_string)", "add_assoc_function(retval, 0, zif_hypot)", "add_assoc_function(retval, 0, zif_idate)", "add_assoc_function(retval, 0, zif_ignore_user_abort)", "add_assoc_function(retval, 0, zif_ini_get)", "add_assoc_function(retval, 0, zif_ini_get_all)", "add_assoc_function(retval, 0, zif_ini_restore)", "add_assoc_function(retval, 0, zif_ini_set)", "add_assoc_function(retval, 0, zif_ip2long)", "add_assoc_function(retval, 0, zif_is_dir)", "add_assoc_function(retval, 0, zif_is_executable)", "add_assoc_function(retval, 0, zif_is_file)", "add_assoc_function(retval, 0, zif_is_finite)", "add_assoc_function(retval, 0, zif_is_infinite)", "add_assoc_function(retval, 0, zif_is_link)", "add_assoc_function(retval, 0, zif_is_nan)", "add_assoc_function(retval, 0, zif_is_readable)", "add_assoc_function(retval, 0, zif_is_uploaded_file)", "add_assoc_function(retval, 0, zif_is_writable)", "add_assoc_function(retval, 0, zif_lchgrp)", "add_assoc_function(retval, 0, zif_lchown)", "add_assoc_function(retval, 0, zif_localtime)", "add_assoc_function(retval, 0, zif_log)", "add_assoc_function(retval, 0, zif_log10)", "add_assoc_function(retval, 0, zif_log1p)", "add_assoc_function(retval, 0, zif_long2ip)", "add_assoc_function(retval, 0, zif_mktime)", "add_assoc_function(retval, 0, zif_move_uploaded_file)", "add_assoc_function(retval, 0, zif_mt_getrandmax)", "add_assoc_function(retval, 0, zif_mt_rand)", "add_assoc_function(retval, 0, zif_mt_srand)", "add_assoc_function(retval, 0, zif_number_format)", "add_assoc_function(retval, 0, zif_ob_clean)", "add_assoc_function(retval, 0, zif_ob_end_clean)", "add_assoc_function(retval, 0, zif_ob_end_flush)", "add_assoc_function(retval, 0, zif_ob_flush)", "add_assoc_function(retval, 0, zif_ob_get_clean)", "add_assoc_function(retval, 0, zif_ob_get_contents)", "add_assoc_function(retval, 0, zif_ob_get_flush)", "add_assoc_function(retval, 0, zif_ob_get_length)", "add_assoc_function(retval, 0, zif_ob_get_level)", "add_assoc_function(retval, 0, zif_ob_get_status)", "add_assoc_function(retval, 0, zif_ob_implicit_flush)", "add_assoc_function(retval, 0, zif_ob_list_handlers)", "add_assoc_function(retval, 0, zif_ob_start)", "add_assoc_function(retval, 0, zif_octdec)", "add_assoc_function(retval, 0, zif_output_add_rewrite_var)", "add_assoc_function(retval, 0, zif_output_reset_rewrite_vars)", "add_assoc_function(retval, 0, zif_parse_ini_file)", "add_assoc_function(retval, 0, zif_parse_ini_string)", "add_assoc_function(retval, 0, zif_php_egg_logo_guid)", "add_assoc_function(retval, 0, zif_php_ini_loaded_file)", "add_assoc_function(retval, 0, zif_php_ini_scanned_files)", "add_assoc_function(retval, 0, zif_php_logo_guid)", "add_assoc_function(retval, 0, zif_php_real_logo_guid)", "add_assoc_function(retval, 0, zif_php_sapi_name)", "add_assoc_function(retval, 0, zif_php_strip_whitespace)", "add_assoc_function(retval, 0, zif_php_uname)", "add_assoc_function(retval, 0, zif_phpcredits)", "add_assoc_function(retval, 0, zif_phpinfo)", "add_assoc_function(retval, 0, zif_phpversion)", "add_assoc_function(retval, 0, zif_pi)", "add_assoc_function(retval, 0, zif_pow)", "add_assoc_function(retval, 0, zif_print_r)", "add_assoc_function(retval, 0, zif_putenv)", "add_assoc_function(retval, 0, zif_rad2deg)", "add_assoc_function(retval, 0, zif_rand)", "add_assoc_function(retval, 0, zif_realpath_cache_get)", "add_assoc_function(retval, 0, zif_realpath_cache_size)", "add_assoc_function(retval, 0, zif_register_shutdown_function)", "add_assoc_function(retval, 0, zif_register_tick_function)", "add_assoc_function(retval, 0, zif_restore_include_path)", "add_assoc_function(retval, 0, zif_round)", "add_assoc_function(retval, 0, zif_set_include_path)", "add_assoc_function(retval, 0, zif_set_magic_quotes_runtime)", "add_assoc_function(retval, 0, zif_set_time_limit)", "add_assoc_function(retval, 0, zif_sin)", "add_assoc_function(retval, 0, zif_sinh)", "add_assoc_function(retval, 0, zif_sleep)", "add_assoc_function(retval, 0, zif_sqrt)", "add_assoc_function(retval, 0, zif_srand)", "add_assoc_function(retval, 0, zif_str_rot13)", "add_assoc_function(retval, 0, zif_stream_bucket_append)", "add_assoc_function(retval, 0, zif_stream_bucket_make_writeable)", "add_assoc_function(retval, 0, zif_stream_bucket_new)", "add_assoc_function(retval, 0, zif_stream_bucket_prepend)", "add_assoc_function(retval, 0, zif_stream_filter_register)", "add_assoc_function(retval, 0, zif_stream_get_filters)", "add_assoc_function(retval, 0, zif_strftime)", "add_assoc_function(retval, 0, zif_strtotime)", "add_assoc_function(retval, 0, zif_sys_getloadavg)", "add_assoc_function(retval, 0, zif_tan)", "add_assoc_function(retval, 0, zif_tanh)", "add_assoc_function(retval, 0, zif_time)", "add_assoc_function(retval, 0, zif_time_nanosleep)", "add_assoc_function(retval, 0, zif_time_sleep_until)", "add_assoc_function(retval, 0, zif_timezone_abbreviations_list)", "add_assoc_function(retval, 0, zif_timezone_identifiers_list)", "add_assoc_function(retval, 0, zif_timezone_location_get)", "add_assoc_function(retval, 0, zif_timezone_name_from_abbr)", "add_assoc_function(retval, 0, zif_timezone_name_get)", "add_assoc_function(retval, 0, zif_timezone_offset_get)", "add_assoc_function(retval, 0, zif_timezone_open)", "add_assoc_function(retval, 0, zif_timezone_transitions_get)", "add_assoc_function(retval, 0, zif_timezone_version_get)", "add_assoc_function(retval, 0, zif_touch)", "add_assoc_function(retval, 0, zif_unregister_tick_function)", "add_assoc_function(retval, 0, zif_usleep)", "add_assoc_function(retval, 0, zif_version_compare)", "add_assoc_function(retval, 0, zif_vfprintf)", "add_assoc_function(retval, 0, zif_zend_logo_guid)", "add_assoc_function(retval, 0, zim_DateInterval___construct)", "add_assoc_function(retval, 0, zim_DatePeriod___construct)", "add_assoc_function(retval, 0, zim_DateTimeZone___construct)", "add_assoc_function(retval, 0, zim_DateTime___construct)", "add_assoc_function(retval, 0, zim_DateTime___set_state)", "add_assoc_function(retval, 0, zim_DateTime___wakeup)", "add_assoc_null_ex(retval, 0, -1)", "add_assoc_null_ex(retval, 0, 0)", "add_assoc_null_ex(retval, 0, 1)", "add_assoc_null_ex(retval, 0, 6)", "add_char_to_string(retval, 0, 0)", "add_function(retval, 0, 0)", "add_function(retval, 0, member)", "add_function(retval, 0, object)", "add_function(retval, 0, retval)", "add_index_bool(retval, 0, -1)", "add_index_bool(retval, 0, 0)", "add_index_bool(retval, 0, 1)", "add_index_bool(retval, 0, 6)", "add_index_bool(retval, 0, le_index_ptr)", "add_index_bool(retval, 0, php_date_global_timezone_db_enabled)", "add_index_bool(retval, 0, type)", "add_index_long(retval, 0, -1)", "add_index_long(retval, 0, 0)", "add_index_long(retval, 0, 1)", "add_index_long(retval, 0, 6)", "add_index_resource(retval, 0, -1)", "add_index_resource(retval, 0, 0)", "add_index_resource(retval, 0, 1)", "add_index_resource(retval, 0, 6)", "add_index_resource(retval, 0, le_index_ptr)", "add_index_resource(retval, 0, php_date_global_timezone_db_enabled)", "add_index_resource(retval, 0, type)", "add_index_zval(retval, 0, 0)", "add_index_zval(retval, 0, member)", "add_index_zval(retval, 0, object)", "add_index_zval(retval, 0, retval)", "add_next_index_string(retval, 0, -1)", "add_next_index_string(retval, 0, 0)", "add_next_index_string(retval, 0, 1)", "add_next_index_string(retval, 0, 6)", "add_next_index_string(retval, 0, le_index_ptr)", "add_next_index_string(retval, 0, php_date_global_timezone_db_enabled)", "add_next_index_string(retval, 0, type)", "add_property_null_ex(retval, 0, -1)", "add_property_null_ex(retval, 0, 0)", "add_property_null_ex(retval, 0, 1)", "add_property_null_ex(retval, 0, 6)", "add_string_to_string(retval, 0, 0)", "ap_php_vasprintf(retval, 0, 0)", "bcmp(retval, 0, -1)", "bcmp(retval, 0, 0)", "bcmp(retval, 0, 1)", "bcmp(retval, 0, 6)", "bcopy(retval, 0, -1)", "bcopy(retval, 0, 0)", "bcopy(retval, 0, 1)", "bcopy(retval, 0, 6)", "bitwise_and_function(retval, 0, 0)", "bitwise_and_function(retval, 0, member)", "bitwise_and_function(retval, 0, object)", "bitwise_and_function(retval, 0, retval)", "bitwise_or_function(retval, 0, 0)", "bitwise_or_function(retval, 0, member)", "bitwise_or_function(retval, 0, object)", "bitwise_or_function(retval, 0, retval)", "bitwise_xor_function(retval, 0, 0)", "bitwise_xor_function(retval, 0, member)", "bitwise_xor_function(retval, 0, object)", "bitwise_xor_function(retval, 0, retval)", "boolean_xor_function(retval, 0, 0)", "boolean_xor_function(retval, 0, member)", "boolean_xor_function(retval, 0, object)", "boolean_xor_function(retval, 0, retval)", "chown(retval, 0, -1)", "chown(retval, 0, 0)", "chown(retval, 0, 1)", "chown(retval, 0, 6)", "compare_function(retval, 0, 0)", "compare_function(retval, 0, member)", "compare_function(retval, 0, object)", "compare_function(retval, 0, retval)", "concat_function(retval, 0, 0)", "concat_function(retval, 0, member)", "concat_function(retval, 0, object)", "concat_function(retval, 0, retval)", "date_interval_format(retval, 0, 0)", "date_interval_initialize(retval, 0, -1)", "date_interval_initialize(retval, 0, 0)", "date_interval_initialize(retval, 0, 1)", "date_interval_initialize(retval, 0, 6)", "date_interval_initialize(retval, 0, le_index_ptr)", "date_interval_initialize(retval, 0, php_date_global_timezone_db_enabled)", "date_interval_initialize(retval, 0, type)", "date_object_period_get_iterator(retval, 0, -1)", "date_object_period_get_iterator(retval, 0, 0)", "date_object_period_get_iterator(retval, 0, 1)", "date_object_period_get_iterator(retval, 0, 6)", "date_object_period_get_iterator(retval, 0, le_index_ptr)", "date_object_period_get_iterator(retval, 0, php_date_global_timezone_db_enabled)", "date_object_period_get_iterator(retval, 0, type)", "div_function(retval, 0, 0)", "div_function(retval, 0, member)", "div_function(retval, 0, object)", "div_function(retval, 0, retval)", "erand48_r(retval, 0, 0)", "execve(retval, 0, 0)", "fetch_array_begin(retval, 0, 0)", "fetch_array_dim(retval, 0, 0)", "fetch_simple_variable(retval, 0, -1)", "fetch_simple_variable(retval, 0, 0)", "fetch_simple_variable(retval, 0, 1)", "fetch_simple_variable(retval, 0, 6)", "fetch_simple_variable(retval, 0, le_index_ptr)", "fetch_simple_variable(retval, 0, php_date_global_timezone_db_enabled)", "fetch_simple_variable(retval, 0, type)", "fetch_string_offset(retval, 0, 0)", "fgets(retval, 0, 0)", "fgetws(retval, 0, 0)", "fmemopen(retval, 0, 0)", "freopen(retval, 0, 0)", "fseek(retval, 0, -1)", "fseek(retval, 0, 0)", "fseek(retval, 0, 1)", "fseek(retval, 0, 6)", "fseek(retval, 0, le_index_ptr)", "fseek(retval, 0, php_date_global_timezone_db_enabled)", "fseek(retval, 0, type)", "fseeko(retval, 0, -1)", "fseeko(retval, 0, 0)", "fseeko(retval, 0, 1)", "fseeko(retval, 0, 6)", "fseeko(retval, 0, le_index_ptr)", "fseeko(retval, 0, php_date_global_timezone_db_enabled)", "fseeko(retval, 0, type)", "getline(retval, 0, 0)", "getsubopt(retval, 0, 0)", "highlight_string(retval, 0, 0)", "init_op_array(retval, 0, -1)", "init_op_array(retval, 0, 0)", "init_op_array(retval, 0, 1)", "init_op_array(retval, 0, 6)", "init_op_array(retval, 0, le_index_ptr)", "init_op_array(retval, 0, php_date_global_timezone_db_enabled)", "init_op_array(retval, 0, type)", "instanceof_function_ex(retval, 0, -1)", "instanceof_function_ex(retval, 0, 0)", "instanceof_function_ex(retval, 0, 1)", "instanceof_function_ex(retval, 0, 6)", "is_equal_function(retval, 0, 0)", "is_equal_function(retval, 0, member)", "is_equal_function(retval, 0, object)", "is_equal_function(retval, 0, retval)", "is_identical_function(retval, 0, 0)", "is_identical_function(retval, 0, member)", "is_identical_function(retval, 0, object)", "is_identical_function(retval, 0, retval)", "is_not_equal_function(retval, 0, 0)", "is_not_equal_function(retval, 0, member)", "is_not_equal_function(retval, 0, object)", "is_not_equal_function(retval, 0, retval)", "is_not_identical_function(retval, 0, 0)", "is_not_identical_function(retval, 0, member)", "is_not_identical_function(retval, 0, object)", "is_not_identical_function(retval, 0, retval)", "is_smaller_function(retval, 0, 0)", "is_smaller_function(retval, 0, member)", "is_smaller_function(retval, 0, object)", "is_smaller_function(retval, 0, retval)", "is_smaller_or_equal_function(retval, 0, 0)", "is_smaller_or_equal_function(retval, 0, member)", "is_smaller_or_equal_function(retval, 0, object)", "is_smaller_or_equal_function(retval, 0, retval)", "jrand48_r(retval, 0, 0)", "lchown(retval, 0, -1)", "lchown(retval, 0, 0)", "lchown(retval, 0, 1)", "lchown(retval, 0, 6)", "mbrlen(retval, 0, 0)", "mbstowcs(retval, 0, -1)", "mbstowcs(retval, 0, 0)", "mbstowcs(retval, 0, 1)", "mbstowcs(retval, 0, 6)", "mbtowc(retval, 0, -1)", "mbtowc(retval, 0, 0)", "mbtowc(retval, 0, 1)", "mbtowc(retval, 0, 6)", "memchr(retval, 0, -1)", "memchr(retval, 0, 0)", "memchr(retval, 0, 1)", "memchr(retval, 0, 6)", "memcmp(retval, 0, -1)", "memcmp(retval, 0, 0)", "memcmp(retval, 0, 1)", "memcmp(retval, 0, 6)", "memcpy(retval, 0, -1)", "memcpy(retval, 0, 0)", "memcpy(retval, 0, 1)", "memcpy(retval, 0, 6)", "memmove(retval, 0, -1)", "memmove(retval, 0, 0)", "memmove(retval, 0, 1)", "memmove(retval, 0, 6)", "memset(retval, 0, -1)", "memset(retval, 0, 0)", "memset(retval, 0, 1)", "memset(retval, 0, 6)", "mknod(retval, 0, -1)", "mknod(retval, 0, 0)", "mknod(retval, 0, 1)", "mknod(retval, 0, 6)", "mod_function(retval, 0, 0)", "mod_function(retval, 0, member)", "mod_function(retval, 0, object)", "mod_function(retval, 0, retval)", "mul_function(retval, 0, 0)", "mul_function(retval, 0, member)", "mul_function(retval, 0, object)", "mul_function(retval, 0, retval)", "nrand48_r(retval, 0, 0)", "numeric_compare_function(retval, 0, 0)", "numeric_compare_function(retval, 0, member)", "numeric_compare_function(retval, 0, object)", "numeric_compare_function(retval, 0, retval)", "php_date_initialize_from_hash(retval, 0, 0)", "php_ini_activate_config(retval, 0, -1)", "php_ini_activate_config(retval, 0, 0)", "php_ini_activate_config(retval, 0, 1)", "php_ini_activate_config(retval, 0, 6)", "php_ini_activate_config(retval, 0, le_index_ptr)", "php_ini_activate_config(retval, 0, php_date_global_timezone_db_enabled)", "php_ini_activate_config(retval, 0, type)", "php_module_startup(retval, 0, -1)", "php_module_startup(retval, 0, 0)", "php_module_startup(retval, 0, 1)", "php_module_startup(retval, 0, 6)", "php_output_handler_alias_register(retval, 0, 0)", "php_output_handler_conflict_register(retval, 0, 0)", "php_output_handler_conflict_register(retval, 0, mblen)", "php_output_handler_conflict_register(retval, 0, php_output_handler_started)", "php_output_handler_conflict_register(retval, 0, php_output_write)", "php_output_handler_conflict_register(retval, 0, php_output_write_unbuffered)", "php_output_handler_conflict_register(retval, 0, setdomainname)", "php_output_handler_conflict_register(retval, 0, sethostname)", "php_output_handler_conflict_register(retval, 0, zend_multibyte_set_script_encoding_by_string)", "php_output_handler_create_user(retval, 0, -1)", "php_output_handler_create_user(retval, 0, 0)", "php_output_handler_create_user(retval, 0, 1)", "php_output_handler_create_user(retval, 0, 6)", "php_output_handler_create_user(retval, 0, le_index_ptr)", "php_output_handler_create_user(retval, 0, php_date_global_timezone_db_enabled)", "php_output_handler_create_user(retval, 0, type)", "php_output_handler_reverse_conflict_register(retval, 0, 0)", "php_output_handler_reverse_conflict_register(retval, 0, mblen)", "php_output_handler_reverse_conflict_register(retval, 0, php_output_handler_started)", "php_output_handler_reverse_conflict_register(retval, 0, php_output_write)", "php_output_handler_reverse_conflict_register(retval, 0, php_output_write_unbuffered)", "php_output_handler_reverse_conflict_register(retval, 0, setdomainname)", "php_output_handler_reverse_conflict_register(retval, 0, sethostname)", "php_output_handler_reverse_conflict_register(retval, 0, zend_multibyte_set_script_encoding_by_string)", "php_output_handler_set_context(retval, 0, 0)", "php_output_handler_set_context(retval, 0, _efree)", "php_output_handler_set_context(retval, 0, _php_date_tzinfo_dtor)", "php_output_handler_set_context(retval, 0, date_object_free_storage_date)", "php_output_handler_set_context(retval, 0, date_object_free_storage_interval)", "php_output_handler_set_context(retval, 0, date_object_free_storage_period)", "php_output_handler_set_context(retval, 0, date_object_free_storage_timezone)", "php_output_handler_set_context(retval, 0, free)", "php_output_handler_set_context(retval, 0, list_entry_destructor)", "php_output_handler_set_context(retval, 0, php_request_shutdown)", "php_output_handler_set_context(retval, 0, php_request_shutdown_for_exec)", "php_output_handler_set_context(retval, 0, plist_entry_destructor)", "php_output_handler_set_context(retval, 0, sapi_handle_post)", "php_output_handler_set_context(retval, 0, zend_vm_stack_free)", "php_output_handler_set_context(retval, 0, zend_vm_stack_free_int)", "php_output_handler_set_context(retval, 0, zend_vm_stack_push)", "php_output_handler_set_context(retval, 0, zend_vm_stack_push_nocheck)", "php_output_start_user(retval, 0, -1)", "php_output_start_user(retval, 0, 0)", "php_output_start_user(retval, 0, 1)", "php_output_start_user(retval, 0, 6)", "php_output_start_user(retval, 0, le_index_ptr)", "php_output_start_user(retval, 0, php_date_global_timezone_db_enabled)", "php_output_start_user(retval, 0, type)", "php_parse_user_ini_file(retval, 0, 0)", "php_resolve_path(retval, 0, 0)", "php_stream_context_get_link(retval, 0, 0)", "php_stream_context_set_link(retval, 0, 0)", "php_stream_filter_create(retval, 0, -1)", "php_stream_filter_create(retval, 0, 0)", "php_stream_filter_create(retval, 0, 1)", "php_stream_filter_create(retval, 0, 6)", "php_stream_filter_create(retval, 0, le_index_ptr)", "php_stream_filter_create(retval, 0, php_date_global_timezone_db_enabled)", "php_stream_filter_create(retval, 0, type)", "php_stream_locate_eol(retval, 0, -1)", "php_stream_locate_eol(retval, 0, 0)", "php_stream_locate_eol(retval, 0, 1)", "php_stream_locate_eol(retval, 0, 6)", "php_stream_locate_url_wrapper(retval, 0, -1)", "php_stream_locate_url_wrapper(retval, 0, 0)", "php_stream_locate_url_wrapper(retval, 0, 1)", "php_stream_locate_url_wrapper(retval, 0, 6)", "php_stream_locate_url_wrapper(retval, 0, le_index_ptr)", "php_stream_locate_url_wrapper(retval, 0, php_date_global_timezone_db_enabled)", "php_stream_locate_url_wrapper(retval, 0, type)", "php_stream_open_for_zend_ex(retval, 0, -1)", "php_stream_open_for_zend_ex(retval, 0, 0)", "php_stream_open_for_zend_ex(retval, 0, 1)", "php_stream_open_for_zend_ex(retval, 0, 6)", "php_stream_open_for_zend_ex(retval, 0, le_index_ptr)", "php_stream_open_for_zend_ex(retval, 0, php_date_global_timezone_db_enabled)", "php_stream_open_for_zend_ex(retval, 0, type)", "php_stream_xport_crypto_setup(retval, 0, 0)", "php_stream_xport_listen(retval, 0, 0)", "php_stream_xport_listen(retval, 0, environ)", "php_strlcat(retval, 0, -1)", "php_strlcat(retval, 0, 0)", "php_strlcat(retval, 0, 1)", "php_strlcat(retval, 0, 6)", "php_strlcpy(retval, 0, -1)", "php_strlcpy(retval, 0, 0)", "php_strlcpy(retval, 0, 1)", "php_strlcpy(retval, 0, 6)", "posix_memalign(retval, 0, -1)", "posix_memalign(retval, 0, 0)", "posix_memalign(retval, 0, 1)", "posix_memalign(retval, 0, 6)", "readdir_r(retval, 0, 0)", "readlink(retval, 0, -1)", "readlink(retval, 0, 0)", "readlink(retval, 0, 1)", "readlink(retval, 0, 6)", "realpath_cache_lookup(retval, 0, -1)", "realpath_cache_lookup(retval, 0, 0)", "realpath_cache_lookup(retval, 0, 1)", "realpath_cache_lookup(retval, 0, 6)", "setbuffer(retval, 0, -1)", "setbuffer(retval, 0, 0)", "setbuffer(retval, 0, 1)", "setbuffer(retval, 0, 6)", "setenv(retval, 0, -1)", "setenv(retval, 0, 0)", "setenv(retval, 0, 1)", "setenv(retval, 0, 6)", "setenv(retval, 0, le_index_ptr)", "setenv(retval, 0, php_date_global_timezone_db_enabled)", "setenv(retval, 0, type)", "shift_left_function(retval, 0, 0)", "shift_left_function(retval, 0, member)", "shift_left_function(retval, 0, object)", "shift_left_function(retval, 0, retval)", "shift_right_function(retval, 0, 0)", "shift_right_function(retval, 0, member)", "shift_right_function(retval, 0, object)", "shift_right_function(retval, 0, retval)", "sigtimedwait(retval, 0, 0)", "stpncpy(retval, 0, -1)", "stpncpy(retval, 0, 0)", "stpncpy(retval, 0, 1)", "stpncpy(retval, 0, 6)", "strcasecmp_l(retval, 0, 0)", "strcoll_l(retval, 0, 0)", "string_compare_function(retval, 0, 0)", "string_compare_function(retval, 0, member)", "string_compare_function(retval, 0, object)", "string_compare_function(retval, 0, retval)", "string_locale_compare_function(retval, 0, 0)", "string_locale_compare_function(retval, 0, member)", "string_locale_compare_function(retval, 0, object)", "string_locale_compare_function(retval, 0, retval)", "strncasecmp(retval, 0, -1)", "strncasecmp(retval, 0, 0)", "strncasecmp(retval, 0, 1)", "strncasecmp(retval, 0, 6)", "strncat(retval, 0, -1)", "strncat(retval, 0, 0)", "strncat(retval, 0, 1)", "strncat(retval, 0, 6)", "strncmp(retval, 0, -1)", "strncmp(retval, 0, 0)", "strncmp(retval, 0, 1)", "strncmp(retval, 0, 6)", "strncpy(retval, 0, -1)", "strncpy(retval, 0, 0)", "strncpy(retval, 0, 1)", "strncpy(retval, 0, 6)", "strtoimax(retval, 0, -1)", "strtoimax(retval, 0, 0)", "strtoimax(retval, 0, 1)", "strtoimax(retval, 0, 6)", "strtoimax(retval, 0, le_index_ptr)", "strtoimax(retval, 0, php_date_global_timezone_db_enabled)", "strtoimax(retval, 0, type)", "strtok_r(retval, 0, 0)", "strtol(retval, 0, -1)", "strtol(retval, 0, 0)", "strtol(retval, 0, 1)", "strtol(retval, 0, 6)", "strtol(retval, 0, le_index_ptr)", "strtol(retval, 0, php_date_global_timezone_db_enabled)", "strtol(retval, 0, type)", "strtoll(retval, 0, -1)", "strtoll(retval, 0, 0)", "strtoll(retval, 0, 1)", "strtoll(retval, 0, 6)", "strtoll(retval, 0, le_index_ptr)", "strtoll(retval, 0, php_date_global_timezone_db_enabled)", "strtoll(retval, 0, type)", "strtoq(retval, 0, -1)", "strtoq(retval, 0, 0)", "strtoq(retval, 0, 1)", "strtoq(retval, 0, 6)", "strtoq(retval, 0, le_index_ptr)", "strtoq(retval, 0, php_date_global_timezone_db_enabled)", "strtoq(retval, 0, type)", "strtoul(retval, 0, -1)", "strtoul(retval, 0, 0)", "strtoul(retval, 0, 1)", "strtoul(retval, 0, 6)", "strtoul(retval, 0, le_index_ptr)", "strtoul(retval, 0, php_date_global_timezone_db_enabled)", "strtoul(retval, 0, type)", "strtoull(retval, 0, -1)", "strtoull(retval, 0, 0)", "strtoull(retval, 0, 1)", "strtoull(retval, 0, 6)", "strtoull(retval, 0, le_index_ptr)", "strtoull(retval, 0, php_date_global_timezone_db_enabled)", "strtoull(retval, 0, type)", "strtoumax(retval, 0, -1)", "strtoumax(retval, 0, 0)", "strtoumax(retval, 0, 1)", "strtoumax(retval, 0, 6)", "strtoumax(retval, 0, le_index_ptr)", "strtoumax(retval, 0, php_date_global_timezone_db_enabled)", "strtoumax(retval, 0, type)", "strtouq(retval, 0, -1)", "strtouq(retval, 0, 0)", "strtouq(retval, 0, 1)", "strtouq(retval, 0, 6)", "strtouq(retval, 0, le_index_ptr)", "strtouq(retval, 0, php_date_global_timezone_db_enabled)", "strtouq(retval, 0, type)", "strxfrm(retval, 0, -1)", "strxfrm(retval, 0, 0)", "strxfrm(retval, 0, 1)", "strxfrm(retval, 0, 6)", "sub_function(retval, 0, 0)", "sub_function(retval, 0, member)", "sub_function(retval, 0, object)", "sub_function(retval, 0, retval)", "symlinkat(retval, 0, 0)", "timelib_fill_holes(retval, 0, -1)", "timelib_fill_holes(retval, 0, 0)", "timelib_fill_holes(retval, 0, 1)", "timelib_fill_holes(retval, 0, 6)", "timelib_fill_holes(retval, 0, le_index_ptr)", "timelib_fill_holes(retval, 0, php_date_global_timezone_db_enabled)", "timelib_fill_holes(retval, 0, type)", "timelib_time_set_option(retval, 0, 0)", "timelib_timezone_id_from_abbr(retval, 0, -1)", "timelib_timezone_id_from_abbr(retval, 0, 0)", "timelib_timezone_id_from_abbr(retval, 0, 1)", "timelib_timezone_id_from_abbr(retval, 0, 6)", "timelib_timezone_id_from_abbr(retval, 0, le_index_ptr)", "timelib_timezone_id_from_abbr(retval, 0, php_date_global_timezone_db_enabled)", "timelib_timezone_id_from_abbr(retval, 0, type)", "vfprintf(retval, 0, 0)", "vfwprintf(retval, 0, 0)", "virtual_filepath_ex(retval, 0, 0)", "vsprintf(retval, 0, 0)", "wcpncpy(retval, 0, -1)", "wcpncpy(retval, 0, 0)", "wcpncpy(retval, 0, 1)", "wcpncpy(retval, 0, 6)", "wcrtomb(retval, 0, 0)", "wcscasecmp_l(retval, 0, 0)", "wcscoll_l(retval, 0, 0)", "wcsncasecmp(retval, 0, -1)", "wcsncasecmp(retval, 0, 0)", "wcsncasecmp(retval, 0, 1)", "wcsncasecmp(retval, 0, 6)", "wcsncat(retval, 0, -1)", "wcsncat(retval, 0, 0)", "wcsncat(retval, 0, 1)", "wcsncat(retval, 0, 6)", "wcsncmp(retval, 0, -1)", "wcsncmp(retval, 0, 0)", "wcsncmp(retval, 0, 1)", "wcsncmp(retval, 0, 6)", "wcsncpy(retval, 0, -1)", "wcsncpy(retval, 0, 0)", "wcsncpy(retval, 0, 1)", "wcsncpy(retval, 0, 6)", "wcstoimax(retval, 0, -1)", "wcstoimax(retval, 0, 0)", "wcstoimax(retval, 0, 1)", "wcstoimax(retval, 0, 6)", "wcstoimax(retval, 0, le_index_ptr)", "wcstoimax(retval, 0, php_date_global_timezone_db_enabled)", "wcstoimax(retval, 0, type)", "wcstok(retval, 0, 0)", "wcstol(retval, 0, -1)", "wcstol(retval, 0, 0)", "wcstol(retval, 0, 1)", "wcstol(retval, 0, 6)", "wcstol(retval, 0, le_index_ptr)", "wcstol(retval, 0, php_date_global_timezone_db_enabled)", "wcstol(retval, 0, type)", "wcstoll(retval, 0, -1)", "wcstoll(retval, 0, 0)", "wcstoll(retval, 0, 1)", "wcstoll(retval, 0, 6)", "wcstoll(retval, 0, le_index_ptr)", "wcstoll(retval, 0, php_date_global_timezone_db_enabled)", "wcstoll(retval, 0, type)", "wcstombs(retval, 0, -1)", "wcstombs(retval, 0, 0)", "wcstombs(retval, 0, 1)", "wcstombs(retval, 0, 6)", "wcstoul(retval, 0, -1)", "wcstoul(retval, 0, 0)", "wcstoul(retval, 0, 1)", "wcstoul(retval, 0, 6)", "wcstoul(retval, 0, le_index_ptr)", "wcstoul(retval, 0, php_date_global_timezone_db_enabled)", "wcstoul(retval, 0, type)", "wcstoull(retval, 0, -1)", "wcstoull(retval, 0, 0)", "wcstoull(retval, 0, 1)", "wcstoull(retval, 0, 6)", "wcstoull(retval, 0, le_index_ptr)", "wcstoull(retval, 0, php_date_global_timezone_db_enabled)", "wcstoull(retval, 0, type)", "wcstoumax(retval, 0, -1)", "wcstoumax(retval, 0, 0)", "wcstoumax(retval, 0, 1)", "wcstoumax(retval, 0, 6)", "wcstoumax(retval, 0, le_index_ptr)", "wcstoumax(retval, 0, php_date_global_timezone_db_enabled)", "wcstoumax(retval, 0, type)", "wcsxfrm(retval, 0, -1)", "wcsxfrm(retval, 0, 0)", "wcsxfrm(retval, 0, 1)", "wcsxfrm(retval, 0, 6)", "wmemchr(retval, 0, -1)", "wmemchr(retval, 0, 0)", "wmemchr(retval, 0, 1)", "wmemchr(retval, 0, 6)", "wmemcmp(retval, 0, -1)", "wmemcmp(retval, 0, 0)", "wmemcmp(retval, 0, 1)", "wmemcmp(retval, 0, 6)", "wmemcpy(retval, 0, -1)", "wmemcpy(retval, 0, 0)", "wmemcpy(retval, 0, 1)", "wmemcpy(retval, 0, 6)", "wmemmove(retval, 0, -1)", "wmemmove(retval, 0, 0)", "wmemmove(retval, 0, 1)", "wmemmove(retval, 0, 6)", "wmemset(retval, 0, -1)", "wmemset(retval, 0, 0)", "wmemset(retval, 0, 1)", "wmemset(retval, 0, 6)", "zend_arg_types_stack_2_pop(retval, 0, 0)", "zend_binary_zval_strncasecmp(retval, 0, 0)", "zend_binary_zval_strncasecmp(retval, 0, member)", "zend_binary_zval_strncasecmp(retval, 0, object)", "zend_binary_zval_strncasecmp(retval, 0, retval)", "zend_binary_zval_strncmp(retval, 0, 0)", "zend_binary_zval_strncmp(retval, 0, member)", "zend_binary_zval_strncmp(retval, 0, object)", "zend_binary_zval_strncmp(retval, 0, retval)", "zend_check_magic_method_implementation(retval, 0, -1)", "zend_check_magic_method_implementation(retval, 0, 0)", "zend_check_magic_method_implementation(retval, 0, 1)", "zend_check_magic_method_implementation(retval, 0, 6)", "zend_check_magic_method_implementation(retval, 0, le_index_ptr)", "zend_check_magic_method_implementation(retval, 0, php_date_global_timezone_db_enabled)", "zend_check_magic_method_implementation(retval, 0, type)", "zend_check_property_access(retval, 0, -1)", "zend_check_property_access(retval, 0, 0)", "zend_check_property_access(retval, 0, 1)", "zend_check_property_access(retval, 0, 6)", "zend_check_property_access(retval, 0, le_index_ptr)", "zend_check_property_access(retval, 0, php_date_global_timezone_db_enabled)", "zend_check_property_access(retval, 0, type)", "zend_compare_arrays(retval, 0, 0)", "zend_compare_arrays(retval, 0, member)", "zend_compare_arrays(retval, 0, object)", "zend_compare_arrays(retval, 0, retval)", "zend_compare_objects(retval, 0, 0)", "zend_compare_objects(retval, 0, member)", "zend_compare_objects(retval, 0, object)", "zend_compare_objects(retval, 0, retval)", "zend_compare_symbol_tables(retval, 0, 0)", "zend_declare_class_constant_null(retval, 0, -1)", "zend_declare_class_constant_null(retval, 0, 0)", "zend_declare_class_constant_null(retval, 0, 1)", "zend_declare_class_constant_null(retval, 0, 6)", "zend_delete_global_variable_ex(retval, 0, -1)", "zend_delete_global_variable_ex(retval, 0, 0)", "zend_delete_global_variable_ex(retval, 0, 1)", "zend_delete_global_variable_ex(retval, 0, 6)", "zend_do_abstract_method(retval, 0, 0)", "zend_do_add_static_array_element(retval, 0, 0)", "zend_do_add_string(retval, 0, 0)", "zend_do_add_variable(retval, 0, 0)", "zend_do_assign(retval, 0, 0)", "zend_do_assign_ref(retval, 0, 0)", "zend_do_begin_class_declaration(retval, 0, 0)", "zend_do_build_namespace_name(retval, 0, 0)", "zend_do_case_before_statement(retval, 0, 0)", "zend_do_cast(retval, 0, -1)", "zend_do_cast(retval, 0, 0)", "zend_do_cast(retval, 0, 1)", "zend_do_cast(retval, 0, 6)", "zend_do_cast(retval, 0, le_index_ptr)", "zend_do_cast(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_cast(retval, 0, type)", "zend_do_declare_property(retval, 0, -1)", "zend_do_declare_property(retval, 0, 0)", "zend_do_declare_property(retval, 0, 1)", "zend_do_declare_property(retval, 0, 6)", "zend_do_do_while_end(retval, 0, 0)", "zend_do_end_new_object(retval, 0, 0)", "zend_do_end_variable_parse(retval, 0, -1)", "zend_do_end_variable_parse(retval, 0, 0)", "zend_do_end_variable_parse(retval, 0, 1)", "zend_do_end_variable_parse(retval, 0, 6)", "zend_do_end_variable_parse(retval, 0, le_index_ptr)", "zend_do_end_variable_parse(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_end_variable_parse(retval, 0, type)", "zend_do_fetch_global_variable(retval, 0, -1)", "zend_do_fetch_global_variable(retval, 0, 0)", "zend_do_fetch_global_variable(retval, 0, 1)", "zend_do_fetch_global_variable(retval, 0, 6)", "zend_do_fetch_global_variable(retval, 0, le_index_ptr)", "zend_do_fetch_global_variable(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_fetch_global_variable(retval, 0, type)", "zend_do_fetch_property(retval, 0, 0)", "zend_do_fetch_static_variable(retval, 0, -1)", "zend_do_fetch_static_variable(retval, 0, 0)", "zend_do_fetch_static_variable(retval, 0, 1)", "zend_do_fetch_static_variable(retval, 0, 6)", "zend_do_fetch_static_variable(retval, 0, le_index_ptr)", "zend_do_fetch_static_variable(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_fetch_static_variable(retval, 0, type)", "zend_do_indirect_references(retval, 0, 0)", "zend_do_jmp_set(retval, 0, 0)", "zend_do_pass_param(retval, 0, -1)", "zend_do_pass_param(retval, 0, 0)", "zend_do_pass_param(retval, 0, 1)", "zend_do_pass_param(retval, 0, 6)", "zend_do_pass_param(retval, 0, le_index_ptr)", "zend_do_pass_param(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_pass_param(retval, 0, type)", "zend_do_post_incdec(retval, 0, -1)", "zend_do_post_incdec(retval, 0, 0)", "zend_do_post_incdec(retval, 0, 1)", "zend_do_post_incdec(retval, 0, 6)", "zend_do_pre_incdec(retval, 0, -1)", "zend_do_pre_incdec(retval, 0, 0)", "zend_do_pre_incdec(retval, 0, 1)", "zend_do_pre_incdec(retval, 0, 6)", "zend_do_qm_true(retval, 0, 0)", "zend_do_use(retval, 0, -1)", "zend_do_use(retval, 0, 0)", "zend_do_use(retval, 0, 1)", "zend_do_use(retval, 0, 6)", "zend_do_use(retval, 0, le_index_ptr)", "zend_do_use(retval, 0, php_date_global_timezone_db_enabled)", "zend_do_use(retval, 0, type)", "zend_eval_string(retval, 0, 0)", "zend_fcall_info_argp(retval, 0, 0)", "zend_fcall_info_args_restore(retval, 0, 0)", "zend_fcall_info_args_save(retval, 0, 0)", "zend_fcall_info_argv(retval, 0, 0)", "zend_fetch_class(retval, 0, -1)", "zend_fetch_class(retval, 0, 0)", "zend_fetch_class(retval, 0, 1)", "zend_fetch_class(retval, 0, 6)", "zend_fetch_class(retval, 0, le_index_ptr)", "zend_fetch_class(retval, 0, php_date_global_timezone_db_enabled)", "zend_fetch_class(retval, 0, type)", "zend_get_compiled_variable_name(retval, 0, 0)", "zend_get_configuration_directive(retval, 0, 0)", "zend_get_configuration_directive(retval, 0, member)", "zend_get_configuration_directive(retval, 0, object)", "zend_get_configuration_directive(retval, 0, retval)", "zend_get_constant(retval, 0, 0)", "zend_get_constant(retval, 0, member)", "zend_get_constant(retval, 0, object)", "zend_get_constant(retval, 0, retval)", "zend_get_object_classname(retval, 0, 0)", "zend_get_property_info(retval, 0, -1)", "zend_get_property_info(retval, 0, 0)", "zend_get_property_info(retval, 0, 1)", "zend_get_property_info(retval, 0, 6)", "zend_get_property_info(retval, 0, le_index_ptr)", "zend_get_property_info(retval, 0, php_date_global_timezone_db_enabled)", "zend_get_property_info(retval, 0, type)", "zend_hash_add_empty_element(retval, 0, -1)", "zend_hash_add_empty_element(retval, 0, 0)", "zend_hash_add_empty_element(retval, 0, 1)", "zend_hash_add_empty_element(retval, 0, 6)", "zend_hash_apply_with_argument(retval, 0, 0)", "zend_hash_exists(retval, 0, -1)", "zend_hash_exists(retval, 0, 0)", "zend_hash_exists(retval, 0, 1)", "zend_hash_exists(retval, 0, 6)", "zend_hash_get_current_data_ex(retval, 0, 0)", "zend_hash_index_find(retval, 0, 0)", "zend_ini_double(retval, 0, -1)", "zend_ini_double(retval, 0, 0)", "zend_ini_double(retval, 0, 1)", "zend_ini_double(retval, 0, 6)", "zend_ini_double(retval, 0, le_index_ptr)", "zend_ini_double(retval, 0, php_date_global_timezone_db_enabled)", "zend_ini_double(retval, 0, type)", "zend_ini_long(retval, 0, -1)", "zend_ini_long(retval, 0, 0)", "zend_ini_long(retval, 0, 1)", "zend_ini_long(retval, 0, 6)", "zend_ini_long(retval, 0, le_index_ptr)", "zend_ini_long(retval, 0, php_date_global_timezone_db_enabled)", "zend_ini_long(retval, 0, type)", "zend_ini_register_displayer(retval, 0, 0)", "zend_ini_register_displayer(retval, 0, display_link_numbers)", "zend_ini_register_displayer(retval, 0, zend_ini_boolean_displayer_cb)", "zend_ini_register_displayer(retval, 0, zend_ini_color_displayer_cb)", "zend_ini_string(retval, 0, -1)", "zend_ini_string(retval, 0, 0)", "zend_ini_string(retval, 0, 1)", "zend_ini_string(retval, 0, 6)", "zend_ini_string(retval, 0, le_index_ptr)", "zend_ini_string(retval, 0, php_date_global_timezone_db_enabled)", "zend_ini_string(retval, 0, type)", "zend_is_callable(retval, 0, 0)", "zend_is_callable(retval, 0, environ)", "zend_llist_apply_with_argument(retval, 0, 0)", "zend_llist_del_element(retval, 0, 0)", "zend_lookup_class(retval, 0, 0)", "zend_make_printable_zval(retval, 0, 0)", "zend_memrchr(retval, 0, -1)", "zend_memrchr(retval, 0, 0)", "zend_memrchr(retval, 0, 1)", "zend_memrchr(retval, 0, 6)", "zend_merge_properties(retval, 0, -1)", "zend_merge_properties(retval, 0, 0)", "zend_merge_properties(retval, 0, 1)", "zend_merge_properties(retval, 0, 6)", "zend_merge_properties(retval, 0, le_index_ptr)", "zend_merge_properties(retval, 0, php_date_global_timezone_db_enabled)", "zend_merge_properties(retval, 0, type)", "zend_mm_shutdown(retval, 0, -1)", "zend_mm_shutdown(retval, 0, 0)", "zend_mm_shutdown(retval, 0, 1)", "zend_mm_shutdown(retval, 0, 6)", "zend_mm_shutdown(retval, 0, le_index_ptr)", "zend_mm_shutdown(retval, 0, php_date_global_timezone_db_enabled)", "zend_mm_shutdown(retval, 0, type)", "zend_prepare_reference(retval, 0, 0)", "zend_prepare_trait_precedence(retval, 0, 0)", "zend_print_zval_ex(retval, 0, -1)", "zend_print_zval_ex(retval, 0, 0)", "zend_print_zval_ex(retval, 0, 1)", "zend_print_zval_ex(retval, 0, 6)", "zend_print_zval_ex(retval, 0, le_index_ptr)", "zend_print_zval_ex(retval, 0, php_date_global_timezone_db_enabled)", "zend_print_zval_ex(retval, 0, type)", "zend_print_zval_r_ex(retval, 0, -1)", "zend_print_zval_r_ex(retval, 0, 0)", "zend_print_zval_r_ex(retval, 0, 1)", "zend_print_zval_r_ex(retval, 0, 6)", "zend_print_zval_r_ex(retval, 0, le_index_ptr)", "zend_print_zval_r_ex(retval, 0, php_date_global_timezone_db_enabled)", "zend_print_zval_r_ex(retval, 0, type)", "zend_ptr_stack_2_pop(retval, 0, 0)", "zend_ptr_stack_2_push(retval, 0, 0)", "zend_ptr_stack_clean(retval, 0, -1)", "zend_ptr_stack_clean(retval, 0, 0)", "zend_ptr_stack_clean(retval, 0, 1)", "zend_ptr_stack_clean(retval, 0, 6)", "zend_register_class_alias_ex(retval, 0, 0)", "zend_register_class_alias_ex(retval, 0, date_ce_date)", "zend_register_class_alias_ex(retval, 0, date_ce_interval)", "zend_register_class_alias_ex(retval, 0, date_ce_period)", "zend_register_class_alias_ex(retval, 0, date_ce_timezone)", "zend_register_class_alias_ex(retval, 0, zend_ce_aggregate)", "zend_register_class_alias_ex(retval, 0, zend_ce_arrayaccess)", "zend_register_class_alias_ex(retval, 0, zend_ce_iterator)", "zend_register_class_alias_ex(retval, 0, zend_ce_serializable)", "zend_register_class_alias_ex(retval, 0, zend_ce_traversable)", "zend_register_class_alias_ex(retval, 0, zend_standard_class_def)", "zend_register_internal_class_ex(retval, 0, 0)", "zend_register_list_destructors(retval, 0, -1)", "zend_register_list_destructors(retval, 0, 0)", "zend_register_list_destructors(retval, 0, 1)", "zend_register_list_destructors(retval, 0, 6)", "zend_register_list_destructors(retval, 0, le_index_ptr)", "zend_register_list_destructors(retval, 0, php_date_global_timezone_db_enabled)", "zend_register_list_destructors(retval, 0, type)", "zend_register_resource(retval, 0, -1)", "zend_register_resource(retval, 0, 0)", "zend_register_resource(retval, 0, 1)", "zend_register_resource(retval, 0, 6)", "zend_register_resource(retval, 0, le_index_ptr)", "zend_register_resource(retval, 0, php_date_global_timezone_db_enabled)", "zend_register_resource(retval, 0, type)", "zend_resolve_class_name(retval, 0, -1)", "zend_resolve_class_name(retval, 0, 0)", "zend_resolve_class_name(retval, 0, 1)", "zend_resolve_class_name(retval, 0, 6)", "zend_resolve_class_name(retval, 0, le_index_ptr)", "zend_resolve_class_name(retval, 0, php_date_global_timezone_db_enabled)", "zend_resolve_class_name(retval, 0, type)", "zend_resolve_goto_label(retval, 0, -1)", "zend_resolve_goto_label(retval, 0, 0)", "zend_resolve_goto_label(retval, 0, 1)", "zend_resolve_goto_label(retval, 0, 6)", "zend_resolve_goto_label(retval, 0, le_index_ptr)", "zend_resolve_goto_label(retval, 0, php_date_global_timezone_db_enabled)", "zend_resolve_goto_label(retval, 0, type)", "zend_restore_ini_entry(retval, 0, -1)", "zend_restore_ini_entry(retval, 0, 0)", "zend_restore_ini_entry(retval, 0, 1)", "zend_restore_ini_entry(retval, 0, 6)", "zend_restore_ini_entry(retval, 0, le_index_ptr)", "zend_restore_ini_entry(retval, 0, php_date_global_timezone_db_enabled)", "zend_restore_ini_entry(retval, 0, type)", "zend_stack_apply(retval, 0, 0)", "zend_stack_apply(retval, 0, brk)", "zend_stack_apply(retval, 0, dlclose)", "zend_stack_push(retval, 0, -1)", "zend_stack_push(retval, 0, 0)", "zend_stack_push(retval, 0, 1)", "zend_stack_push(retval, 0, 6)", "zend_stack_push(retval, 0, le_index_ptr)", "zend_stack_push(retval, 0, php_date_global_timezone_db_enabled)", "zend_stack_push(retval, 0, type)", "zend_std_cast_object_tostring(retval, 0, -1)", "zend_std_cast_object_tostring(retval, 0, 0)", "zend_std_cast_object_tostring(retval, 0, 1)", "zend_std_cast_object_tostring(retval, 0, 6)", "zend_std_cast_object_tostring(retval, 0, le_index_ptr)", "zend_std_cast_object_tostring(retval, 0, php_date_global_timezone_db_enabled)", "zend_std_cast_object_tostring(retval, 0, type)", "zend_str_tolower_copy(retval, 0, -1)", "zend_str_tolower_copy(retval, 0, 0)", "zend_str_tolower_copy(retval, 0, 1)", "zend_str_tolower_copy(retval, 0, 6)", "zend_stream_fixup(retval, 0, 0)", "zend_symtable_del(retval, 0, -1)", "zend_symtable_del(retval, 0, 0)", "zend_symtable_del(retval, 0, 1)", "zend_symtable_del(retval, 0, 6)", "zend_symtable_exists(retval, 0, -1)", "zend_symtable_exists(retval, 0, 0)", "zend_symtable_exists(retval, 0, 1)", "zend_symtable_exists(retval, 0, 6)", "zend_ts_get_hash_value(retval, 0, -1)", "zend_ts_get_hash_value(retval, 0, 0)", "zend_ts_get_hash_value(retval, 0, 1)", "zend_ts_get_hash_value(retval, 0, 6)", "zend_ts_hash_add_empty_element(retval, 0, -1)", "zend_ts_hash_add_empty_element(retval, 0, 0)", "zend_ts_hash_add_empty_element(retval, 0, 1)", "zend_ts_hash_add_empty_element(retval, 0, 6)", "zend_ts_hash_apply_with_argument(retval, 0, 0)", "zend_ts_hash_exists(retval, 0, -1)", "zend_ts_hash_exists(retval, 0, 0)", "zend_ts_hash_exists(retval, 0, 1)", "zend_ts_hash_exists(retval, 0, 6)", "zend_ts_hash_index_find(retval, 0, 0)", "zend_unregister_functions(retval, 0, 0)", "zend_update_static_property_null(retval, 0, -1)", "zend_update_static_property_null(retval, 0, 0)", "zend_update_static_property_null(retval, 0, 1)", "zend_update_static_property_null(retval, 0, 6)", "zend_update_static_property_null(retval, 0, le_index_ptr)", "zend_update_static_property_null(retval, 0, php_date_global_timezone_db_enabled)", "zend_update_static_property_null(retval, 0, type)", "zend_user_it_get_new_iterator(retval, 0, -1)", "zend_user_it_get_new_iterator(retval, 0, 0)", "zend_user_it_get_new_iterator(retval, 0, 1)", "zend_user_it_get_new_iterator(retval, 0, 6)", "zend_user_it_get_new_iterator(retval, 0, le_index_ptr)", "zend_user_it_get_new_iterator(retval, 0, php_date_global_timezone_db_enabled)", "zend_user_it_get_new_iterator(retval, 0, type)", "zendi_smart_strcmp(retval, 0, 0)", "zendi_smart_strcmp(retval, 0, member)", "zendi_smart_strcmp(retval, 0, object)", "zendi_smart_strcmp(retval, 0, retval)", "zval_update_constant_ex(retval, 0, 0)", "zval_update_constant_ex(retval, 0, date_ce_date)", "zval_update_constant_ex(retval, 0, date_ce_interval)", "zval_update_constant_ex(retval, 0, date_ce_period)", "zval_update_constant_ex(retval, 0, date_ce_timezone)", "zval_update_constant_ex(retval, 0, zend_ce_aggregate)", "zval_update_constant_ex(retval, 0, zend_ce_arrayaccess)", "zval_update_constant_ex(retval, 0, zend_ce_iterator)", "zval_update_constant_ex(retval, 0, zend_ce_serializable)", "zval_update_constant_ex(retval, 0, zend_ce_traversable)", "zval_update_constant_ex(retval, 0, zend_standard_class_def)", "{\n}\n", "Debug(retval, 0)", "__cmsg_nxthdr(retval, 0)", "__overflow(retval, 0)", "__sigsetjmp(retval, 0)", "__stat_file_close(retval, 0)", "__stpcpy(retval, 0)", "__zend_realloc(retval, 0)", "_array_init(retval, 0)", "_estrndup(retval, 0)", "_longjmp(retval, 0)", "_object_init_ex(retval, 0)", "_php_glob_stream_get_count(retval, 0)", "_php_math_basetolong(retval, 0)", "_php_math_longtobase(retval, 0)", "_php_math_zvaltobase(retval, 0)", "_php_stream_filter_append(retval, 0)", "_php_stream_filter_flush(retval, 0)", "_php_stream_filter_prepend(retval, 0)", "_php_stream_flush(retval, 0)", "_php_stream_fopen_from_file(retval, 0)", "_php_stream_fopen_from_pipe(retval, 0)", "_php_stream_free(retval, 0)", "_php_stream_free_enclosed(retval, 0)", "_php_stream_memory_get_buffer(retval, 0)", "_php_stream_mmap_unmap_ex(retval, 0)", "_php_stream_printf(retval, 0)", "_php_stream_putc(retval, 0)", "_php_stream_puts(retval, 0)", "_php_stream_readdir(retval, 0)", "_php_stream_stat(retval, 0)", "_php_stream_truncate_set_size(retval, 0)", "_zend_bailout(retval, 0)", "_zend_mm_alloc(retval, 0)", "_zend_mm_block_size(retval, 0)", "_zend_mm_free(retval, 0)", "access(retval, 0)", "add_index_null(retval, 0)", "add_next_index_bool(retval, 0)", "add_next_index_long(retval, 0)", "add_next_index_resource(retval, 0)", "add_next_index_zval(retval, 0)", "add_trait_alias(retval, 0)", "adjtime(retval, 0)", "alphasort(retval, 0)", "ap_php_asprintf(retval, 0)", "asctime_r(retval, 0)", "bitwise_not_function(retval, 0)", "boolean_not_function(retval, 0)", "bzero(retval, 0)", "cfg_get_double(retval, 0)", "cfg_get_entry(retval, 0)", "cfg_get_long(retval, 0)", "cfg_get_string(retval, 0)", "check_id_allowed(retval, 0)", "chmod(retval, 0)", "compile_file(retval, 0)", "compile_string(retval, 0)", "convert_to_long_base(retval, 0)", "ctime_r(retval, 0)", "date_object_compare_date(retval, 0)", "date_object_new_date_ex(retval, 0)", "date_object_new_interval_ex(retval, 0)", "date_object_new_period_ex(retval, 0)", "date_object_new_timezone_ex(retval, 0)", "date_period_it_current_data(retval, 0)", "display_link_numbers(retval, 0)", "dlopen(retval, 0)", "dlsym(retval, 0)", "drand48_r(retval, 0)", "execl(retval, 0)", "execle(retval, 0)", "execlp(retval, 0)", "execute_internal(retval, 0)", "execv(retval, 0)", "execvp(retval, 0)", "expand_filepath(retval, 0)", "explicit_bzero(retval, 0)", "fgetpos(retval, 0)", "fopen(retval, 0)", "fprintf(retval, 0)", "fputs(retval, 0)", "fputws(retval, 0)", "fsetpos(retval, 0)", "fwide(retval, 0)", "fwprintf(retval, 0)", "getcwd(retval, 0)", "getdomainname(retval, 0)", "getentropy(retval, 0)", "gethostname(retval, 0)", "getloadavg(retval, 0)", "getlogin_r(retval, 0)", "gettimeofday(retval, 0)", "gmtime_r(retval, 0)", "highlight_file(retval, 0)", "index(retval, 0)", "init_trait_alias_list(retval, 0)", "instanceof_function(retval, 0)", "lchmod(retval, 0)", "lcong48_r(retval, 0)", "link(retval, 0)", "localtime_r(retval, 0)", "longjmp(retval, 0)", "lrand48_r(retval, 0)", "lstat(retval, 0)", "lutimes(retval, 0)", "mblen(retval, 0)", "mkdir(retval, 0)", "mkfifo(retval, 0)", "mkstemps(retval, 0)", "mrand48_r(retval, 0)", "nanosleep(retval, 0)", "object_properties_init(retval, 0)", "on_exit(retval, 0)", "open_memstream(retval, 0)", "open_wmemstream(retval, 0)", "pathconf(retval, 0)", "php_check_open_basedir_ex(retval, 0)", "php_check_specific_open_basedir(retval, 0)", "php_date_instantiate(retval, 0)", "php_date_parse_tzfile(retval, 0)", "php_execute_simple_script(retval, 0)", "php_html_puts(retval, 0)", "php_info_html_esc_write(retval, 0)", "php_ini_activate_per_dir_config(retval, 0)", "php_ini_activate_per_host_config(retval, 0)", "php_output_handler_alias(retval, 0)", "php_output_handler_started(retval, 0)", "php_output_write(retval, 0)", "php_output_write_unbuffered(retval, 0)", "php_parse_date(retval, 0)", "php_printf(retval, 0)", "php_register_extensions(retval, 0)", "php_register_pre_request_shutdown(retval, 0)", "php_register_url_stream_wrapper(retval, 0)", "php_register_url_stream_wrapper_volatile(retval, 0)", "php_sprintf(retval, 0)", "php_stream_bucket_append(retval, 0)", "php_stream_bucket_prepend(retval, 0)", "php_stream_context_del_link(retval, 0)", "php_stream_context_set(retval, 0)", "php_stream_dirent_alphasort(retval, 0)", "php_stream_dirent_alphasortr(retval, 0)", "php_stream_encloses(retval, 0)", "php_stream_filter_append_ex(retval, 0)", "php_stream_filter_prepend_ex(retval, 0)", "php_stream_filter_register_factory(retval, 0)", "php_stream_filter_register_factory_volatile(retval, 0)", "php_stream_filter_remove(retval, 0)", "php_stream_from_persistent_id(retval, 0)", "php_stream_xport_crypto_enable(retval, 0)", "php_stream_xport_register(retval, 0)", "php_stream_xport_shutdown(retval, 0)", "php_version_compare(retval, 0)", "php_write(retval, 0)", "popen(retval, 0)", "print_op_array(retval, 0)", "printf(retval, 0)", "psiginfo(retval, 0)", "putpwent(retval, 0)", "random_r(retval, 0)", "realloc(retval, 0)", "realpath(retval, 0)", "realpath_cache_del(retval, 0)", "rename(retval, 0)", "rindex(retval, 0)", "sapi_apply_default_charset(retval, 0)", "sapi_getenv(retval, 0)", "sapi_register_input_filter(retval, 0)", "seed48_r(retval, 0)", "seekdir(retval, 0)", "setbuf(retval, 0)", "setdomainname(retval, 0)", "sethostname(retval, 0)", "setstate_r(retval, 0)", "settimeofday(retval, 0)", "sigaddset(retval, 0)", "sigaltstack(retval, 0)", "sigdelset(retval, 0)", "sigismember(retval, 0)", "siglongjmp(retval, 0)", "sigstack(retval, 0)", "sigwait(retval, 0)", "sigwaitinfo(retval, 0)", "smart_str_print_long(retval, 0)", "smart_str_print_unsigned(retval, 0)", "sprintf(retval, 0)", "stat(retval, 0)", "stpcpy(retval, 0)", "strcasecmp(retval, 0)", "strcat(retval, 0)", "strchr(retval, 0)", "strcmp(retval, 0)", "strcoll(retval, 0)", "strcpy(retval, 0)", "strcspn(retval, 0)", "strndup(retval, 0)", "strnlen(retval, 0)", "strpbrk(retval, 0)", "strrchr(retval, 0)", "strsep(retval, 0)", "strspn(retval, 0)", "strstr(retval, 0)", "strtod(retval, 0)", "strtof(retval, 0)", "strtok(retval, 0)", "strtold(retval, 0)", "symlink(retval, 0)", "tempnam(retval, 0)", "timelib_apply_localtime(retval, 0)", "timelib_date_to_int(retval, 0)", "timelib_diff(retval, 0)", "timelib_do_rel_normalize(retval, 0)", "timelib_dump_date(retval, 0)", "timelib_parse_tzfile(retval, 0)", "timelib_set_timezone(retval, 0)", "timelib_time_tz_abbr_update(retval, 0)", "timelib_time_tz_name_update(retval, 0)", "timelib_timezone_id_is_valid(retval, 0)", "timelib_unixtime2gmt(retval, 0)", "timelib_unixtime2local(retval, 0)", "timelib_update_ts(retval, 0)", "timer_gettime(retval, 0)", "timespec_get(retval, 0)", "timezone_initialize(retval, 0)", "truncate(retval, 0)", "tsrm_realpath(retval, 0)", "utime(retval, 0)", "utimes(retval, 0)", "virtual_access(retval, 0)", "virtual_chdir_file(retval, 0)", "virtual_chmod(retval, 0)", "virtual_creat(retval, 0)", "virtual_filepath(retval, 0)", "virtual_fopen(retval, 0)", "virtual_getcwd(retval, 0)", "virtual_lstat(retval, 0)", "virtual_mkdir(retval, 0)", "virtual_open(retval, 0)", "virtual_popen(retval, 0)", "virtual_realpath(retval, 0)", "virtual_rename(retval, 0)", "virtual_stat(retval, 0)", "virtual_utime(retval, 0)", "vprintf(retval, 0)", "vwprintf(retval, 0)", "wcpcpy(retval, 0)", "wcscasecmp(retval, 0)", "wcscat(retval, 0)", "wcschr(retval, 0)", "wcscmp(retval, 0)", "wcscoll(retval, 0)", "wcscpy(retval, 0)", "wcscspn(retval, 0)", "wcsnlen(retval, 0)", "wcspbrk(retval, 0)", "wcsrchr(retval, 0)", "wcsspn(retval, 0)", "wcsstr(retval, 0)", "wcstod(retval, 0)", "wcstof(retval, 0)", "wcstold(retval, 0)", "wctomb(retval, 0)", "wprintf(retval, 0)", "zend_add_literal(retval, 0)", "zend_add_to_list(retval, 0)", "zend_atoi(retval, 0)", "zend_atol(retval, 0)", "zend_binary_zval_strcasecmp(retval, 0)", "zend_binary_zval_strcmp(retval, 0)", "zend_call_function(retval, 0)", "zend_check_protected(retval, 0)", "zend_class_implements(retval, 0)", "zend_compare_file_handles(retval, 0)", "zend_copy_constants(retval, 0)", "zend_delete_global_variable(retval, 0)", "zend_dirname(retval, 0)", "zend_disable_class(retval, 0)", "zend_disable_function(retval, 0)", "zend_do_begin_class_member_function_call(retval, 0)", "zend_do_begin_dynamic_function_call(retval, 0)", "zend_do_begin_function_call(retval, 0)", "zend_do_begin_namespace(retval, 0)", "zend_do_begin_new_object(retval, 0)", "zend_do_begin_qm_op(retval, 0)", "zend_do_boolean_and_begin(retval, 0)", "zend_do_boolean_or_begin(retval, 0)", "zend_do_case_after_statement(retval, 0)", "zend_do_clone(retval, 0)", "zend_do_declare_class_constant(retval, 0)", "zend_do_declare_constant(retval, 0)", "zend_do_declare_stmt(retval, 0)", "zend_do_default_before_statement(retval, 0)", "zend_do_end_class_declaration(retval, 0)", "zend_do_exit(retval, 0)", "zend_do_fetch_class(retval, 0)", "zend_do_fetch_lexical_variable(retval, 0)", "zend_do_fetch_static_member(retval, 0)", "zend_do_for_before_statement(retval, 0)", "zend_do_for_cond(retval, 0)", "zend_do_foreach_end(retval, 0)", "zend_do_if_after_statement(retval, 0)", "zend_do_if_cond(retval, 0)", "zend_do_implement_interface(retval, 0)", "zend_do_implement_trait(retval, 0)", "zend_do_inherit_interfaces(retval, 0)", "zend_do_inheritance(retval, 0)", "zend_do_list_end(retval, 0)", "zend_do_mark_last_catch(retval, 0)", "zend_do_print(retval, 0)", "zend_do_return(retval, 0)", "zend_do_shell_exec(retval, 0)", "zend_do_verify_access_types(retval, 0)", "zend_do_while_cond(retval, 0)", "zend_do_while_end(retval, 0)", "zend_fcall_info_argn(retval, 0)", "zend_fcall_info_args(retval, 0)", "zend_fcall_info_args_clear(retval, 0)", "zend_get_class_fetch_type(retval, 0)", "zend_get_compiled_variable_value(retval, 0)", "zend_get_hash_value(retval, 0)", "zend_hash_apply(retval, 0)", "zend_hash_func(retval, 0)", "zend_hash_get_current_key_type_ex(retval, 0)", "zend_hash_get_pointer(retval, 0)", "zend_hash_index_exists(retval, 0)", "zend_hash_internal_pointer_end_ex(retval, 0)", "zend_hash_internal_pointer_reset_ex(retval, 0)", "zend_hash_move_backwards_ex(retval, 0)", "zend_hash_move_forward_ex(retval, 0)", "zend_hash_reverse_apply(retval, 0)", "zend_hash_set_pointer(retval, 0)", "zend_hex_strtod(retval, 0)", "zend_html_puts(retval, 0)", "zend_ini_boolean_displayer_cb(retval, 0)", "zend_ini_color_displayer_cb(retval, 0)", "zend_init_list(retval, 0)", "zend_initialize_class_data(retval, 0)", "zend_inline_hash_func(retval, 0)", "zend_is_auto_global(retval, 0)", "zend_iterator_unwrap(retval, 0)", "zend_list_insert(retval, 0)", "zend_llist_add_element(retval, 0)", "zend_llist_apply(retval, 0)", "zend_llist_apply_with_del(retval, 0)", "zend_llist_copy(retval, 0)", "zend_llist_get_first_ex(retval, 0)", "zend_llist_get_last_ex(retval, 0)", "zend_llist_get_next_ex(retval, 0)", "zend_llist_get_prev_ex(retval, 0)", "zend_llist_prepend_element(retval, 0)", "zend_llist_sort(retval, 0)", "zend_make_callable(retval, 0)", "zend_multibyte_set_script_encoding(retval, 0)", "zend_multibyte_set_script_encoding_by_string(retval, 0)", "zend_object_create_proxy(retval, 0)", "zend_object_std_init(retval, 0)", "zend_object_store_set_object(retval, 0)", "zend_objects_destroy_object(retval, 0)", "zend_objects_new(retval, 0)", "zend_objects_store_init(retval, 0)", "zend_oct_strtod(retval, 0)", "zend_print_zval(retval, 0)", "zend_print_zval_r(retval, 0)", "zend_ptr_stack_apply(retval, 0)", "zend_ptr_stack_init_ex(retval, 0)", "zend_ptr_stack_n_pop(retval, 0)", "zend_ptr_stack_n_push(retval, 0)", "zend_ptr_stack_push(retval, 0)", "zend_quick_get_constant(retval, 0)", "zend_register_ini_entries(retval, 0)", "zend_resolve_non_class_name(retval, 0)", "zend_stack_top(retval, 0)", "zend_startup(retval, 0)", "zend_std_get_debug_info(retval, 0)", "zend_str_tolower(retval, 0)", "zend_str_tolower_dup(retval, 0)", "zend_stream_open(retval, 0)", "zend_string_to_double(retval, 0)", "zend_strndup(retval, 0)", "zend_strtod(retval, 0)", "zend_ts_hash_apply(retval, 0)", "zend_ts_hash_func(retval, 0)", "zend_ts_hash_index_exists(retval, 0)", "zend_ts_hash_reverse_apply(retval, 0)", "zend_user_it_get_current_data(retval, 0)", "zend_user_it_new_iterator(retval, 0)", "zval_from_error_container(retval, 0)", "zval_set_isref_to_p(retval, 0)", "zval_update_constant(retval, 0)", "zval_update_constant_inline_change(retval, 0)", "zval_update_constant_no_inline_change(retval, 0)", "zval_set_refcount_p((&key), 0)", "zval_set_refcount_p((&member), 0)", "zval_set_refcount_p((&obj), 0)", "zval_set_refcount_p((&object), 0)", "zval_set_refcount_p((&retval), 0)", "zval_set_refcount_p((&tmp_member), 0)", "zval_set_refcount_p((&type), 0)", "zval_set_refcount_p((&value), 0)", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p(retval, (0 * type))", "zval_set_refcount_p(retval, (0 * value))", "zval_set_refcount_p(retval, (0))", "zval_set_refcount_p(retval, (key != 0))", "zval_set_refcount_p(retval, (key == 0))", "zval_set_refcount_p(retval, (member != 0))", "zval_set_refcount_p(retval, (member != retval))", "zval_set_refcount_p(retval, (member == 0))", "zval_set_refcount_p(retval, (member == retval))", "zval_set_refcount_p(retval, (obj != 0))", "zval_set_refcount_p(retval, (obj == 0))", "zval_set_refcount_p(retval, (object != 0))", "zval_set_refcount_p(retval, (object != member))", "zval_set_refcount_p(retval, (object != retval))", "zval_set_refcount_p(retval, (object == 0))", "zval_set_refcount_p(retval, (object == member))", "zval_set_refcount_p(retval, (object == retval))", "zval_set_refcount_p(retval, (retval != 0))", "zval_set_refcount_p(retval, (retval == 0))", "zval_set_refcount_p(retval, (tmp_member != 0))", "zval_set_refcount_p(retval, (tmp_member == 0))", "zval_set_refcount_p(retval, (type != 0))", "zval_set_refcount_p(retval, (type != value))", "zval_set_refcount_p(retval, (type * value))", "zval_set_refcount_p(retval, (type + 0))", "zval_set_refcount_p(retval, (type + value))", "zval_set_refcount_p(retval, (type - 0))", "zval_set_refcount_p(retval, (type - value))", "zval_set_refcount_p(retval, (type == 0))", "zval_set_refcount_p(retval, (type == value))", "zval_set_refcount_p(retval, (value != 0))", "zval_set_refcount_p(retval, (value * type))", "zval_set_refcount_p(retval, (value + 0))", "zval_set_refcount_p(retval, (value - 0))", "zval_set_refcount_p(retval, (value == 0))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.37069266373838, -4.78783810323838, -6.15202956323838, -6.8222776532383786, -7.11662845323838, -6.58923436323838, -6.58923436323838, -6.58923436323838]
								}, {
									"case":	2,
									"scores":	[-4.15445549323838]
								}, {
									"case":	3,
									"scores":	[-4.15445549323838]
								}, {
									"case":	4,
									"scores":	[-4.15445549323838]
								}, {
									"case":	5,
									"scores":	[-4.15445549323838]
								}, {
									"case":	6,
									"scores":	[-4.15445549323838]
								}, {
									"case":	7,
									"scores":	[-4.15445549323838]
								}, {
									"case":	8,
									"scores":	[-4.15445549323838]
								}, {
									"case":	9,
									"scores":	[-4.15445549323838]
								}, {
									"case":	10,
									"scores":	[-4.15445549323838]
								}, {
									"case":	11,
									"scores":	[-4.15445549323838]
								}, {
									"case":	12,
									"scores":	[-4.15445549323838]
								}, {
									"case":	13,
									"scores":	[-4.15445549323838]
								}, {
									"case":	14,
									"scores":	[-4.15445549323838]
								}, {
									"case":	15,
									"scores":	[-4.15445549323838]
								}, {
									"case":	16,
									"scores":	[-4.15445549323838]
								}, {
									"case":	17,
									"scores":	[-4.15445549323838]
								}, {
									"case":	18,
									"scores":	[-4.15445549323838]
								}, {
									"case":	19,
									"scores":	[-4.15445549323838]
								}, {
									"case":	20,
									"scores":	[-4.15445549323838]
								}, {
									"case":	21,
									"scores":	[-4.15445549323838]
								}, {
									"case":	22,
									"scores":	[-4.15445549323838]
								}, {
									"case":	23,
									"scores":	[-4.15445549323838]
								}, {
									"case":	24,
									"scores":	[-4.15445549323838]
								}, {
									"case":	25,
									"scores":	[-4.15445549323838]
								}, {
									"case":	26,
									"scores":	[-4.15445549323838]
								}, {
									"case":	27,
									"scores":	[-4.15445549323838]
								}, {
									"case":	28,
									"scores":	[-4.15445549323838]
								}, {
									"case":	29,
									"scores":	[-4.15445549323838]
								}, {
									"case":	30,
									"scores":	[-4.15445549323838]
								}, {
									"case":	31,
									"scores":	[-4.15445549323838]
								}, {
									"case":	32,
									"scores":	[-4.15445549323838]
								}, {
									"case":	33,
									"scores":	[-4.15445549323838]
								}, {
									"case":	34,
									"scores":	[-4.15445549323838]
								}, {
									"case":	35,
									"scores":	[-4.15445549323838]
								}, {
									"case":	36,
									"scores":	[-4.15445549323838]
								}, {
									"case":	37,
									"scores":	[-4.15445549323838]
								}, {
									"case":	38,
									"scores":	[-4.15445549323838]
								}, {
									"case":	39,
									"scores":	[-4.15445549323838]
								}, {
									"case":	40,
									"scores":	[-4.15445549323838]
								}, {
									"case":	41,
									"scores":	[-4.15445549323838]
								}, {
									"case":	42,
									"scores":	[-4.15445549323838]
								}, {
									"case":	43,
									"scores":	[-4.15445549323838]
								}, {
									"case":	44,
									"scores":	[-4.15445549323838]
								}, {
									"case":	45,
									"scores":	[-4.15445549323838]
								}, {
									"case":	46,
									"scores":	[-4.15445549323838]
								}, {
									"case":	47,
									"scores":	[-4.15445549323838]
								}, {
									"case":	48,
									"scores":	[-4.15445549323838]
								}, {
									"case":	49,
									"scores":	[-4.15445549323838]
								}, {
									"case":	50,
									"scores":	[-4.15445549323838]
								}, {
									"case":	51,
									"scores":	[-4.15445549323838]
								}, {
									"case":	52,
									"scores":	[-4.15445549323838]
								}, {
									"case":	53,
									"scores":	[-4.15445549323838]
								}, {
									"case":	54,
									"scores":	[-4.15445549323838]
								}, {
									"case":	55,
									"scores":	[-4.15445549323838]
								}, {
									"case":	56,
									"scores":	[-4.15445549323838]
								}, {
									"case":	57,
									"scores":	[-4.15445549323838]
								}, {
									"case":	58,
									"scores":	[-4.15445549323838]
								}, {
									"case":	59,
									"scores":	[-4.15445549323838]
								}, {
									"case":	60,
									"scores":	[-4.15445549323838]
								}, {
									"case":	61,
									"scores":	[-4.15445549323838]
								}, {
									"case":	62,
									"scores":	[-4.15445549323838]
								}, {
									"case":	63,
									"scores":	[-4.15445549323838]
								}, {
									"case":	64,
									"scores":	[-4.15445549323838]
								}, {
									"case":	65,
									"scores":	[-4.15445549323838]
								}, {
									"case":	66,
									"scores":	[-4.15445549323838]
								}, {
									"case":	67,
									"scores":	[-4.15445549323838]
								}, {
									"case":	68,
									"scores":	[-4.15445549323838]
								}, {
									"case":	69,
									"scores":	[-4.15445549323838]
								}, {
									"case":	70,
									"scores":	[-4.15445549323838]
								}, {
									"case":	71,
									"scores":	[-4.15445549323838]
								}, {
									"case":	72,
									"scores":	[-4.15445549323838]
								}, {
									"case":	73,
									"scores":	[-4.15445549323838]
								}, {
									"case":	74,
									"scores":	[-4.15445549323838]
								}, {
									"case":	75,
									"scores":	[-4.15445549323838]
								}, {
									"case":	76,
									"scores":	[-4.15445549323838]
								}, {
									"case":	77,
									"scores":	[-4.15445549323838]
								}, {
									"case":	78,
									"scores":	[-4.15445549323838]
								}, {
									"case":	79,
									"scores":	[-4.15445549323838]
								}, {
									"case":	80,
									"scores":	[-4.15445549323838]
								}, {
									"case":	81,
									"scores":	[-4.15445549323838]
								}, {
									"case":	82,
									"scores":	[-4.15445549323838]
								}, {
									"case":	83,
									"scores":	[-4.15445549323838]
								}, {
									"case":	84,
									"scores":	[-4.15445549323838]
								}, {
									"case":	85,
									"scores":	[-4.15445549323838]
								}, {
									"case":	86,
									"scores":	[-4.15445549323838]
								}, {
									"case":	87,
									"scores":	[-4.15445549323838]
								}, {
									"case":	88,
									"scores":	[-4.15445549323838]
								}, {
									"case":	89,
									"scores":	[-4.15445549323838]
								}, {
									"case":	90,
									"scores":	[-4.15445549323838]
								}, {
									"case":	91,
									"scores":	[-4.15445549323838]
								}, {
									"case":	92,
									"scores":	[-4.15445549323838]
								}, {
									"case":	93,
									"scores":	[-4.15445549323838]
								}, {
									"case":	94,
									"scores":	[-4.15445549323838]
								}, {
									"case":	95,
									"scores":	[-4.15445549323838]
								}, {
									"case":	96,
									"scores":	[-4.15445549323838]
								}, {
									"case":	97,
									"scores":	[-4.15445549323838]
								}, {
									"case":	98,
									"scores":	[-4.15445549323838]
								}, {
									"case":	99,
									"scores":	[-4.15445549323838]
								}, {
									"case":	100,
									"scores":	[-4.15445549323838]
								}, {
									"case":	101,
									"scores":	[-4.15445549323838]
								}, {
									"case":	102,
									"scores":	[-4.15445549323838]
								}, {
									"case":	103,
									"scores":	[-4.15445549323838]
								}, {
									"case":	104,
									"scores":	[-4.15445549323838]
								}, {
									"case":	105,
									"scores":	[-4.15445549323838]
								}, {
									"case":	106,
									"scores":	[-4.15445549323838]
								}, {
									"case":	107,
									"scores":	[-4.15445549323838]
								}, {
									"case":	108,
									"scores":	[-4.15445549323838]
								}, {
									"case":	109,
									"scores":	[-4.15445549323838]
								}, {
									"case":	110,
									"scores":	[-4.15445549323838]
								}, {
									"case":	111,
									"scores":	[-4.15445549323838]
								}, {
									"case":	112,
									"scores":	[-4.15445549323838]
								}, {
									"case":	113,
									"scores":	[-4.15445549323838]
								}, {
									"case":	114,
									"scores":	[-4.15445549323838]
								}, {
									"case":	115,
									"scores":	[-4.15445549323838]
								}, {
									"case":	116,
									"scores":	[-4.15445549323838]
								}, {
									"case":	117,
									"scores":	[-4.15445549323838]
								}, {
									"case":	118,
									"scores":	[-4.15445549323838]
								}, {
									"case":	119,
									"scores":	[-4.15445549323838]
								}, {
									"case":	120,
									"scores":	[-4.15445549323838]
								}, {
									"case":	121,
									"scores":	[-4.15445549323838]
								}, {
									"case":	122,
									"scores":	[-4.15445549323838]
								}, {
									"case":	123,
									"scores":	[-4.15445549323838]
								}, {
									"case":	124,
									"scores":	[-4.15445549323838]
								}, {
									"case":	125,
									"scores":	[-4.15445549323838]
								}, {
									"case":	126,
									"scores":	[-4.15445549323838]
								}, {
									"case":	127,
									"scores":	[-4.15445549323838]
								}, {
									"case":	128,
									"scores":	[-4.15445549323838]
								}, {
									"case":	129,
									"scores":	[-4.15445549323838]
								}, {
									"case":	130,
									"scores":	[-4.15445549323838]
								}, {
									"case":	131,
									"scores":	[-4.15445549323838]
								}, {
									"case":	132,
									"scores":	[-4.15445549323838]
								}, {
									"case":	133,
									"scores":	[-4.15445549323838]
								}, {
									"case":	134,
									"scores":	[-4.15445549323838]
								}, {
									"case":	135,
									"scores":	[-4.15445549323838]
								}, {
									"case":	136,
									"scores":	[-4.15445549323838]
								}, {
									"case":	137,
									"scores":	[-4.15445549323838]
								}, {
									"case":	138,
									"scores":	[-4.15445549323838]
								}, {
									"case":	139,
									"scores":	[-4.15445549323838]
								}, {
									"case":	140,
									"scores":	[-4.15445549323838]
								}, {
									"case":	141,
									"scores":	[-4.15445549323838]
								}, {
									"case":	142,
									"scores":	[-4.15445549323838]
								}, {
									"case":	143,
									"scores":	[-4.15445549323838]
								}, {
									"case":	144,
									"scores":	[-4.15445549323838]
								}, {
									"case":	145,
									"scores":	[-4.15445549323838]
								}, {
									"case":	146,
									"scores":	[-4.15445549323838]
								}, {
									"case":	147,
									"scores":	[-4.15445549323838]
								}, {
									"case":	148,
									"scores":	[-4.15445549323838]
								}, {
									"case":	149,
									"scores":	[-4.15445549323838]
								}, {
									"case":	150,
									"scores":	[-4.15445549323838]
								}, {
									"case":	151,
									"scores":	[-4.15445549323838]
								}, {
									"case":	152,
									"scores":	[-4.15445549323838]
								}, {
									"case":	153,
									"scores":	[-4.15445549323838]
								}, {
									"case":	154,
									"scores":	[-4.15445549323838]
								}, {
									"case":	155,
									"scores":	[-4.15445549323838]
								}, {
									"case":	156,
									"scores":	[-4.15445549323838]
								}, {
									"case":	157,
									"scores":	[-4.15445549323838]
								}, {
									"case":	158,
									"scores":	[-4.15445549323838]
								}, {
									"case":	159,
									"scores":	[-4.15445549323838]
								}, {
									"case":	160,
									"scores":	[-4.15445549323838]
								}, {
									"case":	161,
									"scores":	[-4.15445549323838]
								}, {
									"case":	162,
									"scores":	[-4.15445549323838]
								}, {
									"case":	163,
									"scores":	[-4.15445549323838]
								}, {
									"case":	164,
									"scores":	[-4.15445549323838]
								}, {
									"case":	165,
									"scores":	[-4.15445549323838]
								}, {
									"case":	166,
									"scores":	[-4.15445549323838]
								}, {
									"case":	167,
									"scores":	[-4.15445549323838]
								}, {
									"case":	168,
									"scores":	[-4.15445549323838]
								}, {
									"case":	169,
									"scores":	[-4.15445549323838]
								}, {
									"case":	170,
									"scores":	[-4.15445549323838]
								}, {
									"case":	171,
									"scores":	[-4.15445549323838]
								}, {
									"case":	172,
									"scores":	[-4.15445549323838]
								}, {
									"case":	173,
									"scores":	[-4.15445549323838]
								}, {
									"case":	174,
									"scores":	[-4.15445549323838]
								}, {
									"case":	175,
									"scores":	[-4.15445549323838]
								}, {
									"case":	176,
									"scores":	[-4.15445549323838]
								}, {
									"case":	177,
									"scores":	[-4.15445549323838]
								}, {
									"case":	178,
									"scores":	[-4.15445549323838]
								}, {
									"case":	179,
									"scores":	[-4.15445549323838]
								}, {
									"case":	180,
									"scores":	[-4.15445549323838]
								}, {
									"case":	181,
									"scores":	[-4.15445549323838]
								}, {
									"case":	182,
									"scores":	[-4.15445549323838]
								}, {
									"case":	183,
									"scores":	[-4.15445549323838]
								}, {
									"case":	184,
									"scores":	[-4.15445549323838]
								}, {
									"case":	185,
									"scores":	[-4.15445549323838]
								}, {
									"case":	186,
									"scores":	[-4.15445549323838]
								}, {
									"case":	187,
									"scores":	[-4.15445549323838]
								}, {
									"case":	188,
									"scores":	[-4.15445549323838]
								}, {
									"case":	189,
									"scores":	[-4.15445549323838]
								}, {
									"case":	190,
									"scores":	[-4.15445549323838]
								}, {
									"case":	191,
									"scores":	[-4.15445549323838]
								}, {
									"case":	192,
									"scores":	[-4.15445549323838]
								}, {
									"case":	193,
									"scores":	[-4.15445549323838]
								}, {
									"case":	194,
									"scores":	[-4.15445549323838]
								}, {
									"case":	195,
									"scores":	[-4.15445549323838]
								}, {
									"case":	196,
									"scores":	[-4.15445549323838]
								}, {
									"case":	197,
									"scores":	[-4.15445549323838]
								}, {
									"case":	198,
									"scores":	[-4.15445549323838]
								}, {
									"case":	199,
									"scores":	[-4.15445549323838]
								}, {
									"case":	200,
									"scores":	[-4.15445549323838]
								}, {
									"case":	201,
									"scores":	[-4.15445549323838]
								}, {
									"case":	202,
									"scores":	[-4.15445549323838]
								}, {
									"case":	203,
									"scores":	[-4.15445549323838]
								}, {
									"case":	204,
									"scores":	[-4.15445549323838]
								}, {
									"case":	205,
									"scores":	[-4.15445549323838]
								}, {
									"case":	206,
									"scores":	[-4.15445549323838]
								}, {
									"case":	207,
									"scores":	[-4.15445549323838]
								}, {
									"case":	208,
									"scores":	[-4.15445549323838]
								}, {
									"case":	209,
									"scores":	[-4.15445549323838]
								}, {
									"case":	210,
									"scores":	[-4.15445549323838]
								}, {
									"case":	211,
									"scores":	[-4.15445549323838]
								}, {
									"case":	212,
									"scores":	[-4.15445549323838]
								}, {
									"case":	213,
									"scores":	[-4.15445549323838]
								}, {
									"case":	214,
									"scores":	[-4.15445549323838]
								}, {
									"case":	215,
									"scores":	[-4.15445549323838]
								}, {
									"case":	216,
									"scores":	[-4.15445549323838]
								}, {
									"case":	217,
									"scores":	[-4.15445549323838]
								}, {
									"case":	218,
									"scores":	[-4.15445549323838]
								}, {
									"case":	219,
									"scores":	[-4.15445549323838]
								}, {
									"case":	220,
									"scores":	[-4.15445549323838]
								}, {
									"case":	221,
									"scores":	[-4.15445549323838]
								}, {
									"case":	222,
									"scores":	[-4.15445549323838]
								}, {
									"case":	223,
									"scores":	[-4.15445549323838]
								}, {
									"case":	224,
									"scores":	[-4.15445549323838]
								}, {
									"case":	225,
									"scores":	[-4.15445549323838]
								}, {
									"case":	226,
									"scores":	[-4.15445549323838]
								}, {
									"case":	227,
									"scores":	[-4.15445549323838]
								}, {
									"case":	228,
									"scores":	[-4.15445549323838]
								}, {
									"case":	229,
									"scores":	[-4.15445549323838]
								}, {
									"case":	230,
									"scores":	[-4.15445549323838]
								}, {
									"case":	231,
									"scores":	[-4.15445549323838]
								}, {
									"case":	232,
									"scores":	[-4.15445549323838]
								}, {
									"case":	233,
									"scores":	[-4.15445549323838]
								}, {
									"case":	234,
									"scores":	[-4.15445549323838]
								}, {
									"case":	235,
									"scores":	[-4.15445549323838]
								}, {
									"case":	236,
									"scores":	[-4.15445549323838]
								}, {
									"case":	237,
									"scores":	[-4.15445549323838]
								}, {
									"case":	238,
									"scores":	[-4.15445549323838]
								}, {
									"case":	239,
									"scores":	[-4.15445549323838]
								}, {
									"case":	240,
									"scores":	[-4.15445549323838]
								}, {
									"case":	241,
									"scores":	[-4.15445549323838]
								}, {
									"case":	242,
									"scores":	[-4.15445549323838]
								}, {
									"case":	243,
									"scores":	[-4.15445549323838]
								}, {
									"case":	244,
									"scores":	[-4.15445549323838]
								}, {
									"case":	245,
									"scores":	[-4.15445549323838]
								}, {
									"case":	246,
									"scores":	[-4.15445549323838]
								}, {
									"case":	247,
									"scores":	[-4.15445549323838]
								}, {
									"case":	248,
									"scores":	[-4.15445549323838]
								}, {
									"case":	249,
									"scores":	[-4.15445549323838]
								}, {
									"case":	250,
									"scores":	[-4.15445549323838]
								}, {
									"case":	251,
									"scores":	[-4.15445549323838]
								}, {
									"case":	252,
									"scores":	[-4.15445549323838]
								}, {
									"case":	253,
									"scores":	[-4.15445549323838]
								}, {
									"case":	254,
									"scores":	[-4.15445549323838]
								}, {
									"case":	255,
									"scores":	[-4.15445549323838]
								}, {
									"case":	256,
									"scores":	[-4.15445549323838]
								}, {
									"case":	257,
									"scores":	[-4.15445549323838]
								}, {
									"case":	258,
									"scores":	[-4.15445549323838]
								}, {
									"case":	259,
									"scores":	[-4.15445549323838]
								}, {
									"case":	260,
									"scores":	[-4.15445549323838]
								}, {
									"case":	261,
									"scores":	[-4.15445549323838]
								}, {
									"case":	262,
									"scores":	[-4.15445549323838]
								}, {
									"case":	263,
									"scores":	[-4.15445549323838]
								}, {
									"case":	264,
									"scores":	[-4.15445549323838]
								}, {
									"case":	265,
									"scores":	[-4.15445549323838]
								}, {
									"case":	266,
									"scores":	[-4.15445549323838]
								}, {
									"case":	267,
									"scores":	[-4.15445549323838]
								}, {
									"case":	268,
									"scores":	[-4.15445549323838]
								}, {
									"case":	269,
									"scores":	[-4.15445549323838]
								}, {
									"case":	270,
									"scores":	[-4.15445549323838]
								}, {
									"case":	271,
									"scores":	[-4.15445549323838]
								}, {
									"case":	272,
									"scores":	[-4.15445549323838]
								}, {
									"case":	273,
									"scores":	[-4.15445549323838]
								}, {
									"case":	274,
									"scores":	[-4.15445549323838]
								}, {
									"case":	275,
									"scores":	[-4.15445549323838]
								}, {
									"case":	276,
									"scores":	[-4.15445549323838]
								}, {
									"case":	277,
									"scores":	[-4.15445549323838]
								}, {
									"case":	278,
									"scores":	[-4.15445549323838]
								}, {
									"case":	279,
									"scores":	[-4.15445549323838]
								}, {
									"case":	280,
									"scores":	[-4.15445549323838]
								}, {
									"case":	281,
									"scores":	[-4.15445549323838]
								}, {
									"case":	282,
									"scores":	[-4.15445549323838]
								}, {
									"case":	283,
									"scores":	[-4.15445549323838]
								}, {
									"case":	284,
									"scores":	[-4.15445549323838]
								}, {
									"case":	285,
									"scores":	[-4.15445549323838]
								}, {
									"case":	286,
									"scores":	[-4.15445549323838]
								}, {
									"case":	287,
									"scores":	[-4.15445549323838]
								}, {
									"case":	288,
									"scores":	[-4.15445549323838]
								}, {
									"case":	289,
									"scores":	[-4.15445549323838]
								}, {
									"case":	290,
									"scores":	[-4.15445549323838]
								}, {
									"case":	291,
									"scores":	[-4.15445549323838]
								}, {
									"case":	292,
									"scores":	[-4.15445549323838]
								}, {
									"case":	293,
									"scores":	[-4.15445549323838]
								}, {
									"case":	294,
									"scores":	[-4.15445549323838]
								}, {
									"case":	295,
									"scores":	[-4.15445549323838]
								}, {
									"case":	296,
									"scores":	[-4.15445549323838]
								}, {
									"case":	297,
									"scores":	[-4.15445549323838]
								}, {
									"case":	298,
									"scores":	[-4.15445549323838]
								}, {
									"case":	299,
									"scores":	[-4.15445549323838]
								}, {
									"case":	300,
									"scores":	[-4.15445549323838]
								}, {
									"case":	301,
									"scores":	[-4.15445549323838]
								}, {
									"case":	302,
									"scores":	[-4.15445549323838]
								}, {
									"case":	303,
									"scores":	[-4.15445549323838]
								}, {
									"case":	304,
									"scores":	[-4.15445549323838]
								}, {
									"case":	305,
									"scores":	[-4.15445549323838]
								}, {
									"case":	306,
									"scores":	[-4.15445549323838]
								}, {
									"case":	307,
									"scores":	[-4.15445549323838]
								}, {
									"case":	308,
									"scores":	[-4.15445549323838]
								}, {
									"case":	309,
									"scores":	[-4.15445549323838]
								}, {
									"case":	310,
									"scores":	[-4.15445549323838]
								}, {
									"case":	311,
									"scores":	[-4.15445549323838]
								}, {
									"case":	312,
									"scores":	[-4.15445549323838]
								}, {
									"case":	313,
									"scores":	[-4.15445549323838]
								}, {
									"case":	314,
									"scores":	[-4.15445549323838]
								}, {
									"case":	315,
									"scores":	[-4.15445549323838]
								}, {
									"case":	316,
									"scores":	[-4.15445549323838]
								}, {
									"case":	317,
									"scores":	[-4.15445549323838]
								}, {
									"case":	318,
									"scores":	[-4.15445549323838]
								}, {
									"case":	319,
									"scores":	[-4.15445549323838]
								}, {
									"case":	320,
									"scores":	[-4.15445549323838]
								}, {
									"case":	321,
									"scores":	[-4.15445549323838]
								}, {
									"case":	322,
									"scores":	[-4.15445549323838]
								}, {
									"case":	323,
									"scores":	[-4.15445549323838]
								}, {
									"case":	324,
									"scores":	[-4.15445549323838]
								}, {
									"case":	325,
									"scores":	[-4.15445549323838]
								}, {
									"case":	326,
									"scores":	[-4.15445549323838]
								}, {
									"case":	327,
									"scores":	[-4.15445549323838]
								}, {
									"case":	328,
									"scores":	[-4.15445549323838]
								}, {
									"case":	329,
									"scores":	[-4.15445549323838]
								}, {
									"case":	330,
									"scores":	[-4.15445549323838]
								}, {
									"case":	331,
									"scores":	[-4.15445549323838]
								}, {
									"case":	332,
									"scores":	[-4.15445549323838]
								}, {
									"case":	333,
									"scores":	[-4.15445549323838]
								}, {
									"case":	334,
									"scores":	[-4.15445549323838]
								}, {
									"case":	335,
									"scores":	[-4.15445549323838]
								}, {
									"case":	336,
									"scores":	[-4.15445549323838]
								}, {
									"case":	337,
									"scores":	[-4.15445549323838]
								}, {
									"case":	338,
									"scores":	[-4.15445549323838]
								}, {
									"case":	339,
									"scores":	[-4.15445549323838]
								}, {
									"case":	340,
									"scores":	[-4.15445549323838]
								}, {
									"case":	341,
									"scores":	[-4.15445549323838]
								}, {
									"case":	342,
									"scores":	[-4.15445549323838]
								}, {
									"case":	343,
									"scores":	[-4.15445549323838]
								}, {
									"case":	344,
									"scores":	[-4.15445549323838]
								}, {
									"case":	345,
									"scores":	[-4.15445549323838]
								}, {
									"case":	346,
									"scores":	[-4.15445549323838]
								}, {
									"case":	347,
									"scores":	[-4.15445549323838]
								}, {
									"case":	348,
									"scores":	[-4.15445549323838]
								}, {
									"case":	349,
									"scores":	[-4.15445549323838]
								}, {
									"case":	350,
									"scores":	[-4.15445549323838]
								}, {
									"case":	351,
									"scores":	[-4.15445549323838]
								}, {
									"case":	352,
									"scores":	[-4.15445549323838]
								}, {
									"case":	353,
									"scores":	[-4.15445549323838]
								}, {
									"case":	354,
									"scores":	[-4.15445549323838]
								}, {
									"case":	355,
									"scores":	[-4.15445549323838]
								}, {
									"case":	356,
									"scores":	[-4.15445549323838]
								}, {
									"case":	357,
									"scores":	[-4.15445549323838]
								}, {
									"case":	358,
									"scores":	[-4.15445549323838]
								}, {
									"case":	359,
									"scores":	[-4.15445549323838]
								}, {
									"case":	360,
									"scores":	[-4.15445549323838]
								}, {
									"case":	361,
									"scores":	[-4.15445549323838]
								}, {
									"case":	362,
									"scores":	[-4.15445549323838]
								}, {
									"case":	363,
									"scores":	[-4.15445549323838]
								}, {
									"case":	364,
									"scores":	[-4.15445549323838]
								}, {
									"case":	365,
									"scores":	[-4.15445549323838]
								}, {
									"case":	366,
									"scores":	[-4.15445549323838]
								}, {
									"case":	367,
									"scores":	[-4.15445549323838]
								}, {
									"case":	368,
									"scores":	[-4.15445549323838]
								}, {
									"case":	369,
									"scores":	[-4.15445549323838]
								}, {
									"case":	370,
									"scores":	[-4.15445549323838]
								}, {
									"case":	371,
									"scores":	[-4.15445549323838]
								}, {
									"case":	372,
									"scores":	[-4.15445549323838]
								}, {
									"case":	373,
									"scores":	[-4.15445549323838]
								}, {
									"case":	374,
									"scores":	[-4.15445549323838]
								}, {
									"case":	375,
									"scores":	[-4.15445549323838]
								}, {
									"case":	376,
									"scores":	[-4.15445549323838]
								}, {
									"case":	377,
									"scores":	[-4.15445549323838]
								}, {
									"case":	378,
									"scores":	[-4.15445549323838]
								}, {
									"case":	379,
									"scores":	[-4.15445549323838]
								}, {
									"case":	380,
									"scores":	[-4.15445549323838]
								}, {
									"case":	381,
									"scores":	[-4.15445549323838]
								}, {
									"case":	382,
									"scores":	[-4.15445549323838]
								}, {
									"case":	383,
									"scores":	[-4.15445549323838]
								}, {
									"case":	384,
									"scores":	[-4.15445549323838]
								}, {
									"case":	385,
									"scores":	[-4.15445549323838]
								}, {
									"case":	386,
									"scores":	[-4.15445549323838]
								}, {
									"case":	387,
									"scores":	[-4.15445549323838]
								}, {
									"case":	388,
									"scores":	[-4.15445549323838]
								}, {
									"case":	389,
									"scores":	[-4.15445549323838]
								}, {
									"case":	390,
									"scores":	[-4.15445549323838]
								}, {
									"case":	391,
									"scores":	[-4.15445549323838]
								}, {
									"case":	392,
									"scores":	[-4.15445549323838]
								}, {
									"case":	393,
									"scores":	[-4.15445549323838]
								}, {
									"case":	394,
									"scores":	[-4.15445549323838]
								}, {
									"case":	395,
									"scores":	[-4.15445549323838]
								}, {
									"case":	396,
									"scores":	[-4.15445549323838]
								}, {
									"case":	397,
									"scores":	[-4.15445549323838]
								}, {
									"case":	398,
									"scores":	[-4.15445549323838]
								}, {
									"case":	399,
									"scores":	[-4.15445549323838]
								}, {
									"case":	400,
									"scores":	[-4.15445549323838]
								}, {
									"case":	401,
									"scores":	[-4.15445549323838]
								}, {
									"case":	402,
									"scores":	[-4.15445549323838]
								}, {
									"case":	403,
									"scores":	[-4.15445549323838]
								}, {
									"case":	404,
									"scores":	[-4.15445549323838]
								}, {
									"case":	405,
									"scores":	[-4.15445549323838]
								}, {
									"case":	406,
									"scores":	[-4.15445549323838]
								}, {
									"case":	407,
									"scores":	[-4.15445549323838]
								}, {
									"case":	408,
									"scores":	[-4.15445549323838]
								}, {
									"case":	409,
									"scores":	[-4.15445549323838]
								}, {
									"case":	410,
									"scores":	[-4.15445549323838]
								}, {
									"case":	411,
									"scores":	[-4.15445549323838]
								}, {
									"case":	412,
									"scores":	[-4.15445549323838]
								}, {
									"case":	413,
									"scores":	[-4.15445549323838]
								}, {
									"case":	414,
									"scores":	[-4.15445549323838]
								}, {
									"case":	415,
									"scores":	[-4.15445549323838]
								}, {
									"case":	416,
									"scores":	[-4.15445549323838]
								}, {
									"case":	417,
									"scores":	[-4.15445549323838]
								}, {
									"case":	418,
									"scores":	[-4.15445549323838]
								}, {
									"case":	419,
									"scores":	[-4.15445549323838]
								}, {
									"case":	420,
									"scores":	[-4.15445549323838]
								}, {
									"case":	421,
									"scores":	[-4.15445549323838]
								}, {
									"case":	422,
									"scores":	[-4.15445549323838]
								}, {
									"case":	423,
									"scores":	[-4.15445549323838]
								}, {
									"case":	424,
									"scores":	[-4.15445549323838]
								}, {
									"case":	425,
									"scores":	[-4.15445549323838]
								}, {
									"case":	426,
									"scores":	[-4.15445549323838]
								}, {
									"case":	427,
									"scores":	[-4.15445549323838]
								}, {
									"case":	428,
									"scores":	[-4.15445549323838]
								}, {
									"case":	429,
									"scores":	[-4.15445549323838]
								}, {
									"case":	430,
									"scores":	[-4.15445549323838]
								}, {
									"case":	431,
									"scores":	[-4.15445549323838]
								}, {
									"case":	432,
									"scores":	[-4.15445549323838]
								}, {
									"case":	433,
									"scores":	[-4.15445549323838]
								}, {
									"case":	434,
									"scores":	[-4.15445549323838]
								}, {
									"case":	435,
									"scores":	[-4.15445549323838]
								}, {
									"case":	436,
									"scores":	[-4.15445549323838]
								}, {
									"case":	437,
									"scores":	[-4.15445549323838]
								}, {
									"case":	438,
									"scores":	[-4.15445549323838]
								}, {
									"case":	439,
									"scores":	[-4.15445549323838]
								}, {
									"case":	440,
									"scores":	[-4.15445549323838]
								}, {
									"case":	441,
									"scores":	[-4.15445549323838]
								}, {
									"case":	442,
									"scores":	[-4.15445549323838]
								}, {
									"case":	443,
									"scores":	[-4.15445549323838]
								}, {
									"case":	444,
									"scores":	[-4.15445549323838]
								}, {
									"case":	445,
									"scores":	[-4.15445549323838]
								}, {
									"case":	446,
									"scores":	[-4.15445549323838]
								}, {
									"case":	447,
									"scores":	[-4.15445549323838]
								}, {
									"case":	448,
									"scores":	[-4.15445549323838]
								}, {
									"case":	449,
									"scores":	[-4.15445549323838]
								}, {
									"case":	450,
									"scores":	[-4.15445549323838]
								}, {
									"case":	451,
									"scores":	[-4.15445549323838]
								}, {
									"case":	452,
									"scores":	[-4.15445549323838]
								}, {
									"case":	453,
									"scores":	[-4.15445549323838]
								}, {
									"case":	454,
									"scores":	[-4.15445549323838]
								}, {
									"case":	455,
									"scores":	[-4.15445549323838]
								}, {
									"case":	456,
									"scores":	[-4.15445549323838]
								}, {
									"case":	457,
									"scores":	[-4.15445549323838]
								}, {
									"case":	458,
									"scores":	[-4.15445549323838]
								}, {
									"case":	459,
									"scores":	[-4.15445549323838]
								}, {
									"case":	460,
									"scores":	[-4.15445549323838]
								}, {
									"case":	461,
									"scores":	[-4.15445549323838]
								}, {
									"case":	462,
									"scores":	[-4.15445549323838]
								}, {
									"case":	463,
									"scores":	[-4.15445549323838]
								}, {
									"case":	464,
									"scores":	[-4.15445549323838]
								}, {
									"case":	465,
									"scores":	[-4.15445549323838]
								}, {
									"case":	466,
									"scores":	[-4.15445549323838]
								}, {
									"case":	467,
									"scores":	[-4.15445549323838]
								}, {
									"case":	468,
									"scores":	[-4.15445549323838]
								}, {
									"case":	469,
									"scores":	[-4.15445549323838]
								}, {
									"case":	470,
									"scores":	[-4.15445549323838]
								}, {
									"case":	471,
									"scores":	[-4.15445549323838]
								}, {
									"case":	472,
									"scores":	[-4.15445549323838]
								}, {
									"case":	473,
									"scores":	[-4.15445549323838]
								}, {
									"case":	474,
									"scores":	[-4.15445549323838]
								}, {
									"case":	475,
									"scores":	[-4.15445549323838]
								}, {
									"case":	476,
									"scores":	[-4.15445549323838]
								}, {
									"case":	477,
									"scores":	[-4.15445549323838]
								}, {
									"case":	478,
									"scores":	[-4.15445549323838]
								}, {
									"case":	479,
									"scores":	[-4.15445549323838]
								}, {
									"case":	480,
									"scores":	[-4.15445549323838]
								}, {
									"case":	481,
									"scores":	[-4.15445549323838]
								}, {
									"case":	482,
									"scores":	[-4.15445549323838]
								}, {
									"case":	483,
									"scores":	[-4.15445549323838]
								}, {
									"case":	484,
									"scores":	[-4.15445549323838]
								}, {
									"case":	485,
									"scores":	[-4.15445549323838]
								}, {
									"case":	486,
									"scores":	[-4.15445549323838]
								}, {
									"case":	487,
									"scores":	[-4.15445549323838]
								}, {
									"case":	488,
									"scores":	[-4.15445549323838]
								}, {
									"case":	489,
									"scores":	[-4.15445549323838]
								}, {
									"case":	490,
									"scores":	[-4.15445549323838]
								}, {
									"case":	491,
									"scores":	[-4.15445549323838]
								}, {
									"case":	492,
									"scores":	[-4.15445549323838]
								}, {
									"case":	493,
									"scores":	[-4.15445549323838]
								}, {
									"case":	494,
									"scores":	[-4.15445549323838]
								}, {
									"case":	495,
									"scores":	[-4.15445549323838]
								}, {
									"case":	496,
									"scores":	[-4.15445549323838]
								}, {
									"case":	497,
									"scores":	[-4.15445549323838]
								}, {
									"case":	498,
									"scores":	[-4.15445549323838]
								}, {
									"case":	499,
									"scores":	[-4.15445549323838]
								}, {
									"case":	500,
									"scores":	[-4.15445549323838]
								}, {
									"case":	501,
									"scores":	[-4.15445549323838]
								}, {
									"case":	502,
									"scores":	[-4.15445549323838]
								}, {
									"case":	503,
									"scores":	[-4.15445549323838]
								}, {
									"case":	504,
									"scores":	[-4.15445549323838]
								}, {
									"case":	505,
									"scores":	[-4.15445549323838]
								}, {
									"case":	506,
									"scores":	[-4.15445549323838]
								}, {
									"case":	507,
									"scores":	[-4.15445549323838]
								}, {
									"case":	508,
									"scores":	[-4.15445549323838]
								}, {
									"case":	509,
									"scores":	[-4.15445549323838]
								}, {
									"case":	510,
									"scores":	[-4.15445549323838]
								}, {
									"case":	511,
									"scores":	[-4.15445549323838]
								}, {
									"case":	512,
									"scores":	[-4.15445549323838]
								}, {
									"case":	513,
									"scores":	[-4.15445549323838]
								}, {
									"case":	514,
									"scores":	[-4.15445549323838]
								}, {
									"case":	515,
									"scores":	[-4.15445549323838]
								}, {
									"case":	516,
									"scores":	[-4.15445549323838]
								}, {
									"case":	517,
									"scores":	[-4.15445549323838]
								}, {
									"case":	518,
									"scores":	[-4.15445549323838]
								}, {
									"case":	519,
									"scores":	[-4.15445549323838]
								}, {
									"case":	520,
									"scores":	[-4.15445549323838]
								}, {
									"case":	521,
									"scores":	[-4.15445549323838]
								}, {
									"case":	522,
									"scores":	[-4.15445549323838]
								}, {
									"case":	523,
									"scores":	[-4.15445549323838]
								}, {
									"case":	524,
									"scores":	[-4.15445549323838]
								}, {
									"case":	525,
									"scores":	[-4.15445549323838]
								}, {
									"case":	526,
									"scores":	[-4.15445549323838]
								}, {
									"case":	527,
									"scores":	[-4.15445549323838]
								}, {
									"case":	528,
									"scores":	[-4.15445549323838]
								}, {
									"case":	529,
									"scores":	[-4.15445549323838]
								}, {
									"case":	530,
									"scores":	[-4.15445549323838]
								}, {
									"case":	531,
									"scores":	[-4.15445549323838]
								}, {
									"case":	532,
									"scores":	[-4.15445549323838]
								}, {
									"case":	533,
									"scores":	[-4.15445549323838]
								}, {
									"case":	534,
									"scores":	[-4.15445549323838]
								}, {
									"case":	535,
									"scores":	[-4.15445549323838]
								}, {
									"case":	536,
									"scores":	[-4.15445549323838]
								}, {
									"case":	537,
									"scores":	[-4.15445549323838]
								}, {
									"case":	538,
									"scores":	[-4.15445549323838]
								}, {
									"case":	539,
									"scores":	[-4.15445549323838]
								}, {
									"case":	540,
									"scores":	[-4.15445549323838]
								}, {
									"case":	541,
									"scores":	[-4.15445549323838]
								}, {
									"case":	542,
									"scores":	[-4.15445549323838]
								}, {
									"case":	543,
									"scores":	[-4.15445549323838]
								}, {
									"case":	544,
									"scores":	[-4.15445549323838]
								}, {
									"case":	545,
									"scores":	[-4.15445549323838]
								}, {
									"case":	546,
									"scores":	[-4.15445549323838]
								}, {
									"case":	547,
									"scores":	[-4.15445549323838]
								}, {
									"case":	548,
									"scores":	[-4.15445549323838]
								}, {
									"case":	549,
									"scores":	[-4.15445549323838]
								}, {
									"case":	550,
									"scores":	[-4.15445549323838]
								}, {
									"case":	551,
									"scores":	[-4.15445549323838]
								}, {
									"case":	552,
									"scores":	[-4.15445549323838]
								}, {
									"case":	553,
									"scores":	[-4.15445549323838]
								}, {
									"case":	554,
									"scores":	[-4.15445549323838]
								}, {
									"case":	555,
									"scores":	[-4.15445549323838]
								}, {
									"case":	556,
									"scores":	[-4.15445549323838]
								}, {
									"case":	557,
									"scores":	[-4.15445549323838]
								}, {
									"case":	558,
									"scores":	[-4.15445549323838]
								}, {
									"case":	559,
									"scores":	[-4.15445549323838]
								}, {
									"case":	560,
									"scores":	[-4.15445549323838]
								}, {
									"case":	561,
									"scores":	[-4.15445549323838]
								}, {
									"case":	562,
									"scores":	[-4.15445549323838]
								}, {
									"case":	563,
									"scores":	[-4.15445549323838]
								}, {
									"case":	564,
									"scores":	[-4.15445549323838]
								}, {
									"case":	565,
									"scores":	[-4.15445549323838]
								}, {
									"case":	566,
									"scores":	[-4.15445549323838]
								}, {
									"case":	567,
									"scores":	[-4.15445549323838]
								}, {
									"case":	568,
									"scores":	[-4.15445549323838]
								}, {
									"case":	569,
									"scores":	[-4.15445549323838]
								}, {
									"case":	570,
									"scores":	[-4.15445549323838]
								}, {
									"case":	571,
									"scores":	[-4.15445549323838]
								}, {
									"case":	572,
									"scores":	[-4.15445549323838]
								}, {
									"case":	573,
									"scores":	[-4.15445549323838]
								}, {
									"case":	574,
									"scores":	[-4.15445549323838]
								}, {
									"case":	575,
									"scores":	[-4.15445549323838]
								}, {
									"case":	576,
									"scores":	[-4.15445549323838]
								}, {
									"case":	577,
									"scores":	[-4.15445549323838]
								}, {
									"case":	578,
									"scores":	[-4.15445549323838]
								}, {
									"case":	579,
									"scores":	[-4.15445549323838]
								}, {
									"case":	580,
									"scores":	[-4.15445549323838]
								}, {
									"case":	581,
									"scores":	[-4.15445549323838]
								}, {
									"case":	582,
									"scores":	[-4.15445549323838]
								}, {
									"case":	583,
									"scores":	[-4.15445549323838]
								}, {
									"case":	584,
									"scores":	[-4.15445549323838]
								}, {
									"case":	585,
									"scores":	[-4.15445549323838]
								}, {
									"case":	586,
									"scores":	[-4.15445549323838]
								}, {
									"case":	587,
									"scores":	[-4.15445549323838]
								}, {
									"case":	588,
									"scores":	[-4.15445549323838]
								}, {
									"case":	589,
									"scores":	[-4.15445549323838]
								}, {
									"case":	590,
									"scores":	[-4.15445549323838]
								}, {
									"case":	591,
									"scores":	[-4.15445549323838]
								}, {
									"case":	592,
									"scores":	[-4.15445549323838]
								}, {
									"case":	593,
									"scores":	[-4.15445549323838]
								}, {
									"case":	594,
									"scores":	[-4.15445549323838]
								}, {
									"case":	595,
									"scores":	[-4.15445549323838]
								}, {
									"case":	596,
									"scores":	[-4.15445549323838]
								}, {
									"case":	597,
									"scores":	[-4.15445549323838]
								}, {
									"case":	598,
									"scores":	[-4.15445549323838]
								}, {
									"case":	599,
									"scores":	[-4.15445549323838]
								}, {
									"case":	600,
									"scores":	[-4.15445549323838]
								}, {
									"case":	601,
									"scores":	[-4.15445549323838]
								}, {
									"case":	602,
									"scores":	[-4.15445549323838]
								}, {
									"case":	603,
									"scores":	[-4.15445549323838]
								}, {
									"case":	604,
									"scores":	[-4.15445549323838]
								}, {
									"case":	605,
									"scores":	[-4.15445549323838]
								}, {
									"case":	606,
									"scores":	[-4.15445549323838]
								}, {
									"case":	607,
									"scores":	[-4.15445549323838]
								}, {
									"case":	608,
									"scores":	[-4.15445549323838]
								}, {
									"case":	609,
									"scores":	[-4.15445549323838]
								}, {
									"case":	610,
									"scores":	[-4.15445549323838]
								}, {
									"case":	611,
									"scores":	[-4.15445549323838]
								}, {
									"case":	612,
									"scores":	[-4.15445549323838]
								}, {
									"case":	613,
									"scores":	[-4.15445549323838]
								}, {
									"case":	614,
									"scores":	[-4.15445549323838]
								}, {
									"case":	615,
									"scores":	[-4.15445549323838]
								}, {
									"case":	616,
									"scores":	[-4.15445549323838]
								}, {
									"case":	617,
									"scores":	[-4.15445549323838]
								}, {
									"case":	618,
									"scores":	[-4.15445549323838]
								}, {
									"case":	619,
									"scores":	[-4.15445549323838]
								}, {
									"case":	620,
									"scores":	[-4.15445549323838]
								}, {
									"case":	621,
									"scores":	[-4.15445549323838]
								}, {
									"case":	622,
									"scores":	[-4.15445549323838]
								}, {
									"case":	623,
									"scores":	[-4.15445549323838]
								}, {
									"case":	624,
									"scores":	[-4.15445549323838]
								}, {
									"case":	625,
									"scores":	[-4.15445549323838]
								}, {
									"case":	626,
									"scores":	[-4.15445549323838]
								}, {
									"case":	627,
									"scores":	[-4.15445549323838]
								}, {
									"case":	628,
									"scores":	[-4.15445549323838]
								}, {
									"case":	629,
									"scores":	[-4.15445549323838]
								}, {
									"case":	630,
									"scores":	[-4.15445549323838]
								}, {
									"case":	631,
									"scores":	[-4.15445549323838]
								}, {
									"case":	632,
									"scores":	[-4.15445549323838]
								}, {
									"case":	633,
									"scores":	[-4.15445549323838]
								}, {
									"case":	634,
									"scores":	[-4.15445549323838]
								}, {
									"case":	635,
									"scores":	[-4.15445549323838]
								}, {
									"case":	636,
									"scores":	[-4.15445549323838]
								}, {
									"case":	637,
									"scores":	[-4.15445549323838]
								}, {
									"case":	638,
									"scores":	[-4.15445549323838]
								}, {
									"case":	639,
									"scores":	[-4.15445549323838]
								}, {
									"case":	640,
									"scores":	[-4.15445549323838]
								}, {
									"case":	641,
									"scores":	[-4.15445549323838]
								}, {
									"case":	642,
									"scores":	[-4.15445549323838]
								}, {
									"case":	643,
									"scores":	[-4.15445549323838]
								}, {
									"case":	644,
									"scores":	[-4.15445549323838]
								}, {
									"case":	645,
									"scores":	[-4.15445549323838]
								}, {
									"case":	646,
									"scores":	[-4.15445549323838]
								}, {
									"case":	647,
									"scores":	[-4.15445549323838]
								}, {
									"case":	648,
									"scores":	[-4.15445549323838]
								}, {
									"case":	649,
									"scores":	[-4.15445549323838]
								}, {
									"case":	650,
									"scores":	[-4.15445549323838]
								}, {
									"case":	651,
									"scores":	[-4.15445549323838]
								}, {
									"case":	652,
									"scores":	[-4.15445549323838]
								}, {
									"case":	653,
									"scores":	[-4.15445549323838]
								}, {
									"case":	654,
									"scores":	[-4.15445549323838]
								}, {
									"case":	655,
									"scores":	[-4.15445549323838]
								}, {
									"case":	656,
									"scores":	[-4.15445549323838]
								}, {
									"case":	657,
									"scores":	[-4.15445549323838]
								}, {
									"case":	658,
									"scores":	[-4.15445549323838]
								}, {
									"case":	659,
									"scores":	[-4.15445549323838]
								}, {
									"case":	660,
									"scores":	[-4.15445549323838]
								}, {
									"case":	661,
									"scores":	[-4.15445549323838]
								}, {
									"case":	662,
									"scores":	[-4.15445549323838]
								}, {
									"case":	663,
									"scores":	[-4.15445549323838]
								}, {
									"case":	664,
									"scores":	[-4.15445549323838]
								}, {
									"case":	665,
									"scores":	[-4.15445549323838]
								}, {
									"case":	666,
									"scores":	[-4.15445549323838]
								}, {
									"case":	667,
									"scores":	[-4.15445549323838]
								}, {
									"case":	668,
									"scores":	[-4.15445549323838]
								}, {
									"case":	669,
									"scores":	[-4.15445549323838]
								}, {
									"case":	670,
									"scores":	[-4.15445549323838]
								}, {
									"case":	671,
									"scores":	[-4.15445549323838]
								}, {
									"case":	672,
									"scores":	[-4.15445549323838]
								}, {
									"case":	673,
									"scores":	[-4.15445549323838]
								}, {
									"case":	674,
									"scores":	[-4.15445549323838]
								}, {
									"case":	675,
									"scores":	[-4.15445549323838]
								}, {
									"case":	676,
									"scores":	[-4.15445549323838]
								}, {
									"case":	677,
									"scores":	[-4.15445549323838]
								}, {
									"case":	678,
									"scores":	[-4.15445549323838]
								}, {
									"case":	679,
									"scores":	[-4.15445549323838]
								}, {
									"case":	680,
									"scores":	[-4.15445549323838]
								}, {
									"case":	681,
									"scores":	[-4.15445549323838]
								}, {
									"case":	682,
									"scores":	[-4.15445549323838]
								}, {
									"case":	683,
									"scores":	[-4.15445549323838]
								}, {
									"case":	684,
									"scores":	[-4.15445549323838]
								}, {
									"case":	685,
									"scores":	[-4.15445549323838]
								}, {
									"case":	686,
									"scores":	[-4.15445549323838]
								}, {
									"case":	687,
									"scores":	[-4.15445549323838]
								}, {
									"case":	688,
									"scores":	[-4.15445549323838]
								}, {
									"case":	689,
									"scores":	[-4.15445549323838]
								}, {
									"case":	690,
									"scores":	[-4.15445549323838]
								}, {
									"case":	691,
									"scores":	[-4.15445549323838]
								}, {
									"case":	692,
									"scores":	[-4.15445549323838]
								}, {
									"case":	693,
									"scores":	[-4.15445549323838]
								}, {
									"case":	694,
									"scores":	[-4.15445549323838]
								}, {
									"case":	695,
									"scores":	[-4.15445549323838]
								}, {
									"case":	696,
									"scores":	[-4.15445549323838]
								}, {
									"case":	697,
									"scores":	[-4.15445549323838]
								}, {
									"case":	698,
									"scores":	[-4.15445549323838]
								}, {
									"case":	699,
									"scores":	[-4.15445549323838]
								}, {
									"case":	700,
									"scores":	[-4.15445549323838]
								}, {
									"case":	701,
									"scores":	[-4.15445549323838]
								}, {
									"case":	702,
									"scores":	[-4.15445549323838]
								}, {
									"case":	703,
									"scores":	[-4.15445549323838]
								}, {
									"case":	704,
									"scores":	[-4.15445549323838]
								}, {
									"case":	705,
									"scores":	[-4.15445549323838]
								}, {
									"case":	706,
									"scores":	[-4.15445549323838]
								}, {
									"case":	707,
									"scores":	[-4.15445549323838]
								}, {
									"case":	708,
									"scores":	[-4.15445549323838]
								}, {
									"case":	709,
									"scores":	[-4.15445549323838]
								}, {
									"case":	710,
									"scores":	[-4.15445549323838]
								}, {
									"case":	711,
									"scores":	[-4.15445549323838]
								}, {
									"case":	712,
									"scores":	[-4.15445549323838]
								}, {
									"case":	713,
									"scores":	[-4.15445549323838]
								}, {
									"case":	714,
									"scores":	[-4.15445549323838]
								}, {
									"case":	715,
									"scores":	[-4.15445549323838]
								}, {
									"case":	716,
									"scores":	[-4.15445549323838]
								}, {
									"case":	717,
									"scores":	[-4.15445549323838]
								}, {
									"case":	718,
									"scores":	[-4.15445549323838]
								}, {
									"case":	719,
									"scores":	[-4.15445549323838]
								}, {
									"case":	720,
									"scores":	[-4.15445549323838]
								}, {
									"case":	721,
									"scores":	[-4.15445549323838]
								}, {
									"case":	722,
									"scores":	[-4.15445549323838]
								}, {
									"case":	723,
									"scores":	[-4.15445549323838]
								}, {
									"case":	724,
									"scores":	[-4.15445549323838]
								}, {
									"case":	725,
									"scores":	[-4.15445549323838]
								}, {
									"case":	726,
									"scores":	[-4.15445549323838]
								}, {
									"case":	727,
									"scores":	[-4.15445549323838]
								}, {
									"case":	728,
									"scores":	[-4.15445549323838]
								}, {
									"case":	729,
									"scores":	[-4.15445549323838]
								}, {
									"case":	730,
									"scores":	[-4.15445549323838]
								}, {
									"case":	731,
									"scores":	[-4.15445549323838]
								}, {
									"case":	732,
									"scores":	[-4.15445549323838]
								}, {
									"case":	733,
									"scores":	[-4.15445549323838]
								}, {
									"case":	734,
									"scores":	[-4.15445549323838]
								}, {
									"case":	735,
									"scores":	[-4.15445549323838]
								}, {
									"case":	736,
									"scores":	[-4.15445549323838]
								}, {
									"case":	737,
									"scores":	[-4.15445549323838]
								}, {
									"case":	738,
									"scores":	[-4.15445549323838]
								}, {
									"case":	739,
									"scores":	[-4.15445549323838]
								}, {
									"case":	740,
									"scores":	[-4.15445549323838]
								}, {
									"case":	741,
									"scores":	[-4.15445549323838]
								}, {
									"case":	742,
									"scores":	[-4.15445549323838]
								}, {
									"case":	743,
									"scores":	[-4.15445549323838]
								}, {
									"case":	744,
									"scores":	[-4.15445549323838]
								}, {
									"case":	745,
									"scores":	[-4.15445549323838]
								}, {
									"case":	746,
									"scores":	[-4.15445549323838]
								}, {
									"case":	747,
									"scores":	[-4.15445549323838]
								}, {
									"case":	748,
									"scores":	[-4.15445549323838]
								}, {
									"case":	749,
									"scores":	[-4.15445549323838]
								}, {
									"case":	750,
									"scores":	[-4.15445549323838]
								}, {
									"case":	751,
									"scores":	[-4.15445549323838]
								}, {
									"case":	752,
									"scores":	[-4.15445549323838]
								}, {
									"case":	753,
									"scores":	[-4.15445549323838]
								}, {
									"case":	754,
									"scores":	[-4.15445549323838]
								}, {
									"case":	755,
									"scores":	[-4.15445549323838]
								}, {
									"case":	756,
									"scores":	[-4.15445549323838]
								}, {
									"case":	757,
									"scores":	[-4.15445549323838]
								}, {
									"case":	758,
									"scores":	[-4.15445549323838]
								}, {
									"case":	759,
									"scores":	[-4.15445549323838]
								}, {
									"case":	760,
									"scores":	[-4.15445549323838]
								}, {
									"case":	761,
									"scores":	[-4.15445549323838]
								}, {
									"case":	762,
									"scores":	[-4.15445549323838]
								}, {
									"case":	763,
									"scores":	[-4.15445549323838]
								}, {
									"case":	764,
									"scores":	[-4.15445549323838]
								}, {
									"case":	765,
									"scores":	[-4.15445549323838]
								}, {
									"case":	766,
									"scores":	[-4.15445549323838]
								}, {
									"case":	767,
									"scores":	[-4.15445549323838]
								}, {
									"case":	768,
									"scores":	[-4.15445549323838]
								}, {
									"case":	769,
									"scores":	[-4.15445549323838]
								}, {
									"case":	770,
									"scores":	[-4.15445549323838]
								}, {
									"case":	771,
									"scores":	[-4.15445549323838]
								}, {
									"case":	772,
									"scores":	[-4.15445549323838]
								}, {
									"case":	773,
									"scores":	[-4.15445549323838]
								}, {
									"case":	774,
									"scores":	[-4.15445549323838]
								}, {
									"case":	775,
									"scores":	[-4.15445549323838]
								}, {
									"case":	776,
									"scores":	[-4.15445549323838]
								}, {
									"case":	777,
									"scores":	[-4.15445549323838]
								}, {
									"case":	778,
									"scores":	[-4.15445549323838]
								}, {
									"case":	779,
									"scores":	[-4.15445549323838]
								}, {
									"case":	780,
									"scores":	[-4.15445549323838]
								}, {
									"case":	781,
									"scores":	[-4.15445549323838]
								}, {
									"case":	782,
									"scores":	[-4.15445549323838]
								}, {
									"case":	783,
									"scores":	[-4.15445549323838]
								}, {
									"case":	784,
									"scores":	[-4.15445549323838]
								}, {
									"case":	785,
									"scores":	[-4.15445549323838]
								}, {
									"case":	786,
									"scores":	[-4.15445549323838]
								}, {
									"case":	787,
									"scores":	[-4.15445549323838]
								}, {
									"case":	788,
									"scores":	[-4.15445549323838]
								}, {
									"case":	789,
									"scores":	[-4.15445549323838]
								}, {
									"case":	790,
									"scores":	[-4.15445549323838]
								}, {
									"case":	791,
									"scores":	[-4.15445549323838]
								}, {
									"case":	792,
									"scores":	[-4.15445549323838]
								}, {
									"case":	793,
									"scores":	[-4.15445549323838]
								}, {
									"case":	794,
									"scores":	[-4.15445549323838]
								}, {
									"case":	795,
									"scores":	[-4.15445549323838]
								}, {
									"case":	796,
									"scores":	[-4.15445549323838]
								}, {
									"case":	797,
									"scores":	[-4.15445549323838]
								}, {
									"case":	798,
									"scores":	[-4.15445549323838]
								}, {
									"case":	799,
									"scores":	[-4.15445549323838]
								}, {
									"case":	800,
									"scores":	[-4.15445549323838]
								}, {
									"case":	801,
									"scores":	[-4.15445549323838]
								}, {
									"case":	802,
									"scores":	[-4.15445549323838]
								}, {
									"case":	803,
									"scores":	[-4.15445549323838]
								}, {
									"case":	804,
									"scores":	[-4.15445549323838]
								}, {
									"case":	805,
									"scores":	[-4.15445549323838]
								}, {
									"case":	806,
									"scores":	[-4.15445549323838]
								}, {
									"case":	807,
									"scores":	[-4.15445549323838]
								}, {
									"case":	808,
									"scores":	[-4.15445549323838]
								}, {
									"case":	809,
									"scores":	[-4.15445549323838]
								}, {
									"case":	810,
									"scores":	[-4.15445549323838]
								}, {
									"case":	811,
									"scores":	[-4.15445549323838]
								}, {
									"case":	812,
									"scores":	[-4.15445549323838]
								}, {
									"case":	813,
									"scores":	[-4.15445549323838]
								}, {
									"case":	814,
									"scores":	[-4.15445549323838]
								}, {
									"case":	815,
									"scores":	[-4.15445549323838]
								}, {
									"case":	816,
									"scores":	[-4.15445549323838]
								}, {
									"case":	817,
									"scores":	[-4.15445549323838]
								}, {
									"case":	818,
									"scores":	[-4.15445549323838]
								}, {
									"case":	819,
									"scores":	[-4.15445549323838]
								}, {
									"case":	820,
									"scores":	[-4.15445549323838]
								}, {
									"case":	821,
									"scores":	[-4.15445549323838]
								}, {
									"case":	822,
									"scores":	[-4.15445549323838]
								}, {
									"case":	823,
									"scores":	[-4.15445549323838]
								}, {
									"case":	824,
									"scores":	[-4.15445549323838]
								}, {
									"case":	825,
									"scores":	[-4.15445549323838]
								}, {
									"case":	826,
									"scores":	[-4.15445549323838]
								}, {
									"case":	827,
									"scores":	[-4.15445549323838]
								}, {
									"case":	828,
									"scores":	[-4.15445549323838]
								}, {
									"case":	829,
									"scores":	[-4.15445549323838]
								}, {
									"case":	830,
									"scores":	[-4.15445549323838]
								}, {
									"case":	831,
									"scores":	[-4.15445549323838]
								}, {
									"case":	832,
									"scores":	[-4.15445549323838]
								}, {
									"case":	833,
									"scores":	[-4.15445549323838]
								}, {
									"case":	834,
									"scores":	[-4.15445549323838]
								}, {
									"case":	835,
									"scores":	[-4.15445549323838]
								}, {
									"case":	836,
									"scores":	[-4.15445549323838]
								}, {
									"case":	837,
									"scores":	[-4.15445549323838]
								}, {
									"case":	838,
									"scores":	[-4.15445549323838]
								}, {
									"case":	839,
									"scores":	[-4.15445549323838]
								}, {
									"case":	840,
									"scores":	[-4.15445549323838]
								}, {
									"case":	841,
									"scores":	[-4.15445549323838]
								}, {
									"case":	842,
									"scores":	[-4.15445549323838]
								}, {
									"case":	843,
									"scores":	[-4.15445549323838]
								}, {
									"case":	844,
									"scores":	[-4.15445549323838]
								}, {
									"case":	845,
									"scores":	[-4.15445549323838]
								}, {
									"case":	846,
									"scores":	[-4.15445549323838]
								}, {
									"case":	847,
									"scores":	[-4.15445549323838]
								}, {
									"case":	848,
									"scores":	[-4.15445549323838]
								}, {
									"case":	849,
									"scores":	[-4.15445549323838]
								}, {
									"case":	850,
									"scores":	[-4.15445549323838]
								}, {
									"case":	851,
									"scores":	[-4.15445549323838]
								}, {
									"case":	852,
									"scores":	[-4.15445549323838]
								}, {
									"case":	853,
									"scores":	[-4.15445549323838]
								}, {
									"case":	854,
									"scores":	[-4.15445549323838]
								}, {
									"case":	855,
									"scores":	[-4.15445549323838]
								}, {
									"case":	856,
									"scores":	[-4.15445549323838]
								}, {
									"case":	857,
									"scores":	[-4.15445549323838]
								}, {
									"case":	858,
									"scores":	[-4.15445549323838]
								}, {
									"case":	859,
									"scores":	[-4.15445549323838]
								}, {
									"case":	860,
									"scores":	[-4.15445549323838]
								}, {
									"case":	861,
									"scores":	[-4.15445549323838]
								}, {
									"case":	862,
									"scores":	[-4.15445549323838]
								}, {
									"case":	863,
									"scores":	[-4.15445549323838]
								}, {
									"case":	864,
									"scores":	[-4.15445549323838]
								}, {
									"case":	865,
									"scores":	[-4.15445549323838]
								}, {
									"case":	866,
									"scores":	[-4.15445549323838]
								}, {
									"case":	867,
									"scores":	[-4.15445549323838]
								}, {
									"case":	868,
									"scores":	[-4.15445549323838]
								}, {
									"case":	869,
									"scores":	[-4.15445549323838]
								}, {
									"case":	870,
									"scores":	[-4.15445549323838]
								}, {
									"case":	871,
									"scores":	[-4.15445549323838]
								}, {
									"case":	872,
									"scores":	[-4.15445549323838]
								}, {
									"case":	873,
									"scores":	[-4.15445549323838]
								}, {
									"case":	874,
									"scores":	[-4.15445549323838]
								}, {
									"case":	875,
									"scores":	[-4.15445549323838]
								}, {
									"case":	876,
									"scores":	[-4.15445549323838]
								}, {
									"case":	877,
									"scores":	[-4.15445549323838]
								}, {
									"case":	878,
									"scores":	[-4.15445549323838]
								}, {
									"case":	879,
									"scores":	[-4.15445549323838]
								}, {
									"case":	880,
									"scores":	[-4.15445549323838]
								}, {
									"case":	881,
									"scores":	[-4.15445549323838]
								}, {
									"case":	882,
									"scores":	[-4.15445549323838]
								}, {
									"case":	883,
									"scores":	[-4.15445549323838]
								}, {
									"case":	884,
									"scores":	[-4.15445549323838]
								}, {
									"case":	885,
									"scores":	[-4.15445549323838]
								}, {
									"case":	886,
									"scores":	[-4.15445549323838]
								}, {
									"case":	887,
									"scores":	[-4.15445549323838]
								}, {
									"case":	888,
									"scores":	[-4.15445549323838]
								}, {
									"case":	889,
									"scores":	[-4.15445549323838]
								}, {
									"case":	890,
									"scores":	[-4.15445549323838]
								}, {
									"case":	891,
									"scores":	[-4.15445549323838]
								}, {
									"case":	892,
									"scores":	[-4.15445549323838]
								}, {
									"case":	893,
									"scores":	[-4.15445549323838]
								}, {
									"case":	894,
									"scores":	[-4.15445549323838]
								}, {
									"case":	895,
									"scores":	[-4.15445549323838]
								}, {
									"case":	896,
									"scores":	[-4.15445549323838]
								}, {
									"case":	897,
									"scores":	[-4.15445549323838]
								}, {
									"case":	898,
									"scores":	[-4.15445549323838]
								}, {
									"case":	899,
									"scores":	[-4.15445549323838]
								}, {
									"case":	900,
									"scores":	[-4.15445549323838]
								}, {
									"case":	901,
									"scores":	[-4.15445549323838]
								}, {
									"case":	902,
									"scores":	[-4.15445549323838]
								}, {
									"case":	903,
									"scores":	[-4.15445549323838]
								}, {
									"case":	904,
									"scores":	[-4.15445549323838]
								}, {
									"case":	905,
									"scores":	[-4.15445549323838]
								}, {
									"case":	906,
									"scores":	[-4.15445549323838]
								}, {
									"case":	907,
									"scores":	[-4.15445549323838]
								}, {
									"case":	908,
									"scores":	[-4.15445549323838]
								}, {
									"case":	909,
									"scores":	[-4.15445549323838]
								}, {
									"case":	910,
									"scores":	[-4.15445549323838]
								}, {
									"case":	911,
									"scores":	[-4.15445549323838]
								}, {
									"case":	912,
									"scores":	[-4.15445549323838]
								}, {
									"case":	913,
									"scores":	[-4.15445549323838]
								}, {
									"case":	914,
									"scores":	[-4.15445549323838]
								}, {
									"case":	915,
									"scores":	[-4.15445549323838]
								}, {
									"case":	916,
									"scores":	[-4.15445549323838]
								}, {
									"case":	917,
									"scores":	[-4.15445549323838]
								}, {
									"case":	918,
									"scores":	[-4.15445549323838]
								}, {
									"case":	919,
									"scores":	[-4.15445549323838]
								}, {
									"case":	920,
									"scores":	[-4.15445549323838]
								}, {
									"case":	921,
									"scores":	[-4.15445549323838]
								}, {
									"case":	922,
									"scores":	[-4.15445549323838]
								}, {
									"case":	923,
									"scores":	[-4.15445549323838]
								}, {
									"case":	924,
									"scores":	[-4.15445549323838]
								}, {
									"case":	925,
									"scores":	[-4.15445549323838]
								}, {
									"case":	926,
									"scores":	[-4.15445549323838]
								}, {
									"case":	927,
									"scores":	[-4.15445549323838]
								}, {
									"case":	928,
									"scores":	[-4.15445549323838]
								}, {
									"case":	929,
									"scores":	[-4.15445549323838]
								}, {
									"case":	930,
									"scores":	[-4.15445549323838]
								}, {
									"case":	931,
									"scores":	[-4.15445549323838]
								}, {
									"case":	932,
									"scores":	[-4.15445549323838]
								}, {
									"case":	933,
									"scores":	[-4.15445549323838]
								}, {
									"case":	934,
									"scores":	[-4.15445549323838]
								}, {
									"case":	935,
									"scores":	[-4.15445549323838]
								}, {
									"case":	936,
									"scores":	[-4.15445549323838]
								}, {
									"case":	937,
									"scores":	[-4.15445549323838]
								}, {
									"case":	938,
									"scores":	[-4.15445549323838]
								}, {
									"case":	939,
									"scores":	[-4.15445549323838]
								}, {
									"case":	940,
									"scores":	[-4.15445549323838]
								}, {
									"case":	941,
									"scores":	[-4.15445549323838]
								}, {
									"case":	942,
									"scores":	[-4.15445549323838]
								}, {
									"case":	943,
									"scores":	[-4.15445549323838]
								}, {
									"case":	944,
									"scores":	[-4.15445549323838]
								}, {
									"case":	945,
									"scores":	[-4.15445549323838]
								}, {
									"case":	946,
									"scores":	[-4.15445549323838]
								}, {
									"case":	947,
									"scores":	[-4.15445549323838]
								}, {
									"case":	948,
									"scores":	[-4.15445549323838]
								}, {
									"case":	949,
									"scores":	[-4.15445549323838]
								}, {
									"case":	950,
									"scores":	[-4.15445549323838]
								}, {
									"case":	951,
									"scores":	[-4.15445549323838]
								}, {
									"case":	952,
									"scores":	[-4.15445549323838]
								}, {
									"case":	953,
									"scores":	[-4.15445549323838]
								}, {
									"case":	954,
									"scores":	[-4.15445549323838]
								}, {
									"case":	955,
									"scores":	[-4.15445549323838]
								}, {
									"case":	956,
									"scores":	[-4.15445549323838]
								}, {
									"case":	957,
									"scores":	[-4.15445549323838]
								}, {
									"case":	958,
									"scores":	[-4.15445549323838]
								}, {
									"case":	959,
									"scores":	[-4.15445549323838]
								}, {
									"case":	960,
									"scores":	[-4.15445549323838]
								}, {
									"case":	961,
									"scores":	[-4.15445549323838]
								}, {
									"case":	962,
									"scores":	[-4.15445549323838]
								}, {
									"case":	963,
									"scores":	[-4.15445549323838]
								}, {
									"case":	964,
									"scores":	[-4.15445549323838]
								}, {
									"case":	965,
									"scores":	[-4.15445549323838]
								}, {
									"case":	966,
									"scores":	[-4.15445549323838]
								}, {
									"case":	967,
									"scores":	[-4.15445549323838]
								}, {
									"case":	968,
									"scores":	[-4.15445549323838]
								}, {
									"case":	969,
									"scores":	[-4.15445549323838]
								}, {
									"case":	970,
									"scores":	[-4.15445549323838]
								}, {
									"case":	971,
									"scores":	[-4.15445549323838]
								}, {
									"case":	972,
									"scores":	[-4.15445549323838]
								}, {
									"case":	973,
									"scores":	[-4.15445549323838]
								}, {
									"case":	974,
									"scores":	[-4.15445549323838]
								}, {
									"case":	975,
									"scores":	[-4.15445549323838]
								}, {
									"case":	976,
									"scores":	[-4.15445549323838]
								}, {
									"case":	977,
									"scores":	[-4.15445549323838]
								}, {
									"case":	978,
									"scores":	[-4.15445549323838]
								}, {
									"case":	979,
									"scores":	[-4.15445549323838]
								}, {
									"case":	980,
									"scores":	[-4.15445549323838]
								}, {
									"case":	981,
									"scores":	[-4.15445549323838]
								}, {
									"case":	982,
									"scores":	[-4.15445549323838]
								}, {
									"case":	983,
									"scores":	[-4.15445549323838]
								}, {
									"case":	984,
									"scores":	[-4.15445549323838]
								}, {
									"case":	985,
									"scores":	[-4.15445549323838]
								}, {
									"case":	986,
									"scores":	[-4.15445549323838]
								}, {
									"case":	987,
									"scores":	[-4.15445549323838]
								}, {
									"case":	988,
									"scores":	[-4.15445549323838]
								}, {
									"case":	989,
									"scores":	[-4.15445549323838]
								}, {
									"case":	990,
									"scores":	[-4.15445549323838]
								}, {
									"case":	991,
									"scores":	[-4.15445549323838]
								}, {
									"case":	992,
									"scores":	[-4.15445549323838]
								}, {
									"case":	993,
									"scores":	[-4.15445549323838]
								}, {
									"case":	994,
									"scores":	[-4.15445549323838]
								}, {
									"case":	995,
									"scores":	[-4.15445549323838]
								}, {
									"case":	996,
									"scores":	[-4.15445549323838]
								}, {
									"case":	997,
									"scores":	[-4.15445549323838]
								}, {
									"case":	998,
									"scores":	[-4.15445549323838]
								}, {
									"case":	999,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1000,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1001,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1002,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1003,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1004,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1005,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1006,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1007,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1008,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1009,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1010,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1011,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1012,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1013,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1014,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1015,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1016,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1017,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1018,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1019,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1020,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1021,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1022,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1023,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1024,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1025,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1026,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1027,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1028,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1029,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1030,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1031,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1032,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1033,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1034,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1035,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1036,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1037,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1038,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1039,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1040,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1041,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1042,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1043,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1044,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1045,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1046,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1047,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1048,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1049,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1050,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1051,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1052,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1053,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1054,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1055,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1056,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1057,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1058,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1059,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1060,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1061,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1062,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1063,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1064,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1065,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1066,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1067,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1068,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1069,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1070,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1071,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1072,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1073,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1074,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1075,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1076,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1077,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1078,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1079,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1080,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1081,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1082,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1083,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1084,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1085,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1086,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1087,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1088,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1089,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1090,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1091,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1092,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1093,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1094,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1095,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1096,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1097,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1098,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1099,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1100,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1101,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1102,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1103,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1104,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1105,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1106,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1107,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1108,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1109,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1110,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1111,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1112,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1113,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1114,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1115,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1116,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1117,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1118,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1119,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1120,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1121,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1122,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1123,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1124,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1125,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1126,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1127,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1128,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1129,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1130,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1131,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1132,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1133,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1134,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1135,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1136,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1137,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1138,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1139,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1140,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1141,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1142,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1143,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1144,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1145,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1146,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1147,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1148,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1149,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1150,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1151,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1152,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1153,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1154,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1155,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1156,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1157,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1158,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1159,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1160,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1161,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1162,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1163,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1164,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1165,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1166,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1167,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1168,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1169,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1170,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1171,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1172,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1173,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1174,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1175,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1176,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1177,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1178,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1179,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1180,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1181,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1182,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1183,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1184,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1185,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1186,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1187,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1188,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1189,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1190,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1191,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1192,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1193,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1194,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1195,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1196,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1197,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1198,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1199,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1200,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1201,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1202,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1203,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1204,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1205,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1206,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1207,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1208,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1209,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1210,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1211,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1212,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1213,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1214,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1215,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1216,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1217,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1218,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1219,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1220,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1221,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1222,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1223,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1224,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1225,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1226,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1227,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1228,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1229,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1230,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1231,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1232,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1233,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1234,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1235,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1236,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1237,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1238,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1239,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1240,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1241,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1242,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1243,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1244,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1245,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1246,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1247,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1248,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1249,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1250,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1251,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1252,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1253,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1254,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1255,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1256,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1257,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1258,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1259,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1260,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1261,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1262,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1263,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1264,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1265,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1266,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1267,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1268,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1269,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1270,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1271,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1272,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1273,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1274,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1275,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1276,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1277,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1278,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1279,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1280,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1281,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1282,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1283,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1284,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1285,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1286,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1287,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1288,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1289,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1290,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1291,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1292,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1293,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1294,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1295,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1296,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1297,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1298,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1299,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1300,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1301,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1302,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1303,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1304,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1305,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1306,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1307,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1308,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1309,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1310,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1311,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1312,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1313,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1314,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1315,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1316,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1317,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1318,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1319,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1320,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1321,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1322,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1323,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1324,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1325,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1326,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1327,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1328,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1329,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1330,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1331,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1332,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1333,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1334,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1335,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1336,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1337,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1338,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1339,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1340,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1341,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1342,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1343,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1344,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1345,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1346,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1347,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1348,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1349,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1350,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1351,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1352,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1353,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1354,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1355,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1356,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1357,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1358,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1359,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1360,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1361,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1362,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1363,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1364,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1365,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1366,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1367,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1368,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1369,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1370,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1371,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1372,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1373,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1374,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1375,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1376,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1377,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1378,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1379,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1380,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1381,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1382,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1383,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1384,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1385,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1386,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1387,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1388,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1389,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1390,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1391,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1392,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1393,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1394,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1395,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1396,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1397,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1398,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1399,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1400,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1401,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1402,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1403,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1404,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1405,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1406,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1407,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1408,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1409,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1410,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1411,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1412,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1413,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1414,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1415,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1416,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1417,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1418,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1419,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1420,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1421,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1422,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1423,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1424,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1425,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1426,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1427,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1428,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1429,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1430,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1431,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1432,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1433,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1434,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1435,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1436,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1437,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1438,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1439,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1440,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1441,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1442,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1443,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1444,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1445,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1446,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1447,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1448,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1449,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1450,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1451,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1452,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1453,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1454,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1455,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1456,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1457,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1458,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1459,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1460,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1461,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1462,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1463,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1464,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1465,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1466,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1467,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1468,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1469,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1470,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1471,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1472,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1473,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1474,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1475,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1476,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1477,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1478,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1479,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1480,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1481,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1482,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1483,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1484,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1485,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1486,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1487,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1488,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1489,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1490,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1491,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1492,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1493,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1494,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1495,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1496,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1497,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1498,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1499,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1500,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1501,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1502,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1503,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1504,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1505,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1506,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1507,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1508,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1509,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1510,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1511,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1512,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1513,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1514,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1515,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1516,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1517,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1518,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1519,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1520,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1521,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1522,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1523,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1524,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1525,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1526,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1527,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1528,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1529,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1530,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1531,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1532,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1533,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1534,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1535,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1536,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1537,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1538,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1539,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1540,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1541,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1542,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1543,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1544,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1545,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1546,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1547,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1548,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1549,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1550,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1551,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1552,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1553,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1554,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1555,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1556,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1557,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1558,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1559,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1560,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1561,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1562,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1563,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1564,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1565,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1566,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1567,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1568,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1569,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1570,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1571,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1572,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1573,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1574,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1575,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1576,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1577,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1578,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1579,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1580,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1581,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1582,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1583,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1584,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1585,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1586,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1587,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1588,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1589,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1590,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1591,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1592,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1593,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1594,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1595,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1596,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1597,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1598,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1599,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1600,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1601,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1602,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1603,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1604,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1605,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1606,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1607,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1608,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1609,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1610,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1611,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1612,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1613,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1614,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1615,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1616,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1617,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1618,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1619,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1620,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1621,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1622,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1623,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1624,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1625,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1626,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1627,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1628,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1629,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1630,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1631,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1632,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1633,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1634,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1635,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1636,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1637,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1638,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1639,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1640,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1641,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1642,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1643,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1644,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1645,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1646,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1647,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1648,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1649,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1650,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1651,
									"scores":	[-4.15445549323838]
								}, {
									"case":	1652,
									"scores":	[-4.15445549323838]
								}]
						}]
				}, {
					"line":	3499,
					"switches":	[{
							"switch":	48,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3500,
							"begin_column":	1,
							"end_line":	3500,
							"end_column":	1,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3500\", 13, &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(value), sizeof (value), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	2,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	3,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	4,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	5,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	6,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	7,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	8,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	9,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	10,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	11,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	12,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	13,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	14,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	15,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	16,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	17,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	18,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	19,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	20,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	21,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	22,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	23,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	24,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	25,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	26,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	27,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	28,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	29,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	30,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	31,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	32,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	33,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	34,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	35,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	36,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	37,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	38,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	39,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	40,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	41,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	42,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	43,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	44,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	45,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	46,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	47,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	48,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	49,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	50,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	51,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	52,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	53,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	54,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	55,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	56,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	57,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	58,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	59,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	60,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	61,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	62,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	63,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	64,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	65,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	66,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	67,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	68,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	69,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	70,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	71,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	72,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	73,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	74,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	75,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	76,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	77,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	78,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	79,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	80,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	81,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	82,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	83,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	84,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	85,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	86,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	87,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	88,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	89,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	90,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	91,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	92,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	93,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	94,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	95,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	96,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	97,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	98,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	99,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	100,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	101,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	102,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	103,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	104,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	105,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	106,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	107,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	108,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	109,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	110,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	111,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	112,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	113,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	114,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	115,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	116,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	117,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	118,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	119,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	120,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	121,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	122,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	123,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	124,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	125,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	126,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	127,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	128,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	129,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	130,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	131,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	132,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	133,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	134,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	135,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	136,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	137,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	138,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	139,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	140,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	141,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	142,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	143,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	144,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	145,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	146,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	147,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	148,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	149,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	150,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	151,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	152,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	153,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	154,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	155,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	156,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	157,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	158,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	159,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	160,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	161,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	162,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	163,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	164,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	165,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	166,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	167,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	168,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	169,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	170,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	171,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	172,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	173,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	174,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	175,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	176,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	177,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	178,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	179,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	180,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	181,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	182,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	183,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	184,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	185,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	186,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	187,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	188,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	189,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	190,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	191,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	192,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	193,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	194,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	195,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	196,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	197,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	198,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	199,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	200,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	201,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	202,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	203,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	204,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	205,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	206,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	207,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	208,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	209,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	210,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	211,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	212,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	213,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	214,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	215,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	216,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	217,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	218,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	219,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	220,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	221,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	222,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	223,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	224,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	225,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	226,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	227,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	228,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	229,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	230,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	231,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	232,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	233,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	234,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	235,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	236,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	237,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	238,
									"scores":	[-6.0732792765807044, -5.5728371067807041, -5.4031097847807041, -5.6606949587807041, -5.6491486985807047, -5.6862490985807046, -6.2172559587807044, -6.2172559587807044, -6.2172559587807044, -6.2172559587807044, -6.2172559587807044, -6.2172559587807044, -5.7163209587807042]
								}]
						}, {
							"switch":	49,
							"types":	[[], [], [1], [], [], [], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [], [], [], [], [], [2]],
							"begin_line":	3500,
							"begin_column":	3,
							"end_line":	3500,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L3500\", 13, &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(value), sizeof (value), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n", "{\n}\n", "Debug(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_printf(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_stream_wrapper_log_error(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "printf(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "virtual_open(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "wprintf(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "zend_class_implements(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "zend_fcall_info_argn(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "zend_ptr_stack_n_pop(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "zend_ptr_stack_n_push(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((0 * type) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((0 * value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((key != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((key == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((member != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((member != retval) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((member == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((member == retval) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((obj != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((obj == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object != member) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object != retval) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object == member) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((object == retval) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((retval != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((retval == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((tmp_member != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((tmp_member == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type != value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type * value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type + 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type + value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type - 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type - value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((type == value) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((value != 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((value * type) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((value + 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((value - 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), ((value == 0) << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (0 * type)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (0 * value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (key != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (key == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (member != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (member != retval)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (member == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (member == retval)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (obj != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (obj == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object != member)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object != retval)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object == member)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (object == retval)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (retval != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (retval == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (tmp_member != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (tmp_member == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type != value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type * value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type + 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type + value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type - 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type - value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (type == value)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (value != 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (value * type)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (value + 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (value - 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << (value == 0)), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s) or the directory does not exist\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&key)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&obj)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&retval)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&tmp_member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&type)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(&value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&key), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&member), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&obj), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&object), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&retval), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&tmp_member), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&type), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (&value), (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), (0), (*member).value.str.val)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7226822973807043, -4.7656019073807041, -4.484932397380704, -4.7987300973807043, -5.2428204973807047, -5.5371712973807048, -5.0097772073807043, -5.0097772073807043, -5.0097772073807043, -5.0097772073807043, -5.0097772073807043, -5.0097772073807043, -4.6877661773807047]
								}, {
									"case":	2,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	3,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	4,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	5,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	6,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	7,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	8,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	9,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	10,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	11,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	12,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	13,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	14,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	15,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	16,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	17,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	18,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	19,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	20,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	21,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	22,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	23,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	24,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	25,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	26,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	27,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	28,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	29,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	30,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	31,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	32,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	33,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	34,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	35,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	36,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	37,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	38,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	39,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	40,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	41,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	42,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	43,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	44,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	45,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	46,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	47,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	48,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	49,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	50,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	51,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	52,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	53,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	54,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	55,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	56,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	57,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	58,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	59,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	60,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	61,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	62,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	63,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	64,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	65,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	66,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	67,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	68,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	69,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	70,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	71,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	72,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	73,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	74,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	75,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	76,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	77,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	78,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	79,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	80,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	81,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	82,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	83,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	84,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	85,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	86,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	87,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	88,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	89,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	90,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	91,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	92,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	93,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	94,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	95,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	96,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	97,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	98,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	99,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	100,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	101,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	102,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	103,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	104,
									"scores":	[-3.9726311273807045]
								}]
						}]
				}, {
					"line":	3498,
					"switches":	[{
							"switch":	46,
							"types":	[[], [], [], [], [238], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [], [], [], [], [], []],
							"begin_line":	3499,
							"begin_column":	0,
							"end_line":	3499,
							"end_column":	0,
							"patch_codes":	["memset(&(*member), 0, sizeof (*(&(*member))))", "memset(&(*member).is_ref__gc, 0, sizeof (*(&(*member).is_ref__gc)))", "memset(&(*member).refcount__gc, 0, sizeof (*(&(*member).refcount__gc)))", "memset(&(*member).type, 0, sizeof (*(&(*member).type)))", "memset(&(*member).value, 0, sizeof (*(&(*member).value)))", "memset(&(*member).value.dval, 0, sizeof (*(&(*member).value.dval)))", "memset(&(*member).value.ht, 0, sizeof (*(&(*member).value.ht)))", "memset(&(*member).value.lval, 0, sizeof (*(&(*member).value.lval)))", "memset(&(*member).value.obj, 0, sizeof (*(&(*member).value.obj)))", "memset(&(*member).value.str, 0, sizeof (*(&(*member).value.str)))", "memset(&(*member).value.str.len, 0, sizeof (*(&(*member).value.str.len)))", "memset(&(*member).value.str.val, 0, sizeof (*(&(*member).value.str.val)))", "memset(&member->is_ref__gc, 0, sizeof (*(&member->is_ref__gc)))", "memset(&member->refcount__gc, 0, sizeof (*(&member->refcount__gc)))", "memset(&member->type, 0, sizeof (*(&member->type)))", "memset(&member->value, 0, sizeof (*(&member->value)))", "memset((*member).value.ht, 0, sizeof (*((*member).value.ht)))", "memset((*member).value.str.val, 0, sizeof (*((*member).value.str.val)))", "memset(member, 0, sizeof (*(member)))", "_array_init(((member)), 0)", "_array_init(((object)), 0)", "_array_init(((retval)), 0)", "_efree(((member)))", "_efree(((object)))", "_efree(((retval)))", "_zval_copy_ctor(((member)))", "_zval_copy_ctor(((object)))", "_zval_copy_ctor(((retval)))", "_zval_copy_ctor_func((member))", "_zval_copy_ctor_func((object))", "_zval_copy_ctor_func((retval))", "_zval_dtor(((member)))", "_zval_dtor(((object)))", "_zval_dtor(((retval)))", "_zval_dtor_func((member))", "_zval_dtor_func((object))", "_zval_dtor_func((retval))", "_zval_ptr_dtor((&(member)))", "_zval_ptr_dtor((&(object)))", "_zval_ptr_dtor((&(retval)))", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((member), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((member), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((member), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((member), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((member), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((member), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((member), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((member), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((member), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((member), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((object), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((object), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((object), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((object), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((object), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((object), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((object), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((object), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((object), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((object), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((retval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((retval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((retval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((retval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((retval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((retval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((retval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((retval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((retval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((member), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((object), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((retval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((member))", "convert_to_boolean((object))", "convert_to_boolean((retval))", "gc_remove_zval_from_buffer((member))", "gc_remove_zval_from_buffer((object))", "gc_remove_zval_from_buffer((retval))", "gc_zval_check_possible_root(((member)))", "gc_zval_check_possible_root(((object)))", "gc_zval_check_possible_root(((retval)))", "gc_zval_possible_root((member))", "gc_zval_possible_root((object))", "gc_zval_possible_root((retval))", "i_zval_ptr_dtor((member))", "i_zval_ptr_dtor((object))", "i_zval_ptr_dtor((retval))", "member = (member)", "member = (object)", "member = (retval)", "memset((obj), 0, sizeof(php_interval_obj))", "obj = (obj)", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (6)", "php_date_global_timezone_db_enabled = (type)", "php_date_instantiate(date_ce_date, (member))", "php_date_instantiate(date_ce_date, (object))", "php_date_instantiate(date_ce_date, (retval))", "php_date_instantiate(date_ce_interval, (member))", "php_date_instantiate(date_ce_interval, (object))", "php_date_instantiate(date_ce_interval, (retval))", "php_date_instantiate(date_ce_timezone, (member))", "php_date_instantiate(date_ce_timezone, (object))", "php_date_instantiate(date_ce_timezone, (retval))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(member)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(object)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(retval)).value.str.val)", "timelib_rel_time_dtor((obj)->diff)", "tmp_member = (tmp_member)", "tmp_member = *(member)", "tmp_member = *(object)", "tmp_member = *(retval)", "zend_object_std_dtor(&(obj)->std)", "zval_addref_p((member))", "zval_addref_p((object))", "zval_addref_p((retval))", "zval_from_error_container((member), (date_globals.last_errors))", "zval_from_error_container((object), (date_globals.last_errors))", "zval_from_error_container((retval), (date_globals.last_errors))", "zval_set_refcount_p((member), 0)", "zval_set_refcount_p((member), 1)", "zval_set_refcount_p((object), 0)", "zval_set_refcount_p((object), 1)", "zval_set_refcount_p((retval), 0)", "zval_set_refcount_p((retval), 1)", "zval_unset_isref_p((member))", "zval_unset_isref_p((object))", "zval_unset_isref_p((retval))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_convert_to_string((&tmp_member))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "_zval_copy_ctor((&tmp_member))", "_zval_dtor((member))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "member = &tmp_member", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "obj = (php_interval_obj *)zend_objects_get_address(object)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val)", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "tmp_member = *member", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zval_set_refcount_p(retval, 0)", "if (__is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    return 0;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.13425278592086]
								}, {
									"case":	2,
									"scores":	[-4.13425278592086]
								}, {
									"case":	3,
									"scores":	[-4.13425278592086]
								}, {
									"case":	4,
									"scores":	[-4.13425278592086]
								}, {
									"case":	5,
									"scores":	[-4.13425278592086]
								}, {
									"case":	6,
									"scores":	[-4.13425278592086]
								}, {
									"case":	7,
									"scores":	[-4.13425278592086]
								}, {
									"case":	8,
									"scores":	[-4.13425278592086]
								}, {
									"case":	9,
									"scores":	[-4.13425278592086]
								}, {
									"case":	10,
									"scores":	[-4.13425278592086]
								}, {
									"case":	11,
									"scores":	[-4.13425278592086]
								}, {
									"case":	12,
									"scores":	[-4.13425278592086]
								}, {
									"case":	13,
									"scores":	[-4.13425278592086]
								}, {
									"case":	14,
									"scores":	[-4.13425278592086]
								}, {
									"case":	15,
									"scores":	[-4.13425278592086]
								}, {
									"case":	16,
									"scores":	[-4.13425278592086]
								}, {
									"case":	17,
									"scores":	[-4.13425278592086]
								}, {
									"case":	18,
									"scores":	[-4.13425278592086]
								}, {
									"case":	19,
									"scores":	[-4.13425278592086]
								}, {
									"case":	20,
									"scores":	[-4.13425278592086]
								}, {
									"case":	21,
									"scores":	[-4.13425278592086]
								}, {
									"case":	22,
									"scores":	[-4.13425278592086]
								}, {
									"case":	23,
									"scores":	[-4.13425278592086]
								}, {
									"case":	24,
									"scores":	[-4.13425278592086]
								}, {
									"case":	25,
									"scores":	[-4.13425278592086]
								}, {
									"case":	26,
									"scores":	[-4.13425278592086]
								}, {
									"case":	27,
									"scores":	[-4.13425278592086]
								}, {
									"case":	28,
									"scores":	[-4.13425278592086]
								}, {
									"case":	29,
									"scores":	[-4.13425278592086]
								}, {
									"case":	30,
									"scores":	[-4.13425278592086]
								}, {
									"case":	31,
									"scores":	[-4.13425278592086]
								}, {
									"case":	32,
									"scores":	[-4.13425278592086]
								}, {
									"case":	33,
									"scores":	[-4.13425278592086]
								}, {
									"case":	34,
									"scores":	[-4.13425278592086]
								}, {
									"case":	35,
									"scores":	[-4.13425278592086]
								}, {
									"case":	36,
									"scores":	[-4.13425278592086]
								}, {
									"case":	37,
									"scores":	[-4.13425278592086]
								}, {
									"case":	38,
									"scores":	[-4.13425278592086]
								}, {
									"case":	39,
									"scores":	[-4.13425278592086]
								}, {
									"case":	40,
									"scores":	[-4.13425278592086]
								}, {
									"case":	41,
									"scores":	[-4.13425278592086]
								}, {
									"case":	42,
									"scores":	[-4.13425278592086]
								}, {
									"case":	43,
									"scores":	[-4.13425278592086]
								}, {
									"case":	44,
									"scores":	[-4.13425278592086]
								}, {
									"case":	45,
									"scores":	[-4.13425278592086]
								}, {
									"case":	46,
									"scores":	[-4.13425278592086]
								}, {
									"case":	47,
									"scores":	[-4.13425278592086]
								}, {
									"case":	48,
									"scores":	[-4.13425278592086]
								}, {
									"case":	49,
									"scores":	[-4.13425278592086]
								}, {
									"case":	50,
									"scores":	[-4.13425278592086]
								}, {
									"case":	51,
									"scores":	[-4.13425278592086]
								}, {
									"case":	52,
									"scores":	[-4.13425278592086]
								}, {
									"case":	53,
									"scores":	[-4.13425278592086]
								}, {
									"case":	54,
									"scores":	[-4.13425278592086]
								}, {
									"case":	55,
									"scores":	[-4.13425278592086]
								}, {
									"case":	56,
									"scores":	[-4.13425278592086]
								}, {
									"case":	57,
									"scores":	[-4.13425278592086]
								}, {
									"case":	58,
									"scores":	[-4.13425278592086]
								}, {
									"case":	59,
									"scores":	[-4.13425278592086]
								}, {
									"case":	60,
									"scores":	[-4.13425278592086]
								}, {
									"case":	61,
									"scores":	[-4.13425278592086]
								}, {
									"case":	62,
									"scores":	[-4.13425278592086]
								}, {
									"case":	63,
									"scores":	[-4.13425278592086]
								}, {
									"case":	64,
									"scores":	[-4.13425278592086]
								}, {
									"case":	65,
									"scores":	[-4.13425278592086]
								}, {
									"case":	66,
									"scores":	[-4.13425278592086]
								}, {
									"case":	67,
									"scores":	[-4.13425278592086]
								}, {
									"case":	68,
									"scores":	[-4.13425278592086]
								}, {
									"case":	69,
									"scores":	[-4.13425278592086]
								}, {
									"case":	70,
									"scores":	[-4.13425278592086]
								}, {
									"case":	71,
									"scores":	[-4.13425278592086]
								}, {
									"case":	72,
									"scores":	[-4.13425278592086]
								}, {
									"case":	73,
									"scores":	[-4.13425278592086]
								}, {
									"case":	74,
									"scores":	[-4.13425278592086]
								}, {
									"case":	75,
									"scores":	[-4.13425278592086]
								}, {
									"case":	76,
									"scores":	[-4.13425278592086]
								}, {
									"case":	77,
									"scores":	[-4.13425278592086]
								}, {
									"case":	78,
									"scores":	[-4.13425278592086]
								}, {
									"case":	79,
									"scores":	[-4.13425278592086]
								}, {
									"case":	80,
									"scores":	[-4.13425278592086]
								}, {
									"case":	81,
									"scores":	[-4.13425278592086]
								}, {
									"case":	82,
									"scores":	[-4.13425278592086]
								}, {
									"case":	83,
									"scores":	[-4.13425278592086]
								}, {
									"case":	84,
									"scores":	[-4.13425278592086]
								}, {
									"case":	85,
									"scores":	[-4.13425278592086]
								}, {
									"case":	86,
									"scores":	[-4.13425278592086]
								}, {
									"case":	87,
									"scores":	[-4.13425278592086]
								}, {
									"case":	88,
									"scores":	[-4.13425278592086]
								}, {
									"case":	89,
									"scores":	[-4.13425278592086]
								}, {
									"case":	90,
									"scores":	[-4.13425278592086]
								}, {
									"case":	91,
									"scores":	[-4.13425278592086]
								}, {
									"case":	92,
									"scores":	[-4.13425278592086]
								}, {
									"case":	93,
									"scores":	[-4.13425278592086]
								}, {
									"case":	94,
									"scores":	[-4.13425278592086]
								}, {
									"case":	95,
									"scores":	[-4.13425278592086]
								}, {
									"case":	96,
									"scores":	[-4.13425278592086]
								}, {
									"case":	97,
									"scores":	[-4.13425278592086]
								}, {
									"case":	98,
									"scores":	[-4.13425278592086]
								}, {
									"case":	99,
									"scores":	[-4.13425278592086]
								}, {
									"case":	100,
									"scores":	[-4.13425278592086]
								}, {
									"case":	101,
									"scores":	[-4.13425278592086]
								}, {
									"case":	102,
									"scores":	[-4.13425278592086]
								}, {
									"case":	103,
									"scores":	[-4.13425278592086]
								}, {
									"case":	104,
									"scores":	[-4.13425278592086]
								}, {
									"case":	105,
									"scores":	[-4.13425278592086]
								}, {
									"case":	106,
									"scores":	[-4.13425278592086]
								}, {
									"case":	107,
									"scores":	[-4.13425278592086]
								}, {
									"case":	108,
									"scores":	[-4.13425278592086]
								}, {
									"case":	109,
									"scores":	[-4.13425278592086]
								}, {
									"case":	110,
									"scores":	[-4.13425278592086]
								}, {
									"case":	111,
									"scores":	[-4.13425278592086]
								}, {
									"case":	112,
									"scores":	[-4.13425278592086]
								}, {
									"case":	113,
									"scores":	[-4.13425278592086]
								}, {
									"case":	114,
									"scores":	[-4.13425278592086]
								}, {
									"case":	115,
									"scores":	[-4.13425278592086]
								}, {
									"case":	116,
									"scores":	[-4.13425278592086]
								}, {
									"case":	117,
									"scores":	[-4.13425278592086]
								}, {
									"case":	118,
									"scores":	[-4.13425278592086]
								}, {
									"case":	119,
									"scores":	[-4.13425278592086]
								}, {
									"case":	120,
									"scores":	[-4.13425278592086]
								}, {
									"case":	121,
									"scores":	[-4.13425278592086]
								}, {
									"case":	122,
									"scores":	[-4.13425278592086]
								}, {
									"case":	123,
									"scores":	[-4.13425278592086]
								}, {
									"case":	124,
									"scores":	[-4.13425278592086]
								}, {
									"case":	125,
									"scores":	[-4.13425278592086]
								}, {
									"case":	126,
									"scores":	[-4.13425278592086]
								}, {
									"case":	127,
									"scores":	[-4.13425278592086]
								}, {
									"case":	128,
									"scores":	[-4.13425278592086]
								}, {
									"case":	129,
									"scores":	[-4.13425278592086]
								}, {
									"case":	130,
									"scores":	[-4.13425278592086]
								}, {
									"case":	131,
									"scores":	[-4.13425278592086]
								}, {
									"case":	132,
									"scores":	[-4.13425278592086]
								}, {
									"case":	133,
									"scores":	[-4.13425278592086]
								}, {
									"case":	134,
									"scores":	[-4.13425278592086]
								}, {
									"case":	135,
									"scores":	[-4.13425278592086]
								}, {
									"case":	136,
									"scores":	[-4.13425278592086]
								}, {
									"case":	137,
									"scores":	[-4.13425278592086]
								}, {
									"case":	138,
									"scores":	[-4.13425278592086]
								}, {
									"case":	139,
									"scores":	[-4.13425278592086]
								}, {
									"case":	140,
									"scores":	[-4.13425278592086]
								}, {
									"case":	141,
									"scores":	[-4.13425278592086]
								}, {
									"case":	142,
									"scores":	[-4.13425278592086]
								}, {
									"case":	143,
									"scores":	[-4.13425278592086]
								}, {
									"case":	144,
									"scores":	[-4.13425278592086]
								}, {
									"case":	145,
									"scores":	[-4.13425278592086]
								}, {
									"case":	146,
									"scores":	[-4.13425278592086]
								}, {
									"case":	147,
									"scores":	[-4.13425278592086]
								}, {
									"case":	148,
									"scores":	[-4.13425278592086]
								}, {
									"case":	149,
									"scores":	[-4.13425278592086]
								}, {
									"case":	150,
									"scores":	[-4.13425278592086]
								}, {
									"case":	151,
									"scores":	[-4.13425278592086]
								}, {
									"case":	152,
									"scores":	[-4.13425278592086]
								}, {
									"case":	153,
									"scores":	[-4.13425278592086]
								}, {
									"case":	154,
									"scores":	[-4.13425278592086]
								}, {
									"case":	155,
									"scores":	[-4.13425278592086]
								}, {
									"case":	156,
									"scores":	[-4.13425278592086]
								}, {
									"case":	157,
									"scores":	[-4.13425278592086]
								}, {
									"case":	158,
									"scores":	[-4.13425278592086]
								}, {
									"case":	159,
									"scores":	[-4.13425278592086]
								}, {
									"case":	160,
									"scores":	[-4.13425278592086]
								}, {
									"case":	161,
									"scores":	[-4.13425278592086]
								}, {
									"case":	162,
									"scores":	[-4.13425278592086]
								}, {
									"case":	163,
									"scores":	[-4.13425278592086]
								}, {
									"case":	164,
									"scores":	[-4.13425278592086]
								}, {
									"case":	165,
									"scores":	[-4.13425278592086]
								}, {
									"case":	166,
									"scores":	[-4.13425278592086]
								}, {
									"case":	167,
									"scores":	[-4.13425278592086]
								}, {
									"case":	168,
									"scores":	[-4.13425278592086]
								}, {
									"case":	169,
									"scores":	[-4.13425278592086]
								}, {
									"case":	170,
									"scores":	[-4.13425278592086]
								}, {
									"case":	171,
									"scores":	[-4.13425278592086]
								}, {
									"case":	172,
									"scores":	[-4.13425278592086]
								}, {
									"case":	173,
									"scores":	[-4.13425278592086]
								}, {
									"case":	174,
									"scores":	[-4.13425278592086]
								}, {
									"case":	175,
									"scores":	[-4.13425278592086]
								}, {
									"case":	176,
									"scores":	[-4.13425278592086]
								}, {
									"case":	177,
									"scores":	[-4.13425278592086]
								}, {
									"case":	178,
									"scores":	[-4.13425278592086]
								}, {
									"case":	179,
									"scores":	[-4.13425278592086]
								}, {
									"case":	180,
									"scores":	[-4.13425278592086]
								}, {
									"case":	181,
									"scores":	[-4.13425278592086]
								}, {
									"case":	182,
									"scores":	[-4.13425278592086]
								}, {
									"case":	183,
									"scores":	[-4.13425278592086]
								}, {
									"case":	184,
									"scores":	[-4.13425278592086]
								}, {
									"case":	185,
									"scores":	[-4.13425278592086]
								}, {
									"case":	186,
									"scores":	[-4.13425278592086]
								}, {
									"case":	187,
									"scores":	[-4.13425278592086]
								}, {
									"case":	188,
									"scores":	[-4.13425278592086]
								}, {
									"case":	189,
									"scores":	[-4.13425278592086]
								}, {
									"case":	190,
									"scores":	[-4.13425278592086]
								}, {
									"case":	191,
									"scores":	[-4.13425278592086]
								}, {
									"case":	192,
									"scores":	[-4.13425278592086]
								}, {
									"case":	193,
									"scores":	[-4.13425278592086]
								}, {
									"case":	194,
									"scores":	[-4.13425278592086]
								}, {
									"case":	195,
									"scores":	[-4.13425278592086]
								}, {
									"case":	196,
									"scores":	[-4.13425278592086]
								}, {
									"case":	197,
									"scores":	[-4.13425278592086]
								}, {
									"case":	198,
									"scores":	[-4.13425278592086]
								}, {
									"case":	199,
									"scores":	[-4.13425278592086]
								}, {
									"case":	200,
									"scores":	[-4.13425278592086]
								}, {
									"case":	201,
									"scores":	[-4.13425278592086]
								}, {
									"case":	202,
									"scores":	[-4.13425278592086]
								}, {
									"case":	203,
									"scores":	[-4.13425278592086]
								}, {
									"case":	204,
									"scores":	[-4.13425278592086]
								}, {
									"case":	205,
									"scores":	[-4.13425278592086]
								}, {
									"case":	206,
									"scores":	[-4.13425278592086]
								}, {
									"case":	207,
									"scores":	[-4.13425278592086]
								}, {
									"case":	208,
									"scores":	[-4.13425278592086]
								}, {
									"case":	209,
									"scores":	[-4.13425278592086]
								}, {
									"case":	210,
									"scores":	[-4.13425278592086]
								}, {
									"case":	211,
									"scores":	[-4.13425278592086]
								}, {
									"case":	212,
									"scores":	[-4.13425278592086]
								}, {
									"case":	213,
									"scores":	[-4.13425278592086]
								}, {
									"case":	214,
									"scores":	[-4.13425278592086]
								}, {
									"case":	215,
									"scores":	[-4.13425278592086]
								}, {
									"case":	216,
									"scores":	[-4.13425278592086]
								}, {
									"case":	217,
									"scores":	[-4.13425278592086]
								}, {
									"case":	218,
									"scores":	[-4.13425278592086]
								}, {
									"case":	219,
									"scores":	[-4.13425278592086]
								}, {
									"case":	220,
									"scores":	[-4.13425278592086]
								}, {
									"case":	221,
									"scores":	[-4.13425278592086]
								}, {
									"case":	222,
									"scores":	[-4.13425278592086]
								}, {
									"case":	223,
									"scores":	[-4.13425278592086]
								}, {
									"case":	224,
									"scores":	[-4.13425278592086]
								}, {
									"case":	225,
									"scores":	[-4.13425278592086]
								}, {
									"case":	226,
									"scores":	[-4.13425278592086]
								}, {
									"case":	227,
									"scores":	[-4.13425278592086]
								}, {
									"case":	228,
									"scores":	[-4.13425278592086]
								}, {
									"case":	229,
									"scores":	[-4.13425278592086]
								}, {
									"case":	230,
									"scores":	[-4.13425278592086]
								}, {
									"case":	231,
									"scores":	[-4.13425278592086]
								}, {
									"case":	232,
									"scores":	[-4.13425278592086]
								}, {
									"case":	233,
									"scores":	[-4.13425278592086]
								}, {
									"case":	234,
									"scores":	[-4.13425278592086]
								}, {
									"case":	235,
									"scores":	[-4.13425278592086]
								}, {
									"case":	236,
									"scores":	[-4.13425278592086]
								}, {
									"case":	237,
									"scores":	[-4.13425278592086]
								}, {
									"case":	238,
									"scores":	[-7.61462720192086, -9.61308272672086, -8.36055190392086, -8.46852383592086, -8.43686349572086, -8.47396389572086, -9.00497075592086, -9.00497075592086, -9.00497075592086, -9.00497075592086, -9.00497075592086, -9.00497075592086, -8.50403575592086]
								}]
						}, {
							"switch":	47,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	3499,
							"begin_column":	2,
							"end_line":	3501,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n}\n", "if ((value == -1) || __is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n}\n", "if ((value == -1) && !__is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len))) {\n    php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-0.70316641542814562, -3.6779782644281456, -3.7215093654281457, -3.8436204014281454, -4.1987279554281463, -4.4930787554281455, -3.9656846654281459, -3.9656846654281459, -3.9656846654281459, -3.9656846654281459, -3.9656846654281459, -3.9656846654281459, -3.6436736354281458]
								}, {
									"case":	2,
									"scores":	[-2.2724349484281454, -5.2472467974281454, -5.2907778984281455, -5.4128889344281461, -5.7679964884281461, -6.0623472884281462, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.2129421684281461]
								}, {
									"case":	3,
									"scores":	[-2.2724349484281454, -5.2472467974281454, -5.2907778984281455, -5.4128889344281461, -5.7679964884281461, -6.0623472884281462, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.5349531984281457, -5.2129421684281461]
								}]
						}, {
							"switch":	50,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3499,
							"begin_column":	2,
							"end_line":	3501,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)))\n    if (value == -1) {\n        php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n    }\n", "if (!__is_neg(\"\", \"L3499\", 13, &(value), sizeof (value), &(member), sizeof (member), &((*member).value.str.val), sizeof ((*member).value.str.val), &(retval), sizeof (retval), &(obj), sizeof (obj), &(object), sizeof (object), &(member->type), sizeof (member->type), &(member->refcount__gc), sizeof (member->refcount__gc), &(member->is_ref__gc), sizeof (member->is_ref__gc), &((*member).refcount__gc), sizeof ((*member).refcount__gc), &((*member).type), sizeof ((*member).type), &((*member).is_ref__gc), sizeof ((*member).is_ref__gc), &((*member).value.str.len), sizeof ((*member).value.str.len)) && (value == -1)) {\n    php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*member).value.str.val);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.02351800592086, -5.99832985492086, -6.04186095592086, -6.16397199192086, -6.51907954592086, -6.81343034592086, -6.28603625592086, -6.28603625592086, -6.28603625592086, -6.28603625592086, -6.28603625592086, -6.28603625592086, -5.96402522592086]
								}, {
									"case":	2,
									"scores":	[-3.39481829592086, -6.36963014492086, -6.41316124592086, -6.53527228192086, -6.89037983592086, -7.18473063592086, -6.65733654592086, -6.65733654592086, -6.65733654592086, -6.65733654592086, -6.65733654592086, -6.65733654592086, -6.33532551592086]
								}]
						}]
				}, {
					"line":	3566,
					"switches":	[]
				}, {
					"line":	3567,
					"switches":	[]
				}, {
					"line":	3568,
					"switches":	[]
				}, {
					"line":	3569,
					"switches":	[]
				}, {
					"line":	3570,
					"switches":	[]
				}, {
					"line":	3572,
					"switches":	[{
							"switch":	51,
							"types":	[[], [], [], [], [192], [], [], [], [], [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [], [], [], [], [], []],
							"begin_line":	3573,
							"begin_column":	0,
							"end_line":	3573,
							"end_column":	0,
							"patch_codes":	["(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3573\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	168,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	169,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	170,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	171,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	172,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	173,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	174,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	175,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	176,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	177,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	178,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	179,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	180,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	181,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	182,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	183,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	184,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	185,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	186,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	187,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	188,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	189,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	190,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	191,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	192,
									"scores":	[-9.64522229394878, -10.061083020948779, -9.34925890394878, -9.68524516474878, -10.21433020774878, -10.543582931648778]
								}]
						}, {
							"switch":	52,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3573,
							"begin_column":	2,
							"end_line":	3573,
							"end_column":	71,
							"patch_codes":	["if (!__is_neg(\"\", \"L3573\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling);\n", "{\n}\n", "zend_replace_error_handling((0 * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zend_replace_error_handling((diobj != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((diobj == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((error_handling != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((error_handling == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval_string_length == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((reltime != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((reltime == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != this_ptr), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == this_ptr), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_ptr != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_ptr == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == interval_string_length), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr == 0), ((void *)0), &error_handling)", "zend_replace_error_handling(EH_THROW, ((void *)0), &(error_handling))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.19791725254878, -8.84768965254878, -8.05641862254878, -8.75151841354878, -7.82889871254878, -9.71973802244878]
								}, {
									"case":	2,
									"scores":	[-7.16465888354878]
								}, {
									"case":	3,
									"scores":	[-7.16465888354878]
								}, {
									"case":	4,
									"scores":	[-7.16465888354878]
								}, {
									"case":	5,
									"scores":	[-7.16465888354878]
								}, {
									"case":	6,
									"scores":	[-7.16465888354878]
								}, {
									"case":	7,
									"scores":	[-7.16465888354878]
								}, {
									"case":	8,
									"scores":	[-7.16465888354878]
								}, {
									"case":	9,
									"scores":	[-7.16465888354878]
								}, {
									"case":	10,
									"scores":	[-7.16465888354878]
								}, {
									"case":	11,
									"scores":	[-7.16465888354878]
								}, {
									"case":	12,
									"scores":	[-7.16465888354878]
								}, {
									"case":	13,
									"scores":	[-7.16465888354878]
								}, {
									"case":	14,
									"scores":	[-7.16465888354878]
								}, {
									"case":	15,
									"scores":	[-7.16465888354878]
								}, {
									"case":	16,
									"scores":	[-7.16465888354878]
								}, {
									"case":	17,
									"scores":	[-7.16465888354878]
								}, {
									"case":	18,
									"scores":	[-7.16465888354878]
								}, {
									"case":	19,
									"scores":	[-7.16465888354878]
								}, {
									"case":	20,
									"scores":	[-7.16465888354878]
								}, {
									"case":	21,
									"scores":	[-7.16465888354878]
								}, {
									"case":	22,
									"scores":	[-7.16465888354878]
								}, {
									"case":	23,
									"scores":	[-7.16465888354878]
								}, {
									"case":	24,
									"scores":	[-7.16465888354878]
								}, {
									"case":	25,
									"scores":	[-7.16465888354878]
								}, {
									"case":	26,
									"scores":	[-7.16465888354878]
								}, {
									"case":	27,
									"scores":	[-7.16465888354878]
								}, {
									"case":	28,
									"scores":	[-7.16465888354878]
								}, {
									"case":	29,
									"scores":	[-7.16465888354878]
								}, {
									"case":	30,
									"scores":	[-7.16465888354878]
								}, {
									"case":	31,
									"scores":	[-7.16465888354878]
								}, {
									"case":	32,
									"scores":	[-7.16465888354878]
								}, {
									"case":	33,
									"scores":	[-7.16465888354878]
								}, {
									"case":	34,
									"scores":	[-7.16465888354878]
								}, {
									"case":	35,
									"scores":	[-7.16465888354878]
								}, {
									"case":	36,
									"scores":	[-7.16465888354878]
								}, {
									"case":	37,
									"scores":	[-7.16465888354878]
								}, {
									"case":	38,
									"scores":	[-7.16465888354878]
								}, {
									"case":	39,
									"scores":	[-7.16465888354878]
								}, {
									"case":	40,
									"scores":	[-7.16465888354878]
								}, {
									"case":	41,
									"scores":	[-7.16465888354878]
								}, {
									"case":	42,
									"scores":	[-7.16465888354878]
								}, {
									"case":	43,
									"scores":	[-7.16465888354878]
								}, {
									"case":	44,
									"scores":	[-7.16465888354878]
								}, {
									"case":	45,
									"scores":	[-7.16465888354878]
								}, {
									"case":	46,
									"scores":	[-7.16465888354878]
								}, {
									"case":	47,
									"scores":	[-7.16465888354878]
								}, {
									"case":	48,
									"scores":	[-7.16465888354878]
								}, {
									"case":	49,
									"scores":	[-7.16465888354878]
								}, {
									"case":	50,
									"scores":	[-7.16465888354878]
								}, {
									"case":	51,
									"scores":	[-7.16465888354878]
								}, {
									"case":	52,
									"scores":	[-7.16465888354878]
								}, {
									"case":	53,
									"scores":	[-7.16465888354878]
								}, {
									"case":	54,
									"scores":	[-7.16465888354878]
								}, {
									"case":	55,
									"scores":	[-7.16465888354878]
								}, {
									"case":	56,
									"scores":	[-7.16465888354878]
								}]
						}]
				}, {
					"line":	3575,
					"switches":	[{
							"switch":	57,
							"types":	[[], [], [], [], [199], [1, 2, 3, 4, 5, 6, 7], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	3576,
							"begin_column":	2,
							"end_line":	3576,
							"end_column":	2,
							"patch_codes":	["memset(&diobj->diff, 0, sizeof (*(&diobj->diff)))", "memset(&diobj->initialized, 0, sizeof (*(&diobj->initialized)))", "memset(&diobj->props, 0, sizeof (*(&diobj->props)))", "memset(&diobj->std, 0, sizeof (*(&diobj->std)))", "memset(diobj, 0, sizeof (*(diobj)))", "memset(diobj->diff, 0, sizeof (*(diobj->diff)))", "memset(diobj->props, 0, sizeof (*(diobj->props)))", "(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3576\", 9, &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(ht), sizeof (ht), &(diobj->initialized), sizeof (diobj->initialized), &(diobj->props), sizeof (diobj->props)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	2,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	3,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	4,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	5,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	6,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	7,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	8,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	9,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	10,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	11,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	12,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	13,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	14,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	15,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	16,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	17,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	18,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	19,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	20,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	21,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	22,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	23,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	24,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	25,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	26,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	27,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	28,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	29,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	30,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	31,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	32,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	33,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	34,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	35,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	36,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	37,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	38,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	39,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	40,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	41,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	42,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	43,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	44,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	45,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	46,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	47,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	48,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	49,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	50,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	51,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	52,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	53,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	54,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	55,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	56,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	57,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	58,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	59,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	60,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	61,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	62,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	63,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	64,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	65,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	66,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	67,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	68,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	69,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	70,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	71,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	72,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	73,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	74,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	75,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	76,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	77,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	78,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	79,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	80,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	81,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	82,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	83,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	84,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	85,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	86,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	87,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	88,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	89,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	90,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	91,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	92,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	93,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	94,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	95,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	96,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	97,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	98,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	99,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	100,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	101,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	102,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	103,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	104,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	105,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	106,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	107,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	108,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	109,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	110,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	111,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	112,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	113,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	114,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	115,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	116,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	117,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	118,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	119,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	120,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	121,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	122,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	123,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	124,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	125,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	126,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	127,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	128,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	129,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	130,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	131,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	132,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	133,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	134,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	135,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	136,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	137,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	138,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	139,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	140,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	141,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	142,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	143,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	144,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	145,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	146,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	147,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	148,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	149,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	150,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	151,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	152,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	153,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	154,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	155,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	156,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	157,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	158,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	159,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	160,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	161,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	162,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	163,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	164,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	165,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	166,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	167,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	168,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	169,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	170,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	171,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	172,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	173,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	174,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	175,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	176,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	177,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	178,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	179,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	180,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	181,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	182,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	183,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	184,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	185,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	186,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	187,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	188,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	189,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	190,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	191,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	192,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	193,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	194,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	195,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	196,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	197,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	198,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	199,
									"scores":	[-6.3980171219035071, -8.9091691888035065, -8.8975428941035073, -8.1857187771035065, -8.3896556909035063, -9.71544038490351, -8.7237541771035065, -9.59877994410351, -9.74683886490351]
								}]
						}, {
							"switch":	58,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3576,
							"begin_column":	4,
							"end_line":	3576,
							"end_column":	60,
							"patch_codes":	["if (!__is_neg(\"\", \"L3576\", 9, &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(ht), sizeof (ht), &(diobj->initialized), sizeof (diobj->initialized), &(diobj->props), sizeof (diobj->props)))\n    diobj = zend_object_store_get_object((this_ptr));\n", "{\n}\n", "diobj = (diobj)", "diobj = zend_object_store_get_object(((&diobj)))", "diobj = zend_object_store_get_object(((&error_handling)))", "diobj = zend_object_store_get_object(((&ht)))", "diobj = zend_object_store_get_object(((&interval_string)))", "diobj = zend_object_store_get_object(((&interval_string_length)))", "diobj = zend_object_store_get_object(((&reltime)))", "diobj = zend_object_store_get_object(((&return_value)))", "diobj = zend_object_store_get_object(((&return_value_ptr)))", "diobj = zend_object_store_get_object(((&return_value_used)))", "diobj = zend_object_store_get_object(((&this_ptr)))", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8965968611035073, -8.2029461600035063, -7.5219622511035071, -6.7306912211035073, -7.1969069111035076, -8.0692711021035066, -7.347053051103507, -7.5740658051035066, -8.33543516110351]
								}, {
									"case":	2,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	3,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	4,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	5,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	6,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	7,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	8,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	9,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	10,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	11,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	12,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	13,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	14,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	15,
									"scores":	[-6.8818209811035072]
								}]
						}]
				}, {
					"line":	3576,
					"switches":	[{
							"switch":	59,
							"types":	[[], [], [], [], [199], [1, 2, 3, 4, 5, 6, 7], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	3577,
							"begin_column":	2,
							"end_line":	3577,
							"end_column":	2,
							"patch_codes":	["memset(&diobj->diff, 0, sizeof (*(&diobj->diff)))", "memset(&diobj->initialized, 0, sizeof (*(&diobj->initialized)))", "memset(&diobj->props, 0, sizeof (*(&diobj->props)))", "memset(&diobj->std, 0, sizeof (*(&diobj->std)))", "memset(diobj, 0, sizeof (*(diobj)))", "memset(diobj->diff, 0, sizeof (*(diobj->diff)))", "memset(diobj->props, 0, sizeof (*(diobj->props)))", "(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3577\", 9, &(diobj), sizeof (diobj), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(this_ptr), sizeof (this_ptr), &(diobj->initialized), sizeof (diobj->initialized), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht), &(diobj->props), sizeof (diobj->props)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	2,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	3,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	4,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	5,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	6,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	7,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	8,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	9,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	10,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	11,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	12,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	13,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	14,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	15,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	16,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	17,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	18,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	19,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	20,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	21,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	22,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	23,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	24,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	25,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	26,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	27,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	28,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	29,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	30,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	31,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	32,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	33,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	34,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	35,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	36,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	37,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	38,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	39,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	40,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	41,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	42,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	43,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	44,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	45,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	46,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	47,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	48,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	49,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	50,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	51,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	52,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	53,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	54,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	55,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	56,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	57,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	58,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	59,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	60,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	61,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	62,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	63,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	64,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	65,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	66,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	67,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	68,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	69,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	70,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	71,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	72,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	73,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	74,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	75,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	76,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	77,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	78,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	79,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	80,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	81,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	82,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	83,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	84,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	85,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	86,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	87,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	88,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	89,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	90,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	91,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	92,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	93,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	94,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	95,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	96,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	97,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	98,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	99,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	100,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	101,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	102,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	103,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	104,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	105,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	106,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	107,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	108,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	109,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	110,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	111,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	112,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	113,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	114,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	115,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	116,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	117,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	118,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	119,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	120,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	121,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	122,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	123,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	124,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	125,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	126,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	127,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	128,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	129,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	130,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	131,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	132,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	133,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	134,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	135,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	136,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	137,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	138,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	139,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	140,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	141,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	142,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	143,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	144,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	145,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	146,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	147,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	148,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	149,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	150,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	151,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	152,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	153,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	154,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	155,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	156,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	157,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	158,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	159,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	160,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	161,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	162,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	163,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	164,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	165,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	166,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	167,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	168,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	169,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	170,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	171,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	172,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	173,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	174,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	175,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	176,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	177,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	178,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	179,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	180,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	181,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	182,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	183,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	184,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	185,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	186,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	187,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	188,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	189,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	190,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	191,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	192,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	193,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	194,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	195,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	196,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	197,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	198,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	199,
									"scores":	[-7.2696092944859876, -7.8032759835859871, -9.44386339858599, -9.36288318358599, -10.185831236785988, -9.4845941867859871, -8.7727700697859863, -9.3108054697859863, -10.333890157585987]
								}]
						}, {
							"switch":	60,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3577,
							"begin_column":	4,
							"end_line":	3577,
							"end_column":	18,
							"patch_codes":	["if (!__is_neg(\"\", \"L3577\", 9, &(diobj), sizeof (diobj), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(this_ptr), sizeof (this_ptr), &(diobj->initialized), sizeof (diobj->initialized), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht), &(diobj->props), sizeof (diobj->props)))\n    diobj->diff = reltime;\n", "{\n}\n", "diobj->diff = (&diobj)", "diobj->diff = (&error_handling)", "diobj->diff = (&ht)", "diobj->diff = (&interval_string)", "diobj->diff = (&interval_string_length)", "diobj->diff = (&reltime)", "diobj->diff = (&return_value)", "diobj->diff = (&return_value_ptr)", "diobj->diff = (&return_value_used)", "diobj->diff = (&this_ptr)", "diobj->diff = (reltime)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4214300816859877, -7.7766936537859879, -8.66338997478599, -8.28437328978599, -8.8118066187859867, -7.9829745437859874, -7.1917035137859875, -7.8080653437859873, -8.7964474537859871]
								}, {
									"case":	2,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	3,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	4,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	5,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	6,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	7,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	8,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	9,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	10,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	11,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	12,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	13,
									"scores":	[-6.8616182737859877]
								}]
						}]
				}, {
					"line":	3577,
					"switches":	[{
							"switch":	61,
							"types":	[[], [], [], [], [199], [1, 2, 3, 4, 5, 6, 7], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	3578,
							"begin_column":	2,
							"end_line":	3578,
							"end_column":	2,
							"patch_codes":	["memset(&diobj->diff, 0, sizeof (*(&diobj->diff)))", "memset(&diobj->initialized, 0, sizeof (*(&diobj->initialized)))", "memset(&diobj->props, 0, sizeof (*(&diobj->props)))", "memset(&diobj->std, 0, sizeof (*(&diobj->std)))", "memset(diobj, 0, sizeof (*(diobj)))", "memset(diobj->diff, 0, sizeof (*(diobj->diff)))", "memset(diobj->props, 0, sizeof (*(diobj->props)))", "(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3578\", 9, &(diobj), sizeof (diobj), &(diobj->initialized), sizeof (diobj->initialized), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(this_ptr), sizeof (this_ptr), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht), &(diobj->props), sizeof (diobj->props)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	2,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	3,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	4,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	5,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	6,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	7,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	8,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	9,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	10,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	11,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	12,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	13,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	14,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	15,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	16,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	17,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	18,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	19,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	20,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	21,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	22,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	23,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	24,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	25,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	26,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	27,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	28,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	29,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	30,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	31,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	32,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	33,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	34,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	35,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	36,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	37,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	38,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	39,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	40,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	41,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	42,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	43,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	44,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	45,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	46,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	47,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	48,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	49,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	50,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	51,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	52,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	53,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	54,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	55,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	56,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	57,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	58,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	59,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	60,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	61,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	62,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	63,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	64,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	65,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	66,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	67,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	68,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	69,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	70,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	71,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	72,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	73,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	74,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	75,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	76,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	77,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	78,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	79,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	80,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	81,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	82,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	83,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	84,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	85,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	86,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	87,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	88,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	89,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	90,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	91,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	92,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	93,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	94,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	95,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	96,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	97,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	98,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	99,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	100,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	101,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	102,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	103,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	104,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	105,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	106,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	107,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	108,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	109,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	110,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	111,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	112,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	113,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	114,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	115,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	116,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	117,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	118,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	119,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	120,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	121,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	122,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	123,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	124,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	125,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	126,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	127,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	128,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	129,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	130,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	131,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	132,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	133,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	134,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	135,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	136,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	137,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	138,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	139,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	140,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	141,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	142,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	143,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	144,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	145,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	146,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	147,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	148,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	149,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	150,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	151,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	152,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	153,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	154,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	155,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	156,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	157,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	158,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	159,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	160,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	161,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	162,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	163,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	164,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	165,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	166,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	167,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	168,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	169,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	170,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	171,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	172,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	173,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	174,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	175,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	176,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	177,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	178,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	179,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	180,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	181,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	182,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	183,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	184,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	185,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	186,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	187,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	188,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	189,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	190,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	191,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	192,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	193,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	194,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	195,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	196,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	197,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	198,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	199,
									"scores":	[-7.7846702871684679, -9.80389935346847, -9.2854659962684671, -8.508855970268467, -9.34268047626847, -9.46439147946847, -8.7525673624684668, -9.2906027624684668, -10.313687450268468]
								}]
						}, {
							"switch":	62,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3578,
							"begin_column":	4,
							"end_line":	3578,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L3578\", 9, &(diobj), sizeof (diobj), &(diobj->initialized), sizeof (diobj->initialized), &(reltime), sizeof (reltime), &(diobj->diff), sizeof (diobj->diff), &(this_ptr), sizeof (this_ptr), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht), &(diobj->props), sizeof (diobj->props)))\n    diobj->initialized = 1;\n", "{\n}\n", "diobj->initialized = (0 * ht)", "diobj->initialized = (0 * interval_string_length)", "diobj->initialized = (0 * return_value_used)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (diobj != 0)", "diobj->initialized = (diobj == 0)", "diobj->initialized = (error_handling != 0)", "diobj->initialized = (error_handling == 0)", "diobj->initialized = (ht != 0)", "diobj->initialized = (ht != interval_string_length)", "diobj->initialized = (ht != return_value_used)", "diobj->initialized = (ht * interval_string_length)", "diobj->initialized = (ht * return_value_used)", "diobj->initialized = (ht + 0)", "diobj->initialized = (ht + interval_string_length)", "diobj->initialized = (ht + return_value_used)", "diobj->initialized = (ht - 0)", "diobj->initialized = (ht - interval_string_length)", "diobj->initialized = (ht - return_value_used)", "diobj->initialized = (ht == 0)", "diobj->initialized = (ht == interval_string_length)", "diobj->initialized = (ht == return_value_used)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string != 0)", "diobj->initialized = (interval_string == 0)", "diobj->initialized = (interval_string_length != 0)", "diobj->initialized = (interval_string_length * ht)", "diobj->initialized = (interval_string_length * return_value_used)", "diobj->initialized = (interval_string_length + 0)", "diobj->initialized = (interval_string_length - 0)", "diobj->initialized = (interval_string_length == 0)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (reltime != 0)", "diobj->initialized = (reltime == 0)", "diobj->initialized = (return_value != 0)", "diobj->initialized = (return_value != this_ptr)", "diobj->initialized = (return_value == 0)", "diobj->initialized = (return_value == this_ptr)", "diobj->initialized = (return_value_ptr != 0)", "diobj->initialized = (return_value_ptr == 0)", "diobj->initialized = (return_value_used != 0)", "diobj->initialized = (return_value_used != interval_string_length)", "diobj->initialized = (return_value_used * ht)", "diobj->initialized = (return_value_used * interval_string_length)", "diobj->initialized = (return_value_used + 0)", "diobj->initialized = (return_value_used + interval_string_length)", "diobj->initialized = (return_value_used - 0)", "diobj->initialized = (return_value_used - interval_string_length)", "diobj->initialized = (return_value_used == 0)", "diobj->initialized = (return_value_used == interval_string_length)", "diobj->initialized = (return_value_used)", "diobj->initialized = (this_ptr != 0)", "diobj->initialized = (this_ptr == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4832825769684685, -9.05340016746847, -8.13915193646847, -8.15388288646847, -8.52248558246847, -8.22108683646847, -7.4298158064684685, -8.04617763646847, -9.0345597464684673]
								}, {
									"case":	2,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	3,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	4,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	5,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	6,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	7,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	8,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	9,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	10,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	11,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	12,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	13,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	14,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	15,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	16,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	17,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	18,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	19,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	20,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	21,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	22,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	23,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	24,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	25,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	26,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	27,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	28,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	29,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	30,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	31,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	32,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	33,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	34,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	35,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	36,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	37,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	38,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	39,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	40,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	41,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	42,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	43,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	44,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	45,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	46,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	47,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	48,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	49,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	50,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	51,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	52,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	53,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	54,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	55,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	56,
									"scores":	[-6.8414155664684682]
								}]
						}]
				}, {
					"line":	3574,
					"switches":	[{
							"switch":	55,
							"types":	[[], [], [], [], [192], [], [], [], [], [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [], [], [], [], [], []],
							"begin_line":	3575,
							"begin_column":	1,
							"end_line":	3575,
							"end_column":	1,
							"patch_codes":	["(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.12425346891374]
								}, {
									"case":	2,
									"scores":	[-7.12425346891374]
								}, {
									"case":	3,
									"scores":	[-7.12425346891374]
								}, {
									"case":	4,
									"scores":	[-7.12425346891374]
								}, {
									"case":	5,
									"scores":	[-7.12425346891374]
								}, {
									"case":	6,
									"scores":	[-7.12425346891374]
								}, {
									"case":	7,
									"scores":	[-7.12425346891374]
								}, {
									"case":	8,
									"scores":	[-7.12425346891374]
								}, {
									"case":	9,
									"scores":	[-7.12425346891374]
								}, {
									"case":	10,
									"scores":	[-7.12425346891374]
								}, {
									"case":	11,
									"scores":	[-7.12425346891374]
								}, {
									"case":	12,
									"scores":	[-7.12425346891374]
								}, {
									"case":	13,
									"scores":	[-7.12425346891374]
								}, {
									"case":	14,
									"scores":	[-7.12425346891374]
								}, {
									"case":	15,
									"scores":	[-7.12425346891374]
								}, {
									"case":	16,
									"scores":	[-7.12425346891374]
								}, {
									"case":	17,
									"scores":	[-7.12425346891374]
								}, {
									"case":	18,
									"scores":	[-7.12425346891374]
								}, {
									"case":	19,
									"scores":	[-7.12425346891374]
								}, {
									"case":	20,
									"scores":	[-7.12425346891374]
								}, {
									"case":	21,
									"scores":	[-7.12425346891374]
								}, {
									"case":	22,
									"scores":	[-7.12425346891374]
								}, {
									"case":	23,
									"scores":	[-7.12425346891374]
								}, {
									"case":	24,
									"scores":	[-7.12425346891374]
								}, {
									"case":	25,
									"scores":	[-7.12425346891374]
								}, {
									"case":	26,
									"scores":	[-7.12425346891374]
								}, {
									"case":	27,
									"scores":	[-7.12425346891374]
								}, {
									"case":	28,
									"scores":	[-7.12425346891374]
								}, {
									"case":	29,
									"scores":	[-7.12425346891374]
								}, {
									"case":	30,
									"scores":	[-7.12425346891374]
								}, {
									"case":	31,
									"scores":	[-7.12425346891374]
								}, {
									"case":	32,
									"scores":	[-7.12425346891374]
								}, {
									"case":	33,
									"scores":	[-7.12425346891374]
								}, {
									"case":	34,
									"scores":	[-7.12425346891374]
								}, {
									"case":	35,
									"scores":	[-7.12425346891374]
								}, {
									"case":	36,
									"scores":	[-7.12425346891374]
								}, {
									"case":	37,
									"scores":	[-7.12425346891374]
								}, {
									"case":	38,
									"scores":	[-7.12425346891374]
								}, {
									"case":	39,
									"scores":	[-7.12425346891374]
								}, {
									"case":	40,
									"scores":	[-7.12425346891374]
								}, {
									"case":	41,
									"scores":	[-7.12425346891374]
								}, {
									"case":	42,
									"scores":	[-7.12425346891374]
								}, {
									"case":	43,
									"scores":	[-7.12425346891374]
								}, {
									"case":	44,
									"scores":	[-7.12425346891374]
								}, {
									"case":	45,
									"scores":	[-7.12425346891374]
								}, {
									"case":	46,
									"scores":	[-7.12425346891374]
								}, {
									"case":	47,
									"scores":	[-7.12425346891374]
								}, {
									"case":	48,
									"scores":	[-7.12425346891374]
								}, {
									"case":	49,
									"scores":	[-7.12425346891374]
								}, {
									"case":	50,
									"scores":	[-7.12425346891374]
								}, {
									"case":	51,
									"scores":	[-7.12425346891374]
								}, {
									"case":	52,
									"scores":	[-7.12425346891374]
								}, {
									"case":	53,
									"scores":	[-7.12425346891374]
								}, {
									"case":	54,
									"scores":	[-7.12425346891374]
								}, {
									"case":	55,
									"scores":	[-7.12425346891374]
								}, {
									"case":	56,
									"scores":	[-7.12425346891374]
								}, {
									"case":	57,
									"scores":	[-7.12425346891374]
								}, {
									"case":	58,
									"scores":	[-7.12425346891374]
								}, {
									"case":	59,
									"scores":	[-7.12425346891374]
								}, {
									"case":	60,
									"scores":	[-7.12425346891374]
								}, {
									"case":	61,
									"scores":	[-7.12425346891374]
								}, {
									"case":	62,
									"scores":	[-7.12425346891374]
								}, {
									"case":	63,
									"scores":	[-7.12425346891374]
								}, {
									"case":	64,
									"scores":	[-7.12425346891374]
								}, {
									"case":	65,
									"scores":	[-7.12425346891374]
								}, {
									"case":	66,
									"scores":	[-7.12425346891374]
								}, {
									"case":	67,
									"scores":	[-7.12425346891374]
								}, {
									"case":	68,
									"scores":	[-7.12425346891374]
								}, {
									"case":	69,
									"scores":	[-7.12425346891374]
								}, {
									"case":	70,
									"scores":	[-7.12425346891374]
								}, {
									"case":	71,
									"scores":	[-7.12425346891374]
								}, {
									"case":	72,
									"scores":	[-7.12425346891374]
								}, {
									"case":	73,
									"scores":	[-7.12425346891374]
								}, {
									"case":	74,
									"scores":	[-7.12425346891374]
								}, {
									"case":	75,
									"scores":	[-7.12425346891374]
								}, {
									"case":	76,
									"scores":	[-7.12425346891374]
								}, {
									"case":	77,
									"scores":	[-7.12425346891374]
								}, {
									"case":	78,
									"scores":	[-7.12425346891374]
								}, {
									"case":	79,
									"scores":	[-7.12425346891374]
								}, {
									"case":	80,
									"scores":	[-7.12425346891374]
								}, {
									"case":	81,
									"scores":	[-7.12425346891374]
								}, {
									"case":	82,
									"scores":	[-7.12425346891374]
								}, {
									"case":	83,
									"scores":	[-7.12425346891374]
								}, {
									"case":	84,
									"scores":	[-7.12425346891374]
								}, {
									"case":	85,
									"scores":	[-7.12425346891374]
								}, {
									"case":	86,
									"scores":	[-7.12425346891374]
								}, {
									"case":	87,
									"scores":	[-7.12425346891374]
								}, {
									"case":	88,
									"scores":	[-7.12425346891374]
								}, {
									"case":	89,
									"scores":	[-7.12425346891374]
								}, {
									"case":	90,
									"scores":	[-7.12425346891374]
								}, {
									"case":	91,
									"scores":	[-7.12425346891374]
								}, {
									"case":	92,
									"scores":	[-7.12425346891374]
								}, {
									"case":	93,
									"scores":	[-7.12425346891374]
								}, {
									"case":	94,
									"scores":	[-7.12425346891374]
								}, {
									"case":	95,
									"scores":	[-7.12425346891374]
								}, {
									"case":	96,
									"scores":	[-7.12425346891374]
								}, {
									"case":	97,
									"scores":	[-7.12425346891374]
								}, {
									"case":	98,
									"scores":	[-7.12425346891374]
								}, {
									"case":	99,
									"scores":	[-7.12425346891374]
								}, {
									"case":	100,
									"scores":	[-7.12425346891374]
								}, {
									"case":	101,
									"scores":	[-7.12425346891374]
								}, {
									"case":	102,
									"scores":	[-7.12425346891374]
								}, {
									"case":	103,
									"scores":	[-7.12425346891374]
								}, {
									"case":	104,
									"scores":	[-7.12425346891374]
								}, {
									"case":	105,
									"scores":	[-7.12425346891374]
								}, {
									"case":	106,
									"scores":	[-7.12425346891374]
								}, {
									"case":	107,
									"scores":	[-7.12425346891374]
								}, {
									"case":	108,
									"scores":	[-7.12425346891374]
								}, {
									"case":	109,
									"scores":	[-7.12425346891374]
								}, {
									"case":	110,
									"scores":	[-7.12425346891374]
								}, {
									"case":	111,
									"scores":	[-7.12425346891374]
								}, {
									"case":	112,
									"scores":	[-7.12425346891374]
								}, {
									"case":	113,
									"scores":	[-7.12425346891374]
								}, {
									"case":	114,
									"scores":	[-7.12425346891374]
								}, {
									"case":	115,
									"scores":	[-7.12425346891374]
								}, {
									"case":	116,
									"scores":	[-7.12425346891374]
								}, {
									"case":	117,
									"scores":	[-7.12425346891374]
								}, {
									"case":	118,
									"scores":	[-7.12425346891374]
								}, {
									"case":	119,
									"scores":	[-7.12425346891374]
								}, {
									"case":	120,
									"scores":	[-7.12425346891374]
								}, {
									"case":	121,
									"scores":	[-7.12425346891374]
								}, {
									"case":	122,
									"scores":	[-7.12425346891374]
								}, {
									"case":	123,
									"scores":	[-7.12425346891374]
								}, {
									"case":	124,
									"scores":	[-7.12425346891374]
								}, {
									"case":	125,
									"scores":	[-7.12425346891374]
								}, {
									"case":	126,
									"scores":	[-7.12425346891374]
								}, {
									"case":	127,
									"scores":	[-7.12425346891374]
								}, {
									"case":	128,
									"scores":	[-7.12425346891374]
								}, {
									"case":	129,
									"scores":	[-7.12425346891374]
								}, {
									"case":	130,
									"scores":	[-7.12425346891374]
								}, {
									"case":	131,
									"scores":	[-7.12425346891374]
								}, {
									"case":	132,
									"scores":	[-7.12425346891374]
								}, {
									"case":	133,
									"scores":	[-7.12425346891374]
								}, {
									"case":	134,
									"scores":	[-7.12425346891374]
								}, {
									"case":	135,
									"scores":	[-7.12425346891374]
								}, {
									"case":	136,
									"scores":	[-7.12425346891374]
								}, {
									"case":	137,
									"scores":	[-7.12425346891374]
								}, {
									"case":	138,
									"scores":	[-7.12425346891374]
								}, {
									"case":	139,
									"scores":	[-7.12425346891374]
								}, {
									"case":	140,
									"scores":	[-7.12425346891374]
								}, {
									"case":	141,
									"scores":	[-7.12425346891374]
								}, {
									"case":	142,
									"scores":	[-7.12425346891374]
								}, {
									"case":	143,
									"scores":	[-7.12425346891374]
								}, {
									"case":	144,
									"scores":	[-7.12425346891374]
								}, {
									"case":	145,
									"scores":	[-7.12425346891374]
								}, {
									"case":	146,
									"scores":	[-7.12425346891374]
								}, {
									"case":	147,
									"scores":	[-7.12425346891374]
								}, {
									"case":	148,
									"scores":	[-7.12425346891374]
								}, {
									"case":	149,
									"scores":	[-7.12425346891374]
								}, {
									"case":	150,
									"scores":	[-7.12425346891374]
								}, {
									"case":	151,
									"scores":	[-7.12425346891374]
								}, {
									"case":	152,
									"scores":	[-7.12425346891374]
								}, {
									"case":	153,
									"scores":	[-7.12425346891374]
								}, {
									"case":	154,
									"scores":	[-7.12425346891374]
								}, {
									"case":	155,
									"scores":	[-7.12425346891374]
								}, {
									"case":	156,
									"scores":	[-7.12425346891374]
								}, {
									"case":	157,
									"scores":	[-7.12425346891374]
								}, {
									"case":	158,
									"scores":	[-7.12425346891374]
								}, {
									"case":	159,
									"scores":	[-7.12425346891374]
								}, {
									"case":	160,
									"scores":	[-7.12425346891374]
								}, {
									"case":	161,
									"scores":	[-7.12425346891374]
								}, {
									"case":	162,
									"scores":	[-7.12425346891374]
								}, {
									"case":	163,
									"scores":	[-7.12425346891374]
								}, {
									"case":	164,
									"scores":	[-7.12425346891374]
								}, {
									"case":	165,
									"scores":	[-7.12425346891374]
								}, {
									"case":	166,
									"scores":	[-7.12425346891374]
								}, {
									"case":	167,
									"scores":	[-7.12425346891374]
								}, {
									"case":	168,
									"scores":	[-7.12425346891374]
								}, {
									"case":	169,
									"scores":	[-7.12425346891374]
								}, {
									"case":	170,
									"scores":	[-7.12425346891374]
								}, {
									"case":	171,
									"scores":	[-7.12425346891374]
								}, {
									"case":	172,
									"scores":	[-7.12425346891374]
								}, {
									"case":	173,
									"scores":	[-7.12425346891374]
								}, {
									"case":	174,
									"scores":	[-7.12425346891374]
								}, {
									"case":	175,
									"scores":	[-7.12425346891374]
								}, {
									"case":	176,
									"scores":	[-7.12425346891374]
								}, {
									"case":	177,
									"scores":	[-7.12425346891374]
								}, {
									"case":	178,
									"scores":	[-7.12425346891374]
								}, {
									"case":	179,
									"scores":	[-7.12425346891374]
								}, {
									"case":	180,
									"scores":	[-7.12425346891374]
								}, {
									"case":	181,
									"scores":	[-7.12425346891374]
								}, {
									"case":	182,
									"scores":	[-7.12425346891374]
								}, {
									"case":	183,
									"scores":	[-7.12425346891374]
								}, {
									"case":	184,
									"scores":	[-7.12425346891374]
								}, {
									"case":	185,
									"scores":	[-7.12425346891374]
								}, {
									"case":	186,
									"scores":	[-7.12425346891374]
								}, {
									"case":	187,
									"scores":	[-7.12425346891374]
								}, {
									"case":	188,
									"scores":	[-7.12425346891374]
								}, {
									"case":	189,
									"scores":	[-7.12425346891374]
								}, {
									"case":	190,
									"scores":	[-7.12425346891374]
								}, {
									"case":	191,
									"scores":	[-7.12425346891374]
								}, {
									"case":	192,
									"scores":	[-9.51580111291374, -8.80397699591374, -8.93383420871374, -10.197320364913741, -8.39378710971374, -10.78739691061374]
								}]
						}, {
							"switch":	56,
							"types":	[[10], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9], []],
							"begin_line":	3575,
							"begin_column":	3,
							"end_line":	3581,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if ((date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) || __is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (Debug(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (__trident_output(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (php_printf(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (printf(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (wprintf(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (zend_check_property_access(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if (zend_update_static_property_null(&reltime, interval_string, interval_string_length) == 0) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n", "if ((date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) && !__is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.5964860695281451, -1.8052150395281457, -2.6482895795281456, -3.1350121695281454, -1.4861699795281451, -3.5728579905281457]
								}, {
									"case":	2,
									"scores":	[-4.8857307354281456, -4.0944597054281449, -4.9375342454281457, -5.424256835428146, -3.7754146454281452, -5.8621026564281458]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-4.8857307354281456, -4.0944597054281449, -4.9375342454281457, -5.424256835428146, -3.7754146454281452, -5.8621026564281458]
								}]
						}, {
							"switch":	63,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3575,
							"begin_column":	3,
							"end_line":	3581,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L3575\", 6, &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(ht), sizeof (ht), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)) && (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0)) {\n    diobj = zend_object_store_get_object((this_ptr));\n    diobj->diff = reltime;\n    diobj->initialized = 1;\n} else {\n    {\n        (*(this_ptr)).type = 0;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.73926613891374, -7.94799510891374, -8.79106964891374, -9.27779223891374, -7.62895004891374, -9.71563805991374]
								}, {
									"case":	2,
									"scores":	[-9.39420709891374, -8.60293606891374, -9.44601060891374, -9.93273319891374, -8.28389100891374, -10.370579019913739]
								}]
						}]
				}, {
					"line":	3573,
					"switches":	[{
							"switch":	53,
							"types":	[[], [], [], [], [192], [], [], [], [], [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [], [], [], [], [], []],
							"begin_line":	3574,
							"begin_column":	0,
							"end_line":	3574,
							"end_column":	0,
							"patch_codes":	["(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.14445617623126]
								}, {
									"case":	2,
									"scores":	[-7.14445617623126]
								}, {
									"case":	3,
									"scores":	[-7.14445617623126]
								}, {
									"case":	4,
									"scores":	[-7.14445617623126]
								}, {
									"case":	5,
									"scores":	[-7.14445617623126]
								}, {
									"case":	6,
									"scores":	[-7.14445617623126]
								}, {
									"case":	7,
									"scores":	[-7.14445617623126]
								}, {
									"case":	8,
									"scores":	[-7.14445617623126]
								}, {
									"case":	9,
									"scores":	[-7.14445617623126]
								}, {
									"case":	10,
									"scores":	[-7.14445617623126]
								}, {
									"case":	11,
									"scores":	[-7.14445617623126]
								}, {
									"case":	12,
									"scores":	[-7.14445617623126]
								}, {
									"case":	13,
									"scores":	[-7.14445617623126]
								}, {
									"case":	14,
									"scores":	[-7.14445617623126]
								}, {
									"case":	15,
									"scores":	[-7.14445617623126]
								}, {
									"case":	16,
									"scores":	[-7.14445617623126]
								}, {
									"case":	17,
									"scores":	[-7.14445617623126]
								}, {
									"case":	18,
									"scores":	[-7.14445617623126]
								}, {
									"case":	19,
									"scores":	[-7.14445617623126]
								}, {
									"case":	20,
									"scores":	[-7.14445617623126]
								}, {
									"case":	21,
									"scores":	[-7.14445617623126]
								}, {
									"case":	22,
									"scores":	[-7.14445617623126]
								}, {
									"case":	23,
									"scores":	[-7.14445617623126]
								}, {
									"case":	24,
									"scores":	[-7.14445617623126]
								}, {
									"case":	25,
									"scores":	[-7.14445617623126]
								}, {
									"case":	26,
									"scores":	[-7.14445617623126]
								}, {
									"case":	27,
									"scores":	[-7.14445617623126]
								}, {
									"case":	28,
									"scores":	[-7.14445617623126]
								}, {
									"case":	29,
									"scores":	[-7.14445617623126]
								}, {
									"case":	30,
									"scores":	[-7.14445617623126]
								}, {
									"case":	31,
									"scores":	[-7.14445617623126]
								}, {
									"case":	32,
									"scores":	[-7.14445617623126]
								}, {
									"case":	33,
									"scores":	[-7.14445617623126]
								}, {
									"case":	34,
									"scores":	[-7.14445617623126]
								}, {
									"case":	35,
									"scores":	[-7.14445617623126]
								}, {
									"case":	36,
									"scores":	[-7.14445617623126]
								}, {
									"case":	37,
									"scores":	[-7.14445617623126]
								}, {
									"case":	38,
									"scores":	[-7.14445617623126]
								}, {
									"case":	39,
									"scores":	[-7.14445617623126]
								}, {
									"case":	40,
									"scores":	[-7.14445617623126]
								}, {
									"case":	41,
									"scores":	[-7.14445617623126]
								}, {
									"case":	42,
									"scores":	[-7.14445617623126]
								}, {
									"case":	43,
									"scores":	[-7.14445617623126]
								}, {
									"case":	44,
									"scores":	[-7.14445617623126]
								}, {
									"case":	45,
									"scores":	[-7.14445617623126]
								}, {
									"case":	46,
									"scores":	[-7.14445617623126]
								}, {
									"case":	47,
									"scores":	[-7.14445617623126]
								}, {
									"case":	48,
									"scores":	[-7.14445617623126]
								}, {
									"case":	49,
									"scores":	[-7.14445617623126]
								}, {
									"case":	50,
									"scores":	[-7.14445617623126]
								}, {
									"case":	51,
									"scores":	[-7.14445617623126]
								}, {
									"case":	52,
									"scores":	[-7.14445617623126]
								}, {
									"case":	53,
									"scores":	[-7.14445617623126]
								}, {
									"case":	54,
									"scores":	[-7.14445617623126]
								}, {
									"case":	55,
									"scores":	[-7.14445617623126]
								}, {
									"case":	56,
									"scores":	[-7.14445617623126]
								}, {
									"case":	57,
									"scores":	[-7.14445617623126]
								}, {
									"case":	58,
									"scores":	[-7.14445617623126]
								}, {
									"case":	59,
									"scores":	[-7.14445617623126]
								}, {
									"case":	60,
									"scores":	[-7.14445617623126]
								}, {
									"case":	61,
									"scores":	[-7.14445617623126]
								}, {
									"case":	62,
									"scores":	[-7.14445617623126]
								}, {
									"case":	63,
									"scores":	[-7.14445617623126]
								}, {
									"case":	64,
									"scores":	[-7.14445617623126]
								}, {
									"case":	65,
									"scores":	[-7.14445617623126]
								}, {
									"case":	66,
									"scores":	[-7.14445617623126]
								}, {
									"case":	67,
									"scores":	[-7.14445617623126]
								}, {
									"case":	68,
									"scores":	[-7.14445617623126]
								}, {
									"case":	69,
									"scores":	[-7.14445617623126]
								}, {
									"case":	70,
									"scores":	[-7.14445617623126]
								}, {
									"case":	71,
									"scores":	[-7.14445617623126]
								}, {
									"case":	72,
									"scores":	[-7.14445617623126]
								}, {
									"case":	73,
									"scores":	[-7.14445617623126]
								}, {
									"case":	74,
									"scores":	[-7.14445617623126]
								}, {
									"case":	75,
									"scores":	[-7.14445617623126]
								}, {
									"case":	76,
									"scores":	[-7.14445617623126]
								}, {
									"case":	77,
									"scores":	[-7.14445617623126]
								}, {
									"case":	78,
									"scores":	[-7.14445617623126]
								}, {
									"case":	79,
									"scores":	[-7.14445617623126]
								}, {
									"case":	80,
									"scores":	[-7.14445617623126]
								}, {
									"case":	81,
									"scores":	[-7.14445617623126]
								}, {
									"case":	82,
									"scores":	[-7.14445617623126]
								}, {
									"case":	83,
									"scores":	[-7.14445617623126]
								}, {
									"case":	84,
									"scores":	[-7.14445617623126]
								}, {
									"case":	85,
									"scores":	[-7.14445617623126]
								}, {
									"case":	86,
									"scores":	[-7.14445617623126]
								}, {
									"case":	87,
									"scores":	[-7.14445617623126]
								}, {
									"case":	88,
									"scores":	[-7.14445617623126]
								}, {
									"case":	89,
									"scores":	[-7.14445617623126]
								}, {
									"case":	90,
									"scores":	[-7.14445617623126]
								}, {
									"case":	91,
									"scores":	[-7.14445617623126]
								}, {
									"case":	92,
									"scores":	[-7.14445617623126]
								}, {
									"case":	93,
									"scores":	[-7.14445617623126]
								}, {
									"case":	94,
									"scores":	[-7.14445617623126]
								}, {
									"case":	95,
									"scores":	[-7.14445617623126]
								}, {
									"case":	96,
									"scores":	[-7.14445617623126]
								}, {
									"case":	97,
									"scores":	[-7.14445617623126]
								}, {
									"case":	98,
									"scores":	[-7.14445617623126]
								}, {
									"case":	99,
									"scores":	[-7.14445617623126]
								}, {
									"case":	100,
									"scores":	[-7.14445617623126]
								}, {
									"case":	101,
									"scores":	[-7.14445617623126]
								}, {
									"case":	102,
									"scores":	[-7.14445617623126]
								}, {
									"case":	103,
									"scores":	[-7.14445617623126]
								}, {
									"case":	104,
									"scores":	[-7.14445617623126]
								}, {
									"case":	105,
									"scores":	[-7.14445617623126]
								}, {
									"case":	106,
									"scores":	[-7.14445617623126]
								}, {
									"case":	107,
									"scores":	[-7.14445617623126]
								}, {
									"case":	108,
									"scores":	[-7.14445617623126]
								}, {
									"case":	109,
									"scores":	[-7.14445617623126]
								}, {
									"case":	110,
									"scores":	[-7.14445617623126]
								}, {
									"case":	111,
									"scores":	[-7.14445617623126]
								}, {
									"case":	112,
									"scores":	[-7.14445617623126]
								}, {
									"case":	113,
									"scores":	[-7.14445617623126]
								}, {
									"case":	114,
									"scores":	[-7.14445617623126]
								}, {
									"case":	115,
									"scores":	[-7.14445617623126]
								}, {
									"case":	116,
									"scores":	[-7.14445617623126]
								}, {
									"case":	117,
									"scores":	[-7.14445617623126]
								}, {
									"case":	118,
									"scores":	[-7.14445617623126]
								}, {
									"case":	119,
									"scores":	[-7.14445617623126]
								}, {
									"case":	120,
									"scores":	[-7.14445617623126]
								}, {
									"case":	121,
									"scores":	[-7.14445617623126]
								}, {
									"case":	122,
									"scores":	[-7.14445617623126]
								}, {
									"case":	123,
									"scores":	[-7.14445617623126]
								}, {
									"case":	124,
									"scores":	[-7.14445617623126]
								}, {
									"case":	125,
									"scores":	[-7.14445617623126]
								}, {
									"case":	126,
									"scores":	[-7.14445617623126]
								}, {
									"case":	127,
									"scores":	[-7.14445617623126]
								}, {
									"case":	128,
									"scores":	[-7.14445617623126]
								}, {
									"case":	129,
									"scores":	[-7.14445617623126]
								}, {
									"case":	130,
									"scores":	[-7.14445617623126]
								}, {
									"case":	131,
									"scores":	[-7.14445617623126]
								}, {
									"case":	132,
									"scores":	[-7.14445617623126]
								}, {
									"case":	133,
									"scores":	[-7.14445617623126]
								}, {
									"case":	134,
									"scores":	[-7.14445617623126]
								}, {
									"case":	135,
									"scores":	[-7.14445617623126]
								}, {
									"case":	136,
									"scores":	[-7.14445617623126]
								}, {
									"case":	137,
									"scores":	[-7.14445617623126]
								}, {
									"case":	138,
									"scores":	[-7.14445617623126]
								}, {
									"case":	139,
									"scores":	[-7.14445617623126]
								}, {
									"case":	140,
									"scores":	[-7.14445617623126]
								}, {
									"case":	141,
									"scores":	[-7.14445617623126]
								}, {
									"case":	142,
									"scores":	[-7.14445617623126]
								}, {
									"case":	143,
									"scores":	[-7.14445617623126]
								}, {
									"case":	144,
									"scores":	[-7.14445617623126]
								}, {
									"case":	145,
									"scores":	[-7.14445617623126]
								}, {
									"case":	146,
									"scores":	[-7.14445617623126]
								}, {
									"case":	147,
									"scores":	[-7.14445617623126]
								}, {
									"case":	148,
									"scores":	[-7.14445617623126]
								}, {
									"case":	149,
									"scores":	[-7.14445617623126]
								}, {
									"case":	150,
									"scores":	[-7.14445617623126]
								}, {
									"case":	151,
									"scores":	[-7.14445617623126]
								}, {
									"case":	152,
									"scores":	[-7.14445617623126]
								}, {
									"case":	153,
									"scores":	[-7.14445617623126]
								}, {
									"case":	154,
									"scores":	[-7.14445617623126]
								}, {
									"case":	155,
									"scores":	[-7.14445617623126]
								}, {
									"case":	156,
									"scores":	[-7.14445617623126]
								}, {
									"case":	157,
									"scores":	[-7.14445617623126]
								}, {
									"case":	158,
									"scores":	[-7.14445617623126]
								}, {
									"case":	159,
									"scores":	[-7.14445617623126]
								}, {
									"case":	160,
									"scores":	[-7.14445617623126]
								}, {
									"case":	161,
									"scores":	[-7.14445617623126]
								}, {
									"case":	162,
									"scores":	[-7.14445617623126]
								}, {
									"case":	163,
									"scores":	[-7.14445617623126]
								}, {
									"case":	164,
									"scores":	[-7.14445617623126]
								}, {
									"case":	165,
									"scores":	[-7.14445617623126]
								}, {
									"case":	166,
									"scores":	[-7.14445617623126]
								}, {
									"case":	167,
									"scores":	[-7.14445617623126]
								}, {
									"case":	168,
									"scores":	[-7.14445617623126]
								}, {
									"case":	169,
									"scores":	[-7.14445617623126]
								}, {
									"case":	170,
									"scores":	[-7.14445617623126]
								}, {
									"case":	171,
									"scores":	[-7.14445617623126]
								}, {
									"case":	172,
									"scores":	[-7.14445617623126]
								}, {
									"case":	173,
									"scores":	[-7.14445617623126]
								}, {
									"case":	174,
									"scores":	[-7.14445617623126]
								}, {
									"case":	175,
									"scores":	[-7.14445617623126]
								}, {
									"case":	176,
									"scores":	[-7.14445617623126]
								}, {
									"case":	177,
									"scores":	[-7.14445617623126]
								}, {
									"case":	178,
									"scores":	[-7.14445617623126]
								}, {
									"case":	179,
									"scores":	[-7.14445617623126]
								}, {
									"case":	180,
									"scores":	[-7.14445617623126]
								}, {
									"case":	181,
									"scores":	[-7.14445617623126]
								}, {
									"case":	182,
									"scores":	[-7.14445617623126]
								}, {
									"case":	183,
									"scores":	[-7.14445617623126]
								}, {
									"case":	184,
									"scores":	[-7.14445617623126]
								}, {
									"case":	185,
									"scores":	[-7.14445617623126]
								}, {
									"case":	186,
									"scores":	[-7.14445617623126]
								}, {
									"case":	187,
									"scores":	[-7.14445617623126]
								}, {
									"case":	188,
									"scores":	[-7.14445617623126]
								}, {
									"case":	189,
									"scores":	[-7.14445617623126]
								}, {
									"case":	190,
									"scores":	[-7.14445617623126]
								}, {
									"case":	191,
									"scores":	[-7.14445617623126]
								}, {
									"case":	192,
									"scores":	[-9.53629016463126, -10.089295833631262, -9.37747171663126, -9.12811197743126, -8.58806487843126, -10.98167467933126]
								}]
						}, {
							"switch":	54,
							"types":	[[5], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4], []],
							"begin_line":	3574,
							"begin_column":	2,
							"end_line":	3582,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n", "if ((zend_parse_parameters((ht), \"s\", &interval_string, &interval_string_length) == 0) || __is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n", "if (dprintf((ht), \"s\", &interval_string, &interval_string_length) == 0) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n", "if (zend_get_parameters_ex((ht), \"s\", &interval_string, &interval_string_length) == 0) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n", "if ((zend_parse_parameters((ht), \"s\", &interval_string, &interval_string_length) == 0) && !__is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj))) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.1327748005281455, -4.4684361005281454, -3.6771650705281456, -4.3594875105281465, -3.1973679105281452, -5.2840559215281457]
								}, {
									"case":	2,
									"scores":	[-4.6816145104281457, -5.0172758104281456, -4.2260047804281458, -4.908327220428145, -3.7462076204281463, -5.8328956314281459]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-4.6816145104281457, -5.0172758104281456, -4.2260047804281458, -4.908327220428145, -3.7462076204281463, -5.8328956314281459]
								}]
						}, {
							"switch":	64,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3574,
							"begin_column":	2,
							"end_line":	3582,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)))\n    if (zend_parse_parameters((ht), \"s\", &interval_string, &interval_string_length) == 0) {\n        if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n            diobj = zend_object_store_get_object((this_ptr));\n            diobj->diff = reltime;\n            diobj->initialized = 1;\n        } else {\n            {\n                (*(this_ptr)).type = 0;\n            }\n            ;\n        }\n    }\n", "if (!__is_neg(\"\", \"L3574\", 6, &(ht), sizeof (ht), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(reltime), sizeof (reltime), &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj)) && (zend_parse_parameters((ht), \"s\", &interval_string, &interval_string_length) == 0)) {\n    if (date_interval_initialize(&reltime, interval_string, interval_string_length) == 0) {\n        diobj = zend_object_store_get_object((this_ptr));\n        diobj->diff = reltime;\n        diobj->initialized = 1;\n    } else {\n        {\n            (*(this_ptr)).type = 0;\n        }\n        ;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.33664964623126, -8.67231094623126, -7.88103991623126, -8.56336235623126, -7.40124275623126, -9.48793076723126]
								}, {
									"case":	2,
									"scores":	[-9.03171492123126, -9.36737622123126, -8.57610519123126, -9.25842763123126, -8.09630803123126, -10.182996042231261]
								}]
						}]
				}, {
					"line":	3582,
					"switches":	[{
							"switch":	65,
							"types":	[[], [], [], [], [192], [], [], [], [], [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [], [], [], [], [], []],
							"begin_line":	3583,
							"begin_column":	0,
							"end_line":	3583,
							"end_column":	0,
							"patch_codes":	["(date_globals.timezone) = (interval_string)", "(interval_string)++", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((interval_string)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "diobj = (diobj)", "diobj = zend_object_store_get_object(((return_value)))", "diobj = zend_object_store_get_object(((this_ptr)))", "diobj->diff = (reltime)", "diobj->initialized = (0)", "diobj->initialized = (1)", "diobj->initialized = (ht)", "diobj->initialized = (interval_string_length)", "diobj->initialized = (return_value_used)", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "memset((diobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (interval_string_length)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(return_value)).value.str.val)", "php_error_docref0(((void *)0), (1 << 0L), \"Unknown property (%s)\", (*(this_ptr)).value.str.val)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (interval_string))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (interval_string))", "timelib_rel_time_dtor((diobj)->diff)", "zend_object_std_dtor(&(diobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((return_value))", "zval_addref_p((this_ptr))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "diobj = zend_object_store_get_object((this_ptr))", "diobj->diff = reltime", "diobj->initialized = 1", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3583\", 6, &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj), &(reltime), sizeof (reltime), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	2,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	3,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	4,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	5,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	6,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	7,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	8,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	9,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	10,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	11,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	12,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	13,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	14,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	15,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	16,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	17,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	18,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	19,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	20,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	21,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	22,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	23,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	24,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	25,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	26,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	27,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	28,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	29,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	30,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	31,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	32,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	33,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	34,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	35,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	36,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	37,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	38,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	39,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	40,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	41,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	42,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	43,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	44,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	45,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	46,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	47,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	48,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	49,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	50,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	51,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	52,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	53,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	54,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	55,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	56,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	57,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	58,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	59,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	60,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	61,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	62,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	63,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	64,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	65,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	66,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	67,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	68,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	69,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	70,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	71,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	72,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	73,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	74,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	75,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	76,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	77,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	78,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	79,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	80,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	81,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	82,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	83,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	84,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	85,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	86,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	87,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	88,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	89,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	90,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	91,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	92,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	93,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	94,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	95,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	96,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	97,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	98,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	99,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	100,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	101,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	102,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	103,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	104,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	105,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	106,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	107,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	108,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	109,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	110,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	111,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	112,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	113,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	114,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	115,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	116,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	117,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	118,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	119,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	120,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	121,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	122,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	123,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	124,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	125,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	126,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	127,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	128,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	129,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	130,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	131,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	132,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	133,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	134,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	135,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	136,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	137,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	138,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	139,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	140,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	141,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	142,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	143,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	144,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	145,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	146,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	147,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	148,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	149,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	150,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	151,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	152,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	153,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	154,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	155,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	156,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	157,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	158,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	159,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	160,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	161,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	162,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	163,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	164,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	165,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	166,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	167,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	168,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	169,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	170,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	171,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	172,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	173,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	174,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	175,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	176,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	177,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	178,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	179,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	180,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	181,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	182,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	183,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	184,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	185,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	186,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	187,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	188,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	189,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	190,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	191,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	192,
									"scores":	[-9.16212173035095, -7.7403613503509483, -8.45416949035095, -8.63754281355095, -7.9257186965509483, -8.82110469655095]
								}]
						}, {
							"switch":	66,
							"types":	[[], [], [1], [], [], [], [4], [], [3], [], [], [], [], [], [], [], [2]],
							"begin_line":	3583,
							"begin_column":	2,
							"end_line":	3583,
							"end_column":	55,
							"patch_codes":	["if (!__is_neg(\"\", \"L3583\", 6, &(this_ptr), sizeof (this_ptr), &(diobj), sizeof (diobj), &(reltime), sizeof (reltime), &(interval_string), sizeof (interval_string), &(interval_string_length), sizeof (interval_string_length), &(ht), sizeof (ht)))\n    zend_restore_error_handling(&error_handling);\n", "{\n}\n", "zend_save_error_handling(&error_handling)", "zend_restore_error_handling(&(error_handling))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.61616028565095, -7.88799655965095, -7.96035015315095, -8.04699409915095, -7.2557230691509487, -8.15233147515095]
								}, {
									"case":	2,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	3,
									"scores":	[-6.8212128591509487]
								}, {
									"case":	4,
									"scores":	[-6.8212128591509487]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	0,
			"case":	133,
			"size":	13
		}, {
			"switch":	0,
			"case":	134,
			"size":	13
		}, {
			"switch":	0,
			"case":	135,
			"size":	13
		}, {
			"switch":	0,
			"case":	136,
			"size":	13
		}, {
			"switch":	1,
			"case":	1,
			"size":	13
		}, {
			"switch":	2,
			"case":	133,
			"size":	13
		}, {
			"switch":	2,
			"case":	134,
			"size":	13
		}, {
			"switch":	2,
			"case":	135,
			"size":	13
		}, {
			"switch":	2,
			"case":	136,
			"size":	13
		}, {
			"switch":	3,
			"case":	1,
			"size":	13
		}, {
			"switch":	3,
			"case":	2,
			"size":	13
		}, {
			"switch":	3,
			"case":	3,
			"size":	13
		}, {
			"switch":	4,
			"case":	132,
			"size":	9
		}, {
			"switch":	4,
			"case":	133,
			"size":	9
		}, {
			"switch":	4,
			"case":	134,
			"size":	9
		}, {
			"switch":	4,
			"case":	135,
			"size":	9
		}, {
			"switch":	5,
			"case":	1,
			"size":	9
		}, {
			"switch":	6,
			"case":	132,
			"size":	9
		}, {
			"switch":	6,
			"case":	133,
			"size":	9
		}, {
			"switch":	6,
			"case":	134,
			"size":	9
		}, {
			"switch":	6,
			"case":	135,
			"size":	9
		}, {
			"switch":	7,
			"case":	1,
			"size":	9
		}, {
			"switch":	8,
			"case":	1,
			"size":	13
		}, {
			"switch":	8,
			"case":	2,
			"size":	13
		}, {
			"switch":	9,
			"case":	133,
			"size":	13
		}, {
			"switch":	9,
			"case":	134,
			"size":	13
		}, {
			"switch":	9,
			"case":	135,
			"size":	13
		}, {
			"switch":	9,
			"case":	136,
			"size":	13
		}, {
			"switch":	10,
			"case":	1,
			"size":	13
		}, {
			"switch":	11,
			"case":	132,
			"size":	13
		}, {
			"switch":	11,
			"case":	133,
			"size":	13
		}, {
			"switch":	11,
			"case":	134,
			"size":	13
		}, {
			"switch":	11,
			"case":	135,
			"size":	13
		}, {
			"switch":	12,
			"case":	1,
			"size":	13
		}, {
			"switch":	13,
			"case":	237,
			"size":	8
		}, {
			"switch":	14,
			"case":	1,
			"size":	8
		}, {
			"switch":	14,
			"case":	2,
			"size":	8
		}, {
			"switch":	14,
			"case":	3,
			"size":	8
		}, {
			"switch":	15,
			"case":	1,
			"size":	8
		}, {
			"switch":	15,
			"case":	2,
			"size":	8
		}, {
			"switch":	16,
			"case":	236,
			"size":	5
		}, {
			"switch":	17,
			"case":	1,
			"size":	5
		}, {
			"switch":	18,
			"case":	238,
			"size":	13
		}, {
			"switch":	19,
			"case":	1,
			"size":	13
		}, {
			"switch":	19,
			"case":	2,
			"size":	13
		}, {
			"switch":	19,
			"case":	43,
			"size":	13
		}, {
			"switch":	20,
			"case":	1,
			"size":	13
		}, {
			"switch":	20,
			"case":	2,
			"size":	13
		}, {
			"switch":	21,
			"case":	238,
			"size":	13
		}, {
			"switch":	22,
			"case":	1,
			"size":	13
		}, {
			"switch":	22,
			"case":	2,
			"size":	13
		}, {
			"switch":	22,
			"case":	43,
			"size":	13
		}, {
			"switch":	23,
			"case":	1,
			"size":	13
		}, {
			"switch":	23,
			"case":	2,
			"size":	13
		}, {
			"switch":	24,
			"case":	238,
			"size":	13
		}, {
			"switch":	25,
			"case":	1,
			"size":	13
		}, {
			"switch":	25,
			"case":	2,
			"size":	13
		}, {
			"switch":	25,
			"case":	43,
			"size":	13
		}, {
			"switch":	26,
			"case":	1,
			"size":	13
		}, {
			"switch":	26,
			"case":	2,
			"size":	13
		}, {
			"switch":	27,
			"case":	238,
			"size":	13
		}, {
			"switch":	28,
			"case":	1,
			"size":	13
		}, {
			"switch":	28,
			"case":	2,
			"size":	13
		}, {
			"switch":	28,
			"case":	43,
			"size":	13
		}, {
			"switch":	29,
			"case":	1,
			"size":	13
		}, {
			"switch":	29,
			"case":	2,
			"size":	13
		}, {
			"switch":	30,
			"case":	238,
			"size":	13
		}, {
			"switch":	31,
			"case":	1,
			"size":	13
		}, {
			"switch":	31,
			"case":	2,
			"size":	13
		}, {
			"switch":	31,
			"case":	43,
			"size":	13
		}, {
			"switch":	32,
			"case":	1,
			"size":	13
		}, {
			"switch":	32,
			"case":	2,
			"size":	13
		}, {
			"switch":	33,
			"case":	238,
			"size":	13
		}, {
			"switch":	34,
			"case":	1,
			"size":	13
		}, {
			"switch":	34,
			"case":	2,
			"size":	13
		}, {
			"switch":	34,
			"case":	43,
			"size":	13
		}, {
			"switch":	35,
			"case":	1,
			"size":	13
		}, {
			"switch":	35,
			"case":	2,
			"size":	13
		}, {
			"switch":	36,
			"case":	238,
			"size":	13
		}, {
			"switch":	37,
			"case":	1,
			"size":	13
		}, {
			"switch":	37,
			"case":	2,
			"size":	13
		}, {
			"switch":	37,
			"case":	43,
			"size":	13
		}, {
			"switch":	38,
			"case":	1,
			"size":	13
		}, {
			"switch":	38,
			"case":	2,
			"size":	13
		}, {
			"switch":	39,
			"case":	238,
			"size":	13
		}, {
			"switch":	40,
			"case":	1,
			"size":	13
		}, {
			"switch":	40,
			"case":	2,
			"size":	13
		}, {
			"switch":	40,
			"case":	43,
			"size":	13
		}, {
			"switch":	41,
			"case":	1,
			"size":	13
		}, {
			"switch":	41,
			"case":	2,
			"size":	13
		}, {
			"switch":	42,
			"case":	236,
			"size":	8
		}, {
			"switch":	43,
			"case":	1,
			"size":	8
		}, {
			"switch":	44,
			"case":	236,
			"size":	8
		}, {
			"switch":	45,
			"case":	1,
			"size":	8
		}, {
			"switch":	46,
			"case":	238,
			"size":	13
		}, {
			"switch":	47,
			"case":	1,
			"size":	13
		}, {
			"switch":	47,
			"case":	2,
			"size":	13
		}, {
			"switch":	47,
			"case":	3,
			"size":	13
		}, {
			"switch":	48,
			"case":	238,
			"size":	13
		}, {
			"switch":	49,
			"case":	1,
			"size":	13
		}, {
			"switch":	50,
			"case":	1,
			"size":	13
		}, {
			"switch":	50,
			"case":	2,
			"size":	13
		}, {
			"switch":	51,
			"case":	192,
			"size":	6
		}, {
			"switch":	52,
			"case":	1,
			"size":	6
		}, {
			"switch":	53,
			"case":	192,
			"size":	6
		}, {
			"switch":	54,
			"case":	1,
			"size":	6
		}, {
			"switch":	54,
			"case":	2,
			"size":	6
		}, {
			"switch":	54,
			"case":	5,
			"size":	6
		}, {
			"switch":	55,
			"case":	192,
			"size":	6
		}, {
			"switch":	56,
			"case":	1,
			"size":	6
		}, {
			"switch":	56,
			"case":	2,
			"size":	6
		}, {
			"switch":	56,
			"case":	10,
			"size":	6
		}, {
			"switch":	57,
			"case":	199,
			"size":	9
		}, {
			"switch":	58,
			"case":	1,
			"size":	9
		}, {
			"switch":	59,
			"case":	199,
			"size":	9
		}, {
			"switch":	60,
			"case":	1,
			"size":	9
		}, {
			"switch":	61,
			"case":	199,
			"size":	9
		}, {
			"switch":	62,
			"case":	1,
			"size":	9
		}, {
			"switch":	63,
			"case":	1,
			"size":	6
		}, {
			"switch":	63,
			"case":	2,
			"size":	6
		}, {
			"switch":	64,
			"case":	1,
			"size":	6
		}, {
			"switch":	64,
			"case":	2,
			"size":	6
		}, {
			"switch":	65,
			"case":	192,
			"size":	6
		}, {
			"switch":	66,
			"case":	1,
			"size":	6
		}],
	"func_locations":	[{
			"file":	"ext/date/php_date.c",
			"functions":	[{
					"function":	"__cmsg_nxthdr",
					"begin":	308,
					"end":	324
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"__zend_calloc",
					"begin":	103,
					"end":	108
				}, {
					"function":	"__zend_malloc",
					"begin":	93,
					"end":	101
				}, {
					"function":	"__zend_realloc",
					"begin":	110,
					"end":	118
				}, {
					"function":	"_php_date_tzinfo_dtor",
					"begin":	603,
					"end":	608
				}, {
					"function":	"_zval_copy_ctor",
					"begin":	40,
					"end":	46
				}, {
					"function":	"_zval_dtor",
					"begin":	30,
					"end":	36
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"btowc",
					"begin":	317,
					"end":	320
				}, {
					"function":	"check_id_allowed",
					"begin":	3805,
					"end":	3819
				}, {
					"function":	"date_format",
					"begin":	1008,
					"end":	1160
				}, {
					"function":	"date_interval_format",
					"begin":	3614,
					"end":	3672
				}, {
					"function":	"date_interval_initialize",
					"begin":	3445,
					"end":	3464
				}, {
					"function":	"date_interval_read_property",
					"begin":	3467,
					"end":	3510
				}, {
					"function":	"date_interval_write_property",
					"begin":	3514,
					"end":	3558
				}, {
					"function":	"date_object_clone_date",
					"begin":	2041,
					"end":	2060
				}, {
					"function":	"date_object_clone_interval",
					"begin":	2212,
					"end":	2222
				}, {
					"function":	"date_object_clone_period",
					"begin":	2287,
					"end":	2297
				}, {
					"function":	"date_object_clone_timezone",
					"begin":	2161,
					"end":	2185
				}, {
					"function":	"date_object_compare_date",
					"begin":	2062,
					"end":	2081
				}, {
					"function":	"date_object_free_storage_date",
					"begin":	2299,
					"end":	2309
				}, {
					"function":	"date_object_free_storage_interval",
					"begin":	2322,
					"end":	2329
				}, {
					"function":	"date_object_free_storage_period",
					"begin":	2331,
					"end":	2350
				}, {
					"function":	"date_object_free_storage_timezone",
					"begin":	2311,
					"end":	2320
				}, {
					"function":	"date_object_get_properties",
					"begin":	2083,
					"end":	2134
				}, {
					"function":	"date_object_get_properties_interval",
					"begin":	2224,
					"end":	2260
				}, {
					"function":	"date_object_new_date",
					"begin":	2036,
					"end":	2039
				}, {
					"function":	"date_object_new_date_ex",
					"begin":	2016,
					"end":	2034
				}, {
					"function":	"date_object_new_interval",
					"begin":	2207,
					"end":	2210
				}, {
					"function":	"date_object_new_interval_ex",
					"begin":	2187,
					"end":	2205
				}, {
					"function":	"date_object_new_period",
					"begin":	2282,
					"end":	2285
				}, {
					"function":	"date_object_new_period_ex",
					"begin":	2262,
					"end":	2280
				}, {
					"function":	"date_object_new_timezone",
					"begin":	2156,
					"end":	2159
				}, {
					"function":	"date_object_new_timezone_ex",
					"begin":	2136,
					"end":	2154
				}, {
					"function":	"date_object_period_get_iterator",
					"begin":	1921,
					"end":	1938
				}, {
					"function":	"date_period_initialize",
					"begin":	3695,
					"end":	3717
				}, {
					"function":	"date_period_it_current_data",
					"begin":	1847,
					"end":	1868
				}, {
					"function":	"date_period_it_current_key",
					"begin":	1873,
					"end":	1878
				}, {
					"function":	"date_period_it_dtor",
					"begin":	1808,
					"end":	1817
				}, {
					"function":	"date_period_it_has_more",
					"begin":	1822,
					"end":	1842
				}, {
					"function":	"date_period_it_invalidate_current",
					"begin":	1795,
					"end":	1803
				}, {
					"function":	"date_period_it_move_forward",
					"begin":	1883,
					"end":	1889
				}, {
					"function":	"date_period_it_rewind",
					"begin":	1894,
					"end":	1904
				}, {
					"function":	"date_register_classes",
					"begin":	1940,
					"end":	2014
				}, {
					"function":	"english_suffix",
					"begin":	972,
					"end":	984
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"fstat",
					"begin":	462,
					"end":	466
				}, {
					"function":	"fstatat",
					"begin":	469,
					"end":	474
				}, {
					"function":	"gc_remove_from_buffer",
					"begin":	187,
					"end":	194
				}, {
					"function":	"gc_zval_check_possible_root",
					"begin":	180,
					"end":	185
				}, {
					"function":	"get_timezone_info",
					"begin":	936,
					"end":	947
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"guess_timezone",
					"begin":	839,
					"end":	934
				}, {
					"function":	"i_zend_is_true",
					"begin":	101,
					"end":	156
				}, {
					"function":	"i_zval_ptr_dtor",
					"begin":	80,
					"end":	99
				}, {
					"function":	"is_numeric_string",
					"begin":	102,
					"end":	224
				}, {
					"function":	"lstat",
					"begin":	455,
					"end":	459
				}, {
					"function":	"mbrlen",
					"begin":	328,
					"end":	332
				}, {
					"function":	"mknod",
					"begin":	478,
					"end":	482
				}, {
					"function":	"mknodat",
					"begin":	486,
					"end":	491
				}, {
					"function":	"php_date",
					"begin":	1162,
					"end":	1179
				}, {
					"function":	"php_date_do_return_parsed_time",
					"begin":	2633,
					"end":	2706
				}, {
					"function":	"php_date_full_day_name",
					"begin":	988,
					"end":	995
				}, {
					"function":	"php_date_get_date_ce",
					"begin":	510,
					"end":	513
				}, {
					"function":	"php_date_get_timezone_ce",
					"begin":	515,
					"end":	518
				}, {
					"function":	"php_date_initialize",
					"begin":	2373,
					"end":	2453
				}, {
					"function":	"php_date_initialize_from_hash",
					"begin":	2513,
					"end":	2558
				}, {
					"function":	"php_date_instantiate",
					"begin":	2353,
					"end":	2360
				}, {
					"function":	"php_date_llabs",
					"begin":	40,
					"end":	40
				}, {
					"function":	"php_date_parse_tzfile",
					"begin":	817,
					"end":	835
				}, {
					"function":	"php_date_set_tzdb",
					"begin":	1351,
					"end":	1359
				}, {
					"function":	"php_date_short_day_name",
					"begin":	997,
					"end":	1004
				}, {
					"function":	"php_do_date_sunrise_sunset",
					"begin":	3946,
					"end":	4027
				}, {
					"function":	"php_format_date",
					"begin":	1182,
					"end":	1204
				}, {
					"function":	"php_idate",
					"begin":	1209,
					"end":	1300
				}, {
					"function":	"php_mktime",
					"begin":	1449,
					"end":	1537
				}, {
					"function":	"php_parse_date",
					"begin":	1363,
					"end":	1383
				}, {
					"function":	"php_set_error_handling",
					"begin":	292,
					"end":	295
				}, {
					"function":	"php_std_error_handling",
					"begin":	296,
					"end":	296
				}, {
					"function":	"php_strftime",
					"begin":	1576,
					"end":	1656
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"safe_free_zval_ptr_rel",
					"begin":	62,
					"end":	69
				}, {
					"function":	"smart_str_print_long",
					"begin":	153,
					"end":	157
				}, {
					"function":	"smart_str_print_unsigned",
					"begin":	159,
					"end":	163
				}, {
					"function":	"stat",
					"begin":	448,
					"end":	452
				}, {
					"function":	"strtoimax",
					"begin":	323,
					"end":	328
				}, {
					"function":	"strtoumax",
					"begin":	335,
					"end":	340
				}, {
					"function":	"timezone_initialize",
					"begin":	3174,
					"end":	3192
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"update_errors_warnings",
					"begin":	2364,
					"end":	2371
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"wcstoimax",
					"begin":	347,
					"end":	352
				}, {
					"function":	"wcstoumax",
					"begin":	361,
					"end":	366
				}, {
					"function":	"wctob",
					"begin":	323,
					"end":	326
				}, {
					"function":	"zend_arg_types_stack_2_pop",
					"begin":	355,
					"end":	363
				}, {
					"function":	"zend_arg_types_stack_3_pop",
					"begin":	365,
					"end":	374
				}, {
					"function":	"zend_dval_to_lval",
					"begin":	77,
					"end":	83
				}, {
					"function":	"zend_inline_hash_func",
					"begin":	261,
					"end":	288
				}, {
					"function":	"zend_memnstr",
					"begin":	226,
					"end":	257
				}, {
					"function":	"zend_memrchr",
					"begin":	259,
					"end":	274
				}, {
					"function":	"zend_objects_store_del_ref_by_handle",
					"begin":	71,
					"end":	73
				}, {
					"function":	"zend_ptr_stack_2_pop",
					"begin":	93,
					"end":	98
				}, {
					"function":	"zend_ptr_stack_2_push",
					"begin":	72,
					"end":	83
				}, {
					"function":	"zend_ptr_stack_3_pop",
					"begin":	85,
					"end":	91
				}, {
					"function":	"zend_ptr_stack_3_push",
					"begin":	58,
					"end":	70
				}, {
					"function":	"zend_ptr_stack_pop",
					"begin":	108,
					"end":	112
				}, {
					"function":	"zend_ptr_stack_push",
					"begin":	100,
					"end":	106
				}, {
					"function":	"zend_symtable_del",
					"begin":	355,
					"end":	359
				}, {
					"function":	"zend_symtable_exists",
					"begin":	369,
					"end":	373
				}, {
					"function":	"zend_symtable_find",
					"begin":	362,
					"end":	366
				}, {
					"function":	"zend_symtable_update",
					"begin":	348,
					"end":	352
				}, {
					"function":	"zend_symtable_update_current_key_ex",
					"begin":	375,
					"end":	379
				}, {
					"function":	"zend_vm_stack_alloc",
					"begin":	243,
					"end":	270
				}, {
					"function":	"zend_vm_stack_clear_multiple",
					"begin":	331,
					"end":	342
				}, {
					"function":	"zend_vm_stack_destroy",
					"begin":	197,
					"end":	206
				}, {
					"function":	"zend_vm_stack_extend",
					"begin":	208,
					"end":	213
				}, {
					"function":	"zend_vm_stack_free",
					"begin":	284,
					"end":	300
				}, {
					"function":	"zend_vm_stack_free_int",
					"begin":	272,
					"end":	282
				}, {
					"function":	"zend_vm_stack_get_arg",
					"begin":	344,
					"end":	353
				}, {
					"function":	"zend_vm_stack_init",
					"begin":	192,
					"end":	195
				}, {
					"function":	"zend_vm_stack_new_page",
					"begin":	183,
					"end":	190
				}, {
					"function":	"zend_vm_stack_pop",
					"begin":	231,
					"end":	241
				}, {
					"function":	"zend_vm_stack_push",
					"begin":	220,
					"end":	224
				}, {
					"function":	"zend_vm_stack_push_args",
					"begin":	302,
					"end":	329
				}, {
					"function":	"zend_vm_stack_push_nocheck",
					"begin":	226,
					"end":	229
				}, {
					"function":	"zend_vm_stack_top",
					"begin":	215,
					"end":	218
				}, {
					"function":	"zif_checkdate",
					"begin":	1559,
					"end":	1571
				}, {
					"function":	"zif_date",
					"begin":	1305,
					"end":	1308
				}, {
					"function":	"zif_date_add",
					"begin":	2836,
					"end":	2875
				}, {
					"function":	"zif_date_create",
					"begin":	2458,
					"end":	2472
				}, {
					"function":	"zif_date_create_from_format",
					"begin":	2478,
					"end":	2492
				}, {
					"function":	"zif_date_date_set",
					"begin":	3051,
					"end":	3068
				}, {
					"function":	"zif_date_default_timezone_get",
					"begin":	3934,
					"end":	3940
				}, {
					"function":	"zif_date_default_timezone_set",
					"begin":	3911,
					"end":	3929
				}, {
					"function":	"zif_date_diff",
					"begin":	3147,
					"end":	3171
				}, {
					"function":	"zif_date_format",
					"begin":	2749,
					"end":	2762
				}, {
					"function":	"zif_date_get_last_errors",
					"begin":	2622,
					"end":	2630
				}, {
					"function":	"zif_date_interval_create_from_date_string",
					"begin":	3590,
					"end":	3610
				}, {
					"function":	"zif_date_interval_format",
					"begin":	3678,
					"end":	3692
				}, {
					"function":	"zif_date_isodate_set",
					"begin":	3074,
					"end":	3094
				}, {
					"function":	"zif_date_modify",
					"begin":	2768,
					"end":	2830
				}, {
					"function":	"zif_date_offset_get",
					"begin":	2993,
					"end":	3022
				}, {
					"function":	"zif_date_parse",
					"begin":	2711,
					"end":	2724
				}, {
					"function":	"zif_date_parse_from_format",
					"begin":	2730,
					"end":	2743
				}, {
					"function":	"zif_date_sub",
					"begin":	2881,
					"end":	2922
				}, {
					"function":	"zif_date_sun_info",
					"begin":	4048,
					"end":	4148
				}, {
					"function":	"zif_date_sunrise",
					"begin":	4032,
					"end":	4035
				}, {
					"function":	"zif_date_sunset",
					"begin":	4040,
					"end":	4043
				}, {
					"function":	"zif_date_time_set",
					"begin":	3028,
					"end":	3045
				}, {
					"function":	"zif_date_timestamp_get",
					"begin":	3121,
					"end":	3141
				}, {
					"function":	"zif_date_timestamp_set",
					"begin":	3100,
					"end":	3115
				}, {
					"function":	"zif_date_timezone_get",
					"begin":	2928,
					"end":	2960
				}, {
					"function":	"zif_date_timezone_set",
					"begin":	2966,
					"end":	2987
				}, {
					"function":	"zif_getdate",
					"begin":	1733,
					"end":	1764
				}, {
					"function":	"zif_gmdate",
					"begin":	1313,
					"end":	1316
				}, {
					"function":	"zif_gmmktime",
					"begin":	1550,
					"end":	1553
				}, {
					"function":	"zif_gmstrftime",
					"begin":	1669,
					"end":	1672
				}, {
					"function":	"zif_idate",
					"begin":	1321,
					"end":	1347
				}, {
					"function":	"zif_localtime",
					"begin":	1686,
					"end":	1728
				}, {
					"function":	"zif_mktime",
					"begin":	1542,
					"end":	1545
				}, {
					"function":	"zif_strftime",
					"begin":	1661,
					"end":	1664
				}, {
					"function":	"zif_strtotime",
					"begin":	1389,
					"end":	1444
				}, {
					"function":	"zif_time",
					"begin":	1678,
					"end":	1681
				}, {
					"function":	"zif_timezone_abbreviations_list",
					"begin":	3876,
					"end":	3906
				}, {
					"function":	"zif_timezone_identifiers_list",
					"begin":	3824,
					"end":	3858
				}, {
					"function":	"zif_timezone_location_get",
					"begin":	3423,
					"end":	3442
				}, {
					"function":	"zif_timezone_name_from_abbr",
					"begin":	3283,
					"end":	3301
				}, {
					"function":	"zif_timezone_name_get",
					"begin":	3246,
					"end":	3277
				}, {
					"function":	"zif_timezone_offset_get",
					"begin":	3307,
					"end":	3335
				}, {
					"function":	"zif_timezone_open",
					"begin":	3197,
					"end":	3214
				}, {
					"function":	"zif_timezone_transitions_get",
					"begin":	3341,
					"end":	3417
				}, {
					"function":	"zif_timezone_version_get",
					"begin":	3864,
					"end":	3870
				}, {
					"function":	"zim_DateInterval___construct",
					"begin":	3565,
					"end":	3584
				}, {
					"function":	"zim_DatePeriod___construct",
					"begin":	3722,
					"end":	3802
				}, {
					"function":	"zim_DateTimeZone___construct",
					"begin":	3220,
					"end":	3240
				}, {
					"function":	"zim_DateTime___construct",
					"begin":	2498,
					"end":	2510
				}, {
					"function":	"zim_DateTime___set_state",
					"begin":	2562,
					"end":	2577
				}, {
					"function":	"zim_DateTime___wakeup",
					"begin":	2582,
					"end":	2593
				}, {
					"function":	"zm_activate_date",
					"begin":	611,
					"end":	621
				}, {
					"function":	"zm_deactivate_date",
					"begin":	625,
					"end":	642
				}, {
					"function":	"zm_globals_ctor_date",
					"begin":	594,
					"end":	599
				}, {
					"function":	"zm_info_date",
					"begin":	801,
					"end":	813
				}, {
					"function":	"zm_shutdown_date",
					"begin":	788,
					"end":	797
				}, {
					"function":	"zm_startup_date",
					"begin":	742,
					"end":	784
				}, {
					"function":	"zval_addref_p",
					"begin":	386,
					"end":	388
				}, {
					"function":	"zval_delref_p",
					"begin":	390,
					"end":	392
				}, {
					"function":	"zval_from_error_container",
					"begin":	2597,
					"end":	2617
				}, {
					"function":	"zval_isref_p",
					"begin":	394,
					"end":	396
				}, {
					"function":	"zval_refcount_p",
					"begin":	378,
					"end":	380
				}, {
					"function":	"zval_set_isref_p",
					"begin":	398,
					"end":	400
				}, {
					"function":	"zval_set_isref_to_p",
					"begin":	406,
					"end":	408
				}, {
					"function":	"zval_set_refcount_p",
					"begin":	382,
					"end":	384
				}, {
					"function":	"zval_unset_isref_p",
					"begin":	402,
					"end":	404
				}]
		}]
}
