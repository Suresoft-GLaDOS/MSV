{
	"switch_num":	58,
	"case_num":	[171, 3, 2, 145, 2, 214, 15, 2, 214, 15, 2, 214, 15, 2, 136, 3, 136, 3, 136, 3, 141, 1745, 142, 58, 142, 153, 6, 2, 152, 3, 2, 153, 14, 152, 165, 187, 1, 187, 1, 187, 166, 187, 116, 2, 1, 2, 2, 2, 145, 5, 145, 1, 2, 146, 8, 1, 145, 73],
	"switch_cluster":	[[2, 7, 10, 13, 21, 23, 27, 30, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 51, 52, 55, 57], [1, 4, 6, 9, 12, 15, 17, 19, 26, 29, 32, 49, 54], [0, 3, 5, 8, 11, 14, 16, 18, 20, 22, 24, 25, 28, 31, 33, 35, 37, 39, 41, 48, 50, 53, 56], []],
	"priority":	[{
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	428,
			"primary_score":	999798,
			"second_score":	3110
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	429,
			"primary_score":	999798,
			"second_score":	3108
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	479,
			"primary_score":	999798,
			"second_score":	3111
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	485,
			"primary_score":	999798,
			"second_score":	2
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	575,
			"primary_score":	999798,
			"second_score":	150213
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	576,
			"primary_score":	999798,
			"second_score":	150212
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	578,
			"primary_score":	999798,
			"second_score":	150211
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	579,
			"primary_score":	999798,
			"second_score":	150008
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	580,
			"primary_score":	999798,
			"second_score":	150007
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	583,
			"primary_score":	999798,
			"second_score":	150006
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	590,
			"primary_score":	999798,
			"second_score":	3107
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	592,
			"primary_score":	999798,
			"second_score":	3106
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	593,
			"primary_score":	999798,
			"second_score":	6
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	594,
			"primary_score":	999798,
			"second_score":	5
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	595,
			"primary_score":	999798,
			"second_score":	478
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	596,
			"primary_score":	999798,
			"second_score":	477
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	597,
			"primary_score":	999798,
			"second_score":	476
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	599,
			"primary_score":	999798,
			"second_score":	4
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	601,
			"primary_score":	999798,
			"second_score":	3
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	632,
			"primary_score":	999798,
			"second_score":	150221
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	633,
			"primary_score":	999798,
			"second_score":	150220
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	635,
			"primary_score":	999798,
			"second_score":	150219
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	641,
			"primary_score":	999798,
			"second_score":	150218
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	642,
			"primary_score":	999798,
			"second_score":	150217
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	643,
			"primary_score":	999798,
			"second_score":	150216
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	645,
			"primary_score":	999798,
			"second_score":	150215
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	652,
			"primary_score":	999798,
			"second_score":	150214
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	654,
			"primary_score":	999798,
			"second_score":	150005
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	655,
			"primary_score":	999798,
			"second_score":	150004
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	656,
			"primary_score":	999798,
			"second_score":	150003
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	657,
			"primary_score":	999798,
			"second_score":	150002
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	658,
			"primary_score":	999798,
			"second_score":	150001
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	663,
			"primary_score":	999798,
			"second_score":	150000
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	664,
			"primary_score":	999798,
			"second_score":	149999
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	671,
			"primary_score":	999798,
			"second_score":	149998
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	672,
			"primary_score":	999798,
			"second_score":	149997
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	673,
			"primary_score":	999798,
			"second_score":	149996
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	674,
			"primary_score":	999798,
			"second_score":	149995
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	675,
			"primary_score":	999798,
			"second_score":	149994
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	685,
			"primary_score":	999798,
			"second_score":	151316
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	688,
			"primary_score":	999798,
			"second_score":	151301
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	689,
			"primary_score":	999798,
			"second_score":	151300
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	691,
			"primary_score":	999798,
			"second_score":	151299
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	692,
			"primary_score":	999798,
			"second_score":	122088
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	697,
			"primary_score":	999798,
			"second_score":	122087
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	699,
			"primary_score":	999798,
			"second_score":	122086
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	704,
			"primary_score":	999798,
			"second_score":	151298
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	735,
			"primary_score":	999798,
			"second_score":	151337
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	736,
			"primary_score":	999798,
			"second_score":	151336
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	742,
			"primary_score":	999798,
			"second_score":	151335
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	744,
			"primary_score":	999798,
			"second_score":	151334
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	745,
			"primary_score":	999798,
			"second_score":	151333
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	746,
			"primary_score":	999798,
			"second_score":	151332
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	748,
			"primary_score":	999798,
			"second_score":	151331
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	749,
			"primary_score":	999798,
			"second_score":	151330
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	753,
			"primary_score":	999798,
			"second_score":	151329
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	754,
			"primary_score":	999798,
			"second_score":	151328
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	755,
			"primary_score":	999798,
			"second_score":	151324
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	758,
			"primary_score":	999798,
			"second_score":	151323
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	764,
			"primary_score":	999798,
			"second_score":	151322
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	802,
			"primary_score":	999798,
			"second_score":	151321
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	804,
			"primary_score":	999798,
			"second_score":	151320
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	806,
			"primary_score":	999798,
			"second_score":	151319
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	808,
			"primary_score":	999798,
			"second_score":	151318
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	809,
			"primary_score":	999798,
			"second_score":	152682
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	811,
			"primary_score":	999798,
			"second_score":	151317
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	812,
			"primary_score":	999798,
			"second_score":	122085
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	816,
			"primary_score":	999798,
			"second_score":	122084
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	819,
			"primary_score":	999798,
			"second_score":	122083
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	820,
			"primary_score":	999798,
			"second_score":	122082
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1020,
			"primary_score":	999798,
			"second_score":	151297
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1029,
			"primary_score":	999798,
			"second_score":	151295
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1030,
			"primary_score":	999798,
			"second_score":	151294
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1032,
			"primary_score":	999798,
			"second_score":	151293
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1063,
			"primary_score":	999798,
			"second_score":	151292
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1064,
			"primary_score":	999798,
			"second_score":	151291
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1065,
			"primary_score":	999798,
			"second_score":	151290
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1068,
			"primary_score":	999798,
			"second_score":	151289
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1074,
			"primary_score":	999798,
			"second_score":	151288
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1075,
			"primary_score":	999798,
			"second_score":	151287
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1078,
			"primary_score":	999798,
			"second_score":	151338
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1079,
			"primary_score":	999798,
			"second_score":	150228
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1080,
			"primary_score":	999798,
			"second_score":	150227
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1099,
			"primary_score":	999798,
			"second_score":	150226
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1103,
			"primary_score":	999798,
			"second_score":	150225
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1104,
			"primary_score":	999798,
			"second_score":	150224
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1108,
			"primary_score":	999798,
			"second_score":	150223
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1110,
			"primary_score":	999798,
			"second_score":	150222
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1113,
			"primary_score":	999798,
			"second_score":	149993
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1114,
			"primary_score":	999798,
			"second_score":	149991
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1123,
			"primary_score":	999798,
			"second_score":	152721
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1124,
			"primary_score":	999798,
			"second_score":	152720
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1125,
			"primary_score":	999798,
			"second_score":	152719
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1126,
			"primary_score":	999798,
			"second_score":	152718
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1127,
			"primary_score":	999798,
			"second_score":	152717
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1128,
			"primary_score":	999798,
			"second_score":	152716
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1129,
			"primary_score":	999798,
			"second_score":	152715
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1130,
			"primary_score":	999798,
			"second_score":	152714
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1132,
			"primary_score":	999798,
			"second_score":	152713
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1152,
			"primary_score":	999798,
			"second_score":	152712
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1203,
			"primary_score":	999798,
			"second_score":	152711
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1255,
			"primary_score":	999798,
			"second_score":	152710
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1256,
			"primary_score":	999798,
			"second_score":	152709
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1257,
			"primary_score":	999798,
			"second_score":	152708
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1259,
			"primary_score":	999798,
			"second_score":	149990
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1264,
			"primary_score":	999798,
			"second_score":	149989
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1267,
			"primary_score":	999798,
			"second_score":	149988
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1273,
			"primary_score":	999798,
			"second_score":	149987
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1278,
			"primary_score":	999798,
			"second_score":	149986
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1303,
			"primary_score":	999798,
			"second_score":	149985
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1304,
			"primary_score":	999798,
			"second_score":	149984
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1305,
			"primary_score":	999798,
			"second_score":	149983
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1311,
			"primary_score":	999798,
			"second_score":	149982
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1313,
			"primary_score":	999798,
			"second_score":	149981
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1314,
			"primary_score":	999798,
			"second_score":	149980
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1320,
			"primary_score":	999798,
			"second_score":	149979
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1897,
			"primary_score":	999798,
			"second_score":	122304
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1898,
			"primary_score":	999798,
			"second_score":	122303
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1901,
			"primary_score":	999798,
			"second_score":	122302
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1902,
			"primary_score":	999798,
			"second_score":	122301
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1903,
			"primary_score":	999798,
			"second_score":	122300
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1904,
			"primary_score":	999798,
			"second_score":	122299
		}, {
			"file":	"Zend/zend.c",
			"line":	227,
			"primary_score":	999798,
			"second_score":	120060
		}, {
			"file":	"Zend/zend.c",
			"line":	228,
			"primary_score":	999798,
			"second_score":	120059
		}, {
			"file":	"Zend/zend.c",
			"line":	229,
			"primary_score":	999798,
			"second_score":	120058
		}, {
			"file":	"Zend/zend.c",
			"line":	305,
			"primary_score":	999798,
			"second_score":	120064
		}, {
			"file":	"Zend/zend.c",
			"line":	311,
			"primary_score":	999798,
			"second_score":	120063
		}, {
			"file":	"Zend/zend.c",
			"line":	312,
			"primary_score":	999798,
			"second_score":	120062
		}, {
			"file":	"Zend/zend.c",
			"line":	314,
			"primary_score":	999798,
			"second_score":	120061
		}, {
			"file":	"Zend/zend.c",
			"line":	315,
			"primary_score":	999798,
			"second_score":	120057
		}, {
			"file":	"Zend/zend.c",
			"line":	318,
			"primary_score":	999798,
			"second_score":	120056
		}, {
			"file":	"Zend/zend.c",
			"line":	319,
			"primary_score":	999798,
			"second_score":	120055
		}, {
			"file":	"Zend/zend.c",
			"line":	322,
			"primary_score":	999798,
			"second_score":	120054
		}, {
			"file":	"Zend/zend.c",
			"line":	324,
			"primary_score":	999798,
			"second_score":	121714
		}, {
			"file":	"Zend/zend.c",
			"line":	325,
			"primary_score":	999798,
			"second_score":	121663
		}, {
			"file":	"Zend/zend.c",
			"line":	328,
			"primary_score":	999798,
			"second_score":	121662
		}, {
			"file":	"Zend/zend.c",
			"line":	797,
			"primary_score":	999798,
			"second_score":	103789
		}, {
			"file":	"Zend/zend.c",
			"line":	798,
			"primary_score":	999798,
			"second_score":	103781
		}, {
			"file":	"Zend/zend.c",
			"line":	800,
			"primary_score":	999798,
			"second_score":	47459
		}, {
			"file":	"Zend/zend.c",
			"line":	801,
			"primary_score":	999798,
			"second_score":	47440
		}, {
			"file":	"Zend/zend.c",
			"line":	803,
			"primary_score":	999798,
			"second_score":	14824
		}, {
			"file":	"Zend/zend.c",
			"line":	804,
			"primary_score":	999798,
			"second_score":	14761
		}, {
			"file":	"Zend/zend.c",
			"line":	806,
			"primary_score":	999798,
			"second_score":	14760
		}, {
			"file":	"Zend/zend.c",
			"line":	807,
			"primary_score":	999798,
			"second_score":	14752
		}, {
			"file":	"Zend/zend.c",
			"line":	809,
			"primary_score":	999798,
			"second_score":	14751
		}, {
			"file":	"Zend/zend.c",
			"line":	810,
			"primary_score":	999798,
			"second_score":	14750
		}, {
			"file":	"Zend/zend.c",
			"line":	812,
			"primary_score":	999798,
			"second_score":	14749
		}, {
			"file":	"Zend/zend.c",
			"line":	813,
			"primary_score":	999798,
			"second_score":	6281
		}, {
			"file":	"Zend/zend.c",
			"line":	814,
			"primary_score":	999798,
			"second_score":	6280
		}, {
			"file":	"Zend/zend.c",
			"line":	822,
			"primary_score":	999798,
			"second_score":	6224
		}, {
			"file":	"Zend/zend.c",
			"line":	824,
			"primary_score":	999798,
			"second_score":	6124
		}, {
			"file":	"Zend/zend.c",
			"line":	898,
			"primary_score":	999798,
			"second_score":	119746
		}, {
			"file":	"Zend/zend.c",
			"line":	899,
			"primary_score":	999798,
			"second_score":	119740
		}, {
			"file":	"Zend/zend.c",
			"line":	900,
			"primary_score":	999798,
			"second_score":	119647
		}, {
			"file":	"Zend/zend.c",
			"line":	907,
			"primary_score":	999798,
			"second_score":	118815
		}, {
			"file":	"Zend/zend.c",
			"line":	908,
			"primary_score":	999798,
			"second_score":	118814
		}, {
			"file":	"Zend/zend.c",
			"line":	910,
			"primary_score":	999798,
			"second_score":	118813
		}, {
			"file":	"Zend/zend.c",
			"line":	911,
			"primary_score":	999798,
			"second_score":	118807
		}, {
			"file":	"Zend/zend.c",
			"line":	912,
			"primary_score":	999798,
			"second_score":	118797
		}, {
			"file":	"Zend/zend.c",
			"line":	915,
			"primary_score":	999798,
			"second_score":	118795
		}, {
			"file":	"Zend/zend.c",
			"line":	917,
			"primary_score":	999798,
			"second_score":	113920
		}, {
			"file":	"Zend/zend.c",
			"line":	918,
			"primary_score":	999798,
			"second_score":	113914
		}, {
			"file":	"Zend/zend.c",
			"line":	919,
			"primary_score":	999798,
			"second_score":	113765
		}, {
			"file":	"Zend/zend.c",
			"line":	921,
			"primary_score":	999798,
			"second_score":	113763
		}, {
			"file":	"Zend/zend.c",
			"line":	924,
			"primary_score":	999798,
			"second_score":	113736
		}, {
			"file":	"Zend/zend.c",
			"line":	925,
			"primary_score":	999798,
			"second_score":	113735
		}, {
			"file":	"Zend/zend.c",
			"line":	943,
			"primary_score":	999798,
			"second_score":	113731
		}, {
			"file":	"Zend/zend.c",
			"line":	944,
			"primary_score":	999798,
			"second_score":	113725
		}, {
			"file":	"Zend/zend.c",
			"line":	945,
			"primary_score":	999798,
			"second_score":	113722
		}, {
			"file":	"Zend/zend.c",
			"line":	971,
			"primary_score":	999893,
			"second_score":	128710
		}, {
			"file":	"Zend/zend.c",
			"line":	972,
			"primary_score":	999893,
			"second_score":	128709
		}, {
			"file":	"Zend/zend.c",
			"line":	973,
			"primary_score":	999893,
			"second_score":	128708
		}, {
			"file":	"Zend/zend.c",
			"line":	974,
			"primary_score":	999893,
			"second_score":	128707
		}, {
			"file":	"Zend/zend.c",
			"line":	975,
			"primary_score":	999893,
			"second_score":	128706
		}, {
			"file":	"Zend/zend.c",
			"line":	976,
			"primary_score":	999893,
			"second_score":	128705
		}, {
			"file":	"Zend/zend.c",
			"line":	977,
			"primary_score":	999893,
			"second_score":	128704
		}, {
			"file":	"Zend/zend.c",
			"line":	978,
			"primary_score":	999893,
			"second_score":	128703
		}, {
			"file":	"Zend/zend.c",
			"line":	979,
			"primary_score":	999893,
			"second_score":	128702
		}, {
			"file":	"Zend/zend.c",
			"line":	980,
			"primary_score":	999893,
			"second_score":	128701
		}, {
			"file":	"Zend/zend.c",
			"line":	981,
			"primary_score":	999893,
			"second_score":	128700
		}, {
			"file":	"Zend/zend.c",
			"line":	984,
			"primary_score":	999893,
			"second_score":	128699
		}, {
			"file":	"Zend/zend.c",
			"line":	1006,
			"primary_score":	999893,
			"second_score":	128697
		}, {
			"file":	"Zend/zend.c",
			"line":	1007,
			"primary_score":	999895,
			"second_score":	128695
		}, {
			"file":	"Zend/zend.c",
			"line":	1008,
			"primary_score":	999895,
			"second_score":	128692
		}, {
			"file":	"Zend/zend.c",
			"line":	1013,
			"primary_score":	999893,
			"second_score":	128688
		}, {
			"file":	"Zend/zend.c",
			"line":	1019,
			"primary_score":	999893,
			"second_score":	128687
		}, {
			"file":	"Zend/zend.c",
			"line":	1023,
			"primary_score":	999893,
			"second_score":	128686
		}, {
			"file":	"Zend/zend.c",
			"line":	1035,
			"primary_score":	999893,
			"second_score":	128685
		}, {
			"file":	"Zend/zend.c",
			"line":	1038,
			"primary_score":	999917,
			"second_score":	128684
		}, {
			"file":	"Zend/zend.c",
			"line":	1151,
			"primary_score":	999893,
			"second_score":	126623
		}, {
			"file":	"Zend/zend.c",
			"line":	1153,
			"primary_score":	999893,
			"second_score":	126622
		}, {
			"file":	"Zend/zend.c",
			"line":	1192,
			"primary_score":	999798,
			"second_score":	149459
		}, {
			"file":	"Zend/zend.c",
			"line":	1193,
			"primary_score":	999798,
			"second_score":	149458
		}, {
			"file":	"Zend/zend.c",
			"line":	1194,
			"primary_score":	999798,
			"second_score":	149457
		}, {
			"file":	"Zend/zend.c",
			"line":	1195,
			"primary_score":	999798,
			"second_score":	149456
		}, {
			"file":	"Zend/zend.c",
			"line":	1196,
			"primary_score":	999798,
			"second_score":	149455
		}, {
			"file":	"Zend/zend.c",
			"line":	1198,
			"primary_score":	999798,
			"second_score":	149454
		}, {
			"file":	"Zend/zend.c",
			"line":	1199,
			"primary_score":	999798,
			"second_score":	149453
		}, {
			"file":	"Zend/zend.c",
			"line":	1200,
			"primary_score":	999798,
			"second_score":	119794
		}, {
			"file":	"Zend/zend.c",
			"line":	1201,
			"primary_score":	999798,
			"second_score":	119793
		}, {
			"file":	"Zend/zend.c",
			"line":	1202,
			"primary_score":	999798,
			"second_score":	119792
		}, {
			"file":	"Zend/zend.c",
			"line":	1204,
			"primary_score":	999798,
			"second_score":	149447
		}, {
			"file":	"Zend/zend.c",
			"line":	1205,
			"primary_score":	999798,
			"second_score":	133887
		}, {
			"file":	"Zend/zend.c",
			"line":	1206,
			"primary_score":	999798,
			"second_score":	133886
		}, {
			"file":	"Zend/zend.c",
			"line":	1207,
			"primary_score":	999798,
			"second_score":	133885
		}, {
			"file":	"Zend/zend.c",
			"line":	1209,
			"primary_score":	999798,
			"second_score":	133764
		}, {
			"file":	"Zend/zend.c",
			"line":	1210,
			"primary_score":	999798,
			"second_score":	133685
		}, {
			"file":	"Zend/zend.c",
			"line":	1211,
			"primary_score":	999798,
			"second_score":	133684
		}, {
			"file":	"Zend/zend.c",
			"line":	1212,
			"primary_score":	999798,
			"second_score":	133683
		}, {
			"file":	"Zend/zend.c",
			"line":	1213,
			"primary_score":	999798,
			"second_score":	120112
		}, {
			"file":	"Zend/zend.c",
			"line":	1214,
			"primary_score":	999798,
			"second_score":	120110
		}, {
			"file":	"Zend/zend.c",
			"line":	1239,
			"primary_score":	999798,
			"second_score":	120109
		}, {
			"file":	"Zend/zend.c",
			"line":	1240,
			"primary_score":	999798,
			"second_score":	119813
		}, {
			"file":	"Zend/zend.c",
			"line":	1248,
			"primary_score":	999798,
			"second_score":	119791
		}, {
			"file":	"Zend/zend.c",
			"line":	1249,
			"primary_score":	999798,
			"second_score":	119790
		}, {
			"file":	"Zend/zend.c",
			"line":	1250,
			"primary_score":	999798,
			"second_score":	119789
		}, {
			"file":	"Zend/zend.c",
			"line":	1252,
			"primary_score":	999798,
			"second_score":	119788
		}, {
			"file":	"Zend/zend.c",
			"line":	1282,
			"primary_score":	999798,
			"second_score":	113833
		}, {
			"file":	"Zend/zend.h",
			"line":	379,
			"primary_score":	999798,
			"second_score":	15300
		}, {
			"file":	"Zend/zend.h",
			"line":	383,
			"primary_score":	999798,
			"second_score":	123373
		}, {
			"file":	"Zend/zend.h",
			"line":	387,
			"primary_score":	999798,
			"second_score":	132493
		}, {
			"file":	"Zend/zend.h",
			"line":	391,
			"primary_score":	999798,
			"second_score":	15302
		}, {
			"file":	"Zend/zend.h",
			"line":	395,
			"primary_score":	999798,
			"second_score":	123510
		}, {
			"file":	"Zend/zend.h",
			"line":	399,
			"primary_score":	999798,
			"second_score":	134121
		}, {
			"file":	"Zend/zend.h",
			"line":	403,
			"primary_score":	999798,
			"second_score":	17659
		}, {
			"file":	"Zend/zend_API.c",
			"line":	307,
			"primary_score":	999798,
			"second_score":	125054
		}, {
			"file":	"Zend/zend_API.c",
			"line":	308,
			"primary_score":	999798,
			"second_score":	125053
		}, {
			"file":	"Zend/zend_API.c",
			"line":	309,
			"primary_score":	999798,
			"second_score":	125052
		}, {
			"file":	"Zend/zend_API.c",
			"line":	312,
			"primary_score":	999798,
			"second_score":	125051
		}, {
			"file":	"Zend/zend_API.c",
			"line":	313,
			"primary_score":	999798,
			"second_score":	125050
		}, {
			"file":	"Zend/zend_API.c",
			"line":	315,
			"primary_score":	999798,
			"second_score":	125049
		}, {
			"file":	"Zend/zend_API.c",
			"line":	320,
			"primary_score":	999798,
			"second_score":	125048
		}, {
			"file":	"Zend/zend_API.c",
			"line":	325,
			"primary_score":	999798,
			"second_score":	125047
		}, {
			"file":	"Zend/zend_API.c",
			"line":	416,
			"primary_score":	999798,
			"second_score":	121447
		}, {
			"file":	"Zend/zend_API.c",
			"line":	417,
			"primary_score":	999798,
			"second_score":	121446
		}, {
			"file":	"Zend/zend_API.c",
			"line":	418,
			"primary_score":	999798,
			"second_score":	121445
		}, {
			"file":	"Zend/zend_API.c",
			"line":	431,
			"primary_score":	999798,
			"second_score":	122366
		}, {
			"file":	"Zend/zend_API.c",
			"line":	432,
			"primary_score":	999798,
			"second_score":	121443
		}, {
			"file":	"Zend/zend_API.c",
			"line":	438,
			"primary_score":	999798,
			"second_score":	121441
		}, {
			"file":	"Zend/zend_API.c",
			"line":	439,
			"primary_score":	999798,
			"second_score":	121440
		}, {
			"file":	"Zend/zend_API.c",
			"line":	440,
			"primary_score":	999798,
			"second_score":	121439
		}, {
			"file":	"Zend/zend_API.c",
			"line":	453,
			"primary_score":	999798,
			"second_score":	121438
		}, {
			"file":	"Zend/zend_API.c",
			"line":	494,
			"primary_score":	999994,
			"second_score":	125073
		}, {
			"file":	"Zend/zend_API.c",
			"line":	495,
			"primary_score":	999994,
			"second_score":	125072
		}, {
			"file":	"Zend/zend_API.c",
			"line":	499,
			"primary_score":	999994,
			"second_score":	125071
		}, {
			"file":	"Zend/zend_API.c",
			"line":	500,
			"primary_score":	999994,
			"second_score":	125070
		}, {
			"file":	"Zend/zend_API.c",
			"line":	505,
			"primary_score":	999994,
			"second_score":	125069
		}, {
			"file":	"Zend/zend_API.c",
			"line":	643,
			"primary_score":	999798,
			"second_score":	125046
		}, {
			"file":	"Zend/zend_API.c",
			"line":	644,
			"primary_score":	999798,
			"second_score":	125045
		}, {
			"file":	"Zend/zend_API.c",
			"line":	647,
			"primary_score":	999798,
			"second_score":	125044
		}, {
			"file":	"Zend/zend_API.c",
			"line":	650,
			"primary_score":	999798,
			"second_score":	125043
		}, {
			"file":	"Zend/zend_API.c",
			"line":	656,
			"primary_score":	999798,
			"second_score":	125042
		}, {
			"file":	"Zend/zend_API.c",
			"line":	658,
			"primary_score":	999798,
			"second_score":	125041
		}, {
			"file":	"Zend/zend_API.c",
			"line":	664,
			"primary_score":	999798,
			"second_score":	125057
		}, {
			"file":	"Zend/zend_API.c",
			"line":	665,
			"primary_score":	999798,
			"second_score":	125056
		}, {
			"file":	"Zend/zend_API.c",
			"line":	667,
			"primary_score":	999798,
			"second_score":	125055
		}, {
			"file":	"Zend/zend_API.c",
			"line":	668,
			"primary_score":	999798,
			"second_score":	125040
		}, {
			"file":	"Zend/zend_API.c",
			"line":	688,
			"primary_score":	999798,
			"second_score":	125039
		}, {
			"file":	"Zend/zend_API.c",
			"line":	694,
			"primary_score":	999798,
			"second_score":	123262
		}, {
			"file":	"Zend/zend_API.c",
			"line":	695,
			"primary_score":	999798,
			"second_score":	123261
		}, {
			"file":	"Zend/zend_API.c",
			"line":	696,
			"primary_score":	999798,
			"second_score":	123260
		}, {
			"file":	"Zend/zend_API.c",
			"line":	697,
			"primary_score":	999798,
			"second_score":	123259
		}, {
			"file":	"Zend/zend_API.c",
			"line":	698,
			"primary_score":	999798,
			"second_score":	123258
		}, {
			"file":	"Zend/zend_API.c",
			"line":	699,
			"primary_score":	999798,
			"second_score":	123257
		}, {
			"file":	"Zend/zend_API.c",
			"line":	700,
			"primary_score":	999798,
			"second_score":	123256
		}, {
			"file":	"Zend/zend_API.c",
			"line":	701,
			"primary_score":	999798,
			"second_score":	123255
		}, {
			"file":	"Zend/zend_API.c",
			"line":	702,
			"primary_score":	999798,
			"second_score":	123254
		}, {
			"file":	"Zend/zend_API.c",
			"line":	703,
			"primary_score":	999798,
			"second_score":	123253
		}, {
			"file":	"Zend/zend_API.c",
			"line":	704,
			"primary_score":	999798,
			"second_score":	123252
		}, {
			"file":	"Zend/zend_API.c",
			"line":	706,
			"primary_score":	999798,
			"second_score":	123251
		}, {
			"file":	"Zend/zend_API.c",
			"line":	707,
			"primary_score":	999798,
			"second_score":	123244
		}, {
			"file":	"Zend/zend_API.c",
			"line":	708,
			"primary_score":	999798,
			"second_score":	123243
		}, {
			"file":	"Zend/zend_API.c",
			"line":	718,
			"primary_score":	999798,
			"second_score":	125098
		}, {
			"file":	"Zend/zend_API.c",
			"line":	722,
			"primary_score":	999798,
			"second_score":	125101
		}, {
			"file":	"Zend/zend_API.c",
			"line":	742,
			"primary_score":	999833,
			"second_score":	123186
		}, {
			"file":	"Zend/zend_API.c",
			"line":	744,
			"primary_score":	999833,
			"second_score":	123185
		}, {
			"file":	"Zend/zend_API.c",
			"line":	745,
			"primary_score":	999833,
			"second_score":	123184
		}, {
			"file":	"Zend/zend_API.c",
			"line":	748,
			"primary_score":	999833,
			"second_score":	123183
		}, {
			"file":	"Zend/zend_API.c",
			"line":	749,
			"primary_score":	999833,
			"second_score":	123182
		}, {
			"file":	"Zend/zend_API.c",
			"line":	764,
			"primary_score":	999798,
			"second_score":	123241
		}, {
			"file":	"Zend/zend_API.c",
			"line":	765,
			"primary_score":	999798,
			"second_score":	123180
		}, {
			"file":	"Zend/zend_API.c",
			"line":	768,
			"primary_score":	999798,
			"second_score":	123240
		}, {
			"file":	"Zend/zend_API.c",
			"line":	770,
			"primary_score":	999833,
			"second_score":	123178
		}, {
			"file":	"Zend/zend_API.c",
			"line":	771,
			"primary_score":	999833,
			"second_score":	123177
		}, {
			"file":	"Zend/zend_API.c",
			"line":	774,
			"primary_score":	999798,
			"second_score":	123239
		}, {
			"file":	"Zend/zend_API.c",
			"line":	775,
			"primary_score":	999983,
			"second_score":	128714
		}, {
			"file":	"Zend/zend_API.c",
			"line":	776,
			"primary_score":	999983,
			"second_score":	128713
		}, {
			"file":	"Zend/zend_API.c",
			"line":	777,
			"primary_score":	999983,
			"second_score":	128712
		}, {
			"file":	"Zend/zend_API.c",
			"line":	778,
			"primary_score":	999983,
			"second_score":	128711
		}, {
			"file":	"Zend/zend_API.c",
			"line":	787,
			"primary_score":	999983,
			"second_score":	126621
		}, {
			"file":	"Zend/zend_API.c",
			"line":	790,
			"primary_score":	999798,
			"second_score":	123238
		}, {
			"file":	"Zend/zend_API.c",
			"line":	792,
			"primary_score":	999798,
			"second_score":	123236
		}, {
			"file":	"Zend/zend_API.c",
			"line":	798,
			"primary_score":	999798,
			"second_score":	123235
		}, {
			"file":	"Zend/zend_API.c",
			"line":	799,
			"primary_score":	999798,
			"second_score":	123234
		}, {
			"file":	"Zend/zend_API.c",
			"line":	800,
			"primary_score":	999798,
			"second_score":	123208
		}, {
			"file":	"Zend/zend_API.c",
			"line":	801,
			"primary_score":	999798,
			"second_score":	125062
		}, {
			"file":	"Zend/zend_API.c",
			"line":	804,
			"primary_score":	999798,
			"second_score":	123206
		}, {
			"file":	"Zend/zend_API.c",
			"line":	805,
			"primary_score":	999833,
			"second_score":	123168
		}, {
			"file":	"Zend/zend_API.c",
			"line":	808,
			"primary_score":	999833,
			"second_score":	123167
		}, {
			"file":	"Zend/zend_API.c",
			"line":	809,
			"primary_score":	999833,
			"second_score":	123166
		}, {
			"file":	"Zend/zend_API.c",
			"line":	810,
			"primary_score":	999833,
			"second_score":	123165
		}, {
			"file":	"Zend/zend_API.c",
			"line":	812,
			"primary_score":	999833,
			"second_score":	123164
		}, {
			"file":	"Zend/zend_API.c",
			"line":	813,
			"primary_score":	999833,
			"second_score":	123163
		}, {
			"file":	"Zend/zend_API.c",
			"line":	814,
			"primary_score":	999833,
			"second_score":	123162
		}, {
			"file":	"Zend/zend_API.c",
			"line":	816,
			"primary_score":	999833,
			"second_score":	123160
		}, {
			"file":	"Zend/zend_API.c",
			"line":	819,
			"primary_score":	999833,
			"second_score":	123159
		}, {
			"file":	"Zend/zend_API.c",
			"line":	820,
			"primary_score":	999833,
			"second_score":	123131
		}, {
			"file":	"Zend/zend_API.c",
			"line":	821,
			"primary_score":	999833,
			"second_score":	123129
		}, {
			"file":	"Zend/zend_API.c",
			"line":	825,
			"primary_score":	999833,
			"second_score":	123128
		}, {
			"file":	"Zend/zend_API.c",
			"line":	826,
			"primary_score":	999833,
			"second_score":	123127
		}, {
			"file":	"Zend/zend_API.c",
			"line":	827,
			"primary_score":	999833,
			"second_score":	123126
		}, {
			"file":	"Zend/zend_API.c",
			"line":	834,
			"primary_score":	999798,
			"second_score":	125060
		}, {
			"file":	"Zend/zend_API.c",
			"line":	836,
			"primary_score":	999798,
			"second_score":	125058
		}, {
			"file":	"Zend/zend_API.c",
			"line":	844,
			"primary_score":	999798,
			"second_score":	125038
		}, {
			"file":	"Zend/zend_API.c",
			"line":	847,
			"primary_score":	999798,
			"second_score":	123182
		}, {
			"file":	"Zend/zend_API.c",
			"line":	881,
			"primary_score":	999798,
			"second_score":	123270
		}, {
			"file":	"Zend/zend_API.c",
			"line":	882,
			"primary_score":	999798,
			"second_score":	123269
		}, {
			"file":	"Zend/zend_API.c",
			"line":	884,
			"primary_score":	999798,
			"second_score":	123268
		}, {
			"file":	"Zend/zend_API.c",
			"line":	886,
			"primary_score":	999798,
			"second_score":	123264
		}, {
			"file":	"Zend/zend_API.c",
			"line":	887,
			"primary_score":	999798,
			"second_score":	123263
		}, {
			"file":	"Zend/zend_API.c",
			"line":	888,
			"primary_score":	999798,
			"second_score":	123181
		}, {
			"file":	"Zend/zend_API.c",
			"line":	890,
			"primary_score":	999798,
			"second_score":	123180
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1158,
			"primary_score":	999997,
			"second_score":	124061
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1160,
			"primary_score":	999997,
			"second_score":	124060
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1161,
			"primary_score":	999997,
			"second_score":	123996
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1163,
			"primary_score":	999997,
			"second_score":	123993
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1224,
			"primary_score":	999992,
			"second_score":	124381
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1368,
			"primary_score":	999798,
			"second_score":	123931
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1370,
			"primary_score":	999798,
			"second_score":	123930
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1371,
			"primary_score":	999798,
			"second_score":	123820
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1373,
			"primary_score":	999798,
			"second_score":	123705
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1779,
			"primary_score":	999798,
			"second_score":	103780
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1780,
			"primary_score":	999798,
			"second_score":	103779
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1781,
			"primary_score":	999798,
			"second_score":	103778
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2171,
			"primary_score":	999798,
			"second_score":	50404
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2172,
			"primary_score":	999798,
			"second_score":	50403
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2173,
			"primary_score":	999798,
			"second_score":	50402
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2175,
			"primary_score":	999798,
			"second_score":	50401
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2176,
			"primary_score":	999798,
			"second_score":	50400
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2178,
			"primary_score":	999798,
			"second_score":	50399
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2179,
			"primary_score":	999798,
			"second_score":	47520
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2185,
			"primary_score":	999798,
			"second_score":	47519
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2186,
			"primary_score":	999798,
			"second_score":	47471
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2187,
			"primary_score":	999798,
			"second_score":	47470
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2229,
			"primary_score":	999798,
			"second_score":	50411
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2231,
			"primary_score":	999798,
			"second_score":	50410
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2237,
			"primary_score":	999798,
			"second_score":	50409
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2241,
			"primary_score":	999798,
			"second_score":	53651
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2245,
			"primary_score":	999798,
			"second_score":	50408
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2249,
			"primary_score":	999798,
			"second_score":	52968
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2250,
			"primary_score":	999798,
			"second_score":	54036
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2255,
			"primary_score":	999798,
			"second_score":	50407
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2256,
			"primary_score":	999798,
			"second_score":	50406
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2257,
			"primary_score":	999798,
			"second_score":	50405
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2262,
			"primary_score":	999798,
			"second_score":	47469
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2301,
			"primary_score":	999798,
			"second_score":	119610
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2303,
			"primary_score":	999798,
			"second_score":	119609
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2304,
			"primary_score":	999798,
			"second_score":	119603
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2307,
			"primary_score":	999798,
			"second_score":	119602
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2309,
			"primary_score":	999798,
			"second_score":	119601
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2310,
			"primary_score":	999798,
			"second_score":	119019
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2312,
			"primary_score":	999798,
			"second_score":	119018
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2313,
			"primary_score":	999798,
			"second_score":	119012
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2316,
			"primary_score":	999798,
			"second_score":	119011
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2322,
			"primary_score":	999798,
			"second_score":	114948
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2324,
			"primary_score":	999798,
			"second_score":	114947
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2348,
			"primary_score":	999798,
			"second_score":	113713
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2352,
			"primary_score":	999798,
			"second_score":	113712
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2354,
			"primary_score":	999798,
			"second_score":	113711
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	144,
			"primary_score":	999798,
			"second_score":	3194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	297,
			"primary_score":	999798,
			"second_score":	3197
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	673,
			"primary_score":	999798,
			"second_score":	113235
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	675,
			"primary_score":	999798,
			"second_score":	113234
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	676,
			"primary_score":	999798,
			"second_score":	113233
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	699,
			"primary_score":	999798,
			"second_score":	113293
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	701,
			"primary_score":	999798,
			"second_score":	113292
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	702,
			"primary_score":	999798,
			"second_score":	113291
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	725,
			"primary_score":	999798,
			"second_score":	113242
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	726,
			"primary_score":	999798,
			"second_score":	113241
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	728,
			"primary_score":	999798,
			"second_score":	113240
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	730,
			"primary_score":	999798,
			"second_score":	113239
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	731,
			"primary_score":	999798,
			"second_score":	113238
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	732,
			"primary_score":	999798,
			"second_score":	113237
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	734,
			"primary_score":	999798,
			"second_score":	113236
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	735,
			"primary_score":	999798,
			"second_score":	113232
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	736,
			"primary_score":	999798,
			"second_score":	113231
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	737,
			"primary_score":	999798,
			"second_score":	113230
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	738,
			"primary_score":	999798,
			"second_score":	113229
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	739,
			"primary_score":	999798,
			"second_score":	113228
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	740,
			"primary_score":	999798,
			"second_score":	113227
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	741,
			"primary_score":	999798,
			"second_score":	113226
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	743,
			"primary_score":	999798,
			"second_score":	117056
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	745,
			"primary_score":	999798,
			"second_score":	117055
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	746,
			"primary_score":	999798,
			"second_score":	117054
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	748,
			"primary_score":	999798,
			"second_score":	117053
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	749,
			"primary_score":	999798,
			"second_score":	117052
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	750,
			"primary_score":	999798,
			"second_score":	117051
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	751,
			"primary_score":	999798,
			"second_score":	117050
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	752,
			"primary_score":	999798,
			"second_score":	117049
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	753,
			"primary_score":	999798,
			"second_score":	117048
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	754,
			"primary_score":	999798,
			"second_score":	117047
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	768,
			"primary_score":	999798,
			"second_score":	127668
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	770,
			"primary_score":	999798,
			"second_score":	127667
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	772,
			"primary_score":	999798,
			"second_score":	127666
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	773,
			"primary_score":	999798,
			"second_score":	127665
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	774,
			"primary_score":	999798,
			"second_score":	127664
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	776,
			"primary_score":	999798,
			"second_score":	127663
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	778,
			"primary_score":	999798,
			"second_score":	127662
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	779,
			"primary_score":	999798,
			"second_score":	127661
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	780,
			"primary_score":	999798,
			"second_score":	127660
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	786,
			"primary_score":	999798,
			"second_score":	113279
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	787,
			"primary_score":	999798,
			"second_score":	113278
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	789,
			"primary_score":	999798,
			"second_score":	113277
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	791,
			"primary_score":	999798,
			"second_score":	113276
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	792,
			"primary_score":	999798,
			"second_score":	113275
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	795,
			"primary_score":	999798,
			"second_score":	113274
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	800,
			"primary_score":	999798,
			"second_score":	113273
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	801,
			"primary_score":	999798,
			"second_score":	113272
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	802,
			"primary_score":	999798,
			"second_score":	113271
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	803,
			"primary_score":	999798,
			"second_score":	113270
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	805,
			"primary_score":	999798,
			"second_score":	113266
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	806,
			"primary_score":	999798,
			"second_score":	113264
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	807,
			"primary_score":	999798,
			"second_score":	113263
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	808,
			"primary_score":	999798,
			"second_score":	113262
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	833,
			"primary_score":	999798,
			"second_score":	127457
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	838,
			"primary_score":	999798,
			"second_score":	127456
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	839,
			"primary_score":	999798,
			"second_score":	127455
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	841,
			"primary_score":	999798,
			"second_score":	127454
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	842,
			"primary_score":	999798,
			"second_score":	127453
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	843,
			"primary_score":	999798,
			"second_score":	127452
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	845,
			"primary_score":	999798,
			"second_score":	127451
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	846,
			"primary_score":	999798,
			"second_score":	127450
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	890,
			"primary_score":	999798,
			"second_score":	113617
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	891,
			"primary_score":	999798,
			"second_score":	113616
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	893,
			"primary_score":	999798,
			"second_score":	113615
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	894,
			"primary_score":	999798,
			"second_score":	113614
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	896,
			"primary_score":	999798,
			"second_score":	113613
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	897,
			"primary_score":	999798,
			"second_score":	113612
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	904,
			"primary_score":	999798,
			"second_score":	113611
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	905,
			"primary_score":	999798,
			"second_score":	113610
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	906,
			"primary_score":	999798,
			"second_score":	113357
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	907,
			"primary_score":	999798,
			"second_score":	113356
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	908,
			"primary_score":	999798,
			"second_score":	113355
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	909,
			"primary_score":	999798,
			"second_score":	113354
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	911,
			"primary_score":	999798,
			"second_score":	113353
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	912,
			"primary_score":	999798,
			"second_score":	113352
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1599,
			"primary_score":	999798,
			"second_score":	3212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1600,
			"primary_score":	999798,
			"second_score":	3211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1601,
			"primary_score":	999798,
			"second_score":	3210
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1602,
			"primary_score":	999798,
			"second_score":	3209
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1604,
			"primary_score":	999798,
			"second_score":	3208
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1608,
			"primary_score":	999798,
			"second_score":	3207
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1614,
			"primary_score":	999798,
			"second_score":	3206
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1669,
			"primary_score":	999798,
			"second_score":	3205
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1670,
			"primary_score":	999798,
			"second_score":	3204
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1671,
			"primary_score":	999798,
			"second_score":	3203
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1672,
			"primary_score":	999798,
			"second_score":	3202
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1673,
			"primary_score":	999798,
			"second_score":	3201
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1674,
			"primary_score":	999798,
			"second_score":	3200
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1675,
			"primary_score":	999798,
			"second_score":	3199
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1676,
			"primary_score":	999798,
			"second_score":	3198
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1678,
			"primary_score":	999798,
			"second_score":	3196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1679,
			"primary_score":	999798,
			"second_score":	3195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1680,
			"primary_score":	999798,
			"second_score":	3193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1681,
			"primary_score":	999798,
			"second_score":	3192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1684,
			"primary_score":	999798,
			"second_score":	113623
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1686,
			"primary_score":	999798,
			"second_score":	113622
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1687,
			"primary_score":	999798,
			"second_score":	113621
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1692,
			"primary_score":	999798,
			"second_score":	113620
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1705,
			"primary_score":	999798,
			"second_score":	113619
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1709,
			"primary_score":	999798,
			"second_score":	113618
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1710,
			"primary_score":	999798,
			"second_score":	113351
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1711,
			"primary_score":	999798,
			"second_score":	113350
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1712,
			"primary_score":	999798,
			"second_score":	113349
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1717,
			"primary_score":	999798,
			"second_score":	113348
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1718,
			"primary_score":	999798,
			"second_score":	113347
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1719,
			"primary_score":	999798,
			"second_score":	113346
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1721,
			"primary_score":	999798,
			"second_score":	113345
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1722,
			"primary_score":	999798,
			"second_score":	113344
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1724,
			"primary_score":	999798,
			"second_score":	113343
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1725,
			"primary_score":	999798,
			"second_score":	113342
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1726,
			"primary_score":	999798,
			"second_score":	113338
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1727,
			"primary_score":	999798,
			"second_score":	113332
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1729,
			"primary_score":	999798,
			"second_score":	113314
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1730,
			"primary_score":	999798,
			"second_score":	113313
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1732,
			"primary_score":	999798,
			"second_score":	113218
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1802,
			"primary_score":	999798,
			"second_score":	113303
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1803,
			"primary_score":	999798,
			"second_score":	113302
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1804,
			"primary_score":	999798,
			"second_score":	113298
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1805,
			"primary_score":	999798,
			"second_score":	113297
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1807,
			"primary_score":	999798,
			"second_score":	113296
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1811,
			"primary_score":	999798,
			"second_score":	113295
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1864,
			"primary_score":	999798,
			"second_score":	113294
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1865,
			"primary_score":	999798,
			"second_score":	113290
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1870,
			"primary_score":	999798,
			"second_score":	113289
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1875,
			"primary_score":	999798,
			"second_score":	113312
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1876,
			"primary_score":	999798,
			"second_score":	113311
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1877,
			"primary_score":	999798,
			"second_score":	113310
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1878,
			"primary_score":	999798,
			"second_score":	113309
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1879,
			"primary_score":	999798,
			"second_score":	113308
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1880,
			"primary_score":	999798,
			"second_score":	113307
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1881,
			"primary_score":	999798,
			"second_score":	113306
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1883,
			"primary_score":	999798,
			"second_score":	113305
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1884,
			"primary_score":	999798,
			"second_score":	120666
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1885,
			"primary_score":	999798,
			"second_score":	120665
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1887,
			"primary_score":	999798,
			"second_score":	120664
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1891,
			"primary_score":	999798,
			"second_score":	120663
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1897,
			"primary_score":	999798,
			"second_score":	120662
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1898,
			"primary_score":	999798,
			"second_score":	120661
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1899,
			"primary_score":	999798,
			"second_score":	120660
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1900,
			"primary_score":	999798,
			"second_score":	120659
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1901,
			"primary_score":	999798,
			"second_score":	120658
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1902,
			"primary_score":	999798,
			"second_score":	120657
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1909,
			"primary_score":	999798,
			"second_score":	123949
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1910,
			"primary_score":	999798,
			"second_score":	123948
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1912,
			"primary_score":	999798,
			"second_score":	127473
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1913,
			"primary_score":	999798,
			"second_score":	127469
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1917,
			"primary_score":	999798,
			"second_score":	127468
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1925,
			"primary_score":	999798,
			"second_score":	113304
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1927,
			"primary_score":	999798,
			"second_score":	113288
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1944,
			"primary_score":	999798,
			"second_score":	113287
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2005,
			"primary_score":	999798,
			"second_score":	113286
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2007,
			"primary_score":	999798,
			"second_score":	113285
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2008,
			"primary_score":	999798,
			"second_score":	113284
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2009,
			"primary_score":	999798,
			"second_score":	113283
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2010,
			"primary_score":	999798,
			"second_score":	113282
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2011,
			"primary_score":	999798,
			"second_score":	113280
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2013,
			"primary_score":	999798,
			"second_score":	113261
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2016,
			"primary_score":	999798,
			"second_score":	113260
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2018,
			"primary_score":	999798,
			"second_score":	113259
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2019,
			"primary_score":	999798,
			"second_score":	127446
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2020,
			"primary_score":	999798,
			"second_score":	127445
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2022,
			"primary_score":	999798,
			"second_score":	113258
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2025,
			"primary_score":	999798,
			"second_score":	113257
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2026,
			"primary_score":	999798,
			"second_score":	113251
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2027,
			"primary_score":	999798,
			"second_score":	113250
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2030,
			"primary_score":	999798,
			"second_score":	113244
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2031,
			"primary_score":	999798,
			"second_score":	113243
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2037,
			"primary_score":	999798,
			"second_score":	113225
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2039,
			"primary_score":	999798,
			"second_score":	113224
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2040,
			"primary_score":	999798,
			"second_score":	113223
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2041,
			"primary_score":	999798,
			"second_score":	113222
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2044,
			"primary_score":	999798,
			"second_score":	113221
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2046,
			"primary_score":	999798,
			"second_score":	113219
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2052,
			"primary_score":	999798,
			"second_score":	113677
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2053,
			"primary_score":	999798,
			"second_score":	113676
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2054,
			"primary_score":	999798,
			"second_score":	113675
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2056,
			"primary_score":	999798,
			"second_score":	113674
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2060,
			"primary_score":	999798,
			"second_score":	113673
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2061,
			"primary_score":	999798,
			"second_score":	113672
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2062,
			"primary_score":	999798,
			"second_score":	113671
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2069,
			"primary_score":	999798,
			"second_score":	113670
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2070,
			"primary_score":	999798,
			"second_score":	113669
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2071,
			"primary_score":	999798,
			"second_score":	113668
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2073,
			"primary_score":	999798,
			"second_score":	113667
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2074,
			"primary_score":	999798,
			"second_score":	113666
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2075,
			"primary_score":	999798,
			"second_score":	113665
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2076,
			"primary_score":	999798,
			"second_score":	113664
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2082,
			"primary_score":	999798,
			"second_score":	113663
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2086,
			"primary_score":	999798,
			"second_score":	113984
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2088,
			"primary_score":	999798,
			"second_score":	113982
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2090,
			"primary_score":	999798,
			"second_score":	113981
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2091,
			"primary_score":	999798,
			"second_score":	113980
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2095,
			"primary_score":	999798,
			"second_score":	113979
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2096,
			"primary_score":	999798,
			"second_score":	113978
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2097,
			"primary_score":	999798,
			"second_score":	113977
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2098,
			"primary_score":	999798,
			"second_score":	113958
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2100,
			"primary_score":	999798,
			"second_score":	113957
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2104,
			"primary_score":	999798,
			"second_score":	113956
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2105,
			"primary_score":	999798,
			"second_score":	113950
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2107,
			"primary_score":	999798,
			"second_score":	113932
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2112,
			"primary_score":	999798,
			"second_score":	125038
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2113,
			"primary_score":	999798,
			"second_score":	125037
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2114,
			"primary_score":	999798,
			"second_score":	125036
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2115,
			"primary_score":	999798,
			"second_score":	125035
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2116,
			"primary_score":	999798,
			"second_score":	125034
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2118,
			"primary_score":	999798,
			"second_score":	125033
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2119,
			"primary_score":	999798,
			"second_score":	125032
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2121,
			"primary_score":	999798,
			"second_score":	127475
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2122,
			"primary_score":	999798,
			"second_score":	127474
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2123,
			"primary_score":	999798,
			"second_score":	127473
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2124,
			"primary_score":	999798,
			"second_score":	127472
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2126,
			"primary_score":	999798,
			"second_score":	127471
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2130,
			"primary_score":	999798,
			"second_score":	127470
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2131,
			"primary_score":	999798,
			"second_score":	134022
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2133,
			"primary_score":	999798,
			"second_score":	134021
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2134,
			"primary_score":	999798,
			"second_score":	134020
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2136,
			"primary_score":	999798,
			"second_score":	134019
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2137,
			"primary_score":	999798,
			"second_score":	134017
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2138,
			"primary_score":	999798,
			"second_score":	134016
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2139,
			"primary_score":	999798,
			"second_score":	132193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2140,
			"primary_score":	999798,
			"second_score":	132192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2144,
			"primary_score":	999798,
			"second_score":	134015
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2145,
			"primary_score":	999798,
			"second_score":	134009
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2147,
			"primary_score":	999798,
			"second_score":	134008
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2150,
			"primary_score":	999798,
			"second_score":	134002
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2151,
			"primary_score":	999798,
			"second_score":	133987
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2152,
			"primary_score":	999798,
			"second_score":	133986
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2154,
			"primary_score":	999798,
			"second_score":	133984
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2155,
			"primary_score":	999798,
			"second_score":	133983
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2159,
			"primary_score":	999798,
			"second_score":	133038
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2160,
			"primary_score":	999798,
			"second_score":	152645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2162,
			"primary_score":	999798,
			"second_score":	152644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2163,
			"primary_score":	999798,
			"second_score":	127140
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2164,
			"primary_score":	999798,
			"second_score":	127139
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2170,
			"primary_score":	999798,
			"second_score":	127138
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2171,
			"primary_score":	999798,
			"second_score":	127137
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2172,
			"primary_score":	999798,
			"second_score":	127136
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2173,
			"primary_score":	999798,
			"second_score":	127135
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2175,
			"primary_score":	999798,
			"second_score":	127134
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2180,
			"primary_score":	999798,
			"second_score":	127133
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2183,
			"primary_score":	999798,
			"second_score":	127132
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2185,
			"primary_score":	999798,
			"second_score":	127131
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2186,
			"primary_score":	999798,
			"second_score":	127130
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2188,
			"primary_score":	999798,
			"second_score":	127129
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2189,
			"primary_score":	999798,
			"second_score":	127128
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2190,
			"primary_score":	999798,
			"second_score":	127127
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2197,
			"primary_score":	999798,
			"second_score":	127126
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2202,
			"primary_score":	999798,
			"second_score":	133035
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2204,
			"primary_score":	999798,
			"second_score":	133034
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2205,
			"primary_score":	999798,
			"second_score":	127464
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2206,
			"primary_score":	999798,
			"second_score":	127463
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2207,
			"primary_score":	999798,
			"second_score":	127461
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2208,
			"primary_score":	999798,
			"second_score":	127460
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2209,
			"primary_score":	999798,
			"second_score":	127459
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2211,
			"primary_score":	999798,
			"second_score":	127458
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2212,
			"primary_score":	999798,
			"second_score":	127456
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2214,
			"primary_score":	999798,
			"second_score":	127437
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2218,
			"primary_score":	999798,
			"second_score":	127436
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2221,
			"primary_score":	999798,
			"second_score":	127435
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2222,
			"primary_score":	999798,
			"second_score":	127429
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2223,
			"primary_score":	999798,
			"second_score":	127428
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2226,
			"primary_score":	999798,
			"second_score":	127422
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2230,
			"primary_score":	999798,
			"second_score":	127421
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2233,
			"primary_score":	999798,
			"second_score":	127403
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2234,
			"primary_score":	999798,
			"second_score":	127402
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2235,
			"primary_score":	999798,
			"second_score":	127401
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2236,
			"primary_score":	999798,
			"second_score":	122529
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2238,
			"primary_score":	999798,
			"second_score":	127400
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2239,
			"primary_score":	999798,
			"second_score":	127398
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2246,
			"primary_score":	999798,
			"second_score":	147043
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2344,
			"primary_score":	999798,
			"second_score":	147042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2348,
			"primary_score":	999798,
			"second_score":	146941
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2350,
			"primary_score":	999798,
			"second_score":	146940
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2351,
			"primary_score":	999798,
			"second_score":	146924
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2408,
			"primary_score":	999798,
			"second_score":	123152
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2410,
			"primary_score":	999798,
			"second_score":	123151
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2413,
			"primary_score":	999798,
			"second_score":	123150
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2418,
			"primary_score":	999798,
			"second_score":	113680
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2420,
			"primary_score":	999798,
			"second_score":	113679
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2424,
			"primary_score":	999798,
			"second_score":	113678
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2429,
			"primary_score":	999798,
			"second_score":	125041
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2431,
			"primary_score":	999798,
			"second_score":	125040
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2434,
			"primary_score":	999798,
			"second_score":	125039
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2469,
			"primary_score":	999798,
			"second_score":	133131
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2470,
			"primary_score":	999798,
			"second_score":	133130
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2472,
			"primary_score":	999798,
			"second_score":	133129
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2478,
			"primary_score":	999798,
			"second_score":	133128
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2482,
			"primary_score":	999798,
			"second_score":	133127
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2517,
			"primary_score":	999798,
			"second_score":	133132
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2527,
			"primary_score":	999798,
			"second_score":	121914
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2538,
			"primary_score":	999798,
			"second_score":	133134
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2540,
			"primary_score":	999798,
			"second_score":	133133
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2541,
			"primary_score":	999798,
			"second_score":	133046
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2544,
			"primary_score":	999798,
			"second_score":	133045
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2545,
			"primary_score":	999798,
			"second_score":	133044
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2550,
			"primary_score":	999798,
			"second_score":	153229
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2551,
			"primary_score":	999798,
			"second_score":	153228
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2553,
			"primary_score":	999798,
			"second_score":	153227
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2554,
			"primary_score":	999798,
			"second_score":	153226
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2555,
			"primary_score":	999798,
			"second_score":	153122
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2558,
			"primary_score":	999798,
			"second_score":	153121
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2559,
			"primary_score":	999798,
			"second_score":	153120
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2564,
			"primary_score":	999798,
			"second_score":	126891
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2566,
			"primary_score":	999798,
			"second_score":	126890
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2567,
			"primary_score":	999798,
			"second_score":	126790
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2570,
			"primary_score":	999798,
			"second_score":	126789
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2571,
			"primary_score":	999798,
			"second_score":	126788
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2572,
			"primary_score":	999798,
			"second_score":	126787
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2578,
			"primary_score":	999798,
			"second_score":	152907
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2580,
			"primary_score":	999798,
			"second_score":	152906
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2581,
			"primary_score":	999798,
			"second_score":	152905
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2584,
			"primary_score":	999798,
			"second_score":	152904
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2585,
			"primary_score":	999798,
			"second_score":	152903
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2587,
			"primary_score":	999798,
			"second_score":	152902
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2588,
			"primary_score":	999798,
			"second_score":	152901
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2625,
			"primary_score":	999798,
			"second_score":	3213
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	95,
			"primary_score":	999798,
			"second_score":	152855
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	96,
			"primary_score":	999798,
			"second_score":	152854
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	97,
			"primary_score":	999798,
			"second_score":	152853
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	351,
			"primary_score":	999798,
			"second_score":	124495
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1340,
			"primary_score":	999798,
			"second_score":	121501
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1341,
			"primary_score":	999798,
			"second_score":	121500
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1342,
			"primary_score":	999798,
			"second_score":	121499
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1343,
			"primary_score":	999798,
			"second_score":	121498
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1344,
			"primary_score":	999798,
			"second_score":	121497
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1346,
			"primary_score":	999798,
			"second_score":	121496
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1350,
			"primary_score":	999798,
			"second_score":	121429
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1353,
			"primary_score":	999798,
			"second_score":	121253
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1354,
			"primary_score":	999798,
			"second_score":	121252
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1359,
			"primary_score":	999798,
			"second_score":	121251
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1361,
			"primary_score":	999798,
			"second_score":	121211
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1367,
			"primary_score":	999798,
			"second_score":	121192
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1372,
			"primary_score":	999798,
			"second_score":	121191
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1896,
			"primary_score":	999798,
			"second_score":	123933
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1897,
			"primary_score":	999798,
			"second_score":	123932
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1898,
			"primary_score":	999798,
			"second_score":	123557
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1926,
			"primary_score":	999798,
			"second_score":	133355
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1928,
			"primary_score":	999798,
			"second_score":	133354
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1932,
			"primary_score":	999798,
			"second_score":	133316
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1934,
			"primary_score":	999798,
			"second_score":	133214
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1937,
			"primary_score":	999798,
			"second_score":	133213
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2399,
			"primary_score":	999877,
			"second_score":	119901
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2400,
			"primary_score":	999877,
			"second_score":	119900
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2401,
			"primary_score":	999877,
			"second_score":	119899
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2403,
			"primary_score":	999877,
			"second_score":	119898
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2407,
			"primary_score":	999877,
			"second_score":	119831
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2408,
			"primary_score":	999877,
			"second_score":	119760
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2409,
			"primary_score":	999877,
			"second_score":	119738
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	2413,
			"primary_score":	999877,
			"second_score":	119734
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	131,
			"primary_score":	999798,
			"second_score":	18923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	171,
			"primary_score":	999798,
			"second_score":	148249
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	172,
			"primary_score":	999798,
			"second_score":	148248
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	173,
			"primary_score":	999798,
			"second_score":	148247
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	174,
			"primary_score":	999798,
			"second_score":	148246
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	175,
			"primary_score":	999798,
			"second_score":	148245
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	176,
			"primary_score":	999798,
			"second_score":	148244
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	208,
			"primary_score":	999798,
			"second_score":	133749
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	210,
			"primary_score":	999798,
			"second_score":	133748
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	229,
			"primary_score":	999798,
			"second_score":	113913
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	230,
			"primary_score":	999798,
			"second_score":	113888
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	231,
			"primary_score":	999798,
			"second_score":	113863
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	232,
			"primary_score":	999798,
			"second_score":	113859
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	233,
			"primary_score":	999798,
			"second_score":	113855
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	234,
			"primary_score":	999798,
			"second_score":	113851
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	235,
			"primary_score":	999798,
			"second_score":	113847
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	236,
			"primary_score":	999798,
			"second_score":	113843
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	237,
			"primary_score":	999798,
			"second_score":	113773
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	238,
			"primary_score":	999798,
			"second_score":	113769
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	245,
			"primary_score":	999798,
			"second_score":	149106
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	246,
			"primary_score":	999798,
			"second_score":	149105
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	248,
			"primary_score":	999798,
			"second_score":	149104
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	252,
			"primary_score":	999798,
			"second_score":	148987
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	253,
			"primary_score":	999798,
			"second_score":	148877
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	254,
			"primary_score":	999798,
			"second_score":	148503
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	255,
			"primary_score":	999798,
			"second_score":	148502
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	262,
			"primary_score":	999798,
			"second_score":	133903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	269,
			"primary_score":	999798,
			"second_score":	148275
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	283,
			"primary_score":	999798,
			"second_score":	127071
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	290,
			"primary_score":	999798,
			"second_score":	134909
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	296,
			"primary_score":	999864,
			"second_score":	137969
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	297,
			"primary_score":	999864,
			"second_score":	137968
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	299,
			"primary_score":	999864,
			"second_score":	137958
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	300,
			"primary_score":	999868,
			"second_score":	137957
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	304,
			"primary_score":	999868,
			"second_score":	137956
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	305,
			"primary_score":	999868,
			"second_score":	137935
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	309,
			"primary_score":	999864,
			"second_score":	147552
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	310,
			"primary_score":	999864,
			"second_score":	147551
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	311,
			"primary_score":	999864,
			"second_score":	147550
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	312,
			"primary_score":	999864,
			"second_score":	147549
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	313,
			"primary_score":	999864,
			"second_score":	147548
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	315,
			"primary_score":	999864,
			"second_score":	147437
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	316,
			"primary_score":	999864,
			"second_score":	147368
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	317,
			"primary_score":	999864,
			"second_score":	147367
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	318,
			"primary_score":	999864,
			"second_score":	147366
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	335,
			"primary_score":	999798,
			"second_score":	134129
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	336,
			"primary_score":	999798,
			"second_score":	134128
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	337,
			"primary_score":	999798,
			"second_score":	134127
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	338,
			"primary_score":	999798,
			"second_score":	136773
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	339,
			"primary_score":	999798,
			"second_score":	136772
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	341,
			"primary_score":	999798,
			"second_score":	134126
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	342,
			"primary_score":	999798,
			"second_score":	134966
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	343,
			"primary_score":	999798,
			"second_score":	134965
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	345,
			"primary_score":	999798,
			"second_score":	134964
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	348,
			"primary_score":	999798,
			"second_score":	134125
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	349,
			"primary_score":	999798,
			"second_score":	134124
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	350,
			"primary_score":	999798,
			"second_score":	134122
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	351,
			"primary_score":	999798,
			"second_score":	134120
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	352,
			"primary_score":	999798,
			"second_score":	134119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	353,
			"primary_score":	999798,
			"second_score":	134118
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	546,
			"primary_score":	999798,
			"second_score":	135126
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	548,
			"primary_score":	999798,
			"second_score":	135125
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	567,
			"primary_score":	999876,
			"second_score":	122208
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	569,
			"primary_score":	999876,
			"second_score":	122198
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	570,
			"primary_score":	999876,
			"second_score":	122197
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	571,
			"primary_score":	999876,
			"second_score":	122196
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	572,
			"primary_score":	999876,
			"second_score":	122194
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	573,
			"primary_score":	999876,
			"second_score":	122190
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	574,
			"primary_score":	999876,
			"second_score":	122185
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	632,
			"primary_score":	999858,
			"second_score":	137998
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	633,
			"primary_score":	999858,
			"second_score":	137997
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	634,
			"primary_score":	999858,
			"second_score":	137996
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	636,
			"primary_score":	999858,
			"second_score":	137995
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	637,
			"primary_score":	999858,
			"second_score":	137994
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	640,
			"primary_score":	999858,
			"second_score":	137993
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	645,
			"primary_score":	999865,
			"second_score":	137971
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	646,
			"primary_score":	999865,
			"second_score":	137970
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	647,
			"primary_score":	999865,
			"second_score":	137934
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	648,
			"primary_score":	999865,
			"second_score":	137933
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	649,
			"primary_score":	999865,
			"second_score":	137932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	685,
			"primary_score":	999858,
			"second_score":	137999
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	841,
			"primary_score":	999798,
			"second_score":	134628
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	843,
			"primary_score":	999798,
			"second_score":	134618
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	844,
			"primary_score":	999798,
			"second_score":	134617
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	845,
			"primary_score":	999798,
			"second_score":	134613
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	897,
			"primary_score":	999867,
			"second_score":	146020
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	898,
			"primary_score":	999867,
			"second_score":	146019
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	900,
			"primary_score":	999867,
			"second_score":	146018
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	927,
			"primary_score":	999867,
			"second_score":	146017
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	929,
			"primary_score":	999867,
			"second_score":	145979
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	930,
			"primary_score":	999867,
			"second_score":	145977
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	932,
			"primary_score":	999867,
			"second_score":	145967
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	933,
			"primary_score":	999867,
			"second_score":	145966
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	989,
			"primary_score":	999867,
			"second_score":	145965
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	990,
			"primary_score":	999867,
			"second_score":	145964
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	991,
			"primary_score":	999867,
			"second_score":	145960
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	992,
			"primary_score":	999867,
			"second_score":	145956
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	993,
			"primary_score":	999867,
			"second_score":	145955
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	994,
			"primary_score":	999867,
			"second_score":	145953
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1199,
			"primary_score":	999873,
			"second_score":	122032
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1200,
			"primary_score":	999873,
			"second_score":	122030
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1202,
			"primary_score":	999873,
			"second_score":	122020
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1203,
			"primary_score":	999873,
			"second_score":	122019
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1204,
			"primary_score":	999873,
			"second_score":	122015
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1205,
			"primary_score":	999873,
			"second_score":	122014
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1206,
			"primary_score":	999873,
			"second_score":	122013
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1212,
			"primary_score":	999873,
			"second_score":	121367
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1213,
			"primary_score":	999873,
			"second_score":	121365
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1214,
			"primary_score":	999873,
			"second_score":	121355
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1216,
			"primary_score":	999873,
			"second_score":	121354
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1218,
			"primary_score":	999873,
			"second_score":	121353
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1219,
			"primary_score":	999873,
			"second_score":	121352
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1221,
			"primary_score":	999873,
			"second_score":	121351
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1222,
			"primary_score":	999873,
			"second_score":	121344
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1224,
			"primary_score":	999873,
			"second_score":	121318
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1225,
			"primary_score":	999873,
			"second_score":	121314
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1227,
			"primary_score":	999873,
			"second_score":	121284
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1228,
			"primary_score":	999873,
			"second_score":	121283
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1229,
			"primary_score":	999873,
			"second_score":	121282
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1235,
			"primary_score":	999873,
			"second_score":	121127
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1236,
			"primary_score":	999873,
			"second_score":	121125
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1237,
			"primary_score":	999873,
			"second_score":	121124
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1239,
			"primary_score":	999873,
			"second_score":	121123
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1240,
			"primary_score":	999873,
			"second_score":	121119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1241,
			"primary_score":	999873,
			"second_score":	121118
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1243,
			"primary_score":	999873,
			"second_score":	121117
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1244,
			"primary_score":	999873,
			"second_score":	121091
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1245,
			"primary_score":	999873,
			"second_score":	121069
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1251,
			"primary_score":	999867,
			"second_score":	146024
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1253,
			"primary_score":	999867,
			"second_score":	146023
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1256,
			"primary_score":	999867,
			"second_score":	146022
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1264,
			"primary_score":	999798,
			"second_score":	134812
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1266,
			"primary_score":	999798,
			"second_score":	134811
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1267,
			"primary_score":	999798,
			"second_score":	134804
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1273,
			"primary_score":	999798,
			"second_score":	134718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1274,
			"primary_score":	999798,
			"second_score":	134717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1275,
			"primary_score":	999798,
			"second_score":	134716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1276,
			"primary_score":	999798,
			"second_score":	134715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1277,
			"primary_score":	999798,
			"second_score":	134714
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1279,
			"primary_score":	999798,
			"second_score":	134713
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1281,
			"primary_score":	999798,
			"second_score":	134709
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1285,
			"primary_score":	999798,
			"second_score":	134708
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1362,
			"primary_score":	999798,
			"second_score":	134707
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1363,
			"primary_score":	999798,
			"second_score":	134703
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1421,
			"primary_score":	999805,
			"second_score":	132853
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1427,
			"primary_score":	999805,
			"second_score":	132852
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1428,
			"primary_score":	999808,
			"second_score":	132851
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1430,
			"primary_score":	999808,
			"second_score":	132850
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1433,
			"primary_score":	999808,
			"second_score":	132849
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1435,
			"primary_score":	999808,
			"second_score":	132848
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1446,
			"primary_score":	999808,
			"second_score":	132847
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1468,
			"primary_score":	999915,
			"second_score":	121418
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1469,
			"primary_score":	999915,
			"second_score":	121417
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1917,
			"primary_score":	999798,
			"second_score":	138447
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1918,
			"primary_score":	999798,
			"second_score":	138446
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1919,
			"primary_score":	999798,
			"second_score":	138445
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1921,
			"primary_score":	999798,
			"second_score":	138444
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1923,
			"primary_score":	999798,
			"second_score":	138435
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1933,
			"primary_score":	999798,
			"second_score":	138434
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1934,
			"primary_score":	999798,
			"second_score":	138293
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1941,
			"primary_score":	999798,
			"second_score":	138260
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1942,
			"primary_score":	999798,
			"second_score":	138241
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1944,
			"primary_score":	999798,
			"second_score":	138240
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1945,
			"primary_score":	999798,
			"second_score":	138214
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1946,
			"primary_score":	999798,
			"second_score":	138210
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2047,
			"primary_score":	999798,
			"second_score":	136089
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2048,
			"primary_score":	999798,
			"second_score":	136088
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2049,
			"primary_score":	999798,
			"second_score":	136087
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2050,
			"primary_score":	999798,
			"second_score":	136086
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2052,
			"primary_score":	999798,
			"second_score":	136085
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2059,
			"primary_score":	999798,
			"second_score":	136084
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2063,
			"primary_score":	999798,
			"second_score":	136083
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2083,
			"primary_score":	999798,
			"second_score":	136082
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2315,
			"primary_score":	999798,
			"second_score":	133923
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2319,
			"primary_score":	999798,
			"second_score":	133922
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2414,
			"primary_score":	999798,
			"second_score":	134988
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2416,
			"primary_score":	999798,
			"second_score":	134987
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2423,
			"primary_score":	999798,
			"second_score":	134986
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2424,
			"primary_score":	999798,
			"second_score":	134976
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2425,
			"primary_score":	999798,
			"second_score":	134975
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2426,
			"primary_score":	999798,
			"second_score":	134974
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2427,
			"primary_score":	999798,
			"second_score":	134915
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2428,
			"primary_score":	999798,
			"second_score":	134912
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2435,
			"primary_score":	999798,
			"second_score":	134910
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2436,
			"primary_score":	999798,
			"second_score":	134908
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2437,
			"primary_score":	999798,
			"second_score":	134907
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2438,
			"primary_score":	999798,
			"second_score":	134902
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2440,
			"primary_score":	999798,
			"second_score":	134901
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2441,
			"primary_score":	999798,
			"second_score":	134879
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2447,
			"primary_score":	999798,
			"second_score":	135141
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2448,
			"primary_score":	999798,
			"second_score":	135140
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2449,
			"primary_score":	999798,
			"second_score":	135139
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2450,
			"primary_score":	999798,
			"second_score":	135138
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2451,
			"primary_score":	999798,
			"second_score":	135137
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2453,
			"primary_score":	999798,
			"second_score":	135136
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2454,
			"primary_score":	999798,
			"second_score":	135132
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2456,
			"primary_score":	999798,
			"second_score":	135131
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2471,
			"primary_score":	999798,
			"second_score":	135130
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2472,
			"primary_score":	999798,
			"second_score":	135129
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2485,
			"primary_score":	999798,
			"second_score":	135128
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2491,
			"primary_score":	999798,
			"second_score":	135127
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2493,
			"primary_score":	999798,
			"second_score":	135124
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2494,
			"primary_score":	999798,
			"second_score":	135123
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2495,
			"primary_score":	999798,
			"second_score":	136797
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2499,
			"primary_score":	999798,
			"second_score":	135122
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2512,
			"primary_score":	999798,
			"second_score":	135121
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2513,
			"primary_score":	999798,
			"second_score":	135120
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2516,
			"primary_score":	999798,
			"second_score":	135082
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2519,
			"primary_score":	999868,
			"second_score":	137763
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2523,
			"primary_score":	999868,
			"second_score":	137725
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2530,
			"primary_score":	999798,
			"second_score":	135081
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2532,
			"primary_score":	999798,
			"second_score":	135071
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2533,
			"primary_score":	999798,
			"second_score":	135070
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2534,
			"primary_score":	999798,
			"second_score":	135069
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2539,
			"primary_score":	999798,
			"second_score":	136783
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2540,
			"primary_score":	999798,
			"second_score":	136782
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2545,
			"primary_score":	999798,
			"second_score":	135068
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2546,
			"primary_score":	999798,
			"second_score":	135067
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2547,
			"primary_score":	999798,
			"second_score":	135063
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2548,
			"primary_score":	999798,
			"second_score":	135062
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2601,
			"primary_score":	999798,
			"second_score":	134161
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2602,
			"primary_score":	999798,
			"second_score":	134160
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2604,
			"primary_score":	999798,
			"second_score":	134159
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2612,
			"primary_score":	999798,
			"second_score":	134158
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2618,
			"primary_score":	999798,
			"second_score":	134156
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2619,
			"primary_score":	999798,
			"second_score":	134152
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2622,
			"primary_score":	999798,
			"second_score":	134148
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2623,
			"primary_score":	999798,
			"second_score":	134146
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2628,
			"primary_score":	999798,
			"second_score":	134145
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2630,
			"primary_score":	999798,
			"second_score":	134135
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2632,
			"primary_score":	999798,
			"second_score":	134134
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2633,
			"primary_score":	999798,
			"second_score":	134133
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2635,
			"primary_score":	999798,
			"second_score":	134117
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2639,
			"primary_score":	999798,
			"second_score":	119941
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2640,
			"primary_score":	999798,
			"second_score":	119940
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2643,
			"primary_score":	999798,
			"second_score":	134116
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5070,
			"primary_score":	999798,
			"second_score":	137683
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5072,
			"primary_score":	999798,
			"second_score":	137682
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5085,
			"primary_score":	999798,
			"second_score":	137681
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5097,
			"primary_score":	999798,
			"second_score":	137654
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5098,
			"primary_score":	999966,
			"second_score":	139410
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5100,
			"primary_score":	999798,
			"second_score":	137653
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5105,
			"primary_score":	999798,
			"second_score":	137652
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5113,
			"primary_score":	999798,
			"second_score":	137684
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5115,
			"primary_score":	999798,
			"second_score":	137651
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5116,
			"primary_score":	999798,
			"second_score":	137650
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5117,
			"primary_score":	999798,
			"second_score":	137624
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5118,
			"primary_score":	999798,
			"second_score":	137623
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5119,
			"primary_score":	999798,
			"second_score":	137622
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5120,
			"primary_score":	999798,
			"second_score":	137588
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5121,
			"primary_score":	999798,
			"second_score":	137585
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5129,
			"primary_score":	999798,
			"second_score":	137701
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5130,
			"primary_score":	999798,
			"second_score":	137700
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5131,
			"primary_score":	999798,
			"second_score":	137699
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5132,
			"primary_score":	999798,
			"second_score":	137698
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5133,
			"primary_score":	999798,
			"second_score":	137697
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5135,
			"primary_score":	999798,
			"second_score":	137696
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5182,
			"primary_score":	999798,
			"second_score":	137695
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5203,
			"primary_score":	999798,
			"second_score":	137694
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5205,
			"primary_score":	999798,
			"second_score":	137685
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5206,
			"primary_score":	999798,
			"second_score":	137584
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5270,
			"primary_score":	999916,
			"second_score":	134516
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5272,
			"primary_score":	999916,
			"second_score":	134506
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5273,
			"primary_score":	999916,
			"second_score":	134505
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5274,
			"primary_score":	999916,
			"second_score":	134503
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5275,
			"primary_score":	999916,
			"second_score":	134502
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5276,
			"primary_score":	999916,
			"second_score":	134497
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5277,
			"primary_score":	999923,
			"second_score":	134496
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5278,
			"primary_score":	999923,
			"second_score":	134480
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5279,
			"primary_score":	999936,
			"second_score":	134479
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5280,
			"primary_score":	999936,
			"second_score":	134418
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5281,
			"primary_score":	999938,
			"second_score":	134417
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5282,
			"primary_score":	999938,
			"second_score":	134416
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5284,
			"primary_score":	999938,
			"second_score":	134415
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5285,
			"primary_score":	999938,
			"second_score":	134411
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5289,
			"primary_score":	999939,
			"second_score":	134410
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5299,
			"primary_score":	999916,
			"second_score":	134407
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5305,
			"primary_score":	999935,
			"second_score":	134227
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5307,
			"primary_score":	999935,
			"second_score":	134217
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5308,
			"primary_score":	999935,
			"second_score":	134216
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5309,
			"primary_score":	999935,
			"second_score":	134212
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5310,
			"primary_score":	999935,
			"second_score":	134208
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5311,
			"primary_score":	999948,
			"second_score":	134207
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5312,
			"primary_score":	999948,
			"second_score":	134149
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5313,
			"primary_score":	999948,
			"second_score":	134148
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5314,
			"primary_score":	999948,
			"second_score":	134147
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5316,
			"primary_score":	999948,
			"second_score":	134146
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5317,
			"primary_score":	999948,
			"second_score":	134142
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5321,
			"primary_score":	999948,
			"second_score":	134141
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5327,
			"primary_score":	999935,
			"second_score":	134138
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6021,
			"primary_score":	999915,
			"second_score":	121620
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6023,
			"primary_score":	999915,
			"second_score":	121610
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6024,
			"primary_score":	999915,
			"second_score":	121609
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6025,
			"primary_score":	999915,
			"second_score":	121524
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6027,
			"primary_score":	999915,
			"second_score":	121523
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6028,
			"primary_score":	999915,
			"second_score":	121522
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6029,
			"primary_score":	999915,
			"second_score":	121521
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6095,
			"primary_score":	999798,
			"second_score":	130273
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6096,
			"primary_score":	999798,
			"second_score":	130271
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6098,
			"primary_score":	999798,
			"second_score":	130270
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6100,
			"primary_score":	999798,
			"second_score":	130260
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6101,
			"primary_score":	999798,
			"second_score":	130259
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6102,
			"primary_score":	999798,
			"second_score":	130255
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6103,
			"primary_score":	999798,
			"second_score":	130254
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6104,
			"primary_score":	999798,
			"second_score":	130253
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6106,
			"primary_score":	999798,
			"second_score":	130248
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6112,
			"primary_score":	999798,
			"second_score":	127446
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6114,
			"primary_score":	999798,
			"second_score":	127436
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6116,
			"primary_score":	999798,
			"second_score":	127434
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6117,
			"primary_score":	999798,
			"second_score":	127433
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6118,
			"primary_score":	999798,
			"second_score":	127432
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6119,
			"primary_score":	999798,
			"second_score":	127430
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6120,
			"primary_score":	999798,
			"second_score":	127426
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6122,
			"primary_score":	999798,
			"second_score":	127425
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6123,
			"primary_score":	999798,
			"second_score":	127420
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6125,
			"primary_score":	999798,
			"second_score":	127418
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6126,
			"primary_score":	999798,
			"second_score":	127408
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6127,
			"primary_score":	999798,
			"second_score":	127407
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6128,
			"primary_score":	999798,
			"second_score":	127406
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6134,
			"primary_score":	999798,
			"second_score":	127016
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6136,
			"primary_score":	999798,
			"second_score":	127006
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6137,
			"primary_score":	999798,
			"second_score":	127005
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6138,
			"primary_score":	999798,
			"second_score":	127001
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6139,
			"primary_score":	999798,
			"second_score":	126903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6141,
			"primary_score":	999798,
			"second_score":	126902
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6143,
			"primary_score":	999798,
			"second_score":	126900
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6145,
			"primary_score":	999798,
			"second_score":	126895
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6151,
			"primary_score":	999798,
			"second_score":	134388
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6153,
			"primary_score":	999798,
			"second_score":	134387
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6154,
			"primary_score":	999798,
			"second_score":	134386
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6167,
			"primary_score":	999798,
			"second_score":	138213
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6169,
			"primary_score":	999798,
			"second_score":	138212
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6170,
			"primary_score":	999798,
			"second_score":	138211
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6183,
			"primary_score":	999798,
			"second_score":	134877
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6185,
			"primary_score":	999798,
			"second_score":	134876
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6186,
			"primary_score":	999798,
			"second_score":	134875
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6199,
			"primary_score":	999798,
			"second_score":	134320
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6220,
			"primary_score":	999864,
			"second_score":	137972
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6258,
			"primary_score":	999798,
			"second_score":	134252
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6260,
			"primary_score":	999798,
			"second_score":	134251
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6261,
			"primary_score":	999798,
			"second_score":	132510
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6262,
			"primary_score":	999798,
			"second_score":	132509
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6265,
			"primary_score":	999798,
			"second_score":	134250
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6267,
			"primary_score":	999798,
			"second_score":	134249
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6268,
			"primary_score":	999798,
			"second_score":	134226
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6277,
			"primary_score":	999798,
			"second_score":	132669
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6279,
			"primary_score":	999798,
			"second_score":	134408
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6282,
			"primary_score":	999798,
			"second_score":	134407
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6283,
			"primary_score":	999798,
			"second_score":	134406
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6292,
			"primary_score":	999798,
			"second_score":	134225
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6293,
			"primary_score":	999798,
			"second_score":	134222
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6294,
			"primary_score":	999798,
			"second_score":	134221
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6609,
			"primary_score":	999798,
			"second_score":	134296
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6617,
			"primary_score":	999798,
			"second_score":	134204
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6618,
			"primary_score":	999798,
			"second_score":	134203
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6623,
			"primary_score":	999798,
			"second_score":	134202
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6633,
			"primary_score":	999798,
			"second_score":	134206
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6634,
			"primary_score":	999798,
			"second_score":	134205
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	32,
			"primary_score":	999798,
			"second_score":	6291
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	33,
			"primary_score":	999798,
			"second_score":	114328
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	35,
			"primary_score":	999798,
			"second_score":	6290
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	60,
			"primary_score":	999798,
			"second_score":	114111
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	171,
			"primary_score":	999798,
			"second_score":	114842
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	174,
			"primary_score":	999798,
			"second_score":	114841
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	452,
			"primary_score":	999798,
			"second_score":	152897
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	453,
			"primary_score":	999798,
			"second_score":	152896
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	454,
			"primary_score":	999798,
			"second_score":	152895
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	460,
			"primary_score":	999798,
			"second_score":	152894
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	467,
			"primary_score":	999798,
			"second_score":	152893
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	468,
			"primary_score":	999798,
			"second_score":	152892
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	474,
			"primary_score":	999798,
			"second_score":	152891
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	479,
			"primary_score":	999798,
			"second_score":	152890
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	495,
			"primary_score":	999798,
			"second_score":	152825
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	498,
			"primary_score":	999798,
			"second_score":	152824
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	73,
			"primary_score":	999798,
			"second_score":	120111
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	541,
			"primary_score":	999942,
			"second_score":	124675
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	542,
			"primary_score":	999942,
			"second_score":	124674
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	544,
			"primary_score":	999942,
			"second_score":	124673
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	545,
			"primary_score":	999942,
			"second_score":	124672
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	546,
			"primary_score":	999942,
			"second_score":	124552
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	547,
			"primary_score":	999942,
			"second_score":	124551
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	71,
			"primary_score":	999798,
			"second_score":	123376
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	72,
			"primary_score":	999798,
			"second_score":	123374
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	73,
			"primary_score":	999798,
			"second_score":	123372
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	74,
			"primary_score":	999798,
			"second_score":	123370
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	177,
			"primary_score":	999798,
			"second_score":	125279
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	182,
			"primary_score":	999798,
			"second_score":	123378
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	184,
			"primary_score":	999798,
			"second_score":	123377
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	185,
			"primary_score":	999798,
			"second_score":	123369
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	273,
			"primary_score":	999864,
			"second_score":	131175
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	275,
			"primary_score":	999864,
			"second_score":	131174
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	279,
			"primary_score":	999866,
			"second_score":	131173
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	280,
			"primary_score":	999866,
			"second_score":	131164
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	281,
			"primary_score":	999866,
			"second_score":	131162
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	283,
			"primary_score":	999864,
			"second_score":	131016
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	298,
			"primary_score":	999869,
			"second_score":	126083
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	300,
			"primary_score":	999869,
			"second_score":	126082
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	303,
			"primary_score":	999870,
			"second_score":	126081
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	439,
			"primary_score":	999864,
			"second_score":	131178
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	441,
			"primary_score":	999864,
			"second_score":	131177
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	442,
			"primary_score":	999864,
			"second_score":	131176
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	602,
			"primary_score":	999798,
			"second_score":	123283
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	603,
			"primary_score":	999798,
			"second_score":	123282
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	604,
			"primary_score":	999798,
			"second_score":	123281
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	606,
			"primary_score":	999798,
			"second_score":	123280
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	608,
			"primary_score":	999976,
			"second_score":	128752
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	611,
			"primary_score":	999798,
			"second_score":	123279
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	613,
			"primary_score":	999798,
			"second_score":	123278
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	629,
			"primary_score":	999798,
			"second_score":	123277
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	638,
			"primary_score":	999798,
			"second_score":	123276
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	799,
			"primary_score":	999935,
			"second_score":	131011
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	800,
			"primary_score":	999935,
			"second_score":	131010
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	802,
			"primary_score":	999935,
			"second_score":	131009
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	808,
			"primary_score":	999935,
			"second_score":	131008
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	811,
			"primary_score":	999936,
			"second_score":	131005
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	812,
			"primary_score":	999936,
			"second_score":	131003
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	813,
			"primary_score":	999936,
			"second_score":	131001
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	814,
			"primary_score":	999936,
			"second_score":	130977
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	815,
			"primary_score":	999936,
			"second_score":	130969
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	816,
			"primary_score":	999936,
			"second_score":	130968
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	82,
			"primary_score":	999798,
			"second_score":	120171
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	83,
			"primary_score":	999798,
			"second_score":	120169
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	85,
			"primary_score":	999798,
			"second_score":	120168
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	86,
			"primary_score":	999798,
			"second_score":	122094
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	87,
			"primary_score":	999798,
			"second_score":	120165
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	88,
			"primary_score":	999798,
			"second_score":	120162
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	91,
			"primary_score":	999798,
			"second_score":	123499
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	93,
			"primary_score":	999798,
			"second_score":	123498
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	94,
			"primary_score":	999798,
			"second_score":	123496
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	97,
			"primary_score":	999798,
			"second_score":	123494
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	103,
			"primary_score":	999798,
			"second_score":	121114
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	105,
			"primary_score":	999798,
			"second_score":	121113
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	113,
			"primary_score":	999798,
			"second_score":	121112
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	155,
			"primary_score":	999798,
			"second_score":	121111
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	199,
			"primary_score":	999798,
			"second_score":	114937
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	201,
			"primary_score":	999798,
			"second_score":	114936
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	202,
			"primary_score":	999798,
			"second_score":	114935
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	203,
			"primary_score":	999798,
			"second_score":	114934
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	204,
			"primary_score":	999798,
			"second_score":	114889
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	217,
			"primary_score":	999798,
			"second_score":	123204
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	222,
			"primary_score":	999798,
			"second_score":	148764
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	223,
			"primary_score":	999798,
			"second_score":	148762
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	245,
			"primary_score":	999798,
			"second_score":	133676
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	247,
			"primary_score":	999798,
			"second_score":	133675
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	250,
			"primary_score":	999798,
			"second_score":	133674
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	265,
			"primary_score":	999798,
			"second_score":	133673
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	267,
			"primary_score":	999798,
			"second_score":	133671
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	268,
			"primary_score":	999798,
			"second_score":	133670
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	269,
			"primary_score":	999798,
			"second_score":	133669
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	274,
			"primary_score":	999798,
			"second_score":	120198
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	280,
			"primary_score":	999798,
			"second_score":	120197
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	286,
			"primary_score":	999798,
			"second_score":	120120
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	293,
			"primary_score":	999798,
			"second_score":	120119
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	297,
			"primary_score":	999798,
			"second_score":	120118
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	305,
			"primary_score":	999798,
			"second_score":	123420
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	327,
			"primary_score":	999798,
			"second_score":	123419
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	328,
			"primary_score":	999798,
			"second_score":	123418
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	333,
			"primary_score":	999798,
			"second_score":	122105
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	334,
			"primary_score":	999798,
			"second_score":	122104
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	336,
			"primary_score":	999798,
			"second_score":	122103
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	337,
			"primary_score":	999798,
			"second_score":	120234
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	338,
			"primary_score":	999798,
			"second_score":	120233
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	339,
			"primary_score":	999798,
			"second_score":	120232
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	341,
			"primary_score":	999798,
			"second_score":	120199
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	367,
			"primary_score":	999798,
			"second_score":	123430
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	369,
			"primary_score":	999798,
			"second_score":	123429
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	371,
			"primary_score":	999798,
			"second_score":	123424
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	372,
			"primary_score":	999798,
			"second_score":	123423
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	373,
			"primary_score":	999798,
			"second_score":	123422
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	107,
			"primary_score":	999798,
			"second_score":	114876
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	119,
			"primary_score":	999798,
			"second_score":	114860
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	119663
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	206,
			"primary_score":	999798,
			"second_score":	119662
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	213,
			"primary_score":	999798,
			"second_score":	119739
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	214,
			"primary_score":	999798,
			"second_score":	119733
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	215,
			"primary_score":	999798,
			"second_score":	119732
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	216,
			"primary_score":	999798,
			"second_score":	119731
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	217,
			"primary_score":	999798,
			"second_score":	119728
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	219,
			"primary_score":	999798,
			"second_score":	119652
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	223,
			"primary_score":	999798,
			"second_score":	119649
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	229,
			"primary_score":	999798,
			"second_score":	118794
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	246,
			"primary_score":	999798,
			"second_score":	118788
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	247,
			"primary_score":	999798,
			"second_score":	118785
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	248,
			"primary_score":	999798,
			"second_score":	115030
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	250,
			"primary_score":	999798,
			"second_score":	115028
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	115022
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	254,
			"primary_score":	999798,
			"second_score":	115021
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	261,
			"primary_score":	999798,
			"second_score":	115020
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	268,
			"primary_score":	999798,
			"second_score":	115019
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	269,
			"primary_score":	999798,
			"second_score":	115015
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	270,
			"primary_score":	999798,
			"second_score":	115010
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	271,
			"primary_score":	999798,
			"second_score":	115001
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	272,
			"primary_score":	999798,
			"second_score":	114992
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	274,
			"primary_score":	999798,
			"second_score":	114990
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	284,
			"primary_score":	999798,
			"second_score":	114984
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	288,
			"primary_score":	999798,
			"second_score":	114983
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	114966
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	290,
			"primary_score":	999798,
			"second_score":	114949
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	292,
			"primary_score":	999798,
			"second_score":	114946
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	294,
			"primary_score":	999798,
			"second_score":	114944
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	295,
			"primary_score":	999798,
			"second_score":	114938
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	297,
			"primary_score":	999798,
			"second_score":	114888
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	300,
			"primary_score":	999798,
			"second_score":	114885
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	304,
			"primary_score":	999798,
			"second_score":	114884
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	305,
			"primary_score":	999798,
			"second_score":	114868
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	308,
			"primary_score":	999798,
			"second_score":	114852
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	313,
			"primary_score":	999798,
			"second_score":	114851
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	315,
			"primary_score":	999798,
			"second_score":	114849
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	316,
			"primary_score":	999798,
			"second_score":	114843
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	317,
			"primary_score":	999798,
			"second_score":	114103
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	319,
			"primary_score":	999798,
			"second_score":	114101
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	324,
			"primary_score":	999798,
			"second_score":	114095
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	326,
			"primary_score":	999798,
			"second_score":	114026
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	327,
			"primary_score":	999798,
			"second_score":	114005
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	328,
			"primary_score":	999798,
			"second_score":	114001
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	329,
			"primary_score":	999798,
			"second_score":	113999
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	330,
			"primary_score":	999798,
			"second_score":	113997
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	331,
			"primary_score":	999798,
			"second_score":	113929
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	335,
			"primary_score":	999798,
			"second_score":	113928
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	337,
			"primary_score":	999798,
			"second_score":	113926
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	339,
			"primary_score":	999798,
			"second_score":	113921
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	399,
			"primary_score":	999798,
			"second_score":	127067
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	400,
			"primary_score":	999798,
			"second_score":	127066
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	409,
			"primary_score":	999798,
			"second_score":	127064
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	413,
			"primary_score":	999798,
			"second_score":	127063
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	414,
			"primary_score":	999798,
			"second_score":	127062
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	432,
			"primary_score":	999798,
			"second_score":	115146
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	433,
			"primary_score":	999798,
			"second_score":	115144
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	434,
			"primary_score":	999798,
			"second_score":	115142
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	436,
			"primary_score":	999798,
			"second_score":	115141
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	437,
			"primary_score":	999798,
			"second_score":	115140
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	438,
			"primary_score":	999798,
			"second_score":	115127
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	439,
			"primary_score":	999798,
			"second_score":	115093
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	442,
			"primary_score":	999798,
			"second_score":	115900
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	444,
			"primary_score":	999798,
			"second_score":	115899
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	445,
			"primary_score":	999798,
			"second_score":	115897
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	448,
			"primary_score":	999798,
			"second_score":	115895
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	458,
			"primary_score":	999798,
			"second_score":	15303
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	459,
			"primary_score":	999798,
			"second_score":	15301
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	460,
			"primary_score":	999798,
			"second_score":	15299
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	461,
			"primary_score":	999798,
			"second_score":	15297
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	462,
			"primary_score":	999798,
			"second_score":	17662
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	463,
			"primary_score":	999798,
			"second_score":	17660
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1157,
			"primary_score":	999798,
			"second_score":	122188
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1158,
			"primary_score":	999798,
			"second_score":	122187
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1159,
			"primary_score":	999798,
			"second_score":	122186
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1160,
			"primary_score":	999798,
			"second_score":	122185
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1161,
			"primary_score":	999798,
			"second_score":	122184
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1163,
			"primary_score":	999798,
			"second_score":	122183
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1171,
			"primary_score":	999798,
			"second_score":	122182
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1172,
			"primary_score":	999798,
			"second_score":	122181
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1174,
			"primary_score":	999798,
			"second_score":	122180
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1178,
			"primary_score":	999798,
			"second_score":	122179
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1179,
			"primary_score":	999798,
			"second_score":	122178
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1180,
			"primary_score":	999798,
			"second_score":	122177
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1181,
			"primary_score":	999798,
			"second_score":	119690
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1183,
			"primary_score":	999798,
			"second_score":	119689
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1184,
			"primary_score":	999798,
			"second_score":	119688
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1185,
			"primary_score":	999798,
			"second_score":	119687
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1186,
			"primary_score":	999798,
			"second_score":	119686
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1187,
			"primary_score":	999798,
			"second_score":	119685
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1189,
			"primary_score":	999798,
			"second_score":	119684
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1190,
			"primary_score":	999798,
			"second_score":	119683
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1191,
			"primary_score":	999798,
			"second_score":	119682
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1192,
			"primary_score":	999798,
			"second_score":	119681
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1195,
			"primary_score":	999798,
			"second_score":	119680
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1197,
			"primary_score":	999798,
			"second_score":	119679
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1199,
			"primary_score":	999798,
			"second_score":	119310
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1200,
			"primary_score":	999798,
			"second_score":	119309
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1201,
			"primary_score":	999798,
			"second_score":	119308
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1204,
			"primary_score":	999798,
			"second_score":	119307
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1212,
			"primary_score":	999798,
			"second_score":	119276
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1213,
			"primary_score":	999798,
			"second_score":	119275
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1214,
			"primary_score":	999798,
			"second_score":	119274
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1215,
			"primary_score":	999798,
			"second_score":	119273
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1216,
			"primary_score":	999798,
			"second_score":	119184
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1217,
			"primary_score":	999798,
			"second_score":	119165
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1218,
			"primary_score":	999798,
			"second_score":	119164
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1222,
			"primary_score":	999798,
			"second_score":	119163
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1225,
			"primary_score":	999798,
			"second_score":	119162
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1237,
			"primary_score":	999798,
			"second_score":	122190
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1239,
			"primary_score":	999798,
			"second_score":	122189
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1240,
			"primary_score":	999798,
			"second_score":	119161
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1244,
			"primary_score":	999798,
			"second_score":	119160
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1250,
			"primary_score":	999798,
			"second_score":	122191
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1512,
			"primary_score":	999798,
			"second_score":	103808
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	182,
			"primary_score":	999798,
			"second_score":	14759
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	183,
			"primary_score":	999798,
			"second_score":	14756
		}, {
			"file":	"Zend/zend_float.c",
			"line":	44,
			"primary_score":	999798,
			"second_score":	113925
		}, {
			"file":	"Zend/zend_float.c",
			"line":	45,
			"primary_score":	999798,
			"second_score":	113924
		}, {
			"file":	"Zend/zend_float.c",
			"line":	48,
			"primary_score":	999798,
			"second_score":	113922
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	35,
			"primary_score":	999798,
			"second_score":	3139
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	36,
			"primary_score":	999798,
			"second_score":	3138
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	37,
			"primary_score":	999798,
			"second_score":	3137
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	3140
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	132,
			"primary_score":	999798,
			"second_score":	115932
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	142,
			"primary_score":	999798,
			"second_score":	115931
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	147,
			"primary_score":	999798,
			"second_score":	115930
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	149,
			"primary_score":	999798,
			"second_score":	115929
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	150,
			"primary_score":	999798,
			"second_score":	118841
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	152,
			"primary_score":	999798,
			"second_score":	118840
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	153,
			"primary_score":	999798,
			"second_score":	118839
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	155,
			"primary_score":	999798,
			"second_score":	118838
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	156,
			"primary_score":	999798,
			"second_score":	118976
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	157,
			"primary_score":	999798,
			"second_score":	118837
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	158,
			"primary_score":	999798,
			"second_score":	118836
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	159,
			"primary_score":	999798,
			"second_score":	118835
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	176,
			"primary_score":	999798,
			"second_score":	118834
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	177,
			"primary_score":	999798,
			"second_score":	118833
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	178,
			"primary_score":	999798,
			"second_score":	118832
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	179,
			"primary_score":	999798,
			"second_score":	118831
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	181,
			"primary_score":	999798,
			"second_score":	118830
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	183,
			"primary_score":	999798,
			"second_score":	118829
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	184,
			"primary_score":	999798,
			"second_score":	118828
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	186,
			"primary_score":	999798,
			"second_score":	118827
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	187,
			"primary_score":	999798,
			"second_score":	118826
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	188,
			"primary_score":	999798,
			"second_score":	118825
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	115138
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	253,
			"primary_score":	999798,
			"second_score":	115137
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	264,
			"primary_score":	999798,
			"second_score":	115136
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	265,
			"primary_score":	999798,
			"second_score":	115135
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	266,
			"primary_score":	999798,
			"second_score":	115129
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	856,
			"primary_score":	999798,
			"second_score":	113734
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	858,
			"primary_score":	999798,
			"second_score":	113733
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	931,
			"primary_score":	999798,
			"second_score":	113732
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	182,
			"primary_score":	999798,
			"second_score":	115894
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	183,
			"primary_score":	999798,
			"second_score":	115933
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	189,
			"primary_score":	999798,
			"second_score":	115134
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	190,
			"primary_score":	999798,
			"second_score":	115133
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	191,
			"primary_score":	999798,
			"second_score":	115132
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	192,
			"primary_score":	999798,
			"second_score":	115131
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	193,
			"primary_score":	999798,
			"second_score":	115130
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	197,
			"primary_score":	999798,
			"second_score":	133884
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	198,
			"primary_score":	999798,
			"second_score":	133883
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	199,
			"primary_score":	999798,
			"second_score":	133882
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	133881
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	133880
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	210,
			"primary_score":	999798,
			"second_score":	144219
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	212,
			"primary_score":	999798,
			"second_score":	133877
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	213,
			"primary_score":	999798,
			"second_score":	133770
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	215,
			"primary_score":	999798,
			"second_score":	133769
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	216,
			"primary_score":	999798,
			"second_score":	133768
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	217,
			"primary_score":	999798,
			"second_score":	133767
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	220,
			"primary_score":	999798,
			"second_score":	133765
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	233,
			"primary_score":	999808,
			"second_score":	158139
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	240,
			"primary_score":	999798,
			"second_score":	153043
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	243,
			"primary_score":	999798,
			"second_score":	143993
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	244,
			"primary_score":	999798,
			"second_score":	151510
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	245,
			"primary_score":	999798,
			"second_score":	151406
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	248,
			"primary_score":	999798,
			"second_score":	151405
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	250,
			"primary_score":	999798,
			"second_score":	143992
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	143888
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	254,
			"primary_score":	999798,
			"second_score":	143887
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	255,
			"primary_score":	999798,
			"second_score":	143886
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	257,
			"primary_score":	999798,
			"second_score":	143885
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	258,
			"primary_score":	999798,
			"second_score":	149625
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	259,
			"primary_score":	999798,
			"second_score":	143879
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	260,
			"primary_score":	999798,
			"second_score":	153019
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	261,
			"primary_score":	999798,
			"second_score":	143874
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	262,
			"primary_score":	999798,
			"second_score":	148522
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	265,
			"primary_score":	999798,
			"second_score":	143872
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	266,
			"primary_score":	999798,
			"second_score":	148225
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	267,
			"primary_score":	999798,
			"second_score":	143861
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	268,
			"primary_score":	999798,
			"second_score":	143860
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	270,
			"primary_score":	999798,
			"second_score":	143858
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	271,
			"primary_score":	999798,
			"second_score":	143857
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	272,
			"primary_score":	999798,
			"second_score":	143855
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	363,
			"primary_score":	999798,
			"second_score":	153446
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	364,
			"primary_score":	999798,
			"second_score":	153445
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	366,
			"primary_score":	999798,
			"second_score":	153444
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	367,
			"primary_score":	999798,
			"second_score":	153443
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	369,
			"primary_score":	999798,
			"second_score":	153441
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	372,
			"primary_score":	999798,
			"second_score":	153440
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	374,
			"primary_score":	999798,
			"second_score":	153439
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	375,
			"primary_score":	999798,
			"second_score":	153438
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	376,
			"primary_score":	999798,
			"second_score":	127301
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	401,
			"primary_score":	999798,
			"second_score":	127300
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	403,
			"primary_score":	999798,
			"second_score":	153437
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	404,
			"primary_score":	999798,
			"second_score":	153333
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	407,
			"primary_score":	999798,
			"second_score":	153332
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	408,
			"primary_score":	999798,
			"second_score":	153331
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	409,
			"primary_score":	999798,
			"second_score":	153330
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	410,
			"primary_score":	999798,
			"second_score":	153329
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	411,
			"primary_score":	999798,
			"second_score":	153301
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	415,
			"primary_score":	999798,
			"second_score":	153300
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	417,
			"primary_score":	999798,
			"second_score":	153296
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	418,
			"primary_score":	999798,
			"second_score":	153294
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	419,
			"primary_score":	999798,
			"second_score":	153293
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	420,
			"primary_score":	999798,
			"second_score":	153285
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	422,
			"primary_score":	999798,
			"second_score":	153283
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	423,
			"primary_score":	999798,
			"second_score":	153282
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	425,
			"primary_score":	999798,
			"second_score":	153281
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	426,
			"primary_score":	999798,
			"second_score":	153280
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	427,
			"primary_score":	999798,
			"second_score":	153278
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	476,
			"primary_score":	999798,
			"second_score":	47518
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	477,
			"primary_score":	999798,
			"second_score":	47517
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	479,
			"primary_score":	999798,
			"second_score":	47516
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	481,
			"primary_score":	999798,
			"second_score":	47515
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	482,
			"primary_score":	999798,
			"second_score":	47514
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	484,
			"primary_score":	999798,
			"second_score":	47498
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	486,
			"primary_score":	999798,
			"second_score":	47497
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	487,
			"primary_score":	999798,
			"second_score":	47496
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	488,
			"primary_score":	999798,
			"second_score":	47495
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	492,
			"primary_score":	999798,
			"second_score":	47494
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	493,
			"primary_score":	999798,
			"second_score":	47492
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	494,
			"primary_score":	999798,
			"second_score":	47491
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	496,
			"primary_score":	999798,
			"second_score":	47542
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	498,
			"primary_score":	999798,
			"second_score":	47490
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	499,
			"primary_score":	999798,
			"second_score":	51869
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	501,
			"primary_score":	999798,
			"second_score":	47489
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	502,
			"primary_score":	999798,
			"second_score":	50456
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	505,
			"primary_score":	999798,
			"second_score":	47488
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	507,
			"primary_score":	999798,
			"second_score":	47487
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	508,
			"primary_score":	999798,
			"second_score":	47486
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	510,
			"primary_score":	999798,
			"second_score":	62288
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	512,
			"primary_score":	999798,
			"second_score":	47485
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	513,
			"primary_score":	999798,
			"second_score":	47484
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	515,
			"primary_score":	999798,
			"second_score":	47483
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	516,
			"primary_score":	999798,
			"second_score":	47482
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	518,
			"primary_score":	999798,
			"second_score":	47478
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	519,
			"primary_score":	999798,
			"second_score":	47477
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	521,
			"primary_score":	999798,
			"second_score":	47476
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	522,
			"primary_score":	999798,
			"second_score":	47475
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	523,
			"primary_score":	999798,
			"second_score":	47473
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	524,
			"primary_score":	999798,
			"second_score":	47472
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	526,
			"primary_score":	999798,
			"second_score":	47547
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	534,
			"primary_score":	999798,
			"second_score":	3133
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	536,
			"primary_score":	999798,
			"second_score":	3132
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	538,
			"primary_score":	999798,
			"second_score":	3131
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	540,
			"primary_score":	999798,
			"second_score":	3130
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	541,
			"primary_score":	999798,
			"second_score":	3129
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	542,
			"primary_score":	999798,
			"second_score":	3122
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	543,
			"primary_score":	999798,
			"second_score":	3121
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	544,
			"primary_score":	999798,
			"second_score":	3120
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	545,
			"primary_score":	999798,
			"second_score":	3257
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	547,
			"primary_score":	999798,
			"second_score":	3119
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	548,
			"primary_score":	999798,
			"second_score":	3118
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	550,
			"primary_score":	999798,
			"second_score":	3117
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	552,
			"primary_score":	999798,
			"second_score":	3116
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	553,
			"primary_score":	999798,
			"second_score":	3115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	556,
			"primary_score":	999798,
			"second_score":	3114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	597,
			"primary_score":	999798,
			"second_score":	3611
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	599,
			"primary_score":	999798,
			"second_score":	3610
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	600,
			"primary_score":	999798,
			"second_score":	3608
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	601,
			"primary_score":	999798,
			"second_score":	3924
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	603,
			"primary_score":	999798,
			"second_score":	3607
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	605,
			"primary_score":	999798,
			"second_score":	3606
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	606,
			"primary_score":	999798,
			"second_score":	3605
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	608,
			"primary_score":	999798,
			"second_score":	3604
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	609,
			"primary_score":	999798,
			"second_score":	53063
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	614,
			"primary_score":	999798,
			"second_score":	3603
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	615,
			"primary_score":	999798,
			"second_score":	53005
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	618,
			"primary_score":	999798,
			"second_score":	3602
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	620,
			"primary_score":	999798,
			"second_score":	3601
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	621,
			"primary_score":	999798,
			"second_score":	3600
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	623,
			"primary_score":	999798,
			"second_score":	50419
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	625,
			"primary_score":	999798,
			"second_score":	3599
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	626,
			"primary_score":	999798,
			"second_score":	3598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	628,
			"primary_score":	999798,
			"second_score":	3597
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	629,
			"primary_score":	999798,
			"second_score":	3596
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	631,
			"primary_score":	999798,
			"second_score":	3594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	632,
			"primary_score":	999798,
			"second_score":	50412
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	634,
			"primary_score":	999798,
			"second_score":	3593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	635,
			"primary_score":	999798,
			"second_score":	3592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	637,
			"primary_score":	999798,
			"second_score":	3591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	638,
			"primary_score":	999798,
			"second_score":	3590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	640,
			"primary_score":	999798,
			"second_score":	3589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	663,
			"primary_score":	999798,
			"second_score":	103777
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	665,
			"primary_score":	999798,
			"second_score":	103776
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	667,
			"primary_score":	999798,
			"second_score":	103775
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	668,
			"primary_score":	999798,
			"second_score":	103774
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	669,
			"primary_score":	999798,
			"second_score":	50431
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	670,
			"primary_score":	999798,
			"second_score":	47463
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	673,
			"primary_score":	999798,
			"second_score":	47462
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	674,
			"primary_score":	999798,
			"second_score":	47461
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	677,
			"primary_score":	999798,
			"second_score":	47460
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	691,
			"primary_score":	999798,
			"second_score":	119554
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	693,
			"primary_score":	999798,
			"second_score":	119553
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	695,
			"primary_score":	999798,
			"second_score":	119552
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	696,
			"primary_score":	999798,
			"second_score":	119550
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	697,
			"primary_score":	999798,
			"second_score":	119549
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	709,
			"primary_score":	999798,
			"second_score":	119548
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	715,
			"primary_score":	999798,
			"second_score":	6024
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	717,
			"primary_score":	999798,
			"second_score":	6023
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	719,
			"primary_score":	999798,
			"second_score":	6022
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	720,
			"primary_score":	999798,
			"second_score":	6020
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	721,
			"primary_score":	999798,
			"second_score":	6019
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	722,
			"primary_score":	999798,
			"second_score":	3575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	724,
			"primary_score":	999798,
			"second_score":	3572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	725,
			"primary_score":	999798,
			"second_score":	3612
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	727,
			"primary_score":	999798,
			"second_score":	3571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	729,
			"primary_score":	999798,
			"second_score":	3570
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	733,
			"primary_score":	999798,
			"second_score":	3569
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	739,
			"primary_score":	999972,
			"second_score":	122538
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	740,
			"primary_score":	999972,
			"second_score":	122537
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	741,
			"primary_score":	999972,
			"second_score":	122536
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	743,
			"primary_score":	999972,
			"second_score":	122535
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	745,
			"primary_score":	999972,
			"second_score":	122534
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	747,
			"primary_score":	999972,
			"second_score":	122531
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	748,
			"primary_score":	999972,
			"second_score":	122530
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	749,
			"primary_score":	999972,
			"second_score":	121419
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	750,
			"primary_score":	999972,
			"second_score":	121418
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	751,
			"primary_score":	999972,
			"second_score":	121417
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	752,
			"primary_score":	999972,
			"second_score":	121416
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	753,
			"primary_score":	999972,
			"second_score":	121415
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	754,
			"primary_score":	999972,
			"second_score":	121414
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	756,
			"primary_score":	999972,
			"second_score":	120517
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	759,
			"primary_score":	999972,
			"second_score":	120516
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	761,
			"primary_score":	999972,
			"second_score":	120515
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	764,
			"primary_score":	999972,
			"second_score":	120514
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	767,
			"primary_score":	999972,
			"second_score":	120513
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	773,
			"primary_score":	999798,
			"second_score":	114840
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	775,
			"primary_score":	999798,
			"second_score":	114839
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	777,
			"primary_score":	999798,
			"second_score":	119724
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	778,
			"primary_score":	999798,
			"second_score":	114836
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	779,
			"primary_score":	999798,
			"second_score":	114835
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	780,
			"primary_score":	999798,
			"second_score":	114112
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	782,
			"primary_score":	999798,
			"second_score":	114110
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	783,
			"primary_score":	999798,
			"second_score":	114109
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	784,
			"primary_score":	999798,
			"second_score":	114108
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	785,
			"primary_score":	999798,
			"second_score":	114349
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	787,
			"primary_score":	999798,
			"second_score":	114107
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	788,
			"primary_score":	999798,
			"second_score":	114106
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	791,
			"primary_score":	999798,
			"second_score":	119656
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	896,
			"primary_score":	999798,
			"second_score":	97884
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	897,
			"primary_score":	999798,
			"second_score":	97883
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	898,
			"primary_score":	999798,
			"second_score":	97882
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	900,
			"primary_score":	999798,
			"second_score":	97881
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	902,
			"primary_score":	999798,
			"second_score":	97880
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	903,
			"primary_score":	999798,
			"second_score":	97866
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	905,
			"primary_score":	999798,
			"second_score":	97865
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	906,
			"primary_score":	999798,
			"second_score":	97864
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	907,
			"primary_score":	999798,
			"second_score":	97861
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	909,
			"primary_score":	999798,
			"second_score":	97860
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	910,
			"primary_score":	999798,
			"second_score":	97859
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	912,
			"primary_score":	999798,
			"second_score":	97862
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	914,
			"primary_score":	999798,
			"second_score":	138740
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	946,
			"primary_score":	999798,
			"second_score":	64846
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	947,
			"primary_score":	999798,
			"second_score":	64845
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	948,
			"primary_score":	999798,
			"second_score":	64844
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	950,
			"primary_score":	999798,
			"second_score":	64843
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	952,
			"primary_score":	999798,
			"second_score":	64842
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	953,
			"primary_score":	999798,
			"second_score":	64833
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	955,
			"primary_score":	999798,
			"second_score":	64832
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	956,
			"primary_score":	999798,
			"second_score":	64831
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	957,
			"primary_score":	999798,
			"second_score":	64830
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	959,
			"primary_score":	999798,
			"second_score":	64829
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	995,
			"primary_score":	999798,
			"second_score":	114284
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	996,
			"primary_score":	999798,
			"second_score":	114283
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	998,
			"primary_score":	999798,
			"second_score":	114282
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1000,
			"primary_score":	999798,
			"second_score":	114281
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1002,
			"primary_score":	999798,
			"second_score":	114280
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1003,
			"primary_score":	999798,
			"second_score":	114279
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1004,
			"primary_score":	999798,
			"second_score":	114278
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1005,
			"primary_score":	999798,
			"second_score":	114277
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1006,
			"primary_score":	999798,
			"second_score":	114276
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1036,
			"primary_score":	999798,
			"second_score":	119654
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1038,
			"primary_score":	999798,
			"second_score":	119653
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1130,
			"primary_score":	999983,
			"second_score":	124091
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1132,
			"primary_score":	999983,
			"second_score":	124090
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1134,
			"primary_score":	999983,
			"second_score":	124089
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1136,
			"primary_score":	999983,
			"second_score":	124088
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1137,
			"primary_score":	999983,
			"second_score":	124087
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1138,
			"primary_score":	999983,
			"second_score":	124086
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1141,
			"primary_score":	999988,
			"second_score":	124085
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1143,
			"primary_score":	999983,
			"second_score":	124084
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1144,
			"primary_score":	999983,
			"second_score":	124083
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1146,
			"primary_score":	999983,
			"second_score":	124082
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1534,
			"primary_score":	999798,
			"second_score":	153449
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1536,
			"primary_score":	999798,
			"second_score":	153448
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	263,
			"primary_score":	999798,
			"second_score":	47513
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	266,
			"primary_score":	999798,
			"second_score":	47512
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	267,
			"primary_score":	999798,
			"second_score":	47511
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	268,
			"primary_score":	999798,
			"second_score":	47510
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	269,
			"primary_score":	999798,
			"second_score":	47509
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	270,
			"primary_score":	999798,
			"second_score":	47508
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	271,
			"primary_score":	999798,
			"second_score":	47507
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	272,
			"primary_score":	999798,
			"second_score":	47506
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	273,
			"primary_score":	999798,
			"second_score":	47505
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	274,
			"primary_score":	999798,
			"second_score":	47504
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	276,
			"primary_score":	999798,
			"second_score":	47503
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	278,
			"primary_score":	999798,
			"second_score":	48962
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	279,
			"primary_score":	999798,
			"second_score":	47717
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	280,
			"primary_score":	999798,
			"second_score":	47716
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	281,
			"primary_score":	999798,
			"second_score":	47715
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	282,
			"primary_score":	999798,
			"second_score":	47502
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	283,
			"primary_score":	999798,
			"second_score":	47501
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	287,
			"primary_score":	999798,
			"second_score":	47499
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	350,
			"primary_score":	999798,
			"second_score":	152079
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	351,
			"primary_score":	999798,
			"second_score":	152073
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	39,
			"primary_score":	999798,
			"second_score":	3574
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	40,
			"primary_score":	999798,
			"second_score":	3614
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	42,
			"primary_score":	999798,
			"second_score":	3573
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	3243
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	106,
			"primary_score":	999798,
			"second_score":	3216
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	107,
			"primary_score":	999798,
			"second_score":	3215
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	121,
			"primary_score":	999798,
			"second_score":	113724
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	127,
			"primary_score":	999798,
			"second_score":	113723
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	226,
			"primary_score":	999798,
			"second_score":	6025
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	384,
			"primary_score":	999798,
			"second_score":	97887
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	385,
			"primary_score":	999798,
			"second_score":	97886
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	387,
			"primary_score":	999798,
			"second_score":	97885
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	388,
			"primary_score":	999798,
			"second_score":	97858
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	392,
			"primary_score":	999798,
			"second_score":	97857
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	395,
			"primary_score":	999798,
			"second_score":	97856
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3151,
			"primary_score":	999798,
			"second_score":	134170
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3153,
			"primary_score":	999798,
			"second_score":	134169
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3155,
			"primary_score":	999798,
			"second_score":	134168
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3157,
			"primary_score":	999798,
			"second_score":	134167
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3214,
			"primary_score":	999798,
			"second_score":	148242
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3217,
			"primary_score":	999798,
			"second_score":	148241
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3220,
			"primary_score":	999798,
			"second_score":	148240
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3222,
			"primary_score":	999798,
			"second_score":	148239
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3223,
			"primary_score":	999798,
			"second_score":	148238
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3224,
			"primary_score":	999798,
			"second_score":	148237
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3226,
			"primary_score":	999798,
			"second_score":	148236
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3228,
			"primary_score":	999798,
			"second_score":	148235
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3231,
			"primary_score":	999798,
			"second_score":	148234
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3232,
			"primary_score":	999798,
			"second_score":	148233
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3233,
			"primary_score":	999798,
			"second_score":	148232
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3245,
			"primary_score":	999798,
			"second_score":	148231
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3246,
			"primary_score":	999798,
			"second_score":	148230
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3247,
			"primary_score":	999798,
			"second_score":	148229
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3250,
			"primary_score":	999798,
			"second_score":	148228
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3251,
			"primary_score":	999798,
			"second_score":	148227
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3252,
			"primary_score":	999798,
			"second_score":	148226
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3258,
			"primary_score":	999798,
			"second_score":	148225
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3262,
			"primary_score":	999798,
			"second_score":	148224
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3267,
			"primary_score":	999798,
			"second_score":	148223
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3269,
			"primary_score":	999798,
			"second_score":	148222
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3271,
			"primary_score":	999798,
			"second_score":	148221
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3272,
			"primary_score":	999798,
			"second_score":	148220
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3273,
			"primary_score":	999798,
			"second_score":	148219
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3274,
			"primary_score":	999798,
			"second_score":	148218
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3281,
			"primary_score":	999798,
			"second_score":	148217
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3282,
			"primary_score":	999798,
			"second_score":	148216
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3284,
			"primary_score":	999798,
			"second_score":	148215
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3294,
			"primary_score":	999798,
			"second_score":	134190
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3297,
			"primary_score":	999798,
			"second_score":	134189
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3362,
			"primary_score":	999798,
			"second_score":	134188
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3364,
			"primary_score":	999798,
			"second_score":	134187
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3376,
			"primary_score":	999798,
			"second_score":	134186
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3377,
			"primary_score":	999798,
			"second_score":	134279
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3382,
			"primary_score":	999798,
			"second_score":	134185
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3384,
			"primary_score":	999798,
			"second_score":	134254
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3385,
			"primary_score":	999798,
			"second_score":	134253
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3388,
			"primary_score":	999798,
			"second_score":	134184
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3390,
			"primary_score":	999798,
			"second_score":	134183
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3391,
			"primary_score":	999798,
			"second_score":	134182
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3395,
			"primary_score":	999798,
			"second_score":	134367
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3396,
			"primary_score":	999798,
			"second_score":	134366
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3401,
			"primary_score":	999798,
			"second_score":	134181
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3402,
			"primary_score":	999798,
			"second_score":	134180
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3403,
			"primary_score":	999798,
			"second_score":	134395
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3404,
			"primary_score":	999798,
			"second_score":	134179
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3405,
			"primary_score":	999798,
			"second_score":	134178
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3407,
			"primary_score":	999798,
			"second_score":	134213
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3409,
			"primary_score":	999798,
			"second_score":	134212
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3410,
			"primary_score":	999798,
			"second_score":	134211
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3413,
			"primary_score":	999798,
			"second_score":	134177
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3414,
			"primary_score":	999798,
			"second_score":	134176
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3418,
			"primary_score":	999798,
			"second_score":	134360
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3422,
			"primary_score":	999798,
			"second_score":	134359
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3425,
			"primary_score":	999798,
			"second_score":	134358
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3426,
			"primary_score":	999798,
			"second_score":	134357
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3428,
			"primary_score":	999798,
			"second_score":	134356
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3429,
			"primary_score":	999798,
			"second_score":	134355
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3431,
			"primary_score":	999798,
			"second_score":	134354
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3439,
			"primary_score":	999798,
			"second_score":	134278
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3441,
			"primary_score":	999798,
			"second_score":	134277
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3459,
			"primary_score":	999798,
			"second_score":	134210
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3462,
			"primary_score":	999798,
			"second_score":	134209
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3463,
			"primary_score":	999798,
			"second_score":	134208
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3467,
			"primary_score":	999798,
			"second_score":	134207
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3468,
			"primary_score":	999798,
			"second_score":	134201
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3472,
			"primary_score":	999798,
			"second_score":	134389
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3473,
			"primary_score":	999798,
			"second_score":	134385
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3477,
			"primary_score":	999798,
			"second_score":	134273
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3478,
			"primary_score":	999798,
			"second_score":	134271
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3482,
			"primary_score":	999798,
			"second_score":	136176
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3483,
			"primary_score":	999798,
			"second_score":	136175
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3492,
			"primary_score":	999798,
			"second_score":	134297
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3493,
			"primary_score":	999798,
			"second_score":	134295
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3592,
			"primary_score":	999798,
			"second_score":	134321
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3593,
			"primary_score":	999798,
			"second_score":	134319
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3602,
			"primary_score":	999873,
			"second_score":	122033
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3603,
			"primary_score":	999873,
			"second_score":	122011
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3607,
			"primary_score":	999873,
			"second_score":	121368
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3608,
			"primary_score":	999873,
			"second_score":	121281
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3612,
			"primary_score":	999873,
			"second_score":	121128
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3613,
			"primary_score":	999873,
			"second_score":	121067
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3732,
			"primary_score":	999805,
			"second_score":	132854
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3733,
			"primary_score":	999805,
			"second_score":	132846
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4142,
			"primary_score":	999798,
			"second_score":	135033
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4143,
			"primary_score":	999798,
			"second_score":	135032
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4147,
			"primary_score":	999798,
			"second_score":	135672
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4148,
			"primary_score":	999798,
			"second_score":	135671
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4152,
			"primary_score":	999798,
			"second_score":	136814
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4153,
			"primary_score":	999798,
			"second_score":	136588
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4157,
			"primary_score":	999798,
			"second_score":	137786
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4158,
			"primary_score":	999798,
			"second_score":	137704
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4167,
			"primary_score":	999798,
			"second_score":	133980
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4168,
			"primary_score":	999798,
			"second_score":	133940
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4172,
			"primary_score":	999798,
			"second_score":	135143
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4173,
			"primary_score":	999798,
			"second_score":	135061
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4412,
			"primary_score":	999798,
			"second_score":	126742
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4413,
			"primary_score":	999798,
			"second_score":	126725
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4417,
			"primary_score":	999798,
			"second_score":	142921
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4418,
			"primary_score":	999798,
			"second_score":	142709
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4457,
			"primary_score":	999867,
			"second_score":	146025
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4458,
			"primary_score":	999867,
			"second_score":	145948
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4677,
			"primary_score":	999876,
			"second_score":	122209
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4678,
			"primary_score":	999876,
			"second_score":	122184
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4732,
			"primary_score":	999798,
			"second_score":	126827
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4733,
			"primary_score":	999798,
			"second_score":	126826
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4737,
			"primary_score":	999798,
			"second_score":	130274
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4738,
			"primary_score":	999798,
			"second_score":	130246
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4742,
			"primary_score":	999798,
			"second_score":	127447
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4743,
			"primary_score":	999798,
			"second_score":	127405
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4747,
			"primary_score":	999798,
			"second_score":	127017
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4748,
			"primary_score":	999798,
			"second_score":	126893
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4812,
			"primary_score":	999915,
			"second_score":	121621
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4813,
			"primary_score":	999915,
			"second_score":	121520
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4827,
			"primary_score":	999798,
			"second_score":	136878
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4828,
			"primary_score":	999798,
			"second_score":	136877
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4832,
			"primary_score":	999916,
			"second_score":	134044
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4833,
			"primary_score":	999916,
			"second_score":	134043
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4892,
			"primary_score":	999798,
			"second_score":	138448
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4893,
			"primary_score":	999798,
			"second_score":	138209
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4897,
			"primary_score":	999798,
			"second_score":	134989
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4898,
			"primary_score":	999798,
			"second_score":	134874
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5052,
			"primary_score":	999915,
			"second_score":	121644
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5053,
			"primary_score":	999915,
			"second_score":	121643
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5082,
			"primary_score":	999900,
			"second_score":	146574
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5083,
			"primary_score":	999900,
			"second_score":	146573
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5092,
			"primary_score":	999798,
			"second_score":	136924
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5093,
			"primary_score":	999798,
			"second_score":	136923
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5197,
			"primary_score":	999798,
			"second_score":	137702
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5198,
			"primary_score":	999798,
			"second_score":	137583
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5212,
			"primary_score":	999798,
			"second_score":	136901
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5213,
			"primary_score":	999798,
			"second_score":	136900
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5257,
			"primary_score":	999798,
			"second_score":	134658
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5258,
			"primary_score":	999798,
			"second_score":	134657
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5262,
			"primary_score":	999798,
			"second_score":	134290
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5263,
			"primary_score":	999798,
			"second_score":	134289
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5267,
			"primary_score":	999798,
			"second_score":	134719
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5268,
			"primary_score":	999798,
			"second_score":	134680
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5299,
			"primary_score":	999798,
			"second_score":	134748
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5300,
			"primary_score":	999798,
			"second_score":	134747
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5399,
			"primary_score":	999858,
			"second_score":	137846
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5400,
			"primary_score":	999858,
			"second_score":	137845
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5409,
			"primary_score":	999798,
			"second_score":	134813
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5410,
			"primary_score":	999798,
			"second_score":	134776
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5414,
			"primary_score":	999858,
			"second_score":	137870
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5415,
			"primary_score":	999858,
			"second_score":	137868
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5439,
			"primary_score":	999858,
			"second_score":	138035
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5440,
			"primary_score":	999858,
			"second_score":	137931
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5444,
			"primary_score":	999858,
			"second_score":	138058
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5445,
			"primary_score":	999858,
			"second_score":	138057
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5539,
			"primary_score":	999923,
			"second_score":	134088
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5540,
			"primary_score":	999923,
			"second_score":	134087
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5544,
			"primary_score":	999948,
			"second_score":	134228
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5545,
			"primary_score":	999948,
			"second_score":	134137
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5554,
			"primary_score":	999936,
			"second_score":	134517
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5555,
			"primary_score":	999936,
			"second_score":	134406
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5717,
			"primary_score":	999798,
			"second_score":	134200
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5719,
			"primary_score":	999798,
			"second_score":	134199
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5720,
			"primary_score":	999798,
			"second_score":	134198
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5721,
			"primary_score":	999798,
			"second_score":	134197
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5723,
			"primary_score":	999798,
			"second_score":	134196
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5730,
			"primary_score":	999798,
			"second_score":	134195
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5732,
			"primary_score":	999798,
			"second_score":	134194
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5733,
			"primary_score":	999798,
			"second_score":	134193
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5734,
			"primary_score":	999798,
			"second_score":	134310
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5736,
			"primary_score":	999798,
			"second_score":	134192
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5738,
			"primary_score":	999798,
			"second_score":	134191
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5882,
			"primary_score":	999798,
			"second_score":	134175
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5907,
			"primary_score":	999798,
			"second_score":	134174
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5908,
			"primary_score":	999798,
			"second_score":	134173
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5909,
			"primary_score":	999798,
			"second_score":	134172
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5911,
			"primary_score":	999798,
			"second_score":	134171
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5913,
			"primary_score":	999798,
			"second_score":	134166
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5916,
			"primary_score":	999798,
			"second_score":	134165
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5920,
			"primary_score":	999798,
			"second_score":	134164
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5923,
			"primary_score":	999798,
			"second_score":	134163
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	170,
			"primary_score":	999798,
			"second_score":	149113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	171,
			"primary_score":	999798,
			"second_score":	149112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	172,
			"primary_score":	999798,
			"second_score":	149111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	173,
			"primary_score":	999798,
			"second_score":	121810
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	188,
			"primary_score":	999798,
			"second_score":	118806
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	192,
			"primary_score":	999798,
			"second_score":	118805
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	193,
			"primary_score":	999798,
			"second_score":	118801
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	198,
			"primary_score":	999798,
			"second_score":	149313
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	199,
			"primary_score":	999798,
			"second_score":	149312
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	200,
			"primary_score":	999798,
			"second_score":	149311
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	149310
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	202,
			"primary_score":	999798,
			"second_score":	149309
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	149308
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	205,
			"primary_score":	999798,
			"second_score":	149307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	206,
			"primary_score":	999798,
			"second_score":	149306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	208,
			"primary_score":	999798,
			"second_score":	149301
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	209,
			"primary_score":	999798,
			"second_score":	149300
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	210,
			"primary_score":	999798,
			"second_score":	149299
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	211,
			"primary_score":	999798,
			"second_score":	149297
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	213,
			"primary_score":	999798,
			"second_score":	149296
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	214,
			"primary_score":	999798,
			"second_score":	149295
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	215,
			"primary_score":	999798,
			"second_score":	149294
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	216,
			"primary_score":	999798,
			"second_score":	149293
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	217,
			"primary_score":	999798,
			"second_score":	149292
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	218,
			"primary_score":	999798,
			"second_score":	149291
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	219,
			"primary_score":	999798,
			"second_score":	149290
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	224,
			"primary_score":	999798,
			"second_score":	133918
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	225,
			"primary_score":	999798,
			"second_score":	133917
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	226,
			"primary_score":	999798,
			"second_score":	133916
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	227,
			"primary_score":	999798,
			"second_score":	133915
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	228,
			"primary_score":	999798,
			"second_score":	133914
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	229,
			"primary_score":	999798,
			"second_score":	133913
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	231,
			"primary_score":	999798,
			"second_score":	133912
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	232,
			"primary_score":	999798,
			"second_score":	133908
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	234,
			"primary_score":	999798,
			"second_score":	133907
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	235,
			"primary_score":	999798,
			"second_score":	133906
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	236,
			"primary_score":	999798,
			"second_score":	133905
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	237,
			"primary_score":	999798,
			"second_score":	133904
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	239,
			"primary_score":	999798,
			"second_score":	133902
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	243,
			"primary_score":	999798,
			"second_score":	133901
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	244,
			"primary_score":	999798,
			"second_score":	133900
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	245,
			"primary_score":	999798,
			"second_score":	133899
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	246,
			"primary_score":	999798,
			"second_score":	133898
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	247,
			"primary_score":	999798,
			"second_score":	133897
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	248,
			"primary_score":	999798,
			"second_score":	133896
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	249,
			"primary_score":	999798,
			"second_score":	133895
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	133894
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	260,
			"primary_score":	999798,
			"second_score":	133763
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	262,
			"primary_score":	999798,
			"second_score":	133687
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	263,
			"primary_score":	999798,
			"second_score":	133686
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	472,
			"primary_score":	999798,
			"second_score":	149287
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	473,
			"primary_score":	999798,
			"second_score":	149286
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	476,
			"primary_score":	999798,
			"second_score":	149285
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	482,
			"primary_score":	999798,
			"second_score":	149284
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	486,
			"primary_score":	999798,
			"second_score":	149240
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	487,
			"primary_score":	999798,
			"second_score":	149128
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	488,
			"primary_score":	999798,
			"second_score":	149127
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	489,
			"primary_score":	999798,
			"second_score":	149122
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	490,
			"primary_score":	999798,
			"second_score":	149121
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	491,
			"primary_score":	999798,
			"second_score":	149120
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	495,
			"primary_score":	999798,
			"second_score":	149119
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	496,
			"primary_score":	999798,
			"second_score":	149118
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	498,
			"primary_score":	999798,
			"second_score":	149117
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	499,
			"primary_score":	999798,
			"second_score":	149116
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	515,
			"primary_score":	999798,
			"second_score":	149115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	516,
			"primary_score":	999798,
			"second_score":	149114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	521,
			"primary_score":	999798,
			"second_score":	149110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	523,
			"primary_score":	999798,
			"second_score":	149109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	524,
			"primary_score":	999798,
			"second_score":	149108
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	529,
			"primary_score":	999798,
			"second_score":	149107
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	531,
			"primary_score":	999798,
			"second_score":	148501
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	532,
			"primary_score":	999798,
			"second_score":	148500
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	533,
			"primary_score":	999798,
			"second_score":	148499
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	538,
			"primary_score":	999798,
			"second_score":	148498
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	539,
			"primary_score":	999798,
			"second_score":	148497
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	546,
			"primary_score":	999798,
			"second_score":	149432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	547,
			"primary_score":	999798,
			"second_score":	149431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	548,
			"primary_score":	999798,
			"second_score":	149327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	549,
			"primary_score":	999798,
			"second_score":	149326
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	550,
			"primary_score":	999798,
			"second_score":	149325
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	551,
			"primary_score":	999798,
			"second_score":	149324
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	552,
			"primary_score":	999798,
			"second_score":	149323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	553,
			"primary_score":	999798,
			"second_score":	149322
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	555,
			"primary_score":	999798,
			"second_score":	149321
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	556,
			"primary_score":	999798,
			"second_score":	149320
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	557,
			"primary_score":	999798,
			"second_score":	149319
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	558,
			"primary_score":	999798,
			"second_score":	149318
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	559,
			"primary_score":	999798,
			"second_score":	149316
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	561,
			"primary_score":	999798,
			"second_score":	149314
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	563,
			"primary_score":	999798,
			"second_score":	149289
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	565,
			"primary_score":	999798,
			"second_score":	149288
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	574,
			"primary_score":	999798,
			"second_score":	148496
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	575,
			"primary_score":	999798,
			"second_score":	148252
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	576,
			"primary_score":	999798,
			"second_score":	148251
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	577,
			"primary_score":	999798,
			"second_score":	148250
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	578,
			"primary_score":	999798,
			"second_score":	148243
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	579,
			"primary_score":	999798,
			"second_score":	134162
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	580,
			"primary_score":	999798,
			"second_score":	134115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	581,
			"primary_score":	999798,
			"second_score":	134114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	584,
			"primary_score":	999798,
			"second_score":	134113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	587,
			"primary_score":	999798,
			"second_score":	134112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	588,
			"primary_score":	999798,
			"second_score":	134111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	589,
			"primary_score":	999798,
			"second_score":	134110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	590,
			"primary_score":	999798,
			"second_score":	134109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	591,
			"primary_score":	999798,
			"second_score":	133924
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	597,
			"primary_score":	999798,
			"second_score":	133919
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	598,
			"primary_score":	999798,
			"second_score":	133893
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	645,
			"primary_score":	999798,
			"second_score":	121918
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	646,
			"primary_score":	999798,
			"second_score":	121917
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	649,
			"primary_score":	999798,
			"second_score":	121916
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	654,
			"primary_score":	999798,
			"second_score":	121915
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	657,
			"primary_score":	999798,
			"second_score":	121820
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	659,
			"primary_score":	999798,
			"second_score":	121819
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	660,
			"primary_score":	999798,
			"second_score":	121818
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	662,
			"primary_score":	999798,
			"second_score":	121817
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	663,
			"primary_score":	999798,
			"second_score":	121816
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	665,
			"primary_score":	999798,
			"second_score":	121815
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	682,
			"primary_score":	999798,
			"second_score":	121814
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	684,
			"primary_score":	999798,
			"second_score":	121809
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	685,
			"primary_score":	999798,
			"second_score":	121373
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	686,
			"primary_score":	999798,
			"second_score":	121372
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	687,
			"primary_score":	999798,
			"second_score":	121371
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	715,
			"primary_score":	999798,
			"second_score":	122176
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	716,
			"primary_score":	999798,
			"second_score":	122175
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	717,
			"primary_score":	999798,
			"second_score":	122071
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	718,
			"primary_score":	999798,
			"second_score":	122070
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	719,
			"primary_score":	999798,
			"second_score":	122069
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	720,
			"primary_score":	999798,
			"second_score":	122068
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	721,
			"primary_score":	999798,
			"second_score":	122067
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	723,
			"primary_score":	999798,
			"second_score":	122066
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	728,
			"primary_score":	999798,
			"second_score":	122065
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	730,
			"primary_score":	999798,
			"second_score":	122064
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	731,
			"primary_score":	999798,
			"second_score":	122063
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	732,
			"primary_score":	999798,
			"second_score":	121947
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	733,
			"primary_score":	999798,
			"second_score":	121945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	735,
			"primary_score":	999798,
			"second_score":	121944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	736,
			"primary_score":	999798,
			"second_score":	121919
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	740,
			"primary_score":	999798,
			"second_score":	121370
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	742,
			"primary_score":	999798,
			"second_score":	121369
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	743,
			"primary_score":	999798,
			"second_score":	121368
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	744,
			"primary_score":	999798,
			"second_score":	121124
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	745,
			"primary_score":	999798,
			"second_score":	121123
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	746,
			"primary_score":	999798,
			"second_score":	121122
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	747,
			"primary_score":	999798,
			"second_score":	121115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	748,
			"primary_score":	999798,
			"second_score":	121114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	750,
			"primary_score":	999798,
			"second_score":	119972
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	755,
			"primary_score":	999798,
			"second_score":	119971
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	760,
			"primary_score":	999798,
			"second_score":	119970
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	761,
			"primary_score":	999798,
			"second_score":	119922
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	762,
			"primary_score":	999798,
			"second_score":	119921
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	763,
			"primary_score":	999798,
			"second_score":	119750
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	764,
			"primary_score":	999798,
			"second_score":	119745
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	767,
			"primary_score":	999798,
			"second_score":	119744
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	768,
			"primary_score":	999798,
			"second_score":	119718
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	769,
			"primary_score":	999798,
			"second_score":	119692
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	770,
			"primary_score":	999798,
			"second_score":	119691
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	867,
			"primary_score":	999798,
			"second_score":	137084
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	868,
			"primary_score":	999798,
			"second_score":	137083
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	870,
			"primary_score":	999798,
			"second_score":	137082
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	873,
			"primary_score":	999798,
			"second_score":	136966
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	874,
			"primary_score":	999798,
			"second_score":	136965
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	875,
			"primary_score":	999798,
			"second_score":	136964
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	876,
			"primary_score":	999798,
			"second_score":	136963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	877,
			"primary_score":	999798,
			"second_score":	129828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	878,
			"primary_score":	999798,
			"second_score":	129827
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	883,
			"primary_score":	999798,
			"second_score":	129826
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	886,
			"primary_score":	999798,
			"second_score":	129825
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	887,
			"primary_score":	999798,
			"second_score":	129824
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	958,
			"primary_score":	999798,
			"second_score":	136962
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	961,
			"primary_score":	999798,
			"second_score":	136961
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	962,
			"primary_score":	999798,
			"second_score":	132699
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	964,
			"primary_score":	999798,
			"second_score":	136960
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	966,
			"primary_score":	999798,
			"second_score":	136959
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	967,
			"primary_score":	999798,
			"second_score":	136958
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	979,
			"primary_score":	999798,
			"second_score":	134248
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	982,
			"primary_score":	999798,
			"second_score":	134247
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	987,
			"primary_score":	999798,
			"second_score":	134246
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	988,
			"primary_score":	999798,
			"second_score":	134245
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	989,
			"primary_score":	999798,
			"second_score":	134244
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	990,
			"primary_score":	999798,
			"second_score":	134434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	991,
			"primary_score":	999798,
			"second_score":	134433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	992,
			"primary_score":	999798,
			"second_score":	134432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1008,
			"primary_score":	999798,
			"second_score":	134243
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1015,
			"primary_score":	999798,
			"second_score":	134242
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1016,
			"primary_score":	999798,
			"second_score":	134241
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1029,
			"primary_score":	999798,
			"second_score":	134240
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1064,
			"primary_score":	999798,
			"second_score":	134239
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1065,
			"primary_score":	999798,
			"second_score":	134238
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1066,
			"primary_score":	999798,
			"second_score":	134235
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1067,
			"primary_score":	999798,
			"second_score":	134234
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1068,
			"primary_score":	999798,
			"second_score":	148167
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1069,
			"primary_score":	999798,
			"second_score":	148166
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1070,
			"primary_score":	999798,
			"second_score":	148165
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1071,
			"primary_score":	999798,
			"second_score":	148164
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1072,
			"primary_score":	999798,
			"second_score":	148163
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1073,
			"primary_score":	999798,
			"second_score":	148162
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1083,
			"primary_score":	999798,
			"second_score":	134230
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1085,
			"primary_score":	999798,
			"second_score":	134229
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1086,
			"primary_score":	999798,
			"second_score":	134228
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1087,
			"primary_score":	999798,
			"second_score":	134227
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1147,
			"primary_score":	999798,
			"second_score":	134232
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1148,
			"primary_score":	999798,
			"second_score":	134231
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1151,
			"primary_score":	999798,
			"second_score":	148160
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1152,
			"primary_score":	999798,
			"second_score":	148159
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1153,
			"primary_score":	999798,
			"second_score":	148158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1156,
			"primary_score":	999798,
			"second_score":	148157
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1157,
			"primary_score":	999798,
			"second_score":	148156
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1456,
			"primary_score":	999798,
			"second_score":	148154
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1457,
			"primary_score":	999798,
			"second_score":	148153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1458,
			"primary_score":	999798,
			"second_score":	148152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1459,
			"primary_score":	999798,
			"second_score":	148151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1461,
			"primary_score":	999798,
			"second_score":	148150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1462,
			"primary_score":	999798,
			"second_score":	148149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1463,
			"primary_score":	999798,
			"second_score":	148148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1464,
			"primary_score":	999798,
			"second_score":	148147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1466,
			"primary_score":	999798,
			"second_score":	148146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1467,
			"primary_score":	999798,
			"second_score":	148145
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1468,
			"primary_score":	999830,
			"second_score":	148144
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1469,
			"primary_score":	999830,
			"second_score":	148143
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1471,
			"primary_score":	999798,
			"second_score":	143495
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1472,
			"primary_score":	999798,
			"second_score":	143494
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1474,
			"primary_score":	999798,
			"second_score":	148142
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1476,
			"primary_score":	999798,
			"second_score":	148141
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1477,
			"primary_score":	999798,
			"second_score":	148140
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1479,
			"primary_score":	999798,
			"second_score":	148139
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1481,
			"primary_score":	999798,
			"second_score":	148138
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1482,
			"primary_score":	999798,
			"second_score":	148137
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1483,
			"primary_score":	999798,
			"second_score":	148136
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1484,
			"primary_score":	999798,
			"second_score":	148135
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1485,
			"primary_score":	999828,
			"second_score":	148132
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1486,
			"primary_score":	999798,
			"second_score":	148130
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1487,
			"primary_score":	999798,
			"second_score":	148129
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2210,
			"primary_score":	999798,
			"second_score":	134431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2244,
			"primary_score":	999798,
			"second_score":	134430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2245,
			"primary_score":	999798,
			"second_score":	134429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2246,
			"primary_score":	999798,
			"second_score":	134426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2247,
			"primary_score":	999798,
			"second_score":	134425
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2248,
			"primary_score":	999798,
			"second_score":	134424
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2366,
			"primary_score":	999798,
			"second_score":	143462
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2367,
			"primary_score":	999798,
			"second_score":	143461
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2368,
			"primary_score":	999798,
			"second_score":	143460
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2385,
			"primary_score":	999798,
			"second_score":	136325
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2387,
			"primary_score":	999798,
			"second_score":	136324
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2388,
			"primary_score":	999798,
			"second_score":	136323
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2389,
			"primary_score":	999798,
			"second_score":	136210
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2390,
			"primary_score":	999798,
			"second_score":	136209
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2395,
			"primary_score":	999915,
			"second_score":	122065
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2396,
			"primary_score":	999915,
			"second_score":	122064
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2406,
			"primary_score":	999915,
			"second_score":	122063
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2410,
			"primary_score":	999915,
			"second_score":	122062
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2417,
			"primary_score":	999798,
			"second_score":	134919
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2418,
			"primary_score":	999798,
			"second_score":	134918
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2419,
			"primary_score":	999914,
			"second_score":	134917
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2420,
			"primary_score":	999938,
			"second_score":	134915
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2429,
			"primary_score":	999798,
			"second_score":	138718
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2430,
			"primary_score":	999931,
			"second_score":	138716
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2431,
			"primary_score":	999970,
			"second_score":	139619
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2434,
			"primary_score":	999798,
			"second_score":	132153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2438,
			"primary_score":	999798,
			"second_score":	132152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2467,
			"primary_score":	999798,
			"second_score":	135307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2468,
			"primary_score":	999798,
			"second_score":	135306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2469,
			"primary_score":	999798,
			"second_score":	135305
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2489,
			"primary_score":	999871,
			"second_score":	124497
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2490,
			"primary_score":	999871,
			"second_score":	124496
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2501,
			"primary_score":	999872,
			"second_score":	124495
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2502,
			"primary_score":	999873,
			"second_score":	124494
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2519,
			"primary_score":	999914,
			"second_score":	135414
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2520,
			"primary_score":	999914,
			"second_score":	135413
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2531,
			"primary_score":	999914,
			"second_score":	135412
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2536,
			"primary_score":	999915,
			"second_score":	135411
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2537,
			"primary_score":	999916,
			"second_score":	135409
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2544,
			"primary_score":	999798,
			"second_score":	130406
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2545,
			"primary_score":	999798,
			"second_score":	130405
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2555,
			"primary_score":	999798,
			"second_score":	130404
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2559,
			"primary_score":	999798,
			"second_score":	130403
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2604,
			"primary_score":	999798,
			"second_score":	136492
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2605,
			"primary_score":	999798,
			"second_score":	136491
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2610,
			"primary_score":	999798,
			"second_score":	136490
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2611,
			"primary_score":	999798,
			"second_score":	136489
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2620,
			"primary_score":	999798,
			"second_score":	129096
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2621,
			"primary_score":	999798,
			"second_score":	129095
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2622,
			"primary_score":	999798,
			"second_score":	137912
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2623,
			"primary_score":	999798,
			"second_score":	137911
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2626,
			"primary_score":	999798,
			"second_score":	129094
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2627,
			"primary_score":	999798,
			"second_score":	129093
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2645,
			"primary_score":	999798,
			"second_score":	134833
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2647,
			"primary_score":	999798,
			"second_score":	134832
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2648,
			"primary_score":	999798,
			"second_score":	134831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2653,
			"primary_score":	999798,
			"second_score":	134459
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2654,
			"primary_score":	999798,
			"second_score":	134458
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2655,
			"primary_score":	999798,
			"second_score":	134457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2658,
			"primary_score":	999798,
			"second_score":	134452
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2660,
			"primary_score":	999798,
			"second_score":	134451
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2661,
			"primary_score":	999798,
			"second_score":	134450
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2662,
			"primary_score":	999798,
			"second_score":	134449
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2663,
			"primary_score":	999798,
			"second_score":	134448
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2664,
			"primary_score":	999801,
			"second_score":	132706
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2665,
			"primary_score":	999798,
			"second_score":	134442
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2670,
			"primary_score":	999798,
			"second_score":	127669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2671,
			"primary_score":	999798,
			"second_score":	127668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2672,
			"primary_score":	999798,
			"second_score":	127667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2707,
			"primary_score":	999831,
			"second_score":	145713
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2708,
			"primary_score":	999831,
			"second_score":	145712
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2709,
			"primary_score":	999831,
			"second_score":	145711
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2713,
			"primary_score":	999798,
			"second_score":	136136
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2714,
			"primary_score":	999798,
			"second_score":	136135
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2715,
			"primary_score":	999798,
			"second_score":	136134
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2716,
			"primary_score":	999798,
			"second_score":	136133
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2717,
			"primary_score":	999798,
			"second_score":	136132
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2718,
			"primary_score":	999921,
			"second_score":	145541
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2719,
			"primary_score":	999945,
			"second_score":	145539
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2722,
			"primary_score":	999798,
			"second_score":	136131
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2738,
			"primary_score":	999798,
			"second_score":	132229
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2739,
			"primary_score":	999798,
			"second_score":	132228
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2744,
			"primary_score":	999798,
			"second_score":	132227
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2745,
			"primary_score":	999798,
			"second_score":	132226
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2746,
			"primary_score":	999798,
			"second_score":	132225
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2749,
			"primary_score":	999798,
			"second_score":	135147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2750,
			"primary_score":	999798,
			"second_score":	135146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2751,
			"primary_score":	999798,
			"second_score":	135145
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2787,
			"primary_score":	999863,
			"second_score":	135014
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2788,
			"primary_score":	999867,
			"second_score":	147285
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2789,
			"primary_score":	999930,
			"second_score":	135012
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2790,
			"primary_score":	999934,
			"second_score":	135010
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2832,
			"primary_score":	999873,
			"second_score":	124310
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2833,
			"primary_score":	999873,
			"second_score":	124309
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2834,
			"primary_score":	999876,
			"second_score":	124308
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2910,
			"primary_score":	999857,
			"second_score":	138170
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2911,
			"primary_score":	999857,
			"second_score":	138169
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2917,
			"primary_score":	999864,
			"second_score":	138168
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2918,
			"primary_score":	999864,
			"second_score":	138167
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2924,
			"primary_score":	999798,
			"second_score":	134835
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2925,
			"primary_score":	999798,
			"second_score":	134834
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2928,
			"primary_score":	999798,
			"second_score":	134423
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2929,
			"primary_score":	999798,
			"second_score":	134422
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2930,
			"primary_score":	999798,
			"second_score":	130679
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2977,
			"primary_score":	999900,
			"second_score":	146612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2979,
			"primary_score":	999900,
			"second_score":	146611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2980,
			"primary_score":	999900,
			"second_score":	146610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2981,
			"primary_score":	999900,
			"second_score":	146609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2996,
			"primary_score":	999900,
			"second_score":	146608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2997,
			"primary_score":	999900,
			"second_score":	146607
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3002,
			"primary_score":	999907,
			"second_score":	146640
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3003,
			"primary_score":	999907,
			"second_score":	146639
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3004,
			"primary_score":	999907,
			"second_score":	146638
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3005,
			"primary_score":	999914,
			"second_score":	146637
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3006,
			"primary_score":	999914,
			"second_score":	146636
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3007,
			"primary_score":	999937,
			"second_score":	146635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3019,
			"primary_score":	999798,
			"second_score":	139511
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3020,
			"primary_score":	999798,
			"second_score":	139510
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3064,
			"primary_score":	999798,
			"second_score":	135282
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3065,
			"primary_score":	999798,
			"second_score":	135281
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3067,
			"primary_score":	999798,
			"second_score":	135280
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3069,
			"primary_score":	999798,
			"second_score":	135279
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3070,
			"primary_score":	999798,
			"second_score":	135278
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3071,
			"primary_score":	999798,
			"second_score":	135277
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3072,
			"primary_score":	999798,
			"second_score":	135276
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3074,
			"primary_score":	999798,
			"second_score":	135275
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3075,
			"primary_score":	999798,
			"second_score":	135256
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3076,
			"primary_score":	999798,
			"second_score":	135255
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3077,
			"primary_score":	999798,
			"second_score":	135254
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3078,
			"primary_score":	999798,
			"second_score":	135253
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3080,
			"primary_score":	999798,
			"second_score":	135252
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3081,
			"primary_score":	999798,
			"second_score":	135257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3094,
			"primary_score":	999798,
			"second_score":	135251
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3095,
			"primary_score":	999798,
			"second_score":	135223
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3096,
			"primary_score":	999798,
			"second_score":	135222
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3099,
			"primary_score":	999798,
			"second_score":	135221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3100,
			"primary_score":	999798,
			"second_score":	135220
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3101,
			"primary_score":	999798,
			"second_score":	135219
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3102,
			"primary_score":	999798,
			"second_score":	135198
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3117,
			"primary_score":	999798,
			"second_score":	135197
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3120,
			"primary_score":	999798,
			"second_score":	135196
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3123,
			"primary_score":	999798,
			"second_score":	135195
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3125,
			"primary_score":	999798,
			"second_score":	135194
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3127,
			"primary_score":	999798,
			"second_score":	135193
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3134,
			"primary_score":	999798,
			"second_score":	135192
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3139,
			"primary_score":	999798,
			"second_score":	137093
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3140,
			"primary_score":	999798,
			"second_score":	137092
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3142,
			"primary_score":	999798,
			"second_score":	137091
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3144,
			"primary_score":	999798,
			"second_score":	137090
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3145,
			"primary_score":	999798,
			"second_score":	137089
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3147,
			"primary_score":	999798,
			"second_score":	137088
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3148,
			"primary_score":	999798,
			"second_score":	137086
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3151,
			"primary_score":	999798,
			"second_score":	137085
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3152,
			"primary_score":	999798,
			"second_score":	136957
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3165,
			"primary_score":	999798,
			"second_score":	129872
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3168,
			"primary_score":	999798,
			"second_score":	129871
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3198,
			"primary_score":	999798,
			"second_score":	120042
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3199,
			"primary_score":	999798,
			"second_score":	120041
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3200,
			"primary_score":	999798,
			"second_score":	120040
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3202,
			"primary_score":	999798,
			"second_score":	120039
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3203,
			"primary_score":	999798,
			"second_score":	120038
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3204,
			"primary_score":	999798,
			"second_score":	120037
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3213,
			"primary_score":	999798,
			"second_score":	136333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3214,
			"primary_score":	999798,
			"second_score":	136332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3215,
			"primary_score":	999798,
			"second_score":	136329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3216,
			"primary_score":	999798,
			"second_score":	136328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3218,
			"primary_score":	999798,
			"second_score":	136327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3219,
			"primary_score":	999798,
			"second_score":	136334
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3221,
			"primary_score":	999798,
			"second_score":	136326
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3246,
			"primary_score":	999936,
			"second_score":	146623
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3247,
			"primary_score":	999936,
			"second_score":	146622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3248,
			"primary_score":	999936,
			"second_score":	146621
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3249,
			"primary_score":	999936,
			"second_score":	146618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3250,
			"primary_score":	999936,
			"second_score":	146617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3251,
			"primary_score":	999936,
			"second_score":	146616
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3252,
			"primary_score":	999952,
			"second_score":	146615
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3253,
			"primary_score":	999965,
			"second_score":	146613
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3254,
			"primary_score":	999964,
			"second_score":	146624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3274,
			"primary_score":	999798,
			"second_score":	132213
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3275,
			"primary_score":	999798,
			"second_score":	132212
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3276,
			"primary_score":	999798,
			"second_score":	132211
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3277,
			"primary_score":	999798,
			"second_score":	132210
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3280,
			"primary_score":	999798,
			"second_score":	132209
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3352,
			"primary_score":	999798,
			"second_score":	134420
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3353,
			"primary_score":	999800,
			"second_score":	132680
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3354,
			"primary_score":	999798,
			"second_score":	134418
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3355,
			"primary_score":	999798,
			"second_score":	134417
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3357,
			"primary_score":	999798,
			"second_score":	134416
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3359,
			"primary_score":	999798,
			"second_score":	134415
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3360,
			"primary_score":	999798,
			"second_score":	134414
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3361,
			"primary_score":	999798,
			"second_score":	134413
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3362,
			"primary_score":	999798,
			"second_score":	134412
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3363,
			"primary_score":	999798,
			"second_score":	134411
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3364,
			"primary_score":	999798,
			"second_score":	134410
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3369,
			"primary_score":	999798,
			"second_score":	132679
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3370,
			"primary_score":	999798,
			"second_score":	132678
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3378,
			"primary_score":	999857,
			"second_score":	138135
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3379,
			"primary_score":	999857,
			"second_score":	138134
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3380,
			"primary_score":	999857,
			"second_score":	138131
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3381,
			"primary_score":	999857,
			"second_score":	138130
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3382,
			"primary_score":	999857,
			"second_score":	138129
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3383,
			"primary_score":	999857,
			"second_score":	138128
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3384,
			"primary_score":	999863,
			"second_score":	138127
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3390,
			"primary_score":	999879,
			"second_score":	138138
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3393,
			"primary_score":	999879,
			"second_score":	138137
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3397,
			"primary_score":	999857,
			"second_score":	138126
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3399,
			"primary_score":	999857,
			"second_score":	138125
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3401,
			"primary_score":	999857,
			"second_score":	138124
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3402,
			"primary_score":	999857,
			"second_score":	138123
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3403,
			"primary_score":	999857,
			"second_score":	138092
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3404,
			"primary_score":	999857,
			"second_score":	138091
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4209,
			"primary_score":	999934,
			"second_score":	135009
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4210,
			"primary_score":	999934,
			"second_score":	135008
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4211,
			"primary_score":	999934,
			"second_score":	135007
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4213,
			"primary_score":	999934,
			"second_score":	135006
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4214,
			"primary_score":	999934,
			"second_score":	135005
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4758,
			"primary_score":	999798,
			"second_score":	132224
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4791,
			"primary_score":	999798,
			"second_score":	132223
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4792,
			"primary_score":	999798,
			"second_score":	132222
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4797,
			"primary_score":	999798,
			"second_score":	132221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4801,
			"primary_score":	999798,
			"second_score":	132220
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4802,
			"primary_score":	999798,
			"second_score":	132219
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4803,
			"primary_score":	999798,
			"second_score":	132218
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4889,
			"primary_score":	999798,
			"second_score":	132217
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4890,
			"primary_score":	999798,
			"second_score":	132216
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4891,
			"primary_score":	999798,
			"second_score":	132215
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4892,
			"primary_score":	999798,
			"second_score":	132214
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5292,
			"primary_score":	999831,
			"second_score":	145709
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5293,
			"primary_score":	999831,
			"second_score":	145708
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5294,
			"primary_score":	999831,
			"second_score":	145707
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5295,
			"primary_score":	999831,
			"second_score":	145706
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5297,
			"primary_score":	999831,
			"second_score":	145705
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5298,
			"primary_score":	999831,
			"second_score":	145704
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5299,
			"primary_score":	999831,
			"second_score":	145703
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5495,
			"primary_score":	999815,
			"second_score":	132728
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5496,
			"primary_score":	999815,
			"second_score":	132727
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5497,
			"primary_score":	999815,
			"second_score":	132724
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5498,
			"primary_score":	999815,
			"second_score":	132723
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5500,
			"primary_score":	999798,
			"second_score":	134456
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5501,
			"primary_score":	999827,
			"second_score":	132731
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5502,
			"primary_score":	999829,
			"second_score":	132730
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5505,
			"primary_score":	999798,
			"second_score":	134455
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5506,
			"primary_score":	999798,
			"second_score":	134454
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5507,
			"primary_score":	999798,
			"second_score":	134453
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6064,
			"primary_score":	999798,
			"second_score":	130401
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6065,
			"primary_score":	999798,
			"second_score":	130400
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6070,
			"primary_score":	999798,
			"second_score":	130399
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6074,
			"primary_score":	999798,
			"second_score":	130398
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6119,
			"primary_score":	999798,
			"second_score":	130396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6120,
			"primary_score":	999798,
			"second_score":	130395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6121,
			"primary_score":	999798,
			"second_score":	130394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6267,
			"primary_score":	999916,
			"second_score":	135408
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6268,
			"primary_score":	999916,
			"second_score":	135407
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6269,
			"primary_score":	999916,
			"second_score":	135406
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6286,
			"primary_score":	999916,
			"second_score":	135404
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6287,
			"primary_score":	999916,
			"second_score":	135403
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6288,
			"primary_score":	999916,
			"second_score":	135402
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6289,
			"primary_score":	999916,
			"second_score":	135401
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6291,
			"primary_score":	999916,
			"second_score":	135400
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6292,
			"primary_score":	999916,
			"second_score":	135399
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6293,
			"primary_score":	999916,
			"second_score":	135398
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6294,
			"primary_score":	999916,
			"second_score":	135397
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6296,
			"primary_score":	999916,
			"second_score":	135396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6297,
			"primary_score":	999916,
			"second_score":	135395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6300,
			"primary_score":	999916,
			"second_score":	135394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6301,
			"primary_score":	999916,
			"second_score":	135393
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6303,
			"primary_score":	999916,
			"second_score":	135392
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6304,
			"primary_score":	999916,
			"second_score":	135391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6388,
			"primary_score":	999873,
			"second_score":	124492
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6389,
			"primary_score":	999873,
			"second_score":	124491
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6392,
			"primary_score":	999873,
			"second_score":	124490
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6393,
			"primary_score":	999873,
			"second_score":	124489
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6395,
			"primary_score":	999873,
			"second_score":	124488
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6396,
			"primary_score":	999873,
			"second_score":	124487
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6861,
			"primary_score":	999798,
			"second_score":	135303
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6862,
			"primary_score":	999798,
			"second_score":	135302
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6872,
			"primary_score":	999798,
			"second_score":	135301
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6873,
			"primary_score":	999798,
			"second_score":	135300
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6895,
			"primary_score":	999798,
			"second_score":	135298
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6896,
			"primary_score":	999798,
			"second_score":	135297
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6897,
			"primary_score":	999798,
			"second_score":	135296
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7008,
			"primary_score":	999798,
			"second_score":	135294
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7009,
			"primary_score":	999798,
			"second_score":	135293
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7010,
			"primary_score":	999798,
			"second_score":	135292
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7011,
			"primary_score":	999798,
			"second_score":	135291
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7380,
			"primary_score":	999931,
			"second_score":	134914
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7381,
			"primary_score":	999931,
			"second_score":	134913
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7382,
			"primary_score":	999931,
			"second_score":	134912
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7383,
			"primary_score":	999931,
			"second_score":	134911
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7398,
			"primary_score":	999798,
			"second_score":	132150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7399,
			"primary_score":	999798,
			"second_score":	132149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7400,
			"primary_score":	999798,
			"second_score":	132148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7401,
			"primary_score":	999798,
			"second_score":	132147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7403,
			"primary_score":	999798,
			"second_score":	132146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7404,
			"primary_score":	999798,
			"second_score":	132145
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7405,
			"primary_score":	999798,
			"second_score":	132144
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7406,
			"primary_score":	999798,
			"second_score":	132143
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7408,
			"primary_score":	999798,
			"second_score":	132142
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7409,
			"primary_score":	999798,
			"second_score":	132141
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7410,
			"primary_score":	999798,
			"second_score":	132140
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7411,
			"primary_score":	999798,
			"second_score":	132139
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7413,
			"primary_score":	999798,
			"second_score":	132138
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7414,
			"primary_score":	999798,
			"second_score":	132137
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7415,
			"primary_score":	999798,
			"second_score":	132136
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7416,
			"primary_score":	999798,
			"second_score":	132135
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7418,
			"primary_score":	999798,
			"second_score":	132134
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7419,
			"primary_score":	999798,
			"second_score":	132133
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7420,
			"primary_score":	999798,
			"second_score":	132132
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7421,
			"primary_score":	999798,
			"second_score":	132131
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7423,
			"primary_score":	999798,
			"second_score":	132130
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7424,
			"primary_score":	999798,
			"second_score":	132129
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7425,
			"primary_score":	999798,
			"second_score":	132128
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7426,
			"primary_score":	999798,
			"second_score":	132127
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7428,
			"primary_score":	999798,
			"second_score":	132126
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7429,
			"primary_score":	999798,
			"second_score":	132125
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7430,
			"primary_score":	999798,
			"second_score":	132124
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7547,
			"primary_score":	999915,
			"second_score":	122060
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7548,
			"primary_score":	999915,
			"second_score":	122059
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7549,
			"primary_score":	999915,
			"second_score":	122058
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7597,
			"primary_score":	999915,
			"second_score":	122056
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7598,
			"primary_score":	999915,
			"second_score":	122055
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7601,
			"primary_score":	999915,
			"second_score":	122054
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7602,
			"primary_score":	999915,
			"second_score":	122053
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7604,
			"primary_score":	999915,
			"second_score":	122052
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7605,
			"primary_score":	999915,
			"second_score":	122051
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7677,
			"primary_score":	999798,
			"second_score":	143459
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7678,
			"primary_score":	999798,
			"second_score":	143458
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7679,
			"primary_score":	999798,
			"second_score":	143457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7707,
			"primary_score":	999877,
			"second_score":	124252
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7708,
			"primary_score":	999877,
			"second_score":	124251
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7713,
			"primary_score":	999877,
			"second_score":	124250
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7716,
			"primary_score":	999877,
			"second_score":	124249
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7728,
			"primary_score":	999877,
			"second_score":	124247
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7729,
			"primary_score":	999877,
			"second_score":	124246
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7730,
			"primary_score":	999877,
			"second_score":	124245
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7731,
			"primary_score":	999877,
			"second_score":	124244
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7733,
			"primary_score":	999877,
			"second_score":	124243
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7734,
			"primary_score":	999877,
			"second_score":	124242
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7735,
			"primary_score":	999877,
			"second_score":	124241
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7736,
			"primary_score":	999877,
			"second_score":	124240
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7738,
			"primary_score":	999877,
			"second_score":	124239
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7739,
			"primary_score":	999877,
			"second_score":	124238
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7740,
			"primary_score":	999877,
			"second_score":	124237
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8085,
			"primary_score":	999798,
			"second_score":	143455
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8086,
			"primary_score":	999798,
			"second_score":	143454
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8087,
			"primary_score":	999798,
			"second_score":	143453
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8088,
			"primary_score":	999798,
			"second_score":	143452
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8090,
			"primary_score":	999798,
			"second_score":	143451
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8091,
			"primary_score":	999798,
			"second_score":	143450
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8094,
			"primary_score":	999798,
			"second_score":	143449
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8095,
			"primary_score":	999798,
			"second_score":	143448
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8097,
			"primary_score":	999798,
			"second_score":	143447
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8098,
			"primary_score":	999798,
			"second_score":	143446
		}, {
			"file":	"Zend/zend_list.c",
			"line":	37,
			"primary_score":	999798,
			"second_score":	153455
		}, {
			"file":	"Zend/zend_list.c",
			"line":	38,
			"primary_score":	999798,
			"second_score":	153454
		}, {
			"file":	"Zend/zend_list.c",
			"line":	40,
			"primary_score":	999798,
			"second_score":	153453
		}, {
			"file":	"Zend/zend_list.c",
			"line":	41,
			"primary_score":	999798,
			"second_score":	153452
		}, {
			"file":	"Zend/zend_list.c",
			"line":	42,
			"primary_score":	999798,
			"second_score":	153451
		}, {
			"file":	"Zend/zend_list.c",
			"line":	44,
			"primary_score":	999798,
			"second_score":	153450
		}, {
			"file":	"Zend/zend_list.c",
			"line":	46,
			"primary_score":	999798,
			"second_score":	153447
		}, {
			"file":	"Zend/zend_list.c",
			"line":	47,
			"primary_score":	999798,
			"second_score":	153277
		}, {
			"file":	"Zend/zend_list.c",
			"line":	52,
			"primary_score":	999798,
			"second_score":	114322
		}, {
			"file":	"Zend/zend_list.c",
			"line":	54,
			"primary_score":	999798,
			"second_score":	114321
		}, {
			"file":	"Zend/zend_list.c",
			"line":	56,
			"primary_score":	999798,
			"second_score":	114311
		}, {
			"file":	"Zend/zend_list.c",
			"line":	57,
			"primary_score":	999798,
			"second_score":	114310
		}, {
			"file":	"Zend/zend_list.c",
			"line":	96,
			"primary_score":	999798,
			"second_score":	153457
		}, {
			"file":	"Zend/zend_list.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	153456
		}, {
			"file":	"Zend/zend_list.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	153276
		}, {
			"file":	"Zend/zend_list.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	153275
		}, {
			"file":	"Zend/zend_list.c",
			"line":	170,
			"primary_score":	999798,
			"second_score":	114288
		}, {
			"file":	"Zend/zend_list.c",
			"line":	171,
			"primary_score":	999798,
			"second_score":	114287
		}, {
			"file":	"Zend/zend_list.c",
			"line":	172,
			"primary_score":	999798,
			"second_score":	114286
		}, {
			"file":	"Zend/zend_list.c",
			"line":	174,
			"primary_score":	999798,
			"second_score":	114285
		}, {
			"file":	"Zend/zend_list.c",
			"line":	175,
			"primary_score":	999798,
			"second_score":	114275
		}, {
			"file":	"Zend/zend_list.c",
			"line":	183,
			"primary_score":	999798,
			"second_score":	114274
		}, {
			"file":	"Zend/zend_list.c",
			"line":	185,
			"primary_score":	999798,
			"second_score":	114166
		}, {
			"file":	"Zend/zend_list.c",
			"line":	239,
			"primary_score":	999798,
			"second_score":	103788
		}, {
			"file":	"Zend/zend_list.c",
			"line":	347,
			"primary_score":	999798,
			"second_score":	6223
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	28,
			"primary_score":	999798,
			"second_score":	148564
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	29,
			"primary_score":	999798,
			"second_score":	148563
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	30,
			"primary_score":	999798,
			"second_score":	148562
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	31,
			"primary_score":	999798,
			"second_score":	148561
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	32,
			"primary_score":	999798,
			"second_score":	148560
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	33,
			"primary_score":	999798,
			"second_score":	148559
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	39,
			"primary_score":	999798,
			"second_score":	149239
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	41,
			"primary_score":	999798,
			"second_score":	149135
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	42,
			"primary_score":	999798,
			"second_score":	149134
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	43,
			"primary_score":	999798,
			"second_score":	149133
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	46,
			"primary_score":	999798,
			"second_score":	149132
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	48,
			"primary_score":	999798,
			"second_score":	149131
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	49,
			"primary_score":	999798,
			"second_score":	149130
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	51,
			"primary_score":	999798,
			"second_score":	149129
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	93,
			"primary_score":	999798,
			"second_score":	133762
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	94,
			"primary_score":	999798,
			"second_score":	133761
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	96,
			"primary_score":	999798,
			"second_score":	133760
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	97,
			"primary_score":	999798,
			"second_score":	133759
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	133758
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	99,
			"primary_score":	999798,
			"second_score":	133755
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	133688
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	109,
			"primary_score":	999798,
			"second_score":	3144
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	111,
			"primary_score":	999798,
			"second_score":	3143
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	112,
			"primary_score":	999865,
			"second_score":	121114
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	113,
			"primary_score":	999865,
			"second_score":	121113
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	116,
			"primary_score":	999865,
			"second_score":	121112
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	117,
			"primary_score":	999865,
			"second_score":	121093
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	120,
			"primary_score":	999798,
			"second_score":	3142
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	126,
			"primary_score":	999798,
			"second_score":	119768
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	127,
			"primary_score":	999798,
			"second_score":	119764
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	190,
			"primary_score":	999798,
			"second_score":	14758
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	192,
			"primary_score":	999798,
			"second_score":	14757
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	233,
			"primary_score":	999798,
			"second_score":	119816
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	235,
			"primary_score":	999798,
			"second_score":	119815
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	275,
			"primary_score":	999798,
			"second_score":	149126
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	277,
			"primary_score":	999798,
			"second_score":	149125
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	278,
			"primary_score":	999798,
			"second_score":	149124
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	279,
			"primary_score":	999798,
			"second_score":	149123
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	41,
			"primary_score":	999798,
			"second_score":	113996
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	42,
			"primary_score":	999798,
			"second_score":	113930
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	47,
			"primary_score":	999798,
			"second_score":	119651
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	49,
			"primary_score":	999798,
			"second_score":	119650
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	82,
			"primary_score":	999798,
			"second_score":	114887
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	114886
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	48,
			"primary_score":	999798,
			"second_score":	148385
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	53,
			"primary_score":	999798,
			"second_score":	148495
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	55,
			"primary_score":	999798,
			"second_score":	148494
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	62,
			"primary_score":	999798,
			"second_score":	148493
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	63,
			"primary_score":	999798,
			"second_score":	148389
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	64,
			"primary_score":	999798,
			"second_score":	148388
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	65,
			"primary_score":	999798,
			"second_score":	148387
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	66,
			"primary_score":	999798,
			"second_score":	148386
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	68,
			"primary_score":	999798,
			"second_score":	148280
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	69,
			"primary_score":	999798,
			"second_score":	148279
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	71,
			"primary_score":	999798,
			"second_score":	148278
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	73,
			"primary_score":	999798,
			"second_score":	148277
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	74,
			"primary_score":	999798,
			"second_score":	148276
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	75,
			"primary_score":	999798,
			"second_score":	148274
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	76,
			"primary_score":	999798,
			"second_score":	148273
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	78,
			"primary_score":	999798,
			"second_score":	148272
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	79,
			"primary_score":	999798,
			"second_score":	148271
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	80,
			"primary_score":	999798,
			"second_score":	148270
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	82,
			"primary_score":	999798,
			"second_score":	148269
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	148268
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	85,
			"primary_score":	999798,
			"second_score":	148267
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	86,
			"primary_score":	999798,
			"second_score":	148266
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	88,
			"primary_score":	999798,
			"second_score":	148265
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	89,
			"primary_score":	999798,
			"second_score":	148264
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	91,
			"primary_score":	999798,
			"second_score":	148263
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	93,
			"primary_score":	999798,
			"second_score":	148262
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	95,
			"primary_score":	999798,
			"second_score":	148261
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	97,
			"primary_score":	999798,
			"second_score":	148260
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	148259
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	148258
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	101,
			"primary_score":	999798,
			"second_score":	148257
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	103,
			"primary_score":	999798,
			"second_score":	148256
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	148255
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	110,
			"primary_score":	999798,
			"second_score":	14847
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	122,
			"primary_score":	999798,
			"second_score":	14849
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	124,
			"primary_score":	999798,
			"second_score":	14848
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	136,
			"primary_score":	999798,
			"second_score":	114975
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	140,
			"primary_score":	999798,
			"second_score":	114974
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	197,
			"primary_score":	999798,
			"second_score":	114958
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	114957
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	266,
			"primary_score":	999798,
			"second_score":	15282
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	268,
			"primary_score":	999798,
			"second_score":	15281
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	271,
			"primary_score":	999798,
			"second_score":	15280
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	312,
			"primary_score":	999798,
			"second_score":	19062
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	314,
			"primary_score":	999798,
			"second_score":	19061
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	315,
			"primary_score":	999798,
			"second_score":	18998
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	316,
			"primary_score":	999798,
			"second_score":	18997
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	319,
			"primary_score":	999798,
			"second_score":	18989
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	321,
			"primary_score":	999798,
			"second_score":	15279
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	329,
			"primary_score":	999798,
			"second_score":	15278
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	330,
			"primary_score":	999798,
			"second_score":	15270
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	333,
			"primary_score":	999798,
			"second_score":	15269
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	334,
			"primary_score":	999798,
			"second_score":	14840
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	335,
			"primary_score":	999798,
			"second_score":	14832
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	336,
			"primary_score":	999798,
			"second_score":	16336
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	338,
			"primary_score":	999798,
			"second_score":	14831
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	339,
			"primary_score":	999798,
			"second_score":	14830
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	350,
			"primary_score":	999798,
			"second_score":	120108
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	351,
			"primary_score":	999798,
			"second_score":	120107
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	352,
			"primary_score":	999798,
			"second_score":	120106
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	354,
			"primary_score":	999798,
			"second_score":	120105
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	359,
			"primary_score":	999798,
			"second_score":	120104
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	360,
			"primary_score":	999798,
			"second_score":	120103
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	363,
			"primary_score":	999798,
			"second_score":	120084
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	367,
			"primary_score":	999798,
			"second_score":	120083
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	369,
			"primary_score":	999798,
			"second_score":	120064
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	370,
			"primary_score":	999867,
			"second_score":	120063
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	371,
			"primary_score":	999867,
			"second_score":	120062
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	372,
			"primary_score":	999867,
			"second_score":	120061
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	373,
			"primary_score":	999867,
			"second_score":	120060
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	375,
			"primary_score":	999867,
			"second_score":	120058
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	378,
			"primary_score":	999798,
			"second_score":	120039
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	379,
			"primary_score":	999798,
			"second_score":	120038
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	380,
			"primary_score":	999798,
			"second_score":	120037
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	381,
			"primary_score":	999798,
			"second_score":	119916
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	382,
			"primary_score":	999798,
			"second_score":	119913
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	384,
			"primary_score":	999798,
			"second_score":	119912
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	386,
			"primary_score":	999798,
			"second_score":	119867
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	388,
			"primary_score":	999798,
			"second_score":	119822
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	391,
			"primary_score":	999798,
			"second_score":	119821
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	394,
			"primary_score":	999798,
			"second_score":	119820
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	397,
			"primary_score":	999798,
			"second_score":	119819
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	400,
			"primary_score":	999798,
			"second_score":	119818
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	401,
			"primary_score":	999798,
			"second_score":	119817
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	403,
			"primary_score":	999798,
			"second_score":	119814
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	416,
			"primary_score":	999798,
			"second_score":	134139
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	417,
			"primary_score":	999798,
			"second_score":	134138
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	418,
			"primary_score":	999798,
			"second_score":	134137
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	423,
			"primary_score":	999798,
			"second_score":	134144
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	424,
			"primary_score":	999798,
			"second_score":	134143
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	426,
			"primary_score":	999798,
			"second_score":	134142
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	437,
			"primary_score":	999798,
			"second_score":	134141
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	439,
			"primary_score":	999798,
			"second_score":	134140
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	441,
			"primary_score":	999798,
			"second_score":	134136
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	446,
			"primary_score":	999798,
			"second_score":	134147
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	488,
			"primary_score":	999798,
			"second_score":	134108
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	490,
			"primary_score":	999798,
			"second_score":	134107
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	493,
			"primary_score":	999798,
			"second_score":	134106
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	496,
			"primary_score":	999798,
			"second_score":	134105
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	497,
			"primary_score":	999798,
			"second_score":	134104
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	500,
			"primary_score":	999798,
			"second_score":	134101
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	501,
			"primary_score":	999864,
			"second_score":	132358
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	502,
			"primary_score":	999864,
			"second_score":	132279
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	504,
			"primary_score":	999798,
			"second_score":	134100
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	505,
			"primary_score":	999798,
			"second_score":	134099
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	506,
			"primary_score":	999798,
			"second_score":	134040
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	508,
			"primary_score":	999798,
			"second_score":	134039
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	509,
			"primary_score":	999798,
			"second_score":	134038
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	510,
			"primary_score":	999798,
			"second_score":	133982
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	513,
			"primary_score":	999798,
			"second_score":	133981
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	514,
			"primary_score":	999798,
			"second_score":	133980
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	515,
			"primary_score":	999798,
			"second_score":	133979
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	516,
			"primary_score":	999798,
			"second_score":	133935
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	517,
			"primary_score":	999798,
			"second_score":	133934
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	519,
			"primary_score":	999798,
			"second_score":	133933
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	520,
			"primary_score":	999865,
			"second_score":	131996
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	522,
			"primary_score":	999798,
			"second_score":	133932
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	530,
			"primary_score":	999798,
			"second_score":	125811
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	537,
			"primary_score":	999798,
			"second_score":	125872
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	539,
			"primary_score":	999798,
			"second_score":	133931
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	540,
			"primary_score":	999798,
			"second_score":	133927
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	543,
			"primary_score":	999798,
			"second_score":	133926
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	544,
			"primary_score":	999798,
			"second_score":	133925
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	543,
			"primary_score":	999798,
			"second_score":	124679
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	544,
			"primary_score":	999798,
			"second_score":	124678
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	546,
			"primary_score":	999798,
			"second_score":	124677
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	558,
			"primary_score":	999798,
			"second_score":	120404
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	559,
			"primary_score":	999798,
			"second_score":	120376
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	561,
			"primary_score":	999798,
			"second_score":	120375
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	573,
			"primary_score":	999947,
			"second_score":	124676
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	574,
			"primary_score":	999947,
			"second_score":	124550
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	608,
			"primary_score":	999798,
			"second_score":	124549
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1014,
			"primary_score":	999876,
			"second_score":	119648
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1016,
			"primary_score":	999876,
			"second_score":	119647
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1017,
			"primary_score":	999876,
			"second_score":	119644
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1018,
			"primary_score":	999876,
			"second_score":	119640
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1892,
			"primary_score":	999798,
			"second_score":	150763
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1893,
			"primary_score":	999798,
			"second_score":	150762
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1894,
			"primary_score":	999798,
			"second_score":	150761
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1896,
			"primary_score":	999798,
			"second_score":	150760
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1897,
			"primary_score":	999798,
			"second_score":	150752
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1899,
			"primary_score":	999798,
			"second_score":	150745
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1901,
			"primary_score":	999798,
			"second_score":	150744
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1907,
			"primary_score":	999798,
			"second_score":	150785
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	78,
			"primary_score":	999798,
			"second_score":	113998
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	79,
			"primary_score":	999798,
			"second_score":	114024
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	86,
			"primary_score":	999798,
			"second_score":	114999
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	88,
			"primary_score":	999798,
			"second_score":	114998
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	96,
			"primary_score":	999798,
			"second_score":	115000
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	97,
			"primary_score":	999798,
			"second_score":	114997
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	114996
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	114995
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	104,
			"primary_score":	999798,
			"second_score":	114994
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	114993
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	62,
			"primary_score":	999798,
			"second_score":	133552
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	64,
			"primary_score":	999798,
			"second_score":	123460
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	65,
			"primary_score":	999798,
			"second_score":	123459
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	66,
			"primary_score":	999798,
			"second_score":	123458
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	67,
			"primary_score":	999798,
			"second_score":	123457
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	87,
			"primary_score":	999798,
			"second_score":	123428
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	88,
			"primary_score":	999798,
			"second_score":	123427
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	89,
			"primary_score":	999798,
			"second_score":	123426
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	90,
			"primary_score":	999798,
			"second_score":	123425
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	27,
			"primary_score":	999798,
			"second_score":	115014
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	28,
			"primary_score":	999798,
			"second_score":	115013
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	29,
			"primary_score":	999798,
			"second_score":	115012
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	30,
			"primary_score":	999798,
			"second_score":	115011
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	50,
			"primary_score":	999798,
			"second_score":	134712
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	51,
			"primary_score":	999798,
			"second_score":	134711
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	52,
			"primary_score":	999798,
			"second_score":	134710
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	62,
			"primary_score":	999798,
			"second_score":	134702
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	63,
			"primary_score":	999798,
			"second_score":	134701
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	65,
			"primary_score":	999798,
			"second_score":	134682
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	83,
			"primary_score":	999798,
			"second_score":	133921
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	133920
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	93,
			"primary_score":	999798,
			"second_score":	113768
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	95,
			"primary_score":	999798,
			"second_score":	113767
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	103,
			"primary_score":	999798,
			"second_score":	113766
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	121,
			"primary_score":	999798,
			"second_score":	134151
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	123,
			"primary_score":	999798,
			"second_score":	134150
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	130,
			"primary_score":	999798,
			"second_score":	134149
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	46,
			"primary_score":	999798,
			"second_score":	133735
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	47,
			"primary_score":	999798,
			"second_score":	133734
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	67,
			"primary_score":	999798,
			"second_score":	133744
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	68,
			"primary_score":	999798,
			"second_score":	133743
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	74,
			"primary_score":	999798,
			"second_score":	133742
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	75,
			"primary_score":	999798,
			"second_score":	133741
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	76,
			"primary_score":	999798,
			"second_score":	133740
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	77,
			"primary_score":	999798,
			"second_score":	133739
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	78,
			"primary_score":	999798,
			"second_score":	133738
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	83,
			"primary_score":	999798,
			"second_score":	133745
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	133737
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	85,
			"primary_score":	999798,
			"second_score":	133736
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	90,
			"primary_score":	999798,
			"second_score":	149269
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	95,
			"primary_score":	999798,
			"second_score":	149271
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	97,
			"primary_score":	999798,
			"second_score":	149270
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	149268
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	103,
			"primary_score":	999798,
			"second_score":	149267
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	149265
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	109,
			"primary_score":	999798,
			"second_score":	149264
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	169,
			"primary_score":	999798,
			"second_score":	149283
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	170,
			"primary_score":	999798,
			"second_score":	149282
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	172,
			"primary_score":	999798,
			"second_score":	149281
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	178,
			"primary_score":	999798,
			"second_score":	149280
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	187,
			"primary_score":	999798,
			"second_score":	149279
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	188,
			"primary_score":	999798,
			"second_score":	149278
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	189,
			"primary_score":	999798,
			"second_score":	149277
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	190,
			"primary_score":	999798,
			"second_score":	149276
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	191,
			"primary_score":	999798,
			"second_score":	149275
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	192,
			"primary_score":	999798,
			"second_score":	149274
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	194,
			"primary_score":	999798,
			"second_score":	149273
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	208,
			"primary_score":	999798,
			"second_score":	149272
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	209,
			"primary_score":	999798,
			"second_score":	149263
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	213,
			"primary_score":	999798,
			"second_score":	149262
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	214,
			"primary_score":	999798,
			"second_score":	149261
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	216,
			"primary_score":	999798,
			"second_score":	149260
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	218,
			"primary_score":	999798,
			"second_score":	149259
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	222,
			"primary_score":	999798,
			"second_score":	149258
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	223,
			"primary_score":	999798,
			"second_score":	149257
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	224,
			"primary_score":	999798,
			"second_score":	149256
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	225,
			"primary_score":	999798,
			"second_score":	149255
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	227,
			"primary_score":	999798,
			"second_score":	149254
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	228,
			"primary_score":	999798,
			"second_score":	149253
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	229,
			"primary_score":	999798,
			"second_score":	149252
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	231,
			"primary_score":	999798,
			"second_score":	149251
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	232,
			"primary_score":	999798,
			"second_score":	149250
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	234,
			"primary_score":	999798,
			"second_score":	149249
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	275,
			"primary_score":	999798,
			"second_score":	149248
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	276,
			"primary_score":	999798,
			"second_score":	149247
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	277,
			"primary_score":	999798,
			"second_score":	149246
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	278,
			"primary_score":	999798,
			"second_score":	149245
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	279,
			"primary_score":	999798,
			"second_score":	149244
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	281,
			"primary_score":	999798,
			"second_score":	149243
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	282,
			"primary_score":	999798,
			"second_score":	149242
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	284,
			"primary_score":	999798,
			"second_score":	149241
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	133747
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	299,
			"primary_score":	999798,
			"second_score":	133746
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	301,
			"primary_score":	999798,
			"second_score":	133733
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	302,
			"primary_score":	999798,
			"second_score":	133732
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	309,
			"primary_score":	999798,
			"second_score":	133731
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	310,
			"primary_score":	999798,
			"second_score":	133730
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	311,
			"primary_score":	999798,
			"second_score":	133711
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	313,
			"primary_score":	999798,
			"second_score":	133710
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	322,
			"primary_score":	999798,
			"second_score":	133757
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	325,
			"primary_score":	999798,
			"second_score":	133756
		}, {
			"file":	"Zend/zend_string.c",
			"line":	77,
			"primary_score":	999798,
			"second_score":	6123
		}, {
			"file":	"Zend/zend_string.c",
			"line":	78,
			"primary_score":	999798,
			"second_score":	6122
		}, {
			"file":	"Zend/zend_string.c",
			"line":	85,
			"primary_score":	999798,
			"second_score":	134963
		}, {
			"file":	"Zend/zend_string.c",
			"line":	86,
			"primary_score":	999798,
			"second_score":	134962
		}, {
			"file":	"Zend/zend_string.c",
			"line":	87,
			"primary_score":	999798,
			"second_score":	134961
		}, {
			"file":	"Zend/zend_string.c",
			"line":	89,
			"primary_score":	999798,
			"second_score":	134960
		}, {
			"file":	"Zend/zend_string.c",
			"line":	93,
			"primary_score":	999798,
			"second_score":	134959
		}, {
			"file":	"Zend/zend_string.c",
			"line":	94,
			"primary_score":	999798,
			"second_score":	134949
		}, {
			"file":	"Zend/zend_string.c",
			"line":	95,
			"primary_score":	999798,
			"second_score":	134948
		}, {
			"file":	"Zend/zend_string.c",
			"line":	96,
			"primary_score":	999798,
			"second_score":	134947
		}, {
			"file":	"Zend/zend_string.c",
			"line":	97,
			"primary_score":	999798,
			"second_score":	134946
		}, {
			"file":	"Zend/zend_string.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	153622
		}, {
			"file":	"Zend/zend_string.c",
			"line":	99,
			"primary_score":	999798,
			"second_score":	153621
		}, {
			"file":	"Zend/zend_string.c",
			"line":	100,
			"primary_score":	999798,
			"second_score":	153620
		}, {
			"file":	"Zend/zend_string.c",
			"line":	102,
			"primary_score":	999798,
			"second_score":	153601
		}, {
			"file":	"Zend/zend_string.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	139984
		}, {
			"file":	"Zend/zend_string.c",
			"line":	108,
			"primary_score":	999798,
			"second_score":	139983
		}, {
			"file":	"Zend/zend_string.c",
			"line":	114,
			"primary_score":	999798,
			"second_score":	139982
		}, {
			"file":	"Zend/zend_string.c",
			"line":	115,
			"primary_score":	999798,
			"second_score":	139981
		}, {
			"file":	"Zend/zend_string.c",
			"line":	121,
			"primary_score":	999798,
			"second_score":	139980
		}, {
			"file":	"Zend/zend_string.c",
			"line":	122,
			"primary_score":	999798,
			"second_score":	139979
		}, {
			"file":	"Zend/zend_string.c",
			"line":	123,
			"primary_score":	999798,
			"second_score":	139978
		}, {
			"file":	"Zend/zend_string.c",
			"line":	124,
			"primary_score":	999798,
			"second_score":	139977
		}, {
			"file":	"Zend/zend_string.c",
			"line":	126,
			"primary_score":	999798,
			"second_score":	139958
		}, {
			"file":	"Zend/zend_string.c",
			"line":	127,
			"primary_score":	999798,
			"second_score":	139957
		}, {
			"file":	"Zend/zend_string.c",
			"line":	128,
			"primary_score":	999798,
			"second_score":	139956
		}, {
			"file":	"Zend/zend_string.c",
			"line":	129,
			"primary_score":	999798,
			"second_score":	139955
		}, {
			"file":	"Zend/zend_string.c",
			"line":	131,
			"primary_score":	999798,
			"second_score":	139954
		}, {
			"file":	"Zend/zend_string.c",
			"line":	132,
			"primary_score":	999798,
			"second_score":	139953
		}, {
			"file":	"Zend/zend_string.c",
			"line":	133,
			"primary_score":	999798,
			"second_score":	139952
		}, {
			"file":	"Zend/zend_string.c",
			"line":	134,
			"primary_score":	999798,
			"second_score":	139951
		}, {
			"file":	"Zend/zend_string.c",
			"line":	137,
			"primary_score":	999798,
			"second_score":	139950
		}, {
			"file":	"Zend/zend_string.c",
			"line":	139,
			"primary_score":	999798,
			"second_score":	139948
		}, {
			"file":	"Zend/zend_string.c",
			"line":	140,
			"primary_score":	999798,
			"second_score":	139947
		}, {
			"file":	"Zend/zend_string.c",
			"line":	141,
			"primary_score":	999798,
			"second_score":	139946
		}, {
			"file":	"Zend/zend_string.c",
			"line":	142,
			"primary_score":	999798,
			"second_score":	139945
		}, {
			"file":	"Zend/zend_string.c",
			"line":	143,
			"primary_score":	999798,
			"second_score":	139944
		}, {
			"file":	"Zend/zend_string.c",
			"line":	145,
			"primary_score":	999798,
			"second_score":	139943
		}, {
			"file":	"Zend/zend_string.c",
			"line":	149,
			"primary_score":	999798,
			"second_score":	139942
		}, {
			"file":	"Zend/zend_string.c",
			"line":	151,
			"primary_score":	999798,
			"second_score":	139941
		}, {
			"file":	"Zend/zend_string.c",
			"line":	153,
			"primary_score":	999798,
			"second_score":	139939
		}, {
			"file":	"Zend/zend_string.c",
			"line":	155,
			"primary_score":	999798,
			"second_score":	139938
		}, {
			"file":	"Zend/zend_string.c",
			"line":	174,
			"primary_score":	999798,
			"second_score":	139937
		}, {
			"file":	"Zend/zend_string.c",
			"line":	188,
			"primary_score":	999798,
			"second_score":	113214
		}, {
			"file":	"Zend/zend_string.c",
			"line":	189,
			"primary_score":	999798,
			"second_score":	113213
		}, {
			"file":	"Zend/zend_string.c",
			"line":	192,
			"primary_score":	999798,
			"second_score":	113212
		}, {
			"file":	"Zend/zend_string.c",
			"line":	199,
			"primary_score":	999798,
			"second_score":	113211
		}, {
			"file":	"Zend/zend_string.c",
			"line":	200,
			"primary_score":	999798,
			"second_score":	103820
		}, {
			"file":	"Zend/zend_string.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	103819
		}, {
			"file":	"Zend/zend_string.c",
			"line":	202,
			"primary_score":	999798,
			"second_score":	110388
		}, {
			"file":	"Zend/zend_string.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	110387
		}, {
			"file":	"Zend/zend_string.c",
			"line":	204,
			"primary_score":	999798,
			"second_score":	110386
		}, {
			"file":	"Zend/zend_string.c",
			"line":	208,
			"primary_score":	999798,
			"second_score":	110385
		}, {
			"file":	"Zend/zend_string.c",
			"line":	209,
			"primary_score":	999798,
			"second_score":	107046
		}, {
			"file":	"Zend/zend_string.c",
			"line":	211,
			"primary_score":	999798,
			"second_score":	110384
		}, {
			"file":	"Zend/zend_string.c",
			"line":	213,
			"primary_score":	999798,
			"second_score":	110383
		}, {
			"file":	"Zend/zend_string.c",
			"line":	215,
			"primary_score":	999798,
			"second_score":	103818
		}, {
			"file":	"Zend/zend_string.c",
			"line":	216,
			"primary_score":	999798,
			"second_score":	103817
		}, {
			"file":	"Zend/zend_string.c",
			"line":	218,
			"primary_score":	999798,
			"second_score":	103816
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	459,
			"primary_score":	999798,
			"second_score":	6279
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	467,
			"primary_score":	999798,
			"second_score":	6225
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1379,
			"primary_score":	999798,
			"second_score":	6278
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1380,
			"primary_score":	999798,
			"second_score":	6277
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1382,
			"primary_score":	999798,
			"second_score":	6276
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1383,
			"primary_score":	999798,
			"second_score":	6275
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1384,
			"primary_score":	999798,
			"second_score":	6229
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1385,
			"primary_score":	999798,
			"second_score":	6228
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1389,
			"primary_score":	999798,
			"second_score":	6227
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1391,
			"primary_score":	999798,
			"second_score":	6226
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	32,
			"primary_score":	999798,
			"second_score":	114325
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	37,
			"primary_score":	999798,
			"second_score":	115652
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	38,
			"primary_score":	999798,
			"second_score":	115631
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	41,
			"primary_score":	999798,
			"second_score":	115123
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	43,
			"primary_score":	999798,
			"second_score":	115122
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	44,
			"primary_score":	999798,
			"second_score":	115121
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	45,
			"primary_score":	999798,
			"second_score":	115113
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	48,
			"primary_score":	999798,
			"second_score":	115094
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	58,
			"primary_score":	999798,
			"second_score":	114324
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	61,
			"primary_score":	999798,
			"second_score":	114323
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	63,
			"primary_score":	999798,
			"second_score":	114122
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	77,
			"primary_score":	999798,
			"second_score":	15298
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	81,
			"primary_score":	999798,
			"second_score":	19039
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	82,
			"primary_score":	999798,
			"second_score":	19036
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	153,
			"primary_score":	999798,
			"second_score":	120065
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	32,
			"primary_score":	999798,
			"second_score":	114327
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	33,
			"primary_score":	999798,
			"second_score":	115761
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	35,
			"primary_score":	999798,
			"second_score":	114326
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	42,
			"primary_score":	999798,
			"second_score":	133570
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	43,
			"primary_score":	999798,
			"second_score":	124782
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	345,
			"primary_score":	999798,
			"second_score":	133682
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	346,
			"primary_score":	999798,
			"second_score":	133681
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	347,
			"primary_score":	999798,
			"second_score":	133680
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	350,
			"primary_score":	999798,
			"second_score":	133679
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	354,
			"primary_score":	999798,
			"second_score":	133678
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	356,
			"primary_score":	999798,
			"second_score":	133677
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	363,
			"primary_score":	999798,
			"second_score":	133668
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	364,
			"primary_score":	999798,
			"second_score":	133667
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	365,
			"primary_score":	999798,
			"second_score":	133666
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	366,
			"primary_score":	999798,
			"second_score":	133665
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	367,
			"primary_score":	999798,
			"second_score":	133664
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	368,
			"primary_score":	999798,
			"second_score":	133663
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	369,
			"primary_score":	999798,
			"second_score":	133662
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	370,
			"primary_score":	999798,
			"second_score":	133661
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	371,
			"primary_score":	999798,
			"second_score":	133660
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	372,
			"primary_score":	999798,
			"second_score":	133659
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	373,
			"primary_score":	999798,
			"second_score":	133658
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	374,
			"primary_score":	999798,
			"second_score":	133657
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	375,
			"primary_score":	999798,
			"second_score":	133656
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	377,
			"primary_score":	999798,
			"second_score":	133655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	379,
			"primary_score":	999798,
			"second_score":	133654
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	380,
			"primary_score":	999798,
			"second_score":	133653
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	383,
			"primary_score":	999798,
			"second_score":	133620
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	395,
			"primary_score":	999798,
			"second_score":	133619
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	396,
			"primary_score":	999798,
			"second_score":	133618
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	397,
			"primary_score":	999798,
			"second_score":	133617
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	399,
			"primary_score":	999798,
			"second_score":	133616
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	400,
			"primary_score":	999798,
			"second_score":	133615
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	402,
			"primary_score":	999798,
			"second_score":	133614
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	403,
			"primary_score":	999798,
			"second_score":	120137
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	410,
			"primary_score":	999798,
			"second_score":	120136
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	411,
			"primary_score":	999798,
			"second_score":	120114
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	414,
			"primary_score":	999798,
			"second_score":	120113
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	431,
			"primary_score":	999798,
			"second_score":	120079
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	436,
			"primary_score":	999798,
			"second_score":	120078
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	437,
			"primary_score":	999798,
			"second_score":	120077
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	458,
			"primary_score":	999798,
			"second_score":	120128
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	459,
			"primary_score":	999798,
			"second_score":	120127
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	461,
			"primary_score":	999798,
			"second_score":	120126
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	462,
			"primary_score":	999798,
			"second_score":	120125
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	463,
			"primary_score":	999798,
			"second_score":	120124
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	474,
			"primary_score":	999798,
			"second_score":	120123
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	478,
			"primary_score":	999798,
			"second_score":	120122
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	480,
			"primary_score":	999798,
			"second_score":	120121
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	482,
			"primary_score":	999798,
			"second_score":	120117
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	485,
			"primary_score":	999798,
			"second_score":	120116
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	570,
			"primary_score":	999798,
			"second_score":	120115
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	575,
			"primary_score":	999798,
			"second_score":	123438
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	576,
			"primary_score":	999798,
			"second_score":	123437
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	577,
			"primary_score":	999798,
			"second_score":	123436
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	579,
			"primary_score":	999798,
			"second_score":	123435
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	580,
			"primary_score":	999798,
			"second_score":	123434
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	593,
			"primary_score":	999798,
			"second_score":	123433
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	607,
			"primary_score":	999798,
			"second_score":	123432
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	617,
			"primary_score":	999798,
			"second_score":	123431
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	618,
			"primary_score":	999798,
			"second_score":	123421
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	619,
			"primary_score":	999798,
			"second_score":	123417
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	621,
			"primary_score":	999798,
			"second_score":	123416
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	622,
			"primary_score":	999798,
			"second_score":	123415
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	624,
			"primary_score":	999798,
			"second_score":	123414
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	625,
			"primary_score":	999798,
			"second_score":	123304
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	626,
			"primary_score":	999798,
			"second_score":	123301
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	627,
			"primary_score":	999798,
			"second_score":	123300
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	629,
			"primary_score":	999798,
			"second_score":	123299
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	630,
			"primary_score":	999798,
			"second_score":	123298
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	631,
			"primary_score":	999798,
			"second_score":	123297
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	632,
			"primary_score":	999798,
			"second_score":	123296
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	634,
			"primary_score":	999798,
			"second_score":	123295
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	635,
			"primary_score":	999798,
			"second_score":	123284
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	636,
			"primary_score":	999798,
			"second_score":	123275
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	640,
			"primary_score":	999798,
			"second_score":	123274
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	642,
			"primary_score":	999798,
			"second_score":	123273
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	647,
			"primary_score":	999798,
			"second_score":	122112
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	648,
			"primary_score":	999831,
			"second_score":	120435
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	713,
			"primary_score":	999798,
			"second_score":	122111
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	714,
			"primary_score":	999798,
			"second_score":	122110
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	716,
			"primary_score":	999798,
			"second_score":	122109
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	733,
			"primary_score":	999798,
			"second_score":	122108
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	734,
			"primary_score":	999798,
			"second_score":	122107
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	736,
			"primary_score":	999798,
			"second_score":	122106
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	738,
			"primary_score":	999798,
			"second_score":	120196
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	746,
			"primary_score":	999798,
			"second_score":	120195
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1759,
			"primary_score":	999798,
			"second_score":	121731
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1761,
			"primary_score":	999798,
			"second_score":	121730
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1762,
			"primary_score":	999798,
			"second_score":	121729
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1764,
			"primary_score":	999798,
			"second_score":	121728
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1765,
			"primary_score":	999798,
			"second_score":	121727
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1767,
			"primary_score":	999798,
			"second_score":	121726
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1774,
			"primary_score":	999798,
			"second_score":	121725
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1777,
			"primary_score":	999798,
			"second_score":	121661
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1778,
			"primary_score":	999798,
			"second_score":	121660
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1947,
			"primary_score":	999798,
			"second_score":	123464
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1949,
			"primary_score":	999798,
			"second_score":	123463
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1951,
			"primary_score":	999798,
			"second_score":	123462
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1953,
			"primary_score":	999798,
			"second_score":	123456
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1955,
			"primary_score":	999798,
			"second_score":	123455
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1959,
			"primary_score":	999798,
			"second_score":	123442
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1961,
			"primary_score":	999798,
			"second_score":	123440
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1963,
			"primary_score":	999798,
			"second_score":	123439
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1968,
			"primary_score":	999798,
			"second_score":	120135
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1969,
			"primary_score":	999798,
			"second_score":	120134
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1972,
			"primary_score":	999798,
			"second_score":	120133
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1973,
			"primary_score":	999798,
			"second_score":	120132
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1975,
			"primary_score":	999798,
			"second_score":	120131
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1976,
			"primary_score":	999798,
			"second_score":	120130
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1979,
			"primary_score":	999798,
			"second_score":	119366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1980,
			"primary_score":	999798,
			"second_score":	119365
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1982,
			"primary_score":	999798,
			"second_score":	119364
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1984,
			"primary_score":	999798,
			"second_score":	119363
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1985,
			"primary_score":	999798,
			"second_score":	119339
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1986,
			"primary_score":	999798,
			"second_score":	119331
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1987,
			"primary_score":	999798,
			"second_score":	119328
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2006,
			"primary_score":	999798,
			"second_score":	120129
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2105,
			"primary_score":	999798,
			"second_score":	133611
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2107,
			"primary_score":	999798,
			"second_score":	133610
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2108,
			"primary_score":	999798,
			"second_score":	133609
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2112,
			"primary_score":	999798,
			"second_score":	133608
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2113,
			"primary_score":	999798,
			"second_score":	133607
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2114,
			"primary_score":	999798,
			"second_score":	133606
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2117,
			"primary_score":	999798,
			"second_score":	133605
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2119,
			"primary_score":	999798,
			"second_score":	133604
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2120,
			"primary_score":	999798,
			"second_score":	133580
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2121,
			"primary_score":	999798,
			"second_score":	133572
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2122,
			"primary_score":	999798,
			"second_score":	133571
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2124,
			"primary_score":	999798,
			"second_score":	133565
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2127,
			"primary_score":	999798,
			"second_score":	133561
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2128,
			"primary_score":	999798,
			"second_score":	133560
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3292,
			"primary_score":	999941,
			"second_score":	125619
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3294,
			"primary_score":	999941,
			"second_score":	125618
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3296,
			"primary_score":	999941,
			"second_score":	125617
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3297,
			"primary_score":	999941,
			"second_score":	125616
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3307,
			"primary_score":	999941,
			"second_score":	125615
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3308,
			"primary_score":	999941,
			"second_score":	125614
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3314,
			"primary_score":	999941,
			"second_score":	125613
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3315,
			"primary_score":	999941,
			"second_score":	125612
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3317,
			"primary_score":	999941,
			"second_score":	125611
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3318,
			"primary_score":	999941,
			"second_score":	125587
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3319,
			"primary_score":	999941,
			"second_score":	125579
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3320,
			"primary_score":	999941,
			"second_score":	125578
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3326,
			"primary_score":	999941,
			"second_score":	125575
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3328,
			"primary_score":	999941,
			"second_score":	125574
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3329,
			"primary_score":	999941,
			"second_score":	125573
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3331,
			"primary_score":	999941,
			"second_score":	125572
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3343,
			"primary_score":	999944,
			"second_score":	125571
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3352,
			"primary_score":	999944,
			"second_score":	125570
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3353,
			"primary_score":	999944,
			"second_score":	125471
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3367,
			"primary_score":	999941,
			"second_score":	125470
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3372,
			"primary_score":	999941,
			"second_score":	125469
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3373,
			"primary_score":	999941,
			"second_score":	125468
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3378,
			"primary_score":	999947,
			"second_score":	125665
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3380,
			"primary_score":	999947,
			"second_score":	125664
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3381,
			"primary_score":	999947,
			"second_score":	125621
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	3385,
			"primary_score":	999947,
			"second_score":	125620
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6033,
			"primary_score":	999798,
			"second_score":	120074
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6034,
			"primary_score":	999798,
			"second_score":	120073
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6035,
			"primary_score":	999798,
			"second_score":	120072
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6036,
			"primary_score":	999798,
			"second_score":	120071
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6038,
			"primary_score":	999798,
			"second_score":	120070
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6039,
			"primary_score":	999798,
			"second_score":	120069
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6041,
			"primary_score":	999798,
			"second_score":	120067
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6048,
			"primary_score":	999798,
			"second_score":	120066
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6051,
			"primary_score":	999798,
			"second_score":	120053
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6052,
			"primary_score":	999798,
			"second_score":	120027
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6053,
			"primary_score":	999798,
			"second_score":	120026
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6066,
			"primary_score":	999873,
			"second_score":	119603
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6067,
			"primary_score":	999873,
			"second_score":	119602
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6068,
			"primary_score":	999873,
			"second_score":	119601
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6069,
			"primary_score":	999873,
			"second_score":	119600
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6071,
			"primary_score":	999873,
			"second_score":	119599
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6072,
			"primary_score":	999873,
			"second_score":	119598
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6074,
			"primary_score":	999873,
			"second_score":	119596
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6075,
			"primary_score":	999873,
			"second_score":	119595
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6083,
			"primary_score":	999873,
			"second_score":	119594
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6087,
			"primary_score":	999875,
			"second_score":	119593
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6088,
			"primary_score":	999875,
			"second_score":	119592
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6373,
			"primary_score":	999965,
			"second_score":	125287
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6375,
			"primary_score":	999965,
			"second_score":	125286
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6376,
			"primary_score":	999965,
			"second_score":	125285
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6380,
			"primary_score":	999965,
			"second_score":	125284
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6381,
			"primary_score":	999965,
			"second_score":	125283
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6382,
			"primary_score":	999965,
			"second_score":	125282
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6383,
			"primary_score":	999965,
			"second_score":	125281
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6385,
			"primary_score":	999965,
			"second_score":	125280
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6387,
			"primary_score":	999965,
			"second_score":	125278
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6388,
			"primary_score":	999965,
			"second_score":	125254
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6389,
			"primary_score":	999965,
			"second_score":	125246
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6392,
			"primary_score":	999965,
			"second_score":	125245
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6395,
			"primary_score":	999965,
			"second_score":	125241
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6396,
			"primary_score":	999965,
			"second_score":	125240
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7523,
			"primary_score":	999984,
			"second_score":	125464
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7524,
			"primary_score":	999984,
			"second_score":	125463
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7525,
			"primary_score":	999984,
			"second_score":	125462
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7527,
			"primary_score":	999984,
			"second_score":	125461
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7528,
			"primary_score":	999984,
			"second_score":	125460
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7538,
			"primary_score":	999984,
			"second_score":	125459
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7539,
			"primary_score":	999984,
			"second_score":	125457
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7540,
			"primary_score":	999984,
			"second_score":	125456
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7542,
			"primary_score":	999984,
			"second_score":	125455
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7543,
			"primary_score":	999984,
			"second_score":	125431
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7544,
			"primary_score":	999984,
			"second_score":	125423
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7557,
			"primary_score":	999984,
			"second_score":	125422
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7559,
			"primary_score":	999984,
			"second_score":	125421
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7560,
			"primary_score":	999984,
			"second_score":	125420
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7562,
			"primary_score":	999984,
			"second_score":	125419
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7574,
			"primary_score":	999984,
			"second_score":	125418
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7583,
			"primary_score":	999984,
			"second_score":	125417
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7584,
			"primary_score":	999984,
			"second_score":	125294
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7598,
			"primary_score":	999984,
			"second_score":	125293
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7603,
			"primary_score":	999984,
			"second_score":	125292
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7604,
			"primary_score":	999984,
			"second_score":	125291
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7609,
			"primary_score":	999987,
			"second_score":	125864
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7611,
			"primary_score":	999987,
			"second_score":	125863
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7612,
			"primary_score":	999987,
			"second_score":	125820
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	7616,
			"primary_score":	999987,
			"second_score":	125819
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10025,
			"primary_score":	999876,
			"second_score":	119662
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10026,
			"primary_score":	999876,
			"second_score":	119661
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10028,
			"primary_score":	999876,
			"second_score":	119660
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10029,
			"primary_score":	999876,
			"second_score":	119659
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10031,
			"primary_score":	999876,
			"second_score":	119639
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10032,
			"primary_score":	999876,
			"second_score":	119608
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10033,
			"primary_score":	999876,
			"second_score":	119607
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10218,
			"primary_score":	999798,
			"second_score":	121871
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10219,
			"primary_score":	999798,
			"second_score":	121870
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10220,
			"primary_score":	999798,
			"second_score":	121869
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10221,
			"primary_score":	999798,
			"second_score":	121868
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10223,
			"primary_score":	999798,
			"second_score":	121867
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10224,
			"primary_score":	999798,
			"second_score":	121866
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10226,
			"primary_score":	999798,
			"second_score":	121855
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10233,
			"primary_score":	999798,
			"second_score":	121854
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10236,
			"primary_score":	999798,
			"second_score":	121790
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10237,
			"primary_score":	999798,
			"second_score":	121736
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10238,
			"primary_score":	999798,
			"second_score":	121735
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10251,
			"primary_score":	999798,
			"second_score":	121132
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10252,
			"primary_score":	999798,
			"second_score":	121131
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10253,
			"primary_score":	999798,
			"second_score":	121130
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10254,
			"primary_score":	999798,
			"second_score":	121129
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10256,
			"primary_score":	999798,
			"second_score":	121128
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10257,
			"primary_score":	999798,
			"second_score":	121127
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10259,
			"primary_score":	999798,
			"second_score":	121116
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10262,
			"primary_score":	999798,
			"second_score":	121115
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10263,
			"primary_score":	999798,
			"second_score":	121110
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10264,
			"primary_score":	999798,
			"second_score":	121079
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10268,
			"primary_score":	999798,
			"second_score":	121078
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10276,
			"primary_score":	999798,
			"second_score":	121077
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10559,
			"primary_score":	999798,
			"second_score":	123526
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10560,
			"primary_score":	999798,
			"second_score":	123525
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10561,
			"primary_score":	999798,
			"second_score":	123524
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10562,
			"primary_score":	999798,
			"second_score":	123523
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10564,
			"primary_score":	999798,
			"second_score":	123512
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10568,
			"primary_score":	999798,
			"second_score":	123511
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10577,
			"primary_score":	999798,
			"second_score":	123509
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10578,
			"primary_score":	999798,
			"second_score":	123507
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10579,
			"primary_score":	999798,
			"second_score":	123503
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10581,
			"primary_score":	999798,
			"second_score":	123469
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10582,
			"primary_score":	999798,
			"second_score":	123468
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10587,
			"primary_score":	999798,
			"second_score":	123533
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10588,
			"primary_score":	999798,
			"second_score":	123532
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10589,
			"primary_score":	999798,
			"second_score":	123531
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10591,
			"primary_score":	999798,
			"second_score":	123530
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10592,
			"primary_score":	999798,
			"second_score":	123529
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10593,
			"primary_score":	999798,
			"second_score":	123528
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10594,
			"primary_score":	999798,
			"second_score":	123527
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11301,
			"primary_score":	999798,
			"second_score":	120191
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11302,
			"primary_score":	999798,
			"second_score":	120190
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11303,
			"primary_score":	999798,
			"second_score":	120189
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11305,
			"primary_score":	999798,
			"second_score":	120188
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11306,
			"primary_score":	999798,
			"second_score":	120187
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11308,
			"primary_score":	999798,
			"second_score":	120176
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11309,
			"primary_score":	999798,
			"second_score":	120173
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11310,
			"primary_score":	999798,
			"second_score":	120172
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11312,
			"primary_score":	999798,
			"second_score":	120138
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11313,
			"primary_score":	999798,
			"second_score":	120084
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11314,
			"primary_score":	999798,
			"second_score":	120083
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26248,
			"primary_score":	999871,
			"second_score":	126086
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26249,
			"primary_score":	999871,
			"second_score":	126085
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26251,
			"primary_score":	999871,
			"second_score":	126084
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26253,
			"primary_score":	999871,
			"second_score":	126080
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26257,
			"primary_score":	999871,
			"second_score":	126079
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26266,
			"primary_score":	999871,
			"second_score":	126077
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26267,
			"primary_score":	999871,
			"second_score":	126075
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26268,
			"primary_score":	999871,
			"second_score":	126071
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26270,
			"primary_score":	999871,
			"second_score":	126070
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26271,
			"primary_score":	999871,
			"second_score":	126069
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26362,
			"primary_score":	999871,
			"second_score":	126090
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26364,
			"primary_score":	999871,
			"second_score":	126089
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26368,
			"primary_score":	999871,
			"second_score":	126088
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26369,
			"primary_score":	999871,
			"second_score":	126087
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30207,
			"primary_score":	999935,
			"second_score":	131186
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30208,
			"primary_score":	999935,
			"second_score":	131185
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30209,
			"primary_score":	999935,
			"second_score":	131184
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30210,
			"primary_score":	999935,
			"second_score":	131183
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30212,
			"primary_score":	999935,
			"second_score":	131182
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30213,
			"primary_score":	999935,
			"second_score":	131181
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30214,
			"primary_score":	999935,
			"second_score":	131179
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30216,
			"primary_score":	999935,
			"second_score":	131015
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30230,
			"primary_score":	999935,
			"second_score":	131014
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30239,
			"primary_score":	999935,
			"second_score":	131013
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30240,
			"primary_score":	999935,
			"second_score":	131012
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30246,
			"primary_score":	999935,
			"second_score":	130967
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30254,
			"primary_score":	999935,
			"second_score":	130966
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	30255,
			"primary_score":	999935,
			"second_score":	130965
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39446,
			"primary_score":	999798,
			"second_score":	133929
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39465,
			"primary_score":	999798,
			"second_score":	133928
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39470,
			"primary_score":	999798,
			"second_score":	133930
		}, {
			"file":	"ext/date/php_date.c",
			"line":	626,
			"primary_score":	999798,
			"second_score":	119017
		}, {
			"file":	"ext/date/php_date.c",
			"line":	629,
			"primary_score":	999798,
			"second_score":	119016
		}, {
			"file":	"ext/date/php_date.c",
			"line":	630,
			"primary_score":	999798,
			"second_score":	119015
		}, {
			"file":	"ext/date/php_date.c",
			"line":	635,
			"primary_score":	999798,
			"second_score":	119014
		}, {
			"file":	"ext/date/php_date.c",
			"line":	640,
			"primary_score":	999798,
			"second_score":	119013
		}, {
			"file":	"ext/date/php_date.c",
			"line":	789,
			"primary_score":	999798,
			"second_score":	53650
		}, {
			"file":	"ext/date/php_date.c",
			"line":	791,
			"primary_score":	999798,
			"second_score":	52971
		}, {
			"file":	"ext/date/php_date.c",
			"line":	795,
			"primary_score":	999798,
			"second_score":	52970
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	910,
			"primary_score":	999798,
			"second_score":	58714
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	911,
			"primary_score":	999798,
			"second_score":	58699
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	912,
			"primary_score":	999798,
			"second_score":	58684
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	913,
			"primary_score":	999798,
			"second_score":	58669
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	914,
			"primary_score":	999798,
			"second_score":	58450
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	915,
			"primary_score":	999798,
			"second_score":	58345
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	916,
			"primary_score":	999798,
			"second_score":	58288
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	917,
			"primary_score":	999798,
			"second_score":	58273
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	918,
			"primary_score":	999798,
			"second_score":	58258
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	919,
			"primary_score":	999798,
			"second_score":	58141
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	920,
			"primary_score":	999798,
			"second_score":	58006
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	921,
			"primary_score":	999798,
			"second_score":	57889
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	922,
			"primary_score":	999798,
			"second_score":	57766
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	923,
			"primary_score":	999798,
			"second_score":	57745
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	924,
			"primary_score":	999798,
			"second_score":	57700
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	925,
			"primary_score":	999798,
			"second_score":	57661
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	926,
			"primary_score":	999798,
			"second_score":	57520
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	927,
			"primary_score":	999798,
			"second_score":	57403
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	928,
			"primary_score":	999798,
			"second_score":	57262
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	930,
			"primary_score":	999798,
			"second_score":	57145
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	932,
			"primary_score":	999798,
			"second_score":	57130
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	939,
			"primary_score":	999798,
			"second_score":	56977
		}, {
			"file":	"ext/ereg/ereg.c",
			"line":	230,
			"primary_score":	999798,
			"second_score":	54035
		}, {
			"file":	"ext/filter/filter.c",
			"line":	287,
			"primary_score":	999798,
			"second_score":	60122
		}, {
			"file":	"ext/filter/filter.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	59481
		}, {
			"file":	"ext/filter/filter.c",
			"line":	303,
			"primary_score":	999798,
			"second_score":	119510
		}, {
			"file":	"ext/filter/filter.c",
			"line":	304,
			"primary_score":	999798,
			"second_score":	119509
		}, {
			"file":	"ext/filter/filter.c",
			"line":	305,
			"primary_score":	999798,
			"second_score":	119508
		}, {
			"file":	"ext/filter/filter.c",
			"line":	306,
			"primary_score":	999798,
			"second_score":	119507
		}, {
			"file":	"ext/filter/filter.c",
			"line":	307,
			"primary_score":	999798,
			"second_score":	119039
		}, {
			"file":	"ext/filter/filter.c",
			"line":	308,
			"primary_score":	999798,
			"second_score":	119038
		}, {
			"file":	"ext/filter/filter.c",
			"line":	309,
			"primary_score":	999798,
			"second_score":	119037
		}, {
			"file":	"ext/filter/filter.c",
			"line":	328,
			"primary_score":	999935,
			"second_score":	124700
		}, {
			"file":	"ext/filter/filter.c",
			"line":	330,
			"primary_score":	999935,
			"second_score":	124699
		}, {
			"file":	"ext/filter/filter.c",
			"line":	331,
			"primary_score":	999935,
			"second_score":	124686
		}, {
			"file":	"ext/filter/filter.c",
			"line":	332,
			"primary_score":	999935,
			"second_score":	124685
		}, {
			"file":	"ext/filter/filter.c",
			"line":	359,
			"primary_score":	999935,
			"second_score":	124702
		}, {
			"file":	"ext/filter/filter.c",
			"line":	361,
			"primary_score":	999935,
			"second_score":	124701
		}, {
			"file":	"ext/filter/filter.c",
			"line":	363,
			"primary_score":	999935,
			"second_score":	124684
		}, {
			"file":	"ext/filter/filter.c",
			"line":	368,
			"primary_score":	999935,
			"second_score":	124683
		}, {
			"file":	"ext/filter/filter.c",
			"line":	374,
			"primary_score":	999935,
			"second_score":	124682
		}, {
			"file":	"ext/filter/filter.c",
			"line":	385,
			"primary_score":	999988,
			"second_score":	124680
		}, {
			"file":	"ext/filter/filter.c",
			"line":	387,
			"primary_score":	999936,
			"second_score":	124547
		}, {
			"file":	"ext/filter/filter.c",
			"line":	389,
			"primary_score":	999936,
			"second_score":	124384
		}, {
			"file":	"ext/filter/filter.c",
			"line":	591,
			"primary_score":	999937,
			"second_score":	124779
		}, {
			"file":	"ext/filter/filter.c",
			"line":	592,
			"primary_score":	999937,
			"second_score":	124778
		}, {
			"file":	"ext/filter/filter.c",
			"line":	593,
			"primary_score":	999937,
			"second_score":	124777
		}, {
			"file":	"ext/filter/filter.c",
			"line":	595,
			"primary_score":	999937,
			"second_score":	124776
		}, {
			"file":	"ext/filter/filter.c",
			"line":	610,
			"primary_score":	999944,
			"second_score":	124775
		}, {
			"file":	"ext/filter/filter.c",
			"line":	611,
			"primary_score":	999977,
			"second_score":	124774
		}, {
			"file":	"ext/filter/filter.c",
			"line":	612,
			"primary_score":	999995,
			"second_score":	124751
		}, {
			"file":	"ext/filter/filter.c",
			"line":	615,
			"primary_score":	999977,
			"second_score":	124747
		}, {
			"file":	"ext/filter/filter.c",
			"line":	623,
			"primary_score":	999977,
			"second_score":	124727
		}, {
			"file":	"ext/filter/filter.c",
			"line":	635,
			"primary_score":	999937,
			"second_score":	124705
		}, {
			"file":	"ext/filter/filter.c",
			"line":	651,
			"primary_score":	999939,
			"second_score":	124704
		}, {
			"file":	"ext/filter/filter.c",
			"line":	664,
			"primary_score":	999939,
			"second_score":	124703
		}, {
			"file":	"ext/filter/filter.c",
			"line":	665,
			"primary_score":	999939,
			"second_score":	124383
		}, {
			"file":	"ext/filter/filter.c",
			"line":	681,
			"primary_score":	999993,
			"second_score":	125032
		}, {
			"file":	"ext/filter/filter.c",
			"line":	682,
			"primary_score":	999993,
			"second_score":	125031
		}, {
			"file":	"ext/filter/filter.c",
			"line":	683,
			"primary_score":	999993,
			"second_score":	125030
		}, {
			"file":	"ext/filter/filter.c",
			"line":	684,
			"primary_score":	999993,
			"second_score":	125029
		}, {
			"file":	"ext/filter/filter.c",
			"line":	685,
			"primary_score":	999993,
			"second_score":	125028
		}, {
			"file":	"ext/filter/filter.c",
			"line":	687,
			"primary_score":	999993,
			"second_score":	125027
		}, {
			"file":	"ext/filter/filter.c",
			"line":	691,
			"primary_score":	999993,
			"second_score":	125026
		}, {
			"file":	"ext/filter/filter.c",
			"line":	695,
			"primary_score":	999993,
			"second_score":	125025
		}, {
			"file":	"ext/filter/filter.c",
			"line":	696,
			"primary_score":	999993,
			"second_score":	125024
		}, {
			"file":	"ext/filter/filter.c",
			"line":	698,
			"primary_score":	999993,
			"second_score":	124922
		}, {
			"file":	"ext/filter/filter.c",
			"line":	699,
			"primary_score":	999993,
			"second_score":	124918
		}, {
			"file":	"ext/filter/filter.c",
			"line":	703,
			"primary_score":	999993,
			"second_score":	124092
		}, {
			"file":	"ext/filter/filter.c",
			"line":	708,
			"primary_score":	999993,
			"second_score":	124081
		}, {
			"file":	"ext/filter/filter.c",
			"line":	713,
			"primary_score":	999993,
			"second_score":	124080
		}, {
			"file":	"ext/filter/filter.c",
			"line":	714,
			"primary_score":	999997,
			"second_score":	124062
		}, {
			"file":	"ext/filter/filter.c",
			"line":	716,
			"primary_score":	999993,
			"second_score":	124876
		}, {
			"file":	"ext/filter/filter.c",
			"line":	718,
			"primary_score":	999993,
			"second_score":	124875
		}, {
			"file":	"ext/filter/filter.c",
			"line":	719,
			"primary_score":	999993,
			"second_score":	124792
		}, {
			"file":	"ext/filter/filter.c",
			"line":	721,
			"primary_score":	999993,
			"second_score":	124780
		}, {
			"file":	"ext/filter/filter.c",
			"line":	722,
			"primary_score":	999993,
			"second_score":	124382
		}, {
			"file":	"ext/filter/filter.c",
			"line":	864,
			"primary_score":	999994,
			"second_score":	125128
		}, {
			"file":	"ext/filter/filter.c",
			"line":	866,
			"primary_score":	999994,
			"second_score":	125127
		}, {
			"file":	"ext/filter/filter.c",
			"line":	867,
			"primary_score":	999999,
			"second_score":	126618
		}, {
			"file":	"ext/filter/filter.c",
			"line":	870,
			"primary_score":	999994,
			"second_score":	125034
		}, {
			"file":	"ext/filter/filter.c",
			"line":	877,
			"primary_score":	999994,
			"second_score":	125033
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	32,
			"primary_score":	999983,
			"second_score":	124535
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	33,
			"primary_score":	999983,
			"second_score":	124534
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	34,
			"primary_score":	999983,
			"second_score":	124533
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	35,
			"primary_score":	999983,
			"second_score":	124532
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	37,
			"primary_score":	999983,
			"second_score":	124531
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	41,
			"primary_score":	999983,
			"second_score":	124530
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	42,
			"primary_score":	999983,
			"second_score":	124420
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	48,
			"primary_score":	999985,
			"second_score":	124414
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	50,
			"primary_score":	999983,
			"second_score":	124411
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	53,
			"primary_score":	999983,
			"second_score":	124410
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	54,
			"primary_score":	999989,
			"second_score":	124405
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	55,
			"primary_score":	999983,
			"second_score":	124386
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	56,
			"primary_score":	999983,
			"second_score":	124385
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	112,
			"primary_score":	999981,
			"second_score":	124543
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	113,
			"primary_score":	999981,
			"second_score":	124542
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	116,
			"primary_score":	999981,
			"second_score":	124541
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	117,
			"primary_score":	999982,
			"second_score":	124540
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	271,
			"primary_score":	999993,
			"second_score":	124546
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	272,
			"primary_score":	999994,
			"second_score":	124545
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	274,
			"primary_score":	999994,
			"second_score":	124544
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	276,
			"primary_score":	999994,
			"second_score":	124539
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	279,
			"primary_score":	999994,
			"second_score":	124538
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	282,
			"primary_score":	999994,
			"second_score":	124537
		}, {
			"file":	"ext/filter/sanitizing_filters.c",
			"line":	286,
			"primary_score":	999994,
			"second_score":	124536
		}, {
			"file":	"ext/hash/hash.c",
			"line":	889,
			"primary_score":	999798,
			"second_score":	61001
		}, {
			"file":	"ext/hash/hash.c",
			"line":	891,
			"primary_score":	999798,
			"second_score":	60722
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	62328
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	290,
			"primary_score":	999798,
			"second_score":	62277
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	291,
			"primary_score":	999798,
			"second_score":	61594
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2852,
			"primary_score":	999798,
			"second_score":	62327
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2856,
			"primary_score":	999798,
			"second_score":	62278
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	579,
			"primary_score":	999798,
			"second_score":	54479
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	581,
			"primary_score":	999798,
			"second_score":	54478
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	583,
			"primary_score":	999798,
			"second_score":	54477
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	584,
			"primary_score":	999798,
			"second_score":	54476
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	585,
			"primary_score":	999798,
			"second_score":	54457
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	681,
			"primary_score":	999798,
			"second_score":	54481
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	688,
			"primary_score":	999798,
			"second_score":	54480
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	690,
			"primary_score":	999798,
			"second_score":	54456
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	697,
			"primary_score":	999798,
			"second_score":	119033
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	698,
			"primary_score":	999798,
			"second_score":	119032
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	699,
			"primary_score":	999798,
			"second_score":	119031
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	701,
			"primary_score":	999798,
			"second_score":	119030
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	702,
			"primary_score":	999798,
			"second_score":	119029
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	705,
			"primary_score":	999798,
			"second_score":	119028
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	709,
			"primary_score":	999798,
			"second_score":	119027
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	710,
			"primary_score":	999798,
			"second_score":	119023
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	715,
			"primary_score":	999798,
			"second_score":	119022
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	717,
			"primary_score":	999798,
			"second_score":	119021
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	113,
			"primary_score":	999798,
			"second_score":	55001
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	163,
			"primary_score":	999798,
			"second_score":	55629
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	165,
			"primary_score":	999798,
			"second_score":	55005
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	199,
			"primary_score":	999798,
			"second_score":	64847
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	64828
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	389,
			"primary_score":	999798,
			"second_score":	64748
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	390,
			"primary_score":	999798,
			"second_score":	64739
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	391,
			"primary_score":	999798,
			"second_score":	63399
		}, {
			"file":	"ext/pdo/pdo_sqlstate.c",
			"line":	309,
			"primary_score":	999798,
			"second_score":	64738
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	87,
			"primary_score":	999798,
			"second_score":	64848
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	88,
			"primary_score":	999798,
			"second_score":	64790
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1102,
			"primary_score":	999798,
			"second_score":	99177
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1104,
			"primary_score":	999798,
			"second_score":	99176
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1105,
			"primary_score":	999798,
			"second_score":	99151
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1106,
			"primary_score":	999798,
			"second_score":	99114
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1107,
			"primary_score":	999798,
			"second_score":	99087
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1108,
			"primary_score":	999798,
			"second_score":	99061
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1109,
			"primary_score":	999798,
			"second_score":	99034
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1110,
			"primary_score":	999798,
			"second_score":	99003
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1111,
			"primary_score":	999798,
			"second_score":	98974
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1112,
			"primary_score":	999798,
			"second_score":	98945
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1113,
			"primary_score":	999798,
			"second_score":	98917
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1114,
			"primary_score":	999798,
			"second_score":	98888
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1115,
			"primary_score":	999798,
			"second_score":	98859
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1116,
			"primary_score":	999798,
			"second_score":	98830
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1117,
			"primary_score":	999798,
			"second_score":	98801
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1118,
			"primary_score":	999798,
			"second_score":	98772
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1119,
			"primary_score":	999798,
			"second_score":	98744
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1120,
			"primary_score":	999798,
			"second_score":	98713
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1121,
			"primary_score":	999798,
			"second_score":	98682
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1122,
			"primary_score":	999798,
			"second_score":	98649
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1123,
			"primary_score":	999798,
			"second_score":	98624
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1124,
			"primary_score":	999798,
			"second_score":	98600
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1125,
			"primary_score":	999798,
			"second_score":	98570
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3332,
			"primary_score":	999798,
			"second_score":	149446
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3333,
			"primary_score":	999798,
			"second_score":	149445
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3334,
			"primary_score":	999798,
			"second_score":	149444
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3335,
			"primary_score":	999798,
			"second_score":	149443
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3337,
			"primary_score":	999798,
			"second_score":	149442
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3340,
			"primary_score":	999798,
			"second_score":	149441
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3389,
			"primary_score":	999798,
			"second_score":	149440
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3390,
			"primary_score":	999798,
			"second_score":	149434
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3391,
			"primary_score":	999798,
			"second_score":	149433
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3394,
			"primary_score":	999798,
			"second_score":	133892
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3396,
			"primary_score":	999798,
			"second_score":	133890
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3400,
			"primary_score":	999798,
			"second_score":	133889
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3404,
			"primary_score":	999798,
			"second_score":	133888
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3527,
			"primary_score":	999798,
			"second_score":	98562
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3557,
			"primary_score":	999798,
			"second_score":	99215
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3559,
			"primary_score":	999798,
			"second_score":	99178
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3561,
			"primary_score":	999798,
			"second_score":	98569
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3562,
			"primary_score":	999798,
			"second_score":	98568
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3570,
			"primary_score":	999798,
			"second_score":	98567
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3575,
			"primary_score":	999798,
			"second_score":	98566
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3617,
			"primary_score":	999798,
			"second_score":	119598
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3619,
			"primary_score":	999798,
			"second_score":	119597
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3621,
			"primary_score":	999798,
			"second_score":	119596
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3657,
			"primary_score":	999798,
			"second_score":	119595
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3658,
			"primary_score":	999798,
			"second_score":	119594
		}, {
			"file":	"ext/session/session.c",
			"line":	93,
			"primary_score":	999798,
			"second_score":	119531
		}, {
			"file":	"ext/session/session.c",
			"line":	98,
			"primary_score":	999798,
			"second_score":	119530
		}, {
			"file":	"ext/session/session.c",
			"line":	103,
			"primary_score":	999798,
			"second_score":	119529
		}, {
			"file":	"ext/session/session.c",
			"line":	1441,
			"primary_score":	999798,
			"second_score":	119533
		}, {
			"file":	"ext/session/session.c",
			"line":	1958,
			"primary_score":	999798,
			"second_score":	119535
		}, {
			"file":	"ext/session/session.c",
			"line":	1960,
			"primary_score":	999798,
			"second_score":	119534
		}, {
			"file":	"ext/session/session.c",
			"line":	1961,
			"primary_score":	999798,
			"second_score":	119532
		}, {
			"file":	"ext/session/session.c",
			"line":	1964,
			"primary_score":	999798,
			"second_score":	119528
		}, {
			"file":	"ext/session/session.c",
			"line":	1965,
			"primary_score":	999798,
			"second_score":	119522
		}, {
			"file":	"ext/session/session.c",
			"line":	1971,
			"primary_score":	999798,
			"second_score":	119521
		}, {
			"file":	"ext/session/session.c",
			"line":	2013,
			"primary_score":	999798,
			"second_score":	67307
		}, {
			"file":	"ext/session/session.c",
			"line":	2019,
			"primary_score":	999798,
			"second_score":	65875
		}, {
			"file":	"ext/session/session.c",
			"line":	2020,
			"primary_score":	999798,
			"second_score":	65874
		}, {
			"file":	"ext/session/session.c",
			"line":	2022,
			"primary_score":	999798,
			"second_score":	65873
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2600,
			"primary_score":	999798,
			"second_score":	98274
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2601,
			"primary_score":	999798,
			"second_score":	98273
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	1018,
			"primary_score":	999798,
			"second_score":	119517
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	1023,
			"primary_score":	999798,
			"second_score":	119516
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	1028,
			"primary_score":	999798,
			"second_score":	119515
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	1031,
			"primary_score":	999798,
			"second_score":	119514
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2140,
			"primary_score":	999798,
			"second_score":	56273
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2142,
			"primary_score":	999798,
			"second_score":	55664
		}, {
			"file":	"ext/standard/array.c",
			"line":	138,
			"primary_score":	999798,
			"second_score":	97852
		}, {
			"file":	"ext/standard/assert.c",
			"line":	114,
			"primary_score":	999798,
			"second_score":	97850
		}, {
			"file":	"ext/standard/assert.c",
			"line":	118,
			"primary_score":	999798,
			"second_score":	97849
		}, {
			"file":	"ext/standard/assert.c",
			"line":	124,
			"primary_score":	999798,
			"second_score":	119569
		}, {
			"file":	"ext/standard/assert.c",
			"line":	129,
			"primary_score":	999798,
			"second_score":	119568
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3470,
			"primary_score":	999798,
			"second_score":	98046
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3471,
			"primary_score":	999798,
			"second_score":	98045
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3472,
			"primary_score":	999798,
			"second_score":	98006
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3645,
			"primary_score":	999798,
			"second_score":	98050
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3653,
			"primary_score":	999798,
			"second_score":	98047
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3659,
			"primary_score":	999798,
			"second_score":	98005
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3661,
			"primary_score":	999798,
			"second_score":	97964
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3662,
			"primary_score":	999798,
			"second_score":	97926
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3665,
			"primary_score":	999798,
			"second_score":	97889
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3666,
			"primary_score":	999798,
			"second_score":	97853
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3667,
			"primary_score":	999798,
			"second_score":	97851
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3668,
			"primary_score":	999798,
			"second_score":	97848
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3669,
			"primary_score":	999798,
			"second_score":	96771
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3670,
			"primary_score":	999798,
			"second_score":	96768
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3675,
			"primary_score":	999798,
			"second_score":	96446
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3678,
			"primary_score":	999798,
			"second_score":	96443
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3726,
			"primary_score":	999798,
			"second_score":	119590
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3729,
			"primary_score":	999798,
			"second_score":	119589
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3730,
			"primary_score":	999798,
			"second_score":	119588
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3732,
			"primary_score":	999798,
			"second_score":	119587
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3735,
			"primary_score":	999798,
			"second_score":	119579
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3741,
			"primary_score":	999798,
			"second_score":	119578
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3746,
			"primary_score":	999798,
			"second_score":	119577
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3747,
			"primary_score":	999798,
			"second_score":	119575
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3752,
			"primary_score":	999798,
			"second_score":	119574
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3758,
			"primary_score":	999798,
			"second_score":	119570
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3759,
			"primary_score":	999798,
			"second_score":	119567
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3760,
			"primary_score":	999798,
			"second_score":	119556
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3765,
			"primary_score":	999798,
			"second_score":	119545
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3771,
			"primary_score":	999798,
			"second_score":	119544
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3773,
			"primary_score":	999798,
			"second_score":	119541
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3774,
			"primary_score":	999798,
			"second_score":	119540
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3775,
			"primary_score":	999798,
			"second_score":	119539
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4526,
			"primary_score":	999798,
			"second_score":	122727
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4527,
			"primary_score":	999798,
			"second_score":	122726
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4528,
			"primary_score":	999798,
			"second_score":	122725
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4530,
			"primary_score":	999798,
			"second_score":	122724
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4534,
			"primary_score":	999798,
			"second_score":	122657
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4536,
			"primary_score":	999798,
			"second_score":	122626
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4545,
			"primary_score":	999798,
			"second_score":	122625
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5006,
			"primary_score":	999798,
			"second_score":	119756
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5018,
			"primary_score":	999798,
			"second_score":	119008
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5024,
			"primary_score":	999798,
			"second_score":	119007
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	234,
			"primary_score":	999798,
			"second_score":	97888
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	235,
			"primary_score":	999798,
			"second_score":	97855
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	238,
			"primary_score":	999798,
			"second_score":	97854
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	130,
			"primary_score":	999798,
			"second_score":	96445
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	133,
			"primary_score":	999798,
			"second_score":	96444
		}, {
			"file":	"ext/standard/file.c",
			"line":	318,
			"primary_score":	999798,
			"second_score":	96770
		}, {
			"file":	"ext/standard/file.c",
			"line":	320,
			"primary_score":	999798,
			"second_score":	96769
		}, {
			"file":	"ext/standard/file.c",
			"line":	2342,
			"primary_score":	999798,
			"second_score":	122421
		}, {
			"file":	"ext/standard/file.c",
			"line":	2343,
			"primary_score":	999798,
			"second_score":	122420
		}, {
			"file":	"ext/standard/file.c",
			"line":	2344,
			"primary_score":	999798,
			"second_score":	122419
		}, {
			"file":	"ext/standard/file.c",
			"line":	2346,
			"primary_score":	999798,
			"second_score":	122418
		}, {
			"file":	"ext/standard/file.c",
			"line":	2350,
			"primary_score":	999798,
			"second_score":	122308
		}, {
			"file":	"ext/standard/file.c",
			"line":	2351,
			"primary_score":	999798,
			"second_score":	122063
		}, {
			"file":	"ext/standard/file.c",
			"line":	2360,
			"primary_score":	999798,
			"second_score":	122059
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	110,
			"primary_score":	999798,
			"second_score":	119573
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	114,
			"primary_score":	999798,
			"second_score":	119572
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	118,
			"primary_score":	999798,
			"second_score":	119571
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2148,
			"primary_score":	999798,
			"second_score":	96767
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2150,
			"primary_score":	999798,
			"second_score":	96766
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2151,
			"primary_score":	999798,
			"second_score":	96487
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2153,
			"primary_score":	999798,
			"second_score":	96447
		}, {
			"file":	"ext/standard/head.c",
			"line":	68,
			"primary_score":	999798,
			"second_score":	127174
		}, {
			"file":	"ext/standard/head.c",
			"line":	71,
			"primary_score":	999798,
			"second_score":	127073
		}, {
			"file":	"ext/standard/info.c",
			"line":	527,
			"primary_score":	999798,
			"second_score":	123943
		}, {
			"file":	"ext/standard/info.c",
			"line":	528,
			"primary_score":	999798,
			"second_score":	123942
		}, {
			"file":	"ext/standard/info.c",
			"line":	577,
			"primary_score":	999798,
			"second_score":	123941
		}, {
			"file":	"ext/standard/info.c",
			"line":	578,
			"primary_score":	999798,
			"second_score":	123940
		}, {
			"file":	"ext/standard/info.c",
			"line":	605,
			"primary_score":	999798,
			"second_score":	123939
		}, {
			"file":	"ext/standard/info.c",
			"line":	607,
			"primary_score":	999798,
			"second_score":	123938
		}, {
			"file":	"ext/standard/info.c",
			"line":	609,
			"primary_score":	999798,
			"second_score":	123937
		}, {
			"file":	"ext/standard/info.c",
			"line":	611,
			"primary_score":	999798,
			"second_score":	123936
		}, {
			"file":	"ext/standard/info.c",
			"line":	613,
			"primary_score":	999798,
			"second_score":	123935
		}, {
			"file":	"ext/standard/info.c",
			"line":	616,
			"primary_score":	999798,
			"second_score":	123934
		}, {
			"file":	"ext/standard/info.c",
			"line":	619,
			"primary_score":	999798,
			"second_score":	123233
		}, {
			"file":	"ext/standard/info.c",
			"line":	627,
			"primary_score":	999798,
			"second_score":	123232
		}, {
			"file":	"ext/standard/info.c",
			"line":	1153,
			"primary_score":	999798,
			"second_score":	124892
		}, {
			"file":	"ext/standard/info.c",
			"line":	1154,
			"primary_score":	999798,
			"second_score":	124891
		}, {
			"file":	"ext/standard/info.c",
			"line":	1156,
			"primary_score":	999798,
			"second_score":	124890
		}, {
			"file":	"ext/standard/info.c",
			"line":	1160,
			"primary_score":	999798,
			"second_score":	124852
		}, {
			"file":	"ext/standard/info.c",
			"line":	1161,
			"primary_score":	999798,
			"second_score":	124851
		}, {
			"file":	"ext/standard/info.c",
			"line":	1280,
			"primary_score":	999798,
			"second_score":	123986
		}, {
			"file":	"ext/standard/info.c",
			"line":	1281,
			"primary_score":	999798,
			"second_score":	123985
		}, {
			"file":	"ext/standard/info.c",
			"line":	1283,
			"primary_score":	999798,
			"second_score":	123984
		}, {
			"file":	"ext/standard/info.c",
			"line":	1286,
			"primary_score":	999798,
			"second_score":	123946
		}, {
			"file":	"ext/standard/info.c",
			"line":	1295,
			"primary_score":	999798,
			"second_score":	120873
		}, {
			"file":	"ext/standard/info.c",
			"line":	1299,
			"primary_score":	999798,
			"second_score":	120840
		}, {
			"file":	"ext/standard/info.c",
			"line":	1302,
			"primary_score":	999798,
			"second_score":	120839
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	162,
			"primary_score":	999798,
			"second_score":	153726
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	163,
			"primary_score":	999798,
			"second_score":	153725
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	164,
			"primary_score":	999798,
			"second_score":	153724
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	165,
			"primary_score":	999798,
			"second_score":	153723
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	166,
			"primary_score":	999798,
			"second_score":	153722
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	167,
			"primary_score":	999798,
			"second_score":	153721
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	169,
			"primary_score":	999798,
			"second_score":	153720
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	170,
			"primary_score":	999798,
			"second_score":	153719
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	173,
			"primary_score":	999798,
			"second_score":	153718
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	192,
			"primary_score":	999798,
			"second_score":	153717
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	153716
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	205,
			"primary_score":	999798,
			"second_score":	153715
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	215,
			"primary_score":	999798,
			"second_score":	153714
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	234,
			"primary_score":	999798,
			"second_score":	153713
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	247,
			"primary_score":	999798,
			"second_score":	153712
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	248,
			"primary_score":	999798,
			"second_score":	153711
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	249,
			"primary_score":	999798,
			"second_score":	153699
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	250,
			"primary_score":	999798,
			"second_score":	153698
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	153697
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	254,
			"primary_score":	999798,
			"second_score":	153696
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	255,
			"primary_score":	999798,
			"second_score":	153695
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	336,
			"primary_score":	999798,
			"second_score":	153694
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	342,
			"primary_score":	999798,
			"second_score":	153693
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	343,
			"primary_score":	999798,
			"second_score":	153692
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	344,
			"primary_score":	999798,
			"second_score":	153691
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	345,
			"primary_score":	999798,
			"second_score":	153690
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	355,
			"primary_score":	999798,
			"second_score":	153688
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	356,
			"primary_score":	999798,
			"second_score":	153687
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	364,
			"primary_score":	999798,
			"second_score":	153237
		}, {
			"file":	"ext/standard/string.c",
			"line":	1058,
			"primary_score":	999798,
			"second_score":	123171
		}, {
			"file":	"ext/standard/string.c",
			"line":	1059,
			"primary_score":	999798,
			"second_score":	123170
		}, {
			"file":	"ext/standard/string.c",
			"line":	1060,
			"primary_score":	999798,
			"second_score":	123169
		}, {
			"file":	"ext/standard/string.c",
			"line":	1061,
			"primary_score":	999798,
			"second_score":	123168
		}, {
			"file":	"ext/standard/string.c",
			"line":	1062,
			"primary_score":	999798,
			"second_score":	123167
		}, {
			"file":	"ext/standard/string.c",
			"line":	1063,
			"primary_score":	999798,
			"second_score":	123166
		}, {
			"file":	"ext/standard/string.c",
			"line":	1065,
			"primary_score":	999798,
			"second_score":	123165
		}, {
			"file":	"ext/standard/string.c",
			"line":	1067,
			"primary_score":	999798,
			"second_score":	123162
		}, {
			"file":	"ext/standard/string.c",
			"line":	1071,
			"primary_score":	999798,
			"second_score":	123161
		}, {
			"file":	"ext/standard/string.c",
			"line":	1073,
			"primary_score":	999798,
			"second_score":	123157
		}, {
			"file":	"ext/standard/string.c",
			"line":	1074,
			"primary_score":	999798,
			"second_score":	122148
		}, {
			"file":	"ext/standard/string.c",
			"line":	1076,
			"primary_score":	999798,
			"second_score":	123145
		}, {
			"file":	"ext/standard/string.c",
			"line":	1077,
			"primary_score":	999798,
			"second_score":	122139
		}, {
			"file":	"ext/standard/string.c",
			"line":	1124,
			"primary_score":	999798,
			"second_score":	122138
		}, {
			"file":	"ext/standard/string.c",
			"line":	1125,
			"primary_score":	999798,
			"second_score":	122169
		}, {
			"file":	"ext/standard/string.c",
			"line":	1127,
			"primary_score":	999798,
			"second_score":	122137
		}, {
			"file":	"ext/standard/string.c",
			"line":	1129,
			"primary_score":	999798,
			"second_score":	122126
		}, {
			"file":	"ext/standard/string.c",
			"line":	1131,
			"primary_score":	999798,
			"second_score":	122123
		}, {
			"file":	"ext/standard/string.c",
			"line":	1132,
			"primary_score":	999798,
			"second_score":	122122
		}, {
			"file":	"ext/standard/string.c",
			"line":	1144,
			"primary_score":	999798,
			"second_score":	123272
		}, {
			"file":	"ext/standard/string.c",
			"line":	1146,
			"primary_score":	999798,
			"second_score":	123271
		}, {
			"file":	"ext/standard/string.c",
			"line":	1150,
			"primary_score":	999798,
			"second_score":	123179
		}, {
			"file":	"ext/standard/string.c",
			"line":	1163,
			"primary_score":	999798,
			"second_score":	123178
		}, {
			"file":	"ext/standard/string.c",
			"line":	1167,
			"primary_score":	999798,
			"second_score":	123177
		}, {
			"file":	"ext/standard/string.c",
			"line":	1168,
			"primary_score":	999798,
			"second_score":	123176
		}, {
			"file":	"ext/standard/string.c",
			"line":	1169,
			"primary_score":	999798,
			"second_score":	123175
		}, {
			"file":	"ext/standard/string.c",
			"line":	1170,
			"primary_score":	999798,
			"second_score":	123173
		}, {
			"file":	"ext/standard/string.c",
			"line":	1177,
			"primary_score":	999798,
			"second_score":	123172
		}, {
			"file":	"ext/standard/string.c",
			"line":	1179,
			"primary_score":	999798,
			"second_score":	122113
		}, {
			"file":	"ext/standard/string.c",
			"line":	3571,
			"primary_score":	999798,
			"second_score":	120419
		}, {
			"file":	"ext/standard/string.c",
			"line":	3574,
			"primary_score":	999798,
			"second_score":	120418
		}, {
			"file":	"ext/standard/string.c",
			"line":	3575,
			"primary_score":	999798,
			"second_score":	120417
		}, {
			"file":	"ext/standard/string.c",
			"line":	3578,
			"primary_score":	999798,
			"second_score":	120416
		}, {
			"file":	"ext/standard/string.c",
			"line":	3579,
			"primary_score":	999798,
			"second_score":	120371
		}, {
			"file":	"ext/standard/string.c",
			"line":	3580,
			"primary_score":	999798,
			"second_score":	120370
		}, {
			"file":	"ext/standard/string.c",
			"line":	3581,
			"primary_score":	999798,
			"second_score":	120369
		}, {
			"file":	"ext/standard/string.c",
			"line":	3582,
			"primary_score":	999798,
			"second_score":	120335
		}, {
			"file":	"ext/standard/string.c",
			"line":	3682,
			"primary_score":	999798,
			"second_score":	120564
		}, {
			"file":	"ext/standard/string.c",
			"line":	3683,
			"primary_score":	999798,
			"second_score":	120563
		}, {
			"file":	"ext/standard/string.c",
			"line":	3684,
			"primary_score":	999798,
			"second_score":	120562
		}, {
			"file":	"ext/standard/string.c",
			"line":	3685,
			"primary_score":	999798,
			"second_score":	120561
		}, {
			"file":	"ext/standard/string.c",
			"line":	3686,
			"primary_score":	999798,
			"second_score":	120560
		}, {
			"file":	"ext/standard/string.c",
			"line":	3687,
			"primary_score":	999798,
			"second_score":	120559
		}, {
			"file":	"ext/standard/string.c",
			"line":	3688,
			"primary_score":	999798,
			"second_score":	120558
		}, {
			"file":	"ext/standard/string.c",
			"line":	3690,
			"primary_score":	999798,
			"second_score":	120557
		}, {
			"file":	"ext/standard/string.c",
			"line":	3694,
			"primary_score":	999798,
			"second_score":	120435
		}, {
			"file":	"ext/standard/string.c",
			"line":	3695,
			"primary_score":	999798,
			"second_score":	120432
		}, {
			"file":	"ext/standard/string.c",
			"line":	3696,
			"primary_score":	999798,
			"second_score":	120429
		}, {
			"file":	"ext/standard/string.c",
			"line":	3699,
			"primary_score":	999798,
			"second_score":	120426
		}, {
			"file":	"ext/standard/string.c",
			"line":	3700,
			"primary_score":	999798,
			"second_score":	120425
		}, {
			"file":	"ext/standard/string.c",
			"line":	3701,
			"primary_score":	999798,
			"second_score":	120423
		}, {
			"file":	"ext/standard/string.c",
			"line":	3707,
			"primary_score":	999798,
			"second_score":	120421
		}, {
			"file":	"ext/standard/string.c",
			"line":	3738,
			"primary_score":	999798,
			"second_score":	120420
		}, {
			"file":	"ext/standard/string.c",
			"line":	3740,
			"primary_score":	999798,
			"second_score":	120334
		}, {
			"file":	"ext/standard/string.c",
			"line":	3751,
			"primary_score":	999798,
			"second_score":	120565
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	121,
			"primary_score":	999798,
			"second_score":	98049
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	125,
			"primary_score":	999798,
			"second_score":	98048
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1083,
			"primary_score":	999798,
			"second_score":	97847
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1085,
			"primary_score":	999798,
			"second_score":	96772
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1097,
			"primary_score":	999798,
			"second_score":	119566
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1102,
			"primary_score":	999798,
			"second_score":	119565
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1103,
			"primary_score":	999798,
			"second_score":	119561
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1105,
			"primary_score":	999798,
			"second_score":	119557
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	129,
			"primary_score":	999798,
			"second_score":	119543
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	135,
			"primary_score":	999798,
			"second_score":	119542
		}, {
			"file":	"ext/standard/var.c",
			"line":	40,
			"primary_score":	999972,
			"second_score":	121413
		}, {
			"file":	"ext/standard/var.c",
			"line":	42,
			"primary_score":	999972,
			"second_score":	121412
		}, {
			"file":	"ext/standard/var.c",
			"line":	44,
			"primary_score":	999972,
			"second_score":	121411
		}, {
			"file":	"ext/standard/var.c",
			"line":	47,
			"primary_score":	999991,
			"second_score":	121410
		}, {
			"file":	"ext/standard/var.c",
			"line":	48,
			"primary_score":	999991,
			"second_score":	121193
		}, {
			"file":	"ext/standard/var.c",
			"line":	49,
			"primary_score":	999991,
			"second_score":	121144
		}, {
			"file":	"ext/standard/var.c",
			"line":	51,
			"primary_score":	999972,
			"second_score":	120949
		}, {
			"file":	"ext/standard/var.c",
			"line":	52,
			"primary_score":	999972,
			"second_score":	120518
		}, {
			"file":	"ext/standard/var.c",
			"line":	89,
			"primary_score":	999833,
			"second_score":	120948
		}, {
			"file":	"ext/standard/var.c",
			"line":	90,
			"primary_score":	999833,
			"second_score":	120947
		}, {
			"file":	"ext/standard/var.c",
			"line":	91,
			"primary_score":	999833,
			"second_score":	120946
		}, {
			"file":	"ext/standard/var.c",
			"line":	92,
			"primary_score":	999833,
			"second_score":	120945
		}, {
			"file":	"ext/standard/var.c",
			"line":	93,
			"primary_score":	999833,
			"second_score":	120944
		}, {
			"file":	"ext/standard/var.c",
			"line":	95,
			"primary_score":	999833,
			"second_score":	120943
		}, {
			"file":	"ext/standard/var.c",
			"line":	96,
			"primary_score":	999972,
			"second_score":	120942
		}, {
			"file":	"ext/standard/var.c",
			"line":	99,
			"primary_score":	999833,
			"second_score":	120747
		}, {
			"file":	"ext/standard/var.c",
			"line":	105,
			"primary_score":	999960,
			"second_score":	120519
		}, {
			"file":	"ext/standard/var.c",
			"line":	114,
			"primary_score":	999927,
			"second_score":	121525
		}, {
			"file":	"ext/standard/var.c",
			"line":	115,
			"primary_score":	999927,
			"second_score":	121476
		}, {
			"file":	"ext/standard/var.c",
			"line":	116,
			"primary_score":	999927,
			"second_score":	121425
		}, {
			"file":	"ext/standard/var.c",
			"line":	119,
			"primary_score":	999972,
			"second_score":	122877
		}, {
			"file":	"ext/standard/var.c",
			"line":	124,
			"primary_score":	999972,
			"second_score":	122876
		}, {
			"file":	"ext/standard/var.c",
			"line":	125,
			"primary_score":	999972,
			"second_score":	122542
		}, {
			"file":	"ext/standard/var.c",
			"line":	126,
			"primary_score":	999972,
			"second_score":	122541
		}, {
			"file":	"ext/standard/var.c",
			"line":	127,
			"primary_score":	999972,
			"second_score":	122540
		}, {
			"file":	"ext/standard/var.c",
			"line":	146,
			"primary_score":	999972,
			"second_score":	122539
		}, {
			"file":	"ext/standard/var.c",
			"line":	147,
			"primary_score":	999972,
			"second_score":	120510
		}, {
			"file":	"ext/standard/var.c",
			"line":	148,
			"primary_score":	999972,
			"second_score":	120509
		}, {
			"file":	"ext/standard/var.c",
			"line":	153,
			"primary_score":	999972,
			"second_score":	120508
		}, {
			"file":	"ext/standard/var.c",
			"line":	156,
			"primary_score":	999972,
			"second_score":	120507
		}, {
			"file":	"ext/standard/var.c",
			"line":	157,
			"primary_score":	999972,
			"second_score":	120456
		}, {
			"file":	"ext/standard/var.c",
			"line":	174,
			"primary_score":	999833,
			"second_score":	123212
		}, {
			"file":	"ext/standard/var.c",
			"line":	175,
			"primary_score":	999833,
			"second_score":	123211
		}, {
			"file":	"ext/standard/var.c",
			"line":	176,
			"primary_score":	999833,
			"second_score":	123210
		}, {
			"file":	"ext/standard/var.c",
			"line":	178,
			"primary_score":	999833,
			"second_score":	123209
		}, {
			"file":	"ext/standard/var.c",
			"line":	182,
			"primary_score":	999833,
			"second_score":	123122
		}, {
			"file":	"ext/standard/var.c",
			"line":	183,
			"primary_score":	999833,
			"second_score":	122885
		}, {
			"file":	"ext/standard/var.c",
			"line":	185,
			"primary_score":	999833,
			"second_score":	120455
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1378,
			"primary_score":	999798,
			"second_score":	101060
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1379,
			"primary_score":	999798,
			"second_score":	100967
		}, {
			"file":	"ext/xmlwriter/php_xmlwriter.c",
			"line":	1972,
			"primary_score":	999798,
			"second_score":	103750
		}, {
			"file":	"main/SAPI.c",
			"line":	69,
			"primary_score":	999798,
			"second_score":	3134
		}, {
			"file":	"main/SAPI.c",
			"line":	104,
			"primary_score":	999798,
			"second_score":	3135
		}, {
			"file":	"main/SAPI.c",
			"line":	107,
			"primary_score":	999798,
			"second_score":	3113
		}, {
			"file":	"main/SAPI.c",
			"line":	109,
			"primary_score":	999798,
			"second_score":	3112
		}, {
			"file":	"main/SAPI.c",
			"line":	119,
			"primary_score":	999798,
			"second_score":	127103
		}, {
			"file":	"main/SAPI.c",
			"line":	286,
			"primary_score":	999798,
			"second_score":	127166
		}, {
			"file":	"main/SAPI.c",
			"line":	287,
			"primary_score":	999798,
			"second_score":	127165
		}, {
			"file":	"main/SAPI.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	127164
		}, {
			"file":	"main/SAPI.c",
			"line":	290,
			"primary_score":	999798,
			"second_score":	127163
		}, {
			"file":	"main/SAPI.c",
			"line":	291,
			"primary_score":	999798,
			"second_score":	127162
		}, {
			"file":	"main/SAPI.c",
			"line":	296,
			"primary_score":	999798,
			"second_score":	127161
		}, {
			"file":	"main/SAPI.c",
			"line":	297,
			"primary_score":	999798,
			"second_score":	127160
		}, {
			"file":	"main/SAPI.c",
			"line":	298,
			"primary_score":	999798,
			"second_score":	127159
		}, {
			"file":	"main/SAPI.c",
			"line":	304,
			"primary_score":	999798,
			"second_score":	127158
		}, {
			"file":	"main/SAPI.c",
			"line":	316,
			"primary_score":	999798,
			"second_score":	127157
		}, {
			"file":	"main/SAPI.c",
			"line":	317,
			"primary_score":	999798,
			"second_score":	127156
		}, {
			"file":	"main/SAPI.c",
			"line":	318,
			"primary_score":	999798,
			"second_score":	127134
		}, {
			"file":	"main/SAPI.c",
			"line":	320,
			"primary_score":	999798,
			"second_score":	127133
		}, {
			"file":	"main/SAPI.c",
			"line":	482,
			"primary_score":	999798,
			"second_score":	113660
		}, {
			"file":	"main/SAPI.c",
			"line":	490,
			"primary_score":	999798,
			"second_score":	113701
		}, {
			"file":	"main/SAPI.c",
			"line":	491,
			"primary_score":	999798,
			"second_score":	113697
		}, {
			"file":	"main/SAPI.c",
			"line":	494,
			"primary_score":	999798,
			"second_score":	113696
		}, {
			"file":	"main/SAPI.c",
			"line":	496,
			"primary_score":	999798,
			"second_score":	113695
		}, {
			"file":	"main/SAPI.c",
			"line":	507,
			"primary_score":	999798,
			"second_score":	113694
		}, {
			"file":	"main/SAPI.c",
			"line":	510,
			"primary_score":	999798,
			"second_score":	113693
		}, {
			"file":	"main/SAPI.c",
			"line":	513,
			"primary_score":	999798,
			"second_score":	113692
		}, {
			"file":	"main/SAPI.c",
			"line":	516,
			"primary_score":	999798,
			"second_score":	113691
		}, {
			"file":	"main/SAPI.c",
			"line":	519,
			"primary_score":	999798,
			"second_score":	113690
		}, {
			"file":	"main/SAPI.c",
			"line":	522,
			"primary_score":	999798,
			"second_score":	113689
		}, {
			"file":	"main/SAPI.c",
			"line":	525,
			"primary_score":	999798,
			"second_score":	113688
		}, {
			"file":	"main/SAPI.c",
			"line":	526,
			"primary_score":	999798,
			"second_score":	113687
		}, {
			"file":	"main/SAPI.c",
			"line":	528,
			"primary_score":	999798,
			"second_score":	113683
		}, {
			"file":	"main/SAPI.c",
			"line":	531,
			"primary_score":	999798,
			"second_score":	113682
		}, {
			"file":	"main/SAPI.c",
			"line":	532,
			"primary_score":	999798,
			"second_score":	113681
		}, {
			"file":	"main/SAPI.c",
			"line":	533,
			"primary_score":	999798,
			"second_score":	113662
		}, {
			"file":	"main/SAPI.c",
			"line":	535,
			"primary_score":	999798,
			"second_score":	113661
		}, {
			"file":	"main/SAPI.c",
			"line":	536,
			"primary_score":	999798,
			"second_score":	113659
		}, {
			"file":	"main/SAPI.c",
			"line":	537,
			"primary_score":	999798,
			"second_score":	113658
		}, {
			"file":	"main/SAPI.c",
			"line":	538,
			"primary_score":	999798,
			"second_score":	113657
		}, {
			"file":	"main/SAPI.c",
			"line":	539,
			"primary_score":	999798,
			"second_score":	113656
		}, {
			"file":	"main/SAPI.c",
			"line":	608,
			"primary_score":	999798,
			"second_score":	127106
		}, {
			"file":	"main/SAPI.c",
			"line":	623,
			"primary_score":	999798,
			"second_score":	127104
		}, {
			"file":	"main/SAPI.c",
			"line":	812,
			"primary_score":	999798,
			"second_score":	119618
		}, {
			"file":	"main/SAPI.c",
			"line":	813,
			"primary_score":	999798,
			"second_score":	119617
		}, {
			"file":	"main/SAPI.c",
			"line":	815,
			"primary_score":	999798,
			"second_score":	119616
		}, {
			"file":	"main/SAPI.c",
			"line":	816,
			"primary_score":	999798,
			"second_score":	119615
		}, {
			"file":	"main/SAPI.c",
			"line":	822,
			"primary_score":	999798,
			"second_score":	127170
		}, {
			"file":	"main/SAPI.c",
			"line":	823,
			"primary_score":	999798,
			"second_score":	127169
		}, {
			"file":	"main/SAPI.c",
			"line":	824,
			"primary_score":	999798,
			"second_score":	127168
		}, {
			"file":	"main/SAPI.c",
			"line":	826,
			"primary_score":	999798,
			"second_score":	127167
		}, {
			"file":	"main/SAPI.c",
			"line":	827,
			"primary_score":	999798,
			"second_score":	127132
		}, {
			"file":	"main/SAPI.c",
			"line":	828,
			"primary_score":	999798,
			"second_score":	127131
		}, {
			"file":	"main/SAPI.c",
			"line":	829,
			"primary_score":	999798,
			"second_score":	127109
		}, {
			"file":	"main/SAPI.c",
			"line":	830,
			"primary_score":	999798,
			"second_score":	127108
		}, {
			"file":	"main/SAPI.c",
			"line":	831,
			"primary_score":	999798,
			"second_score":	127107
		}, {
			"file":	"main/SAPI.c",
			"line":	832,
			"primary_score":	999798,
			"second_score":	127084
		}, {
			"file":	"main/SAPI.c",
			"line":	835,
			"primary_score":	999798,
			"second_score":	127083
		}, {
			"file":	"main/SAPI.c",
			"line":	840,
			"primary_score":	999798,
			"second_score":	127082
		}, {
			"file":	"main/SAPI.c",
			"line":	842,
			"primary_score":	999798,
			"second_score":	127081
		}, {
			"file":	"main/SAPI.c",
			"line":	843,
			"primary_score":	999798,
			"second_score":	127080
		}, {
			"file":	"main/SAPI.c",
			"line":	848,
			"primary_score":	999798,
			"second_score":	127078
		}, {
			"file":	"main/SAPI.c",
			"line":	851,
			"primary_score":	999798,
			"second_score":	127077
		}, {
			"file":	"main/SAPI.c",
			"line":	882,
			"primary_score":	999798,
			"second_score":	127076
		}, {
			"file":	"main/SAPI.c",
			"line":	884,
			"primary_score":	999798,
			"second_score":	127074
		}, {
			"file":	"main/SAPI.c",
			"line":	953,
			"primary_score":	999798,
			"second_score":	103794
		}, {
			"file":	"main/SAPI.c",
			"line":	954,
			"primary_score":	999798,
			"second_score":	103793
		}, {
			"file":	"main/SAPI.c",
			"line":	955,
			"primary_score":	999798,
			"second_score":	103791
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	736,
			"primary_score":	999798,
			"second_score":	152731
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	744,
			"primary_score":	999798,
			"second_score":	152730
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	745,
			"primary_score":	999798,
			"second_score":	152729
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	746,
			"primary_score":	999798,
			"second_score":	152728
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	748,
			"primary_score":	999798,
			"second_score":	152727
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	750,
			"primary_score":	999798,
			"second_score":	152726
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	751,
			"primary_score":	999798,
			"second_score":	152725
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	785,
			"primary_score":	999798,
			"second_score":	152724
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	786,
			"primary_score":	999798,
			"second_score":	152723
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	788,
			"primary_score":	999798,
			"second_score":	152722
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	793,
			"primary_score":	999798,
			"second_score":	149978
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	794,
			"primary_score":	999798,
			"second_score":	149977
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	795,
			"primary_score":	999798,
			"second_score":	149976
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	796,
			"primary_score":	999798,
			"second_score":	149975
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	800,
			"primary_score":	999798,
			"second_score":	149974
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	802,
			"primary_score":	999798,
			"second_score":	149973
		}, {
			"file":	"main/main.c",
			"line":	591,
			"primary_score":	999814,
			"second_score":	120745
		}, {
			"file":	"main/main.c",
			"line":	592,
			"primary_score":	999814,
			"second_score":	120744
		}, {
			"file":	"main/main.c",
			"line":	593,
			"primary_score":	999814,
			"second_score":	120743
		}, {
			"file":	"main/main.c",
			"line":	594,
			"primary_score":	999814,
			"second_score":	120742
		}, {
			"file":	"main/main.c",
			"line":	595,
			"primary_score":	999814,
			"second_score":	120741
		}, {
			"file":	"main/main.c",
			"line":	597,
			"primary_score":	999814,
			"second_score":	120740
		}, {
			"file":	"main/main.c",
			"line":	598,
			"primary_score":	999814,
			"second_score":	120739
		}, {
			"file":	"main/main.c",
			"line":	599,
			"primary_score":	999814,
			"second_score":	120589
		}, {
			"file":	"main/main.c",
			"line":	600,
			"primary_score":	999814,
			"second_score":	120540
		}, {
			"file":	"main/main.c",
			"line":	601,
			"primary_score":	999814,
			"second_score":	120521
		}, {
			"file":	"main/main.c",
			"line":	603,
			"primary_score":	999814,
			"second_score":	120520
		}, {
			"file":	"main/main.c",
			"line":	857,
			"primary_score":	999917,
			"second_score":	128683
		}, {
			"file":	"main/main.c",
			"line":	858,
			"primary_score":	999917,
			"second_score":	128682
		}, {
			"file":	"main/main.c",
			"line":	859,
			"primary_score":	999917,
			"second_score":	128681
		}, {
			"file":	"main/main.c",
			"line":	861,
			"primary_score":	999917,
			"second_score":	128680
		}, {
			"file":	"main/main.c",
			"line":	864,
			"primary_score":	999917,
			"second_score":	127948
		}, {
			"file":	"main/main.c",
			"line":	876,
			"primary_score":	999917,
			"second_score":	127947
		}, {
			"file":	"main/main.c",
			"line":	880,
			"primary_score":	999917,
			"second_score":	127946
		}, {
			"file":	"main/main.c",
			"line":	881,
			"primary_score":	999917,
			"second_score":	127945
		}, {
			"file":	"main/main.c",
			"line":	885,
			"primary_score":	999917,
			"second_score":	127944
		}, {
			"file":	"main/main.c",
			"line":	889,
			"primary_score":	999917,
			"second_score":	127943
		}, {
			"file":	"main/main.c",
			"line":	892,
			"primary_score":	999917,
			"second_score":	127942
		}, {
			"file":	"main/main.c",
			"line":	893,
			"primary_score":	999917,
			"second_score":	127941
		}, {
			"file":	"main/main.c",
			"line":	894,
			"primary_score":	999917,
			"second_score":	127940
		}, {
			"file":	"main/main.c",
			"line":	895,
			"primary_score":	999917,
			"second_score":	127939
		}, {
			"file":	"main/main.c",
			"line":	899,
			"primary_score":	999917,
			"second_score":	127938
		}, {
			"file":	"main/main.c",
			"line":	930,
			"primary_score":	999917,
			"second_score":	127937
		}, {
			"file":	"main/main.c",
			"line":	932,
			"primary_score":	999919,
			"second_score":	127936
		}, {
			"file":	"main/main.c",
			"line":	934,
			"primary_score":	999919,
			"second_score":	127935
		}, {
			"file":	"main/main.c",
			"line":	949,
			"primary_score":	999950,
			"second_score":	127934
		}, {
			"file":	"main/main.c",
			"line":	969,
			"primary_score":	999919,
			"second_score":	127933
		}, {
			"file":	"main/main.c",
			"line":	981,
			"primary_score":	999919,
			"second_score":	127932
		}, {
			"file":	"main/main.c",
			"line":	982,
			"primary_score":	999919,
			"second_score":	127931
		}, {
			"file":	"main/main.c",
			"line":	985,
			"primary_score":	999919,
			"second_score":	127930
		}, {
			"file":	"main/main.c",
			"line":	986,
			"primary_score":	999919,
			"second_score":	127885
		}, {
			"file":	"main/main.c",
			"line":	988,
			"primary_score":	999919,
			"second_score":	127843
		}, {
			"file":	"main/main.c",
			"line":	999,
			"primary_score":	999922,
			"second_score":	127834
		}, {
			"file":	"main/main.c",
			"line":	1009,
			"primary_score":	999919,
			"second_score":	127830
		}, {
			"file":	"main/main.c",
			"line":	1035,
			"primary_score":	999917,
			"second_score":	127011
		}, {
			"file":	"main/main.c",
			"line":	1073,
			"primary_score":	999917,
			"second_score":	127010
		}, {
			"file":	"main/main.c",
			"line":	1078,
			"primary_score":	999917,
			"second_score":	127009
		}, {
			"file":	"main/main.c",
			"line":	1079,
			"primary_score":	999917,
			"second_score":	127008
		}, {
			"file":	"main/main.c",
			"line":	1082,
			"primary_score":	999917,
			"second_score":	127007
		}, {
			"file":	"main/main.c",
			"line":	1083,
			"primary_score":	999919,
			"second_score":	127006
		}, {
			"file":	"main/main.c",
			"line":	1084,
			"primary_score":	999919,
			"second_score":	127005
		}, {
			"file":	"main/main.c",
			"line":	1085,
			"primary_score":	999919,
			"second_score":	126897
		}, {
			"file":	"main/main.c",
			"line":	1086,
			"primary_score":	999919,
			"second_score":	126785
		}, {
			"file":	"main/main.c",
			"line":	1090,
			"primary_score":	999917,
			"second_score":	126642
		}, {
			"file":	"main/main.c",
			"line":	1601,
			"primary_score":	999798,
			"second_score":	119775
		}, {
			"file":	"main/main.c",
			"line":	1602,
			"primary_score":	999798,
			"second_score":	119774
		}, {
			"file":	"main/main.c",
			"line":	1604,
			"primary_score":	999798,
			"second_score":	119773
		}, {
			"file":	"main/main.c",
			"line":	1609,
			"primary_score":	999798,
			"second_score":	119772
		}, {
			"file":	"main/main.c",
			"line":	1610,
			"primary_score":	999798,
			"second_score":	119771
		}, {
			"file":	"main/main.c",
			"line":	1612,
			"primary_score":	999798,
			"second_score":	119770
		}, {
			"file":	"main/main.c",
			"line":	1615,
			"primary_score":	999798,
			"second_score":	119763
		}, {
			"file":	"main/main.c",
			"line":	1616,
			"primary_score":	999798,
			"second_score":	119757
		}, {
			"file":	"main/main.c",
			"line":	1617,
			"primary_score":	999798,
			"second_score":	119755
		}, {
			"file":	"main/main.c",
			"line":	1620,
			"primary_score":	999798,
			"second_score":	119753
		}, {
			"file":	"main/main.c",
			"line":	1621,
			"primary_score":	999798,
			"second_score":	119747
		}, {
			"file":	"main/main.c",
			"line":	1622,
			"primary_score":	999798,
			"second_score":	119645
		}, {
			"file":	"main/main.c",
			"line":	1625,
			"primary_score":	999798,
			"second_score":	119643
		}, {
			"file":	"main/main.c",
			"line":	1626,
			"primary_score":	999798,
			"second_score":	119637
		}, {
			"file":	"main/main.c",
			"line":	1628,
			"primary_score":	999798,
			"second_score":	119636
		}, {
			"file":	"main/main.c",
			"line":	1634,
			"primary_score":	999798,
			"second_score":	119635
		}, {
			"file":	"main/main.c",
			"line":	1637,
			"primary_score":	999798,
			"second_score":	119634
		}, {
			"file":	"main/main.c",
			"line":	1639,
			"primary_score":	999798,
			"second_score":	119632
		}, {
			"file":	"main/main.c",
			"line":	1640,
			"primary_score":	999798,
			"second_score":	119627
		}, {
			"file":	"main/main.c",
			"line":	1643,
			"primary_score":	999798,
			"second_score":	119625
		}, {
			"file":	"main/main.c",
			"line":	1644,
			"primary_score":	999798,
			"second_score":	119619
		}, {
			"file":	"main/main.c",
			"line":	1645,
			"primary_score":	999798,
			"second_score":	119614
		}, {
			"file":	"main/main.c",
			"line":	1648,
			"primary_score":	999798,
			"second_score":	119612
		}, {
			"file":	"main/main.c",
			"line":	1649,
			"primary_score":	999798,
			"second_score":	119611
		}, {
			"file":	"main/main.c",
			"line":	1650,
			"primary_score":	999798,
			"second_score":	119009
		}, {
			"file":	"main/main.c",
			"line":	1654,
			"primary_score":	999798,
			"second_score":	119006
		}, {
			"file":	"main/main.c",
			"line":	1655,
			"primary_score":	999798,
			"second_score":	119000
		}, {
			"file":	"main/main.c",
			"line":	1657,
			"primary_score":	999798,
			"second_score":	118999
		}, {
			"file":	"main/main.c",
			"line":	1658,
			"primary_score":	999798,
			"second_score":	118859
		}, {
			"file":	"main/main.c",
			"line":	1659,
			"primary_score":	999798,
			"second_score":	118858
		}, {
			"file":	"main/main.c",
			"line":	1662,
			"primary_score":	999798,
			"second_score":	118824
		}, {
			"file":	"main/main.c",
			"line":	1665,
			"primary_score":	999798,
			"second_score":	118822
		}, {
			"file":	"main/main.c",
			"line":	1666,
			"primary_score":	999917,
			"second_score":	118821
		}, {
			"file":	"main/main.c",
			"line":	1667,
			"primary_score":	999917,
			"second_score":	118820
		}, {
			"file":	"main/main.c",
			"line":	1669,
			"primary_score":	999798,
			"second_score":	118819
		}, {
			"file":	"main/main.c",
			"line":	1670,
			"primary_score":	999917,
			"second_score":	118818
		}, {
			"file":	"main/main.c",
			"line":	1671,
			"primary_score":	999917,
			"second_score":	118817
		}, {
			"file":	"main/main.c",
			"line":	1675,
			"primary_score":	999798,
			"second_score":	118816
		}, {
			"file":	"main/main.c",
			"line":	1678,
			"primary_score":	999798,
			"second_score":	113720
		}, {
			"file":	"main/main.c",
			"line":	1679,
			"primary_score":	999798,
			"second_score":	113714
		}, {
			"file":	"main/main.c",
			"line":	1680,
			"primary_score":	999798,
			"second_score":	113710
		}, {
			"file":	"main/main.c",
			"line":	1683,
			"primary_score":	999798,
			"second_score":	113708
		}, {
			"file":	"main/main.c",
			"line":	1684,
			"primary_score":	999798,
			"second_score":	113702
		}, {
			"file":	"main/main.c",
			"line":	1685,
			"primary_score":	999798,
			"second_score":	113655
		}, {
			"file":	"main/main.c",
			"line":	1688,
			"primary_score":	999798,
			"second_score":	113653
		}, {
			"file":	"main/main.c",
			"line":	1689,
			"primary_score":	999798,
			"second_score":	113647
		}, {
			"file":	"main/main.c",
			"line":	1690,
			"primary_score":	999798,
			"second_score":	113644
		}, {
			"file":	"main/main.c",
			"line":	1693,
			"primary_score":	999798,
			"second_score":	113642
		}, {
			"file":	"main/main.c",
			"line":	1694,
			"primary_score":	999798,
			"second_score":	113636
		}, {
			"file":	"main/main.c",
			"line":	1695,
			"primary_score":	999798,
			"second_score":	113217
		}, {
			"file":	"main/main.c",
			"line":	1696,
			"primary_score":	999798,
			"second_score":	113215
		}, {
			"file":	"main/main.c",
			"line":	1699,
			"primary_score":	999798,
			"second_score":	103815
		}, {
			"file":	"main/main.c",
			"line":	1700,
			"primary_score":	999798,
			"second_score":	103809
		}, {
			"file":	"main/main.c",
			"line":	1701,
			"primary_score":	999798,
			"second_score":	103807
		}, {
			"file":	"main/main.c",
			"line":	1734,
			"primary_score":	999798,
			"second_score":	121713
		}, {
			"file":	"main/main.c",
			"line":	1735,
			"primary_score":	999798,
			"second_score":	121712
		}, {
			"file":	"main/main.c",
			"line":	1755,
			"primary_score":	999798,
			"second_score":	3150
		}, {
			"file":	"main/main.c",
			"line":	1758,
			"primary_score":	999798,
			"second_score":	3149
		}, {
			"file":	"main/main.c",
			"line":	1761,
			"primary_score":	999798,
			"second_score":	3148
		}, {
			"file":	"main/main.c",
			"line":	1764,
			"primary_score":	999798,
			"second_score":	3147
		}, {
			"file":	"main/main.c",
			"line":	1768,
			"primary_score":	999798,
			"second_score":	3146
		}, {
			"file":	"main/main.c",
			"line":	2203,
			"primary_score":	999798,
			"second_score":	103798
		}, {
			"file":	"main/main.c",
			"line":	2205,
			"primary_score":	999798,
			"second_score":	103797
		}, {
			"file":	"main/main.c",
			"line":	2207,
			"primary_score":	999798,
			"second_score":	103796
		}, {
			"file":	"main/main.c",
			"line":	2220,
			"primary_score":	999798,
			"second_score":	103795
		}, {
			"file":	"main/main.c",
			"line":	2222,
			"primary_score":	999798,
			"second_score":	103790
		}, {
			"file":	"main/main.c",
			"line":	2225,
			"primary_score":	999798,
			"second_score":	6121
		}, {
			"file":	"main/main.c",
			"line":	2227,
			"primary_score":	999798,
			"second_score":	6055
		}, {
			"file":	"main/main.c",
			"line":	2228,
			"primary_score":	999798,
			"second_score":	6026
		}, {
			"file":	"main/main.c",
			"line":	2231,
			"primary_score":	999798,
			"second_score":	3567
		}, {
			"file":	"main/main.c",
			"line":	2234,
			"primary_score":	999798,
			"second_score":	3244
		}, {
			"file":	"main/main.c",
			"line":	2235,
			"primary_score":	999798,
			"second_score":	3214
		}, {
			"file":	"main/main.c",
			"line":	2240,
			"primary_score":	999798,
			"second_score":	3191
		}, {
			"file":	"main/main.c",
			"line":	2241,
			"primary_score":	999798,
			"second_score":	3154
		}, {
			"file":	"main/main.c",
			"line":	2243,
			"primary_score":	999798,
			"second_score":	3152
		}, {
			"file":	"main/main.c",
			"line":	2246,
			"primary_score":	999798,
			"second_score":	3151
		}, {
			"file":	"main/main.c",
			"line":	2247,
			"primary_score":	999798,
			"second_score":	3141
		}, {
			"file":	"main/main.c",
			"line":	2264,
			"primary_score":	999798,
			"second_score":	152755
		}, {
			"file":	"main/main.c",
			"line":	2265,
			"primary_score":	999798,
			"second_score":	152754
		}, {
			"file":	"main/main.c",
			"line":	2269,
			"primary_score":	999798,
			"second_score":	152753
		}, {
			"file":	"main/main.c",
			"line":	2270,
			"primary_score":	999798,
			"second_score":	152752
		}, {
			"file":	"main/main.c",
			"line":	2272,
			"primary_score":	999798,
			"second_score":	152751
		}, {
			"file":	"main/main.c",
			"line":	2274,
			"primary_score":	999798,
			"second_score":	152750
		}, {
			"file":	"main/main.c",
			"line":	2275,
			"primary_score":	999798,
			"second_score":	152749
		}, {
			"file":	"main/main.c",
			"line":	2281,
			"primary_score":	999798,
			"second_score":	152746
		}, {
			"file":	"main/main.c",
			"line":	2282,
			"primary_score":	999798,
			"second_score":	152745
		}, {
			"file":	"main/main.c",
			"line":	2285,
			"primary_score":	999798,
			"second_score":	152744
		}, {
			"file":	"main/main.c",
			"line":	2286,
			"primary_score":	999798,
			"second_score":	152738
		}, {
			"file":	"main/main.c",
			"line":	2294,
			"primary_score":	999798,
			"second_score":	152737
		}, {
			"file":	"main/main.c",
			"line":	2296,
			"primary_score":	999798,
			"second_score":	152736
		}, {
			"file":	"main/main.c",
			"line":	2309,
			"primary_score":	999798,
			"second_score":	152735
		}, {
			"file":	"main/main.c",
			"line":	2314,
			"primary_score":	999798,
			"second_score":	152734
		}, {
			"file":	"main/main.c",
			"line":	2315,
			"primary_score":	999798,
			"second_score":	152733
		}, {
			"file":	"main/main.c",
			"line":	2317,
			"primary_score":	999798,
			"second_score":	152732
		}, {
			"file":	"main/main.c",
			"line":	2318,
			"primary_score":	999798,
			"second_score":	149972
		}, {
			"file":	"main/main.c",
			"line":	2319,
			"primary_score":	999798,
			"second_score":	149971
		}, {
			"file":	"main/main.c",
			"line":	2320,
			"primary_score":	999798,
			"second_score":	149493
		}, {
			"file":	"main/main.c",
			"line":	2324,
			"primary_score":	999798,
			"second_score":	149465
		}, {
			"file":	"main/main.c",
			"line":	2331,
			"primary_score":	999798,
			"second_score":	149464
		}, {
			"file":	"main/main.c",
			"line":	2334,
			"primary_score":	999798,
			"second_score":	149463
		}, {
			"file":	"main/main.c",
			"line":	2341,
			"primary_score":	999798,
			"second_score":	149462
		}, {
			"file":	"main/main.c",
			"line":	2343,
			"primary_score":	999798,
			"second_score":	149461
		}, {
			"file":	"main/main.c",
			"line":	2349,
			"primary_score":	999798,
			"second_score":	149460
		}, {
			"file":	"main/main.c",
			"line":	2351,
			"primary_score":	999798,
			"second_score":	119787
		}, {
			"file":	"main/main.c",
			"line":	2359,
			"primary_score":	999798,
			"second_score":	119785
		}, {
			"file":	"main/main.c",
			"line":	2362,
			"primary_score":	999798,
			"second_score":	119784
		}, {
			"file":	"main/main.c",
			"line":	2364,
			"primary_score":	999798,
			"second_score":	119782
		}, {
			"file":	"main/output.c",
			"line":	103,
			"primary_score":	999798,
			"second_score":	3190
		}, {
			"file":	"main/output.c",
			"line":	104,
			"primary_score":	999798,
			"second_score":	3176
		}, {
			"file":	"main/output.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	3162
		}, {
			"file":	"main/output.c",
			"line":	129,
			"primary_score":	999798,
			"second_score":	119631
		}, {
			"file":	"main/output.c",
			"line":	131,
			"primary_score":	999798,
			"second_score":	119630
		}, {
			"file":	"main/output.c",
			"line":	132,
			"primary_score":	999798,
			"second_score":	119629
		}, {
			"file":	"main/output.c",
			"line":	135,
			"primary_score":	999798,
			"second_score":	119628
		}, {
			"file":	"main/output.c",
			"line":	198,
			"primary_score":	999798,
			"second_score":	121711
		}, {
			"file":	"main/output.c",
			"line":	201,
			"primary_score":	999798,
			"second_score":	121710
		}, {
			"file":	"main/output.c",
			"line":	202,
			"primary_score":	999798,
			"second_score":	121664
		}, {
			"file":	"main/output.c",
			"line":	281,
			"primary_score":	999798,
			"second_score":	119633
		}, {
			"file":	"main/output.c",
			"line":	697,
			"primary_score":	999798,
			"second_score":	121705
		}, {
			"file":	"main/output.c",
			"line":	703,
			"primary_score":	999798,
			"second_score":	121704
		}, {
			"file":	"main/output.c",
			"line":	711,
			"primary_score":	999798,
			"second_score":	121702
		}, {
			"file":	"main/output.c",
			"line":	715,
			"primary_score":	999798,
			"second_score":	121701
		}, {
			"file":	"main/output.c",
			"line":	716,
			"primary_score":	999798,
			"second_score":	121700
		}, {
			"file":	"main/output.c",
			"line":	717,
			"primary_score":	999798,
			"second_score":	121699
		}, {
			"file":	"main/output.c",
			"line":	719,
			"primary_score":	999798,
			"second_score":	121698
		}, {
			"file":	"main/output.c",
			"line":	785,
			"primary_score":	999798,
			"second_score":	121666
		}, {
			"file":	"main/output.c",
			"line":	789,
			"primary_score":	999798,
			"second_score":	121665
		}, {
			"file":	"main/output.c",
			"line":	975,
			"primary_score":	999798,
			"second_score":	121709
		}, {
			"file":	"main/output.c",
			"line":	976,
			"primary_score":	999798,
			"second_score":	121708
		}, {
			"file":	"main/output.c",
			"line":	977,
			"primary_score":	999798,
			"second_score":	121707
		}, {
			"file":	"main/output.c",
			"line":	979,
			"primary_score":	999798,
			"second_score":	121706
		}, {
			"file":	"main/output.c",
			"line":	983,
			"primary_score":	999798,
			"second_score":	121703
		}, {
			"file":	"main/output.c",
			"line":	990,
			"primary_score":	999798,
			"second_score":	121697
		}, {
			"file":	"main/output.c",
			"line":	1002,
			"primary_score":	999798,
			"second_score":	121696
		}, {
			"file":	"main/output.c",
			"line":	1003,
			"primary_score":	999798,
			"second_score":	121695
		}, {
			"file":	"main/output.c",
			"line":	1006,
			"primary_score":	999798,
			"second_score":	121694
		}, {
			"file":	"main/output.c",
			"line":	1010,
			"primary_score":	999798,
			"second_score":	121693
		}, {
			"file":	"main/output.c",
			"line":	1011,
			"primary_score":	999798,
			"second_score":	127072
		}, {
			"file":	"main/output.c",
			"line":	1014,
			"primary_score":	999798,
			"second_score":	127070
		}, {
			"file":	"main/output.c",
			"line":	1015,
			"primary_score":	999798,
			"second_score":	127068
		}, {
			"file":	"main/output.c",
			"line":	1016,
			"primary_score":	999798,
			"second_score":	127065
		}, {
			"file":	"main/output.c",
			"line":	1022,
			"primary_score":	999798,
			"second_score":	121692
		}, {
			"file":	"main/output.c",
			"line":	1023,
			"primary_score":	999798,
			"second_score":	121674
		}, {
			"file":	"main/output.c",
			"line":	1024,
			"primary_score":	999798,
			"second_score":	121673
		}, {
			"file":	"main/output.c",
			"line":	1026,
			"primary_score":	999798,
			"second_score":	121668
		}, {
			"file":	"main/output.c",
			"line":	1028,
			"primary_score":	999798,
			"second_score":	121667
		}, {
			"file":	"main/php_ini.c",
			"line":	194,
			"primary_score":	999798,
			"second_score":	3256
		}, {
			"file":	"main/php_ini.c",
			"line":	197,
			"primary_score":	999798,
			"second_score":	3255
		}, {
			"file":	"main/php_ini.c",
			"line":	198,
			"primary_score":	999798,
			"second_score":	3254
		}, {
			"file":	"main/php_ini.c",
			"line":	729,
			"primary_score":	999798,
			"second_score":	3566
		}, {
			"file":	"main/php_ini.c",
			"line":	730,
			"primary_score":	999798,
			"second_score":	3247
		}, {
			"file":	"main/php_ini.c",
			"line":	734,
			"primary_score":	999798,
			"second_score":	3246
		}, {
			"file":	"main/php_ini.c",
			"line":	738,
			"primary_score":	999798,
			"second_score":	3245
		}, {
			"file":	"main/php_logos.c",
			"line":	67,
			"primary_score":	999798,
			"second_score":	6054
		}, {
			"file":	"main/php_logos.c",
			"line":	68,
			"primary_score":	999798,
			"second_score":	6027
		}, {
			"file":	"main/php_open_temporary_file.c",
			"line":	183,
			"primary_score":	999798,
			"second_score":	3153
		}, {
			"file":	"main/php_ticks.c",
			"line":	32,
			"primary_score":	999798,
			"second_score":	119769
		}, {
			"file":	"main/php_ticks.c",
			"line":	37,
			"primary_score":	999798,
			"second_score":	3145
		}, {
			"file":	"main/php_variables.c",
			"line":	546,
			"primary_score":	999798,
			"second_score":	152748
		}, {
			"file":	"main/php_variables.c",
			"line":	554,
			"primary_score":	999798,
			"second_score":	152747
		}, {
			"file":	"main/snprintf.c",
			"line":	317,
			"primary_score":	999833,
			"second_score":	121669
		}, {
			"file":	"main/snprintf.c",
			"line":	318,
			"primary_score":	999833,
			"second_score":	121668
		}, {
			"file":	"main/snprintf.c",
			"line":	320,
			"primary_score":	999833,
			"second_score":	121667
		}, {
			"file":	"main/snprintf.c",
			"line":	324,
			"primary_score":	999833,
			"second_score":	121666
		}, {
			"file":	"main/snprintf.c",
			"line":	335,
			"primary_score":	999833,
			"second_score":	121665
		}, {
			"file":	"main/snprintf.c",
			"line":	339,
			"primary_score":	999834,
			"second_score":	121664
		}, {
			"file":	"main/snprintf.c",
			"line":	346,
			"primary_score":	999833,
			"second_score":	121663
		}, {
			"file":	"main/snprintf.c",
			"line":	347,
			"primary_score":	999833,
			"second_score":	121662
		}, {
			"file":	"main/snprintf.c",
			"line":	349,
			"primary_score":	999833,
			"second_score":	121661
		}, {
			"file":	"main/snprintf.c",
			"line":	350,
			"primary_score":	999833,
			"second_score":	121660
		}, {
			"file":	"main/snprintf.c",
			"line":	354,
			"primary_score":	999833,
			"second_score":	121659
		}, {
			"file":	"main/snprintf.c",
			"line":	355,
			"primary_score":	999833,
			"second_score":	121658
		}, {
			"file":	"main/spprintf.c",
			"line":	254,
			"primary_score":	999951,
			"second_score":	120901
		}, {
			"file":	"main/spprintf.c",
			"line":	255,
			"primary_score":	999951,
			"second_score":	120900
		}, {
			"file":	"main/spprintf.c",
			"line":	257,
			"primary_score":	999951,
			"second_score":	120899
		}, {
			"file":	"main/spprintf.c",
			"line":	259,
			"primary_score":	999951,
			"second_score":	120898
		}, {
			"file":	"main/spprintf.c",
			"line":	261,
			"primary_score":	999951,
			"second_score":	120897
		}, {
			"file":	"main/spprintf.c",
			"line":	263,
			"primary_score":	999951,
			"second_score":	120896
		}, {
			"file":	"main/spprintf.c",
			"line":	266,
			"primary_score":	999951,
			"second_score":	120895
		}, {
			"file":	"main/spprintf.c",
			"line":	272,
			"primary_score":	999951,
			"second_score":	120894
		}, {
			"file":	"main/spprintf.c",
			"line":	275,
			"primary_score":	999951,
			"second_score":	120893
		}, {
			"file":	"main/spprintf.c",
			"line":	276,
			"primary_score":	999972,
			"second_score":	120892
		}, {
			"file":	"main/spprintf.c",
			"line":	277,
			"primary_score":	999972,
			"second_score":	120891
		}, {
			"file":	"main/spprintf.c",
			"line":	278,
			"primary_score":	999972,
			"second_score":	120890
		}, {
			"file":	"main/spprintf.c",
			"line":	279,
			"primary_score":	999972,
			"second_score":	120889
		}, {
			"file":	"main/spprintf.c",
			"line":	289,
			"primary_score":	999951,
			"second_score":	120888
		}, {
			"file":	"main/spprintf.c",
			"line":	306,
			"primary_score":	999972,
			"second_score":	120887
		}, {
			"file":	"main/spprintf.c",
			"line":	340,
			"primary_score":	999921,
			"second_score":	124636
		}, {
			"file":	"main/spprintf.c",
			"line":	345,
			"primary_score":	999921,
			"second_score":	124635
		}, {
			"file":	"main/spprintf.c",
			"line":	346,
			"primary_score":	999921,
			"second_score":	124634
		}, {
			"file":	"main/spprintf.c",
			"line":	441,
			"primary_score":	999833,
			"second_score":	121672
		}, {
			"file":	"main/spprintf.c",
			"line":	444,
			"primary_score":	999860,
			"second_score":	121671
		}, {
			"file":	"main/spprintf.c",
			"line":	449,
			"primary_score":	999921,
			"second_score":	124631
		}, {
			"file":	"main/spprintf.c",
			"line":	474,
			"primary_score":	999833,
			"second_score":	121670
		}, {
			"file":	"main/spprintf.c",
			"line":	476,
			"primary_score":	999833,
			"second_score":	121657
		}, {
			"file":	"main/spprintf.c",
			"line":	478,
			"primary_score":	999833,
			"second_score":	121655
		}, {
			"file":	"main/spprintf.c",
			"line":	479,
			"primary_score":	999833,
			"second_score":	121654
		}, {
			"file":	"main/spprintf.c",
			"line":	481,
			"primary_score":	999834,
			"second_score":	121653
		}, {
			"file":	"main/spprintf.c",
			"line":	483,
			"primary_score":	999834,
			"second_score":	121652
		}, {
			"file":	"main/spprintf.c",
			"line":	486,
			"primary_score":	999833,
			"second_score":	121651
		}, {
			"file":	"main/spprintf.c",
			"line":	686,
			"primary_score":	999972,
			"second_score":	120883
		}, {
			"file":	"main/spprintf.c",
			"line":	687,
			"primary_score":	999972,
			"second_score":	120882
		}, {
			"file":	"main/spprintf.c",
			"line":	688,
			"primary_score":	999972,
			"second_score":	120881
		}, {
			"file":	"main/spprintf.c",
			"line":	689,
			"primary_score":	999972,
			"second_score":	120880
		}, {
			"file":	"main/spprintf.c",
			"line":	764,
			"primary_score":	999972,
			"second_score":	120877
		}, {
			"file":	"main/spprintf.c",
			"line":	770,
			"primary_score":	999972,
			"second_score":	120876
		}, {
			"file":	"main/spprintf.c",
			"line":	775,
			"primary_score":	999919,
			"second_score":	127486
		}, {
			"file":	"main/streams/filter.c",
			"line":	37,
			"primary_score":	999798,
			"second_score":	6095
		}, {
			"file":	"main/streams/filter.c",
			"line":	54,
			"primary_score":	999798,
			"second_score":	62326
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	134,
			"primary_score":	999798,
			"second_score":	153248
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	135,
			"primary_score":	999798,
			"second_score":	153247
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	136,
			"primary_score":	999798,
			"second_score":	153246
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	138,
			"primary_score":	999798,
			"second_score":	153245
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	139,
			"primary_score":	999798,
			"second_score":	153244
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	140,
			"primary_score":	999798,
			"second_score":	153242
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	142,
			"primary_score":	999798,
			"second_score":	153241
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	165,
			"primary_score":	999798,
			"second_score":	153685
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	167,
			"primary_score":	999798,
			"second_score":	153684
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	168,
			"primary_score":	999798,
			"second_score":	153580
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	169,
			"primary_score":	999798,
			"second_score":	153579
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	170,
			"primary_score":	999798,
			"second_score":	153578
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	171,
			"primary_score":	999798,
			"second_score":	153577
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	172,
			"primary_score":	999798,
			"second_score":	153576
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	173,
			"primary_score":	999798,
			"second_score":	153575
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	174,
			"primary_score":	999798,
			"second_score":	153574
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	176,
			"primary_score":	999798,
			"second_score":	153573
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	264,
			"primary_score":	999798,
			"second_score":	153686
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	266,
			"primary_score":	999798,
			"second_score":	153252
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	267,
			"primary_score":	999798,
			"second_score":	153251
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	271,
			"primary_score":	999798,
			"second_score":	153250
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	272,
			"primary_score":	999798,
			"second_score":	153249
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	284,
			"primary_score":	999798,
			"second_score":	153240
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	285,
			"primary_score":	999798,
			"second_score":	153239
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	287,
			"primary_score":	999798,
			"second_score":	148628
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	291,
			"primary_score":	999798,
			"second_score":	153238
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	371,
			"primary_score":	999798,
			"second_score":	114247
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	372,
			"primary_score":	999798,
			"second_score":	114246
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	374,
			"primary_score":	999798,
			"second_score":	114245
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	377,
			"primary_score":	999798,
			"second_score":	114244
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	392,
			"primary_score":	999798,
			"second_score":	114243
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	393,
			"primary_score":	999798,
			"second_score":	114242
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	394,
			"primary_score":	999798,
			"second_score":	114241
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	404,
			"primary_score":	999798,
			"second_score":	114240
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	405,
			"primary_score":	999798,
			"second_score":	114239
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	413,
			"primary_score":	999798,
			"second_score":	114238
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	425,
			"primary_score":	999798,
			"second_score":	114237
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	427,
			"primary_score":	999798,
			"second_score":	114218
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	432,
			"primary_score":	999798,
			"second_score":	114257
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	434,
			"primary_score":	999798,
			"second_score":	114256
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	441,
			"primary_score":	999798,
			"second_score":	114255
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	442,
			"primary_score":	999798,
			"second_score":	114254
		}, {
			"file":	"main/streams/streams.c",
			"line":	104,
			"primary_score":	999798,
			"second_score":	119555
		}, {
			"file":	"main/streams/streams.c",
			"line":	105,
			"primary_score":	999798,
			"second_score":	119546
		}, {
			"file":	"main/streams/streams.c",
			"line":	196,
			"primary_score":	999798,
			"second_score":	153114
		}, {
			"file":	"main/streams/streams.c",
			"line":	198,
			"primary_score":	999798,
			"second_score":	153113
		}, {
			"file":	"main/streams/streams.c",
			"line":	200,
			"primary_score":	999798,
			"second_score":	153112
		}, {
			"file":	"main/streams/streams.c",
			"line":	203,
			"primary_score":	999798,
			"second_score":	153111
		}, {
			"file":	"main/streams/streams.c",
			"line":	206,
			"primary_score":	999798,
			"second_score":	153110
		}, {
			"file":	"main/streams/streams.c",
			"line":	207,
			"primary_score":	999798,
			"second_score":	153109
		}, {
			"file":	"main/streams/streams.c",
			"line":	238,
			"primary_score":	999798,
			"second_score":	153572
		}, {
			"file":	"main/streams/streams.c",
			"line":	240,
			"primary_score":	999798,
			"second_score":	153571
		}, {
			"file":	"main/streams/streams.c",
			"line":	242,
			"primary_score":	999798,
			"second_score":	153467
		}, {
			"file":	"main/streams/streams.c",
			"line":	244,
			"primary_score":	999798,
			"second_score":	153466
		}, {
			"file":	"main/streams/streams.c",
			"line":	245,
			"primary_score":	999798,
			"second_score":	153465
		}, {
			"file":	"main/streams/streams.c",
			"line":	251,
			"primary_score":	999798,
			"second_score":	153464
		}, {
			"file":	"main/streams/streams.c",
			"line":	252,
			"primary_score":	999798,
			"second_score":	153463
		}, {
			"file":	"main/streams/streams.c",
			"line":	253,
			"primary_score":	999798,
			"second_score":	153462
		}, {
			"file":	"main/streams/streams.c",
			"line":	254,
			"primary_score":	999798,
			"second_score":	153461
		}, {
			"file":	"main/streams/streams.c",
			"line":	261,
			"primary_score":	999798,
			"second_score":	153460
		}, {
			"file":	"main/streams/streams.c",
			"line":	265,
			"primary_score":	999798,
			"second_score":	153459
		}, {
			"file":	"main/streams/streams.c",
			"line":	281,
			"primary_score":	999798,
			"second_score":	153458
		}, {
			"file":	"main/streams/streams.c",
			"line":	282,
			"primary_score":	999798,
			"second_score":	153273
		}, {
			"file":	"main/streams/streams.c",
			"line":	284,
			"primary_score":	999798,
			"second_score":	153261
		}, {
			"file":	"main/streams/streams.c",
			"line":	285,
			"primary_score":	999798,
			"second_score":	153260
		}, {
			"file":	"main/streams/streams.c",
			"line":	286,
			"primary_score":	999798,
			"second_score":	153259
		}, {
			"file":	"main/streams/streams.c",
			"line":	287,
			"primary_score":	999798,
			"second_score":	153258
		}, {
			"file":	"main/streams/streams.c",
			"line":	288,
			"primary_score":	999798,
			"second_score":	153257
		}, {
			"file":	"main/streams/streams.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	153256
		}, {
			"file":	"main/streams/streams.c",
			"line":	290,
			"primary_score":	999798,
			"second_score":	153255
		}, {
			"file":	"main/streams/streams.c",
			"line":	291,
			"primary_score":	999798,
			"second_score":	153254
		}, {
			"file":	"main/streams/streams.c",
			"line":	293,
			"primary_score":	999798,
			"second_score":	153253
		}, {
			"file":	"main/streams/streams.c",
			"line":	333,
			"primary_score":	999798,
			"second_score":	114271
		}, {
			"file":	"main/streams/streams.c",
			"line":	334,
			"primary_score":	999798,
			"second_score":	114270
		}, {
			"file":	"main/streams/streams.c",
			"line":	335,
			"primary_score":	999798,
			"second_score":	114269
		}, {
			"file":	"main/streams/streams.c",
			"line":	336,
			"primary_score":	999798,
			"second_score":	114268
		}, {
			"file":	"main/streams/streams.c",
			"line":	338,
			"primary_score":	999798,
			"second_score":	114267
		}, {
			"file":	"main/streams/streams.c",
			"line":	351,
			"primary_score":	999798,
			"second_score":	114266
		}, {
			"file":	"main/streams/streams.c",
			"line":	360,
			"primary_score":	999798,
			"second_score":	114265
		}, {
			"file":	"main/streams/streams.c",
			"line":	364,
			"primary_score":	999798,
			"second_score":	114264
		}, {
			"file":	"main/streams/streams.c",
			"line":	382,
			"primary_score":	999798,
			"second_score":	114263
		}, {
			"file":	"main/streams/streams.c",
			"line":	402,
			"primary_score":	999798,
			"second_score":	114262
		}, {
			"file":	"main/streams/streams.c",
			"line":	405,
			"primary_score":	999798,
			"second_score":	114252
		}, {
			"file":	"main/streams/streams.c",
			"line":	415,
			"primary_score":	999798,
			"second_score":	114251
		}, {
			"file":	"main/streams/streams.c",
			"line":	419,
			"primary_score":	999798,
			"second_score":	114250
		}, {
			"file":	"main/streams/streams.c",
			"line":	420,
			"primary_score":	999798,
			"second_score":	114249
		}, {
			"file":	"main/streams/streams.c",
			"line":	432,
			"primary_score":	999798,
			"second_score":	114248
		}, {
			"file":	"main/streams/streams.c",
			"line":	433,
			"primary_score":	999798,
			"second_score":	114217
		}, {
			"file":	"main/streams/streams.c",
			"line":	436,
			"primary_score":	999798,
			"second_score":	114216
		}, {
			"file":	"main/streams/streams.c",
			"line":	443,
			"primary_score":	999798,
			"second_score":	114215
		}, {
			"file":	"main/streams/streams.c",
			"line":	444,
			"primary_score":	999798,
			"second_score":	114214
		}, {
			"file":	"main/streams/streams.c",
			"line":	447,
			"primary_score":	999798,
			"second_score":	114213
		}, {
			"file":	"main/streams/streams.c",
			"line":	451,
			"primary_score":	999798,
			"second_score":	114212
		}, {
			"file":	"main/streams/streams.c",
			"line":	456,
			"primary_score":	999798,
			"second_score":	114211
		}, {
			"file":	"main/streams/streams.c",
			"line":	461,
			"primary_score":	999798,
			"second_score":	114210
		}, {
			"file":	"main/streams/streams.c",
			"line":	466,
			"primary_score":	999798,
			"second_score":	114209
		}, {
			"file":	"main/streams/streams.c",
			"line":	498,
			"primary_score":	999798,
			"second_score":	114208
		}, {
			"file":	"main/streams/streams.c",
			"line":	499,
			"primary_score":	999798,
			"second_score":	114207
		}, {
			"file":	"main/streams/streams.c",
			"line":	500,
			"primary_score":	999798,
			"second_score":	114188
		}, {
			"file":	"main/streams/streams.c",
			"line":	503,
			"primary_score":	999798,
			"second_score":	114187
		}, {
			"file":	"main/streams/streams.c",
			"line":	507,
			"primary_score":	999798,
			"second_score":	114168
		}, {
			"file":	"main/streams/streams.c",
			"line":	511,
			"primary_score":	999798,
			"second_score":	114167
		}, {
			"file":	"main/streams/streams.c",
			"line":	1123,
			"primary_score":	999798,
			"second_score":	114261
		}, {
			"file":	"main/streams/streams.c",
			"line":	1125,
			"primary_score":	999798,
			"second_score":	114260
		}, {
			"file":	"main/streams/streams.c",
			"line":	1129,
			"primary_score":	999798,
			"second_score":	114259
		}, {
			"file":	"main/streams/streams.c",
			"line":	1130,
			"primary_score":	999798,
			"second_score":	114258
		}, {
			"file":	"main/streams/streams.c",
			"line":	1133,
			"primary_score":	999798,
			"second_score":	114253
		}, {
			"file":	"main/streams/streams.c",
			"line":	1507,
			"primary_score":	999798,
			"second_score":	114273
		}, {
			"file":	"main/streams/streams.c",
			"line":	1509,
			"primary_score":	999798,
			"second_score":	114272
		}, {
			"file":	"main/streams/streams.c",
			"line":	1520,
			"primary_score":	999798,
			"second_score":	113646
		}, {
			"file":	"main/streams/streams.c",
			"line":	1526,
			"primary_score":	999798,
			"second_score":	113645
		}, {
			"file":	"main/streams/streams.c",
			"line":	1562,
			"primary_score":	999798,
			"second_score":	6120
		}, {
			"file":	"main/streams/streams.c",
			"line":	1563,
			"primary_score":	999798,
			"second_score":	6096
		}, {
			"file":	"main/streams/streams.c",
			"line":	1564,
			"primary_score":	999798,
			"second_score":	6086
		}, {
			"file":	"main/streams/streams.c",
			"line":	1565,
			"primary_score":	999798,
			"second_score":	6056
		}, {
			"file":	"main/streams/streams.c",
			"line":	1601,
			"primary_score":	999798,
			"second_score":	97925
		}, {
			"file":	"main/streams/streams.c",
			"line":	1642,
			"primary_score":	999798,
			"second_score":	153900
		}, {
			"file":	"main/streams/streams.c",
			"line":	1643,
			"primary_score":	999798,
			"second_score":	153899
		}, {
			"file":	"main/streams/streams.c",
			"line":	1644,
			"primary_score":	999798,
			"second_score":	153898
		}, {
			"file":	"main/streams/streams.c",
			"line":	1645,
			"primary_score":	999798,
			"second_score":	153897
		}, {
			"file":	"main/streams/streams.c",
			"line":	1647,
			"primary_score":	999798,
			"second_score":	153896
		}, {
			"file":	"main/streams/streams.c",
			"line":	1648,
			"primary_score":	999798,
			"second_score":	153895
		}, {
			"file":	"main/streams/streams.c",
			"line":	1651,
			"primary_score":	999798,
			"second_score":	153894
		}, {
			"file":	"main/streams/streams.c",
			"line":	1655,
			"primary_score":	999798,
			"second_score":	153893
		}, {
			"file":	"main/streams/streams.c",
			"line":	1656,
			"primary_score":	999798,
			"second_score":	153890
		}, {
			"file":	"main/streams/streams.c",
			"line":	1659,
			"primary_score":	999798,
			"second_score":	153889
		}, {
			"file":	"main/streams/streams.c",
			"line":	1660,
			"primary_score":	999798,
			"second_score":	153888
		}, {
			"file":	"main/streams/streams.c",
			"line":	1668,
			"primary_score":	999798,
			"second_score":	153887
		}, {
			"file":	"main/streams/streams.c",
			"line":	1669,
			"primary_score":	999798,
			"second_score":	153886
		}, {
			"file":	"main/streams/streams.c",
			"line":	1670,
			"primary_score":	999798,
			"second_score":	153776
		}, {
			"file":	"main/streams/streams.c",
			"line":	1686,
			"primary_score":	999798,
			"second_score":	153752
		}, {
			"file":	"main/streams/streams.c",
			"line":	1689,
			"primary_score":	999798,
			"second_score":	153733
		}, {
			"file":	"main/streams/streams.c",
			"line":	1751,
			"primary_score":	999798,
			"second_score":	153732
		}, {
			"file":	"main/streams/streams.c",
			"line":	1769,
			"primary_score":	999798,
			"second_score":	153731
		}, {
			"file":	"main/streams/streams.c",
			"line":	1903,
			"primary_score":	999798,
			"second_score":	153909
		}, {
			"file":	"main/streams/streams.c",
			"line":	1904,
			"primary_score":	999798,
			"second_score":	153908
		}, {
			"file":	"main/streams/streams.c",
			"line":	1905,
			"primary_score":	999798,
			"second_score":	153907
		}, {
			"file":	"main/streams/streams.c",
			"line":	1906,
			"primary_score":	999798,
			"second_score":	153906
		}, {
			"file":	"main/streams/streams.c",
			"line":	1908,
			"primary_score":	999798,
			"second_score":	153905
		}, {
			"file":	"main/streams/streams.c",
			"line":	1912,
			"primary_score":	999798,
			"second_score":	153904
		}, {
			"file":	"main/streams/streams.c",
			"line":	1917,
			"primary_score":	999798,
			"second_score":	153903
		}, {
			"file":	"main/streams/streams.c",
			"line":	1927,
			"primary_score":	999798,
			"second_score":	153902
		}, {
			"file":	"main/streams/streams.c",
			"line":	1929,
			"primary_score":	999798,
			"second_score":	153901
		}, {
			"file":	"main/streams/streams.c",
			"line":	1930,
			"primary_score":	999798,
			"second_score":	153730
		}, {
			"file":	"main/streams/streams.c",
			"line":	1938,
			"primary_score":	999798,
			"second_score":	153729
		}, {
			"file":	"main/streams/streams.c",
			"line":	1939,
			"primary_score":	999798,
			"second_score":	153728
		}, {
			"file":	"main/streams/streams.c",
			"line":	1943,
			"primary_score":	999798,
			"second_score":	153727
		}, {
			"file":	"main/streams/streams.c",
			"line":	1950,
			"primary_score":	999798,
			"second_score":	153236
		}, {
			"file":	"main/streams/streams.c",
			"line":	1957,
			"primary_score":	999798,
			"second_score":	153235
		}, {
			"file":	"main/streams/streams.c",
			"line":	1958,
			"primary_score":	999798,
			"second_score":	153234
		}, {
			"file":	"main/streams/streams.c",
			"line":	1962,
			"primary_score":	999798,
			"second_score":	153233
		}, {
			"file":	"main/streams/streams.c",
			"line":	1963,
			"primary_score":	999798,
			"second_score":	153232
		}, {
			"file":	"main/streams/streams.c",
			"line":	1967,
			"primary_score":	999798,
			"second_score":	153231
		}, {
			"file":	"main/streams/streams.c",
			"line":	1970,
			"primary_score":	999798,
			"second_score":	153230
		}, {
			"file":	"main/streams/streams.c",
			"line":	1971,
			"primary_score":	999798,
			"second_score":	153119
		}, {
			"file":	"main/streams/streams.c",
			"line":	1978,
			"primary_score":	999798,
			"second_score":	153118
		}, {
			"file":	"main/streams/streams.c",
			"line":	2013,
			"primary_score":	999798,
			"second_score":	153117
		}, {
			"file":	"main/streams/streams.c",
			"line":	2022,
			"primary_score":	999798,
			"second_score":	153116
		}, {
			"file":	"main/streams/streams.c",
			"line":	2029,
			"primary_score":	999798,
			"second_score":	153115
		}, {
			"file":	"main/streams/streams.c",
			"line":	2035,
			"primary_score":	999798,
			"second_score":	153108
		}, {
			"file":	"main/streams/streams.c",
			"line":	2038,
			"primary_score":	999798,
			"second_score":	153107
		}, {
			"file":	"main/streams/transports.c",
			"line":	29,
			"primary_score":	999798,
			"second_score":	6085
		}, {
			"file":	"main/strlcpy.c",
			"line":	71,
			"primary_score":	999798,
			"second_score":	153272
		}, {
			"file":	"main/strlcpy.c",
			"line":	72,
			"primary_score":	999798,
			"second_score":	153271
		}, {
			"file":	"main/strlcpy.c",
			"line":	73,
			"primary_score":	999798,
			"second_score":	153270
		}, {
			"file":	"main/strlcpy.c",
			"line":	76,
			"primary_score":	999798,
			"second_score":	153269
		}, {
			"file":	"main/strlcpy.c",
			"line":	77,
			"primary_score":	999798,
			"second_score":	153268
		}, {
			"file":	"main/strlcpy.c",
			"line":	78,
			"primary_score":	999798,
			"second_score":	153265
		}, {
			"file":	"main/strlcpy.c",
			"line":	79,
			"primary_score":	999798,
			"second_score":	153264
		}, {
			"file":	"main/strlcpy.c",
			"line":	84,
			"primary_score":	999798,
			"second_score":	153263
		}, {
			"file":	"main/strlcpy.c",
			"line":	91,
			"primary_score":	999798,
			"second_score":	153262
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	255,
			"primary_score":	999798,
			"second_score":	121684
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	260,
			"primary_score":	999798,
			"second_score":	121683
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	269,
			"primary_score":	999798,
			"second_score":	121682
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	270,
			"primary_score":	999798,
			"second_score":	121681
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	273,
			"primary_score":	999798,
			"second_score":	121680
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	277,
			"primary_score":	999798,
			"second_score":	121679
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	287,
			"primary_score":	999798,
			"second_score":	121691
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	288,
			"primary_score":	999798,
			"second_score":	121690
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	289,
			"primary_score":	999798,
			"second_score":	121689
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	291,
			"primary_score":	999798,
			"second_score":	121688
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	295,
			"primary_score":	999798,
			"second_score":	121687
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	303,
			"primary_score":	999798,
			"second_score":	121686
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	305,
			"primary_score":	999798,
			"second_score":	121685
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	306,
			"primary_score":	999798,
			"second_score":	121678
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	312,
			"primary_score":	999798,
			"second_score":	121677
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	313,
			"primary_score":	999798,
			"second_score":	121676
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	316,
			"primary_score":	999798,
			"second_score":	121675
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	325,
			"primary_score":	999798,
			"second_score":	103792
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	378,
			"primary_score":	999798,
			"second_score":	113686
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	379,
			"primary_score":	999798,
			"second_score":	113685
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	383,
			"primary_score":	999798,
			"second_score":	113684
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	395,
			"primary_score":	999798,
			"second_score":	127105
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	403,
			"primary_score":	999798,
			"second_score":	127079
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	563,
			"primary_score":	999798,
			"second_score":	153106
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	579,
			"primary_score":	999798,
			"second_score":	153105
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	581,
			"primary_score":	999798,
			"second_score":	153104
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	582,
			"primary_score":	999798,
			"second_score":	153098
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	583,
			"primary_score":	999798,
			"second_score":	153092
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	585,
			"primary_score":	999798,
			"second_score":	153086
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	586,
			"primary_score":	999798,
			"second_score":	153085
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	587,
			"primary_score":	999798,
			"second_score":	153084
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	588,
			"primary_score":	999798,
			"second_score":	153076
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	589,
			"primary_score":	999798,
			"second_score":	153075
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	590,
			"primary_score":	999798,
			"second_score":	153074
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	592,
			"primary_score":	999798,
			"second_score":	152997
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	593,
			"primary_score":	999798,
			"second_score":	152996
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	594,
			"primary_score":	999798,
			"second_score":	152995
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	595,
			"primary_score":	999798,
			"second_score":	152987
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	596,
			"primary_score":	999798,
			"second_score":	152986
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	597,
			"primary_score":	999798,
			"second_score":	152985
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	599,
			"primary_score":	999798,
			"second_score":	152910
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	600,
			"primary_score":	999798,
			"second_score":	152909
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	601,
			"primary_score":	999798,
			"second_score":	152908
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	602,
			"primary_score":	999798,
			"second_score":	152900
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	603,
			"primary_score":	999798,
			"second_score":	152899
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	604,
			"primary_score":	999798,
			"second_score":	152898
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	606,
			"primary_score":	999798,
			"second_score":	152823
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	607,
			"primary_score":	999798,
			"second_score":	152801
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	608,
			"primary_score":	999798,
			"second_score":	152779
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	916,
			"primary_score":	999811,
			"second_score":	179806
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	920,
			"primary_score":	999811,
			"second_score":	179805
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	921,
			"primary_score":	999811,
			"second_score":	179804
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	950,
			"primary_score":	999798,
			"second_score":	149076
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	954,
			"primary_score":	999798,
			"second_score":	149075
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	955,
			"primary_score":	999798,
			"second_score":	149074
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	956,
			"primary_score":	999798,
			"second_score":	149073
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1090,
			"primary_score":	999798,
			"second_score":	149062
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1091,
			"primary_score":	999798,
			"second_score":	149061
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1133,
			"primary_score":	999798,
			"second_score":	152757
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1136,
			"primary_score":	999798,
			"second_score":	152756
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1137,
			"primary_score":	999798,
			"second_score":	119781
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1140,
			"primary_score":	999798,
			"second_score":	119780
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1177,
			"primary_score":	999798,
			"second_score":	122192
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1180,
			"primary_score":	999798,
			"second_score":	119159
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1319,
			"primary_score":	999798,
			"second_score":	119779
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1321,
			"primary_score":	999798,
			"second_score":	119777
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1323,
			"primary_score":	999798,
			"second_score":	119776
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1325,
			"primary_score":	999798,
			"second_score":	103805
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1326,
			"primary_score":	999798,
			"second_score":	103804
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1328,
			"primary_score":	999798,
			"second_score":	103803
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1332,
			"primary_score":	999798,
			"second_score":	103802
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1333,
			"primary_score":	999798,
			"second_score":	103801
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1336,
			"primary_score":	999798,
			"second_score":	103800
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1337,
			"primary_score":	999798,
			"second_score":	103799
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1339,
			"primary_score":	999798,
			"second_score":	3136
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1344,
			"primary_score":	999798,
			"second_score":	1
		}],
	"mutation_info":	[{
			"file":	"ext/filter/filter.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"ext/filter/filter.c",
			"lines":	[{
					"line":	385,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [171], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], [], [], [], [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [], [], [], [], [], []],
							"begin_line":	386,
							"begin_column":	0,
							"end_line":	386,
							"end_column":	0,
							"patch_codes":	["memset(&(**value).is_ref__gc, 0, sizeof (*(&(**value).is_ref__gc)))", "memset(&(**value).refcount__gc, 0, sizeof (*(&(**value).refcount__gc)))", "memset(&(**value).type, 0, sizeof (*(&(**value).type)))", "memset(&(**value).value, 0, sizeof (*(&(**value).value)))", "memset(&(**value).value.dval, 0, sizeof (*(&(**value).value.dval)))", "memset(&(**value).value.ht, 0, sizeof (*(&(**value).value.ht)))", "memset(&(**value).value.lval, 0, sizeof (*(&(**value).value.lval)))", "memset(&(**value).value.obj, 0, sizeof (*(&(**value).value.obj)))", "memset(&(**value).value.str, 0, sizeof (*(&(**value).value.str)))", "memset(&(*options).is_ref__gc, 0, sizeof (*(&(*options).is_ref__gc)))", "memset(&(*options).refcount__gc, 0, sizeof (*(&(*options).refcount__gc)))", "memset(&(*options).type, 0, sizeof (*(&(*options).type)))", "memset(&(*options).value, 0, sizeof (*(&(*options).value)))", "memset(&(*options).value.dval, 0, sizeof (*(&(*options).value.dval)))", "memset(&(*options).value.ht, 0, sizeof (*(&(*options).value.ht)))", "memset(&(*options).value.lval, 0, sizeof (*(&(*options).value.lval)))", "memset(&(*options).value.obj, 0, sizeof (*(&(*options).value.obj)))", "memset(&(*options).value.obj.handle, 0, sizeof (*(&(*options).value.obj.handle)))", "memset(&(*options).value.obj.handlers, 0, sizeof (*(&(*options).value.obj.handlers)))", "memset(&(*options).value.obj.handlers->add_ref, 0, sizeof (*(&(*options).value.obj.handlers->add_ref)))", "memset(&(*options).value.obj.handlers->call_method, 0, sizeof (*(&(*options).value.obj.handlers->call_method)))", "memset(&(*options).value.obj.handlers->cast_object, 0, sizeof (*(&(*options).value.obj.handlers->cast_object)))", "memset(&(*options).value.obj.handlers->clone_obj, 0, sizeof (*(&(*options).value.obj.handlers->clone_obj)))", "memset(&(*options).value.obj.handlers->compare_objects, 0, sizeof (*(&(*options).value.obj.handlers->compare_objects)))", "memset(&(*options).value.obj.handlers->count_elements, 0, sizeof (*(&(*options).value.obj.handlers->count_elements)))", "memset(&(*options).value.obj.handlers->del_ref, 0, sizeof (*(&(*options).value.obj.handlers->del_ref)))", "memset(&(*options).value.obj.handlers->get, 0, sizeof (*(&(*options).value.obj.handlers->get)))", "memset(&(*options).value.obj.handlers->get_class_entry, 0, sizeof (*(&(*options).value.obj.handlers->get_class_entry)))", "memset(&(*options).value.obj.handlers->get_class_name, 0, sizeof (*(&(*options).value.obj.handlers->get_class_name)))", "memset(&(*options).value.obj.handlers->get_closure, 0, sizeof (*(&(*options).value.obj.handlers->get_closure)))", "memset(&(*options).value.obj.handlers->get_constructor, 0, sizeof (*(&(*options).value.obj.handlers->get_constructor)))", "memset(&(*options).value.obj.handlers->get_debug_info, 0, sizeof (*(&(*options).value.obj.handlers->get_debug_info)))", "memset(&(*options).value.obj.handlers->get_method, 0, sizeof (*(&(*options).value.obj.handlers->get_method)))", "memset(&(*options).value.obj.handlers->get_properties, 0, sizeof (*(&(*options).value.obj.handlers->get_properties)))", "memset(&(*options).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*(&(*options).value.obj.handlers->get_property_ptr_ptr)))", "memset(&(*options).value.obj.handlers->has_dimension, 0, sizeof (*(&(*options).value.obj.handlers->has_dimension)))", "memset(&(*options).value.obj.handlers->has_property, 0, sizeof (*(&(*options).value.obj.handlers->has_property)))", "memset(&(*options).value.obj.handlers->read_dimension, 0, sizeof (*(&(*options).value.obj.handlers->read_dimension)))", "memset(&(*options).value.obj.handlers->read_property, 0, sizeof (*(&(*options).value.obj.handlers->read_property)))", "memset(&(*options).value.obj.handlers->set, 0, sizeof (*(&(*options).value.obj.handlers->set)))", "memset(&(*options).value.obj.handlers->unset_dimension, 0, sizeof (*(&(*options).value.obj.handlers->unset_dimension)))", "memset(&(*options).value.obj.handlers->unset_property, 0, sizeof (*(&(*options).value.obj.handlers->unset_property)))", "memset(&(*options).value.obj.handlers->write_dimension, 0, sizeof (*(&(*options).value.obj.handlers->write_dimension)))", "memset(&(*options).value.obj.handlers->write_property, 0, sizeof (*(&(*options).value.obj.handlers->write_property)))", "memset(&(*options).value.str, 0, sizeof (*(&(*options).value.str)))", "memset(&(*value)->is_ref__gc, 0, sizeof (*(&(*value)->is_ref__gc)))", "memset(&(*value)->refcount__gc, 0, sizeof (*(&(*value)->refcount__gc)))", "memset(&(*value)->type, 0, sizeof (*(&(*value)->type)))", "memset(&(*value)->value, 0, sizeof (*(&(*value)->value)))", "memset(&filter_func.function, 0, sizeof (*(&filter_func.function)))", "memset(&filter_func.id, 0, sizeof (*(&filter_func.id)))", "memset(&filter_func.name, 0, sizeof (*(&filter_func.name)))", "memset((**value).value.ht, 0, sizeof (*((**value).value.ht)))", "memset((*options).value.ht, 0, sizeof (*((*options).value.ht)))", "memset((*options).value.obj.handlers, 0, sizeof (*((*options).value.obj.handlers)))", "memset((*options).value.obj.handlers->add_ref, 0, sizeof (*((*options).value.obj.handlers->add_ref)))", "memset((*options).value.obj.handlers->call_method, 0, sizeof (*((*options).value.obj.handlers->call_method)))", "memset((*options).value.obj.handlers->cast_object, 0, sizeof (*((*options).value.obj.handlers->cast_object)))", "memset((*options).value.obj.handlers->clone_obj, 0, sizeof (*((*options).value.obj.handlers->clone_obj)))", "memset((*options).value.obj.handlers->compare_objects, 0, sizeof (*((*options).value.obj.handlers->compare_objects)))", "memset((*options).value.obj.handlers->count_elements, 0, sizeof (*((*options).value.obj.handlers->count_elements)))", "memset((*options).value.obj.handlers->del_ref, 0, sizeof (*((*options).value.obj.handlers->del_ref)))", "memset((*options).value.obj.handlers->get, 0, sizeof (*((*options).value.obj.handlers->get)))", "memset((*options).value.obj.handlers->get_class_entry, 0, sizeof (*((*options).value.obj.handlers->get_class_entry)))", "memset((*options).value.obj.handlers->get_class_name, 0, sizeof (*((*options).value.obj.handlers->get_class_name)))", "memset((*options).value.obj.handlers->get_closure, 0, sizeof (*((*options).value.obj.handlers->get_closure)))", "memset((*options).value.obj.handlers->get_constructor, 0, sizeof (*((*options).value.obj.handlers->get_constructor)))", "memset((*options).value.obj.handlers->get_debug_info, 0, sizeof (*((*options).value.obj.handlers->get_debug_info)))", "memset((*options).value.obj.handlers->get_method, 0, sizeof (*((*options).value.obj.handlers->get_method)))", "memset((*options).value.obj.handlers->get_properties, 0, sizeof (*((*options).value.obj.handlers->get_properties)))", "memset((*options).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*((*options).value.obj.handlers->get_property_ptr_ptr)))", "memset((*options).value.obj.handlers->has_dimension, 0, sizeof (*((*options).value.obj.handlers->has_dimension)))", "memset((*options).value.obj.handlers->has_property, 0, sizeof (*((*options).value.obj.handlers->has_property)))", "memset((*options).value.obj.handlers->read_dimension, 0, sizeof (*((*options).value.obj.handlers->read_dimension)))", "memset((*options).value.obj.handlers->read_property, 0, sizeof (*((*options).value.obj.handlers->read_property)))", "memset((*options).value.obj.handlers->set, 0, sizeof (*((*options).value.obj.handlers->set)))", "memset((*options).value.obj.handlers->unset_dimension, 0, sizeof (*((*options).value.obj.handlers->unset_dimension)))", "memset((*options).value.obj.handlers->unset_property, 0, sizeof (*((*options).value.obj.handlers->unset_property)))", "memset((*options).value.obj.handlers->write_dimension, 0, sizeof (*((*options).value.obj.handlers->write_dimension)))", "memset((*options).value.obj.handlers->write_property, 0, sizeof (*((*options).value.obj.handlers->write_property)))", "memset((*value), 0, sizeof (*((*value))))", "memset(filter_func.function, 0, sizeof (*(filter_func.function)))", "memset(filter_func.name, 0, sizeof (*(filter_func.name)))", "(**(value)).value.ht->nApplyCount++", "(**(value)).value.ht->nApplyCount--", "(charset)++", "(filter_globals.cookie_array) = (options)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (134217728)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (5)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter) = (6)", "(filter_globals.default_filter) = (filter)", "(filter_globals.default_filter) = (flags)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (134217728)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (5)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = (6)", "(filter_globals.default_filter_flags) = (filter)", "(filter_globals.default_filter_flags) = (flags)", "(filter_globals.default_filter_flags) = atoi((charset))", "(filter_globals.env_array) = (options)", "(filter_globals.get_array) = (options)", "(filter_globals.post_array) = (options)", "(filter_globals.server_array) = (options)", "(filter_globals.session_array) = (options)", "_array_init(((options)), 0)", "_array_init((*(value)), 0)", "_convert_to_string((*(value)))", "_efree(((options)))", "_zval_copy_ctor((((options))))", "_zval_copy_ctor(((*(value))))", "_zval_copy_ctor_func((options))", "_zval_dtor(((options)))", "_zval_dtor((*(value)))", "_zval_dtor_func((options))", "_zval_ptr_dtor((&(options)))", "convert_to_boolean((options))", "filter_func = (filter_func)", "filter_func.function(*(value), flags, options, charset)", "filter_func.function(*value, flags, (options), charset)", "filter_func.function(*value, flags, options, (charset))", "gc_remove_zval_from_buffer((options))", "gc_zval_check_possible_root(((options)))", "gc_zval_possible_root((options))", "i_zval_ptr_dtor((options))", "php_filter_call(&(options), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(options), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(value)).value.ht, ((void *)0))", "zval_unset_isref_p((options))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_convert_to_string((*value))", "_zval_copy_ctor(((*value)))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "filter_func = php_find_filter(516)", "filter_func = php_find_filter(filter)", "filter_func.function(*value, flags, options, charset)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.28580710301947]
								}, {
									"case":	2,
									"scores":	[-5.28580710301947]
								}, {
									"case":	3,
									"scores":	[-5.28580710301947]
								}, {
									"case":	4,
									"scores":	[-5.28580710301947]
								}, {
									"case":	5,
									"scores":	[-5.28580710301947]
								}, {
									"case":	6,
									"scores":	[-5.28580710301947]
								}, {
									"case":	7,
									"scores":	[-5.28580710301947]
								}, {
									"case":	8,
									"scores":	[-5.28580710301947]
								}, {
									"case":	9,
									"scores":	[-5.28580710301947]
								}, {
									"case":	10,
									"scores":	[-5.28580710301947]
								}, {
									"case":	11,
									"scores":	[-5.28580710301947]
								}, {
									"case":	12,
									"scores":	[-5.28580710301947]
								}, {
									"case":	13,
									"scores":	[-5.28580710301947]
								}, {
									"case":	14,
									"scores":	[-5.28580710301947]
								}, {
									"case":	15,
									"scores":	[-5.28580710301947]
								}, {
									"case":	16,
									"scores":	[-5.28580710301947]
								}, {
									"case":	17,
									"scores":	[-5.28580710301947]
								}, {
									"case":	18,
									"scores":	[-5.28580710301947]
								}, {
									"case":	19,
									"scores":	[-5.28580710301947]
								}, {
									"case":	20,
									"scores":	[-5.28580710301947]
								}, {
									"case":	21,
									"scores":	[-5.28580710301947]
								}, {
									"case":	22,
									"scores":	[-5.28580710301947]
								}, {
									"case":	23,
									"scores":	[-5.28580710301947]
								}, {
									"case":	24,
									"scores":	[-5.28580710301947]
								}, {
									"case":	25,
									"scores":	[-5.28580710301947]
								}, {
									"case":	26,
									"scores":	[-5.28580710301947]
								}, {
									"case":	27,
									"scores":	[-5.28580710301947]
								}, {
									"case":	28,
									"scores":	[-5.28580710301947]
								}, {
									"case":	29,
									"scores":	[-5.28580710301947]
								}, {
									"case":	30,
									"scores":	[-5.28580710301947]
								}, {
									"case":	31,
									"scores":	[-5.28580710301947]
								}, {
									"case":	32,
									"scores":	[-5.28580710301947]
								}, {
									"case":	33,
									"scores":	[-5.28580710301947]
								}, {
									"case":	34,
									"scores":	[-5.28580710301947]
								}, {
									"case":	35,
									"scores":	[-5.28580710301947]
								}, {
									"case":	36,
									"scores":	[-5.28580710301947]
								}, {
									"case":	37,
									"scores":	[-5.28580710301947]
								}, {
									"case":	38,
									"scores":	[-5.28580710301947]
								}, {
									"case":	39,
									"scores":	[-5.28580710301947]
								}, {
									"case":	40,
									"scores":	[-5.28580710301947]
								}, {
									"case":	41,
									"scores":	[-5.28580710301947]
								}, {
									"case":	42,
									"scores":	[-5.28580710301947]
								}, {
									"case":	43,
									"scores":	[-5.28580710301947]
								}, {
									"case":	44,
									"scores":	[-5.28580710301947]
								}, {
									"case":	45,
									"scores":	[-5.28580710301947]
								}, {
									"case":	46,
									"scores":	[-5.28580710301947]
								}, {
									"case":	47,
									"scores":	[-5.28580710301947]
								}, {
									"case":	48,
									"scores":	[-5.28580710301947]
								}, {
									"case":	49,
									"scores":	[-5.28580710301947]
								}, {
									"case":	50,
									"scores":	[-5.28580710301947]
								}, {
									"case":	51,
									"scores":	[-5.28580710301947]
								}, {
									"case":	52,
									"scores":	[-5.28580710301947]
								}, {
									"case":	53,
									"scores":	[-5.28580710301947]
								}, {
									"case":	54,
									"scores":	[-5.28580710301947]
								}, {
									"case":	55,
									"scores":	[-5.28580710301947]
								}, {
									"case":	56,
									"scores":	[-5.28580710301947]
								}, {
									"case":	57,
									"scores":	[-5.28580710301947]
								}, {
									"case":	58,
									"scores":	[-5.28580710301947]
								}, {
									"case":	59,
									"scores":	[-5.28580710301947]
								}, {
									"case":	60,
									"scores":	[-5.28580710301947]
								}, {
									"case":	61,
									"scores":	[-5.28580710301947]
								}, {
									"case":	62,
									"scores":	[-5.28580710301947]
								}, {
									"case":	63,
									"scores":	[-5.28580710301947]
								}, {
									"case":	64,
									"scores":	[-5.28580710301947]
								}, {
									"case":	65,
									"scores":	[-5.28580710301947]
								}, {
									"case":	66,
									"scores":	[-5.28580710301947]
								}, {
									"case":	67,
									"scores":	[-5.28580710301947]
								}, {
									"case":	68,
									"scores":	[-5.28580710301947]
								}, {
									"case":	69,
									"scores":	[-5.28580710301947]
								}, {
									"case":	70,
									"scores":	[-5.28580710301947]
								}, {
									"case":	71,
									"scores":	[-5.28580710301947]
								}, {
									"case":	72,
									"scores":	[-5.28580710301947]
								}, {
									"case":	73,
									"scores":	[-5.28580710301947]
								}, {
									"case":	74,
									"scores":	[-5.28580710301947]
								}, {
									"case":	75,
									"scores":	[-5.28580710301947]
								}, {
									"case":	76,
									"scores":	[-5.28580710301947]
								}, {
									"case":	77,
									"scores":	[-5.28580710301947]
								}, {
									"case":	78,
									"scores":	[-5.28580710301947]
								}, {
									"case":	79,
									"scores":	[-5.28580710301947]
								}, {
									"case":	80,
									"scores":	[-5.28580710301947]
								}, {
									"case":	81,
									"scores":	[-5.28580710301947]
								}, {
									"case":	82,
									"scores":	[-5.28580710301947]
								}, {
									"case":	83,
									"scores":	[-5.28580710301947]
								}, {
									"case":	84,
									"scores":	[-5.28580710301947]
								}, {
									"case":	85,
									"scores":	[-5.28580710301947]
								}, {
									"case":	86,
									"scores":	[-5.28580710301947]
								}, {
									"case":	87,
									"scores":	[-5.28580710301947]
								}, {
									"case":	88,
									"scores":	[-5.28580710301947]
								}, {
									"case":	89,
									"scores":	[-5.28580710301947]
								}, {
									"case":	90,
									"scores":	[-5.28580710301947]
								}, {
									"case":	91,
									"scores":	[-5.28580710301947]
								}, {
									"case":	92,
									"scores":	[-5.28580710301947]
								}, {
									"case":	93,
									"scores":	[-5.28580710301947]
								}, {
									"case":	94,
									"scores":	[-5.28580710301947]
								}, {
									"case":	95,
									"scores":	[-5.28580710301947]
								}, {
									"case":	96,
									"scores":	[-5.28580710301947]
								}, {
									"case":	97,
									"scores":	[-5.28580710301947]
								}, {
									"case":	98,
									"scores":	[-5.28580710301947]
								}, {
									"case":	99,
									"scores":	[-5.28580710301947]
								}, {
									"case":	100,
									"scores":	[-5.28580710301947]
								}, {
									"case":	101,
									"scores":	[-5.28580710301947]
								}, {
									"case":	102,
									"scores":	[-5.28580710301947]
								}, {
									"case":	103,
									"scores":	[-5.28580710301947]
								}, {
									"case":	104,
									"scores":	[-5.28580710301947]
								}, {
									"case":	105,
									"scores":	[-5.28580710301947]
								}, {
									"case":	106,
									"scores":	[-5.28580710301947]
								}, {
									"case":	107,
									"scores":	[-5.28580710301947]
								}, {
									"case":	108,
									"scores":	[-5.28580710301947]
								}, {
									"case":	109,
									"scores":	[-5.28580710301947]
								}, {
									"case":	110,
									"scores":	[-5.28580710301947]
								}, {
									"case":	111,
									"scores":	[-5.28580710301947]
								}, {
									"case":	112,
									"scores":	[-5.28580710301947]
								}, {
									"case":	113,
									"scores":	[-5.28580710301947]
								}, {
									"case":	114,
									"scores":	[-5.28580710301947]
								}, {
									"case":	115,
									"scores":	[-5.28580710301947]
								}, {
									"case":	116,
									"scores":	[-5.28580710301947]
								}, {
									"case":	117,
									"scores":	[-5.28580710301947]
								}, {
									"case":	118,
									"scores":	[-5.28580710301947]
								}, {
									"case":	119,
									"scores":	[-5.28580710301947]
								}, {
									"case":	120,
									"scores":	[-5.28580710301947]
								}, {
									"case":	121,
									"scores":	[-5.28580710301947]
								}, {
									"case":	122,
									"scores":	[-5.28580710301947]
								}, {
									"case":	123,
									"scores":	[-5.28580710301947]
								}, {
									"case":	124,
									"scores":	[-5.28580710301947]
								}, {
									"case":	125,
									"scores":	[-5.28580710301947]
								}, {
									"case":	126,
									"scores":	[-5.28580710301947]
								}, {
									"case":	127,
									"scores":	[-5.28580710301947]
								}, {
									"case":	128,
									"scores":	[-5.28580710301947]
								}, {
									"case":	129,
									"scores":	[-5.28580710301947]
								}, {
									"case":	130,
									"scores":	[-5.28580710301947]
								}, {
									"case":	131,
									"scores":	[-5.28580710301947]
								}, {
									"case":	132,
									"scores":	[-5.28580710301947]
								}, {
									"case":	133,
									"scores":	[-5.28580710301947]
								}, {
									"case":	134,
									"scores":	[-5.28580710301947]
								}, {
									"case":	135,
									"scores":	[-5.28580710301947]
								}, {
									"case":	136,
									"scores":	[-5.28580710301947]
								}, {
									"case":	137,
									"scores":	[-5.28580710301947]
								}, {
									"case":	138,
									"scores":	[-5.28580710301947]
								}, {
									"case":	139,
									"scores":	[-5.28580710301947]
								}, {
									"case":	140,
									"scores":	[-5.28580710301947]
								}, {
									"case":	141,
									"scores":	[-5.28580710301947]
								}, {
									"case":	142,
									"scores":	[-5.28580710301947]
								}, {
									"case":	143,
									"scores":	[-5.28580710301947]
								}, {
									"case":	144,
									"scores":	[-5.28580710301947]
								}, {
									"case":	145,
									"scores":	[-5.28580710301947]
								}, {
									"case":	146,
									"scores":	[-5.28580710301947]
								}, {
									"case":	147,
									"scores":	[-5.28580710301947]
								}, {
									"case":	148,
									"scores":	[-5.28580710301947]
								}, {
									"case":	149,
									"scores":	[-5.28580710301947]
								}, {
									"case":	150,
									"scores":	[-5.28580710301947]
								}, {
									"case":	151,
									"scores":	[-5.28580710301947]
								}, {
									"case":	152,
									"scores":	[-5.28580710301947]
								}, {
									"case":	153,
									"scores":	[-5.28580710301947]
								}, {
									"case":	154,
									"scores":	[-5.28580710301947]
								}, {
									"case":	155,
									"scores":	[-5.28580710301947]
								}, {
									"case":	156,
									"scores":	[-5.28580710301947]
								}, {
									"case":	157,
									"scores":	[-5.28580710301947]
								}, {
									"case":	158,
									"scores":	[-5.28580710301947]
								}, {
									"case":	159,
									"scores":	[-5.28580710301947]
								}, {
									"case":	160,
									"scores":	[-5.28580710301947]
								}, {
									"case":	161,
									"scores":	[-5.28580710301947]
								}, {
									"case":	162,
									"scores":	[-5.28580710301947]
								}, {
									"case":	163,
									"scores":	[-5.28580710301947]
								}, {
									"case":	164,
									"scores":	[-5.28580710301947]
								}, {
									"case":	165,
									"scores":	[-5.28580710301947]
								}, {
									"case":	166,
									"scores":	[-5.28580710301947]
								}, {
									"case":	167,
									"scores":	[-5.28580710301947]
								}, {
									"case":	168,
									"scores":	[-5.28580710301947]
								}, {
									"case":	169,
									"scores":	[-5.28580710301947]
								}, {
									"case":	170,
									"scores":	[-5.28580710301947]
								}, {
									"case":	171,
									"scores":	[-8.96063941541947, -9.53899815441947, -8.94079541341947, -10.052940327219471, -9.15168453041947, -8.79511276041947, -8.79511276041947, -9.57215853441947, -9.57215853441947]
								}]
						}, {
							"switch":	1,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	386,
							"begin_column":	2,
							"end_line":	386,
							"end_column":	26,
							"patch_codes":	["if (__is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc))) {\n    _convert_to_string((*value));\n}\n", "if (((*value)->type != 6) || __is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc))) {\n    _convert_to_string((*value));\n}\n", "if (((*value)->type != 6) && !__is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc))) {\n    _convert_to_string((*value));\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.8346353999281453, -1.7650382394281459, -3.6917097384281461, -5.1347606384281459, -4.1609697384281459, -3.6585342294281458, -3.6585342294281458, -3.8890282394281459, -3.8890282394281459]
								}, {
									"case":	2,
									"scores":	[-1.8211448489281463, -0.75154768842814645, -2.6782191874281454, -4.1212700874281465, -3.1474791874281456, -2.645043678428145, -2.645043678428145, -2.8755376884281452, -2.8755376884281452]
								}, {
									"case":	3,
									"scores":	[-1.8211448489281463, -0.75154768842814645, -2.6782191874281454, -4.1212700874281465, -3.1474791874281456, -2.645043678428145, -2.645043678428145, -2.8755376884281452, -2.8755376884281452]
								}]
						}, {
							"switch":	2,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	386,
							"begin_column":	2,
							"end_line":	386,
							"end_column":	26,
							"patch_codes":	["if (!__is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc)))\n    if ((*value)->type != 6) {\n        _convert_to_string((*value));\n    }\n", "if (!__is_neg(\"\", \"L386\", 9, &(value), sizeof (value), &((*value)->type), sizeof ((*value)->type), &(flags), sizeof (flags), &(options), sizeof (options), &(charset), sizeof (charset), &(copy), sizeof (copy), &(filter), sizeof (filter), &((*value)->refcount__gc), sizeof ((*value)->refcount__gc), &((*value)->is_ref__gc), sizeof ((*value)->is_ref__gc)) && ((*value)->type != 6)) {\n    _convert_to_string((*value));\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.48037413351947, -5.41077697301947, -7.33744847201947, -8.78049937201947, -7.80670847201947, -7.30427296301947, -7.30427296301947, -7.53476697301947, -7.53476697301947]
								}, {
									"case":	2,
									"scores":	[-4.08708919951947, -3.0174920390194693, -4.94416353801947, -6.38721443801947, -5.41342353801947, -4.91098802901947, -4.91098802901947, -5.14148203901947, -5.14148203901947]
								}]
						}]
				}, {
					"line":	611,
					"switches":	[{
							"switch":	5,
							"types":	[[], [], [], [], [214], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [], [], [], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [], [], [], [], [], []],
							"begin_line":	612,
							"begin_column":	1,
							"end_line":	612,
							"end_column":	1,
							"patch_codes":	["memset(&(**filter_args), 0, sizeof (*(&(**filter_args))))", "memset(&(**filter_args).is_ref__gc, 0, sizeof (*(&(**filter_args).is_ref__gc)))", "memset(&(**filter_args).refcount__gc, 0, sizeof (*(&(**filter_args).refcount__gc)))", "memset(&(**filter_args).type, 0, sizeof (*(&(**filter_args).type)))", "memset(&(**filter_args).value, 0, sizeof (*(&(**filter_args).value)))", "memset(&(**filter_args).value.dval, 0, sizeof (*(&(**filter_args).value.dval)))", "memset(&(**filter_args).value.ht, 0, sizeof (*(&(**filter_args).value.ht)))", "memset(&(**filter_args).value.lval, 0, sizeof (*(&(**filter_args).value.lval)))", "memset(&(**filter_args).value.obj, 0, sizeof (*(&(**filter_args).value.obj)))", "memset(&(**filter_args).value.obj.handle, 0, sizeof (*(&(**filter_args).value.obj.handle)))", "memset(&(**filter_args).value.obj.handlers, 0, sizeof (*(&(**filter_args).value.obj.handlers)))", "memset(&(**filter_args).value.obj.handlers->add_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->add_ref)))", "memset(&(**filter_args).value.obj.handlers->call_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->call_method)))", "memset(&(**filter_args).value.obj.handlers->cast_object, 0, sizeof (*(&(**filter_args).value.obj.handlers->cast_object)))", "memset(&(**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*(&(**filter_args).value.obj.handlers->clone_obj)))", "memset(&(**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*(&(**filter_args).value.obj.handlers->compare_objects)))", "memset(&(**filter_args).value.obj.handlers->count_elements, 0, sizeof (*(&(**filter_args).value.obj.handlers->count_elements)))", "memset(&(**filter_args).value.obj.handlers->del_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->del_ref)))", "memset(&(**filter_args).value.obj.handlers->get, 0, sizeof (*(&(**filter_args).value.obj.handlers->get)))", "memset(&(**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_entry)))", "memset(&(**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_name)))", "memset(&(**filter_args).value.obj.handlers->get_closure, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_closure)))", "memset(&(**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_constructor)))", "memset(&(**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_debug_info)))", "memset(&(**filter_args).value.obj.handlers->get_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_method)))", "memset(&(**filter_args).value.obj.handlers->get_properties, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_properties)))", "memset(&(**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset(&(**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_dimension)))", "memset(&(**filter_args).value.obj.handlers->has_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_property)))", "memset(&(**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_dimension)))", "memset(&(**filter_args).value.obj.handlers->read_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_property)))", "memset(&(**filter_args).value.obj.handlers->set, 0, sizeof (*(&(**filter_args).value.obj.handlers->set)))", "memset(&(**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_dimension)))", "memset(&(**filter_args).value.obj.handlers->unset_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_property)))", "memset(&(**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_dimension)))", "memset(&(**filter_args).value.obj.handlers->write_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_property)))", "memset(&(**filter_args).value.str, 0, sizeof (*(&(**filter_args).value.str)))", "memset(&(**filtered).is_ref__gc, 0, sizeof (*(&(**filtered).is_ref__gc)))", "memset(&(**filtered).refcount__gc, 0, sizeof (*(&(**filtered).refcount__gc)))", "memset(&(**filtered).type, 0, sizeof (*(&(**filtered).type)))", "memset(&(**filtered).value, 0, sizeof (*(&(**filtered).value)))", "memset((**filter_args).value.ht, 0, sizeof (*((**filter_args).value.ht)))", "memset((**filter_args).value.obj.handlers, 0, sizeof (*((**filter_args).value.obj.handlers)))", "memset((**filter_args).value.obj.handlers->add_ref, 0, sizeof (*((**filter_args).value.obj.handlers->add_ref)))", "memset((**filter_args).value.obj.handlers->call_method, 0, sizeof (*((**filter_args).value.obj.handlers->call_method)))", "memset((**filter_args).value.obj.handlers->cast_object, 0, sizeof (*((**filter_args).value.obj.handlers->cast_object)))", "memset((**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*((**filter_args).value.obj.handlers->clone_obj)))", "memset((**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*((**filter_args).value.obj.handlers->compare_objects)))", "memset((**filter_args).value.obj.handlers->count_elements, 0, sizeof (*((**filter_args).value.obj.handlers->count_elements)))", "memset((**filter_args).value.obj.handlers->del_ref, 0, sizeof (*((**filter_args).value.obj.handlers->del_ref)))", "memset((**filter_args).value.obj.handlers->get, 0, sizeof (*((**filter_args).value.obj.handlers->get)))", "memset((**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_entry)))", "memset((**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_name)))", "memset((**filter_args).value.obj.handlers->get_closure, 0, sizeof (*((**filter_args).value.obj.handlers->get_closure)))", "memset((**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*((**filter_args).value.obj.handlers->get_constructor)))", "memset((**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*((**filter_args).value.obj.handlers->get_debug_info)))", "memset((**filter_args).value.obj.handlers->get_method, 0, sizeof (*((**filter_args).value.obj.handlers->get_method)))", "memset((**filter_args).value.obj.handlers->get_properties, 0, sizeof (*((**filter_args).value.obj.handlers->get_properties)))", "memset((**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*((**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset((**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->has_dimension)))", "memset((**filter_args).value.obj.handlers->has_property, 0, sizeof (*((**filter_args).value.obj.handlers->has_property)))", "memset((**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->read_dimension)))", "memset((**filter_args).value.obj.handlers->read_property, 0, sizeof (*((**filter_args).value.obj.handlers->read_property)))", "memset((**filter_args).value.obj.handlers->set, 0, sizeof (*((**filter_args).value.obj.handlers->set)))", "memset((**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->unset_dimension)))", "memset((**filter_args).value.obj.handlers->unset_property, 0, sizeof (*((**filter_args).value.obj.handlers->unset_property)))", "memset((**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->write_dimension)))", "memset((**filter_args).value.obj.handlers->write_property, 0, sizeof (*((**filter_args).value.obj.handlers->write_property)))", "(**(filter_args)).value.ht->nApplyCount++", "(**(filter_args)).value.ht->nApplyCount--", "(**(filtered)).value.ht->nApplyCount++", "(**(filtered)).value.ht->nApplyCount--", "(**(option)).value.ht->nApplyCount++", "(**(option)).value.ht->nApplyCount--", "(charset)++", "(filter_globals.cookie_array) = (options)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (134217728)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (5)", "(filter_globals.default_filter) = (67108864)", "(filter_globals.default_filter) = (filter)", "(filter_globals.default_filter) = (filter_flags)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (134217728)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (5)", "(filter_globals.default_filter_flags) = (67108864)", "(filter_globals.default_filter_flags) = (filter)", "(filter_globals.default_filter_flags) = (filter_flags)", "(filter_globals.default_filter_flags) = atoi((charset))", "(filter_globals.env_array) = (options)", "(filter_globals.get_array) = (options)", "(filter_globals.post_array) = (options)", "(filter_globals.server_array) = (options)", "(filter_globals.session_array) = (options)", "_array_init(((options)), 0)", "_array_init((*(filter_args)), 0)", "_array_init((*(filtered)), 0)", "_array_init((*(option)), 0)", "_convert_to_string((*(filter_args)))", "_convert_to_string((*(filtered)))", "_convert_to_string((*(option)))", "_efree(((options)))", "_zval_copy_ctor((((options))))", "_zval_copy_ctor(((*(filter_args))))", "_zval_copy_ctor(((*(filtered))))", "_zval_copy_ctor(((*(option))))", "_zval_copy_ctor_func((options))", "_zval_dtor(((options)))", "_zval_dtor((*(filter_args)))", "_zval_dtor((*(filtered)))", "_zval_dtor((*(option)))", "_zval_dtor_func((options))", "_zval_ptr_dtor((&(options)))", "add_next_index_zval(*filtered, (options))", "convert_to_boolean((options))", "filter = (-1)", "filter = (0)", "filter = (1)", "filter = (1024)", "filter = (134217728)", "filter = (16777216)", "filter = (3)", "filter = (33554432)", "filter = (4)", "filter = (5)", "filter = (67108864)", "filter = (filter)", "filter = (filter_flags)", "filter_flags = (-1)", "filter_flags = (0)", "filter_flags = (1)", "filter_flags = (1024)", "filter_flags = (134217728)", "filter_flags = (16777216)", "filter_flags = (3)", "filter_flags = (33554432)", "filter_flags = (4)", "filter_flags = (5)", "filter_flags = (67108864)", "filter_flags = (filter)", "filter_flags = (filter_flags)", "gc_remove_zval_from_buffer((options))", "gc_zval_check_possible_root(((options)))", "gc_zval_possible_root((options))", "i_zval_ptr_dtor((options))", "options = (options)", "options = *(filter_args)", "options = *(filtered)", "options = *(option)", "php_filter_call(&(options), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(options), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter((option), filter, filter_flags, options, charset, copy)", "php_zval_filter(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter(filtered, filter, filter_flags, options, (charset), copy)", "php_zval_filter_recursive((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((option), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, (charset), copy)", "zend_hash_internal_pointer_reset_ex((**(filter_args)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(filtered)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(option)).value.ht, ((void *)0))", "zval_unset_isref_p((options))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((*filtered), 0)", "_zval_dtor((*filtered))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "filter_flags = 0", "options = *option", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "php_zval_filter(filtered, filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, charset, copy)", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	2,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	3,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	4,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	5,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	6,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	7,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	8,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	9,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	10,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	11,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	12,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	13,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	14,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	15,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	16,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	17,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	18,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	19,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	20,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	21,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	22,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	23,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	24,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	25,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	26,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	27,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	28,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	29,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	30,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	31,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	32,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	33,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	34,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	35,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	36,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	37,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	38,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	39,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	40,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	41,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	42,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	43,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	44,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	45,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	46,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	47,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	48,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	49,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	50,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	51,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	52,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	53,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	54,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	55,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	56,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	57,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	58,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	59,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	60,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	61,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	62,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	63,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	64,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	65,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	66,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	67,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	68,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	69,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	70,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	71,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	72,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	73,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	74,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	75,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	76,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	77,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	78,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	79,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	80,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	81,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	82,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	83,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	84,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	85,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	86,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	87,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	88,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	89,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	90,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	91,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	92,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	93,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	94,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	95,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	96,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	97,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	98,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	99,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	100,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	101,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	102,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	103,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	104,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	105,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	106,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	107,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	108,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	109,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	110,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	111,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	112,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	113,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	114,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	115,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	116,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	117,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	118,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	119,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	120,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	121,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	122,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	123,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	124,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	125,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	126,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	127,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	128,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	129,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	130,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	131,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	132,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	133,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	134,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	135,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	136,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	137,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	138,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	139,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	140,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	141,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	142,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	143,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	144,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	145,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	146,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	147,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	148,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	149,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	150,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	151,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	152,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	153,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	154,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	155,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	156,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	157,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	158,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	159,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	160,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	161,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	162,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	163,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	164,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	165,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	166,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	167,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	168,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	169,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	170,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	171,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	172,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	173,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	174,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	175,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	176,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	177,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	178,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	179,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	180,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	181,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	182,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	183,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	184,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	185,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	186,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	187,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	188,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	189,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	190,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	191,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	192,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	193,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	194,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	195,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	196,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	197,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	198,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	199,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	200,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	201,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	202,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	203,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	204,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	205,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	206,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	207,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	208,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	209,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	210,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	211,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	212,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	213,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	214,
									"scores":	[-10.508476579421027, -9.1341251314210261, -10.519269056421027, -12.069633141121027, -10.163740529831028, -10.162253699421028, -10.011135784421025, -10.345682492221027, -10.121446401421027, -10.168142458421027, -10.341931175421028, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027, -10.687603058421027]
								}]
						}, {
							"switch":	6,
							"types":	[[15], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], []],
							"begin_line":	612,
							"begin_column":	3,
							"end_line":	614,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) || __is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (Debug(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (ap_php_asprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (execl(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (execle(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (execlp(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (fprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (php_printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (php_sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? zend_std_get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if (zend_symtable_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) && !__is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[0.506769886871855, 0.93994092687185438, 1.3900896768718556, -1.1697631610281429, 1.0886147914618536, -1.1355222241281449, 0.14483581187185424, -0.63279742312814546, -0.45782900312814512, -0.30236670312814518, -0.47727590312814527, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145, -0.219063013128145]
								}, {
									"case":	2,
									"scores":	[-4.0725560171281439, -3.6393849771281448, -3.1892362271281436, -5.7490890650281443, -3.4907111125381438, -5.7148481281281454, -4.4344900921281454, -5.212123327128146, -5.0371549071281452, -4.8816926071281452, -5.0566018071281453, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-4.0725560171281439, -3.6393849771281448, -3.1892362271281436, -5.7490890650281443, -3.4907111125381438, -5.7148481281281454, -4.4344900921281454, -5.212123327128146, -5.0371549071281452, -4.8816926071281452, -5.0566018071281453, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451, -4.7983889171281451]
								}]
						}, {
							"switch":	7,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	612,
							"begin_column":	3,
							"end_line":	614,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter = (___tmp).value.lval;\n            } else {\n                filter = (**option).value.lval;\n            }\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L612\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)) && (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0)) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter = (___tmp).value.lval;\n        } else {\n            filter = (**option).value.lval;\n        }\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.5018836584210273, -8.0687126184210261, -7.6185638684210266, -10.178416706321027, -7.920038753831026, -10.144175769421027, -8.8638177334210262, -9.6414509684210259, -9.4664825484210269, -9.3110202484210269, -9.485929448421027, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259, -9.2277165584210259]
								}, {
									"case":	2,
									"scores":	[-8.3626323901210267, -7.9294613501210263, -7.4793126001210277, -10.039165438021026, -7.7807874855310262, -10.004924501121026, -8.7245664651210273, -9.502199700121027, -9.3272312801210262, -9.1717689801210263, -9.3466781801210264, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027, -9.088465290121027]
								}]
						}]
				}, {
					"line":	615,
					"switches":	[{
							"switch":	8,
							"types":	[[], [], [], [], [214], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [], [], [], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [], [], [], [], [], []],
							"begin_line":	616,
							"begin_column":	1,
							"end_line":	616,
							"end_column":	1,
							"patch_codes":	["memset(&(**filter_args), 0, sizeof (*(&(**filter_args))))", "memset(&(**filter_args).is_ref__gc, 0, sizeof (*(&(**filter_args).is_ref__gc)))", "memset(&(**filter_args).refcount__gc, 0, sizeof (*(&(**filter_args).refcount__gc)))", "memset(&(**filter_args).type, 0, sizeof (*(&(**filter_args).type)))", "memset(&(**filter_args).value, 0, sizeof (*(&(**filter_args).value)))", "memset(&(**filter_args).value.dval, 0, sizeof (*(&(**filter_args).value.dval)))", "memset(&(**filter_args).value.ht, 0, sizeof (*(&(**filter_args).value.ht)))", "memset(&(**filter_args).value.lval, 0, sizeof (*(&(**filter_args).value.lval)))", "memset(&(**filter_args).value.obj, 0, sizeof (*(&(**filter_args).value.obj)))", "memset(&(**filter_args).value.obj.handle, 0, sizeof (*(&(**filter_args).value.obj.handle)))", "memset(&(**filter_args).value.obj.handlers, 0, sizeof (*(&(**filter_args).value.obj.handlers)))", "memset(&(**filter_args).value.obj.handlers->add_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->add_ref)))", "memset(&(**filter_args).value.obj.handlers->call_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->call_method)))", "memset(&(**filter_args).value.obj.handlers->cast_object, 0, sizeof (*(&(**filter_args).value.obj.handlers->cast_object)))", "memset(&(**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*(&(**filter_args).value.obj.handlers->clone_obj)))", "memset(&(**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*(&(**filter_args).value.obj.handlers->compare_objects)))", "memset(&(**filter_args).value.obj.handlers->count_elements, 0, sizeof (*(&(**filter_args).value.obj.handlers->count_elements)))", "memset(&(**filter_args).value.obj.handlers->del_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->del_ref)))", "memset(&(**filter_args).value.obj.handlers->get, 0, sizeof (*(&(**filter_args).value.obj.handlers->get)))", "memset(&(**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_entry)))", "memset(&(**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_name)))", "memset(&(**filter_args).value.obj.handlers->get_closure, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_closure)))", "memset(&(**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_constructor)))", "memset(&(**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_debug_info)))", "memset(&(**filter_args).value.obj.handlers->get_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_method)))", "memset(&(**filter_args).value.obj.handlers->get_properties, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_properties)))", "memset(&(**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset(&(**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_dimension)))", "memset(&(**filter_args).value.obj.handlers->has_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_property)))", "memset(&(**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_dimension)))", "memset(&(**filter_args).value.obj.handlers->read_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_property)))", "memset(&(**filter_args).value.obj.handlers->set, 0, sizeof (*(&(**filter_args).value.obj.handlers->set)))", "memset(&(**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_dimension)))", "memset(&(**filter_args).value.obj.handlers->unset_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_property)))", "memset(&(**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_dimension)))", "memset(&(**filter_args).value.obj.handlers->write_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_property)))", "memset(&(**filter_args).value.str, 0, sizeof (*(&(**filter_args).value.str)))", "memset(&(**filtered).is_ref__gc, 0, sizeof (*(&(**filtered).is_ref__gc)))", "memset(&(**filtered).refcount__gc, 0, sizeof (*(&(**filtered).refcount__gc)))", "memset(&(**filtered).type, 0, sizeof (*(&(**filtered).type)))", "memset(&(**filtered).value, 0, sizeof (*(&(**filtered).value)))", "memset((**filter_args).value.ht, 0, sizeof (*((**filter_args).value.ht)))", "memset((**filter_args).value.obj.handlers, 0, sizeof (*((**filter_args).value.obj.handlers)))", "memset((**filter_args).value.obj.handlers->add_ref, 0, sizeof (*((**filter_args).value.obj.handlers->add_ref)))", "memset((**filter_args).value.obj.handlers->call_method, 0, sizeof (*((**filter_args).value.obj.handlers->call_method)))", "memset((**filter_args).value.obj.handlers->cast_object, 0, sizeof (*((**filter_args).value.obj.handlers->cast_object)))", "memset((**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*((**filter_args).value.obj.handlers->clone_obj)))", "memset((**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*((**filter_args).value.obj.handlers->compare_objects)))", "memset((**filter_args).value.obj.handlers->count_elements, 0, sizeof (*((**filter_args).value.obj.handlers->count_elements)))", "memset((**filter_args).value.obj.handlers->del_ref, 0, sizeof (*((**filter_args).value.obj.handlers->del_ref)))", "memset((**filter_args).value.obj.handlers->get, 0, sizeof (*((**filter_args).value.obj.handlers->get)))", "memset((**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_entry)))", "memset((**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_name)))", "memset((**filter_args).value.obj.handlers->get_closure, 0, sizeof (*((**filter_args).value.obj.handlers->get_closure)))", "memset((**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*((**filter_args).value.obj.handlers->get_constructor)))", "memset((**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*((**filter_args).value.obj.handlers->get_debug_info)))", "memset((**filter_args).value.obj.handlers->get_method, 0, sizeof (*((**filter_args).value.obj.handlers->get_method)))", "memset((**filter_args).value.obj.handlers->get_properties, 0, sizeof (*((**filter_args).value.obj.handlers->get_properties)))", "memset((**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*((**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset((**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->has_dimension)))", "memset((**filter_args).value.obj.handlers->has_property, 0, sizeof (*((**filter_args).value.obj.handlers->has_property)))", "memset((**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->read_dimension)))", "memset((**filter_args).value.obj.handlers->read_property, 0, sizeof (*((**filter_args).value.obj.handlers->read_property)))", "memset((**filter_args).value.obj.handlers->set, 0, sizeof (*((**filter_args).value.obj.handlers->set)))", "memset((**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->unset_dimension)))", "memset((**filter_args).value.obj.handlers->unset_property, 0, sizeof (*((**filter_args).value.obj.handlers->unset_property)))", "memset((**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->write_dimension)))", "memset((**filter_args).value.obj.handlers->write_property, 0, sizeof (*((**filter_args).value.obj.handlers->write_property)))", "(**(filter_args)).value.ht->nApplyCount++", "(**(filter_args)).value.ht->nApplyCount--", "(**(filtered)).value.ht->nApplyCount++", "(**(filtered)).value.ht->nApplyCount--", "(**(option)).value.ht->nApplyCount++", "(**(option)).value.ht->nApplyCount--", "(charset)++", "(filter_globals.cookie_array) = (options)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (134217728)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (5)", "(filter_globals.default_filter) = (67108864)", "(filter_globals.default_filter) = (filter)", "(filter_globals.default_filter) = (filter_flags)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (134217728)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (5)", "(filter_globals.default_filter_flags) = (67108864)", "(filter_globals.default_filter_flags) = (filter)", "(filter_globals.default_filter_flags) = (filter_flags)", "(filter_globals.default_filter_flags) = atoi((charset))", "(filter_globals.env_array) = (options)", "(filter_globals.get_array) = (options)", "(filter_globals.post_array) = (options)", "(filter_globals.server_array) = (options)", "(filter_globals.session_array) = (options)", "_array_init(((options)), 0)", "_array_init((*(filter_args)), 0)", "_array_init((*(filtered)), 0)", "_array_init((*(option)), 0)", "_convert_to_string((*(filter_args)))", "_convert_to_string((*(filtered)))", "_convert_to_string((*(option)))", "_efree(((options)))", "_zval_copy_ctor((((options))))", "_zval_copy_ctor(((*(filter_args))))", "_zval_copy_ctor(((*(filtered))))", "_zval_copy_ctor(((*(option))))", "_zval_copy_ctor_func((options))", "_zval_dtor(((options)))", "_zval_dtor((*(filter_args)))", "_zval_dtor((*(filtered)))", "_zval_dtor((*(option)))", "_zval_dtor_func((options))", "_zval_ptr_dtor((&(options)))", "add_next_index_zval(*filtered, (options))", "convert_to_boolean((options))", "filter = (-1)", "filter = (0)", "filter = (1)", "filter = (1024)", "filter = (134217728)", "filter = (16777216)", "filter = (3)", "filter = (33554432)", "filter = (4)", "filter = (5)", "filter = (67108864)", "filter = (filter)", "filter = (filter_flags)", "filter_flags = (-1)", "filter_flags = (0)", "filter_flags = (1)", "filter_flags = (1024)", "filter_flags = (134217728)", "filter_flags = (16777216)", "filter_flags = (3)", "filter_flags = (33554432)", "filter_flags = (4)", "filter_flags = (5)", "filter_flags = (67108864)", "filter_flags = (filter)", "filter_flags = (filter_flags)", "gc_remove_zval_from_buffer((options))", "gc_zval_check_possible_root(((options)))", "gc_zval_possible_root((options))", "i_zval_ptr_dtor((options))", "options = (options)", "options = *(filter_args)", "options = *(filtered)", "options = *(option)", "php_filter_call(&(options), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(options), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter((option), filter, filter_flags, options, charset, copy)", "php_zval_filter(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter(filtered, filter, filter_flags, options, (charset), copy)", "php_zval_filter_recursive((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((option), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, (charset), copy)", "zend_hash_internal_pointer_reset_ex((**(filter_args)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(filtered)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(option)).value.ht, ((void *)0))", "zval_unset_isref_p((options))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((*filtered), 0)", "_zval_dtor((*filtered))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "filter_flags = 0", "options = *option", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "php_zval_filter(filtered, filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, charset, copy)", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	2,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	3,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	4,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	5,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	6,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	7,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	8,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	9,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	10,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	11,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	12,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	13,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	14,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	15,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	16,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	17,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	18,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	19,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	20,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	21,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	22,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	23,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	24,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	25,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	26,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	27,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	28,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	29,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	30,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	31,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	32,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	33,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	34,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	35,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	36,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	37,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	38,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	39,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	40,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	41,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	42,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	43,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	44,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	45,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	46,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	47,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	48,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	49,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	50,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	51,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	52,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	53,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	54,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	55,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	56,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	57,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	58,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	59,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	60,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	61,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	62,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	63,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	64,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	65,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	66,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	67,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	68,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	69,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	70,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	71,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	72,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	73,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	74,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	75,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	76,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	77,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	78,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	79,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	80,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	81,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	82,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	83,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	84,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	85,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	86,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	87,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	88,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	89,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	90,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	91,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	92,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	93,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	94,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	95,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	96,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	97,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	98,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	99,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	100,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	101,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	102,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	103,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	104,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	105,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	106,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	107,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	108,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	109,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	110,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	111,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	112,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	113,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	114,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	115,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	116,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	117,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	118,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	119,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	120,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	121,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	122,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	123,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	124,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	125,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	126,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	127,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	128,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	129,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	130,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	131,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	132,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	133,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	134,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	135,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	136,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	137,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	138,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	139,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	140,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	141,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	142,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	143,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	144,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	145,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	146,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	147,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	148,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	149,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	150,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	151,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	152,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	153,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	154,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	155,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	156,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	157,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	158,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	159,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	160,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	161,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	162,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	163,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	164,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	165,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	166,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	167,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	168,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	169,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	170,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	171,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	172,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	173,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	174,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	175,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	176,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	177,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	178,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	179,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	180,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	181,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	182,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	183,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	184,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	185,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	186,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	187,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	188,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	189,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	190,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	191,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	192,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	193,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	194,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	195,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	196,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	197,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	198,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	199,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	200,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	201,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	202,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	203,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	204,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	205,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	206,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	207,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	208,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	209,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	210,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	211,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	212,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	213,
									"scores":	[-6.8818209811035072]
								}, {
									"case":	214,
									"scores":	[-11.313795512103507, -9.3680181841035068, -10.523730589103508, -13.101162373803508, -10.667624533413507, -9.6331067981035066, -9.728048271103507, -10.826281784903507, -10.602045694103508, -10.648741751103508, -10.822530468103507, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506, -11.168202351103506]
								}]
						}, {
							"switch":	9,
							"types":	[[15], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], []],
							"begin_line":	616,
							"begin_column":	3,
							"end_line":	622,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) || __is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (Debug(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (ap_php_asprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (execl(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (execle(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (execlp(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (fprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (php_printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (php_sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? zend_std_get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if (zend_symtable_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) && !__is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.010872905928144, -3.9268922899281415, -3.6642935654281419, -6.8526897338281465, -4.3600521202881435, -6.1604496404281459, -3.6207781254281426, -5.8566052264281456, -5.8146942854281445, -5.6592319854281445, -5.8341411854281446, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453, -5.5759282954281453]
								}, {
									"case":	2,
									"scores":	[-3.969929442628144, -2.8859488266281446, -2.6233501021281431, -5.8117462705281469, -3.3191086569881425, -5.1195061771281463, -2.5798346621281434, -4.8156617631281451, -4.7737508221281466, -4.6182885221281467, -4.7931977221281468, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.969929442628144, -2.8859488266281446, -2.6233501021281431, -5.8117462705281469, -3.3191086569881425, -5.1195061771281463, -2.5798346621281434, -4.8156617631281451, -4.7737508221281466, -4.6182885221281467, -4.7931977221281468, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465, -4.5349848321281465]
								}]
						}, {
							"switch":	10,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	616,
							"begin_column":	3,
							"end_line":	622,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter_flags = (___tmp).value.lval;\n            } else {\n                filter_flags = (**option).value.lval;\n            }\n        }\n        ;\n        if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n            filter_flags |= 33554432;\n        }\n    }\n", "if (!__is_neg(\"\", \"L616\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter_flags), sizeof (filter_flags), &(filter), sizeof (filter), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)) && (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0)) {\n    {\n        if ((**option).type != 1) {\n            zval ___tmp = **option;\n            _zval_copy_ctor((&___tmp));\n            convert_to_long(&___tmp);\n            filter_flags = (___tmp).value.lval;\n        } else {\n            filter_flags = (**option).value.lval;\n        }\n    }\n    ;\n    if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n        filter_flags |= 33554432;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.89812546160351, -7.814144845603507, -7.5515461211035069, -10.739942289503507, -8.2473046759635071, -10.047702196103508, -7.5080306811035067, -9.74385778210351, -9.7019468411035064, -9.5464845411035064, -9.72139374110351, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072, -9.4631808511035072]
								}, {
									"case":	2,
									"scores":	[-8.4177860083035068, -7.3338053923035051, -7.0712066678035033, -10.259602836203507, -7.766965222663508, -9.5673627428035068, -7.0276912278035057, -9.2635183288035066, -9.2216073878035072, -9.0661450878035073, -9.24105428780351, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062, -8.9828413978035062]
								}]
						}]
				}, {
					"line":	623,
					"switches":	[{
							"switch":	11,
							"types":	[[], [], [], [], [214], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [], [], [], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [], [], [], [], [], []],
							"begin_line":	624,
							"begin_column":	1,
							"end_line":	624,
							"end_column":	1,
							"patch_codes":	["memset(&(**filter_args), 0, sizeof (*(&(**filter_args))))", "memset(&(**filter_args).is_ref__gc, 0, sizeof (*(&(**filter_args).is_ref__gc)))", "memset(&(**filter_args).refcount__gc, 0, sizeof (*(&(**filter_args).refcount__gc)))", "memset(&(**filter_args).type, 0, sizeof (*(&(**filter_args).type)))", "memset(&(**filter_args).value, 0, sizeof (*(&(**filter_args).value)))", "memset(&(**filter_args).value.dval, 0, sizeof (*(&(**filter_args).value.dval)))", "memset(&(**filter_args).value.ht, 0, sizeof (*(&(**filter_args).value.ht)))", "memset(&(**filter_args).value.lval, 0, sizeof (*(&(**filter_args).value.lval)))", "memset(&(**filter_args).value.obj, 0, sizeof (*(&(**filter_args).value.obj)))", "memset(&(**filter_args).value.obj.handle, 0, sizeof (*(&(**filter_args).value.obj.handle)))", "memset(&(**filter_args).value.obj.handlers, 0, sizeof (*(&(**filter_args).value.obj.handlers)))", "memset(&(**filter_args).value.obj.handlers->add_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->add_ref)))", "memset(&(**filter_args).value.obj.handlers->call_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->call_method)))", "memset(&(**filter_args).value.obj.handlers->cast_object, 0, sizeof (*(&(**filter_args).value.obj.handlers->cast_object)))", "memset(&(**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*(&(**filter_args).value.obj.handlers->clone_obj)))", "memset(&(**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*(&(**filter_args).value.obj.handlers->compare_objects)))", "memset(&(**filter_args).value.obj.handlers->count_elements, 0, sizeof (*(&(**filter_args).value.obj.handlers->count_elements)))", "memset(&(**filter_args).value.obj.handlers->del_ref, 0, sizeof (*(&(**filter_args).value.obj.handlers->del_ref)))", "memset(&(**filter_args).value.obj.handlers->get, 0, sizeof (*(&(**filter_args).value.obj.handlers->get)))", "memset(&(**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_entry)))", "memset(&(**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_class_name)))", "memset(&(**filter_args).value.obj.handlers->get_closure, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_closure)))", "memset(&(**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_constructor)))", "memset(&(**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_debug_info)))", "memset(&(**filter_args).value.obj.handlers->get_method, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_method)))", "memset(&(**filter_args).value.obj.handlers->get_properties, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_properties)))", "memset(&(**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*(&(**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset(&(**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_dimension)))", "memset(&(**filter_args).value.obj.handlers->has_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->has_property)))", "memset(&(**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_dimension)))", "memset(&(**filter_args).value.obj.handlers->read_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->read_property)))", "memset(&(**filter_args).value.obj.handlers->set, 0, sizeof (*(&(**filter_args).value.obj.handlers->set)))", "memset(&(**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_dimension)))", "memset(&(**filter_args).value.obj.handlers->unset_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->unset_property)))", "memset(&(**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_dimension)))", "memset(&(**filter_args).value.obj.handlers->write_property, 0, sizeof (*(&(**filter_args).value.obj.handlers->write_property)))", "memset(&(**filter_args).value.str, 0, sizeof (*(&(**filter_args).value.str)))", "memset(&(**filtered).is_ref__gc, 0, sizeof (*(&(**filtered).is_ref__gc)))", "memset(&(**filtered).refcount__gc, 0, sizeof (*(&(**filtered).refcount__gc)))", "memset(&(**filtered).type, 0, sizeof (*(&(**filtered).type)))", "memset(&(**filtered).value, 0, sizeof (*(&(**filtered).value)))", "memset((**filter_args).value.ht, 0, sizeof (*((**filter_args).value.ht)))", "memset((**filter_args).value.obj.handlers, 0, sizeof (*((**filter_args).value.obj.handlers)))", "memset((**filter_args).value.obj.handlers->add_ref, 0, sizeof (*((**filter_args).value.obj.handlers->add_ref)))", "memset((**filter_args).value.obj.handlers->call_method, 0, sizeof (*((**filter_args).value.obj.handlers->call_method)))", "memset((**filter_args).value.obj.handlers->cast_object, 0, sizeof (*((**filter_args).value.obj.handlers->cast_object)))", "memset((**filter_args).value.obj.handlers->clone_obj, 0, sizeof (*((**filter_args).value.obj.handlers->clone_obj)))", "memset((**filter_args).value.obj.handlers->compare_objects, 0, sizeof (*((**filter_args).value.obj.handlers->compare_objects)))", "memset((**filter_args).value.obj.handlers->count_elements, 0, sizeof (*((**filter_args).value.obj.handlers->count_elements)))", "memset((**filter_args).value.obj.handlers->del_ref, 0, sizeof (*((**filter_args).value.obj.handlers->del_ref)))", "memset((**filter_args).value.obj.handlers->get, 0, sizeof (*((**filter_args).value.obj.handlers->get)))", "memset((**filter_args).value.obj.handlers->get_class_entry, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_entry)))", "memset((**filter_args).value.obj.handlers->get_class_name, 0, sizeof (*((**filter_args).value.obj.handlers->get_class_name)))", "memset((**filter_args).value.obj.handlers->get_closure, 0, sizeof (*((**filter_args).value.obj.handlers->get_closure)))", "memset((**filter_args).value.obj.handlers->get_constructor, 0, sizeof (*((**filter_args).value.obj.handlers->get_constructor)))", "memset((**filter_args).value.obj.handlers->get_debug_info, 0, sizeof (*((**filter_args).value.obj.handlers->get_debug_info)))", "memset((**filter_args).value.obj.handlers->get_method, 0, sizeof (*((**filter_args).value.obj.handlers->get_method)))", "memset((**filter_args).value.obj.handlers->get_properties, 0, sizeof (*((**filter_args).value.obj.handlers->get_properties)))", "memset((**filter_args).value.obj.handlers->get_property_ptr_ptr, 0, sizeof (*((**filter_args).value.obj.handlers->get_property_ptr_ptr)))", "memset((**filter_args).value.obj.handlers->has_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->has_dimension)))", "memset((**filter_args).value.obj.handlers->has_property, 0, sizeof (*((**filter_args).value.obj.handlers->has_property)))", "memset((**filter_args).value.obj.handlers->read_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->read_dimension)))", "memset((**filter_args).value.obj.handlers->read_property, 0, sizeof (*((**filter_args).value.obj.handlers->read_property)))", "memset((**filter_args).value.obj.handlers->set, 0, sizeof (*((**filter_args).value.obj.handlers->set)))", "memset((**filter_args).value.obj.handlers->unset_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->unset_dimension)))", "memset((**filter_args).value.obj.handlers->unset_property, 0, sizeof (*((**filter_args).value.obj.handlers->unset_property)))", "memset((**filter_args).value.obj.handlers->write_dimension, 0, sizeof (*((**filter_args).value.obj.handlers->write_dimension)))", "memset((**filter_args).value.obj.handlers->write_property, 0, sizeof (*((**filter_args).value.obj.handlers->write_property)))", "(**(filter_args)).value.ht->nApplyCount++", "(**(filter_args)).value.ht->nApplyCount--", "(**(filtered)).value.ht->nApplyCount++", "(**(filtered)).value.ht->nApplyCount--", "(**(option)).value.ht->nApplyCount++", "(**(option)).value.ht->nApplyCount--", "(charset)++", "(filter_globals.cookie_array) = (options)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (134217728)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (5)", "(filter_globals.default_filter) = (67108864)", "(filter_globals.default_filter) = (filter)", "(filter_globals.default_filter) = (filter_flags)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (134217728)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (5)", "(filter_globals.default_filter_flags) = (67108864)", "(filter_globals.default_filter_flags) = (filter)", "(filter_globals.default_filter_flags) = (filter_flags)", "(filter_globals.default_filter_flags) = atoi((charset))", "(filter_globals.env_array) = (options)", "(filter_globals.get_array) = (options)", "(filter_globals.post_array) = (options)", "(filter_globals.server_array) = (options)", "(filter_globals.session_array) = (options)", "_array_init(((options)), 0)", "_array_init((*(filter_args)), 0)", "_array_init((*(filtered)), 0)", "_array_init((*(option)), 0)", "_convert_to_string((*(filter_args)))", "_convert_to_string((*(filtered)))", "_convert_to_string((*(option)))", "_efree(((options)))", "_zval_copy_ctor((((options))))", "_zval_copy_ctor(((*(filter_args))))", "_zval_copy_ctor(((*(filtered))))", "_zval_copy_ctor(((*(option))))", "_zval_copy_ctor_func((options))", "_zval_dtor(((options)))", "_zval_dtor((*(filter_args)))", "_zval_dtor((*(filtered)))", "_zval_dtor((*(option)))", "_zval_dtor_func((options))", "_zval_ptr_dtor((&(options)))", "add_next_index_zval(*filtered, (options))", "convert_to_boolean((options))", "filter = (-1)", "filter = (0)", "filter = (1)", "filter = (1024)", "filter = (134217728)", "filter = (16777216)", "filter = (3)", "filter = (33554432)", "filter = (4)", "filter = (5)", "filter = (67108864)", "filter = (filter)", "filter = (filter_flags)", "filter_flags = (-1)", "filter_flags = (0)", "filter_flags = (1)", "filter_flags = (1024)", "filter_flags = (134217728)", "filter_flags = (16777216)", "filter_flags = (3)", "filter_flags = (33554432)", "filter_flags = (4)", "filter_flags = (5)", "filter_flags = (67108864)", "filter_flags = (filter)", "filter_flags = (filter_flags)", "gc_remove_zval_from_buffer((options))", "gc_zval_check_possible_root(((options)))", "gc_zval_possible_root((options))", "i_zval_ptr_dtor((options))", "options = (options)", "options = *(filter_args)", "options = *(filtered)", "options = *(option)", "php_filter_call(&(options), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(options), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter((option), filter, filter_flags, options, charset, copy)", "php_zval_filter(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter(filtered, filter, filter_flags, options, (charset), copy)", "php_zval_filter_recursive((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((option), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, (charset), copy)", "zend_hash_internal_pointer_reset_ex((**(filter_args)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(filtered)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(option)).value.ht, ((void *)0))", "zval_unset_isref_p((options))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((*filtered), 0)", "_zval_dtor((*filtered))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "filter_flags = 0", "options = *option", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "php_zval_filter(filtered, filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, charset, copy)", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	2,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	3,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	4,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	5,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	6,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	7,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	8,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	9,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	10,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	11,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	12,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	13,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	14,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	15,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	16,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	17,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	18,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	19,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	20,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	21,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	22,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	23,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	24,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	25,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	26,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	27,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	28,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	29,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	30,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	31,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	32,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	33,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	34,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	35,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	36,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	37,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	38,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	39,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	40,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	41,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	42,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	43,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	44,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	45,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	46,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	47,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	48,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	49,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	50,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	51,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	52,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	53,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	54,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	55,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	56,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	57,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	58,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	59,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	60,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	61,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	62,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	63,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	64,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	65,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	66,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	67,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	68,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	69,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	70,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	71,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	72,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	73,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	74,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	75,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	76,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	77,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	78,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	79,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	80,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	81,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	82,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	83,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	84,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	85,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	86,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	87,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	88,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	89,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	90,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	91,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	92,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	93,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	94,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	95,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	96,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	97,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	98,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	99,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	100,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	101,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	102,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	103,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	104,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	105,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	106,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	107,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	108,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	109,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	110,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	111,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	112,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	113,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	114,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	115,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	116,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	117,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	118,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	119,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	120,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	121,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	122,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	123,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	124,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	125,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	126,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	127,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	128,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	129,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	130,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	131,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	132,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	133,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	134,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	135,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	136,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	137,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	138,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	139,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	140,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	141,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	142,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	143,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	144,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	145,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	146,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	147,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	148,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	149,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	150,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	151,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	152,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	153,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	154,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	155,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	156,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	157,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	158,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	159,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	160,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	161,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	162,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	163,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	164,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	165,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	166,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	167,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	168,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	169,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	170,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	171,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	172,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	173,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	174,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	175,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	176,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	177,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	178,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	179,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	180,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	181,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	182,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	183,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	184,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	185,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	186,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	187,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	188,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	189,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	190,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	191,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	192,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	193,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	194,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	195,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	196,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	197,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	198,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	199,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	200,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	201,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	202,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	203,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	204,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	205,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	206,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	207,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	208,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	209,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	210,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	211,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	212,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	213,
									"scores":	[-6.8616182737859877]
								}, {
									"case":	214,
									"scores":	[-11.293592804785987, -9.34781547678599, -10.503527881785988, -13.080959666485988, -10.647421826095988, -8.79054718378599, -9.94745079858599, -8.3370387447859873, -10.581842986785988, -10.628539043785988, -10.802327760785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987, -11.147999643785987]
								}]
						}, {
							"switch":	12,
							"types":	[[15], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], []],
							"begin_line":	624,
							"begin_column":	3,
							"end_line":	633,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) || __is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (Debug(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (ap_php_asprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (execl(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (execle(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (execlp(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (fprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (php_printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (php_sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (printf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (sprintf(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? zend_std_get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if (zend_symtable_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n", "if ((zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) && !__is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure))) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.6972934999281453, -1.4179762339281452, -1.069663959428143, -4.687451389928146, -2.7628196288781446, -1.1908758294281436, -4.5260225104281462, -3.8164308204281459, -4.351004989428148, -4.1955426894281471, -4.3704518894281472, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147, -4.112238999428147]
								}, {
									"case":	2,
									"scores":	[-3.1170369529281432, -1.8377196869281431, -1.4894074124281422, -5.1071948429281449, -3.182563081878143, -1.6106192824281447, -4.9457659634281459, -4.2361742734281442, -4.770748442428145, -4.6152861424281451, -4.7901953424281452, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.1170369529281432, -1.8377196869281431, -1.4894074124281422, -5.1071948429281449, -3.182563081878143, -1.6106192824281447, -4.9457659634281459, -4.2361742734281442, -4.770748442428145, -4.6152861424281451, -4.7901953424281452, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449, -4.5319824524281449]
								}]
						}, {
							"switch":	13,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	624,
							"begin_column":	3,
							"end_line":	633,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)))\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n        if (filter != 1024) {\n            if ((**option).type == 4) {\n                options = *option;\n            }\n        } else {\n            options = *option;\n            filter_flags = 0;\n        }\n    }\n", "if (!__is_neg(\"\", \"L624\", 38, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &((**filter_args).value.obj.handlers), sizeof ((**filter_args).value.obj.handlers), &((**filter_args).value.obj.handlers->get_properties), sizeof ((**filter_args).value.obj.handlers->get_properties), &(filter), sizeof (filter), &(options), sizeof (options), &(filter_flags), sizeof (filter_flags), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc), &((**filter_args).value.obj.handle), sizeof ((**filter_args).value.obj.handle), &((**filter_args).value.obj.handlers->add_ref), sizeof ((**filter_args).value.obj.handlers->add_ref), &((**filter_args).value.obj.handlers->del_ref), sizeof ((**filter_args).value.obj.handlers->del_ref), &((**filter_args).value.obj.handlers->clone_obj), sizeof ((**filter_args).value.obj.handlers->clone_obj), &((**filter_args).value.obj.handlers->read_property), sizeof ((**filter_args).value.obj.handlers->read_property), &((**filter_args).value.obj.handlers->write_property), sizeof ((**filter_args).value.obj.handlers->write_property), &((**filter_args).value.obj.handlers->read_dimension), sizeof ((**filter_args).value.obj.handlers->read_dimension), &((**filter_args).value.obj.handlers->write_dimension), sizeof ((**filter_args).value.obj.handlers->write_dimension), &((**filter_args).value.obj.handlers->get_property_ptr_ptr), sizeof ((**filter_args).value.obj.handlers->get_property_ptr_ptr), &((**filter_args).value.obj.handlers->get), sizeof ((**filter_args).value.obj.handlers->get), &((**filter_args).value.obj.handlers->set), sizeof ((**filter_args).value.obj.handlers->set), &((**filter_args).value.obj.handlers->has_property), sizeof ((**filter_args).value.obj.handlers->has_property), &((**filter_args).value.obj.handlers->unset_property), sizeof ((**filter_args).value.obj.handlers->unset_property), &((**filter_args).value.obj.handlers->has_dimension), sizeof ((**filter_args).value.obj.handlers->has_dimension), &((**filter_args).value.obj.handlers->unset_dimension), sizeof ((**filter_args).value.obj.handlers->unset_dimension), &((**filter_args).value.obj.handlers->get_method), sizeof ((**filter_args).value.obj.handlers->get_method), &((**filter_args).value.obj.handlers->call_method), sizeof ((**filter_args).value.obj.handlers->call_method), &((**filter_args).value.obj.handlers->get_constructor), sizeof ((**filter_args).value.obj.handlers->get_constructor), &((**filter_args).value.obj.handlers->get_class_entry), sizeof ((**filter_args).value.obj.handlers->get_class_entry), &((**filter_args).value.obj.handlers->get_class_name), sizeof ((**filter_args).value.obj.handlers->get_class_name), &((**filter_args).value.obj.handlers->compare_objects), sizeof ((**filter_args).value.obj.handlers->compare_objects), &((**filter_args).value.obj.handlers->cast_object), sizeof ((**filter_args).value.obj.handlers->cast_object), &((**filter_args).value.obj.handlers->count_elements), sizeof ((**filter_args).value.obj.handlers->count_elements), &((**filter_args).value.obj.handlers->get_debug_info), sizeof ((**filter_args).value.obj.handlers->get_debug_info), &((**filter_args).value.obj.handlers->get_closure), sizeof ((**filter_args).value.obj.handlers->get_closure)) && (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0)) {\n    if (filter != 1024) {\n        if ((**option).type == 4) {\n            options = *option;\n        }\n    } else {\n        options = *option;\n        filter_flags = 0;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.02183925428599, -6.7425219882859873, -6.3942097137859877, -10.011997144285989, -8.0873653832359871, -6.5154215837859875, -9.85056826478599, -9.14097657478599, -9.6755507437859869, -9.520088443785987, -9.69499764378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599, -9.43678475378599]
								}, {
									"case":	2,
									"scores":	[-7.7496344212859878, -6.4703171552859855, -6.122004880785985, -9.73979231128599, -7.815160550235988, -6.2432167507859866, -9.57836343178599, -8.8687717417859862, -9.4033459107859869, -9.247883610785987, -9.4227928107859871, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599, -9.16457992078599]
								}]
						}]
				}, {
					"line":	610,
					"switches":	[{
							"switch":	3,
							"types":	[[], [], [], [], [], [], [], [], [], [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], [], [], [], [], [], []],
							"begin_line":	611,
							"begin_column":	7,
							"end_line":	611,
							"end_column":	7,
							"patch_codes":	["(**(filter_args)).value.ht->nApplyCount++", "(**(filter_args)).value.ht->nApplyCount--", "(**(filtered)).value.ht->nApplyCount++", "(**(filtered)).value.ht->nApplyCount--", "(**(option)).value.ht->nApplyCount++", "(**(option)).value.ht->nApplyCount--", "(charset)++", "(filter_globals.cookie_array) = (options)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (134217728)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (5)", "(filter_globals.default_filter) = (67108864)", "(filter_globals.default_filter) = (filter)", "(filter_globals.default_filter) = (filter_flags)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (134217728)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (5)", "(filter_globals.default_filter_flags) = (67108864)", "(filter_globals.default_filter_flags) = (filter)", "(filter_globals.default_filter_flags) = (filter_flags)", "(filter_globals.default_filter_flags) = atoi((charset))", "(filter_globals.env_array) = (options)", "(filter_globals.get_array) = (options)", "(filter_globals.post_array) = (options)", "(filter_globals.server_array) = (options)", "(filter_globals.session_array) = (options)", "_array_init(((options)), 0)", "_array_init((*(filter_args)), 0)", "_array_init((*(filtered)), 0)", "_array_init((*(option)), 0)", "_convert_to_string((*(filter_args)))", "_convert_to_string((*(filtered)))", "_convert_to_string((*(option)))", "_efree(((options)))", "_zval_copy_ctor((((options))))", "_zval_copy_ctor(((*(filter_args))))", "_zval_copy_ctor(((*(filtered))))", "_zval_copy_ctor(((*(option))))", "_zval_copy_ctor_func((options))", "_zval_dtor(((options)))", "_zval_dtor((*(filter_args)))", "_zval_dtor((*(filtered)))", "_zval_dtor((*(option)))", "_zval_dtor_func((options))", "_zval_ptr_dtor((&(options)))", "add_next_index_zval(*filtered, (options))", "convert_to_boolean((options))", "filter = (-1)", "filter = (0)", "filter = (1)", "filter = (1024)", "filter = (134217728)", "filter = (16777216)", "filter = (3)", "filter = (33554432)", "filter = (4)", "filter = (5)", "filter = (67108864)", "filter = (filter)", "filter = (filter_flags)", "filter_flags = (-1)", "filter_flags = (0)", "filter_flags = (1)", "filter_flags = (1024)", "filter_flags = (134217728)", "filter_flags = (16777216)", "filter_flags = (3)", "filter_flags = (33554432)", "filter_flags = (4)", "filter_flags = (5)", "filter_flags = (67108864)", "filter_flags = (filter)", "filter_flags = (filter_flags)", "gc_remove_zval_from_buffer((options))", "gc_zval_check_possible_root(((options)))", "gc_zval_possible_root((options))", "i_zval_ptr_dtor((options))", "options = (options)", "options = *(filter_args)", "options = *(filtered)", "options = *(option)", "php_filter_call(&(options), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(options), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter((option), filter, filter_flags, options, charset, copy)", "php_zval_filter(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter(filtered, filter, filter_flags, options, (charset), copy)", "php_zval_filter_recursive((filter_args), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((filtered), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive((option), filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, (options), charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, (charset), copy)", "zend_hash_internal_pointer_reset_ex((**(filter_args)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(filtered)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(option)).value.ht, ((void *)0))", "zval_unset_isref_p((options))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((*filtered), 0)", "_zval_dtor((*filtered))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "filter_flags = 0", "options = *option", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "php_zval_filter(filtered, filter, filter_flags, options, charset, copy)", "php_zval_filter_recursive(filtered, filter, filter_flags, options, charset, copy)", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	2,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	3,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	4,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	5,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	6,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	7,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	8,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	9,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	10,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	11,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	12,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	13,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	14,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	15,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	16,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	17,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	18,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	19,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	20,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	21,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	22,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	23,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	24,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	25,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	26,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	27,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	28,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	29,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	30,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	31,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	32,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	33,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	34,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	35,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	36,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	37,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	38,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	39,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	40,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	41,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	42,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	43,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	44,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	45,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	46,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	47,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	48,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	49,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	50,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	51,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	52,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	53,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	54,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	55,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	56,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	57,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	58,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	59,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	60,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	61,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	62,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	63,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	64,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	65,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	66,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	67,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	68,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	69,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	70,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	71,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	72,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	73,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	74,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	75,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	76,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	77,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	78,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	79,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	80,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	81,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	82,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	83,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	84,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	85,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	86,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	87,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	88,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	89,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	90,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	91,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	92,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	93,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	94,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	95,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	96,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	97,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	98,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	99,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	100,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	101,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	102,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	103,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	104,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	105,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	106,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	107,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	108,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	109,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	110,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	111,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	112,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	113,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	114,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	115,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	116,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	117,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	118,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	119,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	120,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	121,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	122,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	123,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	124,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	125,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	126,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	127,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	128,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	129,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	130,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	131,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	132,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	133,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	134,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	135,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	136,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	137,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	138,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	139,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	140,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	141,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	142,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	143,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	144,
									"scores":	[-6.9020236884210266]
								}, {
									"case":	145,
									"scores":	[-6.9020236884210266]
								}]
						}, {
							"switch":	4,
							"types":	[[2], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	611,
							"begin_column":	9,
							"end_line":	634,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L611\", 11, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc))) {\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter = (___tmp).value.lval;\n            } else {\n                filter = (**option).value.lval;\n            }\n        }\n        ;\n    }\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter_flags = (___tmp).value.lval;\n            } else {\n                filter_flags = (**option).value.lval;\n            }\n        }\n        ;\n        if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n            filter_flags |= 33554432;\n        }\n    }\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n        if (filter != 1024) {\n            if ((**option).type == 4) {\n                options = *option;\n            }\n        } else {\n            options = *option;\n            filter_flags = 0;\n        }\n    }\n}\n", "if ((filter_args) && !__is_neg(\"\", \"L611\", 11, &(filter_args), sizeof (filter_args), &(option), sizeof (option), &((**filter_args).type), sizeof ((**filter_args).type), &(filter), sizeof (filter), &(filter_flags), sizeof (filter_flags), &(options), sizeof (options), &(filtered), sizeof (filtered), &(copy), sizeof (copy), &(charset), sizeof (charset), &((**filter_args).refcount__gc), sizeof ((**filter_args).refcount__gc), &((**filter_args).is_ref__gc), sizeof ((**filter_args).is_ref__gc))) {\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"filter\", sizeof (\"filter\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter = (___tmp).value.lval;\n            } else {\n                filter = (**option).value.lval;\n            }\n        }\n        ;\n    }\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"flags\", sizeof (\"flags\"), (void **)&option) == 0) {\n        {\n            if ((**option).type != 1) {\n                zval ___tmp = **option;\n                _zval_copy_ctor((&___tmp));\n                convert_to_long(&___tmp);\n                filter_flags = (___tmp).value.lval;\n            } else {\n                filter_flags = (**option).value.lval;\n            }\n        }\n        ;\n        if (!(filter_flags & 16777216 || filter_flags & 67108864)) {\n            filter_flags |= 33554432;\n        }\n    }\n    if (zend_hash_find(((**filter_args).type == 4 ? (**filter_args).value.ht : (((**filter_args).type == 5 ? (**filter_args).value.obj.handlers->get_properties((*filter_args)) : ((void *)0)))), \"options\", sizeof (\"options\"), (void **)&option) == 0) {\n        if (filter != 1024) {\n            if ((**option).type == 4) {\n                options = *option;\n            }\n        } else {\n            options = *option;\n            filter_flags = 0;\n        }\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.8649685564281455, -4.2364608664281453, -3.7005985664281451, -4.2669477774281459, -7.0255602474281451, -6.8544750774281455, -6.6794575564281455, -6.5239952564281456, -6.6989044564281457, -6.4406915664281454, -6.4406915664281454]
								}, {
									"case":	2,
									"scores":	[-3.1507801754281459, -2.5222724854281457, -1.9864101854281455, -2.5527593964281459, -5.3113718664281464, -5.140286696428146, -4.9652691754281459, -4.809806875428146, -4.9847160754281461, -4.7265031854281458, -4.7265031854281458]
								}]
						}]
				}, {
					"line":	681,
					"switches":	[]
				}, {
					"line":	682,
					"switches":	[]
				}, {
					"line":	683,
					"switches":	[]
				}, {
					"line":	684,
					"switches":	[]
				}, {
					"line":	685,
					"switches":	[]
				}, {
					"line":	696,
					"switches":	[{
							"switch":	20,
							"types":	[[], [], [], [], [141], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [], [], [], [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], [], [], [], [], [], []],
							"begin_line":	697,
							"begin_column":	1,
							"end_line":	697,
							"end_column":	1,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L697\", 12, &(return_value), sizeof (return_value), &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.982766493256678]
								}, {
									"case":	2,
									"scores":	[-4.982766493256678]
								}, {
									"case":	3,
									"scores":	[-4.982766493256678]
								}, {
									"case":	4,
									"scores":	[-4.982766493256678]
								}, {
									"case":	5,
									"scores":	[-4.982766493256678]
								}, {
									"case":	6,
									"scores":	[-4.982766493256678]
								}, {
									"case":	7,
									"scores":	[-4.982766493256678]
								}, {
									"case":	8,
									"scores":	[-4.982766493256678]
								}, {
									"case":	9,
									"scores":	[-4.982766493256678]
								}, {
									"case":	10,
									"scores":	[-4.982766493256678]
								}, {
									"case":	11,
									"scores":	[-4.982766493256678]
								}, {
									"case":	12,
									"scores":	[-4.982766493256678]
								}, {
									"case":	13,
									"scores":	[-4.982766493256678]
								}, {
									"case":	14,
									"scores":	[-4.982766493256678]
								}, {
									"case":	15,
									"scores":	[-4.982766493256678]
								}, {
									"case":	16,
									"scores":	[-4.982766493256678]
								}, {
									"case":	17,
									"scores":	[-4.982766493256678]
								}, {
									"case":	18,
									"scores":	[-4.982766493256678]
								}, {
									"case":	19,
									"scores":	[-4.982766493256678]
								}, {
									"case":	20,
									"scores":	[-4.982766493256678]
								}, {
									"case":	21,
									"scores":	[-4.982766493256678]
								}, {
									"case":	22,
									"scores":	[-4.982766493256678]
								}, {
									"case":	23,
									"scores":	[-4.982766493256678]
								}, {
									"case":	24,
									"scores":	[-4.982766493256678]
								}, {
									"case":	25,
									"scores":	[-4.982766493256678]
								}, {
									"case":	26,
									"scores":	[-4.982766493256678]
								}, {
									"case":	27,
									"scores":	[-4.982766493256678]
								}, {
									"case":	28,
									"scores":	[-4.982766493256678]
								}, {
									"case":	29,
									"scores":	[-4.982766493256678]
								}, {
									"case":	30,
									"scores":	[-4.982766493256678]
								}, {
									"case":	31,
									"scores":	[-4.982766493256678]
								}, {
									"case":	32,
									"scores":	[-4.982766493256678]
								}, {
									"case":	33,
									"scores":	[-4.982766493256678]
								}, {
									"case":	34,
									"scores":	[-4.982766493256678]
								}, {
									"case":	35,
									"scores":	[-4.982766493256678]
								}, {
									"case":	36,
									"scores":	[-4.982766493256678]
								}, {
									"case":	37,
									"scores":	[-4.982766493256678]
								}, {
									"case":	38,
									"scores":	[-4.982766493256678]
								}, {
									"case":	39,
									"scores":	[-4.982766493256678]
								}, {
									"case":	40,
									"scores":	[-4.982766493256678]
								}, {
									"case":	41,
									"scores":	[-4.982766493256678]
								}, {
									"case":	42,
									"scores":	[-4.982766493256678]
								}, {
									"case":	43,
									"scores":	[-4.982766493256678]
								}, {
									"case":	44,
									"scores":	[-4.982766493256678]
								}, {
									"case":	45,
									"scores":	[-4.982766493256678]
								}, {
									"case":	46,
									"scores":	[-4.982766493256678]
								}, {
									"case":	47,
									"scores":	[-4.982766493256678]
								}, {
									"case":	48,
									"scores":	[-4.982766493256678]
								}, {
									"case":	49,
									"scores":	[-4.982766493256678]
								}, {
									"case":	50,
									"scores":	[-4.982766493256678]
								}, {
									"case":	51,
									"scores":	[-4.982766493256678]
								}, {
									"case":	52,
									"scores":	[-4.982766493256678]
								}, {
									"case":	53,
									"scores":	[-4.982766493256678]
								}, {
									"case":	54,
									"scores":	[-4.982766493256678]
								}, {
									"case":	55,
									"scores":	[-4.982766493256678]
								}, {
									"case":	56,
									"scores":	[-4.982766493256678]
								}, {
									"case":	57,
									"scores":	[-4.982766493256678]
								}, {
									"case":	58,
									"scores":	[-4.982766493256678]
								}, {
									"case":	59,
									"scores":	[-4.982766493256678]
								}, {
									"case":	60,
									"scores":	[-4.982766493256678]
								}, {
									"case":	61,
									"scores":	[-4.982766493256678]
								}, {
									"case":	62,
									"scores":	[-4.982766493256678]
								}, {
									"case":	63,
									"scores":	[-4.982766493256678]
								}, {
									"case":	64,
									"scores":	[-4.982766493256678]
								}, {
									"case":	65,
									"scores":	[-4.982766493256678]
								}, {
									"case":	66,
									"scores":	[-4.982766493256678]
								}, {
									"case":	67,
									"scores":	[-4.982766493256678]
								}, {
									"case":	68,
									"scores":	[-4.982766493256678]
								}, {
									"case":	69,
									"scores":	[-4.982766493256678]
								}, {
									"case":	70,
									"scores":	[-4.982766493256678]
								}, {
									"case":	71,
									"scores":	[-4.982766493256678]
								}, {
									"case":	72,
									"scores":	[-4.982766493256678]
								}, {
									"case":	73,
									"scores":	[-4.982766493256678]
								}, {
									"case":	74,
									"scores":	[-4.982766493256678]
								}, {
									"case":	75,
									"scores":	[-4.982766493256678]
								}, {
									"case":	76,
									"scores":	[-4.982766493256678]
								}, {
									"case":	77,
									"scores":	[-4.982766493256678]
								}, {
									"case":	78,
									"scores":	[-4.982766493256678]
								}, {
									"case":	79,
									"scores":	[-4.982766493256678]
								}, {
									"case":	80,
									"scores":	[-4.982766493256678]
								}, {
									"case":	81,
									"scores":	[-4.982766493256678]
								}, {
									"case":	82,
									"scores":	[-4.982766493256678]
								}, {
									"case":	83,
									"scores":	[-4.982766493256678]
								}, {
									"case":	84,
									"scores":	[-4.982766493256678]
								}, {
									"case":	85,
									"scores":	[-4.982766493256678]
								}, {
									"case":	86,
									"scores":	[-4.982766493256678]
								}, {
									"case":	87,
									"scores":	[-4.982766493256678]
								}, {
									"case":	88,
									"scores":	[-4.982766493256678]
								}, {
									"case":	89,
									"scores":	[-4.982766493256678]
								}, {
									"case":	90,
									"scores":	[-4.982766493256678]
								}, {
									"case":	91,
									"scores":	[-4.982766493256678]
								}, {
									"case":	92,
									"scores":	[-4.982766493256678]
								}, {
									"case":	93,
									"scores":	[-4.982766493256678]
								}, {
									"case":	94,
									"scores":	[-4.982766493256678]
								}, {
									"case":	95,
									"scores":	[-4.982766493256678]
								}, {
									"case":	96,
									"scores":	[-4.982766493256678]
								}, {
									"case":	97,
									"scores":	[-4.982766493256678]
								}, {
									"case":	98,
									"scores":	[-4.982766493256678]
								}, {
									"case":	99,
									"scores":	[-4.982766493256678]
								}, {
									"case":	100,
									"scores":	[-4.982766493256678]
								}, {
									"case":	101,
									"scores":	[-4.982766493256678]
								}, {
									"case":	102,
									"scores":	[-4.982766493256678]
								}, {
									"case":	103,
									"scores":	[-4.982766493256678]
								}, {
									"case":	104,
									"scores":	[-4.982766493256678]
								}, {
									"case":	105,
									"scores":	[-4.982766493256678]
								}, {
									"case":	106,
									"scores":	[-4.982766493256678]
								}, {
									"case":	107,
									"scores":	[-4.982766493256678]
								}, {
									"case":	108,
									"scores":	[-4.982766493256678]
								}, {
									"case":	109,
									"scores":	[-4.982766493256678]
								}, {
									"case":	110,
									"scores":	[-4.982766493256678]
								}, {
									"case":	111,
									"scores":	[-4.982766493256678]
								}, {
									"case":	112,
									"scores":	[-4.982766493256678]
								}, {
									"case":	113,
									"scores":	[-4.982766493256678]
								}, {
									"case":	114,
									"scores":	[-4.982766493256678]
								}, {
									"case":	115,
									"scores":	[-4.982766493256678]
								}, {
									"case":	116,
									"scores":	[-4.982766493256678]
								}, {
									"case":	117,
									"scores":	[-4.982766493256678]
								}, {
									"case":	118,
									"scores":	[-4.982766493256678]
								}, {
									"case":	119,
									"scores":	[-4.982766493256678]
								}, {
									"case":	120,
									"scores":	[-4.982766493256678]
								}, {
									"case":	121,
									"scores":	[-4.982766493256678]
								}, {
									"case":	122,
									"scores":	[-4.982766493256678]
								}, {
									"case":	123,
									"scores":	[-4.982766493256678]
								}, {
									"case":	124,
									"scores":	[-4.982766493256678]
								}, {
									"case":	125,
									"scores":	[-4.982766493256678]
								}, {
									"case":	126,
									"scores":	[-4.982766493256678]
								}, {
									"case":	127,
									"scores":	[-4.982766493256678]
								}, {
									"case":	128,
									"scores":	[-4.982766493256678]
								}, {
									"case":	129,
									"scores":	[-4.982766493256678]
								}, {
									"case":	130,
									"scores":	[-4.982766493256678]
								}, {
									"case":	131,
									"scores":	[-4.982766493256678]
								}, {
									"case":	132,
									"scores":	[-4.982766493256678]
								}, {
									"case":	133,
									"scores":	[-4.982766493256678]
								}, {
									"case":	134,
									"scores":	[-4.982766493256678]
								}, {
									"case":	135,
									"scores":	[-4.982766493256678]
								}, {
									"case":	136,
									"scores":	[-4.982766493256678]
								}, {
									"case":	137,
									"scores":	[-4.982766493256678]
								}, {
									"case":	138,
									"scores":	[-4.982766493256678]
								}, {
									"case":	139,
									"scores":	[-4.982766493256678]
								}, {
									"case":	140,
									"scores":	[-4.982766493256678]
								}, {
									"case":	141,
									"scores":	[-5.8445544954566779, -7.8090693490566778, -7.2308693246566778, -7.8437004644566777, -7.1830847558566777, -7.0158856120566773, -7.0153669306566773, -6.3042578116566776, -6.9365271606566781, -7.72807045165668, -7.2308693246566778, -7.2308693246566778]
								}]
						}, {
							"switch":	21,
							"types":	[[], [], [1], [], [], [], [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745], [], [1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358], [], [], [1359]],
							"begin_line":	697,
							"begin_column":	3,
							"end_line":	697,
							"end_column":	26,
							"patch_codes":	["if (!__is_neg(\"\", \"L697\", 12, &(return_value), sizeof (return_value), &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    _array_init((return_value), 0);\n", "_IO_padn((return_value), 0, -1)", "_IO_padn((return_value), 0, 0)", "_IO_padn((return_value), 0, 1)", "_IO_padn((return_value), 0, 16777216)", "_IO_padn((return_value), 0, 2)", "_IO_padn((return_value), 0, 3)", "_IO_padn((return_value), 0, 33554432)", "_IO_padn((return_value), 0, 4)", "_IO_padn((return_value), 0, 516)", "_IO_seekpos((return_value), 0, -1)", "_IO_seekpos((return_value), 0, 0)", "_IO_seekpos((return_value), 0, 1)", "_IO_seekpos((return_value), 0, 16777216)", "_IO_seekpos((return_value), 0, 2)", "_IO_seekpos((return_value), 0, 3)", "_IO_seekpos((return_value), 0, 33554432)", "_IO_seekpos((return_value), 0, 4)", "_IO_seekpos((return_value), 0, 516)", "_IO_seekpos((return_value), 0, le_index_ptr)", "_IO_sgetn((return_value), 0, -1)", "_IO_sgetn((return_value), 0, 0)", "_IO_sgetn((return_value), 0, 1)", "_IO_sgetn((return_value), 0, 16777216)", "_IO_sgetn((return_value), 0, 2)", "_IO_sgetn((return_value), 0, 3)", "_IO_sgetn((return_value), 0, 33554432)", "_IO_sgetn((return_value), 0, 4)", "_IO_sgetn((return_value), 0, 516)", "_IO_sgetn((return_value), 0, index)", "_IO_vfprintf((return_value), 0, 0)", "__assert((return_value), 0, -1)", "__assert((return_value), 0, 0)", "__assert((return_value), 0, 1)", "__assert((return_value), 0, 16777216)", "__assert((return_value), 0, 2)", "__assert((return_value), 0, 3)", "__assert((return_value), 0, 33554432)", "__assert((return_value), 0, 4)", "__assert((return_value), 0, 516)", "__assert((return_value), 0, le_index_ptr)", "__stpncpy((return_value), 0, -1)", "__stpncpy((return_value), 0, 0)", "__stpncpy((return_value), 0, 1)", "__stpncpy((return_value), 0, 16777216)", "__stpncpy((return_value), 0, 2)", "__stpncpy((return_value), 0, 3)", "__stpncpy((return_value), 0, 33554432)", "__stpncpy((return_value), 0, 4)", "__stpncpy((return_value), 0, 516)", "__stpncpy((return_value), 0, index)", "__strtok_r((return_value), 0, 0)", "__trident_output((return_value), 0, -1)", "__trident_output((return_value), 0, 0)", "__trident_output((return_value), 0, 1)", "__trident_output((return_value), 0, 16777216)", "__trident_output((return_value), 0, 2)", "__trident_output((return_value), 0, 3)", "__trident_output((return_value), 0, 33554432)", "__trident_output((return_value), 0, 4)", "__trident_output((return_value), 0, 516)", "__trident_output((return_value), 0, le_index_ptr)", "_erealloc((return_value), 0, -1)", "_erealloc((return_value), 0, 0)", "_erealloc((return_value), 0, 1)", "_erealloc((return_value), 0, 16777216)", "_erealloc((return_value), 0, 2)", "_erealloc((return_value), 0, 3)", "_erealloc((return_value), 0, 33554432)", "_erealloc((return_value), 0, 4)", "_erealloc((return_value), 0, 516)", "_erealloc((return_value), 0, le_index_ptr)", "_object_and_properties_init((return_value), 0, 0)", "_php_glob_stream_get_path((return_value), 0, 0)", "_php_glob_stream_get_pattern((return_value), 0, 0)", "_php_stream_copy_to_stream((return_value), 0, -1)", "_php_stream_copy_to_stream((return_value), 0, 0)", "_php_stream_copy_to_stream((return_value), 0, 1)", "_php_stream_copy_to_stream((return_value), 0, 16777216)", "_php_stream_copy_to_stream((return_value), 0, 2)", "_php_stream_copy_to_stream((return_value), 0, 3)", "_php_stream_copy_to_stream((return_value), 0, 33554432)", "_php_stream_copy_to_stream((return_value), 0, 4)", "_php_stream_copy_to_stream((return_value), 0, 516)", "_php_stream_copy_to_stream((return_value), 0, index)", "_php_stream_filter_alloc((return_value), 0, -1)", "_php_stream_filter_alloc((return_value), 0, 0)", "_php_stream_filter_alloc((return_value), 0, 1)", "_php_stream_filter_alloc((return_value), 0, 16777216)", "_php_stream_filter_alloc((return_value), 0, 2)", "_php_stream_filter_alloc((return_value), 0, 3)", "_php_stream_filter_alloc((return_value), 0, 33554432)", "_php_stream_filter_alloc((return_value), 0, 4)", "_php_stream_filter_alloc((return_value), 0, 516)", "_php_stream_filter_alloc((return_value), 0, le_index_ptr)", "_php_stream_fopen_temporary_file((return_value), 0, 0)", "_php_stream_fopen_temporary_file((return_value), 0, environ)", "_php_stream_make_seekable((return_value), 0, -1)", "_php_stream_make_seekable((return_value), 0, 0)", "_php_stream_make_seekable((return_value), 0, 1)", "_php_stream_make_seekable((return_value), 0, 16777216)", "_php_stream_make_seekable((return_value), 0, 2)", "_php_stream_make_seekable((return_value), 0, 3)", "_php_stream_make_seekable((return_value), 0, 33554432)", "_php_stream_make_seekable((return_value), 0, 4)", "_php_stream_make_seekable((return_value), 0, 516)", "_php_stream_make_seekable((return_value), 0, le_index_ptr)", "_php_stream_opendir((return_value), 0, 0)", "_php_stream_read((return_value), 0, -1)", "_php_stream_read((return_value), 0, 0)", "_php_stream_read((return_value), 0, 1)", "_php_stream_read((return_value), 0, 16777216)", "_php_stream_read((return_value), 0, 2)", "_php_stream_read((return_value), 0, 3)", "_php_stream_read((return_value), 0, 33554432)", "_php_stream_read((return_value), 0, 4)", "_php_stream_read((return_value), 0, 516)", "_php_stream_read((return_value), 0, index)", "_php_stream_rmdir((return_value), 0, 0)", "_php_stream_seek((return_value), 0, -1)", "_php_stream_seek((return_value), 0, 0)", "_php_stream_seek((return_value), 0, 1)", "_php_stream_seek((return_value), 0, 16777216)", "_php_stream_seek((return_value), 0, 2)", "_php_stream_seek((return_value), 0, 3)", "_php_stream_seek((return_value), 0, 33554432)", "_php_stream_seek((return_value), 0, 4)", "_php_stream_seek((return_value), 0, 516)", "_php_stream_seek((return_value), 0, le_index_ptr)", "_php_stream_write((return_value), 0, -1)", "_php_stream_write((return_value), 0, 0)", "_php_stream_write((return_value), 0, 1)", "_php_stream_write((return_value), 0, 16777216)", "_php_stream_write((return_value), 0, 2)", "_php_stream_write((return_value), 0, 3)", "_php_stream_write((return_value), 0, 33554432)", "_php_stream_write((return_value), 0, 4)", "_php_stream_write((return_value), 0, 516)", "_php_stream_write((return_value), 0, index)", "_zend_mm_realloc((return_value), 0, -1)", "_zend_mm_realloc((return_value), 0, 0)", "_zend_mm_realloc((return_value), 0, 1)", "_zend_mm_realloc((return_value), 0, 16777216)", "_zend_mm_realloc((return_value), 0, 2)", "_zend_mm_realloc((return_value), 0, 3)", "_zend_mm_realloc((return_value), 0, 33554432)", "_zend_mm_realloc((return_value), 0, 4)", "_zend_mm_realloc((return_value), 0, 516)", "_zend_mm_realloc((return_value), 0, index)", "add_assoc_function((return_value), 0, 0)", "add_assoc_function((return_value), 0, zend_std_call_user_call)", "add_assoc_function((return_value), 0, zif_addcslashes)", "add_assoc_function((return_value), 0, zif_addslashes)", "add_assoc_function((return_value), 0, zif_basename)", "add_assoc_function((return_value), 0, zif_bin2hex)", "add_assoc_function((return_value), 0, zif_chr)", "add_assoc_function((return_value), 0, zif_chunk_split)", "add_assoc_function((return_value), 0, zif_count_chars)", "add_assoc_function((return_value), 0, zif_dirname)", "add_assoc_function((return_value), 0, zif_display_disabled_class)", "add_assoc_function((return_value), 0, zif_display_disabled_function)", "add_assoc_function((return_value), 0, zif_explode)", "add_assoc_function((return_value), 0, zif_filter_has_var)", "add_assoc_function((return_value), 0, zif_filter_id)", "add_assoc_function((return_value), 0, zif_filter_input)", "add_assoc_function((return_value), 0, zif_filter_input_array)", "add_assoc_function((return_value), 0, zif_filter_list)", "add_assoc_function((return_value), 0, zif_filter_var)", "add_assoc_function((return_value), 0, zif_filter_var_array)", "add_assoc_function((return_value), 0, zif_get_html_translation_table)", "add_assoc_function((return_value), 0, zif_hebrev)", "add_assoc_function((return_value), 0, zif_hebrevc)", "add_assoc_function((return_value), 0, zif_html_entity_decode)", "add_assoc_function((return_value), 0, zif_htmlentities)", "add_assoc_function((return_value), 0, zif_htmlspecialchars)", "add_assoc_function((return_value), 0, zif_htmlspecialchars_decode)", "add_assoc_function((return_value), 0, zif_implode)", "add_assoc_function((return_value), 0, zif_lcfirst)", "add_assoc_function((return_value), 0, zif_levenshtein)", "add_assoc_function((return_value), 0, zif_localeconv)", "add_assoc_function((return_value), 0, zif_ltrim)", "add_assoc_function((return_value), 0, zif_money_format)", "add_assoc_function((return_value), 0, zif_nl2br)", "add_assoc_function((return_value), 0, zif_nl_langinfo)", "add_assoc_function((return_value), 0, zif_ob_clean)", "add_assoc_function((return_value), 0, zif_ob_end_clean)", "add_assoc_function((return_value), 0, zif_ob_end_flush)", "add_assoc_function((return_value), 0, zif_ob_flush)", "add_assoc_function((return_value), 0, zif_ob_get_clean)", "add_assoc_function((return_value), 0, zif_ob_get_contents)", "add_assoc_function((return_value), 0, zif_ob_get_flush)", "add_assoc_function((return_value), 0, zif_ob_get_length)", "add_assoc_function((return_value), 0, zif_ob_get_level)", "add_assoc_function((return_value), 0, zif_ob_get_status)", "add_assoc_function((return_value), 0, zif_ob_implicit_flush)", "add_assoc_function((return_value), 0, zif_ob_list_handlers)", "add_assoc_function((return_value), 0, zif_ob_start)", "add_assoc_function((return_value), 0, zif_ord)", "add_assoc_function((return_value), 0, zif_output_add_rewrite_var)", "add_assoc_function((return_value), 0, zif_output_reset_rewrite_vars)", "add_assoc_function((return_value), 0, zif_parse_str)", "add_assoc_function((return_value), 0, zif_pathinfo)", "add_assoc_function((return_value), 0, zif_php_egg_logo_guid)", "add_assoc_function((return_value), 0, zif_php_ini_loaded_file)", "add_assoc_function((return_value), 0, zif_php_ini_scanned_files)", "add_assoc_function((return_value), 0, zif_php_logo_guid)", "add_assoc_function((return_value), 0, zif_php_real_logo_guid)", "add_assoc_function((return_value), 0, zif_php_sapi_name)", "add_assoc_function((return_value), 0, zif_php_uname)", "add_assoc_function((return_value), 0, zif_phpcredits)", "add_assoc_function((return_value), 0, zif_phpinfo)", "add_assoc_function((return_value), 0, zif_phpversion)", "add_assoc_function((return_value), 0, zif_quotemeta)", "add_assoc_function((return_value), 0, zif_rtrim)", "add_assoc_function((return_value), 0, zif_setlocale)", "add_assoc_function((return_value), 0, zif_similar_text)", "add_assoc_function((return_value), 0, zif_soundex)", "add_assoc_function((return_value), 0, zif_str_getcsv)", "add_assoc_function((return_value), 0, zif_str_ireplace)", "add_assoc_function((return_value), 0, zif_str_pad)", "add_assoc_function((return_value), 0, zif_str_repeat)", "add_assoc_function((return_value), 0, zif_str_replace)", "add_assoc_function((return_value), 0, zif_str_shuffle)", "add_assoc_function((return_value), 0, zif_str_split)", "add_assoc_function((return_value), 0, zif_str_word_count)", "add_assoc_function((return_value), 0, zif_strcoll)", "add_assoc_function((return_value), 0, zif_strcspn)", "add_assoc_function((return_value), 0, zif_strip_tags)", "add_assoc_function((return_value), 0, zif_stripcslashes)", "add_assoc_function((return_value), 0, zif_stripos)", "add_assoc_function((return_value), 0, zif_stripslashes)", "add_assoc_function((return_value), 0, zif_stristr)", "add_assoc_function((return_value), 0, zif_strnatcasecmp)", "add_assoc_function((return_value), 0, zif_strnatcmp)", "add_assoc_function((return_value), 0, zif_strpbrk)", "add_assoc_function((return_value), 0, zif_strpos)", "add_assoc_function((return_value), 0, zif_strrchr)", "add_assoc_function((return_value), 0, zif_strrev)", "add_assoc_function((return_value), 0, zif_strripos)", "add_assoc_function((return_value), 0, zif_strrpos)", "add_assoc_function((return_value), 0, zif_strspn)", "add_assoc_function((return_value), 0, zif_strstr)", "add_assoc_function((return_value), 0, zif_strtok)", "add_assoc_function((return_value), 0, zif_strtolower)", "add_assoc_function((return_value), 0, zif_strtoupper)", "add_assoc_function((return_value), 0, zif_strtr)", "add_assoc_function((return_value), 0, zif_substr)", "add_assoc_function((return_value), 0, zif_substr_compare)", "add_assoc_function((return_value), 0, zif_substr_count)", "add_assoc_function((return_value), 0, zif_substr_replace)", "add_assoc_function((return_value), 0, zif_trim)", "add_assoc_function((return_value), 0, zif_ucfirst)", "add_assoc_function((return_value), 0, zif_ucwords)", "add_assoc_function((return_value), 0, zif_user_printf)", "add_assoc_function((return_value), 0, zif_user_sprintf)", "add_assoc_function((return_value), 0, zif_vprintf)", "add_assoc_function((return_value), 0, zif_vsprintf)", "add_assoc_function((return_value), 0, zif_wordwrap)", "add_assoc_function((return_value), 0, zif_zend_logo_guid)", "add_assoc_null_ex((return_value), 0, -1)", "add_assoc_null_ex((return_value), 0, 0)", "add_assoc_null_ex((return_value), 0, 1)", "add_assoc_null_ex((return_value), 0, 16777216)", "add_assoc_null_ex((return_value), 0, 2)", "add_assoc_null_ex((return_value), 0, 3)", "add_assoc_null_ex((return_value), 0, 33554432)", "add_assoc_null_ex((return_value), 0, 4)", "add_assoc_null_ex((return_value), 0, 516)", "add_assoc_null_ex((return_value), 0, arg_key_len)", "add_char_to_string((return_value), 0, 0)", "add_function((return_value), 0, 0)", "add_function((return_value), 0, input)", "add_function((return_value), 0, return_value)", "add_index_bool((return_value), 0, -1)", "add_index_bool((return_value), 0, 0)", "add_index_bool((return_value), 0, 1)", "add_index_bool((return_value), 0, 16777216)", "add_index_bool((return_value), 0, 2)", "add_index_bool((return_value), 0, 3)", "add_index_bool((return_value), 0, 33554432)", "add_index_bool((return_value), 0, 4)", "add_index_bool((return_value), 0, 516)", "add_index_bool((return_value), 0, le_index_ptr)", "add_index_long((return_value), 0, -1)", "add_index_long((return_value), 0, 0)", "add_index_long((return_value), 0, 1)", "add_index_long((return_value), 0, 16777216)", "add_index_long((return_value), 0, 2)", "add_index_long((return_value), 0, 3)", "add_index_long((return_value), 0, 33554432)", "add_index_long((return_value), 0, 4)", "add_index_long((return_value), 0, 516)", "add_index_resource((return_value), 0, -1)", "add_index_resource((return_value), 0, 0)", "add_index_resource((return_value), 0, 1)", "add_index_resource((return_value), 0, 16777216)", "add_index_resource((return_value), 0, 2)", "add_index_resource((return_value), 0, 3)", "add_index_resource((return_value), 0, 33554432)", "add_index_resource((return_value), 0, 4)", "add_index_resource((return_value), 0, 516)", "add_index_resource((return_value), 0, le_index_ptr)", "add_index_zval((return_value), 0, 0)", "add_index_zval((return_value), 0, input)", "add_index_zval((return_value), 0, return_value)", "add_next_index_string((return_value), 0, -1)", "add_next_index_string((return_value), 0, 0)", "add_next_index_string((return_value), 0, 1)", "add_next_index_string((return_value), 0, 16777216)", "add_next_index_string((return_value), 0, 2)", "add_next_index_string((return_value), 0, 3)", "add_next_index_string((return_value), 0, 33554432)", "add_next_index_string((return_value), 0, 4)", "add_next_index_string((return_value), 0, 516)", "add_next_index_string((return_value), 0, le_index_ptr)", "add_property_null_ex((return_value), 0, -1)", "add_property_null_ex((return_value), 0, 0)", "add_property_null_ex((return_value), 0, 1)", "add_property_null_ex((return_value), 0, 16777216)", "add_property_null_ex((return_value), 0, 2)", "add_property_null_ex((return_value), 0, 3)", "add_property_null_ex((return_value), 0, 33554432)", "add_property_null_ex((return_value), 0, 4)", "add_property_null_ex((return_value), 0, 516)", "add_property_null_ex((return_value), 0, arg_key_len)", "add_string_to_string((return_value), 0, 0)", "ap_php_vasprintf((return_value), 0, 0)", "bcmp((return_value), 0, -1)", "bcmp((return_value), 0, 0)", "bcmp((return_value), 0, 1)", "bcmp((return_value), 0, 16777216)", "bcmp((return_value), 0, 2)", "bcmp((return_value), 0, 3)", "bcmp((return_value), 0, 33554432)", "bcmp((return_value), 0, 4)", "bcmp((return_value), 0, 516)", "bcmp((return_value), 0, index)", "bcopy((return_value), 0, -1)", "bcopy((return_value), 0, 0)", "bcopy((return_value), 0, 1)", "bcopy((return_value), 0, 16777216)", "bcopy((return_value), 0, 2)", "bcopy((return_value), 0, 3)", "bcopy((return_value), 0, 33554432)", "bcopy((return_value), 0, 4)", "bcopy((return_value), 0, 516)", "bcopy((return_value), 0, index)", "bitwise_and_function((return_value), 0, 0)", "bitwise_and_function((return_value), 0, input)", "bitwise_and_function((return_value), 0, return_value)", "bitwise_or_function((return_value), 0, 0)", "bitwise_or_function((return_value), 0, input)", "bitwise_or_function((return_value), 0, return_value)", "bitwise_xor_function((return_value), 0, 0)", "bitwise_xor_function((return_value), 0, input)", "bitwise_xor_function((return_value), 0, return_value)", "boolean_xor_function((return_value), 0, 0)", "boolean_xor_function((return_value), 0, input)", "boolean_xor_function((return_value), 0, return_value)", "chown((return_value), 0, -1)", "chown((return_value), 0, 0)", "chown((return_value), 0, 1)", "chown((return_value), 0, 16777216)", "chown((return_value), 0, 2)", "chown((return_value), 0, 3)", "chown((return_value), 0, 33554432)", "chown((return_value), 0, 4)", "chown((return_value), 0, 516)", "chown((return_value), 0, arg_key_len)", "compare_function((return_value), 0, 0)", "compare_function((return_value), 0, input)", "compare_function((return_value), 0, return_value)", "concat_function((return_value), 0, 0)", "concat_function((return_value), 0, input)", "concat_function((return_value), 0, return_value)", "div_function((return_value), 0, 0)", "div_function((return_value), 0, input)", "div_function((return_value), 0, return_value)", "erand48_r((return_value), 0, 0)", "execve((return_value), 0, 0)", "fetch_array_begin((return_value), 0, 0)", "fetch_array_dim((return_value), 0, 0)", "fetch_simple_variable((return_value), 0, -1)", "fetch_simple_variable((return_value), 0, 0)", "fetch_simple_variable((return_value), 0, 1)", "fetch_simple_variable((return_value), 0, 16777216)", "fetch_simple_variable((return_value), 0, 2)", "fetch_simple_variable((return_value), 0, 3)", "fetch_simple_variable((return_value), 0, 33554432)", "fetch_simple_variable((return_value), 0, 4)", "fetch_simple_variable((return_value), 0, 516)", "fetch_simple_variable((return_value), 0, le_index_ptr)", "fetch_string_offset((return_value), 0, 0)", "fgets((return_value), 0, 0)", "fmemopen((return_value), 0, 0)", "freopen((return_value), 0, 0)", "fseek((return_value), 0, -1)", "fseek((return_value), 0, 0)", "fseek((return_value), 0, 1)", "fseek((return_value), 0, 16777216)", "fseek((return_value), 0, 2)", "fseek((return_value), 0, 3)", "fseek((return_value), 0, 33554432)", "fseek((return_value), 0, 4)", "fseek((return_value), 0, 516)", "fseek((return_value), 0, le_index_ptr)", "fseeko((return_value), 0, -1)", "fseeko((return_value), 0, 0)", "fseeko((return_value), 0, 1)", "fseeko((return_value), 0, 16777216)", "fseeko((return_value), 0, 2)", "fseeko((return_value), 0, 3)", "fseeko((return_value), 0, 33554432)", "fseeko((return_value), 0, 4)", "fseeko((return_value), 0, 516)", "fseeko((return_value), 0, le_index_ptr)", "getline((return_value), 0, 0)", "getsubopt((return_value), 0, 0)", "init_op_array((return_value), 0, -1)", "init_op_array((return_value), 0, 0)", "init_op_array((return_value), 0, 1)", "init_op_array((return_value), 0, 16777216)", "init_op_array((return_value), 0, 2)", "init_op_array((return_value), 0, 3)", "init_op_array((return_value), 0, 33554432)", "init_op_array((return_value), 0, 4)", "init_op_array((return_value), 0, 516)", "init_op_array((return_value), 0, le_index_ptr)", "instanceof_function_ex((return_value), 0, -1)", "instanceof_function_ex((return_value), 0, 0)", "instanceof_function_ex((return_value), 0, 1)", "instanceof_function_ex((return_value), 0, 16777216)", "instanceof_function_ex((return_value), 0, 2)", "instanceof_function_ex((return_value), 0, 3)", "instanceof_function_ex((return_value), 0, 33554432)", "instanceof_function_ex((return_value), 0, 4)", "instanceof_function_ex((return_value), 0, 516)", "is_equal_function((return_value), 0, 0)", "is_equal_function((return_value), 0, input)", "is_equal_function((return_value), 0, return_value)", "is_identical_function((return_value), 0, 0)", "is_identical_function((return_value), 0, input)", "is_identical_function((return_value), 0, return_value)", "is_not_equal_function((return_value), 0, 0)", "is_not_equal_function((return_value), 0, input)", "is_not_equal_function((return_value), 0, return_value)", "is_not_identical_function((return_value), 0, 0)", "is_not_identical_function((return_value), 0, input)", "is_not_identical_function((return_value), 0, return_value)", "is_smaller_function((return_value), 0, 0)", "is_smaller_function((return_value), 0, input)", "is_smaller_function((return_value), 0, return_value)", "is_smaller_or_equal_function((return_value), 0, 0)", "is_smaller_or_equal_function((return_value), 0, input)", "is_smaller_or_equal_function((return_value), 0, return_value)", "jrand48_r((return_value), 0, 0)", "lchown((return_value), 0, -1)", "lchown((return_value), 0, 0)", "lchown((return_value), 0, 1)", "lchown((return_value), 0, 16777216)", "lchown((return_value), 0, 2)", "lchown((return_value), 0, 3)", "lchown((return_value), 0, 33554432)", "lchown((return_value), 0, 4)", "lchown((return_value), 0, 516)", "lchown((return_value), 0, arg_key_len)", "mbstowcs((return_value), 0, -1)", "mbstowcs((return_value), 0, 0)", "mbstowcs((return_value), 0, 1)", "mbstowcs((return_value), 0, 16777216)", "mbstowcs((return_value), 0, 2)", "mbstowcs((return_value), 0, 3)", "mbstowcs((return_value), 0, 33554432)", "mbstowcs((return_value), 0, 4)", "mbstowcs((return_value), 0, 516)", "mbstowcs((return_value), 0, index)", "mbtowc((return_value), 0, -1)", "mbtowc((return_value), 0, 0)", "mbtowc((return_value), 0, 1)", "mbtowc((return_value), 0, 16777216)", "mbtowc((return_value), 0, 2)", "mbtowc((return_value), 0, 3)", "mbtowc((return_value), 0, 33554432)", "mbtowc((return_value), 0, 4)", "mbtowc((return_value), 0, 516)", "mbtowc((return_value), 0, index)", "memchr((return_value), 0, -1)", "memchr((return_value), 0, 0)", "memchr((return_value), 0, 1)", "memchr((return_value), 0, 16777216)", "memchr((return_value), 0, 2)", "memchr((return_value), 0, 3)", "memchr((return_value), 0, 33554432)", "memchr((return_value), 0, 4)", "memchr((return_value), 0, 516)", "memchr((return_value), 0, index)", "memcmp((return_value), 0, -1)", "memcmp((return_value), 0, 0)", "memcmp((return_value), 0, 1)", "memcmp((return_value), 0, 16777216)", "memcmp((return_value), 0, 2)", "memcmp((return_value), 0, 3)", "memcmp((return_value), 0, 33554432)", "memcmp((return_value), 0, 4)", "memcmp((return_value), 0, 516)", "memcmp((return_value), 0, index)", "memcpy((return_value), 0, -1)", "memcpy((return_value), 0, 0)", "memcpy((return_value), 0, 1)", "memcpy((return_value), 0, 16777216)", "memcpy((return_value), 0, 2)", "memcpy((return_value), 0, 3)", "memcpy((return_value), 0, 33554432)", "memcpy((return_value), 0, 4)", "memcpy((return_value), 0, 516)", "memcpy((return_value), 0, index)", "memmove((return_value), 0, -1)", "memmove((return_value), 0, 0)", "memmove((return_value), 0, 1)", "memmove((return_value), 0, 16777216)", "memmove((return_value), 0, 2)", "memmove((return_value), 0, 3)", "memmove((return_value), 0, 33554432)", "memmove((return_value), 0, 4)", "memmove((return_value), 0, 516)", "memmove((return_value), 0, index)", "memset((return_value), 0, -1)", "memset((return_value), 0, 0)", "memset((return_value), 0, 1)", "memset((return_value), 0, 16777216)", "memset((return_value), 0, 2)", "memset((return_value), 0, 3)", "memset((return_value), 0, 33554432)", "memset((return_value), 0, 4)", "memset((return_value), 0, 516)", "memset((return_value), 0, index)", "mknod((return_value), 0, -1)", "mknod((return_value), 0, 0)", "mknod((return_value), 0, 1)", "mknod((return_value), 0, 16777216)", "mknod((return_value), 0, 2)", "mknod((return_value), 0, 3)", "mknod((return_value), 0, 33554432)", "mknod((return_value), 0, 4)", "mknod((return_value), 0, 516)", "mknod((return_value), 0, index)", "mod_function((return_value), 0, 0)", "mod_function((return_value), 0, input)", "mod_function((return_value), 0, return_value)", "mul_function((return_value), 0, 0)", "mul_function((return_value), 0, input)", "mul_function((return_value), 0, return_value)", "nrand48_r((return_value), 0, 0)", "numeric_compare_function((return_value), 0, 0)", "numeric_compare_function((return_value), 0, input)", "numeric_compare_function((return_value), 0, return_value)", "php_filter_array_handler((return_value), 0, 0)", "php_filter_array_handler((return_value), 0, input)", "php_filter_array_handler((return_value), 0, return_value)", "php_implode((return_value), 0, 0)", "php_implode((return_value), 0, input)", "php_implode((return_value), 0, return_value)", "php_ini_activate_config((return_value), 0, -1)", "php_ini_activate_config((return_value), 0, 0)", "php_ini_activate_config((return_value), 0, 1)", "php_ini_activate_config((return_value), 0, 16777216)", "php_ini_activate_config((return_value), 0, 2)", "php_ini_activate_config((return_value), 0, 3)", "php_ini_activate_config((return_value), 0, 33554432)", "php_ini_activate_config((return_value), 0, 4)", "php_ini_activate_config((return_value), 0, 516)", "php_ini_activate_config((return_value), 0, le_index_ptr)", "php_output_handler_alias_register((return_value), 0, 0)", "php_output_handler_conflict_register((return_value), 0, 0)", "php_output_handler_conflict_register((return_value), 0, mblen)", "php_output_handler_conflict_register((return_value), 0, php_output_handler_started)", "php_output_handler_conflict_register((return_value), 0, php_output_write)", "php_output_handler_conflict_register((return_value), 0, php_output_write_unbuffered)", "php_output_handler_conflict_register((return_value), 0, setdomainname)", "php_output_handler_conflict_register((return_value), 0, sethostname)", "php_output_handler_conflict_register((return_value), 0, zend_multibyte_set_script_encoding_by_string)", "php_output_handler_create_user((return_value), 0, -1)", "php_output_handler_create_user((return_value), 0, 0)", "php_output_handler_create_user((return_value), 0, 1)", "php_output_handler_create_user((return_value), 0, 16777216)", "php_output_handler_create_user((return_value), 0, 2)", "php_output_handler_create_user((return_value), 0, 3)", "php_output_handler_create_user((return_value), 0, 33554432)", "php_output_handler_create_user((return_value), 0, 4)", "php_output_handler_create_user((return_value), 0, 516)", "php_output_handler_create_user((return_value), 0, le_index_ptr)", "php_output_handler_reverse_conflict_register((return_value), 0, 0)", "php_output_handler_reverse_conflict_register((return_value), 0, mblen)", "php_output_handler_reverse_conflict_register((return_value), 0, php_output_handler_started)", "php_output_handler_reverse_conflict_register((return_value), 0, php_output_write)", "php_output_handler_reverse_conflict_register((return_value), 0, php_output_write_unbuffered)", "php_output_handler_reverse_conflict_register((return_value), 0, setdomainname)", "php_output_handler_reverse_conflict_register((return_value), 0, sethostname)", "php_output_handler_reverse_conflict_register((return_value), 0, zend_multibyte_set_script_encoding_by_string)", "php_output_handler_set_context((return_value), 0, 0)", "php_output_handler_set_context((return_value), 0, _efree)", "php_output_handler_set_context((return_value), 0, free)", "php_output_handler_set_context((return_value), 0, list_entry_destructor)", "php_output_handler_set_context((return_value), 0, plist_entry_destructor)", "php_output_handler_set_context((return_value), 0, sapi_handle_post)", "php_output_handler_set_context((return_value), 0, zend_vm_stack_free)", "php_output_handler_set_context((return_value), 0, zend_vm_stack_free_int)", "php_output_handler_set_context((return_value), 0, zend_vm_stack_push)", "php_output_handler_set_context((return_value), 0, zend_vm_stack_push_nocheck)", "php_output_start_user((return_value), 0, -1)", "php_output_start_user((return_value), 0, 0)", "php_output_start_user((return_value), 0, 1)", "php_output_start_user((return_value), 0, 16777216)", "php_output_start_user((return_value), 0, 2)", "php_output_start_user((return_value), 0, 3)", "php_output_start_user((return_value), 0, 33554432)", "php_output_start_user((return_value), 0, 4)", "php_output_start_user((return_value), 0, 516)", "php_output_start_user((return_value), 0, le_index_ptr)", "php_parse_user_ini_file((return_value), 0, 0)", "php_register_variable((return_value), 0, 0)", "php_register_variable((return_value), 0, input)", "php_register_variable((return_value), 0, return_value)", "php_register_variable_ex((return_value), 0, 0)", "php_register_variable_ex((return_value), 0, input)", "php_register_variable_ex((return_value), 0, return_value)", "php_resolve_path((return_value), 0, 0)", "php_stream_context_get_link((return_value), 0, 0)", "php_stream_context_set_link((return_value), 0, 0)", "php_stream_filter_create((return_value), 0, -1)", "php_stream_filter_create((return_value), 0, 0)", "php_stream_filter_create((return_value), 0, 1)", "php_stream_filter_create((return_value), 0, 16777216)", "php_stream_filter_create((return_value), 0, 2)", "php_stream_filter_create((return_value), 0, 3)", "php_stream_filter_create((return_value), 0, 33554432)", "php_stream_filter_create((return_value), 0, 4)", "php_stream_filter_create((return_value), 0, 516)", "php_stream_filter_create((return_value), 0, le_index_ptr)", "php_stream_locate_eol((return_value), 0, -1)", "php_stream_locate_eol((return_value), 0, 0)", "php_stream_locate_eol((return_value), 0, 1)", "php_stream_locate_eol((return_value), 0, 16777216)", "php_stream_locate_eol((return_value), 0, 2)", "php_stream_locate_eol((return_value), 0, 3)", "php_stream_locate_eol((return_value), 0, 33554432)", "php_stream_locate_eol((return_value), 0, 4)", "php_stream_locate_eol((return_value), 0, 516)", "php_stream_locate_eol((return_value), 0, index)", "php_stream_locate_url_wrapper((return_value), 0, -1)", "php_stream_locate_url_wrapper((return_value), 0, 0)", "php_stream_locate_url_wrapper((return_value), 0, 1)", "php_stream_locate_url_wrapper((return_value), 0, 16777216)", "php_stream_locate_url_wrapper((return_value), 0, 2)", "php_stream_locate_url_wrapper((return_value), 0, 3)", "php_stream_locate_url_wrapper((return_value), 0, 33554432)", "php_stream_locate_url_wrapper((return_value), 0, 4)", "php_stream_locate_url_wrapper((return_value), 0, 516)", "php_stream_locate_url_wrapper((return_value), 0, le_index_ptr)", "php_stream_xport_crypto_setup((return_value), 0, 0)", "php_stream_xport_listen((return_value), 0, 0)", "php_stream_xport_listen((return_value), 0, environ)", "php_strlcat((return_value), 0, -1)", "php_strlcat((return_value), 0, 0)", "php_strlcat((return_value), 0, 1)", "php_strlcat((return_value), 0, 16777216)", "php_strlcat((return_value), 0, 2)", "php_strlcat((return_value), 0, 3)", "php_strlcat((return_value), 0, 33554432)", "php_strlcat((return_value), 0, 4)", "php_strlcat((return_value), 0, 516)", "php_strlcat((return_value), 0, index)", "php_strlcpy((return_value), 0, -1)", "php_strlcpy((return_value), 0, 0)", "php_strlcpy((return_value), 0, 1)", "php_strlcpy((return_value), 0, 16777216)", "php_strlcpy((return_value), 0, 2)", "php_strlcpy((return_value), 0, 3)", "php_strlcpy((return_value), 0, 33554432)", "php_strlcpy((return_value), 0, 4)", "php_strlcpy((return_value), 0, 516)", "php_strlcpy((return_value), 0, index)", "posix_memalign((return_value), 0, -1)", "posix_memalign((return_value), 0, 0)", "posix_memalign((return_value), 0, 1)", "posix_memalign((return_value), 0, 16777216)", "posix_memalign((return_value), 0, 2)", "posix_memalign((return_value), 0, 3)", "posix_memalign((return_value), 0, 33554432)", "posix_memalign((return_value), 0, 4)", "posix_memalign((return_value), 0, 516)", "posix_memalign((return_value), 0, index)", "readdir_r((return_value), 0, 0)", "readlink((return_value), 0, -1)", "readlink((return_value), 0, 0)", "readlink((return_value), 0, 1)", "readlink((return_value), 0, 16777216)", "readlink((return_value), 0, 2)", "readlink((return_value), 0, 3)", "readlink((return_value), 0, 33554432)", "readlink((return_value), 0, 4)", "readlink((return_value), 0, 516)", "readlink((return_value), 0, index)", "realpath_cache_lookup((return_value), 0, -1)", "realpath_cache_lookup((return_value), 0, 0)", "realpath_cache_lookup((return_value), 0, 1)", "realpath_cache_lookup((return_value), 0, 16777216)", "realpath_cache_lookup((return_value), 0, 2)", "realpath_cache_lookup((return_value), 0, 3)", "realpath_cache_lookup((return_value), 0, 33554432)", "realpath_cache_lookup((return_value), 0, 4)", "realpath_cache_lookup((return_value), 0, 516)", "setbuffer((return_value), 0, -1)", "setbuffer((return_value), 0, 0)", "setbuffer((return_value), 0, 1)", "setbuffer((return_value), 0, 16777216)", "setbuffer((return_value), 0, 2)", "setbuffer((return_value), 0, 3)", "setbuffer((return_value), 0, 33554432)", "setbuffer((return_value), 0, 4)", "setbuffer((return_value), 0, 516)", "setbuffer((return_value), 0, index)", "setenv((return_value), 0, -1)", "setenv((return_value), 0, 0)", "setenv((return_value), 0, 1)", "setenv((return_value), 0, 16777216)", "setenv((return_value), 0, 2)", "setenv((return_value), 0, 3)", "setenv((return_value), 0, 33554432)", "setenv((return_value), 0, 4)", "setenv((return_value), 0, 516)", "setenv((return_value), 0, le_index_ptr)", "shift_left_function((return_value), 0, 0)", "shift_left_function((return_value), 0, input)", "shift_left_function((return_value), 0, return_value)", "shift_right_function((return_value), 0, 0)", "shift_right_function((return_value), 0, input)", "shift_right_function((return_value), 0, return_value)", "sigtimedwait((return_value), 0, 0)", "stpncpy((return_value), 0, -1)", "stpncpy((return_value), 0, 0)", "stpncpy((return_value), 0, 1)", "stpncpy((return_value), 0, 16777216)", "stpncpy((return_value), 0, 2)", "stpncpy((return_value), 0, 3)", "stpncpy((return_value), 0, 33554432)", "stpncpy((return_value), 0, 4)", "stpncpy((return_value), 0, 516)", "stpncpy((return_value), 0, index)", "strcasecmp_l((return_value), 0, 0)", "strcoll_l((return_value), 0, 0)", "string_compare_function((return_value), 0, 0)", "string_compare_function((return_value), 0, input)", "string_compare_function((return_value), 0, return_value)", "string_locale_compare_function((return_value), 0, 0)", "string_locale_compare_function((return_value), 0, input)", "string_locale_compare_function((return_value), 0, return_value)", "strncasecmp((return_value), 0, -1)", "strncasecmp((return_value), 0, 0)", "strncasecmp((return_value), 0, 1)", "strncasecmp((return_value), 0, 16777216)", "strncasecmp((return_value), 0, 2)", "strncasecmp((return_value), 0, 3)", "strncasecmp((return_value), 0, 33554432)", "strncasecmp((return_value), 0, 4)", "strncasecmp((return_value), 0, 516)", "strncasecmp((return_value), 0, index)", "strncat((return_value), 0, -1)", "strncat((return_value), 0, 0)", "strncat((return_value), 0, 1)", "strncat((return_value), 0, 16777216)", "strncat((return_value), 0, 2)", "strncat((return_value), 0, 3)", "strncat((return_value), 0, 33554432)", "strncat((return_value), 0, 4)", "strncat((return_value), 0, 516)", "strncat((return_value), 0, index)", "strncmp((return_value), 0, -1)", "strncmp((return_value), 0, 0)", "strncmp((return_value), 0, 1)", "strncmp((return_value), 0, 16777216)", "strncmp((return_value), 0, 2)", "strncmp((return_value), 0, 3)", "strncmp((return_value), 0, 33554432)", "strncmp((return_value), 0, 4)", "strncmp((return_value), 0, 516)", "strncmp((return_value), 0, index)", "strncpy((return_value), 0, -1)", "strncpy((return_value), 0, 0)", "strncpy((return_value), 0, 1)", "strncpy((return_value), 0, 16777216)", "strncpy((return_value), 0, 2)", "strncpy((return_value), 0, 3)", "strncpy((return_value), 0, 33554432)", "strncpy((return_value), 0, 4)", "strncpy((return_value), 0, 516)", "strncpy((return_value), 0, index)", "strtok_r((return_value), 0, 0)", "strtol((return_value), 0, -1)", "strtol((return_value), 0, 0)", "strtol((return_value), 0, 1)", "strtol((return_value), 0, 16777216)", "strtol((return_value), 0, 2)", "strtol((return_value), 0, 3)", "strtol((return_value), 0, 33554432)", "strtol((return_value), 0, 4)", "strtol((return_value), 0, 516)", "strtol((return_value), 0, le_index_ptr)", "strtoll((return_value), 0, -1)", "strtoll((return_value), 0, 0)", "strtoll((return_value), 0, 1)", "strtoll((return_value), 0, 16777216)", "strtoll((return_value), 0, 2)", "strtoll((return_value), 0, 3)", "strtoll((return_value), 0, 33554432)", "strtoll((return_value), 0, 4)", "strtoll((return_value), 0, 516)", "strtoll((return_value), 0, le_index_ptr)", "strtoq((return_value), 0, -1)", "strtoq((return_value), 0, 0)", "strtoq((return_value), 0, 1)", "strtoq((return_value), 0, 16777216)", "strtoq((return_value), 0, 2)", "strtoq((return_value), 0, 3)", "strtoq((return_value), 0, 33554432)", "strtoq((return_value), 0, 4)", "strtoq((return_value), 0, 516)", "strtoq((return_value), 0, le_index_ptr)", "strtoul((return_value), 0, -1)", "strtoul((return_value), 0, 0)", "strtoul((return_value), 0, 1)", "strtoul((return_value), 0, 16777216)", "strtoul((return_value), 0, 2)", "strtoul((return_value), 0, 3)", "strtoul((return_value), 0, 33554432)", "strtoul((return_value), 0, 4)", "strtoul((return_value), 0, 516)", "strtoul((return_value), 0, le_index_ptr)", "strtoull((return_value), 0, -1)", "strtoull((return_value), 0, 0)", "strtoull((return_value), 0, 1)", "strtoull((return_value), 0, 16777216)", "strtoull((return_value), 0, 2)", "strtoull((return_value), 0, 3)", "strtoull((return_value), 0, 33554432)", "strtoull((return_value), 0, 4)", "strtoull((return_value), 0, 516)", "strtoull((return_value), 0, le_index_ptr)", "strtouq((return_value), 0, -1)", "strtouq((return_value), 0, 0)", "strtouq((return_value), 0, 1)", "strtouq((return_value), 0, 16777216)", "strtouq((return_value), 0, 2)", "strtouq((return_value), 0, 3)", "strtouq((return_value), 0, 33554432)", "strtouq((return_value), 0, 4)", "strtouq((return_value), 0, 516)", "strtouq((return_value), 0, le_index_ptr)", "strxfrm((return_value), 0, -1)", "strxfrm((return_value), 0, 0)", "strxfrm((return_value), 0, 1)", "strxfrm((return_value), 0, 16777216)", "strxfrm((return_value), 0, 2)", "strxfrm((return_value), 0, 3)", "strxfrm((return_value), 0, 33554432)", "strxfrm((return_value), 0, 4)", "strxfrm((return_value), 0, 516)", "strxfrm((return_value), 0, index)", "sub_function((return_value), 0, 0)", "sub_function((return_value), 0, input)", "sub_function((return_value), 0, return_value)", "symlinkat((return_value), 0, 0)", "vfprintf((return_value), 0, 0)", "virtual_filepath_ex((return_value), 0, 0)", "vsprintf((return_value), 0, 0)", "wcstombs((return_value), 0, -1)", "wcstombs((return_value), 0, 0)", "wcstombs((return_value), 0, 1)", "wcstombs((return_value), 0, 16777216)", "wcstombs((return_value), 0, 2)", "wcstombs((return_value), 0, 3)", "wcstombs((return_value), 0, 33554432)", "wcstombs((return_value), 0, 4)", "wcstombs((return_value), 0, 516)", "wcstombs((return_value), 0, index)", "zend_arg_types_stack_2_pop((return_value), 0, 0)", "zend_binary_zval_strncasecmp((return_value), 0, 0)", "zend_binary_zval_strncasecmp((return_value), 0, input)", "zend_binary_zval_strncasecmp((return_value), 0, return_value)", "zend_binary_zval_strncmp((return_value), 0, 0)", "zend_binary_zval_strncmp((return_value), 0, input)", "zend_binary_zval_strncmp((return_value), 0, return_value)", "zend_check_magic_method_implementation((return_value), 0, -1)", "zend_check_magic_method_implementation((return_value), 0, 0)", "zend_check_magic_method_implementation((return_value), 0, 1)", "zend_check_magic_method_implementation((return_value), 0, 16777216)", "zend_check_magic_method_implementation((return_value), 0, 2)", "zend_check_magic_method_implementation((return_value), 0, 3)", "zend_check_magic_method_implementation((return_value), 0, 33554432)", "zend_check_magic_method_implementation((return_value), 0, 4)", "zend_check_magic_method_implementation((return_value), 0, 516)", "zend_check_magic_method_implementation((return_value), 0, le_index_ptr)", "zend_check_property_access((return_value), 0, -1)", "zend_check_property_access((return_value), 0, 0)", "zend_check_property_access((return_value), 0, 1)", "zend_check_property_access((return_value), 0, 16777216)", "zend_check_property_access((return_value), 0, 2)", "zend_check_property_access((return_value), 0, 3)", "zend_check_property_access((return_value), 0, 33554432)", "zend_check_property_access((return_value), 0, 4)", "zend_check_property_access((return_value), 0, 516)", "zend_check_property_access((return_value), 0, le_index_ptr)", "zend_compare_arrays((return_value), 0, 0)", "zend_compare_arrays((return_value), 0, input)", "zend_compare_arrays((return_value), 0, return_value)", "zend_compare_objects((return_value), 0, 0)", "zend_compare_objects((return_value), 0, input)", "zend_compare_objects((return_value), 0, return_value)", "zend_compare_symbol_tables((return_value), 0, 0)", "zend_declare_class_constant_null((return_value), 0, -1)", "zend_declare_class_constant_null((return_value), 0, 0)", "zend_declare_class_constant_null((return_value), 0, 1)", "zend_declare_class_constant_null((return_value), 0, 16777216)", "zend_declare_class_constant_null((return_value), 0, 2)", "zend_declare_class_constant_null((return_value), 0, 3)", "zend_declare_class_constant_null((return_value), 0, 33554432)", "zend_declare_class_constant_null((return_value), 0, 4)", "zend_declare_class_constant_null((return_value), 0, 516)", "zend_declare_class_constant_null((return_value), 0, index)", "zend_delete_global_variable_ex((return_value), 0, -1)", "zend_delete_global_variable_ex((return_value), 0, 0)", "zend_delete_global_variable_ex((return_value), 0, 1)", "zend_delete_global_variable_ex((return_value), 0, 16777216)", "zend_delete_global_variable_ex((return_value), 0, 2)", "zend_delete_global_variable_ex((return_value), 0, 3)", "zend_delete_global_variable_ex((return_value), 0, 33554432)", "zend_delete_global_variable_ex((return_value), 0, 4)", "zend_delete_global_variable_ex((return_value), 0, 516)", "zend_delete_global_variable_ex((return_value), 0, index)", "zend_do_abstract_method((return_value), 0, 0)", "zend_do_add_static_array_element((return_value), 0, 0)", "zend_do_add_string((return_value), 0, 0)", "zend_do_add_variable((return_value), 0, 0)", "zend_do_assign((return_value), 0, 0)", "zend_do_assign_ref((return_value), 0, 0)", "zend_do_begin_class_declaration((return_value), 0, 0)", "zend_do_build_namespace_name((return_value), 0, 0)", "zend_do_case_before_statement((return_value), 0, 0)", "zend_do_cast((return_value), 0, -1)", "zend_do_cast((return_value), 0, 0)", "zend_do_cast((return_value), 0, 1)", "zend_do_cast((return_value), 0, 16777216)", "zend_do_cast((return_value), 0, 2)", "zend_do_cast((return_value), 0, 3)", "zend_do_cast((return_value), 0, 33554432)", "zend_do_cast((return_value), 0, 4)", "zend_do_cast((return_value), 0, 516)", "zend_do_cast((return_value), 0, le_index_ptr)", "zend_do_declare_property((return_value), 0, -1)", "zend_do_declare_property((return_value), 0, 0)", "zend_do_declare_property((return_value), 0, 1)", "zend_do_declare_property((return_value), 0, 16777216)", "zend_do_declare_property((return_value), 0, 2)", "zend_do_declare_property((return_value), 0, 3)", "zend_do_declare_property((return_value), 0, 33554432)", "zend_do_declare_property((return_value), 0, 4)", "zend_do_declare_property((return_value), 0, 516)", "zend_do_declare_property((return_value), 0, arg_key_len)", "zend_do_do_while_end((return_value), 0, 0)", "zend_do_end_new_object((return_value), 0, 0)", "zend_do_end_variable_parse((return_value), 0, -1)", "zend_do_end_variable_parse((return_value), 0, 0)", "zend_do_end_variable_parse((return_value), 0, 1)", "zend_do_end_variable_parse((return_value), 0, 16777216)", "zend_do_end_variable_parse((return_value), 0, 2)", "zend_do_end_variable_parse((return_value), 0, 3)", "zend_do_end_variable_parse((return_value), 0, 33554432)", "zend_do_end_variable_parse((return_value), 0, 4)", "zend_do_end_variable_parse((return_value), 0, 516)", "zend_do_end_variable_parse((return_value), 0, le_index_ptr)", "zend_do_fetch_global_variable((return_value), 0, -1)", "zend_do_fetch_global_variable((return_value), 0, 0)", "zend_do_fetch_global_variable((return_value), 0, 1)", "zend_do_fetch_global_variable((return_value), 0, 16777216)", "zend_do_fetch_global_variable((return_value), 0, 2)", "zend_do_fetch_global_variable((return_value), 0, 3)", "zend_do_fetch_global_variable((return_value), 0, 33554432)", "zend_do_fetch_global_variable((return_value), 0, 4)", "zend_do_fetch_global_variable((return_value), 0, 516)", "zend_do_fetch_global_variable((return_value), 0, le_index_ptr)", "zend_do_fetch_property((return_value), 0, 0)", "zend_do_fetch_static_variable((return_value), 0, -1)", "zend_do_fetch_static_variable((return_value), 0, 0)", "zend_do_fetch_static_variable((return_value), 0, 1)", "zend_do_fetch_static_variable((return_value), 0, 16777216)", "zend_do_fetch_static_variable((return_value), 0, 2)", "zend_do_fetch_static_variable((return_value), 0, 3)", "zend_do_fetch_static_variable((return_value), 0, 33554432)", "zend_do_fetch_static_variable((return_value), 0, 4)", "zend_do_fetch_static_variable((return_value), 0, 516)", "zend_do_fetch_static_variable((return_value), 0, le_index_ptr)", "zend_do_indirect_references((return_value), 0, 0)", "zend_do_jmp_set((return_value), 0, 0)", "zend_do_pass_param((return_value), 0, -1)", "zend_do_pass_param((return_value), 0, 0)", "zend_do_pass_param((return_value), 0, 1)", "zend_do_pass_param((return_value), 0, 16777216)", "zend_do_pass_param((return_value), 0, 2)", "zend_do_pass_param((return_value), 0, 3)", "zend_do_pass_param((return_value), 0, 33554432)", "zend_do_pass_param((return_value), 0, 4)", "zend_do_pass_param((return_value), 0, 516)", "zend_do_pass_param((return_value), 0, le_index_ptr)", "zend_do_post_incdec((return_value), 0, -1)", "zend_do_post_incdec((return_value), 0, 0)", "zend_do_post_incdec((return_value), 0, 1)", "zend_do_post_incdec((return_value), 0, 16777216)", "zend_do_post_incdec((return_value), 0, 2)", "zend_do_post_incdec((return_value), 0, 3)", "zend_do_post_incdec((return_value), 0, 33554432)", "zend_do_post_incdec((return_value), 0, 4)", "zend_do_post_incdec((return_value), 0, 516)", "zend_do_pre_incdec((return_value), 0, -1)", "zend_do_pre_incdec((return_value), 0, 0)", "zend_do_pre_incdec((return_value), 0, 1)", "zend_do_pre_incdec((return_value), 0, 16777216)", "zend_do_pre_incdec((return_value), 0, 2)", "zend_do_pre_incdec((return_value), 0, 3)", "zend_do_pre_incdec((return_value), 0, 33554432)", "zend_do_pre_incdec((return_value), 0, 4)", "zend_do_pre_incdec((return_value), 0, 516)", "zend_do_qm_true((return_value), 0, 0)", "zend_do_use((return_value), 0, -1)", "zend_do_use((return_value), 0, 0)", "zend_do_use((return_value), 0, 1)", "zend_do_use((return_value), 0, 16777216)", "zend_do_use((return_value), 0, 2)", "zend_do_use((return_value), 0, 3)", "zend_do_use((return_value), 0, 33554432)", "zend_do_use((return_value), 0, 4)", "zend_do_use((return_value), 0, 516)", "zend_do_use((return_value), 0, le_index_ptr)", "zend_eval_string((return_value), 0, 0)", "zend_eval_string((return_value), 0, arg_key)", "zend_fcall_info_argp((return_value), 0, 0)", "zend_fcall_info_args_restore((return_value), 0, 0)", "zend_fcall_info_args_save((return_value), 0, 0)", "zend_fcall_info_argv((return_value), 0, 0)", "zend_fetch_class((return_value), 0, -1)", "zend_fetch_class((return_value), 0, 0)", "zend_fetch_class((return_value), 0, 1)", "zend_fetch_class((return_value), 0, 16777216)", "zend_fetch_class((return_value), 0, 2)", "zend_fetch_class((return_value), 0, 3)", "zend_fetch_class((return_value), 0, 33554432)", "zend_fetch_class((return_value), 0, 4)", "zend_fetch_class((return_value), 0, 516)", "zend_fetch_class((return_value), 0, le_index_ptr)", "zend_get_compiled_variable_name((return_value), 0, 0)", "zend_get_configuration_directive((return_value), 0, 0)", "zend_get_configuration_directive((return_value), 0, input)", "zend_get_configuration_directive((return_value), 0, return_value)", "zend_get_constant((return_value), 0, 0)", "zend_get_constant((return_value), 0, input)", "zend_get_constant((return_value), 0, return_value)", "zend_get_object_classname((return_value), 0, 0)", "zend_get_property_info((return_value), 0, -1)", "zend_get_property_info((return_value), 0, 0)", "zend_get_property_info((return_value), 0, 1)", "zend_get_property_info((return_value), 0, 16777216)", "zend_get_property_info((return_value), 0, 2)", "zend_get_property_info((return_value), 0, 3)", "zend_get_property_info((return_value), 0, 33554432)", "zend_get_property_info((return_value), 0, 4)", "zend_get_property_info((return_value), 0, 516)", "zend_get_property_info((return_value), 0, le_index_ptr)", "zend_hash_add_empty_element((return_value), 0, -1)", "zend_hash_add_empty_element((return_value), 0, 0)", "zend_hash_add_empty_element((return_value), 0, 1)", "zend_hash_add_empty_element((return_value), 0, 16777216)", "zend_hash_add_empty_element((return_value), 0, 2)", "zend_hash_add_empty_element((return_value), 0, 3)", "zend_hash_add_empty_element((return_value), 0, 33554432)", "zend_hash_add_empty_element((return_value), 0, 4)", "zend_hash_add_empty_element((return_value), 0, 516)", "zend_hash_add_empty_element((return_value), 0, arg_key_len)", "zend_hash_apply_with_argument((return_value), 0, 0)", "zend_hash_exists((return_value), 0, -1)", "zend_hash_exists((return_value), 0, 0)", "zend_hash_exists((return_value), 0, 1)", "zend_hash_exists((return_value), 0, 16777216)", "zend_hash_exists((return_value), 0, 2)", "zend_hash_exists((return_value), 0, 3)", "zend_hash_exists((return_value), 0, 33554432)", "zend_hash_exists((return_value), 0, 4)", "zend_hash_exists((return_value), 0, 516)", "zend_hash_exists((return_value), 0, arg_key_len)", "zend_hash_get_current_data_ex((return_value), 0, 0)", "zend_hash_index_find((return_value), 0, 0)", "zend_ini_double((return_value), 0, -1)", "zend_ini_double((return_value), 0, 0)", "zend_ini_double((return_value), 0, 1)", "zend_ini_double((return_value), 0, 16777216)", "zend_ini_double((return_value), 0, 2)", "zend_ini_double((return_value), 0, 3)", "zend_ini_double((return_value), 0, 33554432)", "zend_ini_double((return_value), 0, 4)", "zend_ini_double((return_value), 0, 516)", "zend_ini_double((return_value), 0, le_index_ptr)", "zend_ini_long((return_value), 0, -1)", "zend_ini_long((return_value), 0, 0)", "zend_ini_long((return_value), 0, 1)", "zend_ini_long((return_value), 0, 16777216)", "zend_ini_long((return_value), 0, 2)", "zend_ini_long((return_value), 0, 3)", "zend_ini_long((return_value), 0, 33554432)", "zend_ini_long((return_value), 0, 4)", "zend_ini_long((return_value), 0, 516)", "zend_ini_long((return_value), 0, le_index_ptr)", "zend_ini_register_displayer((return_value), 0, 0)", "zend_ini_register_displayer((return_value), 0, display_link_numbers)", "zend_ini_register_displayer((return_value), 0, zend_ini_boolean_displayer_cb)", "zend_ini_register_displayer((return_value), 0, zend_ini_color_displayer_cb)", "zend_ini_string((return_value), 0, -1)", "zend_ini_string((return_value), 0, 0)", "zend_ini_string((return_value), 0, 1)", "zend_ini_string((return_value), 0, 16777216)", "zend_ini_string((return_value), 0, 2)", "zend_ini_string((return_value), 0, 3)", "zend_ini_string((return_value), 0, 33554432)", "zend_ini_string((return_value), 0, 4)", "zend_ini_string((return_value), 0, 516)", "zend_ini_string((return_value), 0, le_index_ptr)", "zend_is_callable((return_value), 0, 0)", "zend_is_callable((return_value), 0, environ)", "zend_llist_apply_with_argument((return_value), 0, 0)", "zend_llist_del_element((return_value), 0, 0)", "zend_lookup_class((return_value), 0, 0)", "zend_make_printable_zval((return_value), 0, 0)", "zend_memrchr((return_value), 0, -1)", "zend_memrchr((return_value), 0, 0)", "zend_memrchr((return_value), 0, 1)", "zend_memrchr((return_value), 0, 16777216)", "zend_memrchr((return_value), 0, 2)", "zend_memrchr((return_value), 0, 3)", "zend_memrchr((return_value), 0, 33554432)", "zend_memrchr((return_value), 0, 4)", "zend_memrchr((return_value), 0, 516)", "zend_memrchr((return_value), 0, index)", "zend_merge_properties((return_value), 0, -1)", "zend_merge_properties((return_value), 0, 0)", "zend_merge_properties((return_value), 0, 1)", "zend_merge_properties((return_value), 0, 16777216)", "zend_merge_properties((return_value), 0, 2)", "zend_merge_properties((return_value), 0, 3)", "zend_merge_properties((return_value), 0, 33554432)", "zend_merge_properties((return_value), 0, 4)", "zend_merge_properties((return_value), 0, 516)", "zend_merge_properties((return_value), 0, le_index_ptr)", "zend_mm_shutdown((return_value), 0, -1)", "zend_mm_shutdown((return_value), 0, 0)", "zend_mm_shutdown((return_value), 0, 1)", "zend_mm_shutdown((return_value), 0, 16777216)", "zend_mm_shutdown((return_value), 0, 2)", "zend_mm_shutdown((return_value), 0, 3)", "zend_mm_shutdown((return_value), 0, 33554432)", "zend_mm_shutdown((return_value), 0, 4)", "zend_mm_shutdown((return_value), 0, 516)", "zend_mm_shutdown((return_value), 0, le_index_ptr)", "zend_prepare_reference((return_value), 0, 0)", "zend_prepare_trait_precedence((return_value), 0, 0)", "zend_print_zval_ex((return_value), 0, -1)", "zend_print_zval_ex((return_value), 0, 0)", "zend_print_zval_ex((return_value), 0, 1)", "zend_print_zval_ex((return_value), 0, 16777216)", "zend_print_zval_ex((return_value), 0, 2)", "zend_print_zval_ex((return_value), 0, 3)", "zend_print_zval_ex((return_value), 0, 33554432)", "zend_print_zval_ex((return_value), 0, 4)", "zend_print_zval_ex((return_value), 0, 516)", "zend_print_zval_ex((return_value), 0, le_index_ptr)", "zend_print_zval_r_ex((return_value), 0, -1)", "zend_print_zval_r_ex((return_value), 0, 0)", "zend_print_zval_r_ex((return_value), 0, 1)", "zend_print_zval_r_ex((return_value), 0, 16777216)", "zend_print_zval_r_ex((return_value), 0, 2)", "zend_print_zval_r_ex((return_value), 0, 3)", "zend_print_zval_r_ex((return_value), 0, 33554432)", "zend_print_zval_r_ex((return_value), 0, 4)", "zend_print_zval_r_ex((return_value), 0, 516)", "zend_print_zval_r_ex((return_value), 0, le_index_ptr)", "zend_ptr_stack_2_pop((return_value), 0, 0)", "zend_ptr_stack_2_push((return_value), 0, 0)", "zend_ptr_stack_clean((return_value), 0, -1)", "zend_ptr_stack_clean((return_value), 0, 0)", "zend_ptr_stack_clean((return_value), 0, 1)", "zend_ptr_stack_clean((return_value), 0, 16777216)", "zend_ptr_stack_clean((return_value), 0, 2)", "zend_ptr_stack_clean((return_value), 0, 3)", "zend_ptr_stack_clean((return_value), 0, 33554432)", "zend_ptr_stack_clean((return_value), 0, 4)", "zend_ptr_stack_clean((return_value), 0, 516)", "zend_register_class_alias_ex((return_value), 0, 0)", "zend_register_class_alias_ex((return_value), 0, zend_standard_class_def)", "zend_register_internal_class_ex((return_value), 0, 0)", "zend_register_internal_class_ex((return_value), 0, arg_key)", "zend_register_list_destructors((return_value), 0, -1)", "zend_register_list_destructors((return_value), 0, 0)", "zend_register_list_destructors((return_value), 0, 1)", "zend_register_list_destructors((return_value), 0, 16777216)", "zend_register_list_destructors((return_value), 0, 2)", "zend_register_list_destructors((return_value), 0, 3)", "zend_register_list_destructors((return_value), 0, 33554432)", "zend_register_list_destructors((return_value), 0, 4)", "zend_register_list_destructors((return_value), 0, 516)", "zend_register_list_destructors((return_value), 0, le_index_ptr)", "zend_register_resource((return_value), 0, -1)", "zend_register_resource((return_value), 0, 0)", "zend_register_resource((return_value), 0, 1)", "zend_register_resource((return_value), 0, 16777216)", "zend_register_resource((return_value), 0, 2)", "zend_register_resource((return_value), 0, 3)", "zend_register_resource((return_value), 0, 33554432)", "zend_register_resource((return_value), 0, 4)", "zend_register_resource((return_value), 0, 516)", "zend_register_resource((return_value), 0, le_index_ptr)", "zend_resolve_class_name((return_value), 0, -1)", "zend_resolve_class_name((return_value), 0, 0)", "zend_resolve_class_name((return_value), 0, 1)", "zend_resolve_class_name((return_value), 0, 16777216)", "zend_resolve_class_name((return_value), 0, 2)", "zend_resolve_class_name((return_value), 0, 3)", "zend_resolve_class_name((return_value), 0, 33554432)", "zend_resolve_class_name((return_value), 0, 4)", "zend_resolve_class_name((return_value), 0, 516)", "zend_resolve_class_name((return_value), 0, le_index_ptr)", "zend_resolve_goto_label((return_value), 0, -1)", "zend_resolve_goto_label((return_value), 0, 0)", "zend_resolve_goto_label((return_value), 0, 1)", "zend_resolve_goto_label((return_value), 0, 16777216)", "zend_resolve_goto_label((return_value), 0, 2)", "zend_resolve_goto_label((return_value), 0, 3)", "zend_resolve_goto_label((return_value), 0, 33554432)", "zend_resolve_goto_label((return_value), 0, 4)", "zend_resolve_goto_label((return_value), 0, 516)", "zend_resolve_goto_label((return_value), 0, le_index_ptr)", "zend_restore_ini_entry((return_value), 0, -1)", "zend_restore_ini_entry((return_value), 0, 0)", "zend_restore_ini_entry((return_value), 0, 1)", "zend_restore_ini_entry((return_value), 0, 16777216)", "zend_restore_ini_entry((return_value), 0, 2)", "zend_restore_ini_entry((return_value), 0, 3)", "zend_restore_ini_entry((return_value), 0, 33554432)", "zend_restore_ini_entry((return_value), 0, 4)", "zend_restore_ini_entry((return_value), 0, 516)", "zend_restore_ini_entry((return_value), 0, le_index_ptr)", "zend_stack_apply((return_value), 0, 0)", "zend_stack_apply((return_value), 0, brk)", "zend_stack_apply((return_value), 0, dlclose)", "zend_stack_push((return_value), 0, -1)", "zend_stack_push((return_value), 0, 0)", "zend_stack_push((return_value), 0, 1)", "zend_stack_push((return_value), 0, 16777216)", "zend_stack_push((return_value), 0, 2)", "zend_stack_push((return_value), 0, 3)", "zend_stack_push((return_value), 0, 33554432)", "zend_stack_push((return_value), 0, 4)", "zend_stack_push((return_value), 0, 516)", "zend_stack_push((return_value), 0, le_index_ptr)", "zend_std_cast_object_tostring((return_value), 0, -1)", "zend_std_cast_object_tostring((return_value), 0, 0)", "zend_std_cast_object_tostring((return_value), 0, 1)", "zend_std_cast_object_tostring((return_value), 0, 16777216)", "zend_std_cast_object_tostring((return_value), 0, 2)", "zend_std_cast_object_tostring((return_value), 0, 3)", "zend_std_cast_object_tostring((return_value), 0, 33554432)", "zend_std_cast_object_tostring((return_value), 0, 4)", "zend_std_cast_object_tostring((return_value), 0, 516)", "zend_std_cast_object_tostring((return_value), 0, le_index_ptr)", "zend_str_tolower_copy((return_value), 0, -1)", "zend_str_tolower_copy((return_value), 0, 0)", "zend_str_tolower_copy((return_value), 0, 1)", "zend_str_tolower_copy((return_value), 0, 16777216)", "zend_str_tolower_copy((return_value), 0, 2)", "zend_str_tolower_copy((return_value), 0, 3)", "zend_str_tolower_copy((return_value), 0, 33554432)", "zend_str_tolower_copy((return_value), 0, 4)", "zend_str_tolower_copy((return_value), 0, 516)", "zend_str_tolower_copy((return_value), 0, arg_key_len)", "zend_stream_fixup((return_value), 0, 0)", "zend_symtable_del((return_value), 0, -1)", "zend_symtable_del((return_value), 0, 0)", "zend_symtable_del((return_value), 0, 1)", "zend_symtable_del((return_value), 0, 16777216)", "zend_symtable_del((return_value), 0, 2)", "zend_symtable_del((return_value), 0, 3)", "zend_symtable_del((return_value), 0, 33554432)", "zend_symtable_del((return_value), 0, 4)", "zend_symtable_del((return_value), 0, 516)", "zend_symtable_del((return_value), 0, arg_key_len)", "zend_symtable_exists((return_value), 0, -1)", "zend_symtable_exists((return_value), 0, 0)", "zend_symtable_exists((return_value), 0, 1)", "zend_symtable_exists((return_value), 0, 16777216)", "zend_symtable_exists((return_value), 0, 2)", "zend_symtable_exists((return_value), 0, 3)", "zend_symtable_exists((return_value), 0, 33554432)", "zend_symtable_exists((return_value), 0, 4)", "zend_symtable_exists((return_value), 0, 516)", "zend_symtable_exists((return_value), 0, arg_key_len)", "zend_ts_get_hash_value((return_value), 0, -1)", "zend_ts_get_hash_value((return_value), 0, 0)", "zend_ts_get_hash_value((return_value), 0, 1)", "zend_ts_get_hash_value((return_value), 0, 16777216)", "zend_ts_get_hash_value((return_value), 0, 2)", "zend_ts_get_hash_value((return_value), 0, 3)", "zend_ts_get_hash_value((return_value), 0, 33554432)", "zend_ts_get_hash_value((return_value), 0, 4)", "zend_ts_get_hash_value((return_value), 0, 516)", "zend_ts_get_hash_value((return_value), 0, arg_key_len)", "zend_ts_hash_add_empty_element((return_value), 0, -1)", "zend_ts_hash_add_empty_element((return_value), 0, 0)", "zend_ts_hash_add_empty_element((return_value), 0, 1)", "zend_ts_hash_add_empty_element((return_value), 0, 16777216)", "zend_ts_hash_add_empty_element((return_value), 0, 2)", "zend_ts_hash_add_empty_element((return_value), 0, 3)", "zend_ts_hash_add_empty_element((return_value), 0, 33554432)", "zend_ts_hash_add_empty_element((return_value), 0, 4)", "zend_ts_hash_add_empty_element((return_value), 0, 516)", "zend_ts_hash_add_empty_element((return_value), 0, arg_key_len)", "zend_ts_hash_apply_with_argument((return_value), 0, 0)", "zend_ts_hash_exists((return_value), 0, -1)", "zend_ts_hash_exists((return_value), 0, 0)", "zend_ts_hash_exists((return_value), 0, 1)", "zend_ts_hash_exists((return_value), 0, 16777216)", "zend_ts_hash_exists((return_value), 0, 2)", "zend_ts_hash_exists((return_value), 0, 3)", "zend_ts_hash_exists((return_value), 0, 33554432)", "zend_ts_hash_exists((return_value), 0, 4)", "zend_ts_hash_exists((return_value), 0, 516)", "zend_ts_hash_exists((return_value), 0, arg_key_len)", "zend_ts_hash_index_find((return_value), 0, 0)", "zend_unregister_functions((return_value), 0, 0)", "zend_update_static_property_null((return_value), 0, -1)", "zend_update_static_property_null((return_value), 0, 0)", "zend_update_static_property_null((return_value), 0, 1)", "zend_update_static_property_null((return_value), 0, 16777216)", "zend_update_static_property_null((return_value), 0, 2)", "zend_update_static_property_null((return_value), 0, 3)", "zend_update_static_property_null((return_value), 0, 33554432)", "zend_update_static_property_null((return_value), 0, 4)", "zend_update_static_property_null((return_value), 0, 516)", "zend_update_static_property_null((return_value), 0, le_index_ptr)", "zendi_smart_strcmp((return_value), 0, 0)", "zendi_smart_strcmp((return_value), 0, input)", "zendi_smart_strcmp((return_value), 0, return_value)", "zval_update_constant_ex((return_value), 0, 0)", "zval_update_constant_ex((return_value), 0, zend_standard_class_def)", "{\n}\n", "Debug((return_value), 0)", "__cmsg_nxthdr((return_value), 0)", "__overflow((return_value), 0)", "__sigsetjmp((return_value), 0)", "__stat_file_close((return_value), 0)", "__stpcpy((return_value), 0)", "__zend_realloc((return_value), 0)", "_estrndup((return_value), 0)", "_longjmp((return_value), 0)", "_object_init_ex((return_value), 0)", "_php_glob_stream_get_count((return_value), 0)", "_php_stream_filter_append((return_value), 0)", "_php_stream_filter_flush((return_value), 0)", "_php_stream_filter_prepend((return_value), 0)", "_php_stream_flush((return_value), 0)", "_php_stream_fopen_from_file((return_value), 0)", "_php_stream_fopen_from_pipe((return_value), 0)", "_php_stream_free((return_value), 0)", "_php_stream_free_enclosed((return_value), 0)", "_php_stream_memory_get_buffer((return_value), 0)", "_php_stream_mmap_unmap_ex((return_value), 0)", "_php_stream_printf((return_value), 0)", "_php_stream_putc((return_value), 0)", "_php_stream_puts((return_value), 0)", "_php_stream_readdir((return_value), 0)", "_php_stream_stat((return_value), 0)", "_php_stream_truncate_set_size((return_value), 0)", "_zend_bailout((return_value), 0)", "_zend_mm_alloc((return_value), 0)", "_zend_mm_block_size((return_value), 0)", "_zend_mm_free((return_value), 0)", "access((return_value), 0)", "add_index_null((return_value), 0)", "add_next_index_bool((return_value), 0)", "add_next_index_long((return_value), 0)", "add_next_index_resource((return_value), 0)", "add_next_index_zval((return_value), 0)", "add_trait_alias((return_value), 0)", "adjtime((return_value), 0)", "alphasort((return_value), 0)", "ap_php_asprintf((return_value), 0)", "asctime_r((return_value), 0)", "bitwise_not_function((return_value), 0)", "boolean_not_function((return_value), 0)", "bzero((return_value), 0)", "cfg_get_double((return_value), 0)", "cfg_get_entry((return_value), 0)", "cfg_get_long((return_value), 0)", "cfg_get_string((return_value), 0)", "chmod((return_value), 0)", "compile_file((return_value), 0)", "compile_string((return_value), 0)", "convert_to_long_base((return_value), 0)", "ctime_r((return_value), 0)", "display_link_numbers((return_value), 0)", "dlopen((return_value), 0)", "dlsym((return_value), 0)", "drand48_r((return_value), 0)", "execl((return_value), 0)", "execle((return_value), 0)", "execlp((return_value), 0)", "execute_internal((return_value), 0)", "execv((return_value), 0)", "execvp((return_value), 0)", "expand_filepath((return_value), 0)", "explicit_bzero((return_value), 0)", "fgetpos((return_value), 0)", "fopen((return_value), 0)", "fprintf((return_value), 0)", "fputs((return_value), 0)", "fsetpos((return_value), 0)", "getcwd((return_value), 0)", "getdomainname((return_value), 0)", "getentropy((return_value), 0)", "gethostname((return_value), 0)", "getloadavg((return_value), 0)", "getlogin_r((return_value), 0)", "gettimeofday((return_value), 0)", "gmtime_r((return_value), 0)", "index((return_value), 0)", "init_trait_alias_list((return_value), 0)", "instanceof_function((return_value), 0)", "lchmod((return_value), 0)", "lcong48_r((return_value), 0)", "link((return_value), 0)", "localtime_r((return_value), 0)", "longjmp((return_value), 0)", "lrand48_r((return_value), 0)", "lstat((return_value), 0)", "lutimes((return_value), 0)", "mblen((return_value), 0)", "mkdir((return_value), 0)", "mkfifo((return_value), 0)", "mkstemps((return_value), 0)", "mrand48_r((return_value), 0)", "nanosleep((return_value), 0)", "object_properties_init((return_value), 0)", "on_exit((return_value), 0)", "open_memstream((return_value), 0)", "pathconf((return_value), 0)", "php_check_open_basedir_ex((return_value), 0)", "php_check_specific_open_basedir((return_value), 0)", "php_dirname((return_value), 0)", "php_info_html_esc_write((return_value), 0)", "php_ini_activate_per_dir_config((return_value), 0)", "php_ini_activate_per_host_config((return_value), 0)", "php_output_handler_alias((return_value), 0)", "php_output_handler_started((return_value), 0)", "php_output_write((return_value), 0)", "php_output_write_unbuffered((return_value), 0)", "php_printf((return_value), 0)", "php_register_pre_request_shutdown((return_value), 0)", "php_register_url_stream_wrapper((return_value), 0)", "php_register_url_stream_wrapper_volatile((return_value), 0)", "php_sprintf((return_value), 0)", "php_stream_bucket_append((return_value), 0)", "php_stream_bucket_prepend((return_value), 0)", "php_stream_context_del_link((return_value), 0)", "php_stream_context_set((return_value), 0)", "php_stream_dirent_alphasort((return_value), 0)", "php_stream_dirent_alphasortr((return_value), 0)", "php_stream_encloses((return_value), 0)", "php_stream_filter_append_ex((return_value), 0)", "php_stream_filter_prepend_ex((return_value), 0)", "php_stream_filter_register_factory((return_value), 0)", "php_stream_filter_register_factory_volatile((return_value), 0)", "php_stream_filter_remove((return_value), 0)", "php_stream_from_persistent_id((return_value), 0)", "php_stream_xport_crypto_enable((return_value), 0)", "php_stream_xport_register((return_value), 0)", "php_stream_xport_shutdown((return_value), 0)", "php_stripcslashes((return_value), 0)", "php_stripslashes((return_value), 0)", "php_strtolower((return_value), 0)", "php_strtoupper((return_value), 0)", "php_write((return_value), 0)", "popen((return_value), 0)", "print_op_array((return_value), 0)", "printf((return_value), 0)", "psiginfo((return_value), 0)", "putpwent((return_value), 0)", "random_r((return_value), 0)", "realloc((return_value), 0)", "realpath((return_value), 0)", "realpath_cache_del((return_value), 0)", "rename((return_value), 0)", "rindex((return_value), 0)", "sapi_apply_default_charset((return_value), 0)", "sapi_getenv((return_value), 0)", "sapi_register_input_filter((return_value), 0)", "seed48_r((return_value), 0)", "seekdir((return_value), 0)", "setbuf((return_value), 0)", "setdomainname((return_value), 0)", "sethostname((return_value), 0)", "setstate_r((return_value), 0)", "settimeofday((return_value), 0)", "sigaddset((return_value), 0)", "sigaltstack((return_value), 0)", "sigdelset((return_value), 0)", "sigismember((return_value), 0)", "siglongjmp((return_value), 0)", "sigstack((return_value), 0)", "sigwait((return_value), 0)", "sigwaitinfo((return_value), 0)", "sprintf((return_value), 0)", "stat((return_value), 0)", "stpcpy((return_value), 0)", "strcasecmp((return_value), 0)", "strcat((return_value), 0)", "strchr((return_value), 0)", "strcmp((return_value), 0)", "strcoll((return_value), 0)", "strcpy((return_value), 0)", "strcspn((return_value), 0)", "strndup((return_value), 0)", "strnlen((return_value), 0)", "strpbrk((return_value), 0)", "strrchr((return_value), 0)", "strsep((return_value), 0)", "strspn((return_value), 0)", "strstr((return_value), 0)", "strtod((return_value), 0)", "strtof((return_value), 0)", "strtok((return_value), 0)", "strtold((return_value), 0)", "symlink((return_value), 0)", "tempnam((return_value), 0)", "timer_gettime((return_value), 0)", "timespec_get((return_value), 0)", "truncate((return_value), 0)", "tsrm_realpath((return_value), 0)", "utime((return_value), 0)", "utimes((return_value), 0)", "virtual_access((return_value), 0)", "virtual_chdir_file((return_value), 0)", "virtual_chmod((return_value), 0)", "virtual_creat((return_value), 0)", "virtual_filepath((return_value), 0)", "virtual_fopen((return_value), 0)", "virtual_getcwd((return_value), 0)", "virtual_lstat((return_value), 0)", "virtual_mkdir((return_value), 0)", "virtual_open((return_value), 0)", "virtual_popen((return_value), 0)", "virtual_realpath((return_value), 0)", "virtual_rename((return_value), 0)", "virtual_stat((return_value), 0)", "virtual_utime((return_value), 0)", "vprintf((return_value), 0)", "wctomb((return_value), 0)", "zend_add_literal((return_value), 0)", "zend_add_to_list((return_value), 0)", "zend_atoi((return_value), 0)", "zend_atol((return_value), 0)", "zend_binary_zval_strcasecmp((return_value), 0)", "zend_binary_zval_strcmp((return_value), 0)", "zend_call_function((return_value), 0)", "zend_check_protected((return_value), 0)", "zend_class_implements((return_value), 0)", "zend_compare_file_handles((return_value), 0)", "zend_copy_constants((return_value), 0)", "zend_delete_global_variable((return_value), 0)", "zend_dirname((return_value), 0)", "zend_disable_class((return_value), 0)", "zend_disable_function((return_value), 0)", "zend_do_begin_class_member_function_call((return_value), 0)", "zend_do_begin_dynamic_function_call((return_value), 0)", "zend_do_begin_function_call((return_value), 0)", "zend_do_begin_namespace((return_value), 0)", "zend_do_begin_new_object((return_value), 0)", "zend_do_begin_qm_op((return_value), 0)", "zend_do_boolean_and_begin((return_value), 0)", "zend_do_boolean_or_begin((return_value), 0)", "zend_do_case_after_statement((return_value), 0)", "zend_do_clone((return_value), 0)", "zend_do_declare_class_constant((return_value), 0)", "zend_do_declare_constant((return_value), 0)", "zend_do_declare_stmt((return_value), 0)", "zend_do_default_before_statement((return_value), 0)", "zend_do_end_class_declaration((return_value), 0)", "zend_do_exit((return_value), 0)", "zend_do_fetch_class((return_value), 0)", "zend_do_fetch_lexical_variable((return_value), 0)", "zend_do_fetch_static_member((return_value), 0)", "zend_do_for_before_statement((return_value), 0)", "zend_do_for_cond((return_value), 0)", "zend_do_foreach_end((return_value), 0)", "zend_do_if_after_statement((return_value), 0)", "zend_do_if_cond((return_value), 0)", "zend_do_implement_interface((return_value), 0)", "zend_do_implement_trait((return_value), 0)", "zend_do_inherit_interfaces((return_value), 0)", "zend_do_inheritance((return_value), 0)", "zend_do_list_end((return_value), 0)", "zend_do_mark_last_catch((return_value), 0)", "zend_do_print((return_value), 0)", "zend_do_return((return_value), 0)", "zend_do_shell_exec((return_value), 0)", "zend_do_verify_access_types((return_value), 0)", "zend_do_while_cond((return_value), 0)", "zend_do_while_end((return_value), 0)", "zend_fcall_info_argn((return_value), 0)", "zend_fcall_info_args((return_value), 0)", "zend_fcall_info_args_clear((return_value), 0)", "zend_get_class_fetch_type((return_value), 0)", "zend_get_compiled_variable_value((return_value), 0)", "zend_get_hash_value((return_value), 0)", "zend_hash_apply((return_value), 0)", "zend_hash_func((return_value), 0)", "zend_hash_get_current_key_type_ex((return_value), 0)", "zend_hash_get_pointer((return_value), 0)", "zend_hash_index_exists((return_value), 0)", "zend_hash_internal_pointer_end_ex((return_value), 0)", "zend_hash_internal_pointer_reset_ex((return_value), 0)", "zend_hash_move_backwards_ex((return_value), 0)", "zend_hash_move_forward_ex((return_value), 0)", "zend_hash_reverse_apply((return_value), 0)", "zend_hash_set_pointer((return_value), 0)", "zend_hex_strtod((return_value), 0)", "zend_ini_boolean_displayer_cb((return_value), 0)", "zend_ini_color_displayer_cb((return_value), 0)", "zend_init_list((return_value), 0)", "zend_initialize_class_data((return_value), 0)", "zend_inline_hash_func((return_value), 0)", "zend_is_auto_global((return_value), 0)", "zend_iterator_unwrap((return_value), 0)", "zend_list_insert((return_value), 0)", "zend_llist_add_element((return_value), 0)", "zend_llist_apply((return_value), 0)", "zend_llist_apply_with_del((return_value), 0)", "zend_llist_copy((return_value), 0)", "zend_llist_get_first_ex((return_value), 0)", "zend_llist_get_last_ex((return_value), 0)", "zend_llist_get_next_ex((return_value), 0)", "zend_llist_get_prev_ex((return_value), 0)", "zend_llist_prepend_element((return_value), 0)", "zend_llist_sort((return_value), 0)", "zend_make_callable((return_value), 0)", "zend_multibyte_set_script_encoding((return_value), 0)", "zend_multibyte_set_script_encoding_by_string((return_value), 0)", "zend_object_create_proxy((return_value), 0)", "zend_object_std_init((return_value), 0)", "zend_object_store_set_object((return_value), 0)", "zend_objects_destroy_object((return_value), 0)", "zend_objects_new((return_value), 0)", "zend_objects_store_init((return_value), 0)", "zend_oct_strtod((return_value), 0)", "zend_print_zval((return_value), 0)", "zend_print_zval_r((return_value), 0)", "zend_ptr_stack_apply((return_value), 0)", "zend_ptr_stack_init_ex((return_value), 0)", "zend_ptr_stack_n_pop((return_value), 0)", "zend_ptr_stack_n_push((return_value), 0)", "zend_ptr_stack_push((return_value), 0)", "zend_quick_get_constant((return_value), 0)", "zend_register_ini_entries((return_value), 0)", "zend_resolve_non_class_name((return_value), 0)", "zend_stack_top((return_value), 0)", "zend_startup((return_value), 0)", "zend_std_get_debug_info((return_value), 0)", "zend_str_tolower((return_value), 0)", "zend_str_tolower_dup((return_value), 0)", "zend_stream_open((return_value), 0)", "zend_string_to_double((return_value), 0)", "zend_strndup((return_value), 0)", "zend_strtod((return_value), 0)", "zend_ts_hash_apply((return_value), 0)", "zend_ts_hash_func((return_value), 0)", "zend_ts_hash_index_exists((return_value), 0)", "zend_ts_hash_reverse_apply((return_value), 0)", "zval_set_isref_to_p((return_value), 0)", "zval_set_refcount_p((return_value), 0)", "zval_update_constant((return_value), 0)", "zval_update_constant_inline_change((return_value), 0)", "zval_update_constant_no_inline_change((return_value), 0)", "_array_init(((&arg_elm)), 0)", "_array_init(((&arg_key)), 0)", "_array_init(((&arg_key_len)), 0)", "_array_init(((&index)), 0)", "_array_init(((&input)), 0)", "_array_init(((&op)), 0)", "_array_init(((&pos)), 0)", "_array_init(((&return_value)), 0)", "_array_init(((&tmp)), 0)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((return_value), (0 * arg_key_len))", "_array_init((return_value), (0 * index))", "_array_init((return_value), (0))", "_array_init((return_value), (arg_elm != 0))", "_array_init((return_value), (arg_elm == 0))", "_array_init((return_value), (arg_key != 0))", "_array_init((return_value), (arg_key == 0))", "_array_init((return_value), (arg_key_len != 0))", "_array_init((return_value), (arg_key_len != index))", "_array_init((return_value), (arg_key_len * index))", "_array_init((return_value), (arg_key_len + 0))", "_array_init((return_value), (arg_key_len + index))", "_array_init((return_value), (arg_key_len - 0))", "_array_init((return_value), (arg_key_len - index))", "_array_init((return_value), (arg_key_len == 0))", "_array_init((return_value), (arg_key_len == index))", "_array_init((return_value), (index != 0))", "_array_init((return_value), (index * arg_key_len))", "_array_init((return_value), (index + 0))", "_array_init((return_value), (index - 0))", "_array_init((return_value), (index == 0))", "_array_init((return_value), (input != 0))", "_array_init((return_value), (input != return_value))", "_array_init((return_value), (input == 0))", "_array_init((return_value), (input == return_value))", "_array_init((return_value), (op != 0))", "_array_init((return_value), (op != arg_elm))", "_array_init((return_value), (op != tmp))", "_array_init((return_value), (op == 0))", "_array_init((return_value), (op == arg_elm))", "_array_init((return_value), (op == tmp))", "_array_init((return_value), (pos != 0))", "_array_init((return_value), (pos == 0))", "_array_init((return_value), (return_value != 0))", "_array_init((return_value), (return_value == 0))", "_array_init((return_value), (tmp != 0))", "_array_init((return_value), (tmp != arg_elm))", "_array_init((return_value), (tmp == 0))", "_array_init((return_value), (tmp == arg_elm))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.2303858722566785, -4.3945077766566776, -5.3832515732566781, -6.7605357732566782, -5.8322223766566781, -5.4120424756566781, -5.6749533722566783, -4.7342710702566784, -5.3372451732566777, -6.6866912232566778, -5.3832515732566781, -5.3832515732566781]
								}, {
									"case":	2,
									"scores":	[-4.982766493256678]
								}, {
									"case":	3,
									"scores":	[-4.982766493256678]
								}, {
									"case":	4,
									"scores":	[-4.982766493256678]
								}, {
									"case":	5,
									"scores":	[-4.982766493256678]
								}, {
									"case":	6,
									"scores":	[-4.982766493256678]
								}, {
									"case":	7,
									"scores":	[-4.982766493256678]
								}, {
									"case":	8,
									"scores":	[-4.982766493256678]
								}, {
									"case":	9,
									"scores":	[-4.982766493256678]
								}, {
									"case":	10,
									"scores":	[-4.982766493256678]
								}, {
									"case":	11,
									"scores":	[-4.982766493256678]
								}, {
									"case":	12,
									"scores":	[-4.982766493256678]
								}, {
									"case":	13,
									"scores":	[-4.982766493256678]
								}, {
									"case":	14,
									"scores":	[-4.982766493256678]
								}, {
									"case":	15,
									"scores":	[-4.982766493256678]
								}, {
									"case":	16,
									"scores":	[-4.982766493256678]
								}, {
									"case":	17,
									"scores":	[-4.982766493256678]
								}, {
									"case":	18,
									"scores":	[-4.982766493256678]
								}, {
									"case":	19,
									"scores":	[-4.982766493256678]
								}, {
									"case":	20,
									"scores":	[-4.982766493256678]
								}, {
									"case":	21,
									"scores":	[-4.982766493256678]
								}, {
									"case":	22,
									"scores":	[-4.982766493256678]
								}, {
									"case":	23,
									"scores":	[-4.982766493256678]
								}, {
									"case":	24,
									"scores":	[-4.982766493256678]
								}, {
									"case":	25,
									"scores":	[-4.982766493256678]
								}, {
									"case":	26,
									"scores":	[-4.982766493256678]
								}, {
									"case":	27,
									"scores":	[-4.982766493256678]
								}, {
									"case":	28,
									"scores":	[-4.982766493256678]
								}, {
									"case":	29,
									"scores":	[-4.982766493256678]
								}, {
									"case":	30,
									"scores":	[-4.982766493256678]
								}, {
									"case":	31,
									"scores":	[-4.982766493256678]
								}, {
									"case":	32,
									"scores":	[-4.982766493256678]
								}, {
									"case":	33,
									"scores":	[-4.982766493256678]
								}, {
									"case":	34,
									"scores":	[-4.982766493256678]
								}, {
									"case":	35,
									"scores":	[-4.982766493256678]
								}, {
									"case":	36,
									"scores":	[-4.982766493256678]
								}, {
									"case":	37,
									"scores":	[-4.982766493256678]
								}, {
									"case":	38,
									"scores":	[-4.982766493256678]
								}, {
									"case":	39,
									"scores":	[-4.982766493256678]
								}, {
									"case":	40,
									"scores":	[-4.982766493256678]
								}, {
									"case":	41,
									"scores":	[-4.982766493256678]
								}, {
									"case":	42,
									"scores":	[-4.982766493256678]
								}, {
									"case":	43,
									"scores":	[-4.982766493256678]
								}, {
									"case":	44,
									"scores":	[-4.982766493256678]
								}, {
									"case":	45,
									"scores":	[-4.982766493256678]
								}, {
									"case":	46,
									"scores":	[-4.982766493256678]
								}, {
									"case":	47,
									"scores":	[-4.982766493256678]
								}, {
									"case":	48,
									"scores":	[-4.982766493256678]
								}, {
									"case":	49,
									"scores":	[-4.982766493256678]
								}, {
									"case":	50,
									"scores":	[-4.982766493256678]
								}, {
									"case":	51,
									"scores":	[-4.982766493256678]
								}, {
									"case":	52,
									"scores":	[-4.982766493256678]
								}, {
									"case":	53,
									"scores":	[-4.982766493256678]
								}, {
									"case":	54,
									"scores":	[-4.982766493256678]
								}, {
									"case":	55,
									"scores":	[-4.982766493256678]
								}, {
									"case":	56,
									"scores":	[-4.982766493256678]
								}, {
									"case":	57,
									"scores":	[-4.982766493256678]
								}, {
									"case":	58,
									"scores":	[-4.982766493256678]
								}, {
									"case":	59,
									"scores":	[-4.982766493256678]
								}, {
									"case":	60,
									"scores":	[-4.982766493256678]
								}, {
									"case":	61,
									"scores":	[-4.982766493256678]
								}, {
									"case":	62,
									"scores":	[-4.982766493256678]
								}, {
									"case":	63,
									"scores":	[-4.982766493256678]
								}, {
									"case":	64,
									"scores":	[-4.982766493256678]
								}, {
									"case":	65,
									"scores":	[-4.982766493256678]
								}, {
									"case":	66,
									"scores":	[-4.982766493256678]
								}, {
									"case":	67,
									"scores":	[-4.982766493256678]
								}, {
									"case":	68,
									"scores":	[-4.982766493256678]
								}, {
									"case":	69,
									"scores":	[-4.982766493256678]
								}, {
									"case":	70,
									"scores":	[-4.982766493256678]
								}, {
									"case":	71,
									"scores":	[-4.982766493256678]
								}, {
									"case":	72,
									"scores":	[-4.982766493256678]
								}, {
									"case":	73,
									"scores":	[-4.982766493256678]
								}, {
									"case":	74,
									"scores":	[-4.982766493256678]
								}, {
									"case":	75,
									"scores":	[-4.982766493256678]
								}, {
									"case":	76,
									"scores":	[-4.982766493256678]
								}, {
									"case":	77,
									"scores":	[-4.982766493256678]
								}, {
									"case":	78,
									"scores":	[-4.982766493256678]
								}, {
									"case":	79,
									"scores":	[-4.982766493256678]
								}, {
									"case":	80,
									"scores":	[-4.982766493256678]
								}, {
									"case":	81,
									"scores":	[-4.982766493256678]
								}, {
									"case":	82,
									"scores":	[-4.982766493256678]
								}, {
									"case":	83,
									"scores":	[-4.982766493256678]
								}, {
									"case":	84,
									"scores":	[-4.982766493256678]
								}, {
									"case":	85,
									"scores":	[-4.982766493256678]
								}, {
									"case":	86,
									"scores":	[-4.982766493256678]
								}, {
									"case":	87,
									"scores":	[-4.982766493256678]
								}, {
									"case":	88,
									"scores":	[-4.982766493256678]
								}, {
									"case":	89,
									"scores":	[-4.982766493256678]
								}, {
									"case":	90,
									"scores":	[-4.982766493256678]
								}, {
									"case":	91,
									"scores":	[-4.982766493256678]
								}, {
									"case":	92,
									"scores":	[-4.982766493256678]
								}, {
									"case":	93,
									"scores":	[-4.982766493256678]
								}, {
									"case":	94,
									"scores":	[-4.982766493256678]
								}, {
									"case":	95,
									"scores":	[-4.982766493256678]
								}, {
									"case":	96,
									"scores":	[-4.982766493256678]
								}, {
									"case":	97,
									"scores":	[-4.982766493256678]
								}, {
									"case":	98,
									"scores":	[-4.982766493256678]
								}, {
									"case":	99,
									"scores":	[-4.982766493256678]
								}, {
									"case":	100,
									"scores":	[-4.982766493256678]
								}, {
									"case":	101,
									"scores":	[-4.982766493256678]
								}, {
									"case":	102,
									"scores":	[-4.982766493256678]
								}, {
									"case":	103,
									"scores":	[-4.982766493256678]
								}, {
									"case":	104,
									"scores":	[-4.982766493256678]
								}, {
									"case":	105,
									"scores":	[-4.982766493256678]
								}, {
									"case":	106,
									"scores":	[-4.982766493256678]
								}, {
									"case":	107,
									"scores":	[-4.982766493256678]
								}, {
									"case":	108,
									"scores":	[-4.982766493256678]
								}, {
									"case":	109,
									"scores":	[-4.982766493256678]
								}, {
									"case":	110,
									"scores":	[-4.982766493256678]
								}, {
									"case":	111,
									"scores":	[-4.982766493256678]
								}, {
									"case":	112,
									"scores":	[-4.982766493256678]
								}, {
									"case":	113,
									"scores":	[-4.982766493256678]
								}, {
									"case":	114,
									"scores":	[-4.982766493256678]
								}, {
									"case":	115,
									"scores":	[-4.982766493256678]
								}, {
									"case":	116,
									"scores":	[-4.982766493256678]
								}, {
									"case":	117,
									"scores":	[-4.982766493256678]
								}, {
									"case":	118,
									"scores":	[-4.982766493256678]
								}, {
									"case":	119,
									"scores":	[-4.982766493256678]
								}, {
									"case":	120,
									"scores":	[-4.982766493256678]
								}, {
									"case":	121,
									"scores":	[-4.982766493256678]
								}, {
									"case":	122,
									"scores":	[-4.982766493256678]
								}, {
									"case":	123,
									"scores":	[-4.982766493256678]
								}, {
									"case":	124,
									"scores":	[-4.982766493256678]
								}, {
									"case":	125,
									"scores":	[-4.982766493256678]
								}, {
									"case":	126,
									"scores":	[-4.982766493256678]
								}, {
									"case":	127,
									"scores":	[-4.982766493256678]
								}, {
									"case":	128,
									"scores":	[-4.982766493256678]
								}, {
									"case":	129,
									"scores":	[-4.982766493256678]
								}, {
									"case":	130,
									"scores":	[-4.982766493256678]
								}, {
									"case":	131,
									"scores":	[-4.982766493256678]
								}, {
									"case":	132,
									"scores":	[-4.982766493256678]
								}, {
									"case":	133,
									"scores":	[-4.982766493256678]
								}, {
									"case":	134,
									"scores":	[-4.982766493256678]
								}, {
									"case":	135,
									"scores":	[-4.982766493256678]
								}, {
									"case":	136,
									"scores":	[-4.982766493256678]
								}, {
									"case":	137,
									"scores":	[-4.982766493256678]
								}, {
									"case":	138,
									"scores":	[-4.982766493256678]
								}, {
									"case":	139,
									"scores":	[-4.982766493256678]
								}, {
									"case":	140,
									"scores":	[-4.982766493256678]
								}, {
									"case":	141,
									"scores":	[-4.982766493256678]
								}, {
									"case":	142,
									"scores":	[-4.982766493256678]
								}, {
									"case":	143,
									"scores":	[-4.982766493256678]
								}, {
									"case":	144,
									"scores":	[-4.982766493256678]
								}, {
									"case":	145,
									"scores":	[-4.982766493256678]
								}, {
									"case":	146,
									"scores":	[-4.982766493256678]
								}, {
									"case":	147,
									"scores":	[-4.982766493256678]
								}, {
									"case":	148,
									"scores":	[-4.982766493256678]
								}, {
									"case":	149,
									"scores":	[-4.982766493256678]
								}, {
									"case":	150,
									"scores":	[-4.982766493256678]
								}, {
									"case":	151,
									"scores":	[-4.982766493256678]
								}, {
									"case":	152,
									"scores":	[-4.982766493256678]
								}, {
									"case":	153,
									"scores":	[-4.982766493256678]
								}, {
									"case":	154,
									"scores":	[-4.982766493256678]
								}, {
									"case":	155,
									"scores":	[-4.982766493256678]
								}, {
									"case":	156,
									"scores":	[-4.982766493256678]
								}, {
									"case":	157,
									"scores":	[-4.982766493256678]
								}, {
									"case":	158,
									"scores":	[-4.982766493256678]
								}, {
									"case":	159,
									"scores":	[-4.982766493256678]
								}, {
									"case":	160,
									"scores":	[-4.982766493256678]
								}, {
									"case":	161,
									"scores":	[-4.982766493256678]
								}, {
									"case":	162,
									"scores":	[-4.982766493256678]
								}, {
									"case":	163,
									"scores":	[-4.982766493256678]
								}, {
									"case":	164,
									"scores":	[-4.982766493256678]
								}, {
									"case":	165,
									"scores":	[-4.982766493256678]
								}, {
									"case":	166,
									"scores":	[-4.982766493256678]
								}, {
									"case":	167,
									"scores":	[-4.982766493256678]
								}, {
									"case":	168,
									"scores":	[-4.982766493256678]
								}, {
									"case":	169,
									"scores":	[-4.982766493256678]
								}, {
									"case":	170,
									"scores":	[-4.982766493256678]
								}, {
									"case":	171,
									"scores":	[-4.982766493256678]
								}, {
									"case":	172,
									"scores":	[-4.982766493256678]
								}, {
									"case":	173,
									"scores":	[-4.982766493256678]
								}, {
									"case":	174,
									"scores":	[-4.982766493256678]
								}, {
									"case":	175,
									"scores":	[-4.982766493256678]
								}, {
									"case":	176,
									"scores":	[-4.982766493256678]
								}, {
									"case":	177,
									"scores":	[-4.982766493256678]
								}, {
									"case":	178,
									"scores":	[-4.982766493256678]
								}, {
									"case":	179,
									"scores":	[-4.982766493256678]
								}, {
									"case":	180,
									"scores":	[-4.982766493256678]
								}, {
									"case":	181,
									"scores":	[-4.982766493256678]
								}, {
									"case":	182,
									"scores":	[-4.982766493256678]
								}, {
									"case":	183,
									"scores":	[-4.982766493256678]
								}, {
									"case":	184,
									"scores":	[-4.982766493256678]
								}, {
									"case":	185,
									"scores":	[-4.982766493256678]
								}, {
									"case":	186,
									"scores":	[-4.982766493256678]
								}, {
									"case":	187,
									"scores":	[-4.982766493256678]
								}, {
									"case":	188,
									"scores":	[-4.982766493256678]
								}, {
									"case":	189,
									"scores":	[-4.982766493256678]
								}, {
									"case":	190,
									"scores":	[-4.982766493256678]
								}, {
									"case":	191,
									"scores":	[-4.982766493256678]
								}, {
									"case":	192,
									"scores":	[-4.982766493256678]
								}, {
									"case":	193,
									"scores":	[-4.982766493256678]
								}, {
									"case":	194,
									"scores":	[-4.982766493256678]
								}, {
									"case":	195,
									"scores":	[-4.982766493256678]
								}, {
									"case":	196,
									"scores":	[-4.982766493256678]
								}, {
									"case":	197,
									"scores":	[-4.982766493256678]
								}, {
									"case":	198,
									"scores":	[-4.982766493256678]
								}, {
									"case":	199,
									"scores":	[-4.982766493256678]
								}, {
									"case":	200,
									"scores":	[-4.982766493256678]
								}, {
									"case":	201,
									"scores":	[-4.982766493256678]
								}, {
									"case":	202,
									"scores":	[-4.982766493256678]
								}, {
									"case":	203,
									"scores":	[-4.982766493256678]
								}, {
									"case":	204,
									"scores":	[-4.982766493256678]
								}, {
									"case":	205,
									"scores":	[-4.982766493256678]
								}, {
									"case":	206,
									"scores":	[-4.982766493256678]
								}, {
									"case":	207,
									"scores":	[-4.982766493256678]
								}, {
									"case":	208,
									"scores":	[-4.982766493256678]
								}, {
									"case":	209,
									"scores":	[-4.982766493256678]
								}, {
									"case":	210,
									"scores":	[-4.982766493256678]
								}, {
									"case":	211,
									"scores":	[-4.982766493256678]
								}, {
									"case":	212,
									"scores":	[-4.982766493256678]
								}, {
									"case":	213,
									"scores":	[-4.982766493256678]
								}, {
									"case":	214,
									"scores":	[-4.982766493256678]
								}, {
									"case":	215,
									"scores":	[-4.982766493256678]
								}, {
									"case":	216,
									"scores":	[-4.982766493256678]
								}, {
									"case":	217,
									"scores":	[-4.982766493256678]
								}, {
									"case":	218,
									"scores":	[-4.982766493256678]
								}, {
									"case":	219,
									"scores":	[-4.982766493256678]
								}, {
									"case":	220,
									"scores":	[-4.982766493256678]
								}, {
									"case":	221,
									"scores":	[-4.982766493256678]
								}, {
									"case":	222,
									"scores":	[-4.982766493256678]
								}, {
									"case":	223,
									"scores":	[-4.982766493256678]
								}, {
									"case":	224,
									"scores":	[-4.982766493256678]
								}, {
									"case":	225,
									"scores":	[-4.982766493256678]
								}, {
									"case":	226,
									"scores":	[-4.982766493256678]
								}, {
									"case":	227,
									"scores":	[-4.982766493256678]
								}, {
									"case":	228,
									"scores":	[-4.982766493256678]
								}, {
									"case":	229,
									"scores":	[-4.982766493256678]
								}, {
									"case":	230,
									"scores":	[-4.982766493256678]
								}, {
									"case":	231,
									"scores":	[-4.982766493256678]
								}, {
									"case":	232,
									"scores":	[-4.982766493256678]
								}, {
									"case":	233,
									"scores":	[-4.982766493256678]
								}, {
									"case":	234,
									"scores":	[-4.982766493256678]
								}, {
									"case":	235,
									"scores":	[-4.982766493256678]
								}, {
									"case":	236,
									"scores":	[-4.982766493256678]
								}, {
									"case":	237,
									"scores":	[-4.982766493256678]
								}, {
									"case":	238,
									"scores":	[-4.982766493256678]
								}, {
									"case":	239,
									"scores":	[-4.982766493256678]
								}, {
									"case":	240,
									"scores":	[-4.982766493256678]
								}, {
									"case":	241,
									"scores":	[-4.982766493256678]
								}, {
									"case":	242,
									"scores":	[-4.982766493256678]
								}, {
									"case":	243,
									"scores":	[-4.982766493256678]
								}, {
									"case":	244,
									"scores":	[-4.982766493256678]
								}, {
									"case":	245,
									"scores":	[-4.982766493256678]
								}, {
									"case":	246,
									"scores":	[-4.982766493256678]
								}, {
									"case":	247,
									"scores":	[-4.982766493256678]
								}, {
									"case":	248,
									"scores":	[-4.982766493256678]
								}, {
									"case":	249,
									"scores":	[-4.982766493256678]
								}, {
									"case":	250,
									"scores":	[-4.982766493256678]
								}, {
									"case":	251,
									"scores":	[-4.982766493256678]
								}, {
									"case":	252,
									"scores":	[-4.982766493256678]
								}, {
									"case":	253,
									"scores":	[-4.982766493256678]
								}, {
									"case":	254,
									"scores":	[-4.982766493256678]
								}, {
									"case":	255,
									"scores":	[-4.982766493256678]
								}, {
									"case":	256,
									"scores":	[-4.982766493256678]
								}, {
									"case":	257,
									"scores":	[-4.982766493256678]
								}, {
									"case":	258,
									"scores":	[-4.982766493256678]
								}, {
									"case":	259,
									"scores":	[-4.982766493256678]
								}, {
									"case":	260,
									"scores":	[-4.982766493256678]
								}, {
									"case":	261,
									"scores":	[-4.982766493256678]
								}, {
									"case":	262,
									"scores":	[-4.982766493256678]
								}, {
									"case":	263,
									"scores":	[-4.982766493256678]
								}, {
									"case":	264,
									"scores":	[-4.982766493256678]
								}, {
									"case":	265,
									"scores":	[-4.982766493256678]
								}, {
									"case":	266,
									"scores":	[-4.982766493256678]
								}, {
									"case":	267,
									"scores":	[-4.982766493256678]
								}, {
									"case":	268,
									"scores":	[-4.982766493256678]
								}, {
									"case":	269,
									"scores":	[-4.982766493256678]
								}, {
									"case":	270,
									"scores":	[-4.982766493256678]
								}, {
									"case":	271,
									"scores":	[-4.982766493256678]
								}, {
									"case":	272,
									"scores":	[-4.982766493256678]
								}, {
									"case":	273,
									"scores":	[-4.982766493256678]
								}, {
									"case":	274,
									"scores":	[-4.982766493256678]
								}, {
									"case":	275,
									"scores":	[-4.982766493256678]
								}, {
									"case":	276,
									"scores":	[-4.982766493256678]
								}, {
									"case":	277,
									"scores":	[-4.982766493256678]
								}, {
									"case":	278,
									"scores":	[-4.982766493256678]
								}, {
									"case":	279,
									"scores":	[-4.982766493256678]
								}, {
									"case":	280,
									"scores":	[-4.982766493256678]
								}, {
									"case":	281,
									"scores":	[-4.982766493256678]
								}, {
									"case":	282,
									"scores":	[-4.982766493256678]
								}, {
									"case":	283,
									"scores":	[-4.982766493256678]
								}, {
									"case":	284,
									"scores":	[-4.982766493256678]
								}, {
									"case":	285,
									"scores":	[-4.982766493256678]
								}, {
									"case":	286,
									"scores":	[-4.982766493256678]
								}, {
									"case":	287,
									"scores":	[-4.982766493256678]
								}, {
									"case":	288,
									"scores":	[-4.982766493256678]
								}, {
									"case":	289,
									"scores":	[-4.982766493256678]
								}, {
									"case":	290,
									"scores":	[-4.982766493256678]
								}, {
									"case":	291,
									"scores":	[-4.982766493256678]
								}, {
									"case":	292,
									"scores":	[-4.982766493256678]
								}, {
									"case":	293,
									"scores":	[-4.982766493256678]
								}, {
									"case":	294,
									"scores":	[-4.982766493256678]
								}, {
									"case":	295,
									"scores":	[-4.982766493256678]
								}, {
									"case":	296,
									"scores":	[-4.982766493256678]
								}, {
									"case":	297,
									"scores":	[-4.982766493256678]
								}, {
									"case":	298,
									"scores":	[-4.982766493256678]
								}, {
									"case":	299,
									"scores":	[-4.982766493256678]
								}, {
									"case":	300,
									"scores":	[-4.982766493256678]
								}, {
									"case":	301,
									"scores":	[-4.982766493256678]
								}, {
									"case":	302,
									"scores":	[-4.982766493256678]
								}, {
									"case":	303,
									"scores":	[-4.982766493256678]
								}, {
									"case":	304,
									"scores":	[-4.982766493256678]
								}, {
									"case":	305,
									"scores":	[-4.982766493256678]
								}, {
									"case":	306,
									"scores":	[-4.982766493256678]
								}, {
									"case":	307,
									"scores":	[-4.982766493256678]
								}, {
									"case":	308,
									"scores":	[-4.982766493256678]
								}, {
									"case":	309,
									"scores":	[-4.982766493256678]
								}, {
									"case":	310,
									"scores":	[-4.982766493256678]
								}, {
									"case":	311,
									"scores":	[-4.982766493256678]
								}, {
									"case":	312,
									"scores":	[-4.982766493256678]
								}, {
									"case":	313,
									"scores":	[-4.982766493256678]
								}, {
									"case":	314,
									"scores":	[-4.982766493256678]
								}, {
									"case":	315,
									"scores":	[-4.982766493256678]
								}, {
									"case":	316,
									"scores":	[-4.982766493256678]
								}, {
									"case":	317,
									"scores":	[-4.982766493256678]
								}, {
									"case":	318,
									"scores":	[-4.982766493256678]
								}, {
									"case":	319,
									"scores":	[-4.982766493256678]
								}, {
									"case":	320,
									"scores":	[-4.982766493256678]
								}, {
									"case":	321,
									"scores":	[-4.982766493256678]
								}, {
									"case":	322,
									"scores":	[-4.982766493256678]
								}, {
									"case":	323,
									"scores":	[-4.982766493256678]
								}, {
									"case":	324,
									"scores":	[-4.982766493256678]
								}, {
									"case":	325,
									"scores":	[-4.982766493256678]
								}, {
									"case":	326,
									"scores":	[-4.982766493256678]
								}, {
									"case":	327,
									"scores":	[-4.982766493256678]
								}, {
									"case":	328,
									"scores":	[-4.982766493256678]
								}, {
									"case":	329,
									"scores":	[-4.982766493256678]
								}, {
									"case":	330,
									"scores":	[-4.982766493256678]
								}, {
									"case":	331,
									"scores":	[-4.982766493256678]
								}, {
									"case":	332,
									"scores":	[-4.982766493256678]
								}, {
									"case":	333,
									"scores":	[-4.982766493256678]
								}, {
									"case":	334,
									"scores":	[-4.982766493256678]
								}, {
									"case":	335,
									"scores":	[-4.982766493256678]
								}, {
									"case":	336,
									"scores":	[-4.982766493256678]
								}, {
									"case":	337,
									"scores":	[-4.982766493256678]
								}, {
									"case":	338,
									"scores":	[-4.982766493256678]
								}, {
									"case":	339,
									"scores":	[-4.982766493256678]
								}, {
									"case":	340,
									"scores":	[-4.982766493256678]
								}, {
									"case":	341,
									"scores":	[-4.982766493256678]
								}, {
									"case":	342,
									"scores":	[-4.982766493256678]
								}, {
									"case":	343,
									"scores":	[-4.982766493256678]
								}, {
									"case":	344,
									"scores":	[-4.982766493256678]
								}, {
									"case":	345,
									"scores":	[-4.982766493256678]
								}, {
									"case":	346,
									"scores":	[-4.982766493256678]
								}, {
									"case":	347,
									"scores":	[-4.982766493256678]
								}, {
									"case":	348,
									"scores":	[-4.982766493256678]
								}, {
									"case":	349,
									"scores":	[-4.982766493256678]
								}, {
									"case":	350,
									"scores":	[-4.982766493256678]
								}, {
									"case":	351,
									"scores":	[-4.982766493256678]
								}, {
									"case":	352,
									"scores":	[-4.982766493256678]
								}, {
									"case":	353,
									"scores":	[-4.982766493256678]
								}, {
									"case":	354,
									"scores":	[-4.982766493256678]
								}, {
									"case":	355,
									"scores":	[-4.982766493256678]
								}, {
									"case":	356,
									"scores":	[-4.982766493256678]
								}, {
									"case":	357,
									"scores":	[-4.982766493256678]
								}, {
									"case":	358,
									"scores":	[-4.982766493256678]
								}, {
									"case":	359,
									"scores":	[-4.982766493256678]
								}, {
									"case":	360,
									"scores":	[-4.982766493256678]
								}, {
									"case":	361,
									"scores":	[-4.982766493256678]
								}, {
									"case":	362,
									"scores":	[-4.982766493256678]
								}, {
									"case":	363,
									"scores":	[-4.982766493256678]
								}, {
									"case":	364,
									"scores":	[-4.982766493256678]
								}, {
									"case":	365,
									"scores":	[-4.982766493256678]
								}, {
									"case":	366,
									"scores":	[-4.982766493256678]
								}, {
									"case":	367,
									"scores":	[-4.982766493256678]
								}, {
									"case":	368,
									"scores":	[-4.982766493256678]
								}, {
									"case":	369,
									"scores":	[-4.982766493256678]
								}, {
									"case":	370,
									"scores":	[-4.982766493256678]
								}, {
									"case":	371,
									"scores":	[-4.982766493256678]
								}, {
									"case":	372,
									"scores":	[-4.982766493256678]
								}, {
									"case":	373,
									"scores":	[-4.982766493256678]
								}, {
									"case":	374,
									"scores":	[-4.982766493256678]
								}, {
									"case":	375,
									"scores":	[-4.982766493256678]
								}, {
									"case":	376,
									"scores":	[-4.982766493256678]
								}, {
									"case":	377,
									"scores":	[-4.982766493256678]
								}, {
									"case":	378,
									"scores":	[-4.982766493256678]
								}, {
									"case":	379,
									"scores":	[-4.982766493256678]
								}, {
									"case":	380,
									"scores":	[-4.982766493256678]
								}, {
									"case":	381,
									"scores":	[-4.982766493256678]
								}, {
									"case":	382,
									"scores":	[-4.982766493256678]
								}, {
									"case":	383,
									"scores":	[-4.982766493256678]
								}, {
									"case":	384,
									"scores":	[-4.982766493256678]
								}, {
									"case":	385,
									"scores":	[-4.982766493256678]
								}, {
									"case":	386,
									"scores":	[-4.982766493256678]
								}, {
									"case":	387,
									"scores":	[-4.982766493256678]
								}, {
									"case":	388,
									"scores":	[-4.982766493256678]
								}, {
									"case":	389,
									"scores":	[-4.982766493256678]
								}, {
									"case":	390,
									"scores":	[-4.982766493256678]
								}, {
									"case":	391,
									"scores":	[-4.982766493256678]
								}, {
									"case":	392,
									"scores":	[-4.982766493256678]
								}, {
									"case":	393,
									"scores":	[-4.982766493256678]
								}, {
									"case":	394,
									"scores":	[-4.982766493256678]
								}, {
									"case":	395,
									"scores":	[-4.982766493256678]
								}, {
									"case":	396,
									"scores":	[-4.982766493256678]
								}, {
									"case":	397,
									"scores":	[-4.982766493256678]
								}, {
									"case":	398,
									"scores":	[-4.982766493256678]
								}, {
									"case":	399,
									"scores":	[-4.982766493256678]
								}, {
									"case":	400,
									"scores":	[-4.982766493256678]
								}, {
									"case":	401,
									"scores":	[-4.982766493256678]
								}, {
									"case":	402,
									"scores":	[-4.982766493256678]
								}, {
									"case":	403,
									"scores":	[-4.982766493256678]
								}, {
									"case":	404,
									"scores":	[-4.982766493256678]
								}, {
									"case":	405,
									"scores":	[-4.982766493256678]
								}, {
									"case":	406,
									"scores":	[-4.982766493256678]
								}, {
									"case":	407,
									"scores":	[-4.982766493256678]
								}, {
									"case":	408,
									"scores":	[-4.982766493256678]
								}, {
									"case":	409,
									"scores":	[-4.982766493256678]
								}, {
									"case":	410,
									"scores":	[-4.982766493256678]
								}, {
									"case":	411,
									"scores":	[-4.982766493256678]
								}, {
									"case":	412,
									"scores":	[-4.982766493256678]
								}, {
									"case":	413,
									"scores":	[-4.982766493256678]
								}, {
									"case":	414,
									"scores":	[-4.982766493256678]
								}, {
									"case":	415,
									"scores":	[-4.982766493256678]
								}, {
									"case":	416,
									"scores":	[-4.982766493256678]
								}, {
									"case":	417,
									"scores":	[-4.982766493256678]
								}, {
									"case":	418,
									"scores":	[-4.982766493256678]
								}, {
									"case":	419,
									"scores":	[-4.982766493256678]
								}, {
									"case":	420,
									"scores":	[-4.982766493256678]
								}, {
									"case":	421,
									"scores":	[-4.982766493256678]
								}, {
									"case":	422,
									"scores":	[-4.982766493256678]
								}, {
									"case":	423,
									"scores":	[-4.982766493256678]
								}, {
									"case":	424,
									"scores":	[-4.982766493256678]
								}, {
									"case":	425,
									"scores":	[-4.982766493256678]
								}, {
									"case":	426,
									"scores":	[-4.982766493256678]
								}, {
									"case":	427,
									"scores":	[-4.982766493256678]
								}, {
									"case":	428,
									"scores":	[-4.982766493256678]
								}, {
									"case":	429,
									"scores":	[-4.982766493256678]
								}, {
									"case":	430,
									"scores":	[-4.982766493256678]
								}, {
									"case":	431,
									"scores":	[-4.982766493256678]
								}, {
									"case":	432,
									"scores":	[-4.982766493256678]
								}, {
									"case":	433,
									"scores":	[-4.982766493256678]
								}, {
									"case":	434,
									"scores":	[-4.982766493256678]
								}, {
									"case":	435,
									"scores":	[-4.982766493256678]
								}, {
									"case":	436,
									"scores":	[-4.982766493256678]
								}, {
									"case":	437,
									"scores":	[-4.982766493256678]
								}, {
									"case":	438,
									"scores":	[-4.982766493256678]
								}, {
									"case":	439,
									"scores":	[-4.982766493256678]
								}, {
									"case":	440,
									"scores":	[-4.982766493256678]
								}, {
									"case":	441,
									"scores":	[-4.982766493256678]
								}, {
									"case":	442,
									"scores":	[-4.982766493256678]
								}, {
									"case":	443,
									"scores":	[-4.982766493256678]
								}, {
									"case":	444,
									"scores":	[-4.982766493256678]
								}, {
									"case":	445,
									"scores":	[-4.982766493256678]
								}, {
									"case":	446,
									"scores":	[-4.982766493256678]
								}, {
									"case":	447,
									"scores":	[-4.982766493256678]
								}, {
									"case":	448,
									"scores":	[-4.982766493256678]
								}, {
									"case":	449,
									"scores":	[-4.982766493256678]
								}, {
									"case":	450,
									"scores":	[-4.982766493256678]
								}, {
									"case":	451,
									"scores":	[-4.982766493256678]
								}, {
									"case":	452,
									"scores":	[-4.982766493256678]
								}, {
									"case":	453,
									"scores":	[-4.982766493256678]
								}, {
									"case":	454,
									"scores":	[-4.982766493256678]
								}, {
									"case":	455,
									"scores":	[-4.982766493256678]
								}, {
									"case":	456,
									"scores":	[-4.982766493256678]
								}, {
									"case":	457,
									"scores":	[-4.982766493256678]
								}, {
									"case":	458,
									"scores":	[-4.982766493256678]
								}, {
									"case":	459,
									"scores":	[-4.982766493256678]
								}, {
									"case":	460,
									"scores":	[-4.982766493256678]
								}, {
									"case":	461,
									"scores":	[-4.982766493256678]
								}, {
									"case":	462,
									"scores":	[-4.982766493256678]
								}, {
									"case":	463,
									"scores":	[-4.982766493256678]
								}, {
									"case":	464,
									"scores":	[-4.982766493256678]
								}, {
									"case":	465,
									"scores":	[-4.982766493256678]
								}, {
									"case":	466,
									"scores":	[-4.982766493256678]
								}, {
									"case":	467,
									"scores":	[-4.982766493256678]
								}, {
									"case":	468,
									"scores":	[-4.982766493256678]
								}, {
									"case":	469,
									"scores":	[-4.982766493256678]
								}, {
									"case":	470,
									"scores":	[-4.982766493256678]
								}, {
									"case":	471,
									"scores":	[-4.982766493256678]
								}, {
									"case":	472,
									"scores":	[-4.982766493256678]
								}, {
									"case":	473,
									"scores":	[-4.982766493256678]
								}, {
									"case":	474,
									"scores":	[-4.982766493256678]
								}, {
									"case":	475,
									"scores":	[-4.982766493256678]
								}, {
									"case":	476,
									"scores":	[-4.982766493256678]
								}, {
									"case":	477,
									"scores":	[-4.982766493256678]
								}, {
									"case":	478,
									"scores":	[-4.982766493256678]
								}, {
									"case":	479,
									"scores":	[-4.982766493256678]
								}, {
									"case":	480,
									"scores":	[-4.982766493256678]
								}, {
									"case":	481,
									"scores":	[-4.982766493256678]
								}, {
									"case":	482,
									"scores":	[-4.982766493256678]
								}, {
									"case":	483,
									"scores":	[-4.982766493256678]
								}, {
									"case":	484,
									"scores":	[-4.982766493256678]
								}, {
									"case":	485,
									"scores":	[-4.982766493256678]
								}, {
									"case":	486,
									"scores":	[-4.982766493256678]
								}, {
									"case":	487,
									"scores":	[-4.982766493256678]
								}, {
									"case":	488,
									"scores":	[-4.982766493256678]
								}, {
									"case":	489,
									"scores":	[-4.982766493256678]
								}, {
									"case":	490,
									"scores":	[-4.982766493256678]
								}, {
									"case":	491,
									"scores":	[-4.982766493256678]
								}, {
									"case":	492,
									"scores":	[-4.982766493256678]
								}, {
									"case":	493,
									"scores":	[-4.982766493256678]
								}, {
									"case":	494,
									"scores":	[-4.982766493256678]
								}, {
									"case":	495,
									"scores":	[-4.982766493256678]
								}, {
									"case":	496,
									"scores":	[-4.982766493256678]
								}, {
									"case":	497,
									"scores":	[-4.982766493256678]
								}, {
									"case":	498,
									"scores":	[-4.982766493256678]
								}, {
									"case":	499,
									"scores":	[-4.982766493256678]
								}, {
									"case":	500,
									"scores":	[-4.982766493256678]
								}, {
									"case":	501,
									"scores":	[-4.982766493256678]
								}, {
									"case":	502,
									"scores":	[-4.982766493256678]
								}, {
									"case":	503,
									"scores":	[-4.982766493256678]
								}, {
									"case":	504,
									"scores":	[-4.982766493256678]
								}, {
									"case":	505,
									"scores":	[-4.982766493256678]
								}, {
									"case":	506,
									"scores":	[-4.982766493256678]
								}, {
									"case":	507,
									"scores":	[-4.982766493256678]
								}, {
									"case":	508,
									"scores":	[-4.982766493256678]
								}, {
									"case":	509,
									"scores":	[-4.982766493256678]
								}, {
									"case":	510,
									"scores":	[-4.982766493256678]
								}, {
									"case":	511,
									"scores":	[-4.982766493256678]
								}, {
									"case":	512,
									"scores":	[-4.982766493256678]
								}, {
									"case":	513,
									"scores":	[-4.982766493256678]
								}, {
									"case":	514,
									"scores":	[-4.982766493256678]
								}, {
									"case":	515,
									"scores":	[-4.982766493256678]
								}, {
									"case":	516,
									"scores":	[-4.982766493256678]
								}, {
									"case":	517,
									"scores":	[-4.982766493256678]
								}, {
									"case":	518,
									"scores":	[-4.982766493256678]
								}, {
									"case":	519,
									"scores":	[-4.982766493256678]
								}, {
									"case":	520,
									"scores":	[-4.982766493256678]
								}, {
									"case":	521,
									"scores":	[-4.982766493256678]
								}, {
									"case":	522,
									"scores":	[-4.982766493256678]
								}, {
									"case":	523,
									"scores":	[-4.982766493256678]
								}, {
									"case":	524,
									"scores":	[-4.982766493256678]
								}, {
									"case":	525,
									"scores":	[-4.982766493256678]
								}, {
									"case":	526,
									"scores":	[-4.982766493256678]
								}, {
									"case":	527,
									"scores":	[-4.982766493256678]
								}, {
									"case":	528,
									"scores":	[-4.982766493256678]
								}, {
									"case":	529,
									"scores":	[-4.982766493256678]
								}, {
									"case":	530,
									"scores":	[-4.982766493256678]
								}, {
									"case":	531,
									"scores":	[-4.982766493256678]
								}, {
									"case":	532,
									"scores":	[-4.982766493256678]
								}, {
									"case":	533,
									"scores":	[-4.982766493256678]
								}, {
									"case":	534,
									"scores":	[-4.982766493256678]
								}, {
									"case":	535,
									"scores":	[-4.982766493256678]
								}, {
									"case":	536,
									"scores":	[-4.982766493256678]
								}, {
									"case":	537,
									"scores":	[-4.982766493256678]
								}, {
									"case":	538,
									"scores":	[-4.982766493256678]
								}, {
									"case":	539,
									"scores":	[-4.982766493256678]
								}, {
									"case":	540,
									"scores":	[-4.982766493256678]
								}, {
									"case":	541,
									"scores":	[-4.982766493256678]
								}, {
									"case":	542,
									"scores":	[-4.982766493256678]
								}, {
									"case":	543,
									"scores":	[-4.982766493256678]
								}, {
									"case":	544,
									"scores":	[-4.982766493256678]
								}, {
									"case":	545,
									"scores":	[-4.982766493256678]
								}, {
									"case":	546,
									"scores":	[-4.982766493256678]
								}, {
									"case":	547,
									"scores":	[-4.982766493256678]
								}, {
									"case":	548,
									"scores":	[-4.982766493256678]
								}, {
									"case":	549,
									"scores":	[-4.982766493256678]
								}, {
									"case":	550,
									"scores":	[-4.982766493256678]
								}, {
									"case":	551,
									"scores":	[-4.982766493256678]
								}, {
									"case":	552,
									"scores":	[-4.982766493256678]
								}, {
									"case":	553,
									"scores":	[-4.982766493256678]
								}, {
									"case":	554,
									"scores":	[-4.982766493256678]
								}, {
									"case":	555,
									"scores":	[-4.982766493256678]
								}, {
									"case":	556,
									"scores":	[-4.982766493256678]
								}, {
									"case":	557,
									"scores":	[-4.982766493256678]
								}, {
									"case":	558,
									"scores":	[-4.982766493256678]
								}, {
									"case":	559,
									"scores":	[-4.982766493256678]
								}, {
									"case":	560,
									"scores":	[-4.982766493256678]
								}, {
									"case":	561,
									"scores":	[-4.982766493256678]
								}, {
									"case":	562,
									"scores":	[-4.982766493256678]
								}, {
									"case":	563,
									"scores":	[-4.982766493256678]
								}, {
									"case":	564,
									"scores":	[-4.982766493256678]
								}, {
									"case":	565,
									"scores":	[-4.982766493256678]
								}, {
									"case":	566,
									"scores":	[-4.982766493256678]
								}, {
									"case":	567,
									"scores":	[-4.982766493256678]
								}, {
									"case":	568,
									"scores":	[-4.982766493256678]
								}, {
									"case":	569,
									"scores":	[-4.982766493256678]
								}, {
									"case":	570,
									"scores":	[-4.982766493256678]
								}, {
									"case":	571,
									"scores":	[-4.982766493256678]
								}, {
									"case":	572,
									"scores":	[-4.982766493256678]
								}, {
									"case":	573,
									"scores":	[-4.982766493256678]
								}, {
									"case":	574,
									"scores":	[-4.982766493256678]
								}, {
									"case":	575,
									"scores":	[-4.982766493256678]
								}, {
									"case":	576,
									"scores":	[-4.982766493256678]
								}, {
									"case":	577,
									"scores":	[-4.982766493256678]
								}, {
									"case":	578,
									"scores":	[-4.982766493256678]
								}, {
									"case":	579,
									"scores":	[-4.982766493256678]
								}, {
									"case":	580,
									"scores":	[-4.982766493256678]
								}, {
									"case":	581,
									"scores":	[-4.982766493256678]
								}, {
									"case":	582,
									"scores":	[-4.982766493256678]
								}, {
									"case":	583,
									"scores":	[-4.982766493256678]
								}, {
									"case":	584,
									"scores":	[-4.982766493256678]
								}, {
									"case":	585,
									"scores":	[-4.982766493256678]
								}, {
									"case":	586,
									"scores":	[-4.982766493256678]
								}, {
									"case":	587,
									"scores":	[-4.982766493256678]
								}, {
									"case":	588,
									"scores":	[-4.982766493256678]
								}, {
									"case":	589,
									"scores":	[-4.982766493256678]
								}, {
									"case":	590,
									"scores":	[-4.982766493256678]
								}, {
									"case":	591,
									"scores":	[-4.982766493256678]
								}, {
									"case":	592,
									"scores":	[-4.982766493256678]
								}, {
									"case":	593,
									"scores":	[-4.982766493256678]
								}, {
									"case":	594,
									"scores":	[-4.982766493256678]
								}, {
									"case":	595,
									"scores":	[-4.982766493256678]
								}, {
									"case":	596,
									"scores":	[-4.982766493256678]
								}, {
									"case":	597,
									"scores":	[-4.982766493256678]
								}, {
									"case":	598,
									"scores":	[-4.982766493256678]
								}, {
									"case":	599,
									"scores":	[-4.982766493256678]
								}, {
									"case":	600,
									"scores":	[-4.982766493256678]
								}, {
									"case":	601,
									"scores":	[-4.982766493256678]
								}, {
									"case":	602,
									"scores":	[-4.982766493256678]
								}, {
									"case":	603,
									"scores":	[-4.982766493256678]
								}, {
									"case":	604,
									"scores":	[-4.982766493256678]
								}, {
									"case":	605,
									"scores":	[-4.982766493256678]
								}, {
									"case":	606,
									"scores":	[-4.982766493256678]
								}, {
									"case":	607,
									"scores":	[-4.982766493256678]
								}, {
									"case":	608,
									"scores":	[-4.982766493256678]
								}, {
									"case":	609,
									"scores":	[-4.982766493256678]
								}, {
									"case":	610,
									"scores":	[-4.982766493256678]
								}, {
									"case":	611,
									"scores":	[-4.982766493256678]
								}, {
									"case":	612,
									"scores":	[-4.982766493256678]
								}, {
									"case":	613,
									"scores":	[-4.982766493256678]
								}, {
									"case":	614,
									"scores":	[-4.982766493256678]
								}, {
									"case":	615,
									"scores":	[-4.982766493256678]
								}, {
									"case":	616,
									"scores":	[-4.982766493256678]
								}, {
									"case":	617,
									"scores":	[-4.982766493256678]
								}, {
									"case":	618,
									"scores":	[-4.982766493256678]
								}, {
									"case":	619,
									"scores":	[-4.982766493256678]
								}, {
									"case":	620,
									"scores":	[-4.982766493256678]
								}, {
									"case":	621,
									"scores":	[-4.982766493256678]
								}, {
									"case":	622,
									"scores":	[-4.982766493256678]
								}, {
									"case":	623,
									"scores":	[-4.982766493256678]
								}, {
									"case":	624,
									"scores":	[-4.982766493256678]
								}, {
									"case":	625,
									"scores":	[-4.982766493256678]
								}, {
									"case":	626,
									"scores":	[-4.982766493256678]
								}, {
									"case":	627,
									"scores":	[-4.982766493256678]
								}, {
									"case":	628,
									"scores":	[-4.982766493256678]
								}, {
									"case":	629,
									"scores":	[-4.982766493256678]
								}, {
									"case":	630,
									"scores":	[-4.982766493256678]
								}, {
									"case":	631,
									"scores":	[-4.982766493256678]
								}, {
									"case":	632,
									"scores":	[-4.982766493256678]
								}, {
									"case":	633,
									"scores":	[-4.982766493256678]
								}, {
									"case":	634,
									"scores":	[-4.982766493256678]
								}, {
									"case":	635,
									"scores":	[-4.982766493256678]
								}, {
									"case":	636,
									"scores":	[-4.982766493256678]
								}, {
									"case":	637,
									"scores":	[-4.982766493256678]
								}, {
									"case":	638,
									"scores":	[-4.982766493256678]
								}, {
									"case":	639,
									"scores":	[-4.982766493256678]
								}, {
									"case":	640,
									"scores":	[-4.982766493256678]
								}, {
									"case":	641,
									"scores":	[-4.982766493256678]
								}, {
									"case":	642,
									"scores":	[-4.982766493256678]
								}, {
									"case":	643,
									"scores":	[-4.982766493256678]
								}, {
									"case":	644,
									"scores":	[-4.982766493256678]
								}, {
									"case":	645,
									"scores":	[-4.982766493256678]
								}, {
									"case":	646,
									"scores":	[-4.982766493256678]
								}, {
									"case":	647,
									"scores":	[-4.982766493256678]
								}, {
									"case":	648,
									"scores":	[-4.982766493256678]
								}, {
									"case":	649,
									"scores":	[-4.982766493256678]
								}, {
									"case":	650,
									"scores":	[-4.982766493256678]
								}, {
									"case":	651,
									"scores":	[-4.982766493256678]
								}, {
									"case":	652,
									"scores":	[-4.982766493256678]
								}, {
									"case":	653,
									"scores":	[-4.982766493256678]
								}, {
									"case":	654,
									"scores":	[-4.982766493256678]
								}, {
									"case":	655,
									"scores":	[-4.982766493256678]
								}, {
									"case":	656,
									"scores":	[-4.982766493256678]
								}, {
									"case":	657,
									"scores":	[-4.982766493256678]
								}, {
									"case":	658,
									"scores":	[-4.982766493256678]
								}, {
									"case":	659,
									"scores":	[-4.982766493256678]
								}, {
									"case":	660,
									"scores":	[-4.982766493256678]
								}, {
									"case":	661,
									"scores":	[-4.982766493256678]
								}, {
									"case":	662,
									"scores":	[-4.982766493256678]
								}, {
									"case":	663,
									"scores":	[-4.982766493256678]
								}, {
									"case":	664,
									"scores":	[-4.982766493256678]
								}, {
									"case":	665,
									"scores":	[-4.982766493256678]
								}, {
									"case":	666,
									"scores":	[-4.982766493256678]
								}, {
									"case":	667,
									"scores":	[-4.982766493256678]
								}, {
									"case":	668,
									"scores":	[-4.982766493256678]
								}, {
									"case":	669,
									"scores":	[-4.982766493256678]
								}, {
									"case":	670,
									"scores":	[-4.982766493256678]
								}, {
									"case":	671,
									"scores":	[-4.982766493256678]
								}, {
									"case":	672,
									"scores":	[-4.982766493256678]
								}, {
									"case":	673,
									"scores":	[-4.982766493256678]
								}, {
									"case":	674,
									"scores":	[-4.982766493256678]
								}, {
									"case":	675,
									"scores":	[-4.982766493256678]
								}, {
									"case":	676,
									"scores":	[-4.982766493256678]
								}, {
									"case":	677,
									"scores":	[-4.982766493256678]
								}, {
									"case":	678,
									"scores":	[-4.982766493256678]
								}, {
									"case":	679,
									"scores":	[-4.982766493256678]
								}, {
									"case":	680,
									"scores":	[-4.982766493256678]
								}, {
									"case":	681,
									"scores":	[-4.982766493256678]
								}, {
									"case":	682,
									"scores":	[-4.982766493256678]
								}, {
									"case":	683,
									"scores":	[-4.982766493256678]
								}, {
									"case":	684,
									"scores":	[-4.982766493256678]
								}, {
									"case":	685,
									"scores":	[-4.982766493256678]
								}, {
									"case":	686,
									"scores":	[-4.982766493256678]
								}, {
									"case":	687,
									"scores":	[-4.982766493256678]
								}, {
									"case":	688,
									"scores":	[-4.982766493256678]
								}, {
									"case":	689,
									"scores":	[-4.982766493256678]
								}, {
									"case":	690,
									"scores":	[-4.982766493256678]
								}, {
									"case":	691,
									"scores":	[-4.982766493256678]
								}, {
									"case":	692,
									"scores":	[-4.982766493256678]
								}, {
									"case":	693,
									"scores":	[-4.982766493256678]
								}, {
									"case":	694,
									"scores":	[-4.982766493256678]
								}, {
									"case":	695,
									"scores":	[-4.982766493256678]
								}, {
									"case":	696,
									"scores":	[-4.982766493256678]
								}, {
									"case":	697,
									"scores":	[-4.982766493256678]
								}, {
									"case":	698,
									"scores":	[-4.982766493256678]
								}, {
									"case":	699,
									"scores":	[-4.982766493256678]
								}, {
									"case":	700,
									"scores":	[-4.982766493256678]
								}, {
									"case":	701,
									"scores":	[-4.982766493256678]
								}, {
									"case":	702,
									"scores":	[-4.982766493256678]
								}, {
									"case":	703,
									"scores":	[-4.982766493256678]
								}, {
									"case":	704,
									"scores":	[-4.982766493256678]
								}, {
									"case":	705,
									"scores":	[-4.982766493256678]
								}, {
									"case":	706,
									"scores":	[-4.982766493256678]
								}, {
									"case":	707,
									"scores":	[-4.982766493256678]
								}, {
									"case":	708,
									"scores":	[-4.982766493256678]
								}, {
									"case":	709,
									"scores":	[-4.982766493256678]
								}, {
									"case":	710,
									"scores":	[-4.982766493256678]
								}, {
									"case":	711,
									"scores":	[-4.982766493256678]
								}, {
									"case":	712,
									"scores":	[-4.982766493256678]
								}, {
									"case":	713,
									"scores":	[-4.982766493256678]
								}, {
									"case":	714,
									"scores":	[-4.982766493256678]
								}, {
									"case":	715,
									"scores":	[-4.982766493256678]
								}, {
									"case":	716,
									"scores":	[-4.982766493256678]
								}, {
									"case":	717,
									"scores":	[-4.982766493256678]
								}, {
									"case":	718,
									"scores":	[-4.982766493256678]
								}, {
									"case":	719,
									"scores":	[-4.982766493256678]
								}, {
									"case":	720,
									"scores":	[-4.982766493256678]
								}, {
									"case":	721,
									"scores":	[-4.982766493256678]
								}, {
									"case":	722,
									"scores":	[-4.982766493256678]
								}, {
									"case":	723,
									"scores":	[-4.982766493256678]
								}, {
									"case":	724,
									"scores":	[-4.982766493256678]
								}, {
									"case":	725,
									"scores":	[-4.982766493256678]
								}, {
									"case":	726,
									"scores":	[-4.982766493256678]
								}, {
									"case":	727,
									"scores":	[-4.982766493256678]
								}, {
									"case":	728,
									"scores":	[-4.982766493256678]
								}, {
									"case":	729,
									"scores":	[-4.982766493256678]
								}, {
									"case":	730,
									"scores":	[-4.982766493256678]
								}, {
									"case":	731,
									"scores":	[-4.982766493256678]
								}, {
									"case":	732,
									"scores":	[-4.982766493256678]
								}, {
									"case":	733,
									"scores":	[-4.982766493256678]
								}, {
									"case":	734,
									"scores":	[-4.982766493256678]
								}, {
									"case":	735,
									"scores":	[-4.982766493256678]
								}, {
									"case":	736,
									"scores":	[-4.982766493256678]
								}, {
									"case":	737,
									"scores":	[-4.982766493256678]
								}, {
									"case":	738,
									"scores":	[-4.982766493256678]
								}, {
									"case":	739,
									"scores":	[-4.982766493256678]
								}, {
									"case":	740,
									"scores":	[-4.982766493256678]
								}, {
									"case":	741,
									"scores":	[-4.982766493256678]
								}, {
									"case":	742,
									"scores":	[-4.982766493256678]
								}, {
									"case":	743,
									"scores":	[-4.982766493256678]
								}, {
									"case":	744,
									"scores":	[-4.982766493256678]
								}, {
									"case":	745,
									"scores":	[-4.982766493256678]
								}, {
									"case":	746,
									"scores":	[-4.982766493256678]
								}, {
									"case":	747,
									"scores":	[-4.982766493256678]
								}, {
									"case":	748,
									"scores":	[-4.982766493256678]
								}, {
									"case":	749,
									"scores":	[-4.982766493256678]
								}, {
									"case":	750,
									"scores":	[-4.982766493256678]
								}, {
									"case":	751,
									"scores":	[-4.982766493256678]
								}, {
									"case":	752,
									"scores":	[-4.982766493256678]
								}, {
									"case":	753,
									"scores":	[-4.982766493256678]
								}, {
									"case":	754,
									"scores":	[-4.982766493256678]
								}, {
									"case":	755,
									"scores":	[-4.982766493256678]
								}, {
									"case":	756,
									"scores":	[-4.982766493256678]
								}, {
									"case":	757,
									"scores":	[-4.982766493256678]
								}, {
									"case":	758,
									"scores":	[-4.982766493256678]
								}, {
									"case":	759,
									"scores":	[-4.982766493256678]
								}, {
									"case":	760,
									"scores":	[-4.982766493256678]
								}, {
									"case":	761,
									"scores":	[-4.982766493256678]
								}, {
									"case":	762,
									"scores":	[-4.982766493256678]
								}, {
									"case":	763,
									"scores":	[-4.982766493256678]
								}, {
									"case":	764,
									"scores":	[-4.982766493256678]
								}, {
									"case":	765,
									"scores":	[-4.982766493256678]
								}, {
									"case":	766,
									"scores":	[-4.982766493256678]
								}, {
									"case":	767,
									"scores":	[-4.982766493256678]
								}, {
									"case":	768,
									"scores":	[-4.982766493256678]
								}, {
									"case":	769,
									"scores":	[-4.982766493256678]
								}, {
									"case":	770,
									"scores":	[-4.982766493256678]
								}, {
									"case":	771,
									"scores":	[-4.982766493256678]
								}, {
									"case":	772,
									"scores":	[-4.982766493256678]
								}, {
									"case":	773,
									"scores":	[-4.982766493256678]
								}, {
									"case":	774,
									"scores":	[-4.982766493256678]
								}, {
									"case":	775,
									"scores":	[-4.982766493256678]
								}, {
									"case":	776,
									"scores":	[-4.982766493256678]
								}, {
									"case":	777,
									"scores":	[-4.982766493256678]
								}, {
									"case":	778,
									"scores":	[-4.982766493256678]
								}, {
									"case":	779,
									"scores":	[-4.982766493256678]
								}, {
									"case":	780,
									"scores":	[-4.982766493256678]
								}, {
									"case":	781,
									"scores":	[-4.982766493256678]
								}, {
									"case":	782,
									"scores":	[-4.982766493256678]
								}, {
									"case":	783,
									"scores":	[-4.982766493256678]
								}, {
									"case":	784,
									"scores":	[-4.982766493256678]
								}, {
									"case":	785,
									"scores":	[-4.982766493256678]
								}, {
									"case":	786,
									"scores":	[-4.982766493256678]
								}, {
									"case":	787,
									"scores":	[-4.982766493256678]
								}, {
									"case":	788,
									"scores":	[-4.982766493256678]
								}, {
									"case":	789,
									"scores":	[-4.982766493256678]
								}, {
									"case":	790,
									"scores":	[-4.982766493256678]
								}, {
									"case":	791,
									"scores":	[-4.982766493256678]
								}, {
									"case":	792,
									"scores":	[-4.982766493256678]
								}, {
									"case":	793,
									"scores":	[-4.982766493256678]
								}, {
									"case":	794,
									"scores":	[-4.982766493256678]
								}, {
									"case":	795,
									"scores":	[-4.982766493256678]
								}, {
									"case":	796,
									"scores":	[-4.982766493256678]
								}, {
									"case":	797,
									"scores":	[-4.982766493256678]
								}, {
									"case":	798,
									"scores":	[-4.982766493256678]
								}, {
									"case":	799,
									"scores":	[-4.982766493256678]
								}, {
									"case":	800,
									"scores":	[-4.982766493256678]
								}, {
									"case":	801,
									"scores":	[-4.982766493256678]
								}, {
									"case":	802,
									"scores":	[-4.982766493256678]
								}, {
									"case":	803,
									"scores":	[-4.982766493256678]
								}, {
									"case":	804,
									"scores":	[-4.982766493256678]
								}, {
									"case":	805,
									"scores":	[-4.982766493256678]
								}, {
									"case":	806,
									"scores":	[-4.982766493256678]
								}, {
									"case":	807,
									"scores":	[-4.982766493256678]
								}, {
									"case":	808,
									"scores":	[-4.982766493256678]
								}, {
									"case":	809,
									"scores":	[-4.982766493256678]
								}, {
									"case":	810,
									"scores":	[-4.982766493256678]
								}, {
									"case":	811,
									"scores":	[-4.982766493256678]
								}, {
									"case":	812,
									"scores":	[-4.982766493256678]
								}, {
									"case":	813,
									"scores":	[-4.982766493256678]
								}, {
									"case":	814,
									"scores":	[-4.982766493256678]
								}, {
									"case":	815,
									"scores":	[-4.982766493256678]
								}, {
									"case":	816,
									"scores":	[-4.982766493256678]
								}, {
									"case":	817,
									"scores":	[-4.982766493256678]
								}, {
									"case":	818,
									"scores":	[-4.982766493256678]
								}, {
									"case":	819,
									"scores":	[-4.982766493256678]
								}, {
									"case":	820,
									"scores":	[-4.982766493256678]
								}, {
									"case":	821,
									"scores":	[-4.982766493256678]
								}, {
									"case":	822,
									"scores":	[-4.982766493256678]
								}, {
									"case":	823,
									"scores":	[-4.982766493256678]
								}, {
									"case":	824,
									"scores":	[-4.982766493256678]
								}, {
									"case":	825,
									"scores":	[-4.982766493256678]
								}, {
									"case":	826,
									"scores":	[-4.982766493256678]
								}, {
									"case":	827,
									"scores":	[-4.982766493256678]
								}, {
									"case":	828,
									"scores":	[-4.982766493256678]
								}, {
									"case":	829,
									"scores":	[-4.982766493256678]
								}, {
									"case":	830,
									"scores":	[-4.982766493256678]
								}, {
									"case":	831,
									"scores":	[-4.982766493256678]
								}, {
									"case":	832,
									"scores":	[-4.982766493256678]
								}, {
									"case":	833,
									"scores":	[-4.982766493256678]
								}, {
									"case":	834,
									"scores":	[-4.982766493256678]
								}, {
									"case":	835,
									"scores":	[-4.982766493256678]
								}, {
									"case":	836,
									"scores":	[-4.982766493256678]
								}, {
									"case":	837,
									"scores":	[-4.982766493256678]
								}, {
									"case":	838,
									"scores":	[-4.982766493256678]
								}, {
									"case":	839,
									"scores":	[-4.982766493256678]
								}, {
									"case":	840,
									"scores":	[-4.982766493256678]
								}, {
									"case":	841,
									"scores":	[-4.982766493256678]
								}, {
									"case":	842,
									"scores":	[-4.982766493256678]
								}, {
									"case":	843,
									"scores":	[-4.982766493256678]
								}, {
									"case":	844,
									"scores":	[-4.982766493256678]
								}, {
									"case":	845,
									"scores":	[-4.982766493256678]
								}, {
									"case":	846,
									"scores":	[-4.982766493256678]
								}, {
									"case":	847,
									"scores":	[-4.982766493256678]
								}, {
									"case":	848,
									"scores":	[-4.982766493256678]
								}, {
									"case":	849,
									"scores":	[-4.982766493256678]
								}, {
									"case":	850,
									"scores":	[-4.982766493256678]
								}, {
									"case":	851,
									"scores":	[-4.982766493256678]
								}, {
									"case":	852,
									"scores":	[-4.982766493256678]
								}, {
									"case":	853,
									"scores":	[-4.982766493256678]
								}, {
									"case":	854,
									"scores":	[-4.982766493256678]
								}, {
									"case":	855,
									"scores":	[-4.982766493256678]
								}, {
									"case":	856,
									"scores":	[-4.982766493256678]
								}, {
									"case":	857,
									"scores":	[-4.982766493256678]
								}, {
									"case":	858,
									"scores":	[-4.982766493256678]
								}, {
									"case":	859,
									"scores":	[-4.982766493256678]
								}, {
									"case":	860,
									"scores":	[-4.982766493256678]
								}, {
									"case":	861,
									"scores":	[-4.982766493256678]
								}, {
									"case":	862,
									"scores":	[-4.982766493256678]
								}, {
									"case":	863,
									"scores":	[-4.982766493256678]
								}, {
									"case":	864,
									"scores":	[-4.982766493256678]
								}, {
									"case":	865,
									"scores":	[-4.982766493256678]
								}, {
									"case":	866,
									"scores":	[-4.982766493256678]
								}, {
									"case":	867,
									"scores":	[-4.982766493256678]
								}, {
									"case":	868,
									"scores":	[-4.982766493256678]
								}, {
									"case":	869,
									"scores":	[-4.982766493256678]
								}, {
									"case":	870,
									"scores":	[-4.982766493256678]
								}, {
									"case":	871,
									"scores":	[-4.982766493256678]
								}, {
									"case":	872,
									"scores":	[-4.982766493256678]
								}, {
									"case":	873,
									"scores":	[-4.982766493256678]
								}, {
									"case":	874,
									"scores":	[-4.982766493256678]
								}, {
									"case":	875,
									"scores":	[-4.982766493256678]
								}, {
									"case":	876,
									"scores":	[-4.982766493256678]
								}, {
									"case":	877,
									"scores":	[-4.982766493256678]
								}, {
									"case":	878,
									"scores":	[-4.982766493256678]
								}, {
									"case":	879,
									"scores":	[-4.982766493256678]
								}, {
									"case":	880,
									"scores":	[-4.982766493256678]
								}, {
									"case":	881,
									"scores":	[-4.982766493256678]
								}, {
									"case":	882,
									"scores":	[-4.982766493256678]
								}, {
									"case":	883,
									"scores":	[-4.982766493256678]
								}, {
									"case":	884,
									"scores":	[-4.982766493256678]
								}, {
									"case":	885,
									"scores":	[-4.982766493256678]
								}, {
									"case":	886,
									"scores":	[-4.982766493256678]
								}, {
									"case":	887,
									"scores":	[-4.982766493256678]
								}, {
									"case":	888,
									"scores":	[-4.982766493256678]
								}, {
									"case":	889,
									"scores":	[-4.982766493256678]
								}, {
									"case":	890,
									"scores":	[-4.982766493256678]
								}, {
									"case":	891,
									"scores":	[-4.982766493256678]
								}, {
									"case":	892,
									"scores":	[-4.982766493256678]
								}, {
									"case":	893,
									"scores":	[-4.982766493256678]
								}, {
									"case":	894,
									"scores":	[-4.982766493256678]
								}, {
									"case":	895,
									"scores":	[-4.982766493256678]
								}, {
									"case":	896,
									"scores":	[-4.982766493256678]
								}, {
									"case":	897,
									"scores":	[-4.982766493256678]
								}, {
									"case":	898,
									"scores":	[-4.982766493256678]
								}, {
									"case":	899,
									"scores":	[-4.982766493256678]
								}, {
									"case":	900,
									"scores":	[-4.982766493256678]
								}, {
									"case":	901,
									"scores":	[-4.982766493256678]
								}, {
									"case":	902,
									"scores":	[-4.982766493256678]
								}, {
									"case":	903,
									"scores":	[-4.982766493256678]
								}, {
									"case":	904,
									"scores":	[-4.982766493256678]
								}, {
									"case":	905,
									"scores":	[-4.982766493256678]
								}, {
									"case":	906,
									"scores":	[-4.982766493256678]
								}, {
									"case":	907,
									"scores":	[-4.982766493256678]
								}, {
									"case":	908,
									"scores":	[-4.982766493256678]
								}, {
									"case":	909,
									"scores":	[-4.982766493256678]
								}, {
									"case":	910,
									"scores":	[-4.982766493256678]
								}, {
									"case":	911,
									"scores":	[-4.982766493256678]
								}, {
									"case":	912,
									"scores":	[-4.982766493256678]
								}, {
									"case":	913,
									"scores":	[-4.982766493256678]
								}, {
									"case":	914,
									"scores":	[-4.982766493256678]
								}, {
									"case":	915,
									"scores":	[-4.982766493256678]
								}, {
									"case":	916,
									"scores":	[-4.982766493256678]
								}, {
									"case":	917,
									"scores":	[-4.982766493256678]
								}, {
									"case":	918,
									"scores":	[-4.982766493256678]
								}, {
									"case":	919,
									"scores":	[-4.982766493256678]
								}, {
									"case":	920,
									"scores":	[-4.982766493256678]
								}, {
									"case":	921,
									"scores":	[-4.982766493256678]
								}, {
									"case":	922,
									"scores":	[-4.982766493256678]
								}, {
									"case":	923,
									"scores":	[-4.982766493256678]
								}, {
									"case":	924,
									"scores":	[-4.982766493256678]
								}, {
									"case":	925,
									"scores":	[-4.982766493256678]
								}, {
									"case":	926,
									"scores":	[-4.982766493256678]
								}, {
									"case":	927,
									"scores":	[-4.982766493256678]
								}, {
									"case":	928,
									"scores":	[-4.982766493256678]
								}, {
									"case":	929,
									"scores":	[-4.982766493256678]
								}, {
									"case":	930,
									"scores":	[-4.982766493256678]
								}, {
									"case":	931,
									"scores":	[-4.982766493256678]
								}, {
									"case":	932,
									"scores":	[-4.982766493256678]
								}, {
									"case":	933,
									"scores":	[-4.982766493256678]
								}, {
									"case":	934,
									"scores":	[-4.982766493256678]
								}, {
									"case":	935,
									"scores":	[-4.982766493256678]
								}, {
									"case":	936,
									"scores":	[-4.982766493256678]
								}, {
									"case":	937,
									"scores":	[-4.982766493256678]
								}, {
									"case":	938,
									"scores":	[-4.982766493256678]
								}, {
									"case":	939,
									"scores":	[-4.982766493256678]
								}, {
									"case":	940,
									"scores":	[-4.982766493256678]
								}, {
									"case":	941,
									"scores":	[-4.982766493256678]
								}, {
									"case":	942,
									"scores":	[-4.982766493256678]
								}, {
									"case":	943,
									"scores":	[-4.982766493256678]
								}, {
									"case":	944,
									"scores":	[-4.982766493256678]
								}, {
									"case":	945,
									"scores":	[-4.982766493256678]
								}, {
									"case":	946,
									"scores":	[-4.982766493256678]
								}, {
									"case":	947,
									"scores":	[-4.982766493256678]
								}, {
									"case":	948,
									"scores":	[-4.982766493256678]
								}, {
									"case":	949,
									"scores":	[-4.982766493256678]
								}, {
									"case":	950,
									"scores":	[-4.982766493256678]
								}, {
									"case":	951,
									"scores":	[-4.982766493256678]
								}, {
									"case":	952,
									"scores":	[-4.982766493256678]
								}, {
									"case":	953,
									"scores":	[-4.982766493256678]
								}, {
									"case":	954,
									"scores":	[-4.982766493256678]
								}, {
									"case":	955,
									"scores":	[-4.982766493256678]
								}, {
									"case":	956,
									"scores":	[-4.982766493256678]
								}, {
									"case":	957,
									"scores":	[-4.982766493256678]
								}, {
									"case":	958,
									"scores":	[-4.982766493256678]
								}, {
									"case":	959,
									"scores":	[-4.982766493256678]
								}, {
									"case":	960,
									"scores":	[-4.982766493256678]
								}, {
									"case":	961,
									"scores":	[-4.982766493256678]
								}, {
									"case":	962,
									"scores":	[-4.982766493256678]
								}, {
									"case":	963,
									"scores":	[-4.982766493256678]
								}, {
									"case":	964,
									"scores":	[-4.982766493256678]
								}, {
									"case":	965,
									"scores":	[-4.982766493256678]
								}, {
									"case":	966,
									"scores":	[-4.982766493256678]
								}, {
									"case":	967,
									"scores":	[-4.982766493256678]
								}, {
									"case":	968,
									"scores":	[-4.982766493256678]
								}, {
									"case":	969,
									"scores":	[-4.982766493256678]
								}, {
									"case":	970,
									"scores":	[-4.982766493256678]
								}, {
									"case":	971,
									"scores":	[-4.982766493256678]
								}, {
									"case":	972,
									"scores":	[-4.982766493256678]
								}, {
									"case":	973,
									"scores":	[-4.982766493256678]
								}, {
									"case":	974,
									"scores":	[-4.982766493256678]
								}, {
									"case":	975,
									"scores":	[-4.982766493256678]
								}, {
									"case":	976,
									"scores":	[-4.982766493256678]
								}, {
									"case":	977,
									"scores":	[-4.982766493256678]
								}, {
									"case":	978,
									"scores":	[-4.982766493256678]
								}, {
									"case":	979,
									"scores":	[-4.982766493256678]
								}, {
									"case":	980,
									"scores":	[-4.982766493256678]
								}, {
									"case":	981,
									"scores":	[-4.982766493256678]
								}, {
									"case":	982,
									"scores":	[-4.982766493256678]
								}, {
									"case":	983,
									"scores":	[-4.982766493256678]
								}, {
									"case":	984,
									"scores":	[-4.982766493256678]
								}, {
									"case":	985,
									"scores":	[-4.982766493256678]
								}, {
									"case":	986,
									"scores":	[-4.982766493256678]
								}, {
									"case":	987,
									"scores":	[-4.982766493256678]
								}, {
									"case":	988,
									"scores":	[-4.982766493256678]
								}, {
									"case":	989,
									"scores":	[-4.982766493256678]
								}, {
									"case":	990,
									"scores":	[-4.982766493256678]
								}, {
									"case":	991,
									"scores":	[-4.982766493256678]
								}, {
									"case":	992,
									"scores":	[-4.982766493256678]
								}, {
									"case":	993,
									"scores":	[-4.982766493256678]
								}, {
									"case":	994,
									"scores":	[-4.982766493256678]
								}, {
									"case":	995,
									"scores":	[-4.982766493256678]
								}, {
									"case":	996,
									"scores":	[-4.982766493256678]
								}, {
									"case":	997,
									"scores":	[-4.982766493256678]
								}, {
									"case":	998,
									"scores":	[-4.982766493256678]
								}, {
									"case":	999,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1000,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1001,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1002,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1003,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1004,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1005,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1006,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1007,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1008,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1009,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1010,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1011,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1012,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1013,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1014,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1015,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1016,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1017,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1018,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1019,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1020,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1021,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1022,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1023,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1024,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1025,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1026,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1027,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1028,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1029,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1030,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1031,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1032,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1033,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1034,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1035,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1036,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1037,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1038,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1039,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1040,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1041,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1042,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1043,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1044,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1045,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1046,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1047,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1048,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1049,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1050,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1051,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1052,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1053,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1054,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1055,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1056,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1057,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1058,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1059,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1060,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1061,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1062,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1063,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1064,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1065,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1066,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1067,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1068,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1069,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1070,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1071,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1072,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1073,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1074,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1075,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1076,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1077,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1078,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1079,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1080,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1081,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1082,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1083,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1084,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1085,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1086,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1087,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1088,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1089,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1090,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1091,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1092,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1093,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1094,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1095,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1096,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1097,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1098,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1099,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1100,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1101,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1102,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1103,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1104,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1105,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1106,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1107,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1108,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1109,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1110,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1111,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1112,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1113,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1114,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1115,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1116,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1117,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1118,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1119,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1120,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1121,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1122,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1123,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1124,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1125,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1126,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1127,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1128,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1129,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1130,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1131,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1132,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1133,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1134,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1135,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1136,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1137,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1138,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1139,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1140,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1141,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1142,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1143,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1144,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1145,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1146,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1147,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1148,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1149,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1150,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1151,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1152,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1153,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1154,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1155,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1156,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1157,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1158,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1159,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1160,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1161,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1162,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1163,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1164,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1165,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1166,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1167,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1168,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1169,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1170,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1171,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1172,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1173,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1174,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1175,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1176,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1177,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1178,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1179,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1180,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1181,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1182,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1183,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1184,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1185,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1186,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1187,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1188,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1189,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1190,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1191,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1192,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1193,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1194,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1195,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1196,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1197,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1198,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1199,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1200,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1201,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1202,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1203,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1204,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1205,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1206,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1207,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1208,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1209,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1210,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1211,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1212,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1213,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1214,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1215,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1216,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1217,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1218,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1219,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1220,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1221,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1222,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1223,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1224,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1225,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1226,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1227,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1228,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1229,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1230,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1231,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1232,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1233,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1234,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1235,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1236,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1237,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1238,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1239,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1240,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1241,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1242,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1243,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1244,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1245,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1246,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1247,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1248,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1249,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1250,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1251,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1252,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1253,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1254,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1255,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1256,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1257,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1258,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1259,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1260,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1261,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1262,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1263,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1264,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1265,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1266,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1267,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1268,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1269,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1270,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1271,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1272,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1273,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1274,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1275,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1276,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1277,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1278,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1279,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1280,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1281,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1282,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1283,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1284,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1285,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1286,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1287,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1288,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1289,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1290,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1291,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1292,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1293,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1294,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1295,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1296,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1297,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1298,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1299,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1300,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1301,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1302,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1303,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1304,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1305,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1306,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1307,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1308,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1309,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1310,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1311,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1312,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1313,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1314,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1315,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1316,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1317,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1318,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1319,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1320,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1321,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1322,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1323,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1324,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1325,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1326,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1327,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1328,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1329,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1330,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1331,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1332,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1333,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1334,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1335,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1336,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1337,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1338,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1339,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1340,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1341,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1342,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1343,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1344,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1345,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1346,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1347,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1348,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1349,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1350,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1351,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1352,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1353,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1354,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1355,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1356,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1357,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1358,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1359,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1360,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1361,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1362,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1363,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1364,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1365,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1366,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1367,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1368,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1369,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1370,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1371,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1372,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1373,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1374,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1375,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1376,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1377,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1378,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1379,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1380,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1381,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1382,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1383,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1384,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1385,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1386,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1387,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1388,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1389,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1390,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1391,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1392,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1393,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1394,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1395,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1396,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1397,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1398,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1399,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1400,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1401,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1402,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1403,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1404,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1405,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1406,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1407,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1408,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1409,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1410,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1411,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1412,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1413,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1414,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1415,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1416,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1417,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1418,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1419,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1420,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1421,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1422,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1423,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1424,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1425,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1426,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1427,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1428,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1429,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1430,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1431,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1432,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1433,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1434,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1435,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1436,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1437,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1438,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1439,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1440,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1441,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1442,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1443,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1444,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1445,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1446,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1447,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1448,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1449,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1450,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1451,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1452,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1453,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1454,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1455,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1456,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1457,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1458,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1459,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1460,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1461,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1462,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1463,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1464,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1465,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1466,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1467,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1468,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1469,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1470,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1471,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1472,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1473,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1474,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1475,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1476,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1477,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1478,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1479,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1480,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1481,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1482,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1483,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1484,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1485,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1486,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1487,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1488,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1489,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1490,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1491,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1492,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1493,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1494,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1495,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1496,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1497,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1498,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1499,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1500,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1501,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1502,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1503,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1504,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1505,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1506,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1507,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1508,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1509,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1510,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1511,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1512,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1513,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1514,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1515,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1516,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1517,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1518,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1519,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1520,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1521,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1522,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1523,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1524,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1525,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1526,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1527,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1528,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1529,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1530,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1531,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1532,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1533,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1534,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1535,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1536,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1537,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1538,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1539,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1540,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1541,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1542,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1543,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1544,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1545,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1546,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1547,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1548,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1549,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1550,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1551,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1552,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1553,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1554,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1555,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1556,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1557,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1558,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1559,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1560,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1561,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1562,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1563,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1564,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1565,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1566,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1567,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1568,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1569,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1570,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1571,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1572,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1573,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1574,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1575,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1576,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1577,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1578,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1579,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1580,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1581,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1582,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1583,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1584,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1585,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1586,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1587,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1588,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1589,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1590,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1591,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1592,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1593,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1594,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1595,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1596,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1597,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1598,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1599,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1600,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1601,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1602,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1603,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1604,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1605,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1606,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1607,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1608,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1609,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1610,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1611,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1612,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1613,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1614,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1615,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1616,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1617,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1618,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1619,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1620,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1621,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1622,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1623,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1624,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1625,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1626,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1627,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1628,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1629,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1630,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1631,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1632,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1633,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1634,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1635,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1636,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1637,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1638,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1639,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1640,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1641,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1642,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1643,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1644,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1645,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1646,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1647,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1648,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1649,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1650,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1651,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1652,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1653,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1654,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1655,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1656,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1657,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1658,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1659,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1660,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1661,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1662,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1663,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1664,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1665,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1666,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1667,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1668,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1669,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1670,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1671,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1672,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1673,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1674,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1675,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1676,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1677,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1678,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1679,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1680,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1681,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1682,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1683,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1684,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1685,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1686,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1687,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1688,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1689,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1690,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1691,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1692,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1693,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1694,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1695,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1696,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1697,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1698,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1699,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1700,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1701,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1702,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1703,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1704,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1705,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1706,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1707,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1708,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1709,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1710,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1711,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1712,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1713,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1714,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1715,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1716,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1717,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1718,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1719,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1720,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1721,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1722,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1723,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1724,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1725,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1726,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1727,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1728,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1729,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1730,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1731,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1732,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1733,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1734,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1735,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1736,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1737,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1738,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1739,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1740,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1741,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1742,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1743,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1744,
									"scores":	[-4.982766493256678]
								}, {
									"case":	1745,
									"scores":	[-4.982766493256678]
								}]
						}]
				}, {
					"line":	698,
					"switches":	[{
							"switch":	22,
							"types":	[[], [], [], [], [142], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [], [], [], [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], [], [], [], [], [], []],
							"begin_line":	699,
							"begin_column":	1,
							"end_line":	699,
							"end_column":	1,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L699\", 12, &(op), sizeof (op), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	2,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	3,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	4,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	5,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	6,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	7,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	8,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	9,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	10,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	11,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	12,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	13,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	14,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	15,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	16,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	17,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	18,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	19,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	20,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	21,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	22,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	23,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	24,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	25,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	26,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	27,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	28,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	29,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	30,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	31,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	32,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	33,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	34,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	35,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	36,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	37,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	38,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	39,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	40,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	41,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	42,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	43,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	44,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	45,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	46,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	47,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	48,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	49,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	50,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	51,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	52,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	53,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	54,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	55,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	56,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	57,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	58,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	59,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	60,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	61,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	62,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	63,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	64,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	65,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	66,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	67,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	68,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	69,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	70,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	71,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	72,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	73,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	74,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	75,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	76,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	77,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	78,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	79,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	80,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	81,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	82,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	83,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	84,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	85,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	86,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	87,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	88,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	89,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	90,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	91,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	92,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	93,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	94,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	95,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	96,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	97,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	98,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	99,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	100,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	101,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	102,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	103,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	104,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	105,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	106,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	107,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	108,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	109,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	110,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	111,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	112,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	113,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	114,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	115,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	116,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	117,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	118,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	119,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	120,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	121,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	122,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	123,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	124,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	125,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	126,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	127,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	128,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	129,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	130,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	131,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	132,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	133,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	134,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	135,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	136,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	137,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	138,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	139,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	140,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	141,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	142,
									"scores":	[-7.2061638197391584, -7.3369870485391582, -7.01956149013916, -7.1697879047391586, -7.3847716173391582, -7.99760275713916, -7.1692692233391586, -6.45816010433916, -7.0904294533391585, -7.8819727443391585, -7.3847716173391582, -7.3847716173391582]
								}]
						}, {
							"switch":	23,
							"types":	[[], [], [1], [], [], [], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [], [], [34]],
							"begin_line":	699,
							"begin_column":	3,
							"end_line":	699,
							"end_column":	51,
							"patch_codes":	["if (!__is_neg(\"\", \"L699\", 12, &(op), sizeof (op), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), -1)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 0)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 1)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 16777216)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 2)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 3)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 33554432)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 4)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), 516)", "zend_hash_add_empty_element((**op).value.ht, ((void *)0), arg_key_len)", "zend_hash_apply_with_argument((**op).value.ht, ((void *)0), 0)", "zend_hash_get_current_data_ex((**op).value.ht, ((void *)0), 0)", "zend_symtable_del((**op).value.ht, ((void *)0), -1)", "zend_symtable_del((**op).value.ht, ((void *)0), 0)", "zend_symtable_del((**op).value.ht, ((void *)0), 1)", "zend_symtable_del((**op).value.ht, ((void *)0), 16777216)", "zend_symtable_del((**op).value.ht, ((void *)0), 2)", "zend_symtable_del((**op).value.ht, ((void *)0), 3)", "zend_symtable_del((**op).value.ht, ((void *)0), 33554432)", "zend_symtable_del((**op).value.ht, ((void *)0), 4)", "zend_symtable_del((**op).value.ht, ((void *)0), 516)", "zend_symtable_del((**op).value.ht, ((void *)0), arg_key_len)", "zend_symtable_exists((**op).value.ht, ((void *)0), -1)", "zend_symtable_exists((**op).value.ht, ((void *)0), 0)", "zend_symtable_exists((**op).value.ht, ((void *)0), 1)", "zend_symtable_exists((**op).value.ht, ((void *)0), 16777216)", "zend_symtable_exists((**op).value.ht, ((void *)0), 2)", "zend_symtable_exists((**op).value.ht, ((void *)0), 3)", "zend_symtable_exists((**op).value.ht, ((void *)0), 33554432)", "zend_symtable_exists((**op).value.ht, ((void *)0), 4)", "zend_symtable_exists((**op).value.ht, ((void *)0), 516)", "zend_symtable_exists((**op).value.ht, ((void *)0), arg_key_len)", "{\n}\n", "Debug((**op).value.ht, ((void *)0))", "php_printf((**op).value.ht, ((void *)0))", "printf((**op).value.ht, ((void *)0))", "zend_copy_constants((**op).value.ht, ((void *)0))", "zend_hash_apply((**op).value.ht, ((void *)0))", "zend_hash_get_current_key_type_ex((**op).value.ht, ((void *)0))", "zend_hash_internal_pointer_end_ex((**op).value.ht, ((void *)0))", "zend_hash_move_backwards_ex((**op).value.ht, ((void *)0))", "zend_hash_move_forward_ex((**op).value.ht, ((void *)0))", "zend_hash_reverse_apply((**op).value.ht, ((void *)0))", "zend_hash_set_pointer((**op).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&arg_key)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&arg_key_len)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&index)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&input)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&pos)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&return_value)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(&tmp)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.77545106933916, -7.7578147693391575, -6.6057060109391585, -7.2403025683391586, -6.66958886593916, -6.23238406593916, -6.40860746493916, -4.8146241629391584, -6.16823156593916, -5.8243826259391582, -6.66958886593916, -6.66958886593916]
								}, {
									"case":	2,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	3,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	4,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	5,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	6,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	7,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	8,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	9,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	10,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	11,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	12,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	13,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	14,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	15,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	16,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	17,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	18,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	19,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	20,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	21,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	22,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	23,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	24,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	25,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	26,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	27,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	28,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	29,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	30,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	31,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	32,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	33,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	34,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	35,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	36,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	37,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	38,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	39,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	40,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	41,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	42,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	43,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	44,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	45,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	46,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	47,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	48,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	49,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	50,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	51,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	52,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	53,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	54,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	55,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	56,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	57,
									"scores":	[-4.9625637859391585]
								}, {
									"case":	58,
									"scores":	[-4.9625637859391585]
								}]
						}]
				}, {
					"line":	703,
					"switches":	[{
							"switch":	25,
							"types":	[[], [], [], [], [152, 153], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	704,
							"begin_column":	2,
							"end_line":	704,
							"end_column":	2,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    break;\n", "if (__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.619117761541327]
								}, {
									"case":	2,
									"scores":	[-4.619117761541327]
								}, {
									"case":	3,
									"scores":	[-4.619117761541327]
								}, {
									"case":	4,
									"scores":	[-4.619117761541327]
								}, {
									"case":	5,
									"scores":	[-4.619117761541327]
								}, {
									"case":	6,
									"scores":	[-4.619117761541327]
								}, {
									"case":	7,
									"scores":	[-4.619117761541327]
								}, {
									"case":	8,
									"scores":	[-4.619117761541327]
								}, {
									"case":	9,
									"scores":	[-4.619117761541327]
								}, {
									"case":	10,
									"scores":	[-4.619117761541327]
								}, {
									"case":	11,
									"scores":	[-4.619117761541327]
								}, {
									"case":	12,
									"scores":	[-4.619117761541327]
								}, {
									"case":	13,
									"scores":	[-4.619117761541327]
								}, {
									"case":	14,
									"scores":	[-4.619117761541327]
								}, {
									"case":	15,
									"scores":	[-4.619117761541327]
								}, {
									"case":	16,
									"scores":	[-4.619117761541327]
								}, {
									"case":	17,
									"scores":	[-4.619117761541327]
								}, {
									"case":	18,
									"scores":	[-4.619117761541327]
								}, {
									"case":	19,
									"scores":	[-4.619117761541327]
								}, {
									"case":	20,
									"scores":	[-4.619117761541327]
								}, {
									"case":	21,
									"scores":	[-4.619117761541327]
								}, {
									"case":	22,
									"scores":	[-4.619117761541327]
								}, {
									"case":	23,
									"scores":	[-4.619117761541327]
								}, {
									"case":	24,
									"scores":	[-4.619117761541327]
								}, {
									"case":	25,
									"scores":	[-4.619117761541327]
								}, {
									"case":	26,
									"scores":	[-4.619117761541327]
								}, {
									"case":	27,
									"scores":	[-4.619117761541327]
								}, {
									"case":	28,
									"scores":	[-4.619117761541327]
								}, {
									"case":	29,
									"scores":	[-4.619117761541327]
								}, {
									"case":	30,
									"scores":	[-4.619117761541327]
								}, {
									"case":	31,
									"scores":	[-4.619117761541327]
								}, {
									"case":	32,
									"scores":	[-4.619117761541327]
								}, {
									"case":	33,
									"scores":	[-4.619117761541327]
								}, {
									"case":	34,
									"scores":	[-4.619117761541327]
								}, {
									"case":	35,
									"scores":	[-4.619117761541327]
								}, {
									"case":	36,
									"scores":	[-4.619117761541327]
								}, {
									"case":	37,
									"scores":	[-4.619117761541327]
								}, {
									"case":	38,
									"scores":	[-4.619117761541327]
								}, {
									"case":	39,
									"scores":	[-4.619117761541327]
								}, {
									"case":	40,
									"scores":	[-4.619117761541327]
								}, {
									"case":	41,
									"scores":	[-4.619117761541327]
								}, {
									"case":	42,
									"scores":	[-4.619117761541327]
								}, {
									"case":	43,
									"scores":	[-4.619117761541327]
								}, {
									"case":	44,
									"scores":	[-4.619117761541327]
								}, {
									"case":	45,
									"scores":	[-4.619117761541327]
								}, {
									"case":	46,
									"scores":	[-4.619117761541327]
								}, {
									"case":	47,
									"scores":	[-4.619117761541327]
								}, {
									"case":	48,
									"scores":	[-4.619117761541327]
								}, {
									"case":	49,
									"scores":	[-4.619117761541327]
								}, {
									"case":	50,
									"scores":	[-4.619117761541327]
								}, {
									"case":	51,
									"scores":	[-4.619117761541327]
								}, {
									"case":	52,
									"scores":	[-4.619117761541327]
								}, {
									"case":	53,
									"scores":	[-4.619117761541327]
								}, {
									"case":	54,
									"scores":	[-4.619117761541327]
								}, {
									"case":	55,
									"scores":	[-4.619117761541327]
								}, {
									"case":	56,
									"scores":	[-4.619117761541327]
								}, {
									"case":	57,
									"scores":	[-4.619117761541327]
								}, {
									"case":	58,
									"scores":	[-4.619117761541327]
								}, {
									"case":	59,
									"scores":	[-4.619117761541327]
								}, {
									"case":	60,
									"scores":	[-4.619117761541327]
								}, {
									"case":	61,
									"scores":	[-4.619117761541327]
								}, {
									"case":	62,
									"scores":	[-4.619117761541327]
								}, {
									"case":	63,
									"scores":	[-4.619117761541327]
								}, {
									"case":	64,
									"scores":	[-4.619117761541327]
								}, {
									"case":	65,
									"scores":	[-4.619117761541327]
								}, {
									"case":	66,
									"scores":	[-4.619117761541327]
								}, {
									"case":	67,
									"scores":	[-4.619117761541327]
								}, {
									"case":	68,
									"scores":	[-4.619117761541327]
								}, {
									"case":	69,
									"scores":	[-4.619117761541327]
								}, {
									"case":	70,
									"scores":	[-4.619117761541327]
								}, {
									"case":	71,
									"scores":	[-4.619117761541327]
								}, {
									"case":	72,
									"scores":	[-4.619117761541327]
								}, {
									"case":	73,
									"scores":	[-4.619117761541327]
								}, {
									"case":	74,
									"scores":	[-4.619117761541327]
								}, {
									"case":	75,
									"scores":	[-4.619117761541327]
								}, {
									"case":	76,
									"scores":	[-4.619117761541327]
								}, {
									"case":	77,
									"scores":	[-4.619117761541327]
								}, {
									"case":	78,
									"scores":	[-4.619117761541327]
								}, {
									"case":	79,
									"scores":	[-4.619117761541327]
								}, {
									"case":	80,
									"scores":	[-4.619117761541327]
								}, {
									"case":	81,
									"scores":	[-4.619117761541327]
								}, {
									"case":	82,
									"scores":	[-4.619117761541327]
								}, {
									"case":	83,
									"scores":	[-4.619117761541327]
								}, {
									"case":	84,
									"scores":	[-4.619117761541327]
								}, {
									"case":	85,
									"scores":	[-4.619117761541327]
								}, {
									"case":	86,
									"scores":	[-4.619117761541327]
								}, {
									"case":	87,
									"scores":	[-4.619117761541327]
								}, {
									"case":	88,
									"scores":	[-4.619117761541327]
								}, {
									"case":	89,
									"scores":	[-4.619117761541327]
								}, {
									"case":	90,
									"scores":	[-4.619117761541327]
								}, {
									"case":	91,
									"scores":	[-4.619117761541327]
								}, {
									"case":	92,
									"scores":	[-4.619117761541327]
								}, {
									"case":	93,
									"scores":	[-4.619117761541327]
								}, {
									"case":	94,
									"scores":	[-4.619117761541327]
								}, {
									"case":	95,
									"scores":	[-4.619117761541327]
								}, {
									"case":	96,
									"scores":	[-4.619117761541327]
								}, {
									"case":	97,
									"scores":	[-4.619117761541327]
								}, {
									"case":	98,
									"scores":	[-4.619117761541327]
								}, {
									"case":	99,
									"scores":	[-4.619117761541327]
								}, {
									"case":	100,
									"scores":	[-4.619117761541327]
								}, {
									"case":	101,
									"scores":	[-4.619117761541327]
								}, {
									"case":	102,
									"scores":	[-4.619117761541327]
								}, {
									"case":	103,
									"scores":	[-4.619117761541327]
								}, {
									"case":	104,
									"scores":	[-4.619117761541327]
								}, {
									"case":	105,
									"scores":	[-4.619117761541327]
								}, {
									"case":	106,
									"scores":	[-4.619117761541327]
								}, {
									"case":	107,
									"scores":	[-4.619117761541327]
								}, {
									"case":	108,
									"scores":	[-4.619117761541327]
								}, {
									"case":	109,
									"scores":	[-4.619117761541327]
								}, {
									"case":	110,
									"scores":	[-4.619117761541327]
								}, {
									"case":	111,
									"scores":	[-4.619117761541327]
								}, {
									"case":	112,
									"scores":	[-4.619117761541327]
								}, {
									"case":	113,
									"scores":	[-4.619117761541327]
								}, {
									"case":	114,
									"scores":	[-4.619117761541327]
								}, {
									"case":	115,
									"scores":	[-4.619117761541327]
								}, {
									"case":	116,
									"scores":	[-4.619117761541327]
								}, {
									"case":	117,
									"scores":	[-4.619117761541327]
								}, {
									"case":	118,
									"scores":	[-4.619117761541327]
								}, {
									"case":	119,
									"scores":	[-4.619117761541327]
								}, {
									"case":	120,
									"scores":	[-4.619117761541327]
								}, {
									"case":	121,
									"scores":	[-4.619117761541327]
								}, {
									"case":	122,
									"scores":	[-4.619117761541327]
								}, {
									"case":	123,
									"scores":	[-4.619117761541327]
								}, {
									"case":	124,
									"scores":	[-4.619117761541327]
								}, {
									"case":	125,
									"scores":	[-4.619117761541327]
								}, {
									"case":	126,
									"scores":	[-4.619117761541327]
								}, {
									"case":	127,
									"scores":	[-4.619117761541327]
								}, {
									"case":	128,
									"scores":	[-4.619117761541327]
								}, {
									"case":	129,
									"scores":	[-4.619117761541327]
								}, {
									"case":	130,
									"scores":	[-4.619117761541327]
								}, {
									"case":	131,
									"scores":	[-4.619117761541327]
								}, {
									"case":	132,
									"scores":	[-4.619117761541327]
								}, {
									"case":	133,
									"scores":	[-4.619117761541327]
								}, {
									"case":	134,
									"scores":	[-4.619117761541327]
								}, {
									"case":	135,
									"scores":	[-4.619117761541327]
								}, {
									"case":	136,
									"scores":	[-4.619117761541327]
								}, {
									"case":	137,
									"scores":	[-4.619117761541327]
								}, {
									"case":	138,
									"scores":	[-4.619117761541327]
								}, {
									"case":	139,
									"scores":	[-4.619117761541327]
								}, {
									"case":	140,
									"scores":	[-4.619117761541327]
								}, {
									"case":	141,
									"scores":	[-4.619117761541327]
								}, {
									"case":	142,
									"scores":	[-4.619117761541327]
								}, {
									"case":	143,
									"scores":	[-4.619117761541327]
								}, {
									"case":	144,
									"scores":	[-4.619117761541327]
								}, {
									"case":	145,
									"scores":	[-4.619117761541327]
								}, {
									"case":	146,
									"scores":	[-4.619117761541327]
								}, {
									"case":	147,
									"scores":	[-4.619117761541327]
								}, {
									"case":	148,
									"scores":	[-4.619117761541327]
								}, {
									"case":	149,
									"scores":	[-4.619117761541327]
								}, {
									"case":	150,
									"scores":	[-4.619117761541327]
								}, {
									"case":	151,
									"scores":	[-4.619117761541327]
								}, {
									"case":	152,
									"scores":	[-8.30859125254133, -7.9964546575413271, -7.2853455385413266, -7.9176148875413261, -8.1636538013413258, -7.1014029023413272, -8.0301433275413263, -8.487717731541327, -9.10054887134133, -8.9849188585413273, -8.487717731541327, -8.487717731541327]
								}, {
									"case":	153,
									"scores":	[-8.30859125254133, -7.9964546575413271, -7.2853455385413266, -7.9176148875413261, -8.1636538013413258, -7.1014029023413272, -8.0301433275413263, -8.487717731541327, -9.10054887134133, -8.9849188585413273, -8.487717731541327, -8.487717731541327]
								}]
						}, {
							"switch":	26,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	704,
							"begin_column":	4,
							"end_line":	708,
							"end_column":	5,
							"patch_codes":	["if (__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) || __is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (Debug((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (php_printf((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (printf((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) && !__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-0.65363990442814623, -1.7516027134281456, -0.15761941142814484, -1.2491672044281459, -2.0070553044281456, -2.0764972134281443, -2.2069536134281442, -2.2293629144281444, -3.6066471144281449, -3.5328025644281458, -2.2293629144281444, -2.2293629144281444]
								}, {
									"case":	2,
									"scores":	[-3.5671415577281445, -4.665104366728146, -3.0711210647281439, -4.1626688577281463, -4.9205569577281461, -4.9899988667281461, -5.1204552667281469, -5.1428645677281466, -6.5201487677281467, -6.4463042177281462, -5.1428645677281466, -5.1428645677281466]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.5671415577281445, -4.665104366728146, -3.0711210647281439, -4.1626688577281463, -4.9205569577281461, -4.9899988667281461, -5.1204552667281469, -5.1428645677281466, -6.5201487677281467, -6.4463042177281462, -5.1428645677281466, -5.1428645677281466]
								}]
						}, {
							"switch":	27,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	704,
							"begin_column":	4,
							"end_line":	708,
							"end_column":	5,
							"patch_codes":	["if (!__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n        _zval_dtor((return_value));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L704\", 12, &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(pos), sizeof (pos), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)) && (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1)) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4521082215413266, -6.5500710305413268, -4.956087728541327, -6.0476355215413271, -6.8055236215413268, -6.8749655305413269, -7.0054219305413268, -7.0278312315413274, -8.40511543154133, -8.331270881541327, -7.0278312315413274, -7.0278312315413274]
								}, {
									"case":	2,
									"scores":	[-5.5418586038413276, -6.6398214128413269, -5.0458381108413279, -6.1373859038413272, -6.8952740038413269, -6.9647159128413261, -7.095172312841326, -7.1175816138413266, -8.4948658138413258, -8.4210212638413253, -7.1175816138413266, -7.1175816138413266]
								}]
						}]
				}, {
					"line":	708,
					"switches":	[{
							"switch":	28,
							"types":	[[], [], [], [], [151, 152], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	709,
							"begin_column":	2,
							"end_line":	709,
							"end_column":	2,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm)))\n    break;\n", "if (__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	2,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	3,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	4,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	5,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	6,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	7,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	8,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	9,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	10,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	11,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	12,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	13,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	14,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	15,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	16,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	17,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	18,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	19,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	20,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	21,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	22,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	23,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	24,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	25,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	26,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	27,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	28,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	29,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	30,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	31,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	32,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	33,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	34,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	35,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	36,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	37,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	38,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	39,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	40,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	41,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	42,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	43,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	44,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	45,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	46,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	47,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	48,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	49,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	50,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	51,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	52,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	53,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	54,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	55,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	56,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	57,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	58,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	59,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	60,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	61,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	62,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	63,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	64,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	65,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	66,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	67,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	68,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	69,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	70,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	71,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	72,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	73,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	74,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	75,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	76,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	77,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	78,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	79,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	80,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	81,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	82,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	83,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	84,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	85,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	86,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	87,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	88,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	89,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	90,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	91,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	92,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	93,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	94,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	95,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	96,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	97,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	98,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	99,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	100,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	101,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	102,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	103,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	104,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	105,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	106,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	107,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	108,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	109,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	110,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	111,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	112,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	113,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	114,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	115,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	116,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	117,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	118,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	119,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	120,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	121,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	122,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	123,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	124,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	125,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	126,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	127,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	128,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	129,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	130,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	131,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	132,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	133,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	134,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	135,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	136,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	137,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	138,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	139,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	140,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	141,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	142,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	143,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	144,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	145,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	146,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	147,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	148,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	149,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	150,
									"scores":	[-4.5989150542238075]
								}, {
									"case":	151,
									"scores":	[-7.187281190223807, -7.5836289750238084, -9.56266086402381, -8.70839270722381, -8.1505709602238063, -7.7939991902238077, -8.04003810402381, -9.44703085122381, -8.4922553202238067]
								}, {
									"case":	152,
									"scores":	[-7.187281190223807, -7.5836289750238084, -9.56266086402381, -8.70839270722381, -8.1505709602238063, -7.7939991902238077, -8.04003810402381, -9.44703085122381, -8.4922553202238067]
								}]
						}, {
							"switch":	29,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	709,
							"begin_column":	4,
							"end_line":	713,
							"end_column":	4,
							"patch_codes":	["if (__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((arg_key_len < 2) || __is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((arg_key_len < 2) && !__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.3436765634281467, -4.6561831154281457, -4.2828611704281467, -5.1196094709281459, -3.7882485934281465, -3.9992483844281463, -4.7571364844281465, -3.8748597304281467, -3.9842213694281465]
								}, {
									"case":	2,
									"scores":	[-3.0367130204281456, -5.3492195724281455, -4.9758976274281457, -5.8126459279281457, -4.4812850504281458, -4.6922848414281457, -5.4501729414281463, -4.5678961874281452, -4.6772578264281464]
								}, {
									"case":	3,
									"scores":	[-3.0367130204281456, -5.3492195724281455, -4.9758976274281457, -5.8126459279281457, -4.4812850504281458, -4.6922848414281457, -5.4501729414281463, -4.5678961874281452, -4.6772578264281464]
								}]
						}, {
							"switch":	30,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	709,
							"begin_column":	4,
							"end_line":	713,
							"end_column":	4,
							"patch_codes":	["if (!__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm)))\n    if (arg_key_len < 2) {\n        php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n        _zval_dtor((return_value));\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L709\", 9, &(arg_key_len), sizeof (arg_key_len), &(return_value), sizeof (return_value), &(input), sizeof (input), &(op), sizeof (op), &(arg_key), sizeof (arg_key), &(index), sizeof (index), &(pos), sizeof (pos), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm)) && (arg_key_len < 2)) {\n    php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n    _zval_dtor((return_value));\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.8684188172238079, -7.1809253692238073, -6.8076034242238075, -7.6443517247238075, -6.3129908472238077, -6.5239906382238075, -7.2818787382238073, -6.3996019842238079, -6.5089636232238082]
								}, {
									"case":	2,
									"scores":	[-5.1692102592238083, -7.4817168112238077, -7.1083948662238079, -7.945143166723807, -6.6137822892238081, -6.8247820802238071, -7.5826701802238077, -6.7003934262238074, -6.8097550652238077]
								}]
						}]
				}, {
					"line":	714,
					"switches":	[{
							"switch":	33,
							"types":	[[], [], [], [], [151, 152], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	715,
							"begin_column":	3,
							"end_line":	715,
							"end_column":	3,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L715\", 12, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    break;\n", "if (__is_neg(\"\", \"L715\", 12, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.1746582005559]
								}, {
									"case":	2,
									"scores":	[-4.1746582005559]
								}, {
									"case":	3,
									"scores":	[-4.1746582005559]
								}, {
									"case":	4,
									"scores":	[-4.1746582005559]
								}, {
									"case":	5,
									"scores":	[-4.1746582005559]
								}, {
									"case":	6,
									"scores":	[-4.1746582005559]
								}, {
									"case":	7,
									"scores":	[-4.1746582005559]
								}, {
									"case":	8,
									"scores":	[-4.1746582005559]
								}, {
									"case":	9,
									"scores":	[-4.1746582005559]
								}, {
									"case":	10,
									"scores":	[-4.1746582005559]
								}, {
									"case":	11,
									"scores":	[-4.1746582005559]
								}, {
									"case":	12,
									"scores":	[-4.1746582005559]
								}, {
									"case":	13,
									"scores":	[-4.1746582005559]
								}, {
									"case":	14,
									"scores":	[-4.1746582005559]
								}, {
									"case":	15,
									"scores":	[-4.1746582005559]
								}, {
									"case":	16,
									"scores":	[-4.1746582005559]
								}, {
									"case":	17,
									"scores":	[-4.1746582005559]
								}, {
									"case":	18,
									"scores":	[-4.1746582005559]
								}, {
									"case":	19,
									"scores":	[-4.1746582005559]
								}, {
									"case":	20,
									"scores":	[-4.1746582005559]
								}, {
									"case":	21,
									"scores":	[-4.1746582005559]
								}, {
									"case":	22,
									"scores":	[-4.1746582005559]
								}, {
									"case":	23,
									"scores":	[-4.1746582005559]
								}, {
									"case":	24,
									"scores":	[-4.1746582005559]
								}, {
									"case":	25,
									"scores":	[-4.1746582005559]
								}, {
									"case":	26,
									"scores":	[-4.1746582005559]
								}, {
									"case":	27,
									"scores":	[-4.1746582005559]
								}, {
									"case":	28,
									"scores":	[-4.1746582005559]
								}, {
									"case":	29,
									"scores":	[-4.1746582005559]
								}, {
									"case":	30,
									"scores":	[-4.1746582005559]
								}, {
									"case":	31,
									"scores":	[-4.1746582005559]
								}, {
									"case":	32,
									"scores":	[-4.1746582005559]
								}, {
									"case":	33,
									"scores":	[-4.1746582005559]
								}, {
									"case":	34,
									"scores":	[-4.1746582005559]
								}, {
									"case":	35,
									"scores":	[-4.1746582005559]
								}, {
									"case":	36,
									"scores":	[-4.1746582005559]
								}, {
									"case":	37,
									"scores":	[-4.1746582005559]
								}, {
									"case":	38,
									"scores":	[-4.1746582005559]
								}, {
									"case":	39,
									"scores":	[-4.1746582005559]
								}, {
									"case":	40,
									"scores":	[-4.1746582005559]
								}, {
									"case":	41,
									"scores":	[-4.1746582005559]
								}, {
									"case":	42,
									"scores":	[-4.1746582005559]
								}, {
									"case":	43,
									"scores":	[-4.1746582005559]
								}, {
									"case":	44,
									"scores":	[-4.1746582005559]
								}, {
									"case":	45,
									"scores":	[-4.1746582005559]
								}, {
									"case":	46,
									"scores":	[-4.1746582005559]
								}, {
									"case":	47,
									"scores":	[-4.1746582005559]
								}, {
									"case":	48,
									"scores":	[-4.1746582005559]
								}, {
									"case":	49,
									"scores":	[-4.1746582005559]
								}, {
									"case":	50,
									"scores":	[-4.1746582005559]
								}, {
									"case":	51,
									"scores":	[-4.1746582005559]
								}, {
									"case":	52,
									"scores":	[-4.1746582005559]
								}, {
									"case":	53,
									"scores":	[-4.1746582005559]
								}, {
									"case":	54,
									"scores":	[-4.1746582005559]
								}, {
									"case":	55,
									"scores":	[-4.1746582005559]
								}, {
									"case":	56,
									"scores":	[-4.1746582005559]
								}, {
									"case":	57,
									"scores":	[-4.1746582005559]
								}, {
									"case":	58,
									"scores":	[-4.1746582005559]
								}, {
									"case":	59,
									"scores":	[-4.1746582005559]
								}, {
									"case":	60,
									"scores":	[-4.1746582005559]
								}, {
									"case":	61,
									"scores":	[-4.1746582005559]
								}, {
									"case":	62,
									"scores":	[-4.1746582005559]
								}, {
									"case":	63,
									"scores":	[-4.1746582005559]
								}, {
									"case":	64,
									"scores":	[-4.1746582005559]
								}, {
									"case":	65,
									"scores":	[-4.1746582005559]
								}, {
									"case":	66,
									"scores":	[-4.1746582005559]
								}, {
									"case":	67,
									"scores":	[-4.1746582005559]
								}, {
									"case":	68,
									"scores":	[-4.1746582005559]
								}, {
									"case":	69,
									"scores":	[-4.1746582005559]
								}, {
									"case":	70,
									"scores":	[-4.1746582005559]
								}, {
									"case":	71,
									"scores":	[-4.1746582005559]
								}, {
									"case":	72,
									"scores":	[-4.1746582005559]
								}, {
									"case":	73,
									"scores":	[-4.1746582005559]
								}, {
									"case":	74,
									"scores":	[-4.1746582005559]
								}, {
									"case":	75,
									"scores":	[-4.1746582005559]
								}, {
									"case":	76,
									"scores":	[-4.1746582005559]
								}, {
									"case":	77,
									"scores":	[-4.1746582005559]
								}, {
									"case":	78,
									"scores":	[-4.1746582005559]
								}, {
									"case":	79,
									"scores":	[-4.1746582005559]
								}, {
									"case":	80,
									"scores":	[-4.1746582005559]
								}, {
									"case":	81,
									"scores":	[-4.1746582005559]
								}, {
									"case":	82,
									"scores":	[-4.1746582005559]
								}, {
									"case":	83,
									"scores":	[-4.1746582005559]
								}, {
									"case":	84,
									"scores":	[-4.1746582005559]
								}, {
									"case":	85,
									"scores":	[-4.1746582005559]
								}, {
									"case":	86,
									"scores":	[-4.1746582005559]
								}, {
									"case":	87,
									"scores":	[-4.1746582005559]
								}, {
									"case":	88,
									"scores":	[-4.1746582005559]
								}, {
									"case":	89,
									"scores":	[-4.1746582005559]
								}, {
									"case":	90,
									"scores":	[-4.1746582005559]
								}, {
									"case":	91,
									"scores":	[-4.1746582005559]
								}, {
									"case":	92,
									"scores":	[-4.1746582005559]
								}, {
									"case":	93,
									"scores":	[-4.1746582005559]
								}, {
									"case":	94,
									"scores":	[-4.1746582005559]
								}, {
									"case":	95,
									"scores":	[-4.1746582005559]
								}, {
									"case":	96,
									"scores":	[-4.1746582005559]
								}, {
									"case":	97,
									"scores":	[-4.1746582005559]
								}, {
									"case":	98,
									"scores":	[-4.1746582005559]
								}, {
									"case":	99,
									"scores":	[-4.1746582005559]
								}, {
									"case":	100,
									"scores":	[-4.1746582005559]
								}, {
									"case":	101,
									"scores":	[-4.1746582005559]
								}, {
									"case":	102,
									"scores":	[-4.1746582005559]
								}, {
									"case":	103,
									"scores":	[-4.1746582005559]
								}, {
									"case":	104,
									"scores":	[-4.1746582005559]
								}, {
									"case":	105,
									"scores":	[-4.1746582005559]
								}, {
									"case":	106,
									"scores":	[-4.1746582005559]
								}, {
									"case":	107,
									"scores":	[-4.1746582005559]
								}, {
									"case":	108,
									"scores":	[-4.1746582005559]
								}, {
									"case":	109,
									"scores":	[-4.1746582005559]
								}, {
									"case":	110,
									"scores":	[-4.1746582005559]
								}, {
									"case":	111,
									"scores":	[-4.1746582005559]
								}, {
									"case":	112,
									"scores":	[-4.1746582005559]
								}, {
									"case":	113,
									"scores":	[-4.1746582005559]
								}, {
									"case":	114,
									"scores":	[-4.1746582005559]
								}, {
									"case":	115,
									"scores":	[-4.1746582005559]
								}, {
									"case":	116,
									"scores":	[-4.1746582005559]
								}, {
									"case":	117,
									"scores":	[-4.1746582005559]
								}, {
									"case":	118,
									"scores":	[-4.1746582005559]
								}, {
									"case":	119,
									"scores":	[-4.1746582005559]
								}, {
									"case":	120,
									"scores":	[-4.1746582005559]
								}, {
									"case":	121,
									"scores":	[-4.1746582005559]
								}, {
									"case":	122,
									"scores":	[-4.1746582005559]
								}, {
									"case":	123,
									"scores":	[-4.1746582005559]
								}, {
									"case":	124,
									"scores":	[-4.1746582005559]
								}, {
									"case":	125,
									"scores":	[-4.1746582005559]
								}, {
									"case":	126,
									"scores":	[-4.1746582005559]
								}, {
									"case":	127,
									"scores":	[-4.1746582005559]
								}, {
									"case":	128,
									"scores":	[-4.1746582005559]
								}, {
									"case":	129,
									"scores":	[-4.1746582005559]
								}, {
									"case":	130,
									"scores":	[-4.1746582005559]
								}, {
									"case":	131,
									"scores":	[-4.1746582005559]
								}, {
									"case":	132,
									"scores":	[-4.1746582005559]
								}, {
									"case":	133,
									"scores":	[-4.1746582005559]
								}, {
									"case":	134,
									"scores":	[-4.1746582005559]
								}, {
									"case":	135,
									"scores":	[-4.1746582005559]
								}, {
									"case":	136,
									"scores":	[-4.1746582005559]
								}, {
									"case":	137,
									"scores":	[-4.1746582005559]
								}, {
									"case":	138,
									"scores":	[-4.1746582005559]
								}, {
									"case":	139,
									"scores":	[-4.1746582005559]
								}, {
									"case":	140,
									"scores":	[-4.1746582005559]
								}, {
									"case":	141,
									"scores":	[-4.1746582005559]
								}, {
									"case":	142,
									"scores":	[-4.1746582005559]
								}, {
									"case":	143,
									"scores":	[-4.1746582005559]
								}, {
									"case":	144,
									"scores":	[-4.1746582005559]
								}, {
									"case":	145,
									"scores":	[-4.1746582005559]
								}, {
									"case":	146,
									"scores":	[-4.1746582005559]
								}, {
									"case":	147,
									"scores":	[-4.1746582005559]
								}, {
									"case":	148,
									"scores":	[-4.1746582005559]
								}, {
									"case":	149,
									"scores":	[-4.1746582005559]
								}, {
									"case":	150,
									"scores":	[-4.1746582005559]
								}, {
									"case":	151,
									"scores":	[-4.8887472027559, -4.8164970059559, -4.1046728889559, -5.7440551717559, -5.9293901489559, -5.6718049749559, -5.7089053749559, -5.4609158579559, -5.7069547717559, -6.2750620319559, -6.2750620319559, -6.2750620319559]
								}, {
									"case":	152,
									"scores":	[-4.8887472027559, -4.8164970059559, -4.1046728889559, -5.7440551717559, -5.9293901489559, -5.6718049749559, -5.7089053749559, -5.4609158579559, -5.7069547717559, -6.2750620319559, -6.2750620319559, -6.2750620319559]
								}]
						}, {
							"switch":	34,
							"types":	[[], [], [1], [], [], [], [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], [], [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], [], [], [88]],
							"begin_line":	715,
							"begin_column":	5,
							"end_line":	715,
							"end_column":	57,
							"patch_codes":	["if (!__is_neg(\"\", \"L715\", 12, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n", "__assert_fail(return_value, arg_key, arg_key_len, 0)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, -1)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 0)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 1)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 16777216)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 2)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 3)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 33554432)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 4)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, 516)", "add_assoc_bool_ex(return_value, arg_key, arg_key_len, le_index_ptr)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, -1)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 0)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 1)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 16777216)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 2)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 3)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 33554432)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 4)", "add_assoc_long_ex(return_value, arg_key, arg_key_len, 516)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, -1)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 0)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 1)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 16777216)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 2)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 3)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 33554432)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 4)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, 516)", "add_assoc_resource_ex(return_value, arg_key, arg_key_len, le_index_ptr)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, 0)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, input)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, return_value)", "add_next_index_stringl(return_value, arg_key, arg_key_len, -1)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 0)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 1)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 16777216)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 2)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 3)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 33554432)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 4)", "add_next_index_stringl(return_value, arg_key, arg_key_len, 516)", "add_next_index_stringl(return_value, arg_key, arg_key_len, le_index_ptr)", "add_property_bool_ex(return_value, arg_key, arg_key_len, -1)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 0)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 1)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 16777216)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 2)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 3)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 33554432)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 4)", "add_property_bool_ex(return_value, arg_key, arg_key_len, 516)", "add_property_bool_ex(return_value, arg_key, arg_key_len, le_index_ptr)", "add_property_long_ex(return_value, arg_key, arg_key_len, -1)", "add_property_long_ex(return_value, arg_key, arg_key_len, 0)", "add_property_long_ex(return_value, arg_key, arg_key_len, 1)", "add_property_long_ex(return_value, arg_key, arg_key_len, 16777216)", "add_property_long_ex(return_value, arg_key, arg_key_len, 2)", "add_property_long_ex(return_value, arg_key, arg_key_len, 3)", "add_property_long_ex(return_value, arg_key, arg_key_len, 33554432)", "add_property_long_ex(return_value, arg_key, arg_key_len, 4)", "add_property_long_ex(return_value, arg_key, arg_key_len, 516)", "add_property_resource_ex(return_value, arg_key, arg_key_len, -1)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 0)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 1)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 16777216)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 2)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 3)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 33554432)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 4)", "add_property_resource_ex(return_value, arg_key, arg_key_len, 516)", "add_property_zval_ex(return_value, arg_key, arg_key_len, 0)", "add_property_zval_ex(return_value, arg_key, arg_key_len, input)", "add_property_zval_ex(return_value, arg_key, arg_key_len, return_value)", "zend_hash_find(return_value, arg_key, arg_key_len, 0)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, -1)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 0)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 1)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 16777216)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 2)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 3)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 33554432)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 4)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, 516)", "zend_hash_quick_exists(return_value, arg_key, arg_key_len, index)", "zend_symtable_find(return_value, arg_key, arg_key_len, 0)", "{\n}\n", "Debug(return_value, arg_key, arg_key_len)", "_php_stream_printf(return_value, arg_key, arg_key_len)", "add_property_null_ex(return_value, arg_key, arg_key_len)", "ap_php_asprintf(return_value, arg_key, arg_key_len)", "execl(return_value, arg_key, arg_key_len)", "execle(return_value, arg_key, arg_key_len)", "execlp(return_value, arg_key, arg_key_len)", "fprintf(return_value, arg_key, arg_key_len)", "php_printf(return_value, arg_key, arg_key_len)", "php_sprintf(return_value, arg_key, arg_key_len)", "printf(return_value, arg_key, arg_key_len)", "sprintf(return_value, arg_key, arg_key_len)", "zend_hash_add_empty_element(return_value, arg_key, arg_key_len)", "zend_hash_exists(return_value, arg_key, arg_key_len)", "zend_str_tolower_copy(return_value, arg_key, arg_key_len)", "zend_symtable_del(return_value, arg_key, arg_key_len)", "zend_symtable_exists(return_value, arg_key, arg_key_len)", "add_assoc_null_ex((&arg_elm), arg_key, arg_key_len)", "add_assoc_null_ex((&arg_key), arg_key, arg_key_len)", "add_assoc_null_ex((&arg_key_len), arg_key, arg_key_len)", "add_assoc_null_ex((&index), arg_key, arg_key_len)", "add_assoc_null_ex((&input), arg_key, arg_key_len)", "add_assoc_null_ex((&op), arg_key, arg_key_len)", "add_assoc_null_ex((&pos), arg_key, arg_key_len)", "add_assoc_null_ex((&return_value), arg_key, arg_key_len)", "add_assoc_null_ex((&tmp), arg_key, arg_key_len)", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (&arg_elm), arg_key_len)", "add_assoc_null_ex(return_value, (&arg_key), arg_key_len)", "add_assoc_null_ex(return_value, (&arg_key_len), arg_key_len)", "add_assoc_null_ex(return_value, (&index), arg_key_len)", "add_assoc_null_ex(return_value, (&input), arg_key_len)", "add_assoc_null_ex(return_value, (&op), arg_key_len)", "add_assoc_null_ex(return_value, (&pos), arg_key_len)", "add_assoc_null_ex(return_value, (&return_value), arg_key_len)", "add_assoc_null_ex(return_value, (&tmp), arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_null_ex(return_value, arg_key, (0 * arg_key_len))", "add_assoc_null_ex(return_value, arg_key, (0 * index))", "add_assoc_null_ex(return_value, arg_key, (arg_elm != 0))", "add_assoc_null_ex(return_value, arg_key, (arg_elm == 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key != 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key == 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len != 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len != index))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len * index))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len + 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len + index))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len - 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len - index))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len == 0))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len == index))", "add_assoc_null_ex(return_value, arg_key, (arg_key_len))", "add_assoc_null_ex(return_value, arg_key, (index != 0))", "add_assoc_null_ex(return_value, arg_key, (index * arg_key_len))", "add_assoc_null_ex(return_value, arg_key, (index + 0))", "add_assoc_null_ex(return_value, arg_key, (index - 0))", "add_assoc_null_ex(return_value, arg_key, (index == 0))", "add_assoc_null_ex(return_value, arg_key, (input != 0))", "add_assoc_null_ex(return_value, arg_key, (input != return_value))", "add_assoc_null_ex(return_value, arg_key, (input == 0))", "add_assoc_null_ex(return_value, arg_key, (input == return_value))", "add_assoc_null_ex(return_value, arg_key, (op != 0))", "add_assoc_null_ex(return_value, arg_key, (op != arg_elm))", "add_assoc_null_ex(return_value, arg_key, (op != tmp))", "add_assoc_null_ex(return_value, arg_key, (op == 0))", "add_assoc_null_ex(return_value, arg_key, (op == arg_elm))", "add_assoc_null_ex(return_value, arg_key, (op == tmp))", "add_assoc_null_ex(return_value, arg_key, (pos != 0))", "add_assoc_null_ex(return_value, arg_key, (pos == 0))", "add_assoc_null_ex(return_value, arg_key, (return_value != 0))", "add_assoc_null_ex(return_value, arg_key, (return_value == 0))", "add_assoc_null_ex(return_value, arg_key, (tmp != 0))", "add_assoc_null_ex(return_value, arg_key, (tmp != arg_elm))", "add_assoc_null_ex(return_value, arg_key, (tmp == 0))", "add_assoc_null_ex(return_value, arg_key, (tmp == arg_elm))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0257630705559, -4.4427841705559, -3.6515131405558989, -5.7391983705559, -5.4700171705558986, -5.1562194705559, -5.4505702705558985, -4.6869594705559, -5.4448475705559, -5.2118042805559, -5.2118042805559, -5.2118042805559]
								}, {
									"case":	2,
									"scores":	[-4.1746582005559]
								}, {
									"case":	3,
									"scores":	[-4.1746582005559]
								}, {
									"case":	4,
									"scores":	[-4.1746582005559]
								}, {
									"case":	5,
									"scores":	[-4.1746582005559]
								}, {
									"case":	6,
									"scores":	[-4.1746582005559]
								}, {
									"case":	7,
									"scores":	[-4.1746582005559]
								}, {
									"case":	8,
									"scores":	[-4.1746582005559]
								}, {
									"case":	9,
									"scores":	[-4.1746582005559]
								}, {
									"case":	10,
									"scores":	[-4.1746582005559]
								}, {
									"case":	11,
									"scores":	[-4.1746582005559]
								}, {
									"case":	12,
									"scores":	[-4.1746582005559]
								}, {
									"case":	13,
									"scores":	[-4.1746582005559]
								}, {
									"case":	14,
									"scores":	[-4.1746582005559]
								}, {
									"case":	15,
									"scores":	[-4.1746582005559]
								}, {
									"case":	16,
									"scores":	[-4.1746582005559]
								}, {
									"case":	17,
									"scores":	[-4.1746582005559]
								}, {
									"case":	18,
									"scores":	[-4.1746582005559]
								}, {
									"case":	19,
									"scores":	[-4.1746582005559]
								}, {
									"case":	20,
									"scores":	[-4.1746582005559]
								}, {
									"case":	21,
									"scores":	[-4.1746582005559]
								}, {
									"case":	22,
									"scores":	[-4.1746582005559]
								}, {
									"case":	23,
									"scores":	[-4.1746582005559]
								}, {
									"case":	24,
									"scores":	[-4.1746582005559]
								}, {
									"case":	25,
									"scores":	[-4.1746582005559]
								}, {
									"case":	26,
									"scores":	[-4.1746582005559]
								}, {
									"case":	27,
									"scores":	[-4.1746582005559]
								}, {
									"case":	28,
									"scores":	[-4.1746582005559]
								}, {
									"case":	29,
									"scores":	[-4.1746582005559]
								}, {
									"case":	30,
									"scores":	[-4.1746582005559]
								}, {
									"case":	31,
									"scores":	[-4.1746582005559]
								}, {
									"case":	32,
									"scores":	[-4.1746582005559]
								}, {
									"case":	33,
									"scores":	[-4.1746582005559]
								}, {
									"case":	34,
									"scores":	[-4.1746582005559]
								}, {
									"case":	35,
									"scores":	[-4.1746582005559]
								}, {
									"case":	36,
									"scores":	[-4.1746582005559]
								}, {
									"case":	37,
									"scores":	[-4.1746582005559]
								}, {
									"case":	38,
									"scores":	[-4.1746582005559]
								}, {
									"case":	39,
									"scores":	[-4.1746582005559]
								}, {
									"case":	40,
									"scores":	[-4.1746582005559]
								}, {
									"case":	41,
									"scores":	[-4.1746582005559]
								}, {
									"case":	42,
									"scores":	[-4.1746582005559]
								}, {
									"case":	43,
									"scores":	[-4.1746582005559]
								}, {
									"case":	44,
									"scores":	[-4.1746582005559]
								}, {
									"case":	45,
									"scores":	[-4.1746582005559]
								}, {
									"case":	46,
									"scores":	[-4.1746582005559]
								}, {
									"case":	47,
									"scores":	[-4.1746582005559]
								}, {
									"case":	48,
									"scores":	[-4.1746582005559]
								}, {
									"case":	49,
									"scores":	[-4.1746582005559]
								}, {
									"case":	50,
									"scores":	[-4.1746582005559]
								}, {
									"case":	51,
									"scores":	[-4.1746582005559]
								}, {
									"case":	52,
									"scores":	[-4.1746582005559]
								}, {
									"case":	53,
									"scores":	[-4.1746582005559]
								}, {
									"case":	54,
									"scores":	[-4.1746582005559]
								}, {
									"case":	55,
									"scores":	[-4.1746582005559]
								}, {
									"case":	56,
									"scores":	[-4.1746582005559]
								}, {
									"case":	57,
									"scores":	[-4.1746582005559]
								}, {
									"case":	58,
									"scores":	[-4.1746582005559]
								}, {
									"case":	59,
									"scores":	[-4.1746582005559]
								}, {
									"case":	60,
									"scores":	[-4.1746582005559]
								}, {
									"case":	61,
									"scores":	[-4.1746582005559]
								}, {
									"case":	62,
									"scores":	[-4.1746582005559]
								}, {
									"case":	63,
									"scores":	[-4.1746582005559]
								}, {
									"case":	64,
									"scores":	[-4.1746582005559]
								}, {
									"case":	65,
									"scores":	[-4.1746582005559]
								}, {
									"case":	66,
									"scores":	[-4.1746582005559]
								}, {
									"case":	67,
									"scores":	[-4.1746582005559]
								}, {
									"case":	68,
									"scores":	[-4.1746582005559]
								}, {
									"case":	69,
									"scores":	[-4.1746582005559]
								}, {
									"case":	70,
									"scores":	[-4.1746582005559]
								}, {
									"case":	71,
									"scores":	[-4.1746582005559]
								}, {
									"case":	72,
									"scores":	[-4.1746582005559]
								}, {
									"case":	73,
									"scores":	[-4.1746582005559]
								}, {
									"case":	74,
									"scores":	[-4.1746582005559]
								}, {
									"case":	75,
									"scores":	[-4.1746582005559]
								}, {
									"case":	76,
									"scores":	[-4.1746582005559]
								}, {
									"case":	77,
									"scores":	[-4.1746582005559]
								}, {
									"case":	78,
									"scores":	[-4.1746582005559]
								}, {
									"case":	79,
									"scores":	[-4.1746582005559]
								}, {
									"case":	80,
									"scores":	[-4.1746582005559]
								}, {
									"case":	81,
									"scores":	[-4.1746582005559]
								}, {
									"case":	82,
									"scores":	[-4.1746582005559]
								}, {
									"case":	83,
									"scores":	[-4.1746582005559]
								}, {
									"case":	84,
									"scores":	[-4.1746582005559]
								}, {
									"case":	85,
									"scores":	[-4.1746582005559]
								}, {
									"case":	86,
									"scores":	[-4.1746582005559]
								}, {
									"case":	87,
									"scores":	[-4.1746582005559]
								}, {
									"case":	88,
									"scores":	[-4.1746582005559]
								}, {
									"case":	89,
									"scores":	[-4.1746582005559]
								}, {
									"case":	90,
									"scores":	[-4.1746582005559]
								}, {
									"case":	91,
									"scores":	[-4.1746582005559]
								}, {
									"case":	92,
									"scores":	[-4.1746582005559]
								}, {
									"case":	93,
									"scores":	[-4.1746582005559]
								}, {
									"case":	94,
									"scores":	[-4.1746582005559]
								}, {
									"case":	95,
									"scores":	[-4.1746582005559]
								}, {
									"case":	96,
									"scores":	[-4.1746582005559]
								}, {
									"case":	97,
									"scores":	[-4.1746582005559]
								}, {
									"case":	98,
									"scores":	[-4.1746582005559]
								}, {
									"case":	99,
									"scores":	[-4.1746582005559]
								}, {
									"case":	100,
									"scores":	[-4.1746582005559]
								}, {
									"case":	101,
									"scores":	[-4.1746582005559]
								}, {
									"case":	102,
									"scores":	[-4.1746582005559]
								}, {
									"case":	103,
									"scores":	[-4.1746582005559]
								}, {
									"case":	104,
									"scores":	[-4.1746582005559]
								}, {
									"case":	105,
									"scores":	[-4.1746582005559]
								}, {
									"case":	106,
									"scores":	[-4.1746582005559]
								}, {
									"case":	107,
									"scores":	[-4.1746582005559]
								}, {
									"case":	108,
									"scores":	[-4.1746582005559]
								}, {
									"case":	109,
									"scores":	[-4.1746582005559]
								}, {
									"case":	110,
									"scores":	[-4.1746582005559]
								}, {
									"case":	111,
									"scores":	[-4.1746582005559]
								}, {
									"case":	112,
									"scores":	[-4.1746582005559]
								}, {
									"case":	113,
									"scores":	[-4.1746582005559]
								}, {
									"case":	114,
									"scores":	[-4.1746582005559]
								}, {
									"case":	115,
									"scores":	[-4.1746582005559]
								}, {
									"case":	116,
									"scores":	[-4.1746582005559]
								}, {
									"case":	117,
									"scores":	[-4.1746582005559]
								}, {
									"case":	118,
									"scores":	[-4.1746582005559]
								}, {
									"case":	119,
									"scores":	[-4.1746582005559]
								}, {
									"case":	120,
									"scores":	[-4.1746582005559]
								}, {
									"case":	121,
									"scores":	[-4.1746582005559]
								}, {
									"case":	122,
									"scores":	[-4.1746582005559]
								}, {
									"case":	123,
									"scores":	[-4.1746582005559]
								}, {
									"case":	124,
									"scores":	[-4.1746582005559]
								}, {
									"case":	125,
									"scores":	[-4.1746582005559]
								}, {
									"case":	126,
									"scores":	[-4.1746582005559]
								}, {
									"case":	127,
									"scores":	[-4.1746582005559]
								}, {
									"case":	128,
									"scores":	[-4.1746582005559]
								}, {
									"case":	129,
									"scores":	[-4.1746582005559]
								}, {
									"case":	130,
									"scores":	[-4.1746582005559]
								}, {
									"case":	131,
									"scores":	[-4.1746582005559]
								}, {
									"case":	132,
									"scores":	[-4.1746582005559]
								}, {
									"case":	133,
									"scores":	[-4.1746582005559]
								}, {
									"case":	134,
									"scores":	[-4.1746582005559]
								}, {
									"case":	135,
									"scores":	[-4.1746582005559]
								}, {
									"case":	136,
									"scores":	[-4.1746582005559]
								}, {
									"case":	137,
									"scores":	[-4.1746582005559]
								}, {
									"case":	138,
									"scores":	[-4.1746582005559]
								}, {
									"case":	139,
									"scores":	[-4.1746582005559]
								}, {
									"case":	140,
									"scores":	[-4.1746582005559]
								}, {
									"case":	141,
									"scores":	[-4.1746582005559]
								}, {
									"case":	142,
									"scores":	[-4.1746582005559]
								}, {
									"case":	143,
									"scores":	[-4.1746582005559]
								}, {
									"case":	144,
									"scores":	[-4.1746582005559]
								}, {
									"case":	145,
									"scores":	[-4.1746582005559]
								}, {
									"case":	146,
									"scores":	[-4.1746582005559]
								}, {
									"case":	147,
									"scores":	[-4.1746582005559]
								}, {
									"case":	148,
									"scores":	[-4.1746582005559]
								}, {
									"case":	149,
									"scores":	[-4.1746582005559]
								}, {
									"case":	150,
									"scores":	[-4.1746582005559]
								}, {
									"case":	151,
									"scores":	[-4.1746582005559]
								}, {
									"case":	152,
									"scores":	[-4.1746582005559]
								}, {
									"case":	153,
									"scores":	[-4.1746582005559]
								}, {
									"case":	154,
									"scores":	[-4.1746582005559]
								}, {
									"case":	155,
									"scores":	[-4.1746582005559]
								}, {
									"case":	156,
									"scores":	[-4.1746582005559]
								}, {
									"case":	157,
									"scores":	[-4.1746582005559]
								}, {
									"case":	158,
									"scores":	[-4.1746582005559]
								}, {
									"case":	159,
									"scores":	[-4.1746582005559]
								}, {
									"case":	160,
									"scores":	[-4.1746582005559]
								}, {
									"case":	161,
									"scores":	[-4.1746582005559]
								}, {
									"case":	162,
									"scores":	[-4.1746582005559]
								}, {
									"case":	163,
									"scores":	[-4.1746582005559]
								}, {
									"case":	164,
									"scores":	[-4.1746582005559]
								}, {
									"case":	165,
									"scores":	[-4.1746582005559]
								}]
						}]
				}, {
					"line":	716,
					"switches":	[]
				}, {
					"line":	718,
					"switches":	[{
							"switch":	35,
							"types":	[[], [], [], [], [186, 187], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], [], [], [], [], [], []],
							"begin_line":	719,
							"begin_column":	3,
							"end_line":	719,
							"end_column":	3,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (nval)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (nval)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (nval)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (nval)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (nval)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (nval)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((nval)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((nval)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((nval))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((nval))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((nval)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((nval))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(nval)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((nval), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex((input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex(return_value, (arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((nval))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((nval))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((nval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((nval))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((nval))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(nval), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&nval, -1, (arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (op), 0, 33554432)", "php_filter_call(&nval, -1, (tmp), 0, 33554432)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(nval), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((nval))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((nval)))", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&nval, -1, arg_elm, 0, 33554432)", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L719\", 10, &(nval), sizeof (nval), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    break;\n", "if (__is_neg(\"\", \"L719\", 10, &(nval), sizeof (nval), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.86155024935156]
								}, {
									"case":	2,
									"scores":	[-4.86155024935156]
								}, {
									"case":	3,
									"scores":	[-4.86155024935156]
								}, {
									"case":	4,
									"scores":	[-4.86155024935156]
								}, {
									"case":	5,
									"scores":	[-4.86155024935156]
								}, {
									"case":	6,
									"scores":	[-4.86155024935156]
								}, {
									"case":	7,
									"scores":	[-4.86155024935156]
								}, {
									"case":	8,
									"scores":	[-4.86155024935156]
								}, {
									"case":	9,
									"scores":	[-4.86155024935156]
								}, {
									"case":	10,
									"scores":	[-4.86155024935156]
								}, {
									"case":	11,
									"scores":	[-4.86155024935156]
								}, {
									"case":	12,
									"scores":	[-4.86155024935156]
								}, {
									"case":	13,
									"scores":	[-4.86155024935156]
								}, {
									"case":	14,
									"scores":	[-4.86155024935156]
								}, {
									"case":	15,
									"scores":	[-4.86155024935156]
								}, {
									"case":	16,
									"scores":	[-4.86155024935156]
								}, {
									"case":	17,
									"scores":	[-4.86155024935156]
								}, {
									"case":	18,
									"scores":	[-4.86155024935156]
								}, {
									"case":	19,
									"scores":	[-4.86155024935156]
								}, {
									"case":	20,
									"scores":	[-4.86155024935156]
								}, {
									"case":	21,
									"scores":	[-4.86155024935156]
								}, {
									"case":	22,
									"scores":	[-4.86155024935156]
								}, {
									"case":	23,
									"scores":	[-4.86155024935156]
								}, {
									"case":	24,
									"scores":	[-4.86155024935156]
								}, {
									"case":	25,
									"scores":	[-4.86155024935156]
								}, {
									"case":	26,
									"scores":	[-4.86155024935156]
								}, {
									"case":	27,
									"scores":	[-4.86155024935156]
								}, {
									"case":	28,
									"scores":	[-4.86155024935156]
								}, {
									"case":	29,
									"scores":	[-4.86155024935156]
								}, {
									"case":	30,
									"scores":	[-4.86155024935156]
								}, {
									"case":	31,
									"scores":	[-4.86155024935156]
								}, {
									"case":	32,
									"scores":	[-4.86155024935156]
								}, {
									"case":	33,
									"scores":	[-4.86155024935156]
								}, {
									"case":	34,
									"scores":	[-4.86155024935156]
								}, {
									"case":	35,
									"scores":	[-4.86155024935156]
								}, {
									"case":	36,
									"scores":	[-4.86155024935156]
								}, {
									"case":	37,
									"scores":	[-4.86155024935156]
								}, {
									"case":	38,
									"scores":	[-4.86155024935156]
								}, {
									"case":	39,
									"scores":	[-4.86155024935156]
								}, {
									"case":	40,
									"scores":	[-4.86155024935156]
								}, {
									"case":	41,
									"scores":	[-4.86155024935156]
								}, {
									"case":	42,
									"scores":	[-4.86155024935156]
								}, {
									"case":	43,
									"scores":	[-4.86155024935156]
								}, {
									"case":	44,
									"scores":	[-4.86155024935156]
								}, {
									"case":	45,
									"scores":	[-4.86155024935156]
								}, {
									"case":	46,
									"scores":	[-4.86155024935156]
								}, {
									"case":	47,
									"scores":	[-4.86155024935156]
								}, {
									"case":	48,
									"scores":	[-4.86155024935156]
								}, {
									"case":	49,
									"scores":	[-4.86155024935156]
								}, {
									"case":	50,
									"scores":	[-4.86155024935156]
								}, {
									"case":	51,
									"scores":	[-4.86155024935156]
								}, {
									"case":	52,
									"scores":	[-4.86155024935156]
								}, {
									"case":	53,
									"scores":	[-4.86155024935156]
								}, {
									"case":	54,
									"scores":	[-4.86155024935156]
								}, {
									"case":	55,
									"scores":	[-4.86155024935156]
								}, {
									"case":	56,
									"scores":	[-4.86155024935156]
								}, {
									"case":	57,
									"scores":	[-4.86155024935156]
								}, {
									"case":	58,
									"scores":	[-4.86155024935156]
								}, {
									"case":	59,
									"scores":	[-4.86155024935156]
								}, {
									"case":	60,
									"scores":	[-4.86155024935156]
								}, {
									"case":	61,
									"scores":	[-4.86155024935156]
								}, {
									"case":	62,
									"scores":	[-4.86155024935156]
								}, {
									"case":	63,
									"scores":	[-4.86155024935156]
								}, {
									"case":	64,
									"scores":	[-4.86155024935156]
								}, {
									"case":	65,
									"scores":	[-4.86155024935156]
								}, {
									"case":	66,
									"scores":	[-4.86155024935156]
								}, {
									"case":	67,
									"scores":	[-4.86155024935156]
								}, {
									"case":	68,
									"scores":	[-4.86155024935156]
								}, {
									"case":	69,
									"scores":	[-4.86155024935156]
								}, {
									"case":	70,
									"scores":	[-4.86155024935156]
								}, {
									"case":	71,
									"scores":	[-4.86155024935156]
								}, {
									"case":	72,
									"scores":	[-4.86155024935156]
								}, {
									"case":	73,
									"scores":	[-4.86155024935156]
								}, {
									"case":	74,
									"scores":	[-4.86155024935156]
								}, {
									"case":	75,
									"scores":	[-4.86155024935156]
								}, {
									"case":	76,
									"scores":	[-4.86155024935156]
								}, {
									"case":	77,
									"scores":	[-4.86155024935156]
								}, {
									"case":	78,
									"scores":	[-4.86155024935156]
								}, {
									"case":	79,
									"scores":	[-4.86155024935156]
								}, {
									"case":	80,
									"scores":	[-4.86155024935156]
								}, {
									"case":	81,
									"scores":	[-4.86155024935156]
								}, {
									"case":	82,
									"scores":	[-4.86155024935156]
								}, {
									"case":	83,
									"scores":	[-4.86155024935156]
								}, {
									"case":	84,
									"scores":	[-4.86155024935156]
								}, {
									"case":	85,
									"scores":	[-4.86155024935156]
								}, {
									"case":	86,
									"scores":	[-4.86155024935156]
								}, {
									"case":	87,
									"scores":	[-4.86155024935156]
								}, {
									"case":	88,
									"scores":	[-4.86155024935156]
								}, {
									"case":	89,
									"scores":	[-4.86155024935156]
								}, {
									"case":	90,
									"scores":	[-4.86155024935156]
								}, {
									"case":	91,
									"scores":	[-4.86155024935156]
								}, {
									"case":	92,
									"scores":	[-4.86155024935156]
								}, {
									"case":	93,
									"scores":	[-4.86155024935156]
								}, {
									"case":	94,
									"scores":	[-4.86155024935156]
								}, {
									"case":	95,
									"scores":	[-4.86155024935156]
								}, {
									"case":	96,
									"scores":	[-4.86155024935156]
								}, {
									"case":	97,
									"scores":	[-4.86155024935156]
								}, {
									"case":	98,
									"scores":	[-4.86155024935156]
								}, {
									"case":	99,
									"scores":	[-4.86155024935156]
								}, {
									"case":	100,
									"scores":	[-4.86155024935156]
								}, {
									"case":	101,
									"scores":	[-4.86155024935156]
								}, {
									"case":	102,
									"scores":	[-4.86155024935156]
								}, {
									"case":	103,
									"scores":	[-4.86155024935156]
								}, {
									"case":	104,
									"scores":	[-4.86155024935156]
								}, {
									"case":	105,
									"scores":	[-4.86155024935156]
								}, {
									"case":	106,
									"scores":	[-4.86155024935156]
								}, {
									"case":	107,
									"scores":	[-4.86155024935156]
								}, {
									"case":	108,
									"scores":	[-4.86155024935156]
								}, {
									"case":	109,
									"scores":	[-4.86155024935156]
								}, {
									"case":	110,
									"scores":	[-4.86155024935156]
								}, {
									"case":	111,
									"scores":	[-4.86155024935156]
								}, {
									"case":	112,
									"scores":	[-4.86155024935156]
								}, {
									"case":	113,
									"scores":	[-4.86155024935156]
								}, {
									"case":	114,
									"scores":	[-4.86155024935156]
								}, {
									"case":	115,
									"scores":	[-4.86155024935156]
								}, {
									"case":	116,
									"scores":	[-4.86155024935156]
								}, {
									"case":	117,
									"scores":	[-4.86155024935156]
								}, {
									"case":	118,
									"scores":	[-4.86155024935156]
								}, {
									"case":	119,
									"scores":	[-4.86155024935156]
								}, {
									"case":	120,
									"scores":	[-4.86155024935156]
								}, {
									"case":	121,
									"scores":	[-4.86155024935156]
								}, {
									"case":	122,
									"scores":	[-4.86155024935156]
								}, {
									"case":	123,
									"scores":	[-4.86155024935156]
								}, {
									"case":	124,
									"scores":	[-4.86155024935156]
								}, {
									"case":	125,
									"scores":	[-4.86155024935156]
								}, {
									"case":	126,
									"scores":	[-4.86155024935156]
								}, {
									"case":	127,
									"scores":	[-4.86155024935156]
								}, {
									"case":	128,
									"scores":	[-4.86155024935156]
								}, {
									"case":	129,
									"scores":	[-4.86155024935156]
								}, {
									"case":	130,
									"scores":	[-4.86155024935156]
								}, {
									"case":	131,
									"scores":	[-4.86155024935156]
								}, {
									"case":	132,
									"scores":	[-4.86155024935156]
								}, {
									"case":	133,
									"scores":	[-4.86155024935156]
								}, {
									"case":	134,
									"scores":	[-4.86155024935156]
								}, {
									"case":	135,
									"scores":	[-4.86155024935156]
								}, {
									"case":	136,
									"scores":	[-4.86155024935156]
								}, {
									"case":	137,
									"scores":	[-4.86155024935156]
								}, {
									"case":	138,
									"scores":	[-4.86155024935156]
								}, {
									"case":	139,
									"scores":	[-4.86155024935156]
								}, {
									"case":	140,
									"scores":	[-4.86155024935156]
								}, {
									"case":	141,
									"scores":	[-4.86155024935156]
								}, {
									"case":	142,
									"scores":	[-4.86155024935156]
								}, {
									"case":	143,
									"scores":	[-4.86155024935156]
								}, {
									"case":	144,
									"scores":	[-4.86155024935156]
								}, {
									"case":	145,
									"scores":	[-4.86155024935156]
								}, {
									"case":	146,
									"scores":	[-4.86155024935156]
								}, {
									"case":	147,
									"scores":	[-4.86155024935156]
								}, {
									"case":	148,
									"scores":	[-4.86155024935156]
								}, {
									"case":	149,
									"scores":	[-4.86155024935156]
								}, {
									"case":	150,
									"scores":	[-4.86155024935156]
								}, {
									"case":	151,
									"scores":	[-4.86155024935156]
								}, {
									"case":	152,
									"scores":	[-4.86155024935156]
								}, {
									"case":	153,
									"scores":	[-4.86155024935156]
								}, {
									"case":	154,
									"scores":	[-4.86155024935156]
								}, {
									"case":	155,
									"scores":	[-4.86155024935156]
								}, {
									"case":	156,
									"scores":	[-4.86155024935156]
								}, {
									"case":	157,
									"scores":	[-4.86155024935156]
								}, {
									"case":	158,
									"scores":	[-4.86155024935156]
								}, {
									"case":	159,
									"scores":	[-4.86155024935156]
								}, {
									"case":	160,
									"scores":	[-4.86155024935156]
								}, {
									"case":	161,
									"scores":	[-4.86155024935156]
								}, {
									"case":	162,
									"scores":	[-4.86155024935156]
								}, {
									"case":	163,
									"scores":	[-4.86155024935156]
								}, {
									"case":	164,
									"scores":	[-4.86155024935156]
								}, {
									"case":	165,
									"scores":	[-4.86155024935156]
								}, {
									"case":	166,
									"scores":	[-4.86155024935156]
								}, {
									"case":	167,
									"scores":	[-4.86155024935156]
								}, {
									"case":	168,
									"scores":	[-4.86155024935156]
								}, {
									"case":	169,
									"scores":	[-4.86155024935156]
								}, {
									"case":	170,
									"scores":	[-4.86155024935156]
								}, {
									"case":	171,
									"scores":	[-4.86155024935156]
								}, {
									"case":	172,
									"scores":	[-4.86155024935156]
								}, {
									"case":	173,
									"scores":	[-4.86155024935156]
								}, {
									"case":	174,
									"scores":	[-4.86155024935156]
								}, {
									"case":	175,
									"scores":	[-4.86155024935156]
								}, {
									"case":	176,
									"scores":	[-4.86155024935156]
								}, {
									"case":	177,
									"scores":	[-4.86155024935156]
								}, {
									"case":	178,
									"scores":	[-4.86155024935156]
								}, {
									"case":	179,
									"scores":	[-4.86155024935156]
								}, {
									"case":	180,
									"scores":	[-4.86155024935156]
								}, {
									"case":	181,
									"scores":	[-4.86155024935156]
								}, {
									"case":	182,
									"scores":	[-4.86155024935156]
								}, {
									"case":	183,
									"scores":	[-4.86155024935156]
								}, {
									"case":	184,
									"scores":	[-4.86155024935156]
								}, {
									"case":	185,
									"scores":	[-4.86155024935156]
								}, {
									"case":	186,
									"scores":	[-7.01606387145156, -7.43940909775156, -6.85875492375156, -6.93100512055156, -6.85875492375156, -6.14693080675156, -6.93100512055156, -6.8958553237515616, -6.64786580675156, -6.89390472055156]
								}, {
									"case":	187,
									"scores":	[-7.01606387145156, -7.43940909775156, -6.85875492375156, -6.93100512055156, -6.85875492375156, -6.14693080675156, -6.93100512055156, -6.8958553237515616, -6.64786580675156, -6.89390472055156]
								}]
						}, {
							"switch":	36,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	719,
							"begin_column":	5,
							"end_line":	719,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L719\", 10, &(nval), sizeof (nval), &(tmp), sizeof (tmp), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1515283372515617, -4.33769527935156, -5.15080421935156, -5.73378311935156, -5.15080421935156, -4.35953318935156, -5.73378311935156, -5.44515501935156, -4.68154421935156, -5.43943231935156]
								}]
						}]
				}, {
					"line":	719,
					"switches":	[{
							"switch":	37,
							"types":	[[], [], [], [], [186, 187], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], [], [], [], [], [], []],
							"begin_line":	720,
							"begin_column":	3,
							"end_line":	720,
							"end_column":	3,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (nval)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (nval)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (nval)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (nval)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (nval)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (nval)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((nval)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((nval)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((nval))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((nval))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((nval)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((nval))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(nval)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((nval), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex((input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex(return_value, (arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((nval))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((nval))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((nval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((nval))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((nval))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(nval), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&nval, -1, (arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (op), 0, 33554432)", "php_filter_call(&nval, -1, (tmp), 0, 33554432)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(nval), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((nval))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((nval)))", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&nval, -1, arg_elm, 0, 33554432)", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L720\", 10, &(tmp), sizeof (tmp), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    break;\n", "if (__is_neg(\"\", \"L720\", 10, &(tmp), sizeof (tmp), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	2,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	3,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	4,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	5,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	6,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	7,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	8,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	9,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	10,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	11,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	12,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	13,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	14,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	15,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	16,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	17,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	18,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	19,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	20,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	21,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	22,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	23,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	24,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	25,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	26,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	27,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	28,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	29,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	30,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	31,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	32,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	33,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	34,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	35,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	36,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	37,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	38,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	39,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	40,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	41,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	42,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	43,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	44,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	45,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	46,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	47,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	48,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	49,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	50,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	51,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	52,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	53,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	54,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	55,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	56,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	57,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	58,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	59,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	60,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	61,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	62,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	63,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	64,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	65,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	66,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	67,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	68,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	69,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	70,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	71,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	72,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	73,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	74,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	75,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	76,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	77,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	78,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	79,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	80,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	81,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	82,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	83,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	84,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	85,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	86,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	87,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	88,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	89,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	90,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	91,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	92,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	93,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	94,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	95,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	96,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	97,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	98,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	99,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	100,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	101,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	102,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	103,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	104,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	105,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	106,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	107,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	108,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	109,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	110,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	111,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	112,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	113,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	114,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	115,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	116,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	117,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	118,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	119,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	120,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	121,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	122,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	123,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	124,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	125,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	126,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	127,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	128,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	129,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	130,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	131,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	132,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	133,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	134,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	135,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	136,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	137,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	138,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	139,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	140,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	141,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	142,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	143,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	144,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	145,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	146,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	147,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	148,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	149,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	150,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	151,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	152,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	153,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	154,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	155,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	156,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	157,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	158,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	159,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	160,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	161,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	162,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	163,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	164,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	165,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	166,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	167,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	168,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	169,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	170,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	171,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	172,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	173,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	174,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	175,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	176,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	177,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	178,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	179,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	180,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	181,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	182,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	183,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	184,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	185,
									"scores":	[-4.7605367127639635]
								}, {
									"case":	186,
									"scores":	[-6.4283163611639633, -4.5367745358639633, -7.5106780401639632, -7.4372455839639624, -7.3649953871639626, -6.6531712701639627, -7.4372455839639624, -7.4020957871639634, -7.1541062701639628, -7.4001451839639625]
								}, {
									"case":	187,
									"scores":	[-6.4283163611639633, -4.5367745358639633, -7.5106780401639632, -7.4372455839639624, -7.3649953871639626, -6.6531712701639627, -7.4372455839639624, -7.4020957871639634, -7.1541062701639628, -7.4001451839639625]
								}]
						}, {
							"switch":	38,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	720,
							"begin_column":	5,
							"end_line":	720,
							"end_column":	29,
							"patch_codes":	["if (!__is_neg(\"\", \"L720\", 10, &(tmp), sizeof (tmp), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.2960093927639633, -4.3297662417639629, -5.7086821917639634, -6.2584855827639636, -5.6755066827639631, -4.8842356527639632, -6.2584855827639636, -5.9698574827639632, -5.2062466827639637, -5.9641347827639635]
								}]
						}]
				}, {
					"line":	721,
					"switches":	[{
							"switch":	39,
							"types":	[[], [], [], [], [186, 187], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], [], [], [], [], [], []],
							"begin_line":	722,
							"begin_column":	3,
							"end_line":	722,
							"end_column":	3,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (nval)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (nval)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (nval)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (nval)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (nval)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (nval)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((nval)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((nval)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((nval))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((nval))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((nval)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((nval))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(nval)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((nval), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex((input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex(return_value, (arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((nval))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((nval))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((nval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((nval))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((nval))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(nval), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&nval, -1, (arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (op), 0, 33554432)", "php_filter_call(&nval, -1, (tmp), 0, 33554432)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(nval), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((nval))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((nval)))", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&nval, -1, arg_elm, 0, 33554432)", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L722\", 10, &(arg_elm), sizeof (arg_elm), &(nval), sizeof (nval), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    break;\n", "if (__is_neg(\"\", \"L722\", 10, &(arg_elm), sizeof (arg_elm), &(nval), sizeof (nval), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	2,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	3,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	4,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	5,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	6,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	7,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	8,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	9,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	10,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	11,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	12,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	13,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	14,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	15,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	16,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	17,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	18,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	19,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	20,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	21,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	22,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	23,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	24,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	25,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	26,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	27,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	28,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	29,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	30,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	31,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	32,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	33,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	34,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	35,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	36,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	37,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	38,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	39,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	40,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	41,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	42,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	43,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	44,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	45,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	46,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	47,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	48,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	49,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	50,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	51,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	52,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	53,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	54,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	55,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	56,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	57,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	58,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	59,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	60,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	61,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	62,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	63,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	64,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	65,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	66,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	67,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	68,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	69,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	70,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	71,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	72,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	73,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	74,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	75,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	76,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	77,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	78,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	79,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	80,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	81,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	82,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	83,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	84,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	85,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	86,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	87,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	88,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	89,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	90,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	91,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	92,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	93,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	94,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	95,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	96,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	97,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	98,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	99,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	100,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	101,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	102,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	103,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	104,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	105,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	106,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	107,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	108,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	109,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	110,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	111,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	112,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	113,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	114,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	115,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	116,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	117,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	118,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	119,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	120,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	121,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	122,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	123,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	124,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	125,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	126,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	127,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	128,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	129,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	130,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	131,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	132,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	133,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	134,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	135,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	136,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	137,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	138,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	139,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	140,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	141,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	142,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	143,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	144,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	145,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	146,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	147,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	148,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	149,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	150,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	151,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	152,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	153,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	154,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	155,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	156,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	157,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	158,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	159,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	160,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	161,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	162,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	163,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	164,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	165,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	166,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	167,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	168,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	169,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	170,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	171,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	172,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	173,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	174,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	175,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	176,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	177,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	178,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	179,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	180,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	181,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	182,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	183,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	184,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	185,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	186,
									"scores":	[-6.0844363888938853, -7.4281906376938842, -7.1576772076938848, -7.085427010893885, -6.3736028938938851, -7.2923076518938856, -7.0119945546938851, -6.9768447578938861, -6.7288552408938855, -6.9748941546938852]
								}, {
									"case":	187,
									"scores":	[-6.0844363888938853, -7.4281906376938842, -7.1576772076938848, -7.085427010893885, -6.3736028938938851, -7.2923076518938856, -7.0119945546938851, -6.9768447578938861, -6.7288552408938855, -6.9748941546938852]
								}]
						}, {
							"switch":	40,
							"types":	[[], [], [1], [], [], [], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [], [3, 4, 5], [], [], [], [], [], [], [], [2]],
							"begin_line":	722,
							"begin_column":	5,
							"end_line":	722,
							"end_column":	75,
							"patch_codes":	["if (!__is_neg(\"\", \"L722\", 10, &(arg_elm), sizeof (arg_elm), &(nval), sizeof (nval), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n", "{\n}\n", "Debug(&nval, -1, arg_elm, 0, 33554432)", "php_printf(&nval, -1, arg_elm, 0, 33554432)", "printf(&nval, -1, arg_elm, 0, 33554432)", "php_filter_call(&(&arg_elm), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&arg_key), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&arg_key_len), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&index), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&op), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&pos), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(&tmp), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&nval, -(0 * arg_key_len), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(0 * index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_elm != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_elm == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len != index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len * index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len + 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len + index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len - 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len - index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(arg_key_len == index), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(index != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(index * arg_key_len), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(index + 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(index - 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(index == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input != nval), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input != return_value), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input == nval), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(input == return_value), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(nval != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(nval == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op != arg_elm), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op != tmp), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op == arg_elm), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(op == tmp), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(pos != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(pos == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(return_value != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(return_value != nval), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(return_value == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(return_value == nval), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(tmp != 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(tmp != arg_elm), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(tmp == 0), arg_elm, 0, 33554432)", "php_filter_call(&nval, -(tmp == arg_elm), arg_elm, 0, 33554432)", "php_filter_call(&nval, -1, (&arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (&arg_key), 0, 33554432)", "php_filter_call(&nval, -1, (&arg_key_len), 0, 33554432)", "php_filter_call(&nval, -1, (&index), 0, 33554432)", "php_filter_call(&nval, -1, (&input), 0, 33554432)", "php_filter_call(&nval, -1, (&nval), 0, 33554432)", "php_filter_call(&nval, -1, (&op), 0, 33554432)", "php_filter_call(&nval, -1, (&pos), 0, 33554432)", "php_filter_call(&nval, -1, (&return_value), 0, 33554432)", "php_filter_call(&nval, -1, (&tmp), 0, 33554432)", "php_filter_call(&nval, -1, (arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (op), 0, 33554432)", "php_filter_call(&nval, -1, (tmp), 0, 33554432)", "php_filter_call(&nval, -1, arg_elm, (0 * arg_key_len), 33554432)", "php_filter_call(&nval, -1, arg_elm, (0 * index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_elm != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_elm == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len != index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len * index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len + 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len + index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len - 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len - index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (arg_key_len == index), 33554432)", "php_filter_call(&nval, -1, arg_elm, (index != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (index * arg_key_len), 33554432)", "php_filter_call(&nval, -1, arg_elm, (index + 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (index - 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (index == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input != nval), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input != return_value), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input == nval), 33554432)", "php_filter_call(&nval, -1, arg_elm, (input == return_value), 33554432)", "php_filter_call(&nval, -1, arg_elm, (nval != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (nval == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op != arg_elm), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op != tmp), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op == arg_elm), 33554432)", "php_filter_call(&nval, -1, arg_elm, (op == tmp), 33554432)", "php_filter_call(&nval, -1, arg_elm, (pos != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (pos == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (return_value != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (return_value != nval), 33554432)", "php_filter_call(&nval, -1, arg_elm, (return_value == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (return_value == nval), 33554432)", "php_filter_call(&nval, -1, arg_elm, (tmp != 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (tmp != arg_elm), 33554432)", "php_filter_call(&nval, -1, arg_elm, (tmp == 0), 33554432)", "php_filter_call(&nval, -1, arg_elm, (tmp == arg_elm), 33554432)", "php_filter_call(&nval, -1, arg_elm, 0, (0 * arg_key_len))", "php_filter_call(&nval, -1, arg_elm, 0, (0 * index))", "php_filter_call(&nval, -1, arg_elm, 0, (0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_elm != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_elm == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len != index))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len * index))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len + 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len + index))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len - 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len - index))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (arg_key_len == index))", "php_filter_call(&nval, -1, arg_elm, 0, (index != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (index * arg_key_len))", "php_filter_call(&nval, -1, arg_elm, 0, (index + 0))", "php_filter_call(&nval, -1, arg_elm, 0, (index - 0))", "php_filter_call(&nval, -1, arg_elm, 0, (index == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (input != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (input != nval))", "php_filter_call(&nval, -1, arg_elm, 0, (input != return_value))", "php_filter_call(&nval, -1, arg_elm, 0, (input == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (input == nval))", "php_filter_call(&nval, -1, arg_elm, 0, (input == return_value))", "php_filter_call(&nval, -1, arg_elm, 0, (nval != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (nval == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (op != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (op != arg_elm))", "php_filter_call(&nval, -1, arg_elm, 0, (op != tmp))", "php_filter_call(&nval, -1, arg_elm, 0, (op == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (op == arg_elm))", "php_filter_call(&nval, -1, arg_elm, 0, (op == tmp))", "php_filter_call(&nval, -1, arg_elm, 0, (pos != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (pos == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (return_value != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (return_value != nval))", "php_filter_call(&nval, -1, arg_elm, 0, (return_value == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (return_value == nval))", "php_filter_call(&nval, -1, arg_elm, 0, (tmp != 0))", "php_filter_call(&nval, -1, arg_elm, 0, (tmp != arg_elm))", "php_filter_call(&nval, -1, arg_elm, 0, (tmp == 0))", "php_filter_call(&nval, -1, arg_elm, 0, (tmp == arg_elm))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.2764835534938852, -5.7192465989938857, -5.8926379624938861, -5.3096590624938855, -4.5183880324938857, -6.0096572639938852, -6.5728977534938853, -6.2842696534938858, -5.5206588534938854, -6.278546953493886]
								}, {
									"case":	2,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	3,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	4,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	5,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	6,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	7,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	8,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	9,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	10,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	11,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	12,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	13,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	14,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	15,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	16,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	17,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	18,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	19,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	20,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	21,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	22,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	23,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	24,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	25,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	26,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	27,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	28,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	29,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	30,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	31,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	32,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	33,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	34,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	35,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	36,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	37,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	38,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	39,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	40,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	41,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	42,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	43,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	44,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	45,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	46,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	47,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	48,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	49,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	50,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	51,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	52,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	53,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	54,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	55,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	56,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	57,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	58,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	59,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	60,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	61,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	62,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	63,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	64,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	65,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	66,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	67,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	68,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	69,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	70,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	71,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	72,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	73,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	74,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	75,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	76,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	77,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	78,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	79,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	80,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	81,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	82,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	83,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	84,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	85,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	86,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	87,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	88,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	89,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	90,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	91,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	92,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	93,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	94,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	95,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	96,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	97,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	98,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	99,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	100,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	101,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	102,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	103,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	104,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	105,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	106,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	107,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	108,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	109,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	110,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	111,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	112,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	113,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	114,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	115,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	116,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	117,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	118,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	119,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	120,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	121,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	122,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	123,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	124,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	125,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	126,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	127,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	128,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	129,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	130,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	131,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	132,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	133,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	134,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	135,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	136,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	137,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	138,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	139,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	140,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	141,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	142,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	143,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	144,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	145,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	146,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	147,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	148,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	149,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	150,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	151,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	152,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	153,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	154,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	155,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	156,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	157,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	158,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	159,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	160,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	161,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	162,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	163,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	164,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	165,
									"scores":	[-4.6797258834938855]
								}, {
									"case":	166,
									"scores":	[-4.6797258834938855]
								}]
						}]
				}, {
					"line":	722,
					"switches":	[{
							"switch":	41,
							"types":	[[], [], [], [], [186, 187], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [], [], [], [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], [], [], [], [], [], []],
							"begin_line":	723,
							"begin_column":	3,
							"end_line":	723,
							"end_column":	3,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (nval)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (nval)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (nval)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (nval)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (nval)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (nval)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((nval)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((nval)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((nval))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((nval))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((nval)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((nval))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(nval)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((nval), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex((input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex(return_value, (arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((nval))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((nval))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((nval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((nval))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((nval))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(nval), -1, arg_elm, 0, 33554432)", "php_filter_call(&(nval), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&nval, -1, (arg_elm), 0, 33554432)", "php_filter_call(&nval, -1, (op), 0, 33554432)", "php_filter_call(&nval, -1, (tmp), 0, 33554432)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(nval), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((nval))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((nval)))", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&nval, -1, arg_elm, 0, 33554432)", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L723\", 10, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    break;\n", "if (__is_neg(\"\", \"L723\", 10, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	2,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	3,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	4,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	5,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	6,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	7,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	8,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	9,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	10,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	11,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	12,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	13,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	14,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	15,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	16,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	17,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	18,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	19,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	20,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	21,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	22,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	23,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	24,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	25,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	26,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	27,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	28,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	29,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	30,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	31,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	32,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	33,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	34,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	35,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	36,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	37,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	38,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	39,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	40,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	41,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	42,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	43,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	44,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	45,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	46,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	47,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	48,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	49,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	50,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	51,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	52,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	53,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	54,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	55,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	56,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	57,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	58,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	59,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	60,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	61,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	62,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	63,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	64,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	65,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	66,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	67,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	68,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	69,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	70,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	71,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	72,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	73,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	74,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	75,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	76,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	77,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	78,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	79,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	80,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	81,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	82,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	83,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	84,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	85,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	86,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	87,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	88,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	89,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	90,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	91,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	92,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	93,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	94,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	95,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	96,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	97,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	98,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	99,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	100,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	101,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	102,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	103,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	104,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	105,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	106,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	107,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	108,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	109,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	110,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	111,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	112,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	113,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	114,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	115,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	116,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	117,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	118,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	119,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	120,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	121,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	122,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	123,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	124,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	125,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	126,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	127,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	128,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	129,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	130,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	131,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	132,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	133,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	134,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	135,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	136,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	137,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	138,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	139,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	140,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	141,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	142,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	143,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	144,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	145,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	146,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	147,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	148,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	149,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	150,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	151,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	152,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	153,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	154,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	155,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	156,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	157,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	158,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	159,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	160,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	161,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	162,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	163,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	164,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	165,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	166,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	167,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	168,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	169,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	170,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	171,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	172,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	173,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	174,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	175,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	176,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	177,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	178,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	179,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	180,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	181,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	182,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	183,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	184,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	185,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	186,
									"scores":	[-5.5090271710588468, -5.4367769742588461, -4.7249528572588462, -5.1346902510588466, -6.312199023258847, -6.549670117258847, -6.3643351400588468, -6.3291853432588461, -6.0811958262588464, -6.3272347400588469]
								}, {
									"case":	187,
									"scores":	[-5.5090271710588468, -5.4367769742588461, -4.7249528572588462, -5.1346902510588466, -6.312199023258847, -6.549670117258847, -6.3643351400588468, -6.3291853432588461, -6.0811958262588464, -6.3272347400588469]
								}]
						}, {
							"switch":	42,
							"types":	[[], [], [1], [], [], [], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [], [], [22]],
							"begin_line":	723,
							"begin_column":	5,
							"end_line":	723,
							"end_column":	63,
							"patch_codes":	["if (!__is_neg(\"\", \"L723\", 10, &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(nval), sizeof (nval), &(arg_elm), sizeof (arg_elm), &(tmp), sizeof (tmp), &(input), sizeof (input), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos)))\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, -1)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 0)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 1)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 16777216)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 2)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 3)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 33554432)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 4)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, 516)", "add_assoc_string_ex(return_value, arg_key, arg_key_len, nval, le_index_ptr)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, -1)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 0)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 1)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 16777216)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 2)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 3)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 33554432)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 4)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, 516)", "add_property_string_ex(return_value, arg_key, arg_key_len, nval, le_index_ptr)", "{\n}\n", "Debug(return_value, arg_key, arg_key_len, nval)", "_php_stream_printf(return_value, arg_key, arg_key_len, nval)", "add_property_zval_ex(return_value, arg_key, arg_key_len, nval)", "ap_php_asprintf(return_value, arg_key, arg_key_len, nval)", "execl(return_value, arg_key, arg_key_len, nval)", "execle(return_value, arg_key, arg_key_len, nval)", "execlp(return_value, arg_key, arg_key_len, nval)", "fprintf(return_value, arg_key, arg_key_len, nval)", "php_printf(return_value, arg_key, arg_key_len, nval)", "php_sprintf(return_value, arg_key, arg_key_len, nval)", "printf(return_value, arg_key, arg_key_len, nval)", "sprintf(return_value, arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&arg_elm), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&arg_key), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&arg_key_len), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&index), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&op), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&pos), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((&tmp), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((input), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((nval), arg_key, arg_key_len, nval)", "add_assoc_zval_ex((return_value), arg_key, arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&arg_elm), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&arg_key_len), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&index), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&input), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&nval), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&op), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&pos), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&return_value), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (&tmp), arg_key_len, nval)", "add_assoc_zval_ex(return_value, (arg_key), arg_key_len, nval)", "add_assoc_zval_ex(return_value, arg_key, (0 * arg_key_len), nval)", "add_assoc_zval_ex(return_value, arg_key, (0 * index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_elm != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_elm == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len != index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len * index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len + 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len + index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len - 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len - index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len == index), nval)", "add_assoc_zval_ex(return_value, arg_key, (arg_key_len), nval)", "add_assoc_zval_ex(return_value, arg_key, (index != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (index * arg_key_len), nval)", "add_assoc_zval_ex(return_value, arg_key, (index + 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (index - 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (index == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (input != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (input != nval), nval)", "add_assoc_zval_ex(return_value, arg_key, (input != return_value), nval)", "add_assoc_zval_ex(return_value, arg_key, (input == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (input == nval), nval)", "add_assoc_zval_ex(return_value, arg_key, (input == return_value), nval)", "add_assoc_zval_ex(return_value, arg_key, (nval != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (nval == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (op != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (op != arg_elm), nval)", "add_assoc_zval_ex(return_value, arg_key, (op != tmp), nval)", "add_assoc_zval_ex(return_value, arg_key, (op == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (op == arg_elm), nval)", "add_assoc_zval_ex(return_value, arg_key, (op == tmp), nval)", "add_assoc_zval_ex(return_value, arg_key, (pos != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (pos == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (return_value != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (return_value != nval), nval)", "add_assoc_zval_ex(return_value, arg_key, (return_value == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (return_value == nval), nval)", "add_assoc_zval_ex(return_value, arg_key, (tmp != 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (tmp != arg_elm), nval)", "add_assoc_zval_ex(return_value, arg_key, (tmp == 0), nval)", "add_assoc_zval_ex(return_value, arg_key, (tmp == arg_elm), nval)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&arg_elm))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&arg_key))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&arg_key_len))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&index))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&op))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&pos))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&return_value))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (&tmp))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (nval))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.6702420388588468, -5.0872631388588463, -4.2959921088588464, -5.1846275088588465, -5.8896812848588471, -6.114496138858847, -6.3836773388588464, -6.0950492388588469, -5.3314384388588465, -6.0893265388588471]
								}, {
									"case":	2,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	3,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	4,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	5,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	6,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	7,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	8,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	9,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	10,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	11,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	12,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	13,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	14,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	15,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	16,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	17,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	18,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	19,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	20,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	21,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	22,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	23,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	24,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	25,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	26,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	27,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	28,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	29,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	30,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	31,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	32,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	33,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	34,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	35,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	36,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	37,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	38,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	39,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	40,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	41,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	42,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	43,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	44,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	45,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	46,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	47,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	48,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	49,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	50,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	51,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	52,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	53,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	54,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	55,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	56,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	57,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	58,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	59,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	60,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	61,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	62,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	63,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	64,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	65,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	66,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	67,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	68,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	69,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	70,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	71,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	72,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	73,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	74,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	75,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	76,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	77,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	78,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	79,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	80,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	81,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	82,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	83,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	84,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	85,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	86,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	87,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	88,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	89,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	90,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	91,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	92,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	93,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	94,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	95,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	96,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	97,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	98,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	99,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	100,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	101,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	102,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	103,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	104,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	105,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	106,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	107,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	108,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	109,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	110,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	111,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	112,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	113,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	114,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	115,
									"scores":	[-4.6393204688588465]
								}, {
									"case":	116,
									"scores":	[-4.6393204688588465]
								}]
						}]
				}, {
					"line":	713,
					"switches":	[{
							"switch":	31,
							"types":	[[], [], [], [], [152, 153], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	714,
							"begin_column":	2,
							"end_line":	714,
							"end_column":	2,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset(&(*input), 0, sizeof (*(&(*input))))", "memset(&(*input).is_ref__gc, 0, sizeof (*(&(*input).is_ref__gc)))", "memset(&(*input).refcount__gc, 0, sizeof (*(&(*input).refcount__gc)))", "memset(&(*input).type, 0, sizeof (*(&(*input).type)))", "memset(&(*input).value, 0, sizeof (*(&(*input).value)))", "memset(&(*input).value.dval, 0, sizeof (*(&(*input).value.dval)))", "memset(&(*input).value.ht, 0, sizeof (*(&(*input).value.ht)))", "memset(&(*input).value.lval, 0, sizeof (*(&(*input).value.lval)))", "memset(&(*input).value.obj, 0, sizeof (*(&(*input).value.obj)))", "memset(&(*input).value.str, 0, sizeof (*(&(*input).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "memset((*input).value.ht, 0, sizeof (*((*input).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    break;\n", "if (__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.578712346906288]
								}, {
									"case":	2,
									"scores":	[-4.578712346906288]
								}, {
									"case":	3,
									"scores":	[-4.578712346906288]
								}, {
									"case":	4,
									"scores":	[-4.578712346906288]
								}, {
									"case":	5,
									"scores":	[-4.578712346906288]
								}, {
									"case":	6,
									"scores":	[-4.578712346906288]
								}, {
									"case":	7,
									"scores":	[-4.578712346906288]
								}, {
									"case":	8,
									"scores":	[-4.578712346906288]
								}, {
									"case":	9,
									"scores":	[-4.578712346906288]
								}, {
									"case":	10,
									"scores":	[-4.578712346906288]
								}, {
									"case":	11,
									"scores":	[-4.578712346906288]
								}, {
									"case":	12,
									"scores":	[-4.578712346906288]
								}, {
									"case":	13,
									"scores":	[-4.578712346906288]
								}, {
									"case":	14,
									"scores":	[-4.578712346906288]
								}, {
									"case":	15,
									"scores":	[-4.578712346906288]
								}, {
									"case":	16,
									"scores":	[-4.578712346906288]
								}, {
									"case":	17,
									"scores":	[-4.578712346906288]
								}, {
									"case":	18,
									"scores":	[-4.578712346906288]
								}, {
									"case":	19,
									"scores":	[-4.578712346906288]
								}, {
									"case":	20,
									"scores":	[-4.578712346906288]
								}, {
									"case":	21,
									"scores":	[-4.578712346906288]
								}, {
									"case":	22,
									"scores":	[-4.578712346906288]
								}, {
									"case":	23,
									"scores":	[-4.578712346906288]
								}, {
									"case":	24,
									"scores":	[-4.578712346906288]
								}, {
									"case":	25,
									"scores":	[-4.578712346906288]
								}, {
									"case":	26,
									"scores":	[-4.578712346906288]
								}, {
									"case":	27,
									"scores":	[-4.578712346906288]
								}, {
									"case":	28,
									"scores":	[-4.578712346906288]
								}, {
									"case":	29,
									"scores":	[-4.578712346906288]
								}, {
									"case":	30,
									"scores":	[-4.578712346906288]
								}, {
									"case":	31,
									"scores":	[-4.578712346906288]
								}, {
									"case":	32,
									"scores":	[-4.578712346906288]
								}, {
									"case":	33,
									"scores":	[-4.578712346906288]
								}, {
									"case":	34,
									"scores":	[-4.578712346906288]
								}, {
									"case":	35,
									"scores":	[-4.578712346906288]
								}, {
									"case":	36,
									"scores":	[-4.578712346906288]
								}, {
									"case":	37,
									"scores":	[-4.578712346906288]
								}, {
									"case":	38,
									"scores":	[-4.578712346906288]
								}, {
									"case":	39,
									"scores":	[-4.578712346906288]
								}, {
									"case":	40,
									"scores":	[-4.578712346906288]
								}, {
									"case":	41,
									"scores":	[-4.578712346906288]
								}, {
									"case":	42,
									"scores":	[-4.578712346906288]
								}, {
									"case":	43,
									"scores":	[-4.578712346906288]
								}, {
									"case":	44,
									"scores":	[-4.578712346906288]
								}, {
									"case":	45,
									"scores":	[-4.578712346906288]
								}, {
									"case":	46,
									"scores":	[-4.578712346906288]
								}, {
									"case":	47,
									"scores":	[-4.578712346906288]
								}, {
									"case":	48,
									"scores":	[-4.578712346906288]
								}, {
									"case":	49,
									"scores":	[-4.578712346906288]
								}, {
									"case":	50,
									"scores":	[-4.578712346906288]
								}, {
									"case":	51,
									"scores":	[-4.578712346906288]
								}, {
									"case":	52,
									"scores":	[-4.578712346906288]
								}, {
									"case":	53,
									"scores":	[-4.578712346906288]
								}, {
									"case":	54,
									"scores":	[-4.578712346906288]
								}, {
									"case":	55,
									"scores":	[-4.578712346906288]
								}, {
									"case":	56,
									"scores":	[-4.578712346906288]
								}, {
									"case":	57,
									"scores":	[-4.578712346906288]
								}, {
									"case":	58,
									"scores":	[-4.578712346906288]
								}, {
									"case":	59,
									"scores":	[-4.578712346906288]
								}, {
									"case":	60,
									"scores":	[-4.578712346906288]
								}, {
									"case":	61,
									"scores":	[-4.578712346906288]
								}, {
									"case":	62,
									"scores":	[-4.578712346906288]
								}, {
									"case":	63,
									"scores":	[-4.578712346906288]
								}, {
									"case":	64,
									"scores":	[-4.578712346906288]
								}, {
									"case":	65,
									"scores":	[-4.578712346906288]
								}, {
									"case":	66,
									"scores":	[-4.578712346906288]
								}, {
									"case":	67,
									"scores":	[-4.578712346906288]
								}, {
									"case":	68,
									"scores":	[-4.578712346906288]
								}, {
									"case":	69,
									"scores":	[-4.578712346906288]
								}, {
									"case":	70,
									"scores":	[-4.578712346906288]
								}, {
									"case":	71,
									"scores":	[-4.578712346906288]
								}, {
									"case":	72,
									"scores":	[-4.578712346906288]
								}, {
									"case":	73,
									"scores":	[-4.578712346906288]
								}, {
									"case":	74,
									"scores":	[-4.578712346906288]
								}, {
									"case":	75,
									"scores":	[-4.578712346906288]
								}, {
									"case":	76,
									"scores":	[-4.578712346906288]
								}, {
									"case":	77,
									"scores":	[-4.578712346906288]
								}, {
									"case":	78,
									"scores":	[-4.578712346906288]
								}, {
									"case":	79,
									"scores":	[-4.578712346906288]
								}, {
									"case":	80,
									"scores":	[-4.578712346906288]
								}, {
									"case":	81,
									"scores":	[-4.578712346906288]
								}, {
									"case":	82,
									"scores":	[-4.578712346906288]
								}, {
									"case":	83,
									"scores":	[-4.578712346906288]
								}, {
									"case":	84,
									"scores":	[-4.578712346906288]
								}, {
									"case":	85,
									"scores":	[-4.578712346906288]
								}, {
									"case":	86,
									"scores":	[-4.578712346906288]
								}, {
									"case":	87,
									"scores":	[-4.578712346906288]
								}, {
									"case":	88,
									"scores":	[-4.578712346906288]
								}, {
									"case":	89,
									"scores":	[-4.578712346906288]
								}, {
									"case":	90,
									"scores":	[-4.578712346906288]
								}, {
									"case":	91,
									"scores":	[-4.578712346906288]
								}, {
									"case":	92,
									"scores":	[-4.578712346906288]
								}, {
									"case":	93,
									"scores":	[-4.578712346906288]
								}, {
									"case":	94,
									"scores":	[-4.578712346906288]
								}, {
									"case":	95,
									"scores":	[-4.578712346906288]
								}, {
									"case":	96,
									"scores":	[-4.578712346906288]
								}, {
									"case":	97,
									"scores":	[-4.578712346906288]
								}, {
									"case":	98,
									"scores":	[-4.578712346906288]
								}, {
									"case":	99,
									"scores":	[-4.578712346906288]
								}, {
									"case":	100,
									"scores":	[-4.578712346906288]
								}, {
									"case":	101,
									"scores":	[-4.578712346906288]
								}, {
									"case":	102,
									"scores":	[-4.578712346906288]
								}, {
									"case":	103,
									"scores":	[-4.578712346906288]
								}, {
									"case":	104,
									"scores":	[-4.578712346906288]
								}, {
									"case":	105,
									"scores":	[-4.578712346906288]
								}, {
									"case":	106,
									"scores":	[-4.578712346906288]
								}, {
									"case":	107,
									"scores":	[-4.578712346906288]
								}, {
									"case":	108,
									"scores":	[-4.578712346906288]
								}, {
									"case":	109,
									"scores":	[-4.578712346906288]
								}, {
									"case":	110,
									"scores":	[-4.578712346906288]
								}, {
									"case":	111,
									"scores":	[-4.578712346906288]
								}, {
									"case":	112,
									"scores":	[-4.578712346906288]
								}, {
									"case":	113,
									"scores":	[-4.578712346906288]
								}, {
									"case":	114,
									"scores":	[-4.578712346906288]
								}, {
									"case":	115,
									"scores":	[-4.578712346906288]
								}, {
									"case":	116,
									"scores":	[-4.578712346906288]
								}, {
									"case":	117,
									"scores":	[-4.578712346906288]
								}, {
									"case":	118,
									"scores":	[-4.578712346906288]
								}, {
									"case":	119,
									"scores":	[-4.578712346906288]
								}, {
									"case":	120,
									"scores":	[-4.578712346906288]
								}, {
									"case":	121,
									"scores":	[-4.578712346906288]
								}, {
									"case":	122,
									"scores":	[-4.578712346906288]
								}, {
									"case":	123,
									"scores":	[-4.578712346906288]
								}, {
									"case":	124,
									"scores":	[-4.578712346906288]
								}, {
									"case":	125,
									"scores":	[-4.578712346906288]
								}, {
									"case":	126,
									"scores":	[-4.578712346906288]
								}, {
									"case":	127,
									"scores":	[-4.578712346906288]
								}, {
									"case":	128,
									"scores":	[-4.578712346906288]
								}, {
									"case":	129,
									"scores":	[-4.578712346906288]
								}, {
									"case":	130,
									"scores":	[-4.578712346906288]
								}, {
									"case":	131,
									"scores":	[-4.578712346906288]
								}, {
									"case":	132,
									"scores":	[-4.578712346906288]
								}, {
									"case":	133,
									"scores":	[-4.578712346906288]
								}, {
									"case":	134,
									"scores":	[-4.578712346906288]
								}, {
									"case":	135,
									"scores":	[-4.578712346906288]
								}, {
									"case":	136,
									"scores":	[-4.578712346906288]
								}, {
									"case":	137,
									"scores":	[-4.578712346906288]
								}, {
									"case":	138,
									"scores":	[-4.578712346906288]
								}, {
									"case":	139,
									"scores":	[-4.578712346906288]
								}, {
									"case":	140,
									"scores":	[-4.578712346906288]
								}, {
									"case":	141,
									"scores":	[-4.578712346906288]
								}, {
									"case":	142,
									"scores":	[-4.578712346906288]
								}, {
									"case":	143,
									"scores":	[-4.578712346906288]
								}, {
									"case":	144,
									"scores":	[-4.578712346906288]
								}, {
									"case":	145,
									"scores":	[-4.578712346906288]
								}, {
									"case":	146,
									"scores":	[-4.578712346906288]
								}, {
									"case":	147,
									"scores":	[-4.578712346906288]
								}, {
									"case":	148,
									"scores":	[-4.578712346906288]
								}, {
									"case":	149,
									"scores":	[-4.578712346906288]
								}, {
									"case":	150,
									"scores":	[-4.578712346906288]
								}, {
									"case":	151,
									"scores":	[-4.578712346906288]
								}, {
									"case":	152,
									"scores":	[-8.80413763470629, -7.1478649309062883, -6.438695263906288, -7.6522215639062878, -7.5819135677062874, -7.4895492909062877, -8.70667729990629, -7.7922837829062868, -8.03832269670629, -8.94811431690629, -8.94811431690629, -8.94811431690629]
								}, {
									"case":	153,
									"scores":	[-8.80413763470629, -7.1478649309062883, -6.438695263906288, -7.6522215639062878, -7.5819135677062874, -7.4895492909062877, -8.70667729990629, -7.7922837829062868, -8.03832269670629, -8.94811431690629, -8.94811431690629, -8.94811431690629]
								}]
						}, {
							"switch":	32,
							"types":	[[14], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], []],
							"begin_line":	714,
							"begin_column":	4,
							"end_line":	724,
							"end_column":	4,
							"patch_codes":	["if (__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc))) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if ((zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) || __is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc))) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (Debug((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (ap_php_asprintf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (execl((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (execle((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (execlp((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (fprintf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (php_printf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (php_sprintf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (printf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (sprintf((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if (zend_symtable_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n", "if ((zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) && !__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc))) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[0.491850943171856, 0.16974891917185664, 0.9605801341718565, 1.0951890331718555, -0.69818560282814435, -0.026223856828145209, -1.1947874673281458, -0.074426380828144, -0.83231448082814463, -0.7952439668281448, -0.7952439668281448, -0.7952439668281448]
								}, {
									"case":	2,
									"scores":	[-0.86991734642814578, -1.1920193704281452, -0.40118815542814534, -0.26657925642814639, -2.059953892428144, -1.3879921464281448, -2.5565557569281463, -1.4361946704281463, -2.1940827704281469, -2.1570122564281453, -2.1570122564281453, -2.1570122564281453]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-0.86991734642814578, -1.1920193704281452, -0.40118815542814534, -0.26657925642814639, -2.059953892428144, -1.3879921464281448, -2.5565557569281463, -1.4361946704281463, -2.1940827704281469, -2.1570122564281453, -2.1570122564281453, -2.1570122564281453]
								}]
						}, {
							"switch":	43,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	714,
							"begin_column":	4,
							"end_line":	724,
							"end_column":	4,
							"patch_codes":	["if (!__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)))\n    if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n        add_assoc_null_ex(return_value, arg_key, arg_key_len);\n    } else {\n        zval *nval;\n        do {\n            (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n            ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n        } while (0);\n        do {\n            do {\n                (nval)->value = (*(tmp))->value;\n                (*nval).type = (**(tmp)).type;\n            } while (0);\n            zval_set_refcount_p(nval, 1);\n            zval_unset_isref_p(nval);\n        } while (0);\n        _zval_copy_ctor(((nval)));\n        ;\n        php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n        add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n    }\n", "if (!__is_neg(\"\", \"L714\", 12, &(input), sizeof (input), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(tmp), sizeof (tmp), &(return_value), sizeof (return_value), &(arg_elm), sizeof (arg_elm), &(op), sizeof (op), &(index), sizeof (index), &(pos), sizeof (pos), &((*input).refcount__gc), sizeof ((*input).refcount__gc), &((*input).type), sizeof ((*input).type), &((*input).is_ref__gc), sizeof ((*input).is_ref__gc)) && (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0)) {\n    add_assoc_null_ex(return_value, arg_key, arg_key_len);\n} else {\n    zval *nval;\n    do {\n        (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n        ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n    } while (0);\n    do {\n        do {\n            (nval)->value = (*(tmp))->value;\n            (*nval).type = (**(tmp)).type;\n        } while (0);\n        zval_set_refcount_p(nval, 1);\n        zval_unset_isref_p(nval);\n    } while (0);\n    _zval_copy_ctor(((nval)));\n    ;\n    php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n    add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.94980451690629, -6.2719065409062882, -5.4810753259062883, -5.3464664269062876, -7.1398410629062878, -6.4678793169062878, -7.6364429274062875, -6.5160818409062884, -7.2739699409062872, -7.2368994269062883, -7.2368994269062883, -7.2368994269062883]
								}, {
									"case":	2,
									"scores":	[-2.7565564879062863, -3.0786585119062879, -2.2878272969062876, -2.1532183979062887, -3.9465930339062876, -3.2746312879062875, -4.44319489840629, -3.3228338119062872, -4.080721911906287, -4.0436513979062871, -4.0436513979062871, -4.0436513979062871]
								}]
						}]
				}, {
					"line":	699,
					"switches":	[{
							"switch":	24,
							"types":	[[], [], [], [], [142], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [], [], [], [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], [], [], [], [], [], []],
							"begin_line":	700,
							"begin_column":	1,
							"end_line":	700,
							"end_column":	1,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L700\", 12, &(op), sizeof (op), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.94236107862164]
								}, {
									"case":	2,
									"scores":	[-4.94236107862164]
								}, {
									"case":	3,
									"scores":	[-4.94236107862164]
								}, {
									"case":	4,
									"scores":	[-4.94236107862164]
								}, {
									"case":	5,
									"scores":	[-4.94236107862164]
								}, {
									"case":	6,
									"scores":	[-4.94236107862164]
								}, {
									"case":	7,
									"scores":	[-4.94236107862164]
								}, {
									"case":	8,
									"scores":	[-4.94236107862164]
								}, {
									"case":	9,
									"scores":	[-4.94236107862164]
								}, {
									"case":	10,
									"scores":	[-4.94236107862164]
								}, {
									"case":	11,
									"scores":	[-4.94236107862164]
								}, {
									"case":	12,
									"scores":	[-4.94236107862164]
								}, {
									"case":	13,
									"scores":	[-4.94236107862164]
								}, {
									"case":	14,
									"scores":	[-4.94236107862164]
								}, {
									"case":	15,
									"scores":	[-4.94236107862164]
								}, {
									"case":	16,
									"scores":	[-4.94236107862164]
								}, {
									"case":	17,
									"scores":	[-4.94236107862164]
								}, {
									"case":	18,
									"scores":	[-4.94236107862164]
								}, {
									"case":	19,
									"scores":	[-4.94236107862164]
								}, {
									"case":	20,
									"scores":	[-4.94236107862164]
								}, {
									"case":	21,
									"scores":	[-4.94236107862164]
								}, {
									"case":	22,
									"scores":	[-4.94236107862164]
								}, {
									"case":	23,
									"scores":	[-4.94236107862164]
								}, {
									"case":	24,
									"scores":	[-4.94236107862164]
								}, {
									"case":	25,
									"scores":	[-4.94236107862164]
								}, {
									"case":	26,
									"scores":	[-4.94236107862164]
								}, {
									"case":	27,
									"scores":	[-4.94236107862164]
								}, {
									"case":	28,
									"scores":	[-4.94236107862164]
								}, {
									"case":	29,
									"scores":	[-4.94236107862164]
								}, {
									"case":	30,
									"scores":	[-4.94236107862164]
								}, {
									"case":	31,
									"scores":	[-4.94236107862164]
								}, {
									"case":	32,
									"scores":	[-4.94236107862164]
								}, {
									"case":	33,
									"scores":	[-4.94236107862164]
								}, {
									"case":	34,
									"scores":	[-4.94236107862164]
								}, {
									"case":	35,
									"scores":	[-4.94236107862164]
								}, {
									"case":	36,
									"scores":	[-4.94236107862164]
								}, {
									"case":	37,
									"scores":	[-4.94236107862164]
								}, {
									"case":	38,
									"scores":	[-4.94236107862164]
								}, {
									"case":	39,
									"scores":	[-4.94236107862164]
								}, {
									"case":	40,
									"scores":	[-4.94236107862164]
								}, {
									"case":	41,
									"scores":	[-4.94236107862164]
								}, {
									"case":	42,
									"scores":	[-4.94236107862164]
								}, {
									"case":	43,
									"scores":	[-4.94236107862164]
								}, {
									"case":	44,
									"scores":	[-4.94236107862164]
								}, {
									"case":	45,
									"scores":	[-4.94236107862164]
								}, {
									"case":	46,
									"scores":	[-4.94236107862164]
								}, {
									"case":	47,
									"scores":	[-4.94236107862164]
								}, {
									"case":	48,
									"scores":	[-4.94236107862164]
								}, {
									"case":	49,
									"scores":	[-4.94236107862164]
								}, {
									"case":	50,
									"scores":	[-4.94236107862164]
								}, {
									"case":	51,
									"scores":	[-4.94236107862164]
								}, {
									"case":	52,
									"scores":	[-4.94236107862164]
								}, {
									"case":	53,
									"scores":	[-4.94236107862164]
								}, {
									"case":	54,
									"scores":	[-4.94236107862164]
								}, {
									"case":	55,
									"scores":	[-4.94236107862164]
								}, {
									"case":	56,
									"scores":	[-4.94236107862164]
								}, {
									"case":	57,
									"scores":	[-4.94236107862164]
								}, {
									"case":	58,
									"scores":	[-4.94236107862164]
								}, {
									"case":	59,
									"scores":	[-4.94236107862164]
								}, {
									"case":	60,
									"scores":	[-4.94236107862164]
								}, {
									"case":	61,
									"scores":	[-4.94236107862164]
								}, {
									"case":	62,
									"scores":	[-4.94236107862164]
								}, {
									"case":	63,
									"scores":	[-4.94236107862164]
								}, {
									"case":	64,
									"scores":	[-4.94236107862164]
								}, {
									"case":	65,
									"scores":	[-4.94236107862164]
								}, {
									"case":	66,
									"scores":	[-4.94236107862164]
								}, {
									"case":	67,
									"scores":	[-4.94236107862164]
								}, {
									"case":	68,
									"scores":	[-4.94236107862164]
								}, {
									"case":	69,
									"scores":	[-4.94236107862164]
								}, {
									"case":	70,
									"scores":	[-4.94236107862164]
								}, {
									"case":	71,
									"scores":	[-4.94236107862164]
								}, {
									"case":	72,
									"scores":	[-4.94236107862164]
								}, {
									"case":	73,
									"scores":	[-4.94236107862164]
								}, {
									"case":	74,
									"scores":	[-4.94236107862164]
								}, {
									"case":	75,
									"scores":	[-4.94236107862164]
								}, {
									"case":	76,
									"scores":	[-4.94236107862164]
								}, {
									"case":	77,
									"scores":	[-4.94236107862164]
								}, {
									"case":	78,
									"scores":	[-4.94236107862164]
								}, {
									"case":	79,
									"scores":	[-4.94236107862164]
								}, {
									"case":	80,
									"scores":	[-4.94236107862164]
								}, {
									"case":	81,
									"scores":	[-4.94236107862164]
								}, {
									"case":	82,
									"scores":	[-4.94236107862164]
								}, {
									"case":	83,
									"scores":	[-4.94236107862164]
								}, {
									"case":	84,
									"scores":	[-4.94236107862164]
								}, {
									"case":	85,
									"scores":	[-4.94236107862164]
								}, {
									"case":	86,
									"scores":	[-4.94236107862164]
								}, {
									"case":	87,
									"scores":	[-4.94236107862164]
								}, {
									"case":	88,
									"scores":	[-4.94236107862164]
								}, {
									"case":	89,
									"scores":	[-4.94236107862164]
								}, {
									"case":	90,
									"scores":	[-4.94236107862164]
								}, {
									"case":	91,
									"scores":	[-4.94236107862164]
								}, {
									"case":	92,
									"scores":	[-4.94236107862164]
								}, {
									"case":	93,
									"scores":	[-4.94236107862164]
								}, {
									"case":	94,
									"scores":	[-4.94236107862164]
								}, {
									"case":	95,
									"scores":	[-4.94236107862164]
								}, {
									"case":	96,
									"scores":	[-4.94236107862164]
								}, {
									"case":	97,
									"scores":	[-4.94236107862164]
								}, {
									"case":	98,
									"scores":	[-4.94236107862164]
								}, {
									"case":	99,
									"scores":	[-4.94236107862164]
								}, {
									"case":	100,
									"scores":	[-4.94236107862164]
								}, {
									"case":	101,
									"scores":	[-4.94236107862164]
								}, {
									"case":	102,
									"scores":	[-4.94236107862164]
								}, {
									"case":	103,
									"scores":	[-4.94236107862164]
								}, {
									"case":	104,
									"scores":	[-4.94236107862164]
								}, {
									"case":	105,
									"scores":	[-4.94236107862164]
								}, {
									"case":	106,
									"scores":	[-4.94236107862164]
								}, {
									"case":	107,
									"scores":	[-4.94236107862164]
								}, {
									"case":	108,
									"scores":	[-4.94236107862164]
								}, {
									"case":	109,
									"scores":	[-4.94236107862164]
								}, {
									"case":	110,
									"scores":	[-4.94236107862164]
								}, {
									"case":	111,
									"scores":	[-4.94236107862164]
								}, {
									"case":	112,
									"scores":	[-4.94236107862164]
								}, {
									"case":	113,
									"scores":	[-4.94236107862164]
								}, {
									"case":	114,
									"scores":	[-4.94236107862164]
								}, {
									"case":	115,
									"scores":	[-4.94236107862164]
								}, {
									"case":	116,
									"scores":	[-4.94236107862164]
								}, {
									"case":	117,
									"scores":	[-4.94236107862164]
								}, {
									"case":	118,
									"scores":	[-4.94236107862164]
								}, {
									"case":	119,
									"scores":	[-4.94236107862164]
								}, {
									"case":	120,
									"scores":	[-4.94236107862164]
								}, {
									"case":	121,
									"scores":	[-4.94236107862164]
								}, {
									"case":	122,
									"scores":	[-4.94236107862164]
								}, {
									"case":	123,
									"scores":	[-4.94236107862164]
								}, {
									"case":	124,
									"scores":	[-4.94236107862164]
								}, {
									"case":	125,
									"scores":	[-4.94236107862164]
								}, {
									"case":	126,
									"scores":	[-4.94236107862164]
								}, {
									"case":	127,
									"scores":	[-4.94236107862164]
								}, {
									"case":	128,
									"scores":	[-4.94236107862164]
								}, {
									"case":	129,
									"scores":	[-4.94236107862164]
								}, {
									"case":	130,
									"scores":	[-4.94236107862164]
								}, {
									"case":	131,
									"scores":	[-4.94236107862164]
								}, {
									"case":	132,
									"scores":	[-4.94236107862164]
								}, {
									"case":	133,
									"scores":	[-4.94236107862164]
								}, {
									"case":	134,
									"scores":	[-4.94236107862164]
								}, {
									"case":	135,
									"scores":	[-4.94236107862164]
								}, {
									"case":	136,
									"scores":	[-4.94236107862164]
								}, {
									"case":	137,
									"scores":	[-4.94236107862164]
								}, {
									"case":	138,
									"scores":	[-4.94236107862164]
								}, {
									"case":	139,
									"scores":	[-4.94236107862164]
								}, {
									"case":	140,
									"scores":	[-4.94236107862164]
								}, {
									"case":	141,
									"scores":	[-4.94236107862164]
								}, {
									"case":	142,
									"scores":	[-8.46595302702164, -7.99629593582164, -7.24101179202164, -6.34662729942164, -6.63347997462164, -5.6701902046216386, -7.14272520462164, -7.71282804862164, -7.5688513664216384, -6.41693529562164, -7.71282804862164, -7.71282804862164]
								}]
						}, {
							"switch":	44,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	700,
							"begin_column":	3,
							"end_line":	725,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L700\", 12, &(op), sizeof (op), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(return_value), sizeof (return_value), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &((**op).type), sizeof ((**op).type), &(input), sizeof (input), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.74712165912164, -7.93975954862164, -7.55379914862164, -6.97040279462164, -6.45919314862164, -5.01462111862164, -6.08726544862164, -7.0674611586216383, -5.78036624862164, -5.17702815862164, -7.0674611586216383, -7.0674611586216383]
								}]
						}]
				}, {
					"line":	695,
					"switches":	[{
							"switch":	18,
							"types":	[[], [], [], [], [136], [1, 2, 3, 4, 5], [], [], [], [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [], [], [], [], [], []],
							"begin_line":	696,
							"begin_column":	7,
							"end_line":	696,
							"end_column":	7,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	2,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	3,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	4,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	5,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	6,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	7,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	8,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	9,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	10,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	11,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	12,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	13,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	14,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	15,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	16,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	17,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	18,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	19,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	20,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	21,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	22,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	23,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	24,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	25,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	26,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	27,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	28,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	29,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	30,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	31,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	32,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	33,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	34,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	35,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	36,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	37,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	38,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	39,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	40,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	41,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	42,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	43,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	44,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	45,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	46,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	47,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	48,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	49,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	50,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	51,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	52,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	53,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	54,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	55,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	56,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	57,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	58,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	59,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	60,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	61,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	62,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	63,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	64,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	65,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	66,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	67,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	68,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	69,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	70,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	71,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	72,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	73,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	74,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	75,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	76,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	77,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	78,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	79,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	80,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	81,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	82,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	83,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	84,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	85,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	86,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	87,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	88,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	89,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	90,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	91,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	92,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	93,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	94,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	95,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	96,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	97,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	98,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	99,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	100,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	101,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	102,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	103,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	104,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	105,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	106,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	107,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	108,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	109,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	110,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	111,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	112,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	113,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	114,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	115,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	116,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	117,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	118,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	119,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	120,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	121,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	122,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	123,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	124,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	125,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	126,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	127,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	128,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	129,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	130,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	131,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	132,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	133,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	134,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	135,
									"scores":	[-5.0029692005741975]
								}, {
									"case":	136,
									"scores":	[-8.027736508974197, -7.5661707905741977, -6.2130163413741979, -7.4553544883741978, -7.8827990577741973, -7.1275149139741973, -6.5199830965741974, -5.5566933265741971, -7.0292283265741968, -6.3034384175741973, -7.5993311705741977, -7.5993311705741977]
								}]
						}, {
							"switch":	19,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	696,
							"begin_column":	9,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((**op).type == 4) || __is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((**op).type == 4) && !__is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.813435437828145, -0.170562447828146, -2.1085112378281456, -1.0074575378281447, -3.1668508378281466, -2.7808904378281465, -1.6862844378281454, -0.241712407828143, -1.3143567378281458, -0.40411944782814624, -2.2945524478281452, -2.2945524478281452]
								}, {
									"case":	2,
									"scores":	[-2.7747251344281461, -1.1318521444281466, -3.0698009344281445, -1.9687472344281449, -4.1281405344281454, -3.7421801344281458, -2.6475741344281447, -1.203002104428144, -2.2756464344281451, -1.3654091444281469, -3.2558421444281458, -3.2558421444281458]
								}, {
									"case":	3,
									"scores":	[-2.7747251344281461, -1.1318521444281466, -3.0698009344281445, -1.9687472344281449, -4.1281405344281454, -3.7421801344281458, -2.6475741344281447, -1.203002104428144, -2.2756464344281451, -1.3654091444281469, -3.2558421444281458, -3.2558421444281458]
								}]
						}, {
							"switch":	45,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	696,
							"begin_column":	9,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    if ((**op).type == 4) {\n        _array_init((return_value), 0);\n        zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n        for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n            if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (arg_key_len < 2) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n                add_assoc_null_ex(return_value, arg_key, arg_key_len);\n            } else {\n                zval *nval;\n                do {\n                    (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                    ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n                } while (0);\n                do {\n                    do {\n                        (nval)->value = (*(tmp))->value;\n                        (*nval).type = (**(tmp)).type;\n                    } while (0);\n                    zval_set_refcount_p(nval, 1);\n                    zval_unset_isref_p(nval);\n                } while (0);\n                _zval_copy_ctor(((nval)));\n                ;\n                php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n                add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n            }\n        }\n    } else {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L696\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)) && ((**op).type == 4)) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.4486482705741981, -4.8057752805741973, -6.7437240705741974, -5.6426703705741978, -7.8020636705741975, -7.4161032705741974, -6.3214972705741976, -4.876925240574197, -5.9495695705741971, -5.0393322805741976, -6.9297652805741974, -6.9297652805741974]
								}, {
									"case":	2,
									"scores":	[-4.3479649295741964, -2.7050919395741966, -4.6430407295741976, -3.5419870295741971, -5.7013803295741976, -5.3154199295741975, -4.2208139295741978, -2.7762418995741962, -3.8488862295741977, -2.9386489395741968, -4.8290819395741984, -4.8290819395741984]
								}]
						}]
				}, {
					"line":	691,
					"switches":	[{
							"switch":	16,
							"types":	[[], [], [], [], [136], [1, 2, 3, 4, 5], [], [], [], [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [], [], [], [], [], []],
							"begin_line":	692,
							"begin_column":	7,
							"end_line":	692,
							"end_column":	7,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.023171907891717]
								}, {
									"case":	2,
									"scores":	[-5.023171907891717]
								}, {
									"case":	3,
									"scores":	[-5.023171907891717]
								}, {
									"case":	4,
									"scores":	[-5.023171907891717]
								}, {
									"case":	5,
									"scores":	[-5.023171907891717]
								}, {
									"case":	6,
									"scores":	[-5.023171907891717]
								}, {
									"case":	7,
									"scores":	[-5.023171907891717]
								}, {
									"case":	8,
									"scores":	[-5.023171907891717]
								}, {
									"case":	9,
									"scores":	[-5.023171907891717]
								}, {
									"case":	10,
									"scores":	[-5.023171907891717]
								}, {
									"case":	11,
									"scores":	[-5.023171907891717]
								}, {
									"case":	12,
									"scores":	[-5.023171907891717]
								}, {
									"case":	13,
									"scores":	[-5.023171907891717]
								}, {
									"case":	14,
									"scores":	[-5.023171907891717]
								}, {
									"case":	15,
									"scores":	[-5.023171907891717]
								}, {
									"case":	16,
									"scores":	[-5.023171907891717]
								}, {
									"case":	17,
									"scores":	[-5.023171907891717]
								}, {
									"case":	18,
									"scores":	[-5.023171907891717]
								}, {
									"case":	19,
									"scores":	[-5.023171907891717]
								}, {
									"case":	20,
									"scores":	[-5.023171907891717]
								}, {
									"case":	21,
									"scores":	[-5.023171907891717]
								}, {
									"case":	22,
									"scores":	[-5.023171907891717]
								}, {
									"case":	23,
									"scores":	[-5.023171907891717]
								}, {
									"case":	24,
									"scores":	[-5.023171907891717]
								}, {
									"case":	25,
									"scores":	[-5.023171907891717]
								}, {
									"case":	26,
									"scores":	[-5.023171907891717]
								}, {
									"case":	27,
									"scores":	[-5.023171907891717]
								}, {
									"case":	28,
									"scores":	[-5.023171907891717]
								}, {
									"case":	29,
									"scores":	[-5.023171907891717]
								}, {
									"case":	30,
									"scores":	[-5.023171907891717]
								}, {
									"case":	31,
									"scores":	[-5.023171907891717]
								}, {
									"case":	32,
									"scores":	[-5.023171907891717]
								}, {
									"case":	33,
									"scores":	[-5.023171907891717]
								}, {
									"case":	34,
									"scores":	[-5.023171907891717]
								}, {
									"case":	35,
									"scores":	[-5.023171907891717]
								}, {
									"case":	36,
									"scores":	[-5.023171907891717]
								}, {
									"case":	37,
									"scores":	[-5.023171907891717]
								}, {
									"case":	38,
									"scores":	[-5.023171907891717]
								}, {
									"case":	39,
									"scores":	[-5.023171907891717]
								}, {
									"case":	40,
									"scores":	[-5.023171907891717]
								}, {
									"case":	41,
									"scores":	[-5.023171907891717]
								}, {
									"case":	42,
									"scores":	[-5.023171907891717]
								}, {
									"case":	43,
									"scores":	[-5.023171907891717]
								}, {
									"case":	44,
									"scores":	[-5.023171907891717]
								}, {
									"case":	45,
									"scores":	[-5.023171907891717]
								}, {
									"case":	46,
									"scores":	[-5.023171907891717]
								}, {
									"case":	47,
									"scores":	[-5.023171907891717]
								}, {
									"case":	48,
									"scores":	[-5.023171907891717]
								}, {
									"case":	49,
									"scores":	[-5.023171907891717]
								}, {
									"case":	50,
									"scores":	[-5.023171907891717]
								}, {
									"case":	51,
									"scores":	[-5.023171907891717]
								}, {
									"case":	52,
									"scores":	[-5.023171907891717]
								}, {
									"case":	53,
									"scores":	[-5.023171907891717]
								}, {
									"case":	54,
									"scores":	[-5.023171907891717]
								}, {
									"case":	55,
									"scores":	[-5.023171907891717]
								}, {
									"case":	56,
									"scores":	[-5.023171907891717]
								}, {
									"case":	57,
									"scores":	[-5.023171907891717]
								}, {
									"case":	58,
									"scores":	[-5.023171907891717]
								}, {
									"case":	59,
									"scores":	[-5.023171907891717]
								}, {
									"case":	60,
									"scores":	[-5.023171907891717]
								}, {
									"case":	61,
									"scores":	[-5.023171907891717]
								}, {
									"case":	62,
									"scores":	[-5.023171907891717]
								}, {
									"case":	63,
									"scores":	[-5.023171907891717]
								}, {
									"case":	64,
									"scores":	[-5.023171907891717]
								}, {
									"case":	65,
									"scores":	[-5.023171907891717]
								}, {
									"case":	66,
									"scores":	[-5.023171907891717]
								}, {
									"case":	67,
									"scores":	[-5.023171907891717]
								}, {
									"case":	68,
									"scores":	[-5.023171907891717]
								}, {
									"case":	69,
									"scores":	[-5.023171907891717]
								}, {
									"case":	70,
									"scores":	[-5.023171907891717]
								}, {
									"case":	71,
									"scores":	[-5.023171907891717]
								}, {
									"case":	72,
									"scores":	[-5.023171907891717]
								}, {
									"case":	73,
									"scores":	[-5.023171907891717]
								}, {
									"case":	74,
									"scores":	[-5.023171907891717]
								}, {
									"case":	75,
									"scores":	[-5.023171907891717]
								}, {
									"case":	76,
									"scores":	[-5.023171907891717]
								}, {
									"case":	77,
									"scores":	[-5.023171907891717]
								}, {
									"case":	78,
									"scores":	[-5.023171907891717]
								}, {
									"case":	79,
									"scores":	[-5.023171907891717]
								}, {
									"case":	80,
									"scores":	[-5.023171907891717]
								}, {
									"case":	81,
									"scores":	[-5.023171907891717]
								}, {
									"case":	82,
									"scores":	[-5.023171907891717]
								}, {
									"case":	83,
									"scores":	[-5.023171907891717]
								}, {
									"case":	84,
									"scores":	[-5.023171907891717]
								}, {
									"case":	85,
									"scores":	[-5.023171907891717]
								}, {
									"case":	86,
									"scores":	[-5.023171907891717]
								}, {
									"case":	87,
									"scores":	[-5.023171907891717]
								}, {
									"case":	88,
									"scores":	[-5.023171907891717]
								}, {
									"case":	89,
									"scores":	[-5.023171907891717]
								}, {
									"case":	90,
									"scores":	[-5.023171907891717]
								}, {
									"case":	91,
									"scores":	[-5.023171907891717]
								}, {
									"case":	92,
									"scores":	[-5.023171907891717]
								}, {
									"case":	93,
									"scores":	[-5.023171907891717]
								}, {
									"case":	94,
									"scores":	[-5.023171907891717]
								}, {
									"case":	95,
									"scores":	[-5.023171907891717]
								}, {
									"case":	96,
									"scores":	[-5.023171907891717]
								}, {
									"case":	97,
									"scores":	[-5.023171907891717]
								}, {
									"case":	98,
									"scores":	[-5.023171907891717]
								}, {
									"case":	99,
									"scores":	[-5.023171907891717]
								}, {
									"case":	100,
									"scores":	[-5.023171907891717]
								}, {
									"case":	101,
									"scores":	[-5.023171907891717]
								}, {
									"case":	102,
									"scores":	[-5.023171907891717]
								}, {
									"case":	103,
									"scores":	[-5.023171907891717]
								}, {
									"case":	104,
									"scores":	[-5.023171907891717]
								}, {
									"case":	105,
									"scores":	[-5.023171907891717]
								}, {
									"case":	106,
									"scores":	[-5.023171907891717]
								}, {
									"case":	107,
									"scores":	[-5.023171907891717]
								}, {
									"case":	108,
									"scores":	[-5.023171907891717]
								}, {
									"case":	109,
									"scores":	[-5.023171907891717]
								}, {
									"case":	110,
									"scores":	[-5.023171907891717]
								}, {
									"case":	111,
									"scores":	[-5.023171907891717]
								}, {
									"case":	112,
									"scores":	[-5.023171907891717]
								}, {
									"case":	113,
									"scores":	[-5.023171907891717]
								}, {
									"case":	114,
									"scores":	[-5.023171907891717]
								}, {
									"case":	115,
									"scores":	[-5.023171907891717]
								}, {
									"case":	116,
									"scores":	[-5.023171907891717]
								}, {
									"case":	117,
									"scores":	[-5.023171907891717]
								}, {
									"case":	118,
									"scores":	[-5.023171907891717]
								}, {
									"case":	119,
									"scores":	[-5.023171907891717]
								}, {
									"case":	120,
									"scores":	[-5.023171907891717]
								}, {
									"case":	121,
									"scores":	[-5.023171907891717]
								}, {
									"case":	122,
									"scores":	[-5.023171907891717]
								}, {
									"case":	123,
									"scores":	[-5.023171907891717]
								}, {
									"case":	124,
									"scores":	[-5.023171907891717]
								}, {
									"case":	125,
									"scores":	[-5.023171907891717]
								}, {
									"case":	126,
									"scores":	[-5.023171907891717]
								}, {
									"case":	127,
									"scores":	[-5.023171907891717]
								}, {
									"case":	128,
									"scores":	[-5.023171907891717]
								}, {
									"case":	129,
									"scores":	[-5.023171907891717]
								}, {
									"case":	130,
									"scores":	[-5.023171907891717]
								}, {
									"case":	131,
									"scores":	[-5.023171907891717]
								}, {
									"case":	132,
									"scores":	[-5.023171907891717]
								}, {
									"case":	133,
									"scores":	[-5.023171907891717]
								}, {
									"case":	134,
									"scores":	[-5.023171907891717]
								}, {
									"case":	135,
									"scores":	[-5.023171907891717]
								}, {
									"case":	136,
									"scores":	[-8.0479392162917165, -7.5863734978917172, -6.1671327915917171, -6.1383061476917167, -7.9030017650917168, -7.1477176212917168, -6.5401858038917169, -5.5768960338917166, -7.0494310338917163, -6.3236411248917168, -7.6195338778917172, -7.6195338778917172]
								}]
						}, {
							"switch":	17,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	692,
							"begin_column":	9,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((**op).type == 1) || __is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((**op).type == 1) && !__is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.5071026278281425, -0.86422963782814533, -2.5753875378281439, -1.3669678378281431, -3.8605180278281468, -3.4745576278281467, -2.3799516278281434, -0.935379597828145, -2.0080239278281438, -1.0977866378281438, -2.9882196378281449, -2.9882196378281449]
								}, {
									"case":	2,
									"scores":	[-2.9560805344281453, -1.313207544428145, -3.0243654444281445, -1.815945744428145, -4.3094959344281456, -3.923535534428146, -2.8289295344281449, -1.3843575044281446, -2.4570018344281452, -1.5467645444281453, -3.4371975444281464, -3.4371975444281464]
								}, {
									"case":	3,
									"scores":	[-2.9560805344281453, -1.313207544428145, -3.0243654444281445, -1.815945744428145, -4.3094959344281456, -3.923535534428146, -2.8289295344281449, -1.3843575044281446, -2.4570018344281452, -1.5467645444281453, -3.4371975444281464, -3.4371975444281464]
								}]
						}, {
							"switch":	46,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	692,
							"begin_column":	9,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    if ((**op).type == 1) {\n        _zval_dtor((return_value));\n        do {\n            do {\n                (return_value)->value = (*(&input))->value;\n                (*return_value).type = (**(&input)).type;\n            } while (0);\n            zval_set_refcount_p(return_value, 1);\n            zval_unset_isref_p(return_value);\n        } while (0);\n        _zval_copy_ctor(((return_value)));\n        ;\n        php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n    } else if ((**op).type == 4) {\n        _array_init((return_value), 0);\n        zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n        for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n            if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (arg_key_len < 2) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n                add_assoc_null_ex(return_value, arg_key, arg_key_len);\n            } else {\n                zval *nval;\n                do {\n                    (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                    ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n                } while (0);\n                do {\n                    do {\n                        (nval)->value = (*(tmp))->value;\n                        (*nval).type = (**(tmp)).type;\n                    } while (0);\n                    zval_set_refcount_p(nval, 1);\n                    zval_unset_isref_p(nval);\n                } while (0);\n                _zval_copy_ctor(((nval)));\n                ;\n                php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n                add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n            }\n        }\n    } else {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L692\", 12, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)) && ((**op).type == 1)) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.4688509778917176, -4.8259779878917168, -6.5371358878917176, -5.3287161878917173, -7.822266377891717, -7.4363059778917169, -6.3416999778917171, -4.8971279478917165, -5.9697722778917166, -5.0595349878917171, -6.9499679878917169, -6.9499679878917169]
								}, {
									"case":	2,
									"scores":	[-4.1189240368917162, -2.4760510468917154, -4.1872089468917162, -2.9787892468917154, -5.4723394368917164, -5.0863790368917172, -3.9917730368917161, -2.5472010068917159, -3.6198453368917161, -2.7096080468917156, -4.6000410468917172, -4.6000410468917172]
								}]
						}]
				}, {
					"line":	687,
					"switches":	[{
							"switch":	14,
							"types":	[[], [], [], [], [136], [1, 2, 3, 4, 5], [], [], [], [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [], [], [], [], [], []],
							"begin_line":	688,
							"begin_column":	0,
							"end_line":	688,
							"end_column":	0,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "(**(arg_elm)).value.ht->nApplyCount++", "(**(arg_elm)).value.ht->nApplyCount--", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(tmp)).value.ht->nApplyCount++", "(**(tmp)).value.ht->nApplyCount--", "(arg_key)++", "(filter_globals.cookie_array) = (input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (16777216)", "(filter_globals.default_filter) = (2)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (33554432)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (516)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (16777216)", "(filter_globals.default_filter_flags) = (2)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (33554432)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (516)", "(filter_globals.default_filter_flags) = atoi((arg_key))", "(filter_globals.env_array) = (input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.get_array) = (input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.post_array) = (input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.server_array) = (input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.session_array) = (input)", "(filter_globals.session_array) = (return_value)", "_array_init(((input)), 0)", "_array_init(((return_value)), 0)", "_array_init((*(arg_elm)), 0)", "_array_init((*(op)), 0)", "_array_init((*(tmp)), 0)", "_convert_to_string((*(arg_elm)))", "_convert_to_string((*(op)))", "_convert_to_string((*(tmp)))", "_efree(((input)))", "_efree(((return_value)))", "_zval_copy_ctor((((input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor(((*(arg_elm))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(tmp))))", "_zval_copy_ctor_func((input))", "_zval_copy_ctor_func((return_value))", "_zval_dtor(((input)))", "_zval_dtor(((return_value)))", "_zval_dtor((*(arg_elm)))", "_zval_dtor((*(op)))", "_zval_dtor((*(tmp)))", "_zval_dtor_func((input))", "_zval_dtor_func((return_value))", "_zval_ptr_dtor((&(input)))", "_zval_ptr_dtor((&(return_value)))", "add_assoc_null_ex((input), arg_key, arg_key_len)", "add_assoc_null_ex((return_value), arg_key, arg_key_len)", "add_assoc_null_ex(return_value, (arg_key), arg_key_len)", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (input))", "add_assoc_zval_ex(return_value, arg_key, arg_key_len, (return_value))", "convert_to_boolean((input))", "convert_to_boolean((return_value))", "gc_remove_zval_from_buffer((input))", "gc_remove_zval_from_buffer((return_value))", "gc_zval_check_possible_root(((input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_possible_root((input))", "gc_zval_possible_root((return_value))", "i_zval_ptr_dtor((input))", "i_zval_ptr_dtor((return_value))", "php_filter_call(&(input), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(input), -1, arg_elm, 0, 33554432)", "php_filter_call(&(input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), -1, arg_elm, 0, 33554432)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(arg_elm)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(op)).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, (**(tmp)).value.lval, ((void *)0), 0, 16777216)", "php_zval_filter(&(input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(arg_elm)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(tmp)).value.ht, ((void *)0))", "zval_unset_isref_p((input))", "zval_unset_isref_p((return_value))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_array_init((return_value), 0)", "_zval_copy_ctor(((return_value)))", "_zval_dtor((return_value))", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "add_assoc_null_ex(return_value, arg_key, arg_key_len)", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216)", "php_filter_call(&return_value, 516, ((void *)0), 0, 16777216)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0))", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0433746152092365]
								}, {
									"case":	2,
									"scores":	[-5.0433746152092365]
								}, {
									"case":	3,
									"scores":	[-5.0433746152092365]
								}, {
									"case":	4,
									"scores":	[-5.0433746152092365]
								}, {
									"case":	5,
									"scores":	[-5.0433746152092365]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-8.04965462360924, -6.1688481989092363, -6.1400215550092359, -7.904717172409236, -7.149433028609236, -6.5419012112092361, -5.5786114412092367, -7.0511464412092355, -6.325356532209236]
								}]
						}, {
							"switch":	15,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	688,
							"begin_column":	2,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, 516, ((void *)0), 0, 16777216);\n} else if ((**op).type == 1) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!op) || __is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, 516, ((void *)0), 0, 16777216);\n} else if ((**op).type == 1) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((!op) && !__is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp))) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, 516, ((void *)0), 0, 16777216);\n} else if ((**op).type == 1) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.5071026278281425, -2.5753875378281439, -1.3669678378281431, -3.8605180278281468, -3.4745576278281467, -2.3799516278281434, -0.935379597828145, -2.0080239278281438, -1.0977866378281438]
								}, {
									"case":	2,
									"scores":	[-4.9767871754281456, -5.0450720854281457, -3.8366523854281458, -6.3302025754281459, -5.9442421754281458, -4.8496361754281461, -3.4050641454281458, -4.4777084754281455, -3.567471185428146]
								}, {
									"case":	3,
									"scores":	[-4.9767871754281456, -5.0450720854281457, -3.8366523854281458, -6.3302025754281459, -5.9442421754281458, -4.8496361754281461, -3.4050641454281458, -4.4777084754281455, -3.567471185428146]
								}]
						}, {
							"switch":	47,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	688,
							"begin_column":	2,
							"end_line":	728,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp)))\n    if (!op) {\n        _zval_dtor((return_value));\n        do {\n            do {\n                (return_value)->value = (*(&input))->value;\n                (*return_value).type = (**(&input)).type;\n            } while (0);\n            zval_set_refcount_p(return_value, 1);\n            zval_unset_isref_p(return_value);\n        } while (0);\n        _zval_copy_ctor(((return_value)));\n        ;\n        php_filter_call(&return_value, 516, ((void *)0), 0, 16777216);\n    } else if ((**op).type == 1) {\n        _zval_dtor((return_value));\n        do {\n            do {\n                (return_value)->value = (*(&input))->value;\n                (*return_value).type = (**(&input)).type;\n            } while (0);\n            zval_set_refcount_p(return_value, 1);\n            zval_unset_isref_p(return_value);\n        } while (0);\n        _zval_copy_ctor(((return_value)));\n        ;\n        php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n    } else if ((**op).type == 4) {\n        _array_init((return_value), 0);\n        zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n        for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n            if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (arg_key_len < 2) {\n                php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n                _zval_dtor((return_value));\n                {\n                    do {\n                        zval *__z = (return_value);\n                        (*__z).value.lval = ((0) != 0);\n                        (*__z).type = 3;\n                    } while (0);\n                    return;\n                }\n                ;\n            }\n            if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n                add_assoc_null_ex(return_value, arg_key, arg_key_len);\n            } else {\n                zval *nval;\n                do {\n                    (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                    ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n                } while (0);\n                do {\n                    do {\n                        (nval)->value = (*(tmp))->value;\n                        (*nval).type = (**(tmp)).type;\n                    } while (0);\n                    zval_set_refcount_p(nval, 1);\n                    zval_unset_isref_p(nval);\n                } while (0);\n                _zval_copy_ctor(((nval)));\n                ;\n                php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n                add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n            }\n        }\n    } else {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n", "if (!__is_neg(\"\", \"L688\", 9, &(op), sizeof (op), &(return_value), sizeof (return_value), &(input), sizeof (input), &(pos), sizeof (pos), &(arg_elm), sizeof (arg_elm), &(arg_key), sizeof (arg_key), &(arg_key_len), sizeof (arg_key_len), &(index), sizeof (index), &(tmp), sizeof (tmp)) && (!op)) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, 516, ((void *)0), 0, 16777216);\n} else if ((**op).type == 1) {\n    _zval_dtor((return_value));\n    do {\n        do {\n            (return_value)->value = (*(&input))->value;\n            (*return_value).type = (**(&input)).type;\n        } while (0);\n        zval_set_refcount_p(return_value, 1);\n        zval_unset_isref_p(return_value);\n    } while (0);\n    _zval_copy_ctor(((return_value)));\n    ;\n    php_filter_call(&return_value, (**op).value.lval, ((void *)0), 0, 16777216);\n} else if ((**op).type == 4) {\n    _array_init((return_value), 0);\n    zend_hash_internal_pointer_reset_ex((**op).value.ht, ((void *)0));\n    for (zend_hash_internal_pointer_reset_ex((**op).value.ht, &pos); zend_hash_get_current_data_ex((**op).value.ht, (void **)&arg_elm, &pos) == 0; zend_hash_move_forward_ex((**op).value.ht, &pos)) {\n        if (zend_hash_get_current_key_ex((**op).value.ht, &arg_key, &arg_key_len, &index, 0, &pos) != 1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (arg_key_len < 2) {\n            php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\");\n            _zval_dtor((return_value));\n            {\n                do {\n                    zval *__z = (return_value);\n                    (*__z).value.lval = ((0) != 0);\n                    (*__z).type = 3;\n                } while (0);\n                return;\n            }\n            ;\n        }\n        if (zend_hash_find((*input).value.ht, arg_key, arg_key_len, (void **)&tmp) != 0) {\n            add_assoc_null_ex(return_value, arg_key, arg_key_len);\n        } else {\n            zval *nval;\n            do {\n                (nval) = (zval *)_emalloc((sizeof(zval_gc_info)));\n                ((zval_gc_info *)(nval))->u.buffered = ((void *)0);\n            } while (0);\n            do {\n                do {\n                    (nval)->value = (*(tmp))->value;\n                    (*nval).type = (**(tmp)).type;\n                } while (0);\n                zval_set_refcount_p(nval, 1);\n                zval_unset_isref_p(nval);\n            } while (0);\n            _zval_copy_ctor(((nval)));\n            ;\n            php_filter_call(&nval, -1, arg_elm, 0, 33554432);\n            add_assoc_zval_ex(return_value, arg_key, arg_key_len, nval);\n        }\n    }\n} else {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.4705663852092368, -6.5388512952092368, -5.3304315952092365, -7.8239817852092362, -7.4380213852092361, -6.3434153852092363, -4.8988433552092365, -5.9714876852092367, -5.0612503952092363]
								}, {
									"case":	2,
									"scores":	[-6.159833385209236, -6.228118295209236, -5.0196985952092366, -7.5132487852092362, -7.127288385209237, -6.0326823852092364, -4.5881103552092366, -5.6607546852092367, -4.7505173952092363]
								}]
						}]
				}, {
					"line":	864,
					"switches":	[]
				}, {
					"line":	867,
					"switches":	[{
							"switch":	50,
							"types":	[[], [], [], [], [145], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	868,
							"begin_column":	1,
							"end_line":	868,
							"end_column":	1,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(return_value_ptr)).value.ht->nApplyCount++", "(**(return_value_ptr)).value.ht->nApplyCount--", "(filter_globals.cookie_array) = (array_input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.cookie_array) = (this_ptr)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (256)", "(filter_globals.default_filter) = (275)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (512)", "(filter_globals.default_filter) = (522)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (256)", "(filter_globals.default_filter_flags) = (275)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (512)", "(filter_globals.default_filter_flags) = (522)", "(filter_globals.env_array) = (array_input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.env_array) = (this_ptr)", "(filter_globals.get_array) = (array_input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.get_array) = (this_ptr)", "(filter_globals.post_array) = (array_input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.post_array) = (this_ptr)", "(filter_globals.server_array) = (array_input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.server_array) = (this_ptr)", "(filter_globals.session_array) = (array_input)", "(filter_globals.session_array) = (return_value)", "(filter_globals.session_array) = (this_ptr)", "_array_init(((array_input)), 0)", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_array_init((*(op)), 0)", "_array_init((*(return_value_ptr)), 0)", "_convert_to_string((*(op)))", "_convert_to_string((*(return_value_ptr)))", "_efree(((array_input)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor((((array_input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor((((this_ptr))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(return_value_ptr))))", "_zval_copy_ctor_func((array_input))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((array_input)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor((*(op)))", "_zval_dtor((*(return_value_ptr)))", "_zval_dtor_func((array_input))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(array_input)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((array_input))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "gc_remove_zval_from_buffer((array_input))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((array_input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((array_input))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((array_input))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "php_filter_array_handler((array_input), op, return_value)", "php_filter_array_handler((return_value), op, return_value)", "php_filter_array_handler((this_ptr), op, return_value)", "php_filter_array_handler(array_input, (op), return_value)", "php_filter_array_handler(array_input, (return_value_ptr), return_value)", "php_filter_array_handler(array_input, op, (array_input))", "php_filter_array_handler(array_input, op, (return_value))", "php_filter_array_handler(array_input, op, (this_ptr))", "php_filter_call(&(array_input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(this_ptr), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(array_input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(this_ptr), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(return_value_ptr)).value.ht, ((void *)0))", "zval_unset_isref_p((array_input))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_array_handler(array_input, op, return_value)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L868\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.912023005428146]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}, {
									"case":	69,
									"scores":	[-3.912023005428146]
								}, {
									"case":	70,
									"scores":	[-3.912023005428146]
								}, {
									"case":	71,
									"scores":	[-3.912023005428146]
								}, {
									"case":	72,
									"scores":	[-3.912023005428146]
								}, {
									"case":	73,
									"scores":	[-3.912023005428146]
								}, {
									"case":	74,
									"scores":	[-3.912023005428146]
								}, {
									"case":	75,
									"scores":	[-3.912023005428146]
								}, {
									"case":	76,
									"scores":	[-3.912023005428146]
								}, {
									"case":	77,
									"scores":	[-3.912023005428146]
								}, {
									"case":	78,
									"scores":	[-3.912023005428146]
								}, {
									"case":	79,
									"scores":	[-3.912023005428146]
								}, {
									"case":	80,
									"scores":	[-3.912023005428146]
								}, {
									"case":	81,
									"scores":	[-3.912023005428146]
								}, {
									"case":	82,
									"scores":	[-3.912023005428146]
								}, {
									"case":	83,
									"scores":	[-3.912023005428146]
								}, {
									"case":	84,
									"scores":	[-3.912023005428146]
								}, {
									"case":	85,
									"scores":	[-3.912023005428146]
								}, {
									"case":	86,
									"scores":	[-3.912023005428146]
								}, {
									"case":	87,
									"scores":	[-3.912023005428146]
								}, {
									"case":	88,
									"scores":	[-3.912023005428146]
								}, {
									"case":	89,
									"scores":	[-3.912023005428146]
								}, {
									"case":	90,
									"scores":	[-3.912023005428146]
								}, {
									"case":	91,
									"scores":	[-3.912023005428146]
								}, {
									"case":	92,
									"scores":	[-3.912023005428146]
								}, {
									"case":	93,
									"scores":	[-3.912023005428146]
								}, {
									"case":	94,
									"scores":	[-3.912023005428146]
								}, {
									"case":	95,
									"scores":	[-3.912023005428146]
								}, {
									"case":	96,
									"scores":	[-3.912023005428146]
								}, {
									"case":	97,
									"scores":	[-3.912023005428146]
								}, {
									"case":	98,
									"scores":	[-3.912023005428146]
								}, {
									"case":	99,
									"scores":	[-3.912023005428146]
								}, {
									"case":	100,
									"scores":	[-3.912023005428146]
								}, {
									"case":	101,
									"scores":	[-3.912023005428146]
								}, {
									"case":	102,
									"scores":	[-3.912023005428146]
								}, {
									"case":	103,
									"scores":	[-3.912023005428146]
								}, {
									"case":	104,
									"scores":	[-3.912023005428146]
								}, {
									"case":	105,
									"scores":	[-3.912023005428146]
								}, {
									"case":	106,
									"scores":	[-3.912023005428146]
								}, {
									"case":	107,
									"scores":	[-3.912023005428146]
								}, {
									"case":	108,
									"scores":	[-3.912023005428146]
								}, {
									"case":	109,
									"scores":	[-3.912023005428146]
								}, {
									"case":	110,
									"scores":	[-3.912023005428146]
								}, {
									"case":	111,
									"scores":	[-3.912023005428146]
								}, {
									"case":	112,
									"scores":	[-3.912023005428146]
								}, {
									"case":	113,
									"scores":	[-3.912023005428146]
								}, {
									"case":	114,
									"scores":	[-3.912023005428146]
								}, {
									"case":	115,
									"scores":	[-3.912023005428146]
								}, {
									"case":	116,
									"scores":	[-3.912023005428146]
								}, {
									"case":	117,
									"scores":	[-3.912023005428146]
								}, {
									"case":	118,
									"scores":	[-3.912023005428146]
								}, {
									"case":	119,
									"scores":	[-3.912023005428146]
								}, {
									"case":	120,
									"scores":	[-3.912023005428146]
								}, {
									"case":	121,
									"scores":	[-3.912023005428146]
								}, {
									"case":	122,
									"scores":	[-3.912023005428146]
								}, {
									"case":	123,
									"scores":	[-3.912023005428146]
								}, {
									"case":	124,
									"scores":	[-3.912023005428146]
								}, {
									"case":	125,
									"scores":	[-3.912023005428146]
								}, {
									"case":	126,
									"scores":	[-3.912023005428146]
								}, {
									"case":	127,
									"scores":	[-3.912023005428146]
								}, {
									"case":	128,
									"scores":	[-3.912023005428146]
								}, {
									"case":	129,
									"scores":	[-3.912023005428146]
								}, {
									"case":	130,
									"scores":	[-3.912023005428146]
								}, {
									"case":	131,
									"scores":	[-3.912023005428146]
								}, {
									"case":	132,
									"scores":	[-3.912023005428146]
								}, {
									"case":	133,
									"scores":	[-3.912023005428146]
								}, {
									"case":	134,
									"scores":	[-3.912023005428146]
								}, {
									"case":	135,
									"scores":	[-3.912023005428146]
								}, {
									"case":	136,
									"scores":	[-3.912023005428146]
								}, {
									"case":	137,
									"scores":	[-3.912023005428146]
								}, {
									"case":	138,
									"scores":	[-3.912023005428146]
								}, {
									"case":	139,
									"scores":	[-3.912023005428146]
								}, {
									"case":	140,
									"scores":	[-3.912023005428146]
								}, {
									"case":	141,
									"scores":	[-3.912023005428146]
								}, {
									"case":	142,
									"scores":	[-3.912023005428146]
								}, {
									"case":	143,
									"scores":	[-3.912023005428146]
								}, {
									"case":	144,
									"scores":	[-3.912023005428146]
								}, {
									"case":	145,
									"scores":	[-5.1820193014281459, -5.3909578152281457, -5.6133931924281457, -5.6856433892281455]
								}]
						}, {
							"switch":	51,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	868,
							"begin_column":	3,
							"end_line":	868,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L868\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.7833057754281461, -5.2468430754281457, -5.2720126754281456, -5.8549915754281461]
								}]
						}]
				}, {
					"line":	866,
					"switches":	[{
							"switch":	48,
							"types":	[[], [], [], [], [145], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	867,
							"begin_column":	0,
							"end_line":	867,
							"end_column":	0,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(return_value_ptr)).value.ht->nApplyCount++", "(**(return_value_ptr)).value.ht->nApplyCount--", "(filter_globals.cookie_array) = (array_input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.cookie_array) = (this_ptr)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (256)", "(filter_globals.default_filter) = (275)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (512)", "(filter_globals.default_filter) = (522)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (256)", "(filter_globals.default_filter_flags) = (275)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (512)", "(filter_globals.default_filter_flags) = (522)", "(filter_globals.env_array) = (array_input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.env_array) = (this_ptr)", "(filter_globals.get_array) = (array_input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.get_array) = (this_ptr)", "(filter_globals.post_array) = (array_input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.post_array) = (this_ptr)", "(filter_globals.server_array) = (array_input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.server_array) = (this_ptr)", "(filter_globals.session_array) = (array_input)", "(filter_globals.session_array) = (return_value)", "(filter_globals.session_array) = (this_ptr)", "_array_init(((array_input)), 0)", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_array_init((*(op)), 0)", "_array_init((*(return_value_ptr)), 0)", "_convert_to_string((*(op)))", "_convert_to_string((*(return_value_ptr)))", "_efree(((array_input)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor((((array_input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor((((this_ptr))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(return_value_ptr))))", "_zval_copy_ctor_func((array_input))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((array_input)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor((*(op)))", "_zval_dtor((*(return_value_ptr)))", "_zval_dtor_func((array_input))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(array_input)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((array_input))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "gc_remove_zval_from_buffer((array_input))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((array_input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((array_input))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((array_input))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "php_filter_array_handler((array_input), op, return_value)", "php_filter_array_handler((return_value), op, return_value)", "php_filter_array_handler((this_ptr), op, return_value)", "php_filter_array_handler(array_input, (op), return_value)", "php_filter_array_handler(array_input, (return_value_ptr), return_value)", "php_filter_array_handler(array_input, op, (array_input))", "php_filter_array_handler(array_input, op, (return_value))", "php_filter_array_handler(array_input, op, (this_ptr))", "php_filter_call(&(array_input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(this_ptr), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(array_input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(this_ptr), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(return_value_ptr)).value.ht, ((void *)0))", "zval_unset_isref_p((array_input))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_array_handler(array_input, op, return_value)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.53830693227125]
								}, {
									"case":	2,
									"scores":	[-4.53830693227125]
								}, {
									"case":	3,
									"scores":	[-4.53830693227125]
								}, {
									"case":	4,
									"scores":	[-4.53830693227125]
								}, {
									"case":	5,
									"scores":	[-4.53830693227125]
								}, {
									"case":	6,
									"scores":	[-4.53830693227125]
								}, {
									"case":	7,
									"scores":	[-4.53830693227125]
								}, {
									"case":	8,
									"scores":	[-4.53830693227125]
								}, {
									"case":	9,
									"scores":	[-4.53830693227125]
								}, {
									"case":	10,
									"scores":	[-4.53830693227125]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-6.67301532067125, -7.84925578647125, -8.93779716367125, -8.17763003047125]
								}]
						}, {
							"switch":	49,
							"types":	[[5], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4], []],
							"begin_line":	867,
							"begin_column":	2,
							"end_line":	869,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value))) {\n    return;\n}\n", "if ((zend_parse_parameters((ht), \"a|Z\", &array_input, &op) == -1) || __is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value))) {\n    return;\n}\n", "if (dprintf((ht), \"a|Z\", &array_input, &op) == -1) {\n    return;\n}\n", "if (zend_get_parameters_ex((ht), \"a|Z\", &array_input, &op) == -1) {\n    return;\n}\n", "if ((zend_parse_parameters((ht), \"a|Z\", &array_input, &op) == -1) && !__is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value))) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.8049419124281458, -4.5597391214281462, -4.0716855214281455, -5.6232385214281457]
								}, {
									"case":	2,
									"scores":	[-4.2002699656281459, -4.9550671746281454, -4.4670135746281465, -6.0185665746281458]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-4.2002699656281459, -4.9550671746281454, -4.4670135746281465, -6.0185665746281458]
								}]
						}, {
							"switch":	52,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	867,
							"begin_column":	2,
							"end_line":	869,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value)))\n    if (zend_parse_parameters((ht), \"a|Z\", &array_input, &op) == -1) {\n        return;\n    }\n", "if (!__is_neg(\"\", \"L867\", 4, &(ht), sizeof (ht), &(array_input), sizeof (array_input), &(op), sizeof (op), &(return_value), sizeof (return_value)) && (zend_parse_parameters((ht), \"a|Z\", &array_input, &op) == -1)) {\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.56918319227125, -6.32398040127125, -5.83592680127125, -7.38747980127125]
								}, {
									"case":	2,
									"scores":	[-6.01683584547125, -6.7716330544712484, -6.28357945447125, -7.83513245447125]
								}]
						}]
				}, {
					"line":	870,
					"switches":	[{
							"switch":	53,
							"types":	[[], [], [], [], [146], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [], [], [], [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [], [], [], [], [], []],
							"begin_line":	871,
							"begin_column":	0,
							"end_line":	871,
							"end_column":	0,
							"patch_codes":	["memset(&(**op), 0, sizeof (*(&(**op))))", "memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(return_value_ptr)).value.ht->nApplyCount++", "(**(return_value_ptr)).value.ht->nApplyCount--", "(filter_globals.cookie_array) = (array_input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.cookie_array) = (this_ptr)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (256)", "(filter_globals.default_filter) = (275)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (512)", "(filter_globals.default_filter) = (522)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (256)", "(filter_globals.default_filter_flags) = (275)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (512)", "(filter_globals.default_filter_flags) = (522)", "(filter_globals.env_array) = (array_input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.env_array) = (this_ptr)", "(filter_globals.get_array) = (array_input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.get_array) = (this_ptr)", "(filter_globals.post_array) = (array_input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.post_array) = (this_ptr)", "(filter_globals.server_array) = (array_input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.server_array) = (this_ptr)", "(filter_globals.session_array) = (array_input)", "(filter_globals.session_array) = (return_value)", "(filter_globals.session_array) = (this_ptr)", "_array_init(((array_input)), 0)", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_array_init((*(op)), 0)", "_array_init((*(return_value_ptr)), 0)", "_convert_to_string((*(op)))", "_convert_to_string((*(return_value_ptr)))", "_efree(((array_input)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor((((array_input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor((((this_ptr))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(return_value_ptr))))", "_zval_copy_ctor_func((array_input))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((array_input)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor((*(op)))", "_zval_dtor((*(return_value_ptr)))", "_zval_dtor_func((array_input))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(array_input)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((array_input))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "gc_remove_zval_from_buffer((array_input))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((array_input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((array_input))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((array_input))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "php_filter_array_handler((array_input), op, return_value)", "php_filter_array_handler((return_value), op, return_value)", "php_filter_array_handler((this_ptr), op, return_value)", "php_filter_array_handler(array_input, (op), return_value)", "php_filter_array_handler(array_input, (return_value_ptr), return_value)", "php_filter_array_handler(array_input, op, (array_input))", "php_filter_array_handler(array_input, op, (return_value))", "php_filter_array_handler(array_input, op, (this_ptr))", "php_filter_call(&(array_input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(this_ptr), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(array_input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(this_ptr), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(return_value_ptr)).value.ht, ((void *)0))", "zval_unset_isref_p((array_input))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_array_handler(array_input, op, return_value)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(ht), sizeof (ht), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	2,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	3,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	4,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	5,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	6,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	7,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	8,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	9,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	10,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	11,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	12,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	13,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	14,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	15,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	16,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	17,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	18,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	19,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	20,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	21,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	22,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	23,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	24,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	25,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	26,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	27,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	28,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	29,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	30,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	31,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	32,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	33,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	34,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	35,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	36,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	37,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	38,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	39,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	40,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	41,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	42,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	43,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	44,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	45,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	46,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	47,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	48,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	49,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	50,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	51,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	52,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	53,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	54,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	55,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	56,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	57,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	58,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	59,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	60,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	61,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	62,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	63,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	64,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	65,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	66,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	67,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	68,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	69,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	70,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	71,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	72,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	73,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	74,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	75,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	76,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	77,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	78,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	79,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	80,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	81,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	82,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	83,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	84,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	85,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	86,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	87,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	88,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	89,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	90,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	91,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	92,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	93,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	94,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	95,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	96,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	97,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	98,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	99,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	100,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	101,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	102,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	103,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	104,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	105,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	106,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	107,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	108,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	109,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	110,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	111,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	112,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	113,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	114,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	115,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	116,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	117,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	118,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	119,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	120,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	121,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	122,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	123,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	124,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	125,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	126,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	127,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	128,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	129,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	130,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	131,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	132,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	133,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	134,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	135,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	136,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	137,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	138,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	139,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	140,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	141,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	142,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	143,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	144,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	145,
									"scores":	[-4.4170906883661329]
								}, {
									"case":	146,
									"scores":	[-8.68397232976613, -8.67028173976613, -7.9465104257661334, -8.5757030865661328, -7.9393331525661326, -8.7034421197661338, -8.7034421197661338]
								}]
						}, {
							"switch":	54,
							"types":	[[8], [2, 3], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], [], [4, 5, 6, 7]],
							"begin_line":	871,
							"begin_column":	2,
							"end_line":	876,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(ht), sizeof (ht), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((op && ((**op).type != 4)) || __is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(ht), sizeof (ht), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((op && ((**op).type != 4) && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) || __is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(ht), sizeof (ht), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (((**op).type != 4) && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((op && ((**op).type != 4) && (**op).type == 1) && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024)) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (op && ((**op).type != 4)) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if (op && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n", "if ((op && ((**op).type != 4) && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) && !__is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(ht), sizeof (ht), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc))) {\n    {\n        do {\n            zval *__z = (return_value);\n            (*__z).value.lval = ((0) != 0);\n            (*__z).type = 3;\n        } while (0);\n        return;\n    }\n    ;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.9594867774281444, -1.6519024544281447, -3.9368244534281458, -3.1327031774281457, -3.634381290428145, -3.7758924544281456, -3.7758924544281456]
								}, {
									"case":	2,
									"scores":	[-4.029046101428146, -3.7214617784281456, -6.0063837774281454, -5.2022625014281454, -5.7039406144281459, -5.8454517784281457, -5.8454517784281457]
								}, {
									"case":	3,
									"scores":	[-4.029046101428146, -3.7214617784281456, -6.0063837774281454, -5.2022625014281454, -5.7039406144281459, -5.8454517784281457, -5.8454517784281457]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-4.029046101428146, -3.7214617784281456, -6.0063837774281454, -5.2022625014281454, -5.7039406144281459, -5.8454517784281457, -5.8454517784281457]
								}]
						}, {
							"switch":	55,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	871,
							"begin_column":	2,
							"end_line":	876,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L871\", 7, &(op), sizeof (op), &((**op).type), sizeof ((**op).type), &(ht), sizeof (ht), &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &((**op).refcount__gc), sizeof ((**op).refcount__gc), &((**op).is_ref__gc), sizeof ((**op).is_ref__gc)))\n    if (op && ((**op).type != 4) && ((**op).type == 1 && !(((**op).value.lval >= 512 && (**op).value.lval <= 522) || ((**op).value.lval >= 256 && (**op).value.lval <= 275) || (**op).value.lval == 1024))) {\n        {\n            do {\n                zval *__z = (return_value);\n                (*__z).value.lval = ((0) != 0);\n                (*__z).type = 3;\n            } while (0);\n            return;\n        }\n        ;\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.729637491366133, -4.4220531683661326, -6.4045320043661338, -6.7069751673661333, -5.9028538913661333, -6.5460431683661326, -6.5460431683661326]
								}]
						}]
				}, {
					"line":	877,
					"switches":	[{
							"switch":	56,
							"types":	[[], [], [], [], [145], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [], [], [], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [], [], [], [], [], []],
							"begin_line":	878,
							"begin_column":	0,
							"end_line":	878,
							"end_column":	0,
							"patch_codes":	["memset(&(**op).is_ref__gc, 0, sizeof (*(&(**op).is_ref__gc)))", "memset(&(**op).refcount__gc, 0, sizeof (*(&(**op).refcount__gc)))", "memset(&(**op).type, 0, sizeof (*(&(**op).type)))", "memset(&(**op).value, 0, sizeof (*(&(**op).value)))", "memset(&(**op).value.dval, 0, sizeof (*(&(**op).value.dval)))", "memset(&(**op).value.ht, 0, sizeof (*(&(**op).value.ht)))", "memset(&(**op).value.lval, 0, sizeof (*(&(**op).value.lval)))", "memset(&(**op).value.obj, 0, sizeof (*(&(**op).value.obj)))", "memset(&(**op).value.str, 0, sizeof (*(&(**op).value.str)))", "memset((**op).value.ht, 0, sizeof (*((**op).value.ht)))", "(**(op)).value.ht->nApplyCount++", "(**(op)).value.ht->nApplyCount--", "(**(return_value_ptr)).value.ht->nApplyCount++", "(**(return_value_ptr)).value.ht->nApplyCount--", "(filter_globals.cookie_array) = (array_input)", "(filter_globals.cookie_array) = (return_value)", "(filter_globals.cookie_array) = (this_ptr)", "(filter_globals.default_filter) = (-1)", "(filter_globals.default_filter) = (0)", "(filter_globals.default_filter) = (1)", "(filter_globals.default_filter) = (1024)", "(filter_globals.default_filter) = (256)", "(filter_globals.default_filter) = (275)", "(filter_globals.default_filter) = (3)", "(filter_globals.default_filter) = (4)", "(filter_globals.default_filter) = (512)", "(filter_globals.default_filter) = (522)", "(filter_globals.default_filter_flags) = (-1)", "(filter_globals.default_filter_flags) = (0)", "(filter_globals.default_filter_flags) = (1)", "(filter_globals.default_filter_flags) = (1024)", "(filter_globals.default_filter_flags) = (256)", "(filter_globals.default_filter_flags) = (275)", "(filter_globals.default_filter_flags) = (3)", "(filter_globals.default_filter_flags) = (4)", "(filter_globals.default_filter_flags) = (512)", "(filter_globals.default_filter_flags) = (522)", "(filter_globals.env_array) = (array_input)", "(filter_globals.env_array) = (return_value)", "(filter_globals.env_array) = (this_ptr)", "(filter_globals.get_array) = (array_input)", "(filter_globals.get_array) = (return_value)", "(filter_globals.get_array) = (this_ptr)", "(filter_globals.post_array) = (array_input)", "(filter_globals.post_array) = (return_value)", "(filter_globals.post_array) = (this_ptr)", "(filter_globals.server_array) = (array_input)", "(filter_globals.server_array) = (return_value)", "(filter_globals.server_array) = (this_ptr)", "(filter_globals.session_array) = (array_input)", "(filter_globals.session_array) = (return_value)", "(filter_globals.session_array) = (this_ptr)", "_array_init(((array_input)), 0)", "_array_init(((return_value)), 0)", "_array_init(((this_ptr)), 0)", "_array_init((*(op)), 0)", "_array_init((*(return_value_ptr)), 0)", "_convert_to_string((*(op)))", "_convert_to_string((*(return_value_ptr)))", "_efree(((array_input)))", "_efree(((return_value)))", "_efree(((this_ptr)))", "_zval_copy_ctor((((array_input))))", "_zval_copy_ctor((((return_value))))", "_zval_copy_ctor((((this_ptr))))", "_zval_copy_ctor(((*(op))))", "_zval_copy_ctor(((*(return_value_ptr))))", "_zval_copy_ctor_func((array_input))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((array_input)))", "_zval_dtor(((return_value)))", "_zval_dtor(((this_ptr)))", "_zval_dtor((*(op)))", "_zval_dtor((*(return_value_ptr)))", "_zval_dtor_func((array_input))", "_zval_dtor_func((return_value))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(array_input)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(this_ptr)))", "convert_to_boolean((array_input))", "convert_to_boolean((return_value))", "convert_to_boolean((this_ptr))", "gc_remove_zval_from_buffer((array_input))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((array_input)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((array_input))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((array_input))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((this_ptr))", "php_filter_array_handler((array_input), op, return_value)", "php_filter_array_handler((return_value), op, return_value)", "php_filter_array_handler((this_ptr), op, return_value)", "php_filter_array_handler(array_input, (op), return_value)", "php_filter_array_handler(array_input, (return_value_ptr), return_value)", "php_filter_array_handler(array_input, op, (array_input))", "php_filter_array_handler(array_input, op, (return_value))", "php_filter_array_handler(array_input, op, (this_ptr))", "php_filter_call(&(array_input), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(return_value), 516, ((void *)0), 0, 16777216)", "php_filter_call(&(this_ptr), 516, ((void *)0), 0, 16777216)", "php_zval_filter(&(array_input), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(return_value), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "php_zval_filter(&(this_ptr), (filter_globals.default_filter), (filter_globals.default_filter_flags), ((void *)0), ((void *)0), 0)", "zend_hash_internal_pointer_reset_ex((**(op)).value.ht, ((void *)0))", "zend_hash_internal_pointer_reset_ex((**(return_value_ptr)).value.ht, ((void *)0))", "zval_unset_isref_p((array_input))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((this_ptr))", "((void)(0))", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "(filter_globals.cookie_array) = ((void *)0)", "(filter_globals.default_filter) = 516", "(filter_globals.default_filter_flags) = 128", "(filter_globals.env_array) = ((void *)0)", "(filter_globals.get_array) = ((void *)0)", "(filter_globals.post_array) = ((void *)0)", "(filter_globals.server_array) = ((void *)0)", "(filter_globals.session_array) = ((void *)0)", "_zval_ptr_dtor((&(filter_globals.cookie_array)))", "_zval_ptr_dtor((&(filter_globals.env_array)))", "_zval_ptr_dtor((&(filter_globals.get_array)))", "_zval_ptr_dtor((&(filter_globals.post_array)))", "_zval_ptr_dtor((&(filter_globals.server_array)))", "_zval_ptr_dtor((&(filter_globals.session_array)))", "exit(1)", "php_error_docref0(((void *)0), (1 << 1L), \"Empty keys are not allowed in the definition array\")", "php_error_docref0(((void *)0), (1 << 1L), \"Numeric keys are not allowed in the definition array\")", "php_filter_array_handler(array_input, op, return_value)", "php_filter_init_globals(&filter_globals)", "php_info_print_table_end()", "php_info_print_table_row(2, \"Input Validation and Filtering\", \"enabled\")", "php_info_print_table_row(2, \"Revision\", \"$Revision$\")", "php_info_print_table_start()", "sapi_register_input_filter(php_sapi_filter, php_sapi_filter_init)", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_is_auto_global(\"_ENV\", sizeof (\"_ENV\") - 1)", "zend_is_auto_global(\"_SERVER\", sizeof (\"_SERVER\") - 1)", "if (__is_neg(\"\", \"L878\", 4, &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(op), sizeof (op), &(ht), sizeof (ht)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	2,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	3,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	4,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	5,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	6,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	7,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	8,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	9,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	10,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	11,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	12,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	13,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	14,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	15,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	16,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	17,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	18,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	19,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	20,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	21,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	22,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	23,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	24,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	25,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	26,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	27,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	28,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	29,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	30,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	31,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	32,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	33,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	34,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	35,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	36,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	37,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	38,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	39,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	40,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	41,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	42,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	43,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	44,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	45,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	46,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	47,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	48,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	49,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	50,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	51,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	52,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	53,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	54,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	55,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	56,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	57,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	58,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	59,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	60,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	61,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	62,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	63,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	64,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	65,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	66,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	67,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	68,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	69,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	70,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	71,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	72,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	73,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	74,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	75,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	76,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	77,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	78,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	79,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	80,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	81,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	82,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	83,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	84,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	85,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	86,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	87,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	88,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	89,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	90,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	91,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	92,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	93,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	94,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	95,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	96,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	97,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	98,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	99,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	100,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	101,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	102,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	103,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	104,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	105,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	106,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	107,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	108,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	109,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	110,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	111,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	112,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	113,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	114,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	115,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	116,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	117,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	118,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	119,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	120,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	121,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	122,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	123,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	124,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	125,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	126,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	127,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	128,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	129,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	130,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	131,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	132,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	133,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	134,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	135,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	136,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	137,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	138,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	139,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	140,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	141,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	142,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	143,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	144,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	145,
									"scores":	[-5.7678562572486136, -5.1314863232486134, -5.6629751004486133, -6.1396542184486131]
								}]
						}, {
							"switch":	57,
							"types":	[[], [], [1], [], [], [], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], [], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [13]],
							"begin_line":	878,
							"begin_column":	2,
							"end_line":	878,
							"end_column":	66,
							"patch_codes":	["if (!__is_neg(\"\", \"L878\", 4, &(return_value), sizeof (return_value), &(array_input), sizeof (array_input), &(op), sizeof (op), &(ht), sizeof (ht)))\n    php_filter_array_handler(array_input, op, return_value);\n", "php_explode(array_input, op, return_value, -1)", "php_explode(array_input, op, return_value, 0)", "php_explode(array_input, op, return_value, 1)", "php_explode(array_input, op, return_value, 1024)", "php_explode(array_input, op, return_value, 256)", "php_explode(array_input, op, return_value, 275)", "php_explode(array_input, op, return_value, 3)", "php_explode(array_input, op, return_value, 4)", "php_explode(array_input, op, return_value, 512)", "php_explode(array_input, op, return_value, 522)", "zend_std_write_property(array_input, op, return_value, 0)", "{\n}\n", "Debug(array_input, op, return_value)", "add_function(array_input, op, return_value)", "bitwise_and_function(array_input, op, return_value)", "bitwise_or_function(array_input, op, return_value)", "bitwise_xor_function(array_input, op, return_value)", "boolean_xor_function(array_input, op, return_value)", "compare_function(array_input, op, return_value)", "concat_function(array_input, op, return_value)", "div_function(array_input, op, return_value)", "is_equal_function(array_input, op, return_value)", "is_identical_function(array_input, op, return_value)", "is_not_equal_function(array_input, op, return_value)", "is_not_identical_function(array_input, op, return_value)", "is_smaller_function(array_input, op, return_value)", "is_smaller_or_equal_function(array_input, op, return_value)", "mod_function(array_input, op, return_value)", "mul_function(array_input, op, return_value)", "numeric_compare_function(array_input, op, return_value)", "php_implode(array_input, op, return_value)", "php_printf(array_input, op, return_value)", "printf(array_input, op, return_value)", "shift_left_function(array_input, op, return_value)", "shift_right_function(array_input, op, return_value)", "string_compare_function(array_input, op, return_value)", "string_locale_compare_function(array_input, op, return_value)", "sub_function(array_input, op, return_value)", "zend_binary_zval_strncasecmp(array_input, op, return_value)", "zend_binary_zval_strncmp(array_input, op, return_value)", "zend_compare_arrays(array_input, op, return_value)", "zend_compare_objects(array_input, op, return_value)", "zendi_smart_strcmp(array_input, op, return_value)", "php_filter_array_handler((&array_input), op, return_value)", "php_filter_array_handler((&ht), op, return_value)", "php_filter_array_handler((&op), op, return_value)", "php_filter_array_handler((&return_value), op, return_value)", "php_filter_array_handler((&return_value_ptr), op, return_value)", "php_filter_array_handler((&return_value_used), op, return_value)", "php_filter_array_handler((&this_ptr), op, return_value)", "php_filter_array_handler((array_input), op, return_value)", "php_filter_array_handler((return_value), op, return_value)", "php_filter_array_handler((this_ptr), op, return_value)", "php_filter_array_handler(array_input, (&array_input), return_value)", "php_filter_array_handler(array_input, (&ht), return_value)", "php_filter_array_handler(array_input, (&op), return_value)", "php_filter_array_handler(array_input, (&return_value), return_value)", "php_filter_array_handler(array_input, (&return_value_ptr), return_value)", "php_filter_array_handler(array_input, (&return_value_used), return_value)", "php_filter_array_handler(array_input, (&this_ptr), return_value)", "php_filter_array_handler(array_input, (op), return_value)", "php_filter_array_handler(array_input, (return_value_ptr), return_value)", "php_filter_array_handler(array_input, op, (&array_input))", "php_filter_array_handler(array_input, op, (&ht))", "php_filter_array_handler(array_input, op, (&op))", "php_filter_array_handler(array_input, op, (&return_value))", "php_filter_array_handler(array_input, op, (&return_value_ptr))", "php_filter_array_handler(array_input, op, (&return_value_used))", "php_filter_array_handler(array_input, op, (&this_ptr))", "php_filter_array_handler(array_input, op, (array_input))", "php_filter_array_handler(array_input, op, (return_value))", "php_filter_array_handler(array_input, op, (this_ptr))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.7159496510486134, -4.9118283750486134, -5.0135016855486132, -5.4466819970486133]
								}, {
									"case":	2,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	3,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	4,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	5,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	6,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	7,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	8,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	9,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	10,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	11,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	12,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	13,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	14,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	15,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	16,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	17,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	18,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	19,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	20,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	21,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	22,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	23,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	24,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	25,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	26,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	27,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	28,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	29,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	30,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	31,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	32,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	33,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	34,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	35,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	36,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	37,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	38,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	39,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	40,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	41,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	42,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	43,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	44,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	45,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	46,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	47,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	48,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	49,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	50,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	51,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	52,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	53,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	54,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	55,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	56,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	57,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	58,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	59,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	60,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	61,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	62,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	63,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	64,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	65,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	66,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	67,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	68,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	69,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	70,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	71,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	72,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	73,
									"scores":	[-4.3968879810486134]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	0,
			"case":	171,
			"size":	9
		}, {
			"switch":	1,
			"case":	1,
			"size":	9
		}, {
			"switch":	1,
			"case":	2,
			"size":	9
		}, {
			"switch":	1,
			"case":	3,
			"size":	9
		}, {
			"switch":	2,
			"case":	1,
			"size":	9
		}, {
			"switch":	2,
			"case":	2,
			"size":	9
		}, {
			"switch":	4,
			"case":	1,
			"size":	11
		}, {
			"switch":	4,
			"case":	2,
			"size":	11
		}, {
			"switch":	5,
			"case":	214,
			"size":	38
		}, {
			"switch":	6,
			"case":	1,
			"size":	38
		}, {
			"switch":	6,
			"case":	2,
			"size":	38
		}, {
			"switch":	6,
			"case":	15,
			"size":	38
		}, {
			"switch":	7,
			"case":	1,
			"size":	38
		}, {
			"switch":	7,
			"case":	2,
			"size":	38
		}, {
			"switch":	8,
			"case":	214,
			"size":	38
		}, {
			"switch":	9,
			"case":	1,
			"size":	38
		}, {
			"switch":	9,
			"case":	2,
			"size":	38
		}, {
			"switch":	9,
			"case":	15,
			"size":	38
		}, {
			"switch":	10,
			"case":	1,
			"size":	38
		}, {
			"switch":	10,
			"case":	2,
			"size":	38
		}, {
			"switch":	11,
			"case":	214,
			"size":	38
		}, {
			"switch":	12,
			"case":	1,
			"size":	38
		}, {
			"switch":	12,
			"case":	2,
			"size":	38
		}, {
			"switch":	12,
			"case":	15,
			"size":	38
		}, {
			"switch":	13,
			"case":	1,
			"size":	38
		}, {
			"switch":	13,
			"case":	2,
			"size":	38
		}, {
			"switch":	14,
			"case":	136,
			"size":	9
		}, {
			"switch":	15,
			"case":	1,
			"size":	9
		}, {
			"switch":	15,
			"case":	2,
			"size":	9
		}, {
			"switch":	15,
			"case":	3,
			"size":	9
		}, {
			"switch":	16,
			"case":	136,
			"size":	12
		}, {
			"switch":	17,
			"case":	1,
			"size":	12
		}, {
			"switch":	17,
			"case":	2,
			"size":	12
		}, {
			"switch":	17,
			"case":	3,
			"size":	12
		}, {
			"switch":	18,
			"case":	136,
			"size":	12
		}, {
			"switch":	19,
			"case":	1,
			"size":	12
		}, {
			"switch":	19,
			"case":	2,
			"size":	12
		}, {
			"switch":	19,
			"case":	3,
			"size":	12
		}, {
			"switch":	20,
			"case":	141,
			"size":	12
		}, {
			"switch":	21,
			"case":	1,
			"size":	12
		}, {
			"switch":	22,
			"case":	142,
			"size":	12
		}, {
			"switch":	23,
			"case":	1,
			"size":	12
		}, {
			"switch":	24,
			"case":	142,
			"size":	12
		}, {
			"switch":	25,
			"case":	152,
			"size":	12
		}, {
			"switch":	25,
			"case":	153,
			"size":	12
		}, {
			"switch":	26,
			"case":	1,
			"size":	12
		}, {
			"switch":	26,
			"case":	2,
			"size":	12
		}, {
			"switch":	26,
			"case":	6,
			"size":	12
		}, {
			"switch":	27,
			"case":	1,
			"size":	12
		}, {
			"switch":	27,
			"case":	2,
			"size":	12
		}, {
			"switch":	28,
			"case":	151,
			"size":	9
		}, {
			"switch":	28,
			"case":	152,
			"size":	9
		}, {
			"switch":	29,
			"case":	1,
			"size":	9
		}, {
			"switch":	29,
			"case":	2,
			"size":	9
		}, {
			"switch":	29,
			"case":	3,
			"size":	9
		}, {
			"switch":	30,
			"case":	1,
			"size":	9
		}, {
			"switch":	30,
			"case":	2,
			"size":	9
		}, {
			"switch":	31,
			"case":	152,
			"size":	12
		}, {
			"switch":	31,
			"case":	153,
			"size":	12
		}, {
			"switch":	32,
			"case":	1,
			"size":	12
		}, {
			"switch":	32,
			"case":	2,
			"size":	12
		}, {
			"switch":	32,
			"case":	14,
			"size":	12
		}, {
			"switch":	33,
			"case":	151,
			"size":	12
		}, {
			"switch":	33,
			"case":	152,
			"size":	12
		}, {
			"switch":	34,
			"case":	1,
			"size":	12
		}, {
			"switch":	35,
			"case":	186,
			"size":	10
		}, {
			"switch":	35,
			"case":	187,
			"size":	10
		}, {
			"switch":	36,
			"case":	1,
			"size":	10
		}, {
			"switch":	37,
			"case":	186,
			"size":	10
		}, {
			"switch":	37,
			"case":	187,
			"size":	10
		}, {
			"switch":	38,
			"case":	1,
			"size":	10
		}, {
			"switch":	39,
			"case":	186,
			"size":	10
		}, {
			"switch":	39,
			"case":	187,
			"size":	10
		}, {
			"switch":	40,
			"case":	1,
			"size":	10
		}, {
			"switch":	41,
			"case":	186,
			"size":	10
		}, {
			"switch":	41,
			"case":	187,
			"size":	10
		}, {
			"switch":	42,
			"case":	1,
			"size":	10
		}, {
			"switch":	43,
			"case":	1,
			"size":	12
		}, {
			"switch":	43,
			"case":	2,
			"size":	12
		}, {
			"switch":	44,
			"case":	1,
			"size":	12
		}, {
			"switch":	45,
			"case":	1,
			"size":	12
		}, {
			"switch":	45,
			"case":	2,
			"size":	12
		}, {
			"switch":	46,
			"case":	1,
			"size":	12
		}, {
			"switch":	46,
			"case":	2,
			"size":	12
		}, {
			"switch":	47,
			"case":	1,
			"size":	9
		}, {
			"switch":	47,
			"case":	2,
			"size":	9
		}, {
			"switch":	48,
			"case":	145,
			"size":	4
		}, {
			"switch":	49,
			"case":	1,
			"size":	4
		}, {
			"switch":	49,
			"case":	2,
			"size":	4
		}, {
			"switch":	49,
			"case":	5,
			"size":	4
		}, {
			"switch":	50,
			"case":	145,
			"size":	4
		}, {
			"switch":	51,
			"case":	1,
			"size":	4
		}, {
			"switch":	52,
			"case":	1,
			"size":	4
		}, {
			"switch":	52,
			"case":	2,
			"size":	4
		}, {
			"switch":	53,
			"case":	146,
			"size":	7
		}, {
			"switch":	54,
			"case":	1,
			"size":	7
		}, {
			"switch":	54,
			"case":	2,
			"size":	7
		}, {
			"switch":	54,
			"case":	3,
			"size":	7
		}, {
			"switch":	54,
			"case":	8,
			"size":	7
		}, {
			"switch":	55,
			"case":	1,
			"size":	7
		}, {
			"switch":	56,
			"case":	145,
			"size":	4
		}, {
			"switch":	57,
			"case":	1,
			"size":	4
		}],
	"func_locations":	[{
			"file":	"ext/filter/filter.c",
			"functions":	[{
					"function":	"OnUpdateFlags",
					"begin":	174,
					"end":	182
				}, {
					"function":	"UpdateDefaultFilter",
					"begin":	156,
					"end":	169
				}, {
					"function":	"__cmsg_nxthdr",
					"begin":	308,
					"end":	324
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"__zend_calloc",
					"begin":	103,
					"end":	108
				}, {
					"function":	"__zend_malloc",
					"begin":	93,
					"end":	101
				}, {
					"function":	"__zend_realloc",
					"begin":	110,
					"end":	118
				}, {
					"function":	"_zval_copy_ctor",
					"begin":	40,
					"end":	46
				}, {
					"function":	"_zval_dtor",
					"begin":	30,
					"end":	36
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"fstat",
					"begin":	462,
					"end":	466
				}, {
					"function":	"fstatat",
					"begin":	469,
					"end":	474
				}, {
					"function":	"gc_remove_from_buffer",
					"begin":	187,
					"end":	194
				}, {
					"function":	"gc_zval_check_possible_root",
					"begin":	180,
					"end":	185
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"i_zend_is_true",
					"begin":	101,
					"end":	156
				}, {
					"function":	"i_zval_ptr_dtor",
					"begin":	80,
					"end":	99
				}, {
					"function":	"is_numeric_string",
					"begin":	102,
					"end":	224
				}, {
					"function":	"lstat",
					"begin":	455,
					"end":	459
				}, {
					"function":	"mknod",
					"begin":	478,
					"end":	482
				}, {
					"function":	"mknodat",
					"begin":	486,
					"end":	491
				}, {
					"function":	"php_filter_array_handler",
					"begin":	680,
					"end":	729
				}, {
					"function":	"php_filter_call",
					"begin":	590,
					"end":	677
				}, {
					"function":	"php_filter_get_storage",
					"begin":	525,
					"end":	563
				}, {
					"function":	"php_filter_init_globals",
					"begin":	190,
					"end":	199
				}, {
					"function":	"php_find_filter",
					"begin":	327,
					"end":	344
				}, {
					"function":	"php_sapi_filter",
					"begin":	404,
					"end":	493
				}, {
					"function":	"php_sapi_filter_init",
					"begin":	347,
					"end":	356
				}, {
					"function":	"php_set_error_handling",
					"begin":	292,
					"end":	295
				}, {
					"function":	"php_std_error_handling",
					"begin":	296,
					"end":	296
				}, {
					"function":	"php_zval_filter",
					"begin":	358,
					"end":	401
				}, {
					"function":	"php_zval_filter_recursive",
					"begin":	496,
					"end":	522
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"safe_free_zval_ptr_rel",
					"begin":	62,
					"end":	69
				}, {
					"function":	"stat",
					"begin":	448,
					"end":	452
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"zend_arg_types_stack_2_pop",
					"begin":	355,
					"end":	363
				}, {
					"function":	"zend_arg_types_stack_3_pop",
					"begin":	365,
					"end":	374
				}, {
					"function":	"zend_dval_to_lval",
					"begin":	77,
					"end":	83
				}, {
					"function":	"zend_inline_hash_func",
					"begin":	261,
					"end":	288
				}, {
					"function":	"zend_memnstr",
					"begin":	226,
					"end":	257
				}, {
					"function":	"zend_memrchr",
					"begin":	259,
					"end":	274
				}, {
					"function":	"zend_objects_store_del_ref_by_handle",
					"begin":	71,
					"end":	73
				}, {
					"function":	"zend_ptr_stack_2_pop",
					"begin":	93,
					"end":	98
				}, {
					"function":	"zend_ptr_stack_2_push",
					"begin":	72,
					"end":	83
				}, {
					"function":	"zend_ptr_stack_3_pop",
					"begin":	85,
					"end":	91
				}, {
					"function":	"zend_ptr_stack_3_push",
					"begin":	58,
					"end":	70
				}, {
					"function":	"zend_ptr_stack_pop",
					"begin":	108,
					"end":	112
				}, {
					"function":	"zend_ptr_stack_push",
					"begin":	100,
					"end":	106
				}, {
					"function":	"zend_symtable_del",
					"begin":	355,
					"end":	359
				}, {
					"function":	"zend_symtable_exists",
					"begin":	369,
					"end":	373
				}, {
					"function":	"zend_symtable_find",
					"begin":	362,
					"end":	366
				}, {
					"function":	"zend_symtable_update",
					"begin":	348,
					"end":	352
				}, {
					"function":	"zend_symtable_update_current_key_ex",
					"begin":	375,
					"end":	379
				}, {
					"function":	"zend_vm_stack_alloc",
					"begin":	243,
					"end":	270
				}, {
					"function":	"zend_vm_stack_clear_multiple",
					"begin":	331,
					"end":	342
				}, {
					"function":	"zend_vm_stack_destroy",
					"begin":	197,
					"end":	206
				}, {
					"function":	"zend_vm_stack_extend",
					"begin":	208,
					"end":	213
				}, {
					"function":	"zend_vm_stack_free",
					"begin":	284,
					"end":	300
				}, {
					"function":	"zend_vm_stack_free_int",
					"begin":	272,
					"end":	282
				}, {
					"function":	"zend_vm_stack_get_arg",
					"begin":	344,
					"end":	353
				}, {
					"function":	"zend_vm_stack_init",
					"begin":	192,
					"end":	195
				}, {
					"function":	"zend_vm_stack_new_page",
					"begin":	183,
					"end":	190
				}, {
					"function":	"zend_vm_stack_pop",
					"begin":	231,
					"end":	241
				}, {
					"function":	"zend_vm_stack_push",
					"begin":	220,
					"end":	224
				}, {
					"function":	"zend_vm_stack_push_args",
					"begin":	302,
					"end":	329
				}, {
					"function":	"zend_vm_stack_push_nocheck",
					"begin":	226,
					"end":	229
				}, {
					"function":	"zend_vm_stack_top",
					"begin":	215,
					"end":	218
				}, {
					"function":	"zif_filter_has_var",
					"begin":	569,
					"end":	587
				}, {
					"function":	"zif_filter_id",
					"begin":	901,
					"end":	918
				}, {
					"function":	"zif_filter_input",
					"begin":	735,
					"end":	787
				}, {
					"function":	"zif_filter_input_array",
					"begin":	815,
					"end":	857
				}, {
					"function":	"zif_filter_list",
					"begin":	884,
					"end":	896
				}, {
					"function":	"zif_filter_var",
					"begin":	793,
					"end":	809
				}, {
					"function":	"zif_filter_var_array",
					"begin":	863,
					"end":	879
				}, {
					"function":	"zm_deactivate_filter",
					"begin":	302,
					"end":	311
				}, {
					"function":	"zm_info_filter",
					"begin":	316,
					"end":	324
				}, {
					"function":	"zm_shutdown_filter",
					"begin":	286,
					"end":	291
				}, {
					"function":	"zm_startup_filter",
					"begin":	206,
					"end":	281
				}, {
					"function":	"zval_addref_p",
					"begin":	386,
					"end":	388
				}, {
					"function":	"zval_delref_p",
					"begin":	390,
					"end":	392
				}, {
					"function":	"zval_isref_p",
					"begin":	394,
					"end":	396
				}, {
					"function":	"zval_refcount_p",
					"begin":	378,
					"end":	380
				}, {
					"function":	"zval_set_isref_p",
					"begin":	398,
					"end":	400
				}, {
					"function":	"zval_set_isref_to_p",
					"begin":	406,
					"end":	408
				}, {
					"function":	"zval_set_refcount_p",
					"begin":	382,
					"end":	384
				}, {
					"function":	"zval_unset_isref_p",
					"begin":	402,
					"end":	404
				}]
		}]
}
