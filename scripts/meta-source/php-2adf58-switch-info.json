{
	"switch_num":	39,
	"case_num":	[148, 12, 148, 104, 148, 3, 1, 148, 28, 148, 28, 149, 9, 148, 2, 148, 1, 111, 1, 394, 136, 394, 5, 394, 5, 394, 5, 2, 2, 2, 395, 25, 395, 4, 395, 3, 430, 4, 2],
	"switch_cluster":	[[1, 3, 6, 8, 10, 12, 14, 16, 18, 20, 27, 28, 29, 31, 33, 37, 38], [5, 22, 24, 26, 35], [0, 2, 4, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 30, 32, 34, 36], []],
	"priority":	[{
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	428,
			"primary_score":	999692,
			"second_score":	3104
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	429,
			"primary_score":	999692,
			"second_score":	3102
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	479,
			"primary_score":	999692,
			"second_score":	3105
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	485,
			"primary_score":	999692,
			"second_score":	2
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	575,
			"primary_score":	999692,
			"second_score":	142048
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	576,
			"primary_score":	999692,
			"second_score":	142047
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	578,
			"primary_score":	999692,
			"second_score":	142046
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	579,
			"primary_score":	999692,
			"second_score":	141887
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	580,
			"primary_score":	999692,
			"second_score":	141886
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	583,
			"primary_score":	999692,
			"second_score":	141885
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	590,
			"primary_score":	999692,
			"second_score":	3101
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	592,
			"primary_score":	999692,
			"second_score":	3100
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	593,
			"primary_score":	999692,
			"second_score":	6
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	594,
			"primary_score":	999692,
			"second_score":	5
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	595,
			"primary_score":	999692,
			"second_score":	529
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	596,
			"primary_score":	999692,
			"second_score":	528
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	597,
			"primary_score":	999692,
			"second_score":	527
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	599,
			"primary_score":	999692,
			"second_score":	4
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	601,
			"primary_score":	999692,
			"second_score":	3
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	632,
			"primary_score":	999692,
			"second_score":	147026
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	633,
			"primary_score":	999692,
			"second_score":	147025
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	635,
			"primary_score":	999692,
			"second_score":	147024
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	641,
			"primary_score":	999692,
			"second_score":	147023
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	642,
			"primary_score":	999692,
			"second_score":	147022
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	643,
			"primary_score":	999692,
			"second_score":	147021
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	645,
			"primary_score":	999692,
			"second_score":	147020
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	652,
			"primary_score":	999692,
			"second_score":	147019
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	654,
			"primary_score":	999692,
			"second_score":	146854
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	655,
			"primary_score":	999692,
			"second_score":	146853
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	656,
			"primary_score":	999692,
			"second_score":	146852
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	657,
			"primary_score":	999692,
			"second_score":	146851
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	658,
			"primary_score":	999692,
			"second_score":	146850
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	663,
			"primary_score":	999692,
			"second_score":	146849
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	664,
			"primary_score":	999692,
			"second_score":	146848
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	671,
			"primary_score":	999692,
			"second_score":	146847
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	672,
			"primary_score":	999692,
			"second_score":	146846
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	673,
			"primary_score":	999692,
			"second_score":	146845
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	674,
			"primary_score":	999692,
			"second_score":	146844
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	675,
			"primary_score":	999692,
			"second_score":	146843
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	685,
			"primary_score":	999692,
			"second_score":	142763
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	688,
			"primary_score":	999692,
			"second_score":	142748
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	689,
			"primary_score":	999692,
			"second_score":	142747
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	691,
			"primary_score":	999692,
			"second_score":	142746
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	692,
			"primary_score":	999692,
			"second_score":	123729
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	697,
			"primary_score":	999692,
			"second_score":	123728
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	699,
			"primary_score":	999692,
			"second_score":	123727
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	704,
			"primary_score":	999692,
			"second_score":	147715
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	735,
			"primary_score":	999692,
			"second_score":	142784
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	736,
			"primary_score":	999692,
			"second_score":	142783
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	742,
			"primary_score":	999692,
			"second_score":	142782
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	744,
			"primary_score":	999692,
			"second_score":	142781
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	745,
			"primary_score":	999692,
			"second_score":	142780
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	746,
			"primary_score":	999692,
			"second_score":	142779
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	748,
			"primary_score":	999692,
			"second_score":	142778
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	749,
			"primary_score":	999692,
			"second_score":	142777
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	753,
			"primary_score":	999692,
			"second_score":	142776
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	754,
			"primary_score":	999692,
			"second_score":	142775
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	755,
			"primary_score":	999692,
			"second_score":	142771
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	758,
			"primary_score":	999692,
			"second_score":	142770
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	764,
			"primary_score":	999692,
			"second_score":	142769
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	802,
			"primary_score":	999692,
			"second_score":	142768
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	804,
			"primary_score":	999692,
			"second_score":	142767
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	806,
			"primary_score":	999692,
			"second_score":	142766
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	808,
			"primary_score":	999692,
			"second_score":	142765
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	809,
			"primary_score":	999692,
			"second_score":	143663
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	811,
			"primary_score":	999692,
			"second_score":	142764
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	812,
			"primary_score":	999692,
			"second_score":	123726
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	816,
			"primary_score":	999692,
			"second_score":	123725
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	819,
			"primary_score":	999692,
			"second_score":	123724
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	820,
			"primary_score":	999692,
			"second_score":	123723
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1020,
			"primary_score":	999692,
			"second_score":	147714
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1029,
			"primary_score":	999692,
			"second_score":	147712
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1030,
			"primary_score":	999692,
			"second_score":	147711
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1032,
			"primary_score":	999692,
			"second_score":	147710
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1063,
			"primary_score":	999692,
			"second_score":	147709
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1064,
			"primary_score":	999692,
			"second_score":	147708
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1065,
			"primary_score":	999692,
			"second_score":	147707
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1068,
			"primary_score":	999692,
			"second_score":	147706
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1074,
			"primary_score":	999692,
			"second_score":	147705
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1075,
			"primary_score":	999692,
			"second_score":	147704
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1078,
			"primary_score":	999692,
			"second_score":	147755
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1079,
			"primary_score":	999692,
			"second_score":	147033
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1080,
			"primary_score":	999692,
			"second_score":	147032
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1099,
			"primary_score":	999692,
			"second_score":	147031
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1103,
			"primary_score":	999692,
			"second_score":	147030
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1104,
			"primary_score":	999692,
			"second_score":	147029
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1108,
			"primary_score":	999692,
			"second_score":	147028
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1110,
			"primary_score":	999692,
			"second_score":	147027
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1113,
			"primary_score":	999692,
			"second_score":	146842
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1114,
			"primary_score":	999692,
			"second_score":	146840
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1123,
			"primary_score":	999692,
			"second_score":	143710
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1124,
			"primary_score":	999692,
			"second_score":	143709
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1125,
			"primary_score":	999692,
			"second_score":	143708
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1126,
			"primary_score":	999692,
			"second_score":	143707
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1127,
			"primary_score":	999692,
			"second_score":	143706
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1128,
			"primary_score":	999692,
			"second_score":	143705
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1129,
			"primary_score":	999692,
			"second_score":	143704
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1130,
			"primary_score":	999692,
			"second_score":	143703
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1132,
			"primary_score":	999692,
			"second_score":	143702
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1152,
			"primary_score":	999692,
			"second_score":	143701
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1203,
			"primary_score":	999692,
			"second_score":	143700
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1255,
			"primary_score":	999692,
			"second_score":	143699
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1256,
			"primary_score":	999692,
			"second_score":	143698
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1257,
			"primary_score":	999692,
			"second_score":	143697
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1259,
			"primary_score":	999692,
			"second_score":	141869
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1264,
			"primary_score":	999692,
			"second_score":	141868
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1267,
			"primary_score":	999692,
			"second_score":	141867
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1273,
			"primary_score":	999692,
			"second_score":	141866
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1278,
			"primary_score":	999692,
			"second_score":	141865
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1303,
			"primary_score":	999692,
			"second_score":	141864
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1304,
			"primary_score":	999692,
			"second_score":	141863
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1305,
			"primary_score":	999692,
			"second_score":	141862
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1311,
			"primary_score":	999692,
			"second_score":	141861
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1313,
			"primary_score":	999692,
			"second_score":	141860
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1314,
			"primary_score":	999692,
			"second_score":	141859
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1320,
			"primary_score":	999692,
			"second_score":	141858
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1897,
			"primary_score":	999692,
			"second_score":	123903
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1898,
			"primary_score":	999692,
			"second_score":	123902
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1901,
			"primary_score":	999692,
			"second_score":	123901
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1902,
			"primary_score":	999692,
			"second_score":	123900
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1903,
			"primary_score":	999692,
			"second_score":	123899
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1904,
			"primary_score":	999692,
			"second_score":	123898
		}, {
			"file":	"Zend/zend.c",
			"line":	227,
			"primary_score":	999692,
			"second_score":	121701
		}, {
			"file":	"Zend/zend.c",
			"line":	228,
			"primary_score":	999692,
			"second_score":	121700
		}, {
			"file":	"Zend/zend.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	121699
		}, {
			"file":	"Zend/zend.c",
			"line":	305,
			"primary_score":	999692,
			"second_score":	121705
		}, {
			"file":	"Zend/zend.c",
			"line":	311,
			"primary_score":	999692,
			"second_score":	121704
		}, {
			"file":	"Zend/zend.c",
			"line":	312,
			"primary_score":	999692,
			"second_score":	121703
		}, {
			"file":	"Zend/zend.c",
			"line":	314,
			"primary_score":	999692,
			"second_score":	121702
		}, {
			"file":	"Zend/zend.c",
			"line":	315,
			"primary_score":	999692,
			"second_score":	121698
		}, {
			"file":	"Zend/zend.c",
			"line":	318,
			"primary_score":	999692,
			"second_score":	121697
		}, {
			"file":	"Zend/zend.c",
			"line":	319,
			"primary_score":	999692,
			"second_score":	121696
		}, {
			"file":	"Zend/zend.c",
			"line":	322,
			"primary_score":	999692,
			"second_score":	121695
		}, {
			"file":	"Zend/zend.c",
			"line":	324,
			"primary_score":	999692,
			"second_score":	123355
		}, {
			"file":	"Zend/zend.c",
			"line":	325,
			"primary_score":	999692,
			"second_score":	123304
		}, {
			"file":	"Zend/zend.c",
			"line":	328,
			"primary_score":	999692,
			"second_score":	123303
		}, {
			"file":	"Zend/zend.c",
			"line":	797,
			"primary_score":	999692,
			"second_score":	105180
		}, {
			"file":	"Zend/zend.c",
			"line":	798,
			"primary_score":	999692,
			"second_score":	105172
		}, {
			"file":	"Zend/zend.c",
			"line":	800,
			"primary_score":	999692,
			"second_score":	48172
		}, {
			"file":	"Zend/zend.c",
			"line":	801,
			"primary_score":	999692,
			"second_score":	48153
		}, {
			"file":	"Zend/zend.c",
			"line":	803,
			"primary_score":	999692,
			"second_score":	14820
		}, {
			"file":	"Zend/zend.c",
			"line":	804,
			"primary_score":	999692,
			"second_score":	14757
		}, {
			"file":	"Zend/zend.c",
			"line":	806,
			"primary_score":	999692,
			"second_score":	14756
		}, {
			"file":	"Zend/zend.c",
			"line":	807,
			"primary_score":	999692,
			"second_score":	14748
		}, {
			"file":	"Zend/zend.c",
			"line":	809,
			"primary_score":	999692,
			"second_score":	14747
		}, {
			"file":	"Zend/zend.c",
			"line":	810,
			"primary_score":	999692,
			"second_score":	14746
		}, {
			"file":	"Zend/zend.c",
			"line":	812,
			"primary_score":	999692,
			"second_score":	14745
		}, {
			"file":	"Zend/zend.c",
			"line":	813,
			"primary_score":	999692,
			"second_score":	6277
		}, {
			"file":	"Zend/zend.c",
			"line":	814,
			"primary_score":	999692,
			"second_score":	6276
		}, {
			"file":	"Zend/zend.c",
			"line":	822,
			"primary_score":	999692,
			"second_score":	6220
		}, {
			"file":	"Zend/zend.c",
			"line":	824,
			"primary_score":	999692,
			"second_score":	6108
		}, {
			"file":	"Zend/zend.c",
			"line":	898,
			"primary_score":	999692,
			"second_score":	121217
		}, {
			"file":	"Zend/zend.c",
			"line":	899,
			"primary_score":	999692,
			"second_score":	121211
		}, {
			"file":	"Zend/zend.c",
			"line":	900,
			"primary_score":	999692,
			"second_score":	121132
		}, {
			"file":	"Zend/zend.c",
			"line":	907,
			"primary_score":	999692,
			"second_score":	120302
		}, {
			"file":	"Zend/zend.c",
			"line":	908,
			"primary_score":	999692,
			"second_score":	120301
		}, {
			"file":	"Zend/zend.c",
			"line":	910,
			"primary_score":	999692,
			"second_score":	120300
		}, {
			"file":	"Zend/zend.c",
			"line":	911,
			"primary_score":	999692,
			"second_score":	120294
		}, {
			"file":	"Zend/zend.c",
			"line":	912,
			"primary_score":	999692,
			"second_score":	120284
		}, {
			"file":	"Zend/zend.c",
			"line":	915,
			"primary_score":	999692,
			"second_score":	120282
		}, {
			"file":	"Zend/zend.c",
			"line":	917,
			"primary_score":	999692,
			"second_score":	115339
		}, {
			"file":	"Zend/zend.c",
			"line":	918,
			"primary_score":	999692,
			"second_score":	115333
		}, {
			"file":	"Zend/zend.c",
			"line":	919,
			"primary_score":	999692,
			"second_score":	115184
		}, {
			"file":	"Zend/zend.c",
			"line":	921,
			"primary_score":	999692,
			"second_score":	115182
		}, {
			"file":	"Zend/zend.c",
			"line":	924,
			"primary_score":	999692,
			"second_score":	115155
		}, {
			"file":	"Zend/zend.c",
			"line":	925,
			"primary_score":	999692,
			"second_score":	115154
		}, {
			"file":	"Zend/zend.c",
			"line":	943,
			"primary_score":	999692,
			"second_score":	115150
		}, {
			"file":	"Zend/zend.c",
			"line":	944,
			"primary_score":	999692,
			"second_score":	115144
		}, {
			"file":	"Zend/zend.c",
			"line":	945,
			"primary_score":	999692,
			"second_score":	115141
		}, {
			"file":	"Zend/zend.c",
			"line":	1192,
			"primary_score":	999692,
			"second_score":	146248
		}, {
			"file":	"Zend/zend.c",
			"line":	1193,
			"primary_score":	999692,
			"second_score":	146247
		}, {
			"file":	"Zend/zend.c",
			"line":	1194,
			"primary_score":	999692,
			"second_score":	146246
		}, {
			"file":	"Zend/zend.c",
			"line":	1195,
			"primary_score":	999692,
			"second_score":	146245
		}, {
			"file":	"Zend/zend.c",
			"line":	1196,
			"primary_score":	999692,
			"second_score":	146244
		}, {
			"file":	"Zend/zend.c",
			"line":	1198,
			"primary_score":	999692,
			"second_score":	146243
		}, {
			"file":	"Zend/zend.c",
			"line":	1199,
			"primary_score":	999692,
			"second_score":	146242
		}, {
			"file":	"Zend/zend.c",
			"line":	1200,
			"primary_score":	999692,
			"second_score":	121265
		}, {
			"file":	"Zend/zend.c",
			"line":	1201,
			"primary_score":	999692,
			"second_score":	121264
		}, {
			"file":	"Zend/zend.c",
			"line":	1202,
			"primary_score":	999692,
			"second_score":	121263
		}, {
			"file":	"Zend/zend.c",
			"line":	1204,
			"primary_score":	999692,
			"second_score":	146236
		}, {
			"file":	"Zend/zend.c",
			"line":	1205,
			"primary_score":	999692,
			"second_score":	135997
		}, {
			"file":	"Zend/zend.c",
			"line":	1206,
			"primary_score":	999692,
			"second_score":	135996
		}, {
			"file":	"Zend/zend.c",
			"line":	1207,
			"primary_score":	999692,
			"second_score":	135995
		}, {
			"file":	"Zend/zend.c",
			"line":	1209,
			"primary_score":	999692,
			"second_score":	135895
		}, {
			"file":	"Zend/zend.c",
			"line":	1210,
			"primary_score":	999692,
			"second_score":	135816
		}, {
			"file":	"Zend/zend.c",
			"line":	1211,
			"primary_score":	999692,
			"second_score":	135815
		}, {
			"file":	"Zend/zend.c",
			"line":	1212,
			"primary_score":	999692,
			"second_score":	135814
		}, {
			"file":	"Zend/zend.c",
			"line":	1213,
			"primary_score":	999692,
			"second_score":	121641
		}, {
			"file":	"Zend/zend.c",
			"line":	1214,
			"primary_score":	999692,
			"second_score":	121639
		}, {
			"file":	"Zend/zend.c",
			"line":	1239,
			"primary_score":	999692,
			"second_score":	121638
		}, {
			"file":	"Zend/zend.c",
			"line":	1240,
			"primary_score":	999692,
			"second_score":	121284
		}, {
			"file":	"Zend/zend.c",
			"line":	1248,
			"primary_score":	999692,
			"second_score":	121262
		}, {
			"file":	"Zend/zend.c",
			"line":	1249,
			"primary_score":	999692,
			"second_score":	121261
		}, {
			"file":	"Zend/zend.c",
			"line":	1250,
			"primary_score":	999692,
			"second_score":	121260
		}, {
			"file":	"Zend/zend.c",
			"line":	1252,
			"primary_score":	999692,
			"second_score":	121259
		}, {
			"file":	"Zend/zend.c",
			"line":	1282,
			"primary_score":	999692,
			"second_score":	115252
		}, {
			"file":	"Zend/zend.h",
			"line":	379,
			"primary_score":	999692,
			"second_score":	14837
		}, {
			"file":	"Zend/zend.h",
			"line":	383,
			"primary_score":	999692,
			"second_score":	121822
		}, {
			"file":	"Zend/zend.h",
			"line":	387,
			"primary_score":	999692,
			"second_score":	127027
		}, {
			"file":	"Zend/zend.h",
			"line":	391,
			"primary_score":	999692,
			"second_score":	19562
		}, {
			"file":	"Zend/zend.h",
			"line":	395,
			"primary_score":	999692,
			"second_score":	125260
		}, {
			"file":	"Zend/zend.h",
			"line":	399,
			"primary_score":	999692,
			"second_score":	136231
		}, {
			"file":	"Zend/zend.h",
			"line":	403,
			"primary_score":	999692,
			"second_score":	18632
		}, {
			"file":	"Zend/zend_API.c",
			"line":	307,
			"primary_score":	999692,
			"second_score":	124949
		}, {
			"file":	"Zend/zend_API.c",
			"line":	308,
			"primary_score":	999692,
			"second_score":	124948
		}, {
			"file":	"Zend/zend_API.c",
			"line":	309,
			"primary_score":	999692,
			"second_score":	124947
		}, {
			"file":	"Zend/zend_API.c",
			"line":	312,
			"primary_score":	999692,
			"second_score":	124946
		}, {
			"file":	"Zend/zend_API.c",
			"line":	313,
			"primary_score":	999692,
			"second_score":	124945
		}, {
			"file":	"Zend/zend_API.c",
			"line":	315,
			"primary_score":	999692,
			"second_score":	124944
		}, {
			"file":	"Zend/zend_API.c",
			"line":	320,
			"primary_score":	999692,
			"second_score":	124943
		}, {
			"file":	"Zend/zend_API.c",
			"line":	325,
			"primary_score":	999692,
			"second_score":	124942
		}, {
			"file":	"Zend/zend_API.c",
			"line":	416,
			"primary_score":	999692,
			"second_score":	123088
		}, {
			"file":	"Zend/zend_API.c",
			"line":	417,
			"primary_score":	999692,
			"second_score":	123087
		}, {
			"file":	"Zend/zend_API.c",
			"line":	418,
			"primary_score":	999692,
			"second_score":	123086
		}, {
			"file":	"Zend/zend_API.c",
			"line":	427,
			"primary_score":	999988,
			"second_score":	65
		}, {
			"file":	"Zend/zend_API.c",
			"line":	431,
			"primary_score":	999692,
			"second_score":	123965
		}, {
			"file":	"Zend/zend_API.c",
			"line":	432,
			"primary_score":	999692,
			"second_score":	123084
		}, {
			"file":	"Zend/zend_API.c",
			"line":	438,
			"primary_score":	999692,
			"second_score":	123082
		}, {
			"file":	"Zend/zend_API.c",
			"line":	439,
			"primary_score":	999692,
			"second_score":	123081
		}, {
			"file":	"Zend/zend_API.c",
			"line":	440,
			"primary_score":	999692,
			"second_score":	123080
		}, {
			"file":	"Zend/zend_API.c",
			"line":	453,
			"primary_score":	999692,
			"second_score":	123079
		}, {
			"file":	"Zend/zend_API.c",
			"line":	643,
			"primary_score":	999692,
			"second_score":	124941
		}, {
			"file":	"Zend/zend_API.c",
			"line":	644,
			"primary_score":	999692,
			"second_score":	124940
		}, {
			"file":	"Zend/zend_API.c",
			"line":	647,
			"primary_score":	999692,
			"second_score":	124939
		}, {
			"file":	"Zend/zend_API.c",
			"line":	650,
			"primary_score":	999692,
			"second_score":	124938
		}, {
			"file":	"Zend/zend_API.c",
			"line":	656,
			"primary_score":	999692,
			"second_score":	124937
		}, {
			"file":	"Zend/zend_API.c",
			"line":	658,
			"primary_score":	999692,
			"second_score":	124936
		}, {
			"file":	"Zend/zend_API.c",
			"line":	664,
			"primary_score":	999692,
			"second_score":	124952
		}, {
			"file":	"Zend/zend_API.c",
			"line":	665,
			"primary_score":	999692,
			"second_score":	124951
		}, {
			"file":	"Zend/zend_API.c",
			"line":	667,
			"primary_score":	999692,
			"second_score":	124950
		}, {
			"file":	"Zend/zend_API.c",
			"line":	668,
			"primary_score":	999692,
			"second_score":	124935
		}, {
			"file":	"Zend/zend_API.c",
			"line":	688,
			"primary_score":	999692,
			"second_score":	124934
		}, {
			"file":	"Zend/zend_API.c",
			"line":	694,
			"primary_score":	999692,
			"second_score":	125012
		}, {
			"file":	"Zend/zend_API.c",
			"line":	695,
			"primary_score":	999692,
			"second_score":	125011
		}, {
			"file":	"Zend/zend_API.c",
			"line":	696,
			"primary_score":	999692,
			"second_score":	125010
		}, {
			"file":	"Zend/zend_API.c",
			"line":	697,
			"primary_score":	999692,
			"second_score":	125009
		}, {
			"file":	"Zend/zend_API.c",
			"line":	698,
			"primary_score":	999692,
			"second_score":	125008
		}, {
			"file":	"Zend/zend_API.c",
			"line":	699,
			"primary_score":	999692,
			"second_score":	125007
		}, {
			"file":	"Zend/zend_API.c",
			"line":	700,
			"primary_score":	999692,
			"second_score":	125006
		}, {
			"file":	"Zend/zend_API.c",
			"line":	701,
			"primary_score":	999692,
			"second_score":	125005
		}, {
			"file":	"Zend/zend_API.c",
			"line":	702,
			"primary_score":	999692,
			"second_score":	125004
		}, {
			"file":	"Zend/zend_API.c",
			"line":	703,
			"primary_score":	999692,
			"second_score":	125003
		}, {
			"file":	"Zend/zend_API.c",
			"line":	704,
			"primary_score":	999692,
			"second_score":	125002
		}, {
			"file":	"Zend/zend_API.c",
			"line":	706,
			"primary_score":	999692,
			"second_score":	125001
		}, {
			"file":	"Zend/zend_API.c",
			"line":	707,
			"primary_score":	999692,
			"second_score":	124994
		}, {
			"file":	"Zend/zend_API.c",
			"line":	708,
			"primary_score":	999692,
			"second_score":	124993
		}, {
			"file":	"Zend/zend_API.c",
			"line":	718,
			"primary_score":	999692,
			"second_score":	124992
		}, {
			"file":	"Zend/zend_API.c",
			"line":	722,
			"primary_score":	999692,
			"second_score":	124995
		}, {
			"file":	"Zend/zend_API.c",
			"line":	764,
			"primary_score":	999692,
			"second_score":	124991
		}, {
			"file":	"Zend/zend_API.c",
			"line":	765,
			"primary_score":	999692,
			"second_score":	122492
		}, {
			"file":	"Zend/zend_API.c",
			"line":	768,
			"primary_score":	999692,
			"second_score":	124990
		}, {
			"file":	"Zend/zend_API.c",
			"line":	774,
			"primary_score":	999692,
			"second_score":	124989
		}, {
			"file":	"Zend/zend_API.c",
			"line":	775,
			"primary_score":	999916,
			"second_score":	126
		}, {
			"file":	"Zend/zend_API.c",
			"line":	787,
			"primary_score":	999916,
			"second_score":	125
		}, {
			"file":	"Zend/zend_API.c",
			"line":	790,
			"primary_score":	999692,
			"second_score":	124988
		}, {
			"file":	"Zend/zend_API.c",
			"line":	792,
			"primary_score":	999692,
			"second_score":	124986
		}, {
			"file":	"Zend/zend_API.c",
			"line":	798,
			"primary_score":	999692,
			"second_score":	124985
		}, {
			"file":	"Zend/zend_API.c",
			"line":	799,
			"primary_score":	999692,
			"second_score":	124984
		}, {
			"file":	"Zend/zend_API.c",
			"line":	800,
			"primary_score":	999692,
			"second_score":	124958
		}, {
			"file":	"Zend/zend_API.c",
			"line":	801,
			"primary_score":	999692,
			"second_score":	124957
		}, {
			"file":	"Zend/zend_API.c",
			"line":	804,
			"primary_score":	999692,
			"second_score":	124956
		}, {
			"file":	"Zend/zend_API.c",
			"line":	834,
			"primary_score":	999692,
			"second_score":	124955
		}, {
			"file":	"Zend/zend_API.c",
			"line":	836,
			"primary_score":	999692,
			"second_score":	124953
		}, {
			"file":	"Zend/zend_API.c",
			"line":	844,
			"primary_score":	999692,
			"second_score":	124933
		}, {
			"file":	"Zend/zend_API.c",
			"line":	847,
			"primary_score":	999692,
			"second_score":	124932
		}, {
			"file":	"Zend/zend_API.c",
			"line":	866,
			"primary_score":	999944,
			"second_score":	121
		}, {
			"file":	"Zend/zend_API.c",
			"line":	867,
			"primary_score":	999944,
			"second_score":	120
		}, {
			"file":	"Zend/zend_API.c",
			"line":	869,
			"primary_score":	999944,
			"second_score":	119
		}, {
			"file":	"Zend/zend_API.c",
			"line":	871,
			"primary_score":	999944,
			"second_score":	115
		}, {
			"file":	"Zend/zend_API.c",
			"line":	872,
			"primary_score":	999944,
			"second_score":	114
		}, {
			"file":	"Zend/zend_API.c",
			"line":	873,
			"primary_score":	999944,
			"second_score":	9
		}, {
			"file":	"Zend/zend_API.c",
			"line":	875,
			"primary_score":	999944,
			"second_score":	8
		}, {
			"file":	"Zend/zend_API.c",
			"line":	881,
			"primary_score":	999692,
			"second_score":	125020
		}, {
			"file":	"Zend/zend_API.c",
			"line":	882,
			"primary_score":	999692,
			"second_score":	125019
		}, {
			"file":	"Zend/zend_API.c",
			"line":	884,
			"primary_score":	999692,
			"second_score":	125018
		}, {
			"file":	"Zend/zend_API.c",
			"line":	886,
			"primary_score":	999692,
			"second_score":	125014
		}, {
			"file":	"Zend/zend_API.c",
			"line":	887,
			"primary_score":	999692,
			"second_score":	125013
		}, {
			"file":	"Zend/zend_API.c",
			"line":	888,
			"primary_score":	999692,
			"second_score":	124931
		}, {
			"file":	"Zend/zend_API.c",
			"line":	890,
			"primary_score":	999692,
			"second_score":	124930
		}, {
			"file":	"Zend/zend_API.c",
			"line":	973,
			"primary_score":	999692,
			"second_score":	158081
		}, {
			"file":	"Zend/zend_API.c",
			"line":	975,
			"primary_score":	999692,
			"second_score":	157977
		}, {
			"file":	"Zend/zend_API.c",
			"line":	976,
			"primary_score":	999692,
			"second_score":	157959
		}, {
			"file":	"Zend/zend_API.c",
			"line":	977,
			"primary_score":	999692,
			"second_score":	157958
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1018,
			"primary_score":	999838,
			"second_score":	574
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1019,
			"primary_score":	999838,
			"second_score":	573
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1020,
			"primary_score":	999838,
			"second_score":	572
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1021,
			"primary_score":	999838,
			"second_score":	571
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1023,
			"primary_score":	999838,
			"second_score":	570
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1024,
			"primary_score":	999838,
			"second_score":	569
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1026,
			"primary_score":	999838,
			"second_score":	547
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1032,
			"primary_score":	999838,
			"second_score":	546
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1068,
			"primary_score":	999838,
			"second_score":	545
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1072,
			"primary_score":	999838,
			"second_score":	544
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1073,
			"primary_score":	999838,
			"second_score":	543
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1080,
			"primary_score":	999839,
			"second_score":	447
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1082,
			"primary_score":	999839,
			"second_score":	446
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1101,
			"primary_score":	999838,
			"second_score":	577
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1103,
			"primary_score":	999838,
			"second_score":	576
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1108,
			"primary_score":	999838,
			"second_score":	575
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1110,
			"primary_score":	999838,
			"second_score":	542
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1111,
			"primary_score":	999838,
			"second_score":	541
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1120,
			"primary_score":	999875,
			"second_score":	540
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1122,
			"primary_score":	999838,
			"second_score":	426
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1128,
			"primary_score":	999838,
			"second_score":	578
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1368,
			"primary_score":	999692,
			"second_score":	125681
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1370,
			"primary_score":	999692,
			"second_score":	125680
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1371,
			"primary_score":	999692,
			"second_score":	125570
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1373,
			"primary_score":	999692,
			"second_score":	125455
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1779,
			"primary_score":	999692,
			"second_score":	105171
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1780,
			"primary_score":	999692,
			"second_score":	105170
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1781,
			"primary_score":	999692,
			"second_score":	105169
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2171,
			"primary_score":	999692,
			"second_score":	51117
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2172,
			"primary_score":	999692,
			"second_score":	51116
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2173,
			"primary_score":	999692,
			"second_score":	51115
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2175,
			"primary_score":	999692,
			"second_score":	51114
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2176,
			"primary_score":	999692,
			"second_score":	51113
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2178,
			"primary_score":	999692,
			"second_score":	51112
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2179,
			"primary_score":	999692,
			"second_score":	48233
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2185,
			"primary_score":	999692,
			"second_score":	48232
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2186,
			"primary_score":	999692,
			"second_score":	48184
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2187,
			"primary_score":	999692,
			"second_score":	48183
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2213,
			"primary_score":	999692,
			"second_score":	51124
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2215,
			"primary_score":	999692,
			"second_score":	51123
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2220,
			"primary_score":	999692,
			"second_score":	51122
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2224,
			"primary_score":	999692,
			"second_score":	54364
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2228,
			"primary_score":	999692,
			"second_score":	51121
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2232,
			"primary_score":	999692,
			"second_score":	53681
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2233,
			"primary_score":	999692,
			"second_score":	54749
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2238,
			"primary_score":	999692,
			"second_score":	51120
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2239,
			"primary_score":	999692,
			"second_score":	51119
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2240,
			"primary_score":	999692,
			"second_score":	51118
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2245,
			"primary_score":	999692,
			"second_score":	48182
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2264,
			"primary_score":	999692,
			"second_score":	173234
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2284,
			"primary_score":	999692,
			"second_score":	121095
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2286,
			"primary_score":	999692,
			"second_score":	121094
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2287,
			"primary_score":	999692,
			"second_score":	121088
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2290,
			"primary_score":	999692,
			"second_score":	121087
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2292,
			"primary_score":	999692,
			"second_score":	121086
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2293,
			"primary_score":	999692,
			"second_score":	120504
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2295,
			"primary_score":	999692,
			"second_score":	120503
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2296,
			"primary_score":	999692,
			"second_score":	120497
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2299,
			"primary_score":	999692,
			"second_score":	120496
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2305,
			"primary_score":	999692,
			"second_score":	116359
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2307,
			"primary_score":	999692,
			"second_score":	116358
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2331,
			"primary_score":	999692,
			"second_score":	115132
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2335,
			"primary_score":	999692,
			"second_score":	115131
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2337,
			"primary_score":	999692,
			"second_score":	115130
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3782,
			"primary_score":	999937,
			"second_score":	215
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3783,
			"primary_score":	999937,
			"second_score":	214
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3784,
			"primary_score":	999937,
			"second_score":	213
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3785,
			"primary_score":	999937,
			"second_score":	212
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3793,
			"primary_score":	999937,
			"second_score":	217
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3794,
			"primary_score":	999937,
			"second_score":	216
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3795,
			"primary_score":	999937,
			"second_score":	211
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3800,
			"primary_score":	999937,
			"second_score":	210
		}, {
			"file":	"Zend/zend_API.c",
			"line":	3801,
			"primary_score":	999937,
			"second_score":	209
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	144,
			"primary_score":	999692,
			"second_score":	3188
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	297,
			"primary_score":	999692,
			"second_score":	3191
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	673,
			"primary_score":	999692,
			"second_score":	114654
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	675,
			"primary_score":	999692,
			"second_score":	114653
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	676,
			"primary_score":	999692,
			"second_score":	114652
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	699,
			"primary_score":	999692,
			"second_score":	114712
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	701,
			"primary_score":	999692,
			"second_score":	114711
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	702,
			"primary_score":	999692,
			"second_score":	114710
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	725,
			"primary_score":	999692,
			"second_score":	114661
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	726,
			"primary_score":	999692,
			"second_score":	114660
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	728,
			"primary_score":	999692,
			"second_score":	114659
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	730,
			"primary_score":	999692,
			"second_score":	114658
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	731,
			"primary_score":	999692,
			"second_score":	114657
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	732,
			"primary_score":	999692,
			"second_score":	114656
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	734,
			"primary_score":	999692,
			"second_score":	114655
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	735,
			"primary_score":	999692,
			"second_score":	114651
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	736,
			"primary_score":	999692,
			"second_score":	114650
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	737,
			"primary_score":	999692,
			"second_score":	114649
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	738,
			"primary_score":	999692,
			"second_score":	114648
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	739,
			"primary_score":	999692,
			"second_score":	114647
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	740,
			"primary_score":	999692,
			"second_score":	114646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	741,
			"primary_score":	999692,
			"second_score":	114645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	743,
			"primary_score":	999692,
			"second_score":	118544
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	745,
			"primary_score":	999692,
			"second_score":	118543
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	746,
			"primary_score":	999692,
			"second_score":	118542
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	748,
			"primary_score":	999692,
			"second_score":	118541
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	749,
			"primary_score":	999692,
			"second_score":	118540
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	750,
			"primary_score":	999692,
			"second_score":	118539
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	751,
			"primary_score":	999692,
			"second_score":	118538
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	752,
			"primary_score":	999692,
			"second_score":	118537
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	753,
			"primary_score":	999692,
			"second_score":	118536
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	754,
			"primary_score":	999692,
			"second_score":	118535
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	768,
			"primary_score":	999692,
			"second_score":	129799
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	770,
			"primary_score":	999692,
			"second_score":	129798
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	772,
			"primary_score":	999692,
			"second_score":	129797
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	773,
			"primary_score":	999692,
			"second_score":	129796
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	774,
			"primary_score":	999692,
			"second_score":	129795
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	776,
			"primary_score":	999692,
			"second_score":	129794
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	778,
			"primary_score":	999692,
			"second_score":	129793
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	779,
			"primary_score":	999692,
			"second_score":	129792
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	780,
			"primary_score":	999692,
			"second_score":	129791
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	786,
			"primary_score":	999692,
			"second_score":	114698
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	787,
			"primary_score":	999692,
			"second_score":	114697
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	789,
			"primary_score":	999692,
			"second_score":	114696
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	791,
			"primary_score":	999692,
			"second_score":	114695
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	792,
			"primary_score":	999692,
			"second_score":	114694
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	795,
			"primary_score":	999692,
			"second_score":	114693
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	800,
			"primary_score":	999692,
			"second_score":	114692
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	801,
			"primary_score":	999692,
			"second_score":	114691
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	802,
			"primary_score":	999692,
			"second_score":	114690
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	803,
			"primary_score":	999692,
			"second_score":	114689
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	805,
			"primary_score":	999692,
			"second_score":	114685
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	806,
			"primary_score":	999692,
			"second_score":	114683
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	807,
			"primary_score":	999692,
			"second_score":	114682
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	808,
			"primary_score":	999692,
			"second_score":	114681
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	833,
			"primary_score":	999692,
			"second_score":	129588
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	838,
			"primary_score":	999692,
			"second_score":	129587
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	839,
			"primary_score":	999692,
			"second_score":	129586
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	841,
			"primary_score":	999692,
			"second_score":	129585
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	842,
			"primary_score":	999692,
			"second_score":	129584
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	843,
			"primary_score":	999692,
			"second_score":	129583
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	845,
			"primary_score":	999692,
			"second_score":	129582
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	846,
			"primary_score":	999692,
			"second_score":	129581
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	890,
			"primary_score":	999692,
			"second_score":	115036
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	891,
			"primary_score":	999692,
			"second_score":	115035
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	893,
			"primary_score":	999692,
			"second_score":	115034
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	894,
			"primary_score":	999692,
			"second_score":	115033
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	896,
			"primary_score":	999692,
			"second_score":	115032
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	897,
			"primary_score":	999692,
			"second_score":	115031
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	904,
			"primary_score":	999692,
			"second_score":	115030
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	905,
			"primary_score":	999692,
			"second_score":	115029
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	906,
			"primary_score":	999692,
			"second_score":	114776
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	907,
			"primary_score":	999692,
			"second_score":	114775
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	908,
			"primary_score":	999692,
			"second_score":	114774
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	909,
			"primary_score":	999692,
			"second_score":	114773
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	911,
			"primary_score":	999692,
			"second_score":	114772
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	912,
			"primary_score":	999692,
			"second_score":	114771
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1599,
			"primary_score":	999692,
			"second_score":	46196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1600,
			"primary_score":	999692,
			"second_score":	46195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1601,
			"primary_score":	999692,
			"second_score":	46194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1602,
			"primary_score":	999692,
			"second_score":	46193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1604,
			"primary_score":	999692,
			"second_score":	46192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1608,
			"primary_score":	999692,
			"second_score":	46191
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1614,
			"primary_score":	999692,
			"second_score":	46190
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1669,
			"primary_score":	999692,
			"second_score":	46189
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1670,
			"primary_score":	999692,
			"second_score":	46188
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1671,
			"primary_score":	999692,
			"second_score":	46187
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1672,
			"primary_score":	999692,
			"second_score":	46186
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1673,
			"primary_score":	999692,
			"second_score":	3195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1674,
			"primary_score":	999692,
			"second_score":	3194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1675,
			"primary_score":	999692,
			"second_score":	3193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1676,
			"primary_score":	999692,
			"second_score":	3192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1678,
			"primary_score":	999692,
			"second_score":	3190
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1679,
			"primary_score":	999692,
			"second_score":	3189
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1680,
			"primary_score":	999692,
			"second_score":	3187
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1681,
			"primary_score":	999692,
			"second_score":	3186
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1684,
			"primary_score":	999692,
			"second_score":	115042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1686,
			"primary_score":	999692,
			"second_score":	115041
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1687,
			"primary_score":	999692,
			"second_score":	115040
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1692,
			"primary_score":	999692,
			"second_score":	115039
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1705,
			"primary_score":	999692,
			"second_score":	115038
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1709,
			"primary_score":	999692,
			"second_score":	115037
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1710,
			"primary_score":	999692,
			"second_score":	114770
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1711,
			"primary_score":	999692,
			"second_score":	114769
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1712,
			"primary_score":	999692,
			"second_score":	114768
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1717,
			"primary_score":	999692,
			"second_score":	114767
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1718,
			"primary_score":	999692,
			"second_score":	114766
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1719,
			"primary_score":	999692,
			"second_score":	114765
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1721,
			"primary_score":	999692,
			"second_score":	114764
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1722,
			"primary_score":	999692,
			"second_score":	114763
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1724,
			"primary_score":	999692,
			"second_score":	114762
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1725,
			"primary_score":	999692,
			"second_score":	114761
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1726,
			"primary_score":	999692,
			"second_score":	114757
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1727,
			"primary_score":	999692,
			"second_score":	114751
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1729,
			"primary_score":	999692,
			"second_score":	114733
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1730,
			"primary_score":	999692,
			"second_score":	114732
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1732,
			"primary_score":	999692,
			"second_score":	114637
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1802,
			"primary_score":	999692,
			"second_score":	114722
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1803,
			"primary_score":	999692,
			"second_score":	114721
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1804,
			"primary_score":	999692,
			"second_score":	114717
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1805,
			"primary_score":	999692,
			"second_score":	114716
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1807,
			"primary_score":	999692,
			"second_score":	114715
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1811,
			"primary_score":	999692,
			"second_score":	114714
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1864,
			"primary_score":	999692,
			"second_score":	114713
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1865,
			"primary_score":	999692,
			"second_score":	114709
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1870,
			"primary_score":	999692,
			"second_score":	114708
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1875,
			"primary_score":	999692,
			"second_score":	114731
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1876,
			"primary_score":	999692,
			"second_score":	114730
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1877,
			"primary_score":	999692,
			"second_score":	114729
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1878,
			"primary_score":	999692,
			"second_score":	114728
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1879,
			"primary_score":	999692,
			"second_score":	114727
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1880,
			"primary_score":	999692,
			"second_score":	114726
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1881,
			"primary_score":	999692,
			"second_score":	114725
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1883,
			"primary_score":	999692,
			"second_score":	114724
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1884,
			"primary_score":	999692,
			"second_score":	121794
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1885,
			"primary_score":	999692,
			"second_score":	121793
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1887,
			"primary_score":	999692,
			"second_score":	121792
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1891,
			"primary_score":	999692,
			"second_score":	121791
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1897,
			"primary_score":	999692,
			"second_score":	121790
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1898,
			"primary_score":	999692,
			"second_score":	121789
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1899,
			"primary_score":	999692,
			"second_score":	121788
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1900,
			"primary_score":	999692,
			"second_score":	121787
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1901,
			"primary_score":	999692,
			"second_score":	121786
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1902,
			"primary_score":	999692,
			"second_score":	121785
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1909,
			"primary_score":	999692,
			"second_score":	124869
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1910,
			"primary_score":	999692,
			"second_score":	124868
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1912,
			"primary_score":	999692,
			"second_score":	129604
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1913,
			"primary_score":	999692,
			"second_score":	129600
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1917,
			"primary_score":	999692,
			"second_score":	129599
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1925,
			"primary_score":	999692,
			"second_score":	114723
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1927,
			"primary_score":	999692,
			"second_score":	114707
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1944,
			"primary_score":	999692,
			"second_score":	114706
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2005,
			"primary_score":	999692,
			"second_score":	114705
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2007,
			"primary_score":	999692,
			"second_score":	114704
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2008,
			"primary_score":	999692,
			"second_score":	114703
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2009,
			"primary_score":	999692,
			"second_score":	114702
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2010,
			"primary_score":	999692,
			"second_score":	114701
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2011,
			"primary_score":	999692,
			"second_score":	114699
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2013,
			"primary_score":	999692,
			"second_score":	114680
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2016,
			"primary_score":	999692,
			"second_score":	114679
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2018,
			"primary_score":	999692,
			"second_score":	114678
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2019,
			"primary_score":	999692,
			"second_score":	129577
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2020,
			"primary_score":	999692,
			"second_score":	129576
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2022,
			"primary_score":	999692,
			"second_score":	114677
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2025,
			"primary_score":	999692,
			"second_score":	114676
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2026,
			"primary_score":	999692,
			"second_score":	114670
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2027,
			"primary_score":	999692,
			"second_score":	114669
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2030,
			"primary_score":	999692,
			"second_score":	114663
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2031,
			"primary_score":	999692,
			"second_score":	114662
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2037,
			"primary_score":	999692,
			"second_score":	114644
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2039,
			"primary_score":	999692,
			"second_score":	114643
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2040,
			"primary_score":	999692,
			"second_score":	114642
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2041,
			"primary_score":	999692,
			"second_score":	114641
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2044,
			"primary_score":	999692,
			"second_score":	114640
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2046,
			"primary_score":	999692,
			"second_score":	114638
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2052,
			"primary_score":	999692,
			"second_score":	115096
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2053,
			"primary_score":	999692,
			"second_score":	115095
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2054,
			"primary_score":	999692,
			"second_score":	115094
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2056,
			"primary_score":	999692,
			"second_score":	115093
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2060,
			"primary_score":	999692,
			"second_score":	115092
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2061,
			"primary_score":	999692,
			"second_score":	115091
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2062,
			"primary_score":	999692,
			"second_score":	115090
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2069,
			"primary_score":	999692,
			"second_score":	115089
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2070,
			"primary_score":	999692,
			"second_score":	115088
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2071,
			"primary_score":	999692,
			"second_score":	115087
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2073,
			"primary_score":	999692,
			"second_score":	115086
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2074,
			"primary_score":	999692,
			"second_score":	115085
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2075,
			"primary_score":	999692,
			"second_score":	115084
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2076,
			"primary_score":	999692,
			"second_score":	115083
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2082,
			"primary_score":	999692,
			"second_score":	115082
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2096,
			"primary_score":	999692,
			"second_score":	115397
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2097,
			"primary_score":	999692,
			"second_score":	115396
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2098,
			"primary_score":	999692,
			"second_score":	115377
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2112,
			"primary_score":	999692,
			"second_score":	126538
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2113,
			"primary_score":	999692,
			"second_score":	126537
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2114,
			"primary_score":	999692,
			"second_score":	126536
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2115,
			"primary_score":	999692,
			"second_score":	126535
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2116,
			"primary_score":	999692,
			"second_score":	126534
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2118,
			"primary_score":	999692,
			"second_score":	126533
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2119,
			"primary_score":	999692,
			"second_score":	126532
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2121,
			"primary_score":	999692,
			"second_score":	127620
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2122,
			"primary_score":	999692,
			"second_score":	127619
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2123,
			"primary_score":	999692,
			"second_score":	127618
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2124,
			"primary_score":	999692,
			"second_score":	127617
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2126,
			"primary_score":	999692,
			"second_score":	127616
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2130,
			"primary_score":	999692,
			"second_score":	127615
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2131,
			"primary_score":	999692,
			"second_score":	136132
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2133,
			"primary_score":	999692,
			"second_score":	136131
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2134,
			"primary_score":	999692,
			"second_score":	136130
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2136,
			"primary_score":	999692,
			"second_score":	136129
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2137,
			"primary_score":	999692,
			"second_score":	136127
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2138,
			"primary_score":	999692,
			"second_score":	136126
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2139,
			"primary_score":	999692,
			"second_score":	127607
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2140,
			"primary_score":	999692,
			"second_score":	127606
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2144,
			"primary_score":	999692,
			"second_score":	136125
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2145,
			"primary_score":	999692,
			"second_score":	136119
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2147,
			"primary_score":	999692,
			"second_score":	136118
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2150,
			"primary_score":	999692,
			"second_score":	136112
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2151,
			"primary_score":	999692,
			"second_score":	136097
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2152,
			"primary_score":	999692,
			"second_score":	136096
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2154,
			"primary_score":	999692,
			"second_score":	136094
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2155,
			"primary_score":	999692,
			"second_score":	136093
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2159,
			"primary_score":	999692,
			"second_score":	132482
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2160,
			"primary_score":	999692,
			"second_score":	156009
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2162,
			"primary_score":	999692,
			"second_score":	156008
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2163,
			"primary_score":	999692,
			"second_score":	129271
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2164,
			"primary_score":	999692,
			"second_score":	129270
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2170,
			"primary_score":	999692,
			"second_score":	129269
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2171,
			"primary_score":	999692,
			"second_score":	129268
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2172,
			"primary_score":	999692,
			"second_score":	129267
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2173,
			"primary_score":	999692,
			"second_score":	129266
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2175,
			"primary_score":	999692,
			"second_score":	129265
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2180,
			"primary_score":	999692,
			"second_score":	129264
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2183,
			"primary_score":	999692,
			"second_score":	129263
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2185,
			"primary_score":	999692,
			"second_score":	129262
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2186,
			"primary_score":	999692,
			"second_score":	129261
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2188,
			"primary_score":	999692,
			"second_score":	129260
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2189,
			"primary_score":	999692,
			"second_score":	129259
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2190,
			"primary_score":	999692,
			"second_score":	129258
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2197,
			"primary_score":	999692,
			"second_score":	129257
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2202,
			"primary_score":	999692,
			"second_score":	132481
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2204,
			"primary_score":	999692,
			"second_score":	132480
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2205,
			"primary_score":	999692,
			"second_score":	124343
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2206,
			"primary_score":	999692,
			"second_score":	124342
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2207,
			"primary_score":	999692,
			"second_score":	124340
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2208,
			"primary_score":	999692,
			"second_score":	124339
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2209,
			"primary_score":	999692,
			"second_score":	124338
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2211,
			"primary_score":	999692,
			"second_score":	124337
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2212,
			"primary_score":	999692,
			"second_score":	124335
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2214,
			"primary_score":	999692,
			"second_score":	124316
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2218,
			"primary_score":	999692,
			"second_score":	124315
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2221,
			"primary_score":	999692,
			"second_score":	124314
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2222,
			"primary_score":	999692,
			"second_score":	124308
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2223,
			"primary_score":	999692,
			"second_score":	124307
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2226,
			"primary_score":	999692,
			"second_score":	124301
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2230,
			"primary_score":	999692,
			"second_score":	124300
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2233,
			"primary_score":	999692,
			"second_score":	124282
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2234,
			"primary_score":	999692,
			"second_score":	124281
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2235,
			"primary_score":	999692,
			"second_score":	124280
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2236,
			"primary_score":	999692,
			"second_score":	124279
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2238,
			"primary_score":	999692,
			"second_score":	124278
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2239,
			"primary_score":	999692,
			"second_score":	124276
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2246,
			"primary_score":	999692,
			"second_score":	151035
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2344,
			"primary_score":	999692,
			"second_score":	151034
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2348,
			"primary_score":	999692,
			"second_score":	150933
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2350,
			"primary_score":	999692,
			"second_score":	150932
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2351,
			"primary_score":	999692,
			"second_score":	150916
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2408,
			"primary_score":	999692,
			"second_score":	121805
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2410,
			"primary_score":	999692,
			"second_score":	121804
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2413,
			"primary_score":	999692,
			"second_score":	121803
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2418,
			"primary_score":	999692,
			"second_score":	115099
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2420,
			"primary_score":	999692,
			"second_score":	115098
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2424,
			"primary_score":	999692,
			"second_score":	115097
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2429,
			"primary_score":	999692,
			"second_score":	126541
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2431,
			"primary_score":	999692,
			"second_score":	126540
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2434,
			"primary_score":	999692,
			"second_score":	126539
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2469,
			"primary_score":	999692,
			"second_score":	135261
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2470,
			"primary_score":	999692,
			"second_score":	135260
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2472,
			"primary_score":	999692,
			"second_score":	135259
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2478,
			"primary_score":	999692,
			"second_score":	135258
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2482,
			"primary_score":	999692,
			"second_score":	135257
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2517,
			"primary_score":	999692,
			"second_score":	135262
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2527,
			"primary_score":	999692,
			"second_score":	123561
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2538,
			"primary_score":	999692,
			"second_score":	135264
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2540,
			"primary_score":	999692,
			"second_score":	135263
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2541,
			"primary_score":	999692,
			"second_score":	135176
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2544,
			"primary_score":	999692,
			"second_score":	135175
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2545,
			"primary_score":	999692,
			"second_score":	135174
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2550,
			"primary_score":	999692,
			"second_score":	144218
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2551,
			"primary_score":	999692,
			"second_score":	144217
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2553,
			"primary_score":	999692,
			"second_score":	144216
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2554,
			"primary_score":	999692,
			"second_score":	144215
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2555,
			"primary_score":	999692,
			"second_score":	144111
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2558,
			"primary_score":	999692,
			"second_score":	144110
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2559,
			"primary_score":	999692,
			"second_score":	144109
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2564,
			"primary_score":	999692,
			"second_score":	125565
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2566,
			"primary_score":	999692,
			"second_score":	125564
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2567,
			"primary_score":	999692,
			"second_score":	125460
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2570,
			"primary_score":	999692,
			"second_score":	125459
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2571,
			"primary_score":	999692,
			"second_score":	125458
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2572,
			"primary_score":	999692,
			"second_score":	125457
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2578,
			"primary_score":	999692,
			"second_score":	148866
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2580,
			"primary_score":	999692,
			"second_score":	148865
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2581,
			"primary_score":	999692,
			"second_score":	148864
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2584,
			"primary_score":	999692,
			"second_score":	148863
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2585,
			"primary_score":	999692,
			"second_score":	148862
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2587,
			"primary_score":	999692,
			"second_score":	148861
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2588,
			"primary_score":	999692,
			"second_score":	148860
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2625,
			"primary_score":	999692,
			"second_score":	46197
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	95,
			"primary_score":	999692,
			"second_score":	148814
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	96,
			"primary_score":	999692,
			"second_score":	148813
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	97,
			"primary_score":	999692,
			"second_score":	148812
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	346,
			"primary_score":	999692,
			"second_score":	125995
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1335,
			"primary_score":	999692,
			"second_score":	123142
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1336,
			"primary_score":	999692,
			"second_score":	123141
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1337,
			"primary_score":	999692,
			"second_score":	123140
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1338,
			"primary_score":	999692,
			"second_score":	123139
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1339,
			"primary_score":	999692,
			"second_score":	123138
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1341,
			"primary_score":	999692,
			"second_score":	123137
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1345,
			"primary_score":	999692,
			"second_score":	123070
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1348,
			"primary_score":	999692,
			"second_score":	122894
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1349,
			"primary_score":	999692,
			"second_score":	122893
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1354,
			"primary_score":	999692,
			"second_score":	122892
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1356,
			"primary_score":	999692,
			"second_score":	122852
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1362,
			"primary_score":	999692,
			"second_score":	122833
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1367,
			"primary_score":	999692,
			"second_score":	122832
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1891,
			"primary_score":	999692,
			"second_score":	125683
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1892,
			"primary_score":	999692,
			"second_score":	125682
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1893,
			"primary_score":	999692,
			"second_score":	125307
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1921,
			"primary_score":	999692,
			"second_score":	135486
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1923,
			"primary_score":	999692,
			"second_score":	135485
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1927,
			"primary_score":	999692,
			"second_score":	135447
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1929,
			"primary_score":	999692,
			"second_score":	135345
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1932,
			"primary_score":	999692,
			"second_score":	135344
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	145082
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	145081
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	173,
			"primary_score":	999692,
			"second_score":	145080
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	145079
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	175,
			"primary_score":	999692,
			"second_score":	145078
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	176,
			"primary_score":	999692,
			"second_score":	145077
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	208,
			"primary_score":	999692,
			"second_score":	135880
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	210,
			"primary_score":	999692,
			"second_score":	135879
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	115332
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	230,
			"primary_score":	999692,
			"second_score":	115307
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	231,
			"primary_score":	999692,
			"second_score":	115282
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	232,
			"primary_score":	999692,
			"second_score":	115278
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	233,
			"primary_score":	999692,
			"second_score":	115274
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	234,
			"primary_score":	999692,
			"second_score":	115270
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	115266
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	236,
			"primary_score":	999692,
			"second_score":	115262
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	237,
			"primary_score":	999692,
			"second_score":	115192
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	238,
			"primary_score":	999692,
			"second_score":	115188
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	245,
			"primary_score":	999692,
			"second_score":	145895
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	246,
			"primary_score":	999692,
			"second_score":	145894
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	248,
			"primary_score":	999692,
			"second_score":	145893
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	252,
			"primary_score":	999692,
			"second_score":	145798
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	253,
			"primary_score":	999692,
			"second_score":	145688
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	254,
			"primary_score":	999692,
			"second_score":	145336
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	255,
			"primary_score":	999692,
			"second_score":	145335
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	262,
			"primary_score":	999692,
			"second_score":	136013
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	269,
			"primary_score":	999692,
			"second_score":	145108
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	283,
			"primary_score":	999692,
			"second_score":	126744
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	290,
			"primary_score":	999692,
			"second_score":	137019
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	296,
			"primary_score":	999744,
			"second_score":	4609
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	297,
			"primary_score":	999744,
			"second_score":	4608
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	299,
			"primary_score":	999744,
			"second_score":	4601
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	300,
			"primary_score":	999744,
			"second_score":	4600
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	304,
			"primary_score":	999744,
			"second_score":	4599
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	305,
			"primary_score":	999744,
			"second_score":	4578
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	309,
			"primary_score":	999744,
			"second_score":	5727
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	310,
			"primary_score":	999744,
			"second_score":	5726
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	311,
			"primary_score":	999744,
			"second_score":	5725
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	312,
			"primary_score":	999744,
			"second_score":	5724
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	313,
			"primary_score":	999744,
			"second_score":	5723
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	315,
			"primary_score":	999744,
			"second_score":	5612
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	316,
			"primary_score":	999744,
			"second_score":	5546
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	317,
			"primary_score":	999744,
			"second_score":	5545
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	318,
			"primary_score":	999744,
			"second_score":	5544
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	335,
			"primary_score":	999692,
			"second_score":	136239
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	336,
			"primary_score":	999692,
			"second_score":	136238
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	337,
			"primary_score":	999692,
			"second_score":	136237
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	338,
			"primary_score":	999692,
			"second_score":	138883
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	339,
			"primary_score":	999692,
			"second_score":	138882
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	341,
			"primary_score":	999692,
			"second_score":	136236
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	342,
			"primary_score":	999692,
			"second_score":	137076
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	343,
			"primary_score":	999692,
			"second_score":	137075
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	345,
			"primary_score":	999692,
			"second_score":	137074
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	348,
			"primary_score":	999692,
			"second_score":	136235
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	349,
			"primary_score":	999692,
			"second_score":	136234
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	350,
			"primary_score":	999692,
			"second_score":	136232
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	351,
			"primary_score":	999692,
			"second_score":	136230
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	352,
			"primary_score":	999692,
			"second_score":	136229
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	353,
			"primary_score":	999692,
			"second_score":	136228
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	359,
			"primary_score":	999916,
			"second_score":	3360
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	360,
			"primary_score":	999916,
			"second_score":	3359
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	361,
			"primary_score":	999916,
			"second_score":	3358
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	362,
			"primary_score":	999916,
			"second_score":	3357
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	364,
			"primary_score":	999916,
			"second_score":	3356
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	370,
			"primary_score":	999916,
			"second_score":	3355
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	373,
			"primary_score":	999916,
			"second_score":	3334
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	374,
			"primary_score":	999916,
			"second_score":	3235
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	375,
			"primary_score":	999916,
			"second_score":	3228
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	376,
			"primary_score":	999916,
			"second_score":	3164
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	378,
			"primary_score":	999916,
			"second_score":	3161
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	417,
			"primary_score":	999851,
			"second_score":	5975
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	418,
			"primary_score":	999851,
			"second_score":	5974
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	419,
			"primary_score":	999851,
			"second_score":	5973
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	420,
			"primary_score":	999851,
			"second_score":	5972
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	421,
			"primary_score":	999851,
			"second_score":	5971
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	423,
			"primary_score":	999851,
			"second_score":	5970
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	429,
			"primary_score":	999851,
			"second_score":	5969
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	432,
			"primary_score":	999851,
			"second_score":	5908
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	436,
			"primary_score":	999851,
			"second_score":	5907
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	437,
			"primary_score":	999851,
			"second_score":	5906
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	439,
			"primary_score":	999851,
			"second_score":	5814
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	440,
			"primary_score":	999851,
			"second_score":	5807
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	441,
			"primary_score":	999851,
			"second_score":	5744
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	443,
			"primary_score":	999851,
			"second_score":	5741
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	445,
			"primary_score":	999851,
			"second_score":	5739
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	546,
			"primary_score":	999692,
			"second_score":	137236
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	548,
			"primary_score":	999692,
			"second_score":	137235
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	632,
			"primary_score":	999744,
			"second_score":	4637
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	633,
			"primary_score":	999744,
			"second_score":	4636
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	634,
			"primary_score":	999744,
			"second_score":	4635
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	636,
			"primary_score":	999744,
			"second_score":	4634
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	637,
			"primary_score":	999744,
			"second_score":	4633
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	640,
			"primary_score":	999744,
			"second_score":	4632
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	645,
			"primary_score":	999744,
			"second_score":	4611
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	646,
			"primary_score":	999744,
			"second_score":	4610
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	647,
			"primary_score":	999744,
			"second_score":	4577
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	648,
			"primary_score":	999744,
			"second_score":	4576
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	649,
			"primary_score":	999744,
			"second_score":	4575
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	685,
			"primary_score":	999744,
			"second_score":	4638
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	841,
			"primary_score":	999692,
			"second_score":	136738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	843,
			"primary_score":	999692,
			"second_score":	136728
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	844,
			"primary_score":	999692,
			"second_score":	136727
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	845,
			"primary_score":	999692,
			"second_score":	136723
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	884,
			"primary_score":	999862,
			"second_score":	3479
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	890,
			"primary_score":	999862,
			"second_score":	3478
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1235,
			"primary_score":	999952,
			"second_score":	1802
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1236,
			"primary_score":	999952,
			"second_score":	1800
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1237,
			"primary_score":	999952,
			"second_score":	1799
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1239,
			"primary_score":	999952,
			"second_score":	1798
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1240,
			"primary_score":	999952,
			"second_score":	1794
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1241,
			"primary_score":	999952,
			"second_score":	1792
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1243,
			"primary_score":	999952,
			"second_score":	1791
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1244,
			"primary_score":	999952,
			"second_score":	1743
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1245,
			"primary_score":	999952,
			"second_score":	1721
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1264,
			"primary_score":	999692,
			"second_score":	136922
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1266,
			"primary_score":	999692,
			"second_score":	136921
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1267,
			"primary_score":	999692,
			"second_score":	136914
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1273,
			"primary_score":	999692,
			"second_score":	136828
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1274,
			"primary_score":	999692,
			"second_score":	136827
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1275,
			"primary_score":	999692,
			"second_score":	136826
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1276,
			"primary_score":	999692,
			"second_score":	136825
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1277,
			"primary_score":	999692,
			"second_score":	136824
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1279,
			"primary_score":	999692,
			"second_score":	136823
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1281,
			"primary_score":	999692,
			"second_score":	136819
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1285,
			"primary_score":	999692,
			"second_score":	136818
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1286,
			"primary_score":	999862,
			"second_score":	3481
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1287,
			"primary_score":	999862,
			"second_score":	3480
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1310,
			"primary_score":	999862,
			"second_score":	3477
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1311,
			"primary_score":	999862,
			"second_score":	3476
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1312,
			"primary_score":	999862,
			"second_score":	3475
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1320,
			"primary_score":	999862,
			"second_score":	3474
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1321,
			"primary_score":	999862,
			"second_score":	3464
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1322,
			"primary_score":	999862,
			"second_score":	3463
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1327,
			"primary_score":	999862,
			"second_score":	3462
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1332,
			"primary_score":	999866,
			"second_score":	3461
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1333,
			"primary_score":	999866,
			"second_score":	3460
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1356,
			"primary_score":	999862,
			"second_score":	3459
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1358,
			"primary_score":	999862,
			"second_score":	3458
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1362,
			"primary_score":	999692,
			"second_score":	136817
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1363,
			"primary_score":	999692,
			"second_score":	136813
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1421,
			"primary_score":	999700,
			"second_score":	2231
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1427,
			"primary_score":	999700,
			"second_score":	2230
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1428,
			"primary_score":	999700,
			"second_score":	2229
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1430,
			"primary_score":	999700,
			"second_score":	2228
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1433,
			"primary_score":	999700,
			"second_score":	2227
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1435,
			"primary_score":	999700,
			"second_score":	2226
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1446,
			"primary_score":	999700,
			"second_score":	2225
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1917,
			"primary_score":	999692,
			"second_score":	138203
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1918,
			"primary_score":	999692,
			"second_score":	138202
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1919,
			"primary_score":	999692,
			"second_score":	138201
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1921,
			"primary_score":	999692,
			"second_score":	138200
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1923,
			"primary_score":	999692,
			"second_score":	138191
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1933,
			"primary_score":	999692,
			"second_score":	138190
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1934,
			"primary_score":	999692,
			"second_score":	137932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1941,
			"primary_score":	999692,
			"second_score":	137894
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1942,
			"primary_score":	999692,
			"second_score":	137875
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1944,
			"primary_score":	999692,
			"second_score":	137874
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1945,
			"primary_score":	999692,
			"second_score":	137848
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1946,
			"primary_score":	999692,
			"second_score":	137844
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1952,
			"primary_score":	999921,
			"second_score":	3496
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1953,
			"primary_score":	999921,
			"second_score":	3495
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1954,
			"primary_score":	999921,
			"second_score":	3494
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1956,
			"primary_score":	999921,
			"second_score":	3493
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1957,
			"primary_score":	999921,
			"second_score":	3409
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1959,
			"primary_score":	999921,
			"second_score":	3374
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1960,
			"primary_score":	999921,
			"second_score":	3372
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1962,
			"primary_score":	999921,
			"second_score":	3371
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1967,
			"primary_score":	999921,
			"second_score":	3370
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1968,
			"primary_score":	999921,
			"second_score":	3369
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1969,
			"primary_score":	999921,
			"second_score":	3368
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1971,
			"primary_score":	999921,
			"second_score":	3367
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1972,
			"primary_score":	999921,
			"second_score":	3366
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1975,
			"primary_score":	999921,
			"second_score":	3365
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1976,
			"primary_score":	999921,
			"second_score":	3361
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1978,
			"primary_score":	999921,
			"second_score":	3160
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1980,
			"primary_score":	999921,
			"second_score":	3157
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1981,
			"primary_score":	999921,
			"second_score":	3156
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1982,
			"primary_score":	999921,
			"second_score":	3155
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1996,
			"primary_score":	999921,
			"second_score":	3154
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1997,
			"primary_score":	999921,
			"second_score":	3128
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2047,
			"primary_score":	999692,
			"second_score":	138199
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2048,
			"primary_score":	999692,
			"second_score":	138198
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2049,
			"primary_score":	999692,
			"second_score":	138197
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2050,
			"primary_score":	999692,
			"second_score":	138196
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2052,
			"primary_score":	999692,
			"second_score":	138195
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2059,
			"primary_score":	999692,
			"second_score":	138194
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2063,
			"primary_score":	999692,
			"second_score":	138193
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2083,
			"primary_score":	999692,
			"second_score":	138192
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2098,
			"primary_score":	999851,
			"second_score":	6001
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2099,
			"primary_score":	999851,
			"second_score":	6000
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2100,
			"primary_score":	999851,
			"second_score":	5999
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2101,
			"primary_score":	999851,
			"second_score":	5998
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2102,
			"primary_score":	999851,
			"second_score":	5997
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2104,
			"primary_score":	999851,
			"second_score":	5996
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2105,
			"primary_score":	999851,
			"second_score":	5995
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2147,
			"primary_score":	999851,
			"second_score":	5994
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2172,
			"primary_score":	999859,
			"second_score":	9017
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2173,
			"primary_score":	999859,
			"second_score":	9016
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2175,
			"primary_score":	999859,
			"second_score":	9015
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2184,
			"primary_score":	999859,
			"second_score":	9014
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2185,
			"primary_score":	999859,
			"second_score":	9012
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2187,
			"primary_score":	999859,
			"second_score":	9002
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2188,
			"primary_score":	999859,
			"second_score":	9001
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2189,
			"primary_score":	999859,
			"second_score":	9000
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2190,
			"primary_score":	999859,
			"second_score":	8999
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2191,
			"primary_score":	999859,
			"second_score":	8998
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2192,
			"primary_score":	999859,
			"second_score":	8997
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2194,
			"primary_score":	999859,
			"second_score":	8996
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2195,
			"primary_score":	999859,
			"second_score":	8991
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2205,
			"primary_score":	999859,
			"second_score":	8982
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2206,
			"primary_score":	999859,
			"second_score":	8981
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2208,
			"primary_score":	999859,
			"second_score":	8630
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2213,
			"primary_score":	999859,
			"second_score":	8629
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2214,
			"primary_score":	999859,
			"second_score":	8627
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2215,
			"primary_score":	999859,
			"second_score":	8626
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2216,
			"primary_score":	999859,
			"second_score":	8621
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2315,
			"primary_score":	999692,
			"second_score":	136033
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2319,
			"primary_score":	999692,
			"second_score":	136032
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2414,
			"primary_score":	999692,
			"second_score":	137098
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2416,
			"primary_score":	999692,
			"second_score":	137097
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2423,
			"primary_score":	999692,
			"second_score":	137096
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2424,
			"primary_score":	999692,
			"second_score":	137086
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2425,
			"primary_score":	999692,
			"second_score":	137085
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2426,
			"primary_score":	999692,
			"second_score":	137084
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2427,
			"primary_score":	999692,
			"second_score":	137025
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2428,
			"primary_score":	999692,
			"second_score":	137022
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2430,
			"primary_score":	999849,
			"second_score":	3005
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2431,
			"primary_score":	999849,
			"second_score":	3004
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2435,
			"primary_score":	999692,
			"second_score":	137020
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2436,
			"primary_score":	999692,
			"second_score":	137018
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2437,
			"primary_score":	999692,
			"second_score":	137017
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2438,
			"primary_score":	999692,
			"second_score":	137012
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2440,
			"primary_score":	999692,
			"second_score":	137011
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2441,
			"primary_score":	999692,
			"second_score":	136989
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2447,
			"primary_score":	999692,
			"second_score":	137251
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2448,
			"primary_score":	999692,
			"second_score":	137250
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2449,
			"primary_score":	999692,
			"second_score":	137249
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2450,
			"primary_score":	999692,
			"second_score":	137248
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2451,
			"primary_score":	999692,
			"second_score":	137247
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2453,
			"primary_score":	999692,
			"second_score":	137246
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2454,
			"primary_score":	999692,
			"second_score":	137242
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2456,
			"primary_score":	999692,
			"second_score":	137241
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2471,
			"primary_score":	999692,
			"second_score":	137240
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2472,
			"primary_score":	999692,
			"second_score":	137239
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2485,
			"primary_score":	999692,
			"second_score":	137238
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2488,
			"primary_score":	999909,
			"second_score":	7920
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2491,
			"primary_score":	999692,
			"second_score":	137237
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2493,
			"primary_score":	999692,
			"second_score":	137234
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2494,
			"primary_score":	999692,
			"second_score":	137233
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2495,
			"primary_score":	999692,
			"second_score":	138907
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2496,
			"primary_score":	999989,
			"second_score":	7638
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2499,
			"primary_score":	999692,
			"second_score":	137232
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2512,
			"primary_score":	999692,
			"second_score":	137231
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2513,
			"primary_score":	999692,
			"second_score":	137230
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2516,
			"primary_score":	999692,
			"second_score":	137192
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2530,
			"primary_score":	999692,
			"second_score":	137191
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2532,
			"primary_score":	999692,
			"second_score":	137181
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2533,
			"primary_score":	999692,
			"second_score":	137180
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2534,
			"primary_score":	999692,
			"second_score":	137179
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2539,
			"primary_score":	999692,
			"second_score":	138893
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2540,
			"primary_score":	999692,
			"second_score":	138892
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2542,
			"primary_score":	999909,
			"second_score":	7903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2545,
			"primary_score":	999692,
			"second_score":	137178
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2546,
			"primary_score":	999692,
			"second_score":	137177
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2547,
			"primary_score":	999692,
			"second_score":	137173
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2548,
			"primary_score":	999692,
			"second_score":	137172
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2601,
			"primary_score":	999692,
			"second_score":	136271
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2602,
			"primary_score":	999692,
			"second_score":	136270
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2604,
			"primary_score":	999692,
			"second_score":	136269
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2612,
			"primary_score":	999692,
			"second_score":	136268
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2618,
			"primary_score":	999692,
			"second_score":	136266
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2619,
			"primary_score":	999692,
			"second_score":	136262
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2622,
			"primary_score":	999692,
			"second_score":	136258
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2623,
			"primary_score":	999692,
			"second_score":	136256
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2628,
			"primary_score":	999692,
			"second_score":	136255
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2630,
			"primary_score":	999692,
			"second_score":	136245
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2632,
			"primary_score":	999692,
			"second_score":	136244
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2633,
			"primary_score":	999692,
			"second_score":	136243
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2635,
			"primary_score":	999692,
			"second_score":	136227
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2639,
			"primary_score":	999692,
			"second_score":	121588
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2640,
			"primary_score":	999692,
			"second_score":	121587
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2643,
			"primary_score":	999692,
			"second_score":	136226
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2649,
			"primary_score":	999995,
			"second_score":	10709
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2651,
			"primary_score":	999995,
			"second_score":	10708
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2652,
			"primary_score":	999995,
			"second_score":	10597
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2653,
			"primary_score":	999995,
			"second_score":	10596
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2659,
			"primary_score":	999995,
			"second_score":	6451
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2665,
			"primary_score":	999995,
			"second_score":	6111
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2671,
			"primary_score":	999995,
			"second_score":	6537
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2672,
			"primary_score":	999995,
			"second_score":	6535
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2673,
			"primary_score":	999995,
			"second_score":	6525
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2674,
			"primary_score":	999995,
			"second_score":	6524
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2676,
			"primary_score":	999995,
			"second_score":	6523
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2677,
			"primary_score":	999995,
			"second_score":	6522
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2678,
			"primary_score":	999995,
			"second_score":	6521
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2681,
			"primary_score":	999995,
			"second_score":	6520
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2682,
			"primary_score":	999995,
			"second_score":	6513
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2683,
			"primary_score":	999995,
			"second_score":	6487
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2684,
			"primary_score":	999995,
			"second_score":	6483
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2686,
			"primary_score":	999995,
			"second_score":	6453
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2692,
			"primary_score":	999995,
			"second_score":	1804
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2693,
			"primary_score":	999995,
			"second_score":	1803
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2694,
			"primary_score":	999995,
			"second_score":	1719
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2695,
			"primary_score":	999995,
			"second_score":	1718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2696,
			"primary_score":	999995,
			"second_score":	1717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2701,
			"primary_score":	999995,
			"second_score":	1715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2707,
			"primary_score":	999995,
			"second_score":	10711
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2708,
			"primary_score":	999995,
			"second_score":	10595
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2714,
			"primary_score":	999995,
			"second_score":	6011
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2715,
			"primary_score":	999995,
			"second_score":	6010
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2716,
			"primary_score":	999995,
			"second_score":	6009
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2718,
			"primary_score":	999995,
			"second_score":	6008
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2720,
			"primary_score":	999995,
			"second_score":	6003
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2722,
			"primary_score":	999995,
			"second_score":	6002
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2723,
			"primary_score":	999995,
			"second_score":	5993
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2728,
			"primary_score":	999995,
			"second_score":	5992
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2729,
			"primary_score":	999995,
			"second_score":	5990
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2730,
			"primary_score":	999995,
			"second_score":	5989
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2733,
			"primary_score":	999995,
			"second_score":	5988
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2734,
			"primary_score":	999995,
			"second_score":	5978
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2735,
			"primary_score":	999995,
			"second_score":	5977
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2736,
			"primary_score":	999995,
			"second_score":	5976
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2737,
			"primary_score":	999995,
			"second_score":	5738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2738,
			"primary_score":	999995,
			"second_score":	5737
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2739,
			"primary_score":	999995,
			"second_score":	5543
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2740,
			"primary_score":	999995,
			"second_score":	5542
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2742,
			"primary_score":	999995,
			"second_score":	5541
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2748,
			"primary_score":	999995,
			"second_score":	2005
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2749,
			"primary_score":	999995,
			"second_score":	2003
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2750,
			"primary_score":	999995,
			"second_score":	1993
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2752,
			"primary_score":	999995,
			"second_score":	1992
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2753,
			"primary_score":	999995,
			"second_score":	1991
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2754,
			"primary_score":	999995,
			"second_score":	1990
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2757,
			"primary_score":	999995,
			"second_score":	1989
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2758,
			"primary_score":	999995,
			"second_score":	1985
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2760,
			"primary_score":	999995,
			"second_score":	1955
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4935,
			"primary_score":	999919,
			"second_score":	3921
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4936,
			"primary_score":	999919,
			"second_score":	3920
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4938,
			"primary_score":	999919,
			"second_score":	3919
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4940,
			"primary_score":	999919,
			"second_score":	3915
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4941,
			"primary_score":	999920,
			"second_score":	3914
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4982,
			"primary_score":	999919,
			"second_score":	3913
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4992,
			"primary_score":	999919,
			"second_score":	3910
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4993,
			"primary_score":	999919,
			"second_score":	3906
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4994,
			"primary_score":	999919,
			"second_score":	3905
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4995,
			"primary_score":	999919,
			"second_score":	3904
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4996,
			"primary_score":	999919,
			"second_score":	3902
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4997,
			"primary_score":	999919,
			"second_score":	3898
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4998,
			"primary_score":	999919,
			"second_score":	3810
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	4999,
			"primary_score":	999919,
			"second_score":	3809
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5000,
			"primary_score":	999919,
			"second_score":	3806
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5002,
			"primary_score":	999919,
			"second_score":	3803
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5004,
			"primary_score":	999919,
			"second_score":	3798
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5023,
			"primary_score":	999919,
			"second_score":	2903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5029,
			"primary_score":	999919,
			"second_score":	2825
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5030,
			"primary_score":	999919,
			"second_score":	2824
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5032,
			"primary_score":	999919,
			"second_score":	2823
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5033,
			"primary_score":	999919,
			"second_score":	2819
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5035,
			"primary_score":	999919,
			"second_score":	2818
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5041,
			"primary_score":	999860,
			"second_score":	8593
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5042,
			"primary_score":	999860,
			"second_score":	8592
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5044,
			"primary_score":	999860,
			"second_score":	8591
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5045,
			"primary_score":	999860,
			"second_score":	8589
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5046,
			"primary_score":	999860,
			"second_score":	8579
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5047,
			"primary_score":	999860,
			"second_score":	8578
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5048,
			"primary_score":	999860,
			"second_score":	8577
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5049,
			"primary_score":	999860,
			"second_score":	8575
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5050,
			"primary_score":	999860,
			"second_score":	8571
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5052,
			"primary_score":	999860,
			"second_score":	8570
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5058,
			"primary_score":	999860,
			"second_score":	7787
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5060,
			"primary_score":	999860,
			"second_score":	7786
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5061,
			"primary_score":	999860,
			"second_score":	7738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5063,
			"primary_score":	999860,
			"second_score":	7730
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5064,
			"primary_score":	999860,
			"second_score":	7728
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5070,
			"primary_score":	999692,
			"second_score":	139165
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5072,
			"primary_score":	999692,
			"second_score":	139164
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5085,
			"primary_score":	999692,
			"second_score":	139163
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5086,
			"primary_score":	999937,
			"second_score":	8205
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5088,
			"primary_score":	999937,
			"second_score":	8066
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5089,
			"primary_score":	999938,
			"second_score":	8045
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5090,
			"primary_score":	999938,
			"second_score":	8044
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5091,
			"primary_score":	999938,
			"second_score":	8025
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5097,
			"primary_score":	999692,
			"second_score":	139136
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5100,
			"primary_score":	999692,
			"second_score":	139135
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5105,
			"primary_score":	999692,
			"second_score":	139134
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5113,
			"primary_score":	999692,
			"second_score":	139166
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5115,
			"primary_score":	999692,
			"second_score":	139133
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5116,
			"primary_score":	999692,
			"second_score":	139132
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5117,
			"primary_score":	999692,
			"second_score":	139106
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5118,
			"primary_score":	999692,
			"second_score":	139105
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5119,
			"primary_score":	999692,
			"second_score":	139104
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5120,
			"primary_score":	999692,
			"second_score":	139070
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5121,
			"primary_score":	999692,
			"second_score":	139067
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5129,
			"primary_score":	999692,
			"second_score":	139183
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5130,
			"primary_score":	999692,
			"second_score":	139182
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5131,
			"primary_score":	999692,
			"second_score":	139181
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5132,
			"primary_score":	999692,
			"second_score":	139180
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5133,
			"primary_score":	999692,
			"second_score":	139179
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5135,
			"primary_score":	999692,
			"second_score":	139178
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5182,
			"primary_score":	999692,
			"second_score":	139177
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5203,
			"primary_score":	999692,
			"second_score":	139176
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5205,
			"primary_score":	999692,
			"second_score":	139167
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5206,
			"primary_score":	999692,
			"second_score":	139066
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6095,
			"primary_score":	999692,
			"second_score":	131752
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6096,
			"primary_score":	999692,
			"second_score":	131750
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6098,
			"primary_score":	999692,
			"second_score":	131749
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6100,
			"primary_score":	999692,
			"second_score":	131739
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6101,
			"primary_score":	999692,
			"second_score":	131738
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6102,
			"primary_score":	999692,
			"second_score":	131734
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6103,
			"primary_score":	999692,
			"second_score":	131733
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6104,
			"primary_score":	999692,
			"second_score":	131732
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6106,
			"primary_score":	999692,
			"second_score":	131727
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6112,
			"primary_score":	999692,
			"second_score":	128925
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6114,
			"primary_score":	999692,
			"second_score":	128915
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6116,
			"primary_score":	999692,
			"second_score":	128913
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6117,
			"primary_score":	999692,
			"second_score":	128912
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6118,
			"primary_score":	999692,
			"second_score":	128911
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6119,
			"primary_score":	999692,
			"second_score":	128909
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6120,
			"primary_score":	999692,
			"second_score":	128905
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6122,
			"primary_score":	999692,
			"second_score":	128904
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6123,
			"primary_score":	999692,
			"second_score":	128899
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6125,
			"primary_score":	999692,
			"second_score":	128897
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6126,
			"primary_score":	999692,
			"second_score":	128887
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6127,
			"primary_score":	999692,
			"second_score":	128886
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6128,
			"primary_score":	999692,
			"second_score":	128885
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6134,
			"primary_score":	999692,
			"second_score":	128495
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6136,
			"primary_score":	999692,
			"second_score":	128485
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6137,
			"primary_score":	999692,
			"second_score":	128484
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6138,
			"primary_score":	999692,
			"second_score":	128480
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6139,
			"primary_score":	999692,
			"second_score":	128382
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6141,
			"primary_score":	999692,
			"second_score":	128381
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6143,
			"primary_score":	999692,
			"second_score":	128379
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6145,
			"primary_score":	999692,
			"second_score":	128374
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6151,
			"primary_score":	999692,
			"second_score":	136498
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6153,
			"primary_score":	999692,
			"second_score":	136497
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6154,
			"primary_score":	999692,
			"second_score":	136496
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6167,
			"primary_score":	999692,
			"second_score":	137847
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6169,
			"primary_score":	999692,
			"second_score":	137846
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6170,
			"primary_score":	999692,
			"second_score":	137845
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6183,
			"primary_score":	999692,
			"second_score":	136987
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6185,
			"primary_score":	999692,
			"second_score":	136986
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6186,
			"primary_score":	999692,
			"second_score":	136985
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6199,
			"primary_score":	999692,
			"second_score":	136430
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6212,
			"primary_score":	999692,
			"second_score":	173223
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6214,
			"primary_score":	999692,
			"second_score":	173222
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6215,
			"primary_score":	999692,
			"second_score":	173198
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6216,
			"primary_score":	999692,
			"second_score":	173197
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6218,
			"primary_score":	999692,
			"second_score":	151903
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6220,
			"primary_score":	999744,
			"second_score":	4612
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6258,
			"primary_score":	999692,
			"second_score":	136362
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6260,
			"primary_score":	999692,
			"second_score":	136361
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6261,
			"primary_score":	999701,
			"second_score":	1474
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6262,
			"primary_score":	999701,
			"second_score":	1473
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6265,
			"primary_score":	999692,
			"second_score":	136360
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6267,
			"primary_score":	999692,
			"second_score":	136359
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6268,
			"primary_score":	999692,
			"second_score":	136336
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6277,
			"primary_score":	999701,
			"second_score":	1848
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6279,
			"primary_score":	999692,
			"second_score":	136518
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6282,
			"primary_score":	999692,
			"second_score":	136517
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6283,
			"primary_score":	999692,
			"second_score":	136516
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6292,
			"primary_score":	999692,
			"second_score":	136335
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6293,
			"primary_score":	999692,
			"second_score":	136332
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6294,
			"primary_score":	999692,
			"second_score":	136331
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6372,
			"primary_score":	999851,
			"second_score":	6007
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6375,
			"primary_score":	999851,
			"second_score":	6006
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6378,
			"primary_score":	999851,
			"second_score":	6005
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6382,
			"primary_score":	999851,
			"second_score":	6004
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6609,
			"primary_score":	999692,
			"second_score":	136406
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6617,
			"primary_score":	999692,
			"second_score":	136314
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6618,
			"primary_score":	999692,
			"second_score":	136313
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6623,
			"primary_score":	999692,
			"second_score":	136312
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6633,
			"primary_score":	999692,
			"second_score":	136316
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6634,
			"primary_score":	999692,
			"second_score":	136315
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	32,
			"primary_score":	999692,
			"second_score":	6287
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	33,
			"primary_score":	999692,
			"second_score":	115747
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	35,
			"primary_score":	999692,
			"second_score":	6286
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	60,
			"primary_score":	999692,
			"second_score":	115530
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	116261
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	116260
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	452,
			"primary_score":	999692,
			"second_score":	148856
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	453,
			"primary_score":	999692,
			"second_score":	148855
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	454,
			"primary_score":	999692,
			"second_score":	148854
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	460,
			"primary_score":	999692,
			"second_score":	148853
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	467,
			"primary_score":	999692,
			"second_score":	148852
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	468,
			"primary_score":	999692,
			"second_score":	148851
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	474,
			"primary_score":	999692,
			"second_score":	148850
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	479,
			"primary_score":	999692,
			"second_score":	148849
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	495,
			"primary_score":	999692,
			"second_score":	148784
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	498,
			"primary_score":	999692,
			"second_score":	148783
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	73,
			"primary_score":	999692,
			"second_score":	121640
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	71,
			"primary_score":	999692,
			"second_score":	121825
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	72,
			"primary_score":	999692,
			"second_score":	121823
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	73,
			"primary_score":	999692,
			"second_score":	121821
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	74,
			"primary_score":	999692,
			"second_score":	121819
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	177,
			"primary_score":	999692,
			"second_score":	121709
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	182,
			"primary_score":	999692,
			"second_score":	121827
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	184,
			"primary_score":	999692,
			"second_score":	121826
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	185,
			"primary_score":	999692,
			"second_score":	121818
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	602,
			"primary_score":	999692,
			"second_score":	125033
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	603,
			"primary_score":	999692,
			"second_score":	125032
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	604,
			"primary_score":	999692,
			"second_score":	125031
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	606,
			"primary_score":	999692,
			"second_score":	125030
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	611,
			"primary_score":	999692,
			"second_score":	125029
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	613,
			"primary_score":	999692,
			"second_score":	125028
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	629,
			"primary_score":	999692,
			"second_score":	125027
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	638,
			"primary_score":	999692,
			"second_score":	125026
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	82,
			"primary_score":	999692,
			"second_score":	121777
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	83,
			"primary_score":	999692,
			"second_score":	121775
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	85,
			"primary_score":	999692,
			"second_score":	121774
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	86,
			"primary_score":	999692,
			"second_score":	123812
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	87,
			"primary_score":	999692,
			"second_score":	121771
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	88,
			"primary_score":	999692,
			"second_score":	121745
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	91,
			"primary_score":	999692,
			"second_score":	125249
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	93,
			"primary_score":	999692,
			"second_score":	125248
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	94,
			"primary_score":	999692,
			"second_score":	125246
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	97,
			"primary_score":	999692,
			"second_score":	125244
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	103,
			"primary_score":	999692,
			"second_score":	122755
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	105,
			"primary_score":	999692,
			"second_score":	122754
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	113,
			"primary_score":	999692,
			"second_score":	122753
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	155,
			"primary_score":	999692,
			"second_score":	122752
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	199,
			"primary_score":	999692,
			"second_score":	116356
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	201,
			"primary_score":	999692,
			"second_score":	116355
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	202,
			"primary_score":	999692,
			"second_score":	116354
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	203,
			"primary_score":	999692,
			"second_score":	116353
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	204,
			"primary_score":	999692,
			"second_score":	116308
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	217,
			"primary_score":	999692,
			"second_score":	124954
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	222,
			"primary_score":	999692,
			"second_score":	151830
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	223,
			"primary_score":	999692,
			"second_score":	151828
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	245,
			"primary_score":	999692,
			"second_score":	135807
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	247,
			"primary_score":	999692,
			"second_score":	135806
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	250,
			"primary_score":	999692,
			"second_score":	135805
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	265,
			"primary_score":	999692,
			"second_score":	135804
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	267,
			"primary_score":	999692,
			"second_score":	135802
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	268,
			"primary_score":	999692,
			"second_score":	135801
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	269,
			"primary_score":	999692,
			"second_score":	135800
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	274,
			"primary_score":	999692,
			"second_score":	121839
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	280,
			"primary_score":	999692,
			"second_score":	121838
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	286,
			"primary_score":	999692,
			"second_score":	121649
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	293,
			"primary_score":	999692,
			"second_score":	121648
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	297,
			"primary_score":	999692,
			"second_score":	121647
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	305,
			"primary_score":	999692,
			"second_score":	125170
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	327,
			"primary_score":	999692,
			"second_score":	125169
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	328,
			"primary_score":	999692,
			"second_score":	125168
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	333,
			"primary_score":	999692,
			"second_score":	123823
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	334,
			"primary_score":	999692,
			"second_score":	123822
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	336,
			"primary_score":	999692,
			"second_score":	123821
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	337,
			"primary_score":	999692,
			"second_score":	121875
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	338,
			"primary_score":	999692,
			"second_score":	121874
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	339,
			"primary_score":	999692,
			"second_score":	121873
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	341,
			"primary_score":	999692,
			"second_score":	121840
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	367,
			"primary_score":	999692,
			"second_score":	125180
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	369,
			"primary_score":	999692,
			"second_score":	125179
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	371,
			"primary_score":	999692,
			"second_score":	125174
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	372,
			"primary_score":	999692,
			"second_score":	125173
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	373,
			"primary_score":	999692,
			"second_score":	125172
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	107,
			"primary_score":	999692,
			"second_score":	116295
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	119,
			"primary_score":	999692,
			"second_score":	116279
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	121148
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	206,
			"primary_score":	999692,
			"second_score":	121147
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	121210
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	214,
			"primary_score":	999692,
			"second_score":	121204
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	121203
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	121202
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	217,
			"primary_score":	999692,
			"second_score":	121199
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	219,
			"primary_score":	999692,
			"second_score":	121137
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	223,
			"primary_score":	999692,
			"second_score":	121134
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	120281
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	246,
			"primary_score":	999692,
			"second_score":	120275
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	247,
			"primary_score":	999692,
			"second_score":	120272
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	248,
			"primary_score":	999692,
			"second_score":	116441
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	250,
			"primary_score":	999692,
			"second_score":	116439
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	116433
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	254,
			"primary_score":	999692,
			"second_score":	116432
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	261,
			"primary_score":	999692,
			"second_score":	116431
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	268,
			"primary_score":	999692,
			"second_score":	116430
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	269,
			"primary_score":	999692,
			"second_score":	116426
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	270,
			"primary_score":	999692,
			"second_score":	116421
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	271,
			"primary_score":	999692,
			"second_score":	116412
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	272,
			"primary_score":	999692,
			"second_score":	116403
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	274,
			"primary_score":	999692,
			"second_score":	116401
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	284,
			"primary_score":	999692,
			"second_score":	116395
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	288,
			"primary_score":	999692,
			"second_score":	116394
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	116377
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	290,
			"primary_score":	999692,
			"second_score":	116360
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	293,
			"primary_score":	999692,
			"second_score":	116357
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	295,
			"primary_score":	999692,
			"second_score":	116307
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	298,
			"primary_score":	999692,
			"second_score":	116304
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	302,
			"primary_score":	999692,
			"second_score":	116303
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	303,
			"primary_score":	999692,
			"second_score":	116287
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	306,
			"primary_score":	999692,
			"second_score":	116271
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	311,
			"primary_score":	999692,
			"second_score":	116270
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	313,
			"primary_score":	999692,
			"second_score":	116268
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	314,
			"primary_score":	999692,
			"second_score":	116262
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	315,
			"primary_score":	999692,
			"second_score":	115522
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	317,
			"primary_score":	999692,
			"second_score":	115520
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	322,
			"primary_score":	999692,
			"second_score":	115514
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	324,
			"primary_score":	999692,
			"second_score":	115445
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	325,
			"primary_score":	999692,
			"second_score":	115424
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	326,
			"primary_score":	999692,
			"second_score":	115420
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	327,
			"primary_score":	999692,
			"second_score":	115418
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	328,
			"primary_score":	999692,
			"second_score":	115416
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	329,
			"primary_score":	999692,
			"second_score":	115348
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	333,
			"primary_score":	999692,
			"second_score":	115347
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	335,
			"primary_score":	999692,
			"second_score":	115345
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	337,
			"primary_score":	999692,
			"second_score":	115340
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	397,
			"primary_score":	999692,
			"second_score":	126740
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	398,
			"primary_score":	999692,
			"second_score":	126739
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	407,
			"primary_score":	999692,
			"second_score":	126737
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	411,
			"primary_score":	999692,
			"second_score":	126736
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	412,
			"primary_score":	999692,
			"second_score":	126735
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	430,
			"primary_score":	999692,
			"second_score":	116557
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	431,
			"primary_score":	999692,
			"second_score":	116555
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	432,
			"primary_score":	999692,
			"second_score":	116553
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	434,
			"primary_score":	999692,
			"second_score":	116552
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	435,
			"primary_score":	999692,
			"second_score":	116551
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	436,
			"primary_score":	999692,
			"second_score":	116538
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	437,
			"primary_score":	999692,
			"second_score":	116504
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	440,
			"primary_score":	999692,
			"second_score":	117311
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	442,
			"primary_score":	999692,
			"second_score":	117310
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	443,
			"primary_score":	999692,
			"second_score":	117308
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	446,
			"primary_score":	999692,
			"second_score":	117306
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	456,
			"primary_score":	999692,
			"second_score":	14840
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	457,
			"primary_score":	999692,
			"second_score":	14838
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	458,
			"primary_score":	999692,
			"second_score":	14836
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	459,
			"primary_score":	999692,
			"second_score":	14834
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	460,
			"primary_score":	999692,
			"second_score":	18635
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	461,
			"primary_score":	999692,
			"second_score":	18633
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	494,
			"primary_score":	999876,
			"second_score":	560
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	495,
			"primary_score":	999876,
			"second_score":	559
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	496,
			"primary_score":	999876,
			"second_score":	558
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	497,
			"primary_score":	999876,
			"second_score":	557
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	499,
			"primary_score":	999876,
			"second_score":	556
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	501,
			"primary_score":	999876,
			"second_score":	555
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	582,
			"primary_score":	999876,
			"second_score":	554
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	683,
			"primary_score":	999876,
			"second_score":	553
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	701,
			"primary_score":	999876,
			"second_score":	561
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1032,
			"primary_score":	999851,
			"second_score":	645
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1033,
			"primary_score":	999851,
			"second_score":	644
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1034,
			"primary_score":	999851,
			"second_score":	643
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1035,
			"primary_score":	999851,
			"second_score":	642
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1036,
			"primary_score":	999851,
			"second_score":	641
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1037,
			"primary_score":	999851,
			"second_score":	640
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1038,
			"primary_score":	999851,
			"second_score":	639
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1039,
			"primary_score":	999851,
			"second_score":	638
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1040,
			"primary_score":	999851,
			"second_score":	637
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1041,
			"primary_score":	999851,
			"second_score":	636
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1042,
			"primary_score":	999851,
			"second_score":	635
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1043,
			"primary_score":	999851,
			"second_score":	634
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1045,
			"primary_score":	999851,
			"second_score":	633
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1046,
			"primary_score":	999851,
			"second_score":	632
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1047,
			"primary_score":	999851,
			"second_score":	631
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1048,
			"primary_score":	999851,
			"second_score":	630
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1066,
			"primary_score":	999851,
			"second_score":	629
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1067,
			"primary_score":	999851,
			"second_score":	618
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1070,
			"primary_score":	999851,
			"second_score":	617
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1155,
			"primary_score":	999692,
			"second_score":	123835
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1156,
			"primary_score":	999692,
			"second_score":	123834
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1157,
			"primary_score":	999692,
			"second_score":	123833
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1158,
			"primary_score":	999692,
			"second_score":	123832
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1159,
			"primary_score":	999692,
			"second_score":	123831
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1161,
			"primary_score":	999692,
			"second_score":	123830
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1169,
			"primary_score":	999692,
			"second_score":	123829
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1170,
			"primary_score":	999692,
			"second_score":	123828
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1172,
			"primary_score":	999692,
			"second_score":	123827
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1176,
			"primary_score":	999692,
			"second_score":	123826
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1177,
			"primary_score":	999692,
			"second_score":	123825
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1178,
			"primary_score":	999692,
			"second_score":	123824
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1179,
			"primary_score":	999692,
			"second_score":	121337
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1181,
			"primary_score":	999692,
			"second_score":	121336
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1182,
			"primary_score":	999692,
			"second_score":	121335
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1183,
			"primary_score":	999692,
			"second_score":	121334
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1184,
			"primary_score":	999692,
			"second_score":	121333
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1185,
			"primary_score":	999692,
			"second_score":	121332
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1187,
			"primary_score":	999692,
			"second_score":	121331
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1188,
			"primary_score":	999692,
			"second_score":	121330
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1189,
			"primary_score":	999692,
			"second_score":	121329
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1190,
			"primary_score":	999692,
			"second_score":	121328
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1193,
			"primary_score":	999692,
			"second_score":	121327
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1195,
			"primary_score":	999692,
			"second_score":	121326
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1197,
			"primary_score":	999692,
			"second_score":	120958
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1198,
			"primary_score":	999692,
			"second_score":	120957
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1199,
			"primary_score":	999692,
			"second_score":	120956
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1202,
			"primary_score":	999692,
			"second_score":	120955
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1210,
			"primary_score":	999692,
			"second_score":	120924
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1211,
			"primary_score":	999692,
			"second_score":	120923
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1212,
			"primary_score":	999692,
			"second_score":	120922
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1213,
			"primary_score":	999692,
			"second_score":	120921
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1214,
			"primary_score":	999692,
			"second_score":	120832
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1215,
			"primary_score":	999692,
			"second_score":	120813
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1216,
			"primary_score":	999692,
			"second_score":	120812
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1220,
			"primary_score":	999692,
			"second_score":	120811
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1223,
			"primary_score":	999692,
			"second_score":	120810
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1235,
			"primary_score":	999692,
			"second_score":	123837
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1237,
			"primary_score":	999692,
			"second_score":	123836
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1238,
			"primary_score":	999692,
			"second_score":	120809
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1242,
			"primary_score":	999692,
			"second_score":	120808
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1248,
			"primary_score":	999692,
			"second_score":	123838
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1510,
			"primary_score":	999692,
			"second_score":	105199
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1583,
			"primary_score":	999851,
			"second_score":	648
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1584,
			"primary_score":	999851,
			"second_score":	647
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1586,
			"primary_score":	999851,
			"second_score":	646
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1600,
			"primary_score":	999851,
			"second_score":	616
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	182,
			"primary_score":	999692,
			"second_score":	14755
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	183,
			"primary_score":	999692,
			"second_score":	14752
		}, {
			"file":	"Zend/zend_float.c",
			"line":	44,
			"primary_score":	999692,
			"second_score":	115344
		}, {
			"file":	"Zend/zend_float.c",
			"line":	45,
			"primary_score":	999692,
			"second_score":	115343
		}, {
			"file":	"Zend/zend_float.c",
			"line":	48,
			"primary_score":	999692,
			"second_score":	115341
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	35,
			"primary_score":	999692,
			"second_score":	3133
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	36,
			"primary_score":	999692,
			"second_score":	3132
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	37,
			"primary_score":	999692,
			"second_score":	3131
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	3134
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	132,
			"primary_score":	999692,
			"second_score":	117343
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	142,
			"primary_score":	999692,
			"second_score":	117342
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	147,
			"primary_score":	999692,
			"second_score":	117341
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	149,
			"primary_score":	999692,
			"second_score":	117340
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	150,
			"primary_score":	999692,
			"second_score":	120324
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	152,
			"primary_score":	999692,
			"second_score":	120323
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	153,
			"primary_score":	999692,
			"second_score":	120322
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	155,
			"primary_score":	999692,
			"second_score":	120321
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	156,
			"primary_score":	999692,
			"second_score":	120381
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	157,
			"primary_score":	999692,
			"second_score":	120320
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	158,
			"primary_score":	999692,
			"second_score":	120319
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	159,
			"primary_score":	999692,
			"second_score":	120318
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	176,
			"primary_score":	999692,
			"second_score":	120317
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	177,
			"primary_score":	999692,
			"second_score":	120316
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	178,
			"primary_score":	999692,
			"second_score":	120315
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	179,
			"primary_score":	999692,
			"second_score":	120314
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	181,
			"primary_score":	999692,
			"second_score":	120313
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	183,
			"primary_score":	999692,
			"second_score":	120312
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	184,
			"primary_score":	999692,
			"second_score":	120311
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	186,
			"primary_score":	999692,
			"second_score":	120310
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	187,
			"primary_score":	999692,
			"second_score":	120309
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	188,
			"primary_score":	999692,
			"second_score":	120308
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	116549
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	253,
			"primary_score":	999692,
			"second_score":	116548
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	264,
			"primary_score":	999692,
			"second_score":	116547
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	265,
			"primary_score":	999692,
			"second_score":	116546
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	266,
			"primary_score":	999692,
			"second_score":	116540
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	653,
			"primary_score":	999692,
			"second_score":	115153
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	655,
			"primary_score":	999692,
			"second_score":	115152
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	728,
			"primary_score":	999692,
			"second_score":	115151
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	182,
			"primary_score":	999692,
			"second_score":	117305
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	183,
			"primary_score":	999692,
			"second_score":	117344
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	189,
			"primary_score":	999692,
			"second_score":	116545
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	190,
			"primary_score":	999692,
			"second_score":	116544
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	191,
			"primary_score":	999692,
			"second_score":	116543
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	192,
			"primary_score":	999692,
			"second_score":	116542
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	193,
			"primary_score":	999692,
			"second_score":	116541
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	150,
			"primary_score":	999692,
			"second_score":	157976
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	152,
			"primary_score":	999692,
			"second_score":	157975
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	154,
			"primary_score":	999692,
			"second_score":	157974
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	158,
			"primary_score":	999692,
			"second_score":	157973
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	161,
			"primary_score":	999692,
			"second_score":	157972
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	164,
			"primary_score":	999692,
			"second_score":	157971
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	165,
			"primary_score":	999692,
			"second_score":	157970
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	166,
			"primary_score":	999692,
			"second_score":	157969
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	167,
			"primary_score":	999692,
			"second_score":	157968
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	168,
			"primary_score":	999692,
			"second_score":	157967
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	169,
			"primary_score":	999692,
			"second_score":	157966
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	157965
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	157964
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	157963
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	173,
			"primary_score":	999692,
			"second_score":	157962
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	157961
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	175,
			"primary_score":	999692,
			"second_score":	157960
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	197,
			"primary_score":	999692,
			"second_score":	135994
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	198,
			"primary_score":	999692,
			"second_score":	135993
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	199,
			"primary_score":	999692,
			"second_score":	135992
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	135991
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	135990
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	210,
			"primary_score":	999692,
			"second_score":	145680
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	212,
			"primary_score":	999692,
			"second_score":	135987
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	135901
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	135900
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	135899
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	217,
			"primary_score":	999692,
			"second_score":	135898
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	220,
			"primary_score":	999692,
			"second_score":	135896
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	233,
			"primary_score":	999692,
			"second_score":	19509
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	240,
			"primary_score":	999692,
			"second_score":	149002
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	243,
			"primary_score":	999692,
			"second_score":	145475
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	244,
			"primary_score":	999692,
			"second_score":	152041
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	245,
			"primary_score":	999692,
			"second_score":	151937
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	248,
			"primary_score":	999692,
			"second_score":	151936
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	250,
			"primary_score":	999692,
			"second_score":	145474
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	145370
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	254,
			"primary_score":	999692,
			"second_score":	145369
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	255,
			"primary_score":	999692,
			"second_score":	145368
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	257,
			"primary_score":	999692,
			"second_score":	145367
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	258,
			"primary_score":	999692,
			"second_score":	146496
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	259,
			"primary_score":	999692,
			"second_score":	145361
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	260,
			"primary_score":	999692,
			"second_score":	148978
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	261,
			"primary_score":	999692,
			"second_score":	145356
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	262,
			"primary_score":	999692,
			"second_score":	145355
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	265,
			"primary_score":	999692,
			"second_score":	145354
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	266,
			"primary_score":	999692,
			"second_score":	148795
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	267,
			"primary_score":	999692,
			"second_score":	145343
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	268,
			"primary_score":	999692,
			"second_score":	145342
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	270,
			"primary_score":	999692,
			"second_score":	145340
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	271,
			"primary_score":	999692,
			"second_score":	156030
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	272,
			"primary_score":	999692,
			"second_score":	145337
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	363,
			"primary_score":	999692,
			"second_score":	149405
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	364,
			"primary_score":	999692,
			"second_score":	149404
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	366,
			"primary_score":	999692,
			"second_score":	149403
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	367,
			"primary_score":	999692,
			"second_score":	151106
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	369,
			"primary_score":	999692,
			"second_score":	149400
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	372,
			"primary_score":	999692,
			"second_score":	149399
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	374,
			"primary_score":	999692,
			"second_score":	149398
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	375,
			"primary_score":	999692,
			"second_score":	149397
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	376,
			"primary_score":	999692,
			"second_score":	129432
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	401,
			"primary_score":	999692,
			"second_score":	129431
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	403,
			"primary_score":	999692,
			"second_score":	149396
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	404,
			"primary_score":	999692,
			"second_score":	149292
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	407,
			"primary_score":	999692,
			"second_score":	149291
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	408,
			"primary_score":	999692,
			"second_score":	149290
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	409,
			"primary_score":	999692,
			"second_score":	149289
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	410,
			"primary_score":	999692,
			"second_score":	149288
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	411,
			"primary_score":	999692,
			"second_score":	149260
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	415,
			"primary_score":	999692,
			"second_score":	149259
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	417,
			"primary_score":	999692,
			"second_score":	149255
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	418,
			"primary_score":	999692,
			"second_score":	149253
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	419,
			"primary_score":	999692,
			"second_score":	150837
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	420,
			"primary_score":	999692,
			"second_score":	149244
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	422,
			"primary_score":	999692,
			"second_score":	149242
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	423,
			"primary_score":	999692,
			"second_score":	149241
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	425,
			"primary_score":	999692,
			"second_score":	149240
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	426,
			"primary_score":	999692,
			"second_score":	149239
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	427,
			"primary_score":	999692,
			"second_score":	149237
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	433,
			"primary_score":	999692,
			"second_score":	156029
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	435,
			"primary_score":	999692,
			"second_score":	156028
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	437,
			"primary_score":	999692,
			"second_score":	156027
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	438,
			"primary_score":	999692,
			"second_score":	156026
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	439,
			"primary_score":	999692,
			"second_score":	155885
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	440,
			"primary_score":	999692,
			"second_score":	155884
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	441,
			"primary_score":	999692,
			"second_score":	155882
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	442,
			"primary_score":	999692,
			"second_score":	155881
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	443,
			"primary_score":	999692,
			"second_score":	155880
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	444,
			"primary_score":	999692,
			"second_score":	155879
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	445,
			"primary_score":	999692,
			"second_score":	155632
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	446,
			"primary_score":	999692,
			"second_score":	155630
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	455,
			"primary_score":	999692,
			"second_score":	155878
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	456,
			"primary_score":	999692,
			"second_score":	155877
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	458,
			"primary_score":	999692,
			"second_score":	155876
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	459,
			"primary_score":	999692,
			"second_score":	155875
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	463,
			"primary_score":	999692,
			"second_score":	155874
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	464,
			"primary_score":	999692,
			"second_score":	155873
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	465,
			"primary_score":	999692,
			"second_score":	155872
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	466,
			"primary_score":	999692,
			"second_score":	155640
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	467,
			"primary_score":	999692,
			"second_score":	155651
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	468,
			"primary_score":	999692,
			"second_score":	155635
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	469,
			"primary_score":	999692,
			"second_score":	155634
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	471,
			"primary_score":	999692,
			"second_score":	155633
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	482,
			"primary_score":	999692,
			"second_score":	48227
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	496,
			"primary_score":	999692,
			"second_score":	48255
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	499,
			"primary_score":	999692,
			"second_score":	52582
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	526,
			"primary_score":	999692,
			"second_score":	48260
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	534,
			"primary_score":	999692,
			"second_score":	3127
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	536,
			"primary_score":	999692,
			"second_score":	3126
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	538,
			"primary_score":	999692,
			"second_score":	3125
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	540,
			"primary_score":	999692,
			"second_score":	3124
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	541,
			"primary_score":	999692,
			"second_score":	3123
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	542,
			"primary_score":	999692,
			"second_score":	3116
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	543,
			"primary_score":	999692,
			"second_score":	3115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	544,
			"primary_score":	999692,
			"second_score":	3114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	545,
			"primary_score":	999692,
			"second_score":	3251
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	547,
			"primary_score":	999692,
			"second_score":	3113
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	548,
			"primary_score":	999692,
			"second_score":	3112
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	550,
			"primary_score":	999692,
			"second_score":	3111
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	552,
			"primary_score":	999692,
			"second_score":	3110
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	553,
			"primary_score":	999692,
			"second_score":	3109
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	556,
			"primary_score":	999692,
			"second_score":	3108
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	599,
			"primary_score":	999692,
			"second_score":	3595
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	601,
			"primary_score":	999692,
			"second_score":	3594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	602,
			"primary_score":	999692,
			"second_score":	3592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	603,
			"primary_score":	999692,
			"second_score":	3908
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	605,
			"primary_score":	999692,
			"second_score":	3591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	607,
			"primary_score":	999692,
			"second_score":	3590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	608,
			"primary_score":	999692,
			"second_score":	3589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	610,
			"primary_score":	999692,
			"second_score":	3588
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	611,
			"primary_score":	999692,
			"second_score":	53776
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	616,
			"primary_score":	999692,
			"second_score":	3587
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	617,
			"primary_score":	999692,
			"second_score":	53718
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	620,
			"primary_score":	999692,
			"second_score":	3586
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	622,
			"primary_score":	999692,
			"second_score":	3585
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	623,
			"primary_score":	999692,
			"second_score":	3584
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	625,
			"primary_score":	999692,
			"second_score":	51132
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	627,
			"primary_score":	999692,
			"second_score":	3583
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	628,
			"primary_score":	999692,
			"second_score":	3582
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	630,
			"primary_score":	999692,
			"second_score":	3581
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	631,
			"primary_score":	999692,
			"second_score":	3580
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	633,
			"primary_score":	999692,
			"second_score":	3578
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	634,
			"primary_score":	999692,
			"second_score":	51125
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	636,
			"primary_score":	999692,
			"second_score":	3577
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	637,
			"primary_score":	999692,
			"second_score":	3576
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	639,
			"primary_score":	999692,
			"second_score":	3575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	640,
			"primary_score":	999692,
			"second_score":	3574
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	642,
			"primary_score":	999692,
			"second_score":	3573
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	665,
			"primary_score":	999692,
			"second_score":	105168
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	667,
			"primary_score":	999692,
			"second_score":	105167
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	669,
			"primary_score":	999692,
			"second_score":	105166
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	670,
			"primary_score":	999692,
			"second_score":	105165
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	671,
			"primary_score":	999692,
			"second_score":	51144
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	672,
			"primary_score":	999692,
			"second_score":	48176
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	675,
			"primary_score":	999692,
			"second_score":	48175
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	676,
			"primary_score":	999692,
			"second_score":	48174
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	679,
			"primary_score":	999692,
			"second_score":	48173
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	693,
			"primary_score":	999692,
			"second_score":	121039
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	695,
			"primary_score":	999692,
			"second_score":	121038
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	697,
			"primary_score":	999692,
			"second_score":	121037
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	698,
			"primary_score":	999692,
			"second_score":	121035
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	699,
			"primary_score":	999692,
			"second_score":	121034
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	711,
			"primary_score":	999692,
			"second_score":	121033
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	717,
			"primary_score":	999692,
			"second_score":	6008
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	719,
			"primary_score":	999692,
			"second_score":	6007
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	721,
			"primary_score":	999692,
			"second_score":	6006
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	722,
			"primary_score":	999692,
			"second_score":	6004
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	723,
			"primary_score":	999692,
			"second_score":	6003
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	724,
			"primary_score":	999692,
			"second_score":	3559
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	726,
			"primary_score":	999692,
			"second_score":	3556
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	727,
			"primary_score":	999692,
			"second_score":	3596
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	729,
			"primary_score":	999692,
			"second_score":	3555
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	731,
			"primary_score":	999692,
			"second_score":	3554
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	735,
			"primary_score":	999692,
			"second_score":	3553
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	775,
			"primary_score":	999692,
			"second_score":	116259
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	777,
			"primary_score":	999692,
			"second_score":	116258
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	779,
			"primary_score":	999692,
			"second_score":	121195
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	780,
			"primary_score":	999692,
			"second_score":	116255
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	781,
			"primary_score":	999692,
			"second_score":	116254
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	782,
			"primary_score":	999692,
			"second_score":	115531
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	784,
			"primary_score":	999692,
			"second_score":	115529
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	785,
			"primary_score":	999692,
			"second_score":	115528
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	786,
			"primary_score":	999692,
			"second_score":	115527
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	787,
			"primary_score":	999692,
			"second_score":	115768
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	789,
			"primary_score":	999692,
			"second_score":	115526
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	790,
			"primary_score":	999692,
			"second_score":	115525
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	793,
			"primary_score":	999692,
			"second_score":	121141
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	898,
			"primary_score":	999692,
			"second_score":	98499
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	899,
			"primary_score":	999692,
			"second_score":	98498
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	900,
			"primary_score":	999692,
			"second_score":	98497
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	902,
			"primary_score":	999692,
			"second_score":	98496
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	904,
			"primary_score":	999692,
			"second_score":	98495
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	905,
			"primary_score":	999692,
			"second_score":	98481
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	907,
			"primary_score":	999692,
			"second_score":	98480
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	908,
			"primary_score":	999692,
			"second_score":	98479
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	909,
			"primary_score":	999692,
			"second_score":	98476
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	911,
			"primary_score":	999692,
			"second_score":	98475
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	912,
			"primary_score":	999692,
			"second_score":	98474
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	914,
			"primary_score":	999692,
			"second_score":	98477
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	916,
			"primary_score":	999692,
			"second_score":	140829
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	948,
			"primary_score":	999692,
			"second_score":	164831
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	949,
			"primary_score":	999692,
			"second_score":	164830
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	950,
			"primary_score":	999692,
			"second_score":	164829
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	952,
			"primary_score":	999692,
			"second_score":	164828
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	954,
			"primary_score":	999692,
			"second_score":	164827
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	955,
			"primary_score":	999692,
			"second_score":	164818
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	957,
			"primary_score":	999692,
			"second_score":	164817
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	958,
			"primary_score":	999692,
			"second_score":	164816
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	959,
			"primary_score":	999692,
			"second_score":	164815
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	961,
			"primary_score":	999692,
			"second_score":	164814
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	997,
			"primary_score":	999692,
			"second_score":	115703
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	998,
			"primary_score":	999692,
			"second_score":	115702
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1000,
			"primary_score":	999692,
			"second_score":	115701
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1002,
			"primary_score":	999692,
			"second_score":	115700
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1004,
			"primary_score":	999692,
			"second_score":	115699
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1005,
			"primary_score":	999692,
			"second_score":	115698
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1006,
			"primary_score":	999692,
			"second_score":	115697
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1007,
			"primary_score":	999692,
			"second_score":	115696
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1008,
			"primary_score":	999692,
			"second_score":	115695
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1038,
			"primary_score":	999692,
			"second_score":	121139
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1040,
			"primary_score":	999692,
			"second_score":	121138
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1536,
			"primary_score":	999692,
			"second_score":	149408
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1538,
			"primary_score":	999692,
			"second_score":	149407
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	263,
			"primary_score":	999692,
			"second_score":	48226
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	266,
			"primary_score":	999692,
			"second_score":	48225
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	267,
			"primary_score":	999692,
			"second_score":	48224
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	268,
			"primary_score":	999692,
			"second_score":	48223
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	269,
			"primary_score":	999692,
			"second_score":	48222
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	270,
			"primary_score":	999692,
			"second_score":	48221
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	271,
			"primary_score":	999692,
			"second_score":	48220
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	272,
			"primary_score":	999692,
			"second_score":	48219
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	273,
			"primary_score":	999692,
			"second_score":	48218
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	274,
			"primary_score":	999692,
			"second_score":	48217
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	276,
			"primary_score":	999692,
			"second_score":	48216
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	278,
			"primary_score":	999692,
			"second_score":	49675
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	279,
			"primary_score":	999692,
			"second_score":	48430
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	280,
			"primary_score":	999692,
			"second_score":	48429
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	281,
			"primary_score":	999692,
			"second_score":	48428
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	282,
			"primary_score":	999692,
			"second_score":	48215
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	283,
			"primary_score":	999692,
			"second_score":	48214
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	287,
			"primary_score":	999692,
			"second_score":	48212
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	350,
			"primary_score":	999692,
			"second_score":	152615
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	351,
			"primary_score":	999692,
			"second_score":	152609
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	39,
			"primary_score":	999692,
			"second_score":	3558
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	40,
			"primary_score":	999692,
			"second_score":	3598
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	42,
			"primary_score":	999692,
			"second_score":	3557
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	3237
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	106,
			"primary_score":	999692,
			"second_score":	3210
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	107,
			"primary_score":	999692,
			"second_score":	3209
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	121,
			"primary_score":	999692,
			"second_score":	115143
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	127,
			"primary_score":	999692,
			"second_score":	115142
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	226,
			"primary_score":	999692,
			"second_score":	6009
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	384,
			"primary_score":	999692,
			"second_score":	98502
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	385,
			"primary_score":	999692,
			"second_score":	98501
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	387,
			"primary_score":	999692,
			"second_score":	98500
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	388,
			"primary_score":	999692,
			"second_score":	98473
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	392,
			"primary_score":	999692,
			"second_score":	98472
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	395,
			"primary_score":	999692,
			"second_score":	98471
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3151,
			"primary_score":	999692,
			"second_score":	136280
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3153,
			"primary_score":	999692,
			"second_score":	136279
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3155,
			"primary_score":	999692,
			"second_score":	136278
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3157,
			"primary_score":	999692,
			"second_score":	136277
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3214,
			"primary_score":	999692,
			"second_score":	145075
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3217,
			"primary_score":	999692,
			"second_score":	145074
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3220,
			"primary_score":	999692,
			"second_score":	145073
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3222,
			"primary_score":	999692,
			"second_score":	145072
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3223,
			"primary_score":	999692,
			"second_score":	145071
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3224,
			"primary_score":	999692,
			"second_score":	145070
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3226,
			"primary_score":	999692,
			"second_score":	145069
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3228,
			"primary_score":	999692,
			"second_score":	145068
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3231,
			"primary_score":	999692,
			"second_score":	145067
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3232,
			"primary_score":	999692,
			"second_score":	145066
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3233,
			"primary_score":	999692,
			"second_score":	145065
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3245,
			"primary_score":	999692,
			"second_score":	145064
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3246,
			"primary_score":	999692,
			"second_score":	145063
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3247,
			"primary_score":	999692,
			"second_score":	145062
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3250,
			"primary_score":	999692,
			"second_score":	145061
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3251,
			"primary_score":	999692,
			"second_score":	145060
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3252,
			"primary_score":	999692,
			"second_score":	145059
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3258,
			"primary_score":	999692,
			"second_score":	145058
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3262,
			"primary_score":	999692,
			"second_score":	145057
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3267,
			"primary_score":	999692,
			"second_score":	145056
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3269,
			"primary_score":	999692,
			"second_score":	145055
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3271,
			"primary_score":	999692,
			"second_score":	145054
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3272,
			"primary_score":	999692,
			"second_score":	145053
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3273,
			"primary_score":	999692,
			"second_score":	145052
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3274,
			"primary_score":	999692,
			"second_score":	145051
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3281,
			"primary_score":	999692,
			"second_score":	145050
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3282,
			"primary_score":	999692,
			"second_score":	145049
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3284,
			"primary_score":	999692,
			"second_score":	145048
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3294,
			"primary_score":	999692,
			"second_score":	136300
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3297,
			"primary_score":	999692,
			"second_score":	136299
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3362,
			"primary_score":	999692,
			"second_score":	136298
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3364,
			"primary_score":	999692,
			"second_score":	136297
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3376,
			"primary_score":	999692,
			"second_score":	136296
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3377,
			"primary_score":	999692,
			"second_score":	136389
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3382,
			"primary_score":	999692,
			"second_score":	136295
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3384,
			"primary_score":	999692,
			"second_score":	136364
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3385,
			"primary_score":	999692,
			"second_score":	136363
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3388,
			"primary_score":	999692,
			"second_score":	136294
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3390,
			"primary_score":	999692,
			"second_score":	136293
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3391,
			"primary_score":	999692,
			"second_score":	136292
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3395,
			"primary_score":	999692,
			"second_score":	136477
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3396,
			"primary_score":	999692,
			"second_score":	136476
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3401,
			"primary_score":	999692,
			"second_score":	136291
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3402,
			"primary_score":	999692,
			"second_score":	136290
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3403,
			"primary_score":	999692,
			"second_score":	136505
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3404,
			"primary_score":	999692,
			"second_score":	136289
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3405,
			"primary_score":	999692,
			"second_score":	136288
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3407,
			"primary_score":	999692,
			"second_score":	136323
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3409,
			"primary_score":	999692,
			"second_score":	136322
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3410,
			"primary_score":	999692,
			"second_score":	136321
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3413,
			"primary_score":	999692,
			"second_score":	136287
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3414,
			"primary_score":	999692,
			"second_score":	136286
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3418,
			"primary_score":	999692,
			"second_score":	136470
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3422,
			"primary_score":	999692,
			"second_score":	136469
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3425,
			"primary_score":	999692,
			"second_score":	136468
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3426,
			"primary_score":	999692,
			"second_score":	136467
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3428,
			"primary_score":	999692,
			"second_score":	136466
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3429,
			"primary_score":	999692,
			"second_score":	136465
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3431,
			"primary_score":	999692,
			"second_score":	136464
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3439,
			"primary_score":	999692,
			"second_score":	136388
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3441,
			"primary_score":	999692,
			"second_score":	136387
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3459,
			"primary_score":	999692,
			"second_score":	136320
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3462,
			"primary_score":	999692,
			"second_score":	136319
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3463,
			"primary_score":	999692,
			"second_score":	136318
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3467,
			"primary_score":	999692,
			"second_score":	136317
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3468,
			"primary_score":	999692,
			"second_score":	136311
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3472,
			"primary_score":	999692,
			"second_score":	136499
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3473,
			"primary_score":	999692,
			"second_score":	136495
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3477,
			"primary_score":	999692,
			"second_score":	136383
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3478,
			"primary_score":	999692,
			"second_score":	136381
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3482,
			"primary_score":	999692,
			"second_score":	138286
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3483,
			"primary_score":	999692,
			"second_score":	138285
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3492,
			"primary_score":	999692,
			"second_score":	136407
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3493,
			"primary_score":	999692,
			"second_score":	136405
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3577,
			"primary_score":	999868,
			"second_score":	5210
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3578,
			"primary_score":	999868,
			"second_score":	5206
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3582,
			"primary_score":	999868,
			"second_score":	2157
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3583,
			"primary_score":	999868,
			"second_score":	2155
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3592,
			"primary_score":	999692,
			"second_score":	136431
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3593,
			"primary_score":	999692,
			"second_score":	136429
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3732,
			"primary_score":	999700,
			"second_score":	2232
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3733,
			"primary_score":	999700,
			"second_score":	2224
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3777,
			"primary_score":	999995,
			"second_score":	10712
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3778,
			"primary_score":	999995,
			"second_score":	10593
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3782,
			"primary_score":	999995,
			"second_score":	6538
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3783,
			"primary_score":	999995,
			"second_score":	6450
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3787,
			"primary_score":	999995,
			"second_score":	6112
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3788,
			"primary_score":	999995,
			"second_score":	6109
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3792,
			"primary_score":	999995,
			"second_score":	6012
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3793,
			"primary_score":	999995,
			"second_score":	5540
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3797,
			"primary_score":	999995,
			"second_score":	2006
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3798,
			"primary_score":	999995,
			"second_score":	1953
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3802,
			"primary_score":	999995,
			"second_score":	1805
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3803,
			"primary_score":	999995,
			"second_score":	1713
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3822,
			"primary_score":	999995,
			"second_score":	1828
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3823,
			"primary_score":	999995,
			"second_score":	1827
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4142,
			"primary_score":	999692,
			"second_score":	137143
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4143,
			"primary_score":	999692,
			"second_score":	137142
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4147,
			"primary_score":	999692,
			"second_score":	137782
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4148,
			"primary_score":	999692,
			"second_score":	137781
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4152,
			"primary_score":	999692,
			"second_score":	138924
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4153,
			"primary_score":	999692,
			"second_score":	138698
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4157,
			"primary_score":	999692,
			"second_score":	134910
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4158,
			"primary_score":	999692,
			"second_score":	134828
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4167,
			"primary_score":	999692,
			"second_score":	130785
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4168,
			"primary_score":	999692,
			"second_score":	130671
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4172,
			"primary_score":	999692,
			"second_score":	137253
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4173,
			"primary_score":	999692,
			"second_score":	137171
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4412,
			"primary_score":	999692,
			"second_score":	128221
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4413,
			"primary_score":	999692,
			"second_score":	128204
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4417,
			"primary_score":	999692,
			"second_score":	144403
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4418,
			"primary_score":	999692,
			"second_score":	144191
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4477,
			"primary_score":	999860,
			"second_score":	8598
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4478,
			"primary_score":	999860,
			"second_score":	8544
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4482,
			"primary_score":	999860,
			"second_score":	7788
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4483,
			"primary_score":	999860,
			"second_score":	7719
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4732,
			"primary_score":	999692,
			"second_score":	128306
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4733,
			"primary_score":	999692,
			"second_score":	128305
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4737,
			"primary_score":	999692,
			"second_score":	131753
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4738,
			"primary_score":	999692,
			"second_score":	131725
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4742,
			"primary_score":	999692,
			"second_score":	128926
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4743,
			"primary_score":	999692,
			"second_score":	128884
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4747,
			"primary_score":	999692,
			"second_score":	128496
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4748,
			"primary_score":	999692,
			"second_score":	128372
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4827,
			"primary_score":	999692,
			"second_score":	138988
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4828,
			"primary_score":	999692,
			"second_score":	138987
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4892,
			"primary_score":	999692,
			"second_score":	138204
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4893,
			"primary_score":	999692,
			"second_score":	137843
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4897,
			"primary_score":	999692,
			"second_score":	137099
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4898,
			"primary_score":	999692,
			"second_score":	136984
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4977,
			"primary_score":	999851,
			"second_score":	9047
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4978,
			"primary_score":	999851,
			"second_score":	9046
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4992,
			"primary_score":	999982,
			"second_score":	6135
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4993,
			"primary_score":	999982,
			"second_score":	6134
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5007,
			"primary_score":	999859,
			"second_score":	9018
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5008,
			"primary_score":	999859,
			"second_score":	8620
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5077,
			"primary_score":	999863,
			"second_score":	7811
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5078,
			"primary_score":	999863,
			"second_score":	7810
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5092,
			"primary_score":	999692,
			"second_score":	139034
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5093,
			"primary_score":	999692,
			"second_score":	139033
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5197,
			"primary_score":	999692,
			"second_score":	139184
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5198,
			"primary_score":	999692,
			"second_score":	139065
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5212,
			"primary_score":	999692,
			"second_score":	139011
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5213,
			"primary_score":	999692,
			"second_score":	139010
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5257,
			"primary_score":	999692,
			"second_score":	136768
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5258,
			"primary_score":	999692,
			"second_score":	136767
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5262,
			"primary_score":	999692,
			"second_score":	128283
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5263,
			"primary_score":	999692,
			"second_score":	128282
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5267,
			"primary_score":	999692,
			"second_score":	136829
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5268,
			"primary_score":	999692,
			"second_score":	136790
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5284,
			"primary_score":	999919,
			"second_score":	4412
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5285,
			"primary_score":	999919,
			"second_score":	4191
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5289,
			"primary_score":	999919,
			"second_score":	3597
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5290,
			"primary_score":	999919,
			"second_score":	3570
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5294,
			"primary_score":	999919,
			"second_score":	2826
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5295,
			"primary_score":	999919,
			"second_score":	2795
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5299,
			"primary_score":	999692,
			"second_score":	136858
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5300,
			"primary_score":	999692,
			"second_score":	136857
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5309,
			"primary_score":	999919,
			"second_score":	2855
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5310,
			"primary_score":	999919,
			"second_score":	2854
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5334,
			"primary_score":	999921,
			"second_score":	3527
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5335,
			"primary_score":	999921,
			"second_score":	3124
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5339,
			"primary_score":	999921,
			"second_score":	3019
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5340,
			"primary_score":	999921,
			"second_score":	2967
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5344,
			"primary_score":	999921,
			"second_score":	2906
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5345,
			"primary_score":	999921,
			"second_score":	2877
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5399,
			"primary_score":	999744,
			"second_score":	4456
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5400,
			"primary_score":	999744,
			"second_score":	4455
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5409,
			"primary_score":	999692,
			"second_score":	136923
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5410,
			"primary_score":	999692,
			"second_score":	136886
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5414,
			"primary_score":	999744,
			"second_score":	4480
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5415,
			"primary_score":	999744,
			"second_score":	4478
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5439,
			"primary_score":	999744,
			"second_score":	4756
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5440,
			"primary_score":	999744,
			"second_score":	4574
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5444,
			"primary_score":	999744,
			"second_score":	4779
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5445,
			"primary_score":	999744,
			"second_score":	4778
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5464,
			"primary_score":	999919,
			"second_score":	3620
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5465,
			"primary_score":	999919,
			"second_score":	3619
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5489,
			"primary_score":	999919,
			"second_score":	3953
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5490,
			"primary_score":	999919,
			"second_score":	3686
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5494,
			"primary_score":	999919,
			"second_score":	3976
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5495,
			"primary_score":	999919,
			"second_score":	3975
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5717,
			"primary_score":	999692,
			"second_score":	136310
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5719,
			"primary_score":	999692,
			"second_score":	136309
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5720,
			"primary_score":	999692,
			"second_score":	136308
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5721,
			"primary_score":	999692,
			"second_score":	136307
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5723,
			"primary_score":	999692,
			"second_score":	136306
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5730,
			"primary_score":	999692,
			"second_score":	136305
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5732,
			"primary_score":	999692,
			"second_score":	136304
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5733,
			"primary_score":	999692,
			"second_score":	136303
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5734,
			"primary_score":	999692,
			"second_score":	136420
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5736,
			"primary_score":	999692,
			"second_score":	136302
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5738,
			"primary_score":	999692,
			"second_score":	136301
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5882,
			"primary_score":	999692,
			"second_score":	136285
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5907,
			"primary_score":	999692,
			"second_score":	136284
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5908,
			"primary_score":	999692,
			"second_score":	136283
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5909,
			"primary_score":	999692,
			"second_score":	136282
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5911,
			"primary_score":	999692,
			"second_score":	136281
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5913,
			"primary_score":	999692,
			"second_score":	136276
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5916,
			"primary_score":	999692,
			"second_score":	136275
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5920,
			"primary_score":	999692,
			"second_score":	136274
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5923,
			"primary_score":	999692,
			"second_score":	136273
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	154,
			"primary_score":	999816,
			"second_score":	4525
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	155,
			"primary_score":	999816,
			"second_score":	4499
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	162,
			"primary_score":	999816,
			"second_score":	2067
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	163,
			"primary_score":	999816,
			"second_score":	2066
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	164,
			"primary_score":	999816,
			"second_score":	2062
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	165,
			"primary_score":	999816,
			"second_score":	2061
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	145902
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	145901
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	145900
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	173,
			"primary_score":	999692,
			"second_score":	123457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	188,
			"primary_score":	999692,
			"second_score":	120293
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	192,
			"primary_score":	999692,
			"second_score":	120292
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	193,
			"primary_score":	999692,
			"second_score":	120288
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	198,
			"primary_score":	999692,
			"second_score":	146102
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	199,
			"primary_score":	999692,
			"second_score":	146101
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	200,
			"primary_score":	999692,
			"second_score":	146100
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	146099
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	202,
			"primary_score":	999692,
			"second_score":	146098
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	146097
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	205,
			"primary_score":	999692,
			"second_score":	146096
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	206,
			"primary_score":	999692,
			"second_score":	146095
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	208,
			"primary_score":	999692,
			"second_score":	146090
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	209,
			"primary_score":	999692,
			"second_score":	146089
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	210,
			"primary_score":	999692,
			"second_score":	146088
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	211,
			"primary_score":	999692,
			"second_score":	146086
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	146085
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	214,
			"primary_score":	999692,
			"second_score":	146084
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	146083
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	146082
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	217,
			"primary_score":	999692,
			"second_score":	146081
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	218,
			"primary_score":	999692,
			"second_score":	146080
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	219,
			"primary_score":	999692,
			"second_score":	146079
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	224,
			"primary_score":	999692,
			"second_score":	136028
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	225,
			"primary_score":	999692,
			"second_score":	136027
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	226,
			"primary_score":	999692,
			"second_score":	136026
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	227,
			"primary_score":	999692,
			"second_score":	136025
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	228,
			"primary_score":	999692,
			"second_score":	136024
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	136023
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	231,
			"primary_score":	999692,
			"second_score":	136022
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	232,
			"primary_score":	999692,
			"second_score":	136018
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	234,
			"primary_score":	999692,
			"second_score":	136017
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	136016
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	236,
			"primary_score":	999692,
			"second_score":	136015
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	237,
			"primary_score":	999692,
			"second_score":	136014
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	239,
			"primary_score":	999692,
			"second_score":	136012
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	243,
			"primary_score":	999692,
			"second_score":	136011
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	244,
			"primary_score":	999692,
			"second_score":	136010
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	245,
			"primary_score":	999692,
			"second_score":	136009
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	246,
			"primary_score":	999692,
			"second_score":	136008
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	247,
			"primary_score":	999692,
			"second_score":	136007
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	248,
			"primary_score":	999692,
			"second_score":	136006
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	249,
			"primary_score":	999692,
			"second_score":	136005
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	136004
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	260,
			"primary_score":	999692,
			"second_score":	135894
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	262,
			"primary_score":	999692,
			"second_score":	135818
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	263,
			"primary_score":	999692,
			"second_score":	135817
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	473,
			"primary_score":	999692,
			"second_score":	146076
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	474,
			"primary_score":	999692,
			"second_score":	146075
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	477,
			"primary_score":	999692,
			"second_score":	146074
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	483,
			"primary_score":	999692,
			"second_score":	146073
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	487,
			"primary_score":	999692,
			"second_score":	146029
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	488,
			"primary_score":	999692,
			"second_score":	145917
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	489,
			"primary_score":	999692,
			"second_score":	145916
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	490,
			"primary_score":	999692,
			"second_score":	145911
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	491,
			"primary_score":	999692,
			"second_score":	145910
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	492,
			"primary_score":	999692,
			"second_score":	145909
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	496,
			"primary_score":	999692,
			"second_score":	145908
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	497,
			"primary_score":	999692,
			"second_score":	145907
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	499,
			"primary_score":	999692,
			"second_score":	145906
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	500,
			"primary_score":	999692,
			"second_score":	145905
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	516,
			"primary_score":	999692,
			"second_score":	145904
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	517,
			"primary_score":	999692,
			"second_score":	145903
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	522,
			"primary_score":	999692,
			"second_score":	145899
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	524,
			"primary_score":	999692,
			"second_score":	145898
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	525,
			"primary_score":	999692,
			"second_score":	145897
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	530,
			"primary_score":	999692,
			"second_score":	145896
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	532,
			"primary_score":	999692,
			"second_score":	145334
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	533,
			"primary_score":	999692,
			"second_score":	145333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	534,
			"primary_score":	999692,
			"second_score":	145332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	539,
			"primary_score":	999692,
			"second_score":	145331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	540,
			"primary_score":	999692,
			"second_score":	145330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	547,
			"primary_score":	999692,
			"second_score":	146221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	548,
			"primary_score":	999692,
			"second_score":	146220
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	549,
			"primary_score":	999692,
			"second_score":	146116
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	550,
			"primary_score":	999692,
			"second_score":	146115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	551,
			"primary_score":	999692,
			"second_score":	146114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	552,
			"primary_score":	999692,
			"second_score":	146113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	553,
			"primary_score":	999692,
			"second_score":	146112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	554,
			"primary_score":	999692,
			"second_score":	146111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	556,
			"primary_score":	999692,
			"second_score":	146110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	557,
			"primary_score":	999692,
			"second_score":	146109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	558,
			"primary_score":	999692,
			"second_score":	146108
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	559,
			"primary_score":	999692,
			"second_score":	146107
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	560,
			"primary_score":	999692,
			"second_score":	146105
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	562,
			"primary_score":	999692,
			"second_score":	146103
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	564,
			"primary_score":	999692,
			"second_score":	146078
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	566,
			"primary_score":	999692,
			"second_score":	146077
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	575,
			"primary_score":	999692,
			"second_score":	145329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	576,
			"primary_score":	999692,
			"second_score":	145085
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	577,
			"primary_score":	999692,
			"second_score":	145084
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	578,
			"primary_score":	999692,
			"second_score":	145083
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	579,
			"primary_score":	999692,
			"second_score":	145076
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	580,
			"primary_score":	999692,
			"second_score":	136272
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	581,
			"primary_score":	999692,
			"second_score":	136225
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	582,
			"primary_score":	999692,
			"second_score":	136224
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	585,
			"primary_score":	999692,
			"second_score":	136223
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	588,
			"primary_score":	999692,
			"second_score":	136222
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	589,
			"primary_score":	999692,
			"second_score":	136221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	590,
			"primary_score":	999692,
			"second_score":	136220
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	591,
			"primary_score":	999692,
			"second_score":	136219
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	592,
			"primary_score":	999692,
			"second_score":	136034
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	598,
			"primary_score":	999692,
			"second_score":	136029
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	599,
			"primary_score":	999692,
			"second_score":	136003
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	646,
			"primary_score":	999692,
			"second_score":	123565
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	647,
			"primary_score":	999692,
			"second_score":	123564
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	650,
			"primary_score":	999692,
			"second_score":	123563
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	655,
			"primary_score":	999692,
			"second_score":	123562
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	658,
			"primary_score":	999692,
			"second_score":	123467
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	660,
			"primary_score":	999692,
			"second_score":	123466
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	661,
			"primary_score":	999692,
			"second_score":	123465
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	663,
			"primary_score":	999692,
			"second_score":	123464
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	664,
			"primary_score":	999692,
			"second_score":	123463
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	666,
			"primary_score":	999692,
			"second_score":	123462
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	683,
			"primary_score":	999692,
			"second_score":	123461
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	685,
			"primary_score":	999692,
			"second_score":	123456
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	686,
			"primary_score":	999692,
			"second_score":	123020
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	687,
			"primary_score":	999692,
			"second_score":	123019
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	688,
			"primary_score":	999692,
			"second_score":	123018
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	716,
			"primary_score":	999692,
			"second_score":	123823
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	717,
			"primary_score":	999692,
			"second_score":	123822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	718,
			"primary_score":	999692,
			"second_score":	123718
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	719,
			"primary_score":	999692,
			"second_score":	123717
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	720,
			"primary_score":	999692,
			"second_score":	123716
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	721,
			"primary_score":	999692,
			"second_score":	123715
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	722,
			"primary_score":	999692,
			"second_score":	123714
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	724,
			"primary_score":	999692,
			"second_score":	123713
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	729,
			"primary_score":	999692,
			"second_score":	123712
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	731,
			"primary_score":	999692,
			"second_score":	123711
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	732,
			"primary_score":	999692,
			"second_score":	123710
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	733,
			"primary_score":	999692,
			"second_score":	123594
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	734,
			"primary_score":	999692,
			"second_score":	123592
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	736,
			"primary_score":	999692,
			"second_score":	123591
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	737,
			"primary_score":	999692,
			"second_score":	123566
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	741,
			"primary_score":	999692,
			"second_score":	123017
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	743,
			"primary_score":	999692,
			"second_score":	123016
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	744,
			"primary_score":	999692,
			"second_score":	123015
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	745,
			"primary_score":	999692,
			"second_score":	122771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	746,
			"primary_score":	999692,
			"second_score":	122770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	747,
			"primary_score":	999692,
			"second_score":	122769
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	748,
			"primary_score":	999692,
			"second_score":	122762
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	749,
			"primary_score":	999692,
			"second_score":	122761
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	751,
			"primary_score":	999692,
			"second_score":	121619
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	756,
			"primary_score":	999692,
			"second_score":	121618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	761,
			"primary_score":	999692,
			"second_score":	121617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	762,
			"primary_score":	999692,
			"second_score":	121569
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	763,
			"primary_score":	999692,
			"second_score":	121568
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	764,
			"primary_score":	999692,
			"second_score":	121397
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	765,
			"primary_score":	999692,
			"second_score":	121392
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	768,
			"primary_score":	999692,
			"second_score":	121391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	769,
			"primary_score":	999692,
			"second_score":	121365
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	770,
			"primary_score":	999692,
			"second_score":	121339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	771,
			"primary_score":	999692,
			"second_score":	121338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	868,
			"primary_score":	999692,
			"second_score":	139194
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	869,
			"primary_score":	999692,
			"second_score":	139193
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	871,
			"primary_score":	999692,
			"second_score":	139192
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	874,
			"primary_score":	999692,
			"second_score":	139076
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	875,
			"primary_score":	999692,
			"second_score":	139075
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	876,
			"primary_score":	999692,
			"second_score":	139074
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	877,
			"primary_score":	999692,
			"second_score":	139073
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	878,
			"primary_score":	999692,
			"second_score":	131307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	879,
			"primary_score":	999692,
			"second_score":	131306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	884,
			"primary_score":	999692,
			"second_score":	131305
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	887,
			"primary_score":	999692,
			"second_score":	131304
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	888,
			"primary_score":	999692,
			"second_score":	131303
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	959,
			"primary_score":	999692,
			"second_score":	139072
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	962,
			"primary_score":	999692,
			"second_score":	139071
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	963,
			"primary_score":	999692,
			"second_score":	134178
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	965,
			"primary_score":	999692,
			"second_score":	139070
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	967,
			"primary_score":	999692,
			"second_score":	139069
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	968,
			"primary_score":	999692,
			"second_score":	139068
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	980,
			"primary_score":	999692,
			"second_score":	136358
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	983,
			"primary_score":	999692,
			"second_score":	136357
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	988,
			"primary_score":	999692,
			"second_score":	136356
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	989,
			"primary_score":	999692,
			"second_score":	136355
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	990,
			"primary_score":	999692,
			"second_score":	136354
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	991,
			"primary_score":	999692,
			"second_score":	136544
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	992,
			"primary_score":	999692,
			"second_score":	136543
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	993,
			"primary_score":	999692,
			"second_score":	136542
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	995,
			"primary_score":	999919,
			"second_score":	4161
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1009,
			"primary_score":	999692,
			"second_score":	136353
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1016,
			"primary_score":	999692,
			"second_score":	136352
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1017,
			"primary_score":	999692,
			"second_score":	136351
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1030,
			"primary_score":	999692,
			"second_score":	136350
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1065,
			"primary_score":	999692,
			"second_score":	136349
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1066,
			"primary_score":	999692,
			"second_score":	136348
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1067,
			"primary_score":	999692,
			"second_score":	136345
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1068,
			"primary_score":	999692,
			"second_score":	136344
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1069,
			"primary_score":	999692,
			"second_score":	145000
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1070,
			"primary_score":	999692,
			"second_score":	144999
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1071,
			"primary_score":	999692,
			"second_score":	144998
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1072,
			"primary_score":	999692,
			"second_score":	144997
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1073,
			"primary_score":	999692,
			"second_score":	144996
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1074,
			"primary_score":	999692,
			"second_score":	144995
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1084,
			"primary_score":	999692,
			"second_score":	136340
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1086,
			"primary_score":	999692,
			"second_score":	136339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1087,
			"primary_score":	999692,
			"second_score":	136338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1088,
			"primary_score":	999692,
			"second_score":	136337
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1148,
			"primary_score":	999692,
			"second_score":	136342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1149,
			"primary_score":	999692,
			"second_score":	136341
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1152,
			"primary_score":	999692,
			"second_score":	144993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1153,
			"primary_score":	999692,
			"second_score":	144992
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1154,
			"primary_score":	999692,
			"second_score":	144991
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1157,
			"primary_score":	999692,
			"second_score":	144990
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1158,
			"primary_score":	999692,
			"second_score":	144989
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1457,
			"primary_score":	999692,
			"second_score":	144987
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1458,
			"primary_score":	999692,
			"second_score":	144986
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1459,
			"primary_score":	999692,
			"second_score":	144985
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1460,
			"primary_score":	999692,
			"second_score":	144984
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1462,
			"primary_score":	999692,
			"second_score":	144983
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1463,
			"primary_score":	999692,
			"second_score":	144982
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1464,
			"primary_score":	999692,
			"second_score":	144981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1465,
			"primary_score":	999692,
			"second_score":	144980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1467,
			"primary_score":	999692,
			"second_score":	144979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1468,
			"primary_score":	999692,
			"second_score":	144978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1469,
			"primary_score":	999694,
			"second_score":	10863
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1470,
			"primary_score":	999694,
			"second_score":	10862
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1472,
			"primary_score":	999692,
			"second_score":	144977
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1473,
			"primary_score":	999692,
			"second_score":	144976
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1475,
			"primary_score":	999692,
			"second_score":	144975
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1477,
			"primary_score":	999692,
			"second_score":	144974
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1478,
			"primary_score":	999692,
			"second_score":	144973
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1480,
			"primary_score":	999692,
			"second_score":	144972
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1482,
			"primary_score":	999692,
			"second_score":	144971
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1483,
			"primary_score":	999692,
			"second_score":	144970
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1484,
			"primary_score":	999692,
			"second_score":	144969
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1485,
			"primary_score":	999692,
			"second_score":	144968
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1486,
			"primary_score":	999694,
			"second_score":	10851
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1487,
			"primary_score":	999692,
			"second_score":	144964
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1488,
			"primary_score":	999692,
			"second_score":	144963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2211,
			"primary_score":	999692,
			"second_score":	136541
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2245,
			"primary_score":	999692,
			"second_score":	136540
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2246,
			"primary_score":	999692,
			"second_score":	136539
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2247,
			"primary_score":	999692,
			"second_score":	136536
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2248,
			"primary_score":	999692,
			"second_score":	136535
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2249,
			"primary_score":	999692,
			"second_score":	136534
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2367,
			"primary_score":	999692,
			"second_score":	144944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2368,
			"primary_score":	999692,
			"second_score":	144943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2369,
			"primary_score":	999692,
			"second_score":	144942
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2386,
			"primary_score":	999692,
			"second_score":	138435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2388,
			"primary_score":	999692,
			"second_score":	138434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2389,
			"primary_score":	999692,
			"second_score":	138433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2390,
			"primary_score":	999692,
			"second_score":	138320
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2391,
			"primary_score":	999692,
			"second_score":	138319
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2396,
			"primary_score":	999736,
			"second_score":	9343
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2397,
			"primary_score":	999736,
			"second_score":	9342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2407,
			"primary_score":	999736,
			"second_score":	9341
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2408,
			"primary_score":	999741,
			"second_score":	9340
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2409,
			"primary_score":	999741,
			"second_score":	9339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2418,
			"primary_score":	999692,
			"second_score":	133635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2419,
			"primary_score":	999692,
			"second_score":	133634
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2430,
			"primary_score":	999692,
			"second_score":	133633
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2435,
			"primary_score":	999692,
			"second_score":	133632
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2439,
			"primary_score":	999692,
			"second_score":	133631
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2446,
			"primary_score":	999909,
			"second_score":	6691
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2447,
			"primary_score":	999909,
			"second_score":	6690
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2457,
			"primary_score":	999912,
			"second_score":	6689
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2458,
			"primary_score":	999995,
			"second_score":	6687
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2468,
			"primary_score":	999692,
			"second_score":	136786
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2469,
			"primary_score":	999692,
			"second_score":	136785
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2470,
			"primary_score":	999692,
			"second_score":	136784
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2474,
			"primary_score":	999904,
			"second_score":	10792
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2475,
			"primary_score":	999904,
			"second_score":	10791
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2480,
			"primary_score":	999904,
			"second_score":	10790
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2484,
			"primary_score":	999926,
			"second_score":	10788
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2545,
			"primary_score":	999692,
			"second_score":	131885
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2546,
			"primary_score":	999692,
			"second_score":	131884
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2556,
			"primary_score":	999692,
			"second_score":	131883
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2560,
			"primary_score":	999692,
			"second_score":	131882
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2605,
			"primary_score":	999692,
			"second_score":	138602
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2606,
			"primary_score":	999692,
			"second_score":	138601
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2611,
			"primary_score":	999692,
			"second_score":	138600
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2612,
			"primary_score":	999692,
			"second_score":	138599
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2621,
			"primary_score":	999692,
			"second_score":	130575
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2622,
			"primary_score":	999692,
			"second_score":	130574
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2623,
			"primary_score":	999692,
			"second_score":	139394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2624,
			"primary_score":	999692,
			"second_score":	139393
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2627,
			"primary_score":	999692,
			"second_score":	130573
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2628,
			"primary_score":	999692,
			"second_score":	130572
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2637,
			"primary_score":	999848,
			"second_score":	4535
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2638,
			"primary_score":	999848,
			"second_score":	4534
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2641,
			"primary_score":	999918,
			"second_score":	4533
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2642,
			"primary_score":	999919,
			"second_score":	4531
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2646,
			"primary_score":	999692,
			"second_score":	136943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2648,
			"primary_score":	999692,
			"second_score":	136942
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2649,
			"primary_score":	999692,
			"second_score":	136941
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2654,
			"primary_score":	999692,
			"second_score":	136569
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2655,
			"primary_score":	999692,
			"second_score":	136568
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2656,
			"primary_score":	999692,
			"second_score":	136567
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2659,
			"primary_score":	999692,
			"second_score":	136562
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2661,
			"primary_score":	999692,
			"second_score":	136561
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2662,
			"primary_score":	999692,
			"second_score":	136560
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2663,
			"primary_score":	999692,
			"second_score":	136559
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2664,
			"primary_score":	999692,
			"second_score":	136558
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2665,
			"primary_score":	999697,
			"second_score":	1885
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2666,
			"primary_score":	999692,
			"second_score":	136552
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2671,
			"primary_score":	999692,
			"second_score":	129148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2672,
			"primary_score":	999692,
			"second_score":	129147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2673,
			"primary_score":	999692,
			"second_score":	129146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2686,
			"primary_score":	999859,
			"second_score":	8484
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2687,
			"primary_score":	999859,
			"second_score":	8483
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2688,
			"primary_score":	999938,
			"second_score":	8482
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2692,
			"primary_score":	999938,
			"second_score":	8481
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2693,
			"primary_score":	999938,
			"second_score":	8480
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2694,
			"primary_score":	999938,
			"second_score":	8479
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2697,
			"primary_score":	999859,
			"second_score":	9441
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2701,
			"primary_score":	999860,
			"second_score":	9439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2708,
			"primary_score":	999775,
			"second_score":	5313
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2709,
			"primary_score":	999775,
			"second_score":	5312
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2710,
			"primary_score":	999775,
			"second_score":	5311
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2714,
			"primary_score":	999692,
			"second_score":	138246
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2715,
			"primary_score":	999692,
			"second_score":	138245
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2716,
			"primary_score":	999692,
			"second_score":	138244
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2717,
			"primary_score":	999692,
			"second_score":	138243
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2718,
			"primary_score":	999692,
			"second_score":	138242
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2723,
			"primary_score":	999692,
			"second_score":	138241
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2728,
			"primary_score":	999970,
			"second_score":	6577
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2729,
			"primary_score":	999994,
			"second_score":	6576
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2730,
			"primary_score":	999994,
			"second_score":	6575
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2733,
			"primary_score":	999975,
			"second_score":	9070
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2734,
			"primary_score":	999975,
			"second_score":	9069
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2739,
			"primary_score":	999692,
			"second_score":	133708
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2740,
			"primary_score":	999692,
			"second_score":	133707
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2745,
			"primary_score":	999692,
			"second_score":	133706
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2746,
			"primary_score":	999692,
			"second_score":	133705
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2747,
			"primary_score":	999692,
			"second_score":	133704
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2750,
			"primary_score":	999692,
			"second_score":	136626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2751,
			"primary_score":	999692,
			"second_score":	136625
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2752,
			"primary_score":	999692,
			"second_score":	136624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2911,
			"primary_score":	999744,
			"second_score":	4861
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2912,
			"primary_score":	999744,
			"second_score":	4860
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2918,
			"primary_score":	999744,
			"second_score":	4859
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2919,
			"primary_score":	999744,
			"second_score":	4858
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2925,
			"primary_score":	999692,
			"second_score":	136945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2926,
			"primary_score":	999692,
			"second_score":	136944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2929,
			"primary_score":	999692,
			"second_score":	136533
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2930,
			"primary_score":	999692,
			"second_score":	136532
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2931,
			"primary_score":	999692,
			"second_score":	132158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2934,
			"primary_score":	999863,
			"second_score":	5465
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2935,
			"primary_score":	999863,
			"second_score":	5464
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2936,
			"primary_score":	999863,
			"second_score":	5463
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2938,
			"primary_score":	999863,
			"second_score":	5462
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2939,
			"primary_score":	999863,
			"second_score":	5461
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2940,
			"primary_score":	999863,
			"second_score":	5433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2945,
			"primary_score":	999863,
			"second_score":	2079
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2946,
			"primary_score":	999863,
			"second_score":	2078
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2947,
			"primary_score":	999863,
			"second_score":	2077
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2949,
			"primary_score":	999863,
			"second_score":	2076
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2950,
			"primary_score":	999863,
			"second_score":	2075
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2951,
			"primary_score":	999863,
			"second_score":	2071
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2952,
			"primary_score":	999863,
			"second_score":	2068
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2954,
			"primary_score":	999863,
			"second_score":	2039
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3020,
			"primary_score":	999692,
			"second_score":	140993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3021,
			"primary_score":	999692,
			"second_score":	140992
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3065,
			"primary_score":	999692,
			"second_score":	133125
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3066,
			"primary_score":	999692,
			"second_score":	133124
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3068,
			"primary_score":	999692,
			"second_score":	133123
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3070,
			"primary_score":	999692,
			"second_score":	133122
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3071,
			"primary_score":	999692,
			"second_score":	133121
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3072,
			"primary_score":	999692,
			"second_score":	133120
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3073,
			"primary_score":	999692,
			"second_score":	133119
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3075,
			"primary_score":	999692,
			"second_score":	133118
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3076,
			"primary_score":	999692,
			"second_score":	133054
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3077,
			"primary_score":	999692,
			"second_score":	133053
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3078,
			"primary_score":	999692,
			"second_score":	133052
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3079,
			"primary_score":	999692,
			"second_score":	133051
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3081,
			"primary_score":	999692,
			"second_score":	133050
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3082,
			"primary_score":	999692,
			"second_score":	133055
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3095,
			"primary_score":	999692,
			"second_score":	133049
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3096,
			"primary_score":	999692,
			"second_score":	132939
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3097,
			"primary_score":	999692,
			"second_score":	132938
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3100,
			"primary_score":	999692,
			"second_score":	132937
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3101,
			"primary_score":	999692,
			"second_score":	132936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3102,
			"primary_score":	999692,
			"second_score":	132935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3103,
			"primary_score":	999692,
			"second_score":	132854
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3118,
			"primary_score":	999692,
			"second_score":	132853
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3121,
			"primary_score":	999692,
			"second_score":	132852
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3124,
			"primary_score":	999692,
			"second_score":	132851
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3126,
			"primary_score":	999692,
			"second_score":	132850
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3128,
			"primary_score":	999692,
			"second_score":	132849
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3135,
			"primary_score":	999692,
			"second_score":	132848
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3140,
			"primary_score":	999692,
			"second_score":	139203
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3141,
			"primary_score":	999692,
			"second_score":	139202
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3143,
			"primary_score":	999692,
			"second_score":	139201
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3145,
			"primary_score":	999692,
			"second_score":	139200
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3146,
			"primary_score":	999692,
			"second_score":	139199
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3148,
			"primary_score":	999692,
			"second_score":	139198
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3149,
			"primary_score":	999692,
			"second_score":	139196
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3152,
			"primary_score":	999692,
			"second_score":	139195
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3153,
			"primary_score":	999692,
			"second_score":	139067
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3166,
			"primary_score":	999692,
			"second_score":	131351
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3169,
			"primary_score":	999692,
			"second_score":	131350
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3199,
			"primary_score":	999692,
			"second_score":	121689
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3200,
			"primary_score":	999692,
			"second_score":	121688
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3201,
			"primary_score":	999692,
			"second_score":	121687
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3203,
			"primary_score":	999692,
			"second_score":	121686
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3204,
			"primary_score":	999692,
			"second_score":	121685
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3205,
			"primary_score":	999692,
			"second_score":	121684
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3214,
			"primary_score":	999692,
			"second_score":	138443
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3215,
			"primary_score":	999692,
			"second_score":	138442
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3216,
			"primary_score":	999692,
			"second_score":	138439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3217,
			"primary_score":	999692,
			"second_score":	138438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3219,
			"primary_score":	999692,
			"second_score":	138437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3220,
			"primary_score":	999692,
			"second_score":	138444
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3222,
			"primary_score":	999692,
			"second_score":	138436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3275,
			"primary_score":	999692,
			"second_score":	133692
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3276,
			"primary_score":	999692,
			"second_score":	133691
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3277,
			"primary_score":	999692,
			"second_score":	133690
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3278,
			"primary_score":	999692,
			"second_score":	133689
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3281,
			"primary_score":	999692,
			"second_score":	133688
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3353,
			"primary_score":	999692,
			"second_score":	136530
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3354,
			"primary_score":	999701,
			"second_score":	1859
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3355,
			"primary_score":	999692,
			"second_score":	136528
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3356,
			"primary_score":	999692,
			"second_score":	136527
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3358,
			"primary_score":	999692,
			"second_score":	136526
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3360,
			"primary_score":	999692,
			"second_score":	136525
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3361,
			"primary_score":	999692,
			"second_score":	136524
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3362,
			"primary_score":	999692,
			"second_score":	136523
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3363,
			"primary_score":	999692,
			"second_score":	136522
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3364,
			"primary_score":	999692,
			"second_score":	136521
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3365,
			"primary_score":	999692,
			"second_score":	136520
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3370,
			"primary_score":	999701,
			"second_score":	1858
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3371,
			"primary_score":	999701,
			"second_score":	1857
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3379,
			"primary_score":	999744,
			"second_score":	4856
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3380,
			"primary_score":	999744,
			"second_score":	4855
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3381,
			"primary_score":	999744,
			"second_score":	4852
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3382,
			"primary_score":	999744,
			"second_score":	4851
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3383,
			"primary_score":	999744,
			"second_score":	4850
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3384,
			"primary_score":	999744,
			"second_score":	4849
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3385,
			"primary_score":	999744,
			"second_score":	4848
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3398,
			"primary_score":	999744,
			"second_score":	4847
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3400,
			"primary_score":	999744,
			"second_score":	4846
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3402,
			"primary_score":	999744,
			"second_score":	4845
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3403,
			"primary_score":	999744,
			"second_score":	4844
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3404,
			"primary_score":	999744,
			"second_score":	4813
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3405,
			"primary_score":	999744,
			"second_score":	4812
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4759,
			"primary_score":	999692,
			"second_score":	133703
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4792,
			"primary_score":	999692,
			"second_score":	133702
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4793,
			"primary_score":	999692,
			"second_score":	133701
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4798,
			"primary_score":	999692,
			"second_score":	133700
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4802,
			"primary_score":	999692,
			"second_score":	133699
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4803,
			"primary_score":	999692,
			"second_score":	133698
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4804,
			"primary_score":	999692,
			"second_score":	133697
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4890,
			"primary_score":	999692,
			"second_score":	133696
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4891,
			"primary_score":	999692,
			"second_score":	133695
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4892,
			"primary_score":	999692,
			"second_score":	133694
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4893,
			"primary_score":	999692,
			"second_score":	133693
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5293,
			"primary_score":	999775,
			"second_score":	5309
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5294,
			"primary_score":	999775,
			"second_score":	5308
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5295,
			"primary_score":	999775,
			"second_score":	5307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5296,
			"primary_score":	999775,
			"second_score":	5306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5298,
			"primary_score":	999775,
			"second_score":	5305
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5299,
			"primary_score":	999775,
			"second_score":	5304
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5300,
			"primary_score":	999775,
			"second_score":	5303
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5317,
			"primary_score":	999860,
			"second_score":	9438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5318,
			"primary_score":	999860,
			"second_score":	9437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5319,
			"primary_score":	999860,
			"second_score":	9436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5323,
			"primary_score":	999927,
			"second_score":	8478
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5324,
			"primary_score":	999927,
			"second_score":	8477
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5325,
			"primary_score":	999927,
			"second_score":	8476
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5430,
			"primary_score":	999860,
			"second_score":	9434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5431,
			"primary_score":	999860,
			"second_score":	9433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5434,
			"primary_score":	999860,
			"second_score":	9432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5435,
			"primary_score":	999860,
			"second_score":	9431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5437,
			"primary_score":	999860,
			"second_score":	9430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5438,
			"primary_score":	999860,
			"second_score":	9429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5496,
			"primary_score":	999718,
			"second_score":	1907
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5497,
			"primary_score":	999718,
			"second_score":	1906
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5498,
			"primary_score":	999718,
			"second_score":	1903
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5499,
			"primary_score":	999718,
			"second_score":	1902
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5501,
			"primary_score":	999692,
			"second_score":	136566
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5502,
			"primary_score":	999718,
			"second_score":	1910
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5503,
			"primary_score":	999720,
			"second_score":	1909
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5506,
			"primary_score":	999692,
			"second_score":	136565
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5507,
			"primary_score":	999692,
			"second_score":	136564
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5508,
			"primary_score":	999692,
			"second_score":	136563
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5532,
			"primary_score":	999919,
			"second_score":	4530
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5533,
			"primary_score":	999919,
			"second_score":	4529
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5534,
			"primary_score":	999919,
			"second_score":	4528
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5536,
			"primary_score":	999919,
			"second_score":	4527
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5537,
			"primary_score":	999919,
			"second_score":	4526
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5538,
			"primary_score":	999919,
			"second_score":	4498
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6065,
			"primary_score":	999692,
			"second_score":	131880
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6066,
			"primary_score":	999692,
			"second_score":	131879
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6071,
			"primary_score":	999692,
			"second_score":	131878
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6075,
			"primary_score":	999692,
			"second_score":	131877
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6120,
			"primary_score":	999692,
			"second_score":	131875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6121,
			"primary_score":	999692,
			"second_score":	131874
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6122,
			"primary_score":	999692,
			"second_score":	131873
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6790,
			"primary_score":	999926,
			"second_score":	10787
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6791,
			"primary_score":	999926,
			"second_score":	10786
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6795,
			"primary_score":	999926,
			"second_score":	10785
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6799,
			"primary_score":	999926,
			"second_score":	10784
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6802,
			"primary_score":	999995,
			"second_score":	10783
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6803,
			"primary_score":	999995,
			"second_score":	10782
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6804,
			"primary_score":	999995,
			"second_score":	10781
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6807,
			"primary_score":	999995,
			"second_score":	10780
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6808,
			"primary_score":	999995,
			"second_score":	10779
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6810,
			"primary_score":	999995,
			"second_score":	10778
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6811,
			"primary_score":	999995,
			"second_score":	10777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6862,
			"primary_score":	999692,
			"second_score":	136782
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6863,
			"primary_score":	999692,
			"second_score":	136781
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6873,
			"primary_score":	999692,
			"second_score":	136780
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6874,
			"primary_score":	999692,
			"second_score":	136779
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6896,
			"primary_score":	999692,
			"second_score":	136777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6897,
			"primary_score":	999692,
			"second_score":	136776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6898,
			"primary_score":	999692,
			"second_score":	136775
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7009,
			"primary_score":	999692,
			"second_score":	136773
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7010,
			"primary_score":	999692,
			"second_score":	136772
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7011,
			"primary_score":	999692,
			"second_score":	136771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7012,
			"primary_score":	999692,
			"second_score":	136770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7194,
			"primary_score":	999995,
			"second_score":	6686
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7195,
			"primary_score":	999995,
			"second_score":	6685
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7200,
			"primary_score":	999995,
			"second_score":	6684
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7201,
			"primary_score":	999995,
			"second_score":	6683
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7202,
			"primary_score":	999995,
			"second_score":	6682
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7339,
			"primary_score":	999995,
			"second_score":	6680
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7340,
			"primary_score":	999995,
			"second_score":	6679
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7341,
			"primary_score":	999995,
			"second_score":	6678
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7363,
			"primary_score":	999995,
			"second_score":	6676
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7364,
			"primary_score":	999995,
			"second_score":	6675
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7365,
			"primary_score":	999995,
			"second_score":	6674
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7366,
			"primary_score":	999995,
			"second_score":	6673
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7368,
			"primary_score":	999995,
			"second_score":	6672
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7369,
			"primary_score":	999995,
			"second_score":	6671
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7372,
			"primary_score":	999995,
			"second_score":	6670
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7373,
			"primary_score":	999995,
			"second_score":	6669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7375,
			"primary_score":	999995,
			"second_score":	6668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7376,
			"primary_score":	999995,
			"second_score":	6667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7399,
			"primary_score":	999692,
			"second_score":	133629
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7400,
			"primary_score":	999692,
			"second_score":	133628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7401,
			"primary_score":	999692,
			"second_score":	133627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7402,
			"primary_score":	999692,
			"second_score":	133626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7404,
			"primary_score":	999692,
			"second_score":	133625
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7405,
			"primary_score":	999692,
			"second_score":	133624
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7406,
			"primary_score":	999692,
			"second_score":	133623
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7407,
			"primary_score":	999692,
			"second_score":	133622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7409,
			"primary_score":	999692,
			"second_score":	133621
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7410,
			"primary_score":	999692,
			"second_score":	133620
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7411,
			"primary_score":	999692,
			"second_score":	133619
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7412,
			"primary_score":	999692,
			"second_score":	133618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7414,
			"primary_score":	999692,
			"second_score":	133617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7415,
			"primary_score":	999692,
			"second_score":	133616
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7416,
			"primary_score":	999692,
			"second_score":	133615
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7417,
			"primary_score":	999692,
			"second_score":	133614
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7419,
			"primary_score":	999692,
			"second_score":	133613
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7420,
			"primary_score":	999692,
			"second_score":	133612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7421,
			"primary_score":	999692,
			"second_score":	133611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7422,
			"primary_score":	999692,
			"second_score":	133610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7424,
			"primary_score":	999692,
			"second_score":	133609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7425,
			"primary_score":	999692,
			"second_score":	133608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7426,
			"primary_score":	999692,
			"second_score":	133607
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7427,
			"primary_score":	999692,
			"second_score":	133606
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7429,
			"primary_score":	999692,
			"second_score":	133605
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7430,
			"primary_score":	999692,
			"second_score":	133604
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7431,
			"primary_score":	999692,
			"second_score":	133603
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7678,
			"primary_score":	999692,
			"second_score":	144941
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7679,
			"primary_score":	999692,
			"second_score":	144940
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7680,
			"primary_score":	999692,
			"second_score":	144939
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7708,
			"primary_score":	999972,
			"second_score":	6408
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7709,
			"primary_score":	999972,
			"second_score":	6407
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7714,
			"primary_score":	999972,
			"second_score":	6406
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7715,
			"primary_score":	999996,
			"second_score":	6405
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8086,
			"primary_score":	999692,
			"second_score":	144937
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8087,
			"primary_score":	999692,
			"second_score":	144936
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8088,
			"primary_score":	999692,
			"second_score":	144935
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8089,
			"primary_score":	999692,
			"second_score":	144934
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8091,
			"primary_score":	999692,
			"second_score":	144933
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8092,
			"primary_score":	999692,
			"second_score":	144932
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8095,
			"primary_score":	999692,
			"second_score":	144931
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8096,
			"primary_score":	999692,
			"second_score":	144930
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8098,
			"primary_score":	999692,
			"second_score":	144929
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8099,
			"primary_score":	999692,
			"second_score":	144928
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8106,
			"primary_score":	999919,
			"second_score":	4160
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8140,
			"primary_score":	999919,
			"second_score":	4159
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8141,
			"primary_score":	999919,
			"second_score":	4158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8142,
			"primary_score":	999919,
			"second_score":	4155
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8143,
			"primary_score":	999919,
			"second_score":	4154
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8154,
			"primary_score":	999919,
			"second_score":	4153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8160,
			"primary_score":	999919,
			"second_score":	4152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8161,
			"primary_score":	999919,
			"second_score":	4151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8199,
			"primary_score":	999919,
			"second_score":	4149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8200,
			"primary_score":	999919,
			"second_score":	4148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8201,
			"primary_score":	999919,
			"second_score":	4147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8204,
			"primary_score":	999919,
			"second_score":	4072
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8206,
			"primary_score":	999919,
			"second_score":	4071
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8207,
			"primary_score":	999919,
			"second_score":	4070
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8208,
			"primary_score":	999919,
			"second_score":	4041
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8209,
			"primary_score":	999919,
			"second_score":	4010
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8210,
			"primary_score":	999919,
			"second_score":	4009
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8219,
			"primary_score":	999919,
			"second_score":	4080
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8220,
			"primary_score":	999919,
			"second_score":	4079
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8221,
			"primary_score":	999919,
			"second_score":	4076
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8222,
			"primary_score":	999919,
			"second_score":	4075
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8224,
			"primary_score":	999919,
			"second_score":	4074
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8225,
			"primary_score":	999919,
			"second_score":	4081
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8227,
			"primary_score":	999919,
			"second_score":	4073
		}, {
			"file":	"Zend/zend_list.c",
			"line":	37,
			"primary_score":	999692,
			"second_score":	149414
		}, {
			"file":	"Zend/zend_list.c",
			"line":	38,
			"primary_score":	999692,
			"second_score":	149413
		}, {
			"file":	"Zend/zend_list.c",
			"line":	40,
			"primary_score":	999692,
			"second_score":	149412
		}, {
			"file":	"Zend/zend_list.c",
			"line":	41,
			"primary_score":	999692,
			"second_score":	149411
		}, {
			"file":	"Zend/zend_list.c",
			"line":	42,
			"primary_score":	999692,
			"second_score":	149410
		}, {
			"file":	"Zend/zend_list.c",
			"line":	44,
			"primary_score":	999692,
			"second_score":	149409
		}, {
			"file":	"Zend/zend_list.c",
			"line":	46,
			"primary_score":	999692,
			"second_score":	149406
		}, {
			"file":	"Zend/zend_list.c",
			"line":	47,
			"primary_score":	999692,
			"second_score":	149236
		}, {
			"file":	"Zend/zend_list.c",
			"line":	52,
			"primary_score":	999692,
			"second_score":	115741
		}, {
			"file":	"Zend/zend_list.c",
			"line":	54,
			"primary_score":	999692,
			"second_score":	115740
		}, {
			"file":	"Zend/zend_list.c",
			"line":	56,
			"primary_score":	999692,
			"second_score":	115730
		}, {
			"file":	"Zend/zend_list.c",
			"line":	57,
			"primary_score":	999692,
			"second_score":	115729
		}, {
			"file":	"Zend/zend_list.c",
			"line":	96,
			"primary_score":	999692,
			"second_score":	149416
		}, {
			"file":	"Zend/zend_list.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	149415
		}, {
			"file":	"Zend/zend_list.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	149235
		}, {
			"file":	"Zend/zend_list.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	149234
		}, {
			"file":	"Zend/zend_list.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	115707
		}, {
			"file":	"Zend/zend_list.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	115706
		}, {
			"file":	"Zend/zend_list.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	115705
		}, {
			"file":	"Zend/zend_list.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	115704
		}, {
			"file":	"Zend/zend_list.c",
			"line":	175,
			"primary_score":	999692,
			"second_score":	115694
		}, {
			"file":	"Zend/zend_list.c",
			"line":	183,
			"primary_score":	999692,
			"second_score":	115693
		}, {
			"file":	"Zend/zend_list.c",
			"line":	185,
			"primary_score":	999692,
			"second_score":	115585
		}, {
			"file":	"Zend/zend_list.c",
			"line":	239,
			"primary_score":	999692,
			"second_score":	105179
		}, {
			"file":	"Zend/zend_list.c",
			"line":	347,
			"primary_score":	999692,
			"second_score":	6219
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	28,
			"primary_score":	999692,
			"second_score":	151630
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	29,
			"primary_score":	999692,
			"second_score":	151629
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	30,
			"primary_score":	999692,
			"second_score":	151628
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	31,
			"primary_score":	999692,
			"second_score":	151627
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	32,
			"primary_score":	999692,
			"second_score":	151626
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	33,
			"primary_score":	999692,
			"second_score":	151625
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	39,
			"primary_score":	999692,
			"second_score":	146028
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	41,
			"primary_score":	999692,
			"second_score":	145924
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	42,
			"primary_score":	999692,
			"second_score":	145923
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	43,
			"primary_score":	999692,
			"second_score":	145922
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	44,
			"primary_score":	999986,
			"second_score":	1959
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	46,
			"primary_score":	999692,
			"second_score":	145921
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	48,
			"primary_score":	999692,
			"second_score":	145920
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	49,
			"primary_score":	999692,
			"second_score":	145919
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	51,
			"primary_score":	999692,
			"second_score":	145918
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	135893
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	94,
			"primary_score":	999692,
			"second_score":	135892
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	96,
			"primary_score":	999692,
			"second_score":	135891
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	97,
			"primary_score":	999692,
			"second_score":	135890
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	135889
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	99,
			"primary_score":	999692,
			"second_score":	135886
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	135819
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	109,
			"primary_score":	999692,
			"second_score":	3138
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	111,
			"primary_score":	999692,
			"second_score":	3137
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	112,
			"primary_score":	999846,
			"second_score":	1766
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	113,
			"primary_score":	999846,
			"second_score":	1765
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	116,
			"primary_score":	999846,
			"second_score":	1764
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	117,
			"primary_score":	999846,
			"second_score":	1745
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	120,
			"primary_score":	999692,
			"second_score":	3136
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	126,
			"primary_score":	999692,
			"second_score":	121239
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	127,
			"primary_score":	999692,
			"second_score":	121235
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	190,
			"primary_score":	999692,
			"second_score":	43143
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	192,
			"primary_score":	999692,
			"second_score":	43142
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	233,
			"primary_score":	999692,
			"second_score":	121287
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	121286
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	275,
			"primary_score":	999692,
			"second_score":	145915
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	277,
			"primary_score":	999692,
			"second_score":	145914
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	278,
			"primary_score":	999692,
			"second_score":	145913
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	279,
			"primary_score":	999692,
			"second_score":	145912
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1251,
			"primary_score":	999861,
			"second_score":	421
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1252,
			"primary_score":	999861,
			"second_score":	420
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1254,
			"primary_score":	999861,
			"second_score":	419
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1255,
			"primary_score":	999918,
			"second_score":	418
		}, {
			"file":	"Zend/zend_object_handlers.c",
			"line":	1282,
			"primary_score":	999861,
			"second_score":	417
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	31,
			"primary_score":	999876,
			"second_score":	452
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	32,
			"primary_score":	999876,
			"second_score":	451
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	33,
			"primary_score":	999876,
			"second_score":	450
		}, {
			"file":	"Zend/zend_objects.c",
			"line":	34,
			"primary_score":	999876,
			"second_score":	449
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	41,
			"primary_score":	999692,
			"second_score":	115415
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	42,
			"primary_score":	999692,
			"second_score":	115349
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	47,
			"primary_score":	999692,
			"second_score":	121136
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	49,
			"primary_score":	999692,
			"second_score":	121135
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	82,
			"primary_score":	999692,
			"second_score":	116306
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	116305
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	104,
			"primary_score":	999838,
			"second_score":	444
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	105,
			"primary_score":	999838,
			"second_score":	443
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	107,
			"primary_score":	999838,
			"second_score":	442
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	111,
			"primary_score":	999838,
			"second_score":	441
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	115,
			"primary_score":	999838,
			"second_score":	440
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	117,
			"primary_score":	999838,
			"second_score":	439
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	118,
			"primary_score":	999838,
			"second_score":	438
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	119,
			"primary_score":	999838,
			"second_score":	437
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	121,
			"primary_score":	999838,
			"second_score":	436
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	122,
			"primary_score":	999838,
			"second_score":	435
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	123,
			"primary_score":	999838,
			"second_score":	434
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	124,
			"primary_score":	999838,
			"second_score":	433
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	125,
			"primary_score":	999838,
			"second_score":	432
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	126,
			"primary_score":	999838,
			"second_score":	431
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	127,
			"primary_score":	999838,
			"second_score":	430
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	132,
			"primary_score":	999838,
			"second_score":	429
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	270,
			"primary_score":	999878,
			"second_score":	1
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	272,
			"primary_score":	999878,
			"second_score":	5
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	48,
			"primary_score":	999692,
			"second_score":	145218
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	53,
			"primary_score":	999692,
			"second_score":	145328
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	55,
			"primary_score":	999692,
			"second_score":	145327
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	62,
			"primary_score":	999692,
			"second_score":	145326
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	63,
			"primary_score":	999692,
			"second_score":	145222
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	64,
			"primary_score":	999692,
			"second_score":	145221
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	65,
			"primary_score":	999692,
			"second_score":	145220
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	66,
			"primary_score":	999692,
			"second_score":	145219
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	68,
			"primary_score":	999692,
			"second_score":	145113
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	69,
			"primary_score":	999692,
			"second_score":	145112
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	71,
			"primary_score":	999692,
			"second_score":	145111
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	73,
			"primary_score":	999692,
			"second_score":	145110
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	74,
			"primary_score":	999692,
			"second_score":	145109
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	75,
			"primary_score":	999692,
			"second_score":	145107
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	76,
			"primary_score":	999692,
			"second_score":	145106
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	145105
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	79,
			"primary_score":	999692,
			"second_score":	145104
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	80,
			"primary_score":	999692,
			"second_score":	145103
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	82,
			"primary_score":	999692,
			"second_score":	145102
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	145101
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	85,
			"primary_score":	999692,
			"second_score":	145100
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	86,
			"primary_score":	999692,
			"second_score":	145099
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	88,
			"primary_score":	999692,
			"second_score":	145098
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	89,
			"primary_score":	999692,
			"second_score":	145097
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	91,
			"primary_score":	999692,
			"second_score":	145096
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	145095
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	95,
			"primary_score":	999692,
			"second_score":	145094
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	97,
			"primary_score":	999692,
			"second_score":	145093
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	145092
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	145091
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	101,
			"primary_score":	999692,
			"second_score":	145090
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	103,
			"primary_score":	999692,
			"second_score":	145089
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	145088
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	110,
			"primary_score":	999692,
			"second_score":	158720
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	122,
			"primary_score":	999692,
			"second_score":	158722
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	124,
			"primary_score":	999692,
			"second_score":	158721
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	136,
			"primary_score":	999692,
			"second_score":	116386
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	140,
			"primary_score":	999692,
			"second_score":	116385
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	197,
			"primary_score":	999692,
			"second_score":	116369
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	116368
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	266,
			"primary_score":	999692,
			"second_score":	15796
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	268,
			"primary_score":	999692,
			"second_score":	15795
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	271,
			"primary_score":	999692,
			"second_score":	15794
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	312,
			"primary_score":	999692,
			"second_score":	20035
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	314,
			"primary_score":	999692,
			"second_score":	20034
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	315,
			"primary_score":	999692,
			"second_score":	19971
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	316,
			"primary_score":	999692,
			"second_score":	19970
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	319,
			"primary_score":	999692,
			"second_score":	19962
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	321,
			"primary_score":	999692,
			"second_score":	15793
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	329,
			"primary_score":	999692,
			"second_score":	15792
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	330,
			"primary_score":	999692,
			"second_score":	15784
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	333,
			"primary_score":	999692,
			"second_score":	15783
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	334,
			"primary_score":	999692,
			"second_score":	15474
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	335,
			"primary_score":	999692,
			"second_score":	14828
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	336,
			"primary_score":	999692,
			"second_score":	17309
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	338,
			"primary_score":	999692,
			"second_score":	14827
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	339,
			"primary_score":	999692,
			"second_score":	14826
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	350,
			"primary_score":	999692,
			"second_score":	121637
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	351,
			"primary_score":	999692,
			"second_score":	121636
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	352,
			"primary_score":	999692,
			"second_score":	121635
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	354,
			"primary_score":	999692,
			"second_score":	121634
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	359,
			"primary_score":	999692,
			"second_score":	121633
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	360,
			"primary_score":	999692,
			"second_score":	121632
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	363,
			"primary_score":	999692,
			"second_score":	121613
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	367,
			"primary_score":	999692,
			"second_score":	121612
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	369,
			"primary_score":	999692,
			"second_score":	121593
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	378,
			"primary_score":	999692,
			"second_score":	121592
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	379,
			"primary_score":	999692,
			"second_score":	121591
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	380,
			"primary_score":	999692,
			"second_score":	121590
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	381,
			"primary_score":	999692,
			"second_score":	121413
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	382,
			"primary_score":	999692,
			"second_score":	121410
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	384,
			"primary_score":	999692,
			"second_score":	121409
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	386,
			"primary_score":	999692,
			"second_score":	121344
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	388,
			"primary_score":	999692,
			"second_score":	121293
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	391,
			"primary_score":	999692,
			"second_score":	121292
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	394,
			"primary_score":	999692,
			"second_score":	121291
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	397,
			"primary_score":	999692,
			"second_score":	121290
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	400,
			"primary_score":	999692,
			"second_score":	121289
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	401,
			"primary_score":	999692,
			"second_score":	121288
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	403,
			"primary_score":	999692,
			"second_score":	121285
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	416,
			"primary_score":	999692,
			"second_score":	136249
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	417,
			"primary_score":	999692,
			"second_score":	136248
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	418,
			"primary_score":	999692,
			"second_score":	136247
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	423,
			"primary_score":	999692,
			"second_score":	136254
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	424,
			"primary_score":	999692,
			"second_score":	136253
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	426,
			"primary_score":	999692,
			"second_score":	136252
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	437,
			"primary_score":	999692,
			"second_score":	136251
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	439,
			"primary_score":	999692,
			"second_score":	136250
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	441,
			"primary_score":	999692,
			"second_score":	136246
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	446,
			"primary_score":	999692,
			"second_score":	136257
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	488,
			"primary_score":	999692,
			"second_score":	136218
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	490,
			"primary_score":	999692,
			"second_score":	136217
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	493,
			"primary_score":	999692,
			"second_score":	136216
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	496,
			"primary_score":	999692,
			"second_score":	136215
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	497,
			"primary_score":	999692,
			"second_score":	136214
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	500,
			"primary_score":	999692,
			"second_score":	136211
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	501,
			"primary_score":	999744,
			"second_score":	1322
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	502,
			"primary_score":	999744,
			"second_score":	1266
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	504,
			"primary_score":	999692,
			"second_score":	136210
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	505,
			"primary_score":	999692,
			"second_score":	136209
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	506,
			"primary_score":	999692,
			"second_score":	136150
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	508,
			"primary_score":	999692,
			"second_score":	136149
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	509,
			"primary_score":	999692,
			"second_score":	136148
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	510,
			"primary_score":	999692,
			"second_score":	136092
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	513,
			"primary_score":	999692,
			"second_score":	136091
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	514,
			"primary_score":	999692,
			"second_score":	136090
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	515,
			"primary_score":	999692,
			"second_score":	136089
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	516,
			"primary_score":	999692,
			"second_score":	136045
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	517,
			"primary_score":	999692,
			"second_score":	136044
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	519,
			"primary_score":	999692,
			"second_score":	136043
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	520,
			"primary_score":	999745,
			"second_score":	1072
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	522,
			"primary_score":	999692,
			"second_score":	136042
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	530,
			"primary_score":	999692,
			"second_score":	127290
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	537,
			"primary_score":	999692,
			"second_score":	127351
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	539,
			"primary_score":	999692,
			"second_score":	136041
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	540,
			"primary_score":	999692,
			"second_score":	136037
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	543,
			"primary_score":	999692,
			"second_score":	136036
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	544,
			"primary_score":	999692,
			"second_score":	136035
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	543,
			"primary_score":	999692,
			"second_score":	122048
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	544,
			"primary_score":	999692,
			"second_score":	122047
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	546,
			"primary_score":	999692,
			"second_score":	122046
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	549,
			"primary_score":	999988,
			"second_score":	26
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	550,
			"primary_score":	999988,
			"second_score":	25
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	558,
			"primary_score":	999692,
			"second_score":	122045
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	559,
			"primary_score":	999692,
			"second_score":	122017
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	561,
			"primary_score":	999692,
			"second_score":	122016
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	608,
			"primary_score":	999692,
			"second_score":	122015
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1892,
			"primary_score":	999692,
			"second_score":	153829
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1893,
			"primary_score":	999692,
			"second_score":	153828
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1894,
			"primary_score":	999692,
			"second_score":	153827
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1896,
			"primary_score":	999692,
			"second_score":	153826
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1897,
			"primary_score":	999692,
			"second_score":	153818
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1899,
			"primary_score":	999692,
			"second_score":	153811
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1901,
			"primary_score":	999692,
			"second_score":	153810
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1907,
			"primary_score":	999692,
			"second_score":	153851
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	115417
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	79,
			"primary_score":	999692,
			"second_score":	115443
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	86,
			"primary_score":	999692,
			"second_score":	116410
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	88,
			"primary_score":	999692,
			"second_score":	116409
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	96,
			"primary_score":	999692,
			"second_score":	116411
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	97,
			"primary_score":	999692,
			"second_score":	116408
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	116407
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	116406
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	104,
			"primary_score":	999692,
			"second_score":	116405
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	116404
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	62,
			"primary_score":	999692,
			"second_score":	135683
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	64,
			"primary_score":	999692,
			"second_score":	125210
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	65,
			"primary_score":	999692,
			"second_score":	125209
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	66,
			"primary_score":	999692,
			"second_score":	125208
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	67,
			"primary_score":	999692,
			"second_score":	125207
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	87,
			"primary_score":	999692,
			"second_score":	125178
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	88,
			"primary_score":	999692,
			"second_score":	125177
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	89,
			"primary_score":	999692,
			"second_score":	125176
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	90,
			"primary_score":	999692,
			"second_score":	125175
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	27,
			"primary_score":	999692,
			"second_score":	116425
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	28,
			"primary_score":	999692,
			"second_score":	116424
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	29,
			"primary_score":	999692,
			"second_score":	116423
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	30,
			"primary_score":	999692,
			"second_score":	116422
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	50,
			"primary_score":	999692,
			"second_score":	136822
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	51,
			"primary_score":	999692,
			"second_score":	136821
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	52,
			"primary_score":	999692,
			"second_score":	136820
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	62,
			"primary_score":	999692,
			"second_score":	136812
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	63,
			"primary_score":	999692,
			"second_score":	136811
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	65,
			"primary_score":	999692,
			"second_score":	136792
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	83,
			"primary_score":	999692,
			"second_score":	136031
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	136030
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	86,
			"primary_score":	999863,
			"second_score":	2069
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	115187
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	95,
			"primary_score":	999692,
			"second_score":	115186
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	103,
			"primary_score":	999692,
			"second_score":	115185
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	121,
			"primary_score":	999692,
			"second_score":	136261
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	123,
			"primary_score":	999692,
			"second_score":	136260
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	130,
			"primary_score":	999692,
			"second_score":	136259
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	46,
			"primary_score":	999692,
			"second_score":	135866
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	47,
			"primary_score":	999692,
			"second_score":	135865
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	67,
			"primary_score":	999692,
			"second_score":	135875
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	68,
			"primary_score":	999692,
			"second_score":	135874
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	74,
			"primary_score":	999692,
			"second_score":	135873
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	75,
			"primary_score":	999692,
			"second_score":	135872
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	76,
			"primary_score":	999692,
			"second_score":	135871
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	77,
			"primary_score":	999692,
			"second_score":	135870
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	135869
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	83,
			"primary_score":	999692,
			"second_score":	135876
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	135868
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	85,
			"primary_score":	999692,
			"second_score":	135867
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	90,
			"primary_score":	999692,
			"second_score":	146058
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	95,
			"primary_score":	999692,
			"second_score":	146060
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	97,
			"primary_score":	999692,
			"second_score":	146059
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	146057
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	103,
			"primary_score":	999692,
			"second_score":	146056
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	146054
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	109,
			"primary_score":	999692,
			"second_score":	146053
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	169,
			"primary_score":	999692,
			"second_score":	146072
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	146071
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	146070
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	178,
			"primary_score":	999692,
			"second_score":	146069
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	187,
			"primary_score":	999692,
			"second_score":	146068
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	188,
			"primary_score":	999692,
			"second_score":	146067
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	189,
			"primary_score":	999692,
			"second_score":	146066
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	190,
			"primary_score":	999692,
			"second_score":	146065
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	191,
			"primary_score":	999692,
			"second_score":	146064
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	192,
			"primary_score":	999692,
			"second_score":	146063
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	194,
			"primary_score":	999692,
			"second_score":	146062
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	208,
			"primary_score":	999692,
			"second_score":	146061
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	209,
			"primary_score":	999692,
			"second_score":	146052
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	146051
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	214,
			"primary_score":	999692,
			"second_score":	146050
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	146049
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	218,
			"primary_score":	999692,
			"second_score":	146048
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	222,
			"primary_score":	999692,
			"second_score":	146047
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	223,
			"primary_score":	999692,
			"second_score":	146046
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	224,
			"primary_score":	999692,
			"second_score":	146045
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	225,
			"primary_score":	999692,
			"second_score":	146044
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	227,
			"primary_score":	999692,
			"second_score":	146043
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	228,
			"primary_score":	999692,
			"second_score":	146042
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	146041
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	231,
			"primary_score":	999692,
			"second_score":	146040
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	232,
			"primary_score":	999692,
			"second_score":	146039
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	234,
			"primary_score":	999692,
			"second_score":	146038
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	275,
			"primary_score":	999692,
			"second_score":	146037
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	276,
			"primary_score":	999692,
			"second_score":	146036
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	277,
			"primary_score":	999692,
			"second_score":	146035
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	278,
			"primary_score":	999692,
			"second_score":	146034
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	279,
			"primary_score":	999692,
			"second_score":	146033
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	281,
			"primary_score":	999692,
			"second_score":	146032
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	282,
			"primary_score":	999692,
			"second_score":	146031
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	284,
			"primary_score":	999692,
			"second_score":	146030
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	135878
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	299,
			"primary_score":	999692,
			"second_score":	135877
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	301,
			"primary_score":	999692,
			"second_score":	135864
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	302,
			"primary_score":	999692,
			"second_score":	135863
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	309,
			"primary_score":	999692,
			"second_score":	135862
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	310,
			"primary_score":	999692,
			"second_score":	135861
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	311,
			"primary_score":	999692,
			"second_score":	135842
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	313,
			"primary_score":	999692,
			"second_score":	135841
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	322,
			"primary_score":	999692,
			"second_score":	135888
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	325,
			"primary_score":	999692,
			"second_score":	135887
		}, {
			"file":	"Zend/zend_string.c",
			"line":	77,
			"primary_score":	999692,
			"second_score":	6107
		}, {
			"file":	"Zend/zend_string.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	6106
		}, {
			"file":	"Zend/zend_string.c",
			"line":	85,
			"primary_score":	999692,
			"second_score":	137073
		}, {
			"file":	"Zend/zend_string.c",
			"line":	86,
			"primary_score":	999692,
			"second_score":	137072
		}, {
			"file":	"Zend/zend_string.c",
			"line":	87,
			"primary_score":	999692,
			"second_score":	137071
		}, {
			"file":	"Zend/zend_string.c",
			"line":	89,
			"primary_score":	999692,
			"second_score":	137070
		}, {
			"file":	"Zend/zend_string.c",
			"line":	90,
			"primary_score":	999918,
			"second_score":	3343
		}, {
			"file":	"Zend/zend_string.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	137069
		}, {
			"file":	"Zend/zend_string.c",
			"line":	94,
			"primary_score":	999692,
			"second_score":	137059
		}, {
			"file":	"Zend/zend_string.c",
			"line":	95,
			"primary_score":	999692,
			"second_score":	137058
		}, {
			"file":	"Zend/zend_string.c",
			"line":	96,
			"primary_score":	999692,
			"second_score":	137057
		}, {
			"file":	"Zend/zend_string.c",
			"line":	97,
			"primary_score":	999692,
			"second_score":	137056
		}, {
			"file":	"Zend/zend_string.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	162640
		}, {
			"file":	"Zend/zend_string.c",
			"line":	99,
			"primary_score":	999692,
			"second_score":	162639
		}, {
			"file":	"Zend/zend_string.c",
			"line":	100,
			"primary_score":	999692,
			"second_score":	162638
		}, {
			"file":	"Zend/zend_string.c",
			"line":	102,
			"primary_score":	999692,
			"second_score":	162619
		}, {
			"file":	"Zend/zend_string.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	137677
		}, {
			"file":	"Zend/zend_string.c",
			"line":	108,
			"primary_score":	999692,
			"second_score":	138755
		}, {
			"file":	"Zend/zend_string.c",
			"line":	114,
			"primary_score":	999692,
			"second_score":	138754
		}, {
			"file":	"Zend/zend_string.c",
			"line":	115,
			"primary_score":	999692,
			"second_score":	138753
		}, {
			"file":	"Zend/zend_string.c",
			"line":	121,
			"primary_score":	999692,
			"second_score":	138752
		}, {
			"file":	"Zend/zend_string.c",
			"line":	122,
			"primary_score":	999692,
			"second_score":	138751
		}, {
			"file":	"Zend/zend_string.c",
			"line":	123,
			"primary_score":	999692,
			"second_score":	138750
		}, {
			"file":	"Zend/zend_string.c",
			"line":	124,
			"primary_score":	999692,
			"second_score":	138749
		}, {
			"file":	"Zend/zend_string.c",
			"line":	126,
			"primary_score":	999692,
			"second_score":	138730
		}, {
			"file":	"Zend/zend_string.c",
			"line":	127,
			"primary_score":	999692,
			"second_score":	138729
		}, {
			"file":	"Zend/zend_string.c",
			"line":	128,
			"primary_score":	999692,
			"second_score":	138728
		}, {
			"file":	"Zend/zend_string.c",
			"line":	129,
			"primary_score":	999692,
			"second_score":	138727
		}, {
			"file":	"Zend/zend_string.c",
			"line":	131,
			"primary_score":	999692,
			"second_score":	138726
		}, {
			"file":	"Zend/zend_string.c",
			"line":	132,
			"primary_score":	999692,
			"second_score":	138725
		}, {
			"file":	"Zend/zend_string.c",
			"line":	133,
			"primary_score":	999692,
			"second_score":	138724
		}, {
			"file":	"Zend/zend_string.c",
			"line":	134,
			"primary_score":	999692,
			"second_score":	138723
		}, {
			"file":	"Zend/zend_string.c",
			"line":	137,
			"primary_score":	999692,
			"second_score":	138722
		}, {
			"file":	"Zend/zend_string.c",
			"line":	139,
			"primary_score":	999692,
			"second_score":	138720
		}, {
			"file":	"Zend/zend_string.c",
			"line":	140,
			"primary_score":	999692,
			"second_score":	138719
		}, {
			"file":	"Zend/zend_string.c",
			"line":	141,
			"primary_score":	999692,
			"second_score":	138718
		}, {
			"file":	"Zend/zend_string.c",
			"line":	142,
			"primary_score":	999692,
			"second_score":	138717
		}, {
			"file":	"Zend/zend_string.c",
			"line":	143,
			"primary_score":	999692,
			"second_score":	138716
		}, {
			"file":	"Zend/zend_string.c",
			"line":	145,
			"primary_score":	999692,
			"second_score":	138715
		}, {
			"file":	"Zend/zend_string.c",
			"line":	149,
			"primary_score":	999692,
			"second_score":	138714
		}, {
			"file":	"Zend/zend_string.c",
			"line":	151,
			"primary_score":	999692,
			"second_score":	138713
		}, {
			"file":	"Zend/zend_string.c",
			"line":	153,
			"primary_score":	999692,
			"second_score":	138711
		}, {
			"file":	"Zend/zend_string.c",
			"line":	155,
			"primary_score":	999692,
			"second_score":	138710
		}, {
			"file":	"Zend/zend_string.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	138709
		}, {
			"file":	"Zend/zend_string.c",
			"line":	188,
			"primary_score":	999692,
			"second_score":	114633
		}, {
			"file":	"Zend/zend_string.c",
			"line":	189,
			"primary_score":	999692,
			"second_score":	114632
		}, {
			"file":	"Zend/zend_string.c",
			"line":	192,
			"primary_score":	999692,
			"second_score":	114631
		}, {
			"file":	"Zend/zend_string.c",
			"line":	199,
			"primary_score":	999692,
			"second_score":	114630
		}, {
			"file":	"Zend/zend_string.c",
			"line":	200,
			"primary_score":	999692,
			"second_score":	105211
		}, {
			"file":	"Zend/zend_string.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	105210
		}, {
			"file":	"Zend/zend_string.c",
			"line":	202,
			"primary_score":	999692,
			"second_score":	111811
		}, {
			"file":	"Zend/zend_string.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	111810
		}, {
			"file":	"Zend/zend_string.c",
			"line":	204,
			"primary_score":	999692,
			"second_score":	111809
		}, {
			"file":	"Zend/zend_string.c",
			"line":	208,
			"primary_score":	999692,
			"second_score":	111808
		}, {
			"file":	"Zend/zend_string.c",
			"line":	209,
			"primary_score":	999692,
			"second_score":	106301
		}, {
			"file":	"Zend/zend_string.c",
			"line":	211,
			"primary_score":	999692,
			"second_score":	111807
		}, {
			"file":	"Zend/zend_string.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	111806
		}, {
			"file":	"Zend/zend_string.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	105209
		}, {
			"file":	"Zend/zend_string.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	105208
		}, {
			"file":	"Zend/zend_string.c",
			"line":	218,
			"primary_score":	999692,
			"second_score":	105207
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	459,
			"primary_score":	999692,
			"second_score":	6275
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	467,
			"primary_score":	999692,
			"second_score":	6221
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1379,
			"primary_score":	999692,
			"second_score":	6274
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1380,
			"primary_score":	999692,
			"second_score":	6273
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1382,
			"primary_score":	999692,
			"second_score":	6272
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1383,
			"primary_score":	999692,
			"second_score":	6271
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1384,
			"primary_score":	999692,
			"second_score":	6225
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1385,
			"primary_score":	999692,
			"second_score":	6224
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1389,
			"primary_score":	999692,
			"second_score":	6223
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1391,
			"primary_score":	999692,
			"second_score":	6222
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	32,
			"primary_score":	999692,
			"second_score":	115744
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	37,
			"primary_score":	999692,
			"second_score":	117063
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	38,
			"primary_score":	999692,
			"second_score":	117042
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	41,
			"primary_score":	999692,
			"second_score":	116534
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	43,
			"primary_score":	999692,
			"second_score":	116533
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	44,
			"primary_score":	999692,
			"second_score":	116532
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	45,
			"primary_score":	999692,
			"second_score":	116524
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	48,
			"primary_score":	999692,
			"second_score":	116505
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	58,
			"primary_score":	999692,
			"second_score":	115743
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	61,
			"primary_score":	999692,
			"second_score":	115742
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	63,
			"primary_score":	999692,
			"second_score":	115541
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	77,
			"primary_score":	999692,
			"second_score":	14835
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	81,
			"primary_score":	999692,
			"second_score":	20012
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	82,
			"primary_score":	999692,
			"second_score":	20009
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	107,
			"primary_score":	999692,
			"second_score":	135699
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	121,
			"primary_score":	999692,
			"second_score":	135698
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	124,
			"primary_score":	999692,
			"second_score":	135697
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	153,
			"primary_score":	999692,
			"second_score":	121706
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	32,
			"primary_score":	999692,
			"second_score":	115746
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	33,
			"primary_score":	999692,
			"second_score":	117172
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	35,
			"primary_score":	999692,
			"second_score":	115745
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	42,
			"primary_score":	999692,
			"second_score":	135701
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	43,
			"primary_score":	999692,
			"second_score":	120976
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	45,
			"primary_score":	999692,
			"second_score":	135700
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	345,
			"primary_score":	999692,
			"second_score":	135813
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	346,
			"primary_score":	999692,
			"second_score":	135812
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	347,
			"primary_score":	999692,
			"second_score":	135811
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	350,
			"primary_score":	999692,
			"second_score":	135810
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	354,
			"primary_score":	999692,
			"second_score":	135809
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	356,
			"primary_score":	999692,
			"second_score":	135808
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	363,
			"primary_score":	999692,
			"second_score":	135799
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	364,
			"primary_score":	999692,
			"second_score":	135798
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	365,
			"primary_score":	999692,
			"second_score":	135797
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	366,
			"primary_score":	999692,
			"second_score":	135796
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	367,
			"primary_score":	999692,
			"second_score":	135795
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	368,
			"primary_score":	999692,
			"second_score":	135794
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	369,
			"primary_score":	999692,
			"second_score":	135793
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	370,
			"primary_score":	999692,
			"second_score":	135792
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	371,
			"primary_score":	999692,
			"second_score":	135791
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	372,
			"primary_score":	999692,
			"second_score":	135790
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	373,
			"primary_score":	999692,
			"second_score":	135789
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	374,
			"primary_score":	999692,
			"second_score":	135788
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	375,
			"primary_score":	999692,
			"second_score":	135787
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	377,
			"primary_score":	999692,
			"second_score":	135786
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	379,
			"primary_score":	999692,
			"second_score":	135785
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	380,
			"primary_score":	999692,
			"second_score":	135784
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	383,
			"primary_score":	999692,
			"second_score":	135751
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	395,
			"primary_score":	999692,
			"second_score":	135750
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	396,
			"primary_score":	999692,
			"second_score":	135749
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	397,
			"primary_score":	999692,
			"second_score":	135748
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	399,
			"primary_score":	999692,
			"second_score":	135747
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	400,
			"primary_score":	999692,
			"second_score":	135746
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	402,
			"primary_score":	999692,
			"second_score":	135745
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	403,
			"primary_score":	999692,
			"second_score":	121665
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	410,
			"primary_score":	999692,
			"second_score":	121664
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	411,
			"primary_score":	999692,
			"second_score":	121643
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	414,
			"primary_score":	999692,
			"second_score":	121642
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	431,
			"primary_score":	999692,
			"second_score":	121720
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	436,
			"primary_score":	999692,
			"second_score":	121719
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	437,
			"primary_score":	999692,
			"second_score":	121718
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	458,
			"primary_score":	999692,
			"second_score":	121656
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	459,
			"primary_score":	999692,
			"second_score":	121655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	461,
			"primary_score":	999692,
			"second_score":	121654
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	462,
			"primary_score":	999692,
			"second_score":	121653
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	463,
			"primary_score":	999692,
			"second_score":	121652
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	474,
			"primary_score":	999692,
			"second_score":	121651
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	476,
			"primary_score":	999692,
			"second_score":	121650
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	478,
			"primary_score":	999692,
			"second_score":	121646
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	481,
			"primary_score":	999692,
			"second_score":	121645
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	566,
			"primary_score":	999692,
			"second_score":	121644
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	571,
			"primary_score":	999692,
			"second_score":	125188
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	572,
			"primary_score":	999692,
			"second_score":	125187
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	573,
			"primary_score":	999692,
			"second_score":	125186
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	575,
			"primary_score":	999692,
			"second_score":	125185
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	576,
			"primary_score":	999692,
			"second_score":	125184
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	589,
			"primary_score":	999692,
			"second_score":	125183
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	603,
			"primary_score":	999692,
			"second_score":	125182
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	604,
			"primary_score":	999904,
			"second_score":	301
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	605,
			"primary_score":	999904,
			"second_score":	300
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	606,
			"primary_score":	999904,
			"second_score":	299
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	607,
			"primary_score":	999904,
			"second_score":	298
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	608,
			"primary_score":	999904,
			"second_score":	297
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	609,
			"primary_score":	999904,
			"second_score":	296
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	610,
			"primary_score":	999904,
			"second_score":	295
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	613,
			"primary_score":	999692,
			"second_score":	125181
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	614,
			"primary_score":	999692,
			"second_score":	125171
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	615,
			"primary_score":	999692,
			"second_score":	125167
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	617,
			"primary_score":	999692,
			"second_score":	125166
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	618,
			"primary_score":	999692,
			"second_score":	125165
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	620,
			"primary_score":	999692,
			"second_score":	125164
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	621,
			"primary_score":	999692,
			"second_score":	125054
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	622,
			"primary_score":	999692,
			"second_score":	125051
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	623,
			"primary_score":	999692,
			"second_score":	125050
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	625,
			"primary_score":	999692,
			"second_score":	125049
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	626,
			"primary_score":	999692,
			"second_score":	125048
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	627,
			"primary_score":	999692,
			"second_score":	125047
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	628,
			"primary_score":	999692,
			"second_score":	125046
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	630,
			"primary_score":	999692,
			"second_score":	125045
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	631,
			"primary_score":	999692,
			"second_score":	125034
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	632,
			"primary_score":	999692,
			"second_score":	125025
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	636,
			"primary_score":	999692,
			"second_score":	125024
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	638,
			"primary_score":	999692,
			"second_score":	125023
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	643,
			"primary_score":	999692,
			"second_score":	123830
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	709,
			"primary_score":	999692,
			"second_score":	123829
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	710,
			"primary_score":	999692,
			"second_score":	123828
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	712,
			"primary_score":	999692,
			"second_score":	123827
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	729,
			"primary_score":	999692,
			"second_score":	123826
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	730,
			"primary_score":	999692,
			"second_score":	123825
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	732,
			"primary_score":	999692,
			"second_score":	123824
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	734,
			"primary_score":	999692,
			"second_score":	121837
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	742,
			"primary_score":	999692,
			"second_score":	121836
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	747,
			"primary_score":	999904,
			"second_score":	310
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	748,
			"primary_score":	999904,
			"second_score":	309
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	794,
			"primary_score":	999860,
			"second_score":	608
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	795,
			"primary_score":	999860,
			"second_score":	607
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	796,
			"primary_score":	999860,
			"second_score":	606
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	798,
			"primary_score":	999860,
			"second_score":	605
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	799,
			"primary_score":	999860,
			"second_score":	604
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	808,
			"primary_score":	999860,
			"second_score":	603
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	809,
			"primary_score":	999860,
			"second_score":	579
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	810,
			"primary_score":	999860,
			"second_score":	425
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	812,
			"primary_score":	999860,
			"second_score":	422
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	814,
			"primary_score":	999860,
			"second_score":	416
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	822,
			"primary_score":	999917,
			"second_score":	415
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	823,
			"primary_score":	999918,
			"second_score":	414
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	824,
			"primary_score":	999918,
			"second_score":	412
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	827,
			"primary_score":	999917,
			"second_score":	408
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	830,
			"primary_score":	999917,
			"second_score":	370
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	831,
			"primary_score":	999917,
			"second_score":	369
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	832,
			"primary_score":	999917,
			"second_score":	368
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	834,
			"primary_score":	999917,
			"second_score":	367
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	835,
			"primary_score":	999917,
			"second_score":	366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1151,
			"primary_score":	999859,
			"second_score":	656
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1153,
			"primary_score":	999859,
			"second_score":	655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1154,
			"primary_score":	999859,
			"second_score":	654
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1155,
			"primary_score":	999859,
			"second_score":	653
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1161,
			"primary_score":	999859,
			"second_score":	652
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1163,
			"primary_score":	999859,
			"second_score":	651
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1164,
			"primary_score":	999859,
			"second_score":	650
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1167,
			"primary_score":	999859,
			"second_score":	649
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1168,
			"primary_score":	999859,
			"second_score":	615
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1178,
			"primary_score":	999859,
			"second_score":	613
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1179,
			"primary_score":	999859,
			"second_score":	612
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1731,
			"primary_score":	999692,
			"second_score":	123372
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1733,
			"primary_score":	999692,
			"second_score":	123371
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1734,
			"primary_score":	999692,
			"second_score":	123370
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1736,
			"primary_score":	999692,
			"second_score":	123369
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1737,
			"primary_score":	999692,
			"second_score":	123368
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1739,
			"primary_score":	999692,
			"second_score":	123367
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1746,
			"primary_score":	999692,
			"second_score":	123366
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1749,
			"primary_score":	999692,
			"second_score":	123302
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1750,
			"primary_score":	999692,
			"second_score":	123301
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1919,
			"primary_score":	999692,
			"second_score":	125214
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1921,
			"primary_score":	999692,
			"second_score":	125213
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1923,
			"primary_score":	999692,
			"second_score":	125212
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1925,
			"primary_score":	999692,
			"second_score":	125206
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1927,
			"primary_score":	999692,
			"second_score":	125205
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1931,
			"primary_score":	999692,
			"second_score":	125192
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1933,
			"primary_score":	999692,
			"second_score":	125190
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1935,
			"primary_score":	999692,
			"second_score":	125189
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1940,
			"primary_score":	999692,
			"second_score":	121663
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1941,
			"primary_score":	999692,
			"second_score":	121662
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1944,
			"primary_score":	999692,
			"second_score":	121661
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1945,
			"primary_score":	999692,
			"second_score":	121660
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1947,
			"primary_score":	999692,
			"second_score":	121659
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1948,
			"primary_score":	999692,
			"second_score":	121658
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1951,
			"primary_score":	999692,
			"second_score":	121013
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1952,
			"primary_score":	999692,
			"second_score":	121012
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1954,
			"primary_score":	999692,
			"second_score":	121011
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1956,
			"primary_score":	999692,
			"second_score":	121010
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1957,
			"primary_score":	999692,
			"second_score":	120986
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1958,
			"primary_score":	999692,
			"second_score":	120978
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1959,
			"primary_score":	999692,
			"second_score":	120975
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1978,
			"primary_score":	999692,
			"second_score":	121657
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2077,
			"primary_score":	999692,
			"second_score":	135742
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2079,
			"primary_score":	999692,
			"second_score":	135741
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2080,
			"primary_score":	999692,
			"second_score":	135740
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2084,
			"primary_score":	999692,
			"second_score":	135739
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2085,
			"primary_score":	999692,
			"second_score":	135738
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2086,
			"primary_score":	999692,
			"second_score":	135737
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2089,
			"primary_score":	999692,
			"second_score":	135736
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2091,
			"primary_score":	999692,
			"second_score":	135735
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2092,
			"primary_score":	999692,
			"second_score":	135711
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2093,
			"primary_score":	999692,
			"second_score":	135703
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2094,
			"primary_score":	999692,
			"second_score":	135702
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2096,
			"primary_score":	999692,
			"second_score":	135696
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2099,
			"primary_score":	999692,
			"second_score":	135692
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2100,
			"primary_score":	999692,
			"second_score":	135691
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6005,
			"primary_score":	999692,
			"second_score":	121715
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6006,
			"primary_score":	999692,
			"second_score":	121714
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6007,
			"primary_score":	999692,
			"second_score":	121713
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6008,
			"primary_score":	999692,
			"second_score":	121712
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6010,
			"primary_score":	999692,
			"second_score":	121711
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6011,
			"primary_score":	999692,
			"second_score":	121710
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6013,
			"primary_score":	999692,
			"second_score":	121708
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6020,
			"primary_score":	999692,
			"second_score":	121707
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6023,
			"primary_score":	999692,
			"second_score":	121694
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6024,
			"primary_score":	999692,
			"second_score":	121668
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6025,
			"primary_score":	999692,
			"second_score":	121667
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10190,
			"primary_score":	999692,
			"second_score":	123512
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10191,
			"primary_score":	999692,
			"second_score":	123511
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10192,
			"primary_score":	999692,
			"second_score":	123510
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10193,
			"primary_score":	999692,
			"second_score":	123509
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10195,
			"primary_score":	999692,
			"second_score":	123508
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10196,
			"primary_score":	999692,
			"second_score":	123507
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10198,
			"primary_score":	999692,
			"second_score":	123496
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10205,
			"primary_score":	999692,
			"second_score":	123495
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10208,
			"primary_score":	999692,
			"second_score":	123431
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10209,
			"primary_score":	999692,
			"second_score":	123377
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10210,
			"primary_score":	999692,
			"second_score":	123376
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10223,
			"primary_score":	999692,
			"second_score":	122773
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10224,
			"primary_score":	999692,
			"second_score":	122772
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10225,
			"primary_score":	999692,
			"second_score":	122771
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10226,
			"primary_score":	999692,
			"second_score":	122770
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10228,
			"primary_score":	999692,
			"second_score":	122769
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10229,
			"primary_score":	999692,
			"second_score":	122768
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10231,
			"primary_score":	999692,
			"second_score":	122757
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10234,
			"primary_score":	999692,
			"second_score":	122756
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10235,
			"primary_score":	999692,
			"second_score":	122751
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10236,
			"primary_score":	999692,
			"second_score":	122720
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10240,
			"primary_score":	999692,
			"second_score":	122719
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10248,
			"primary_score":	999692,
			"second_score":	122718
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10531,
			"primary_score":	999692,
			"second_score":	125276
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10532,
			"primary_score":	999692,
			"second_score":	125275
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10533,
			"primary_score":	999692,
			"second_score":	125274
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10534,
			"primary_score":	999692,
			"second_score":	125273
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10536,
			"primary_score":	999692,
			"second_score":	125262
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10540,
			"primary_score":	999692,
			"second_score":	125261
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10549,
			"primary_score":	999692,
			"second_score":	125259
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10550,
			"primary_score":	999692,
			"second_score":	125257
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10551,
			"primary_score":	999692,
			"second_score":	125253
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10553,
			"primary_score":	999692,
			"second_score":	125219
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10554,
			"primary_score":	999692,
			"second_score":	125218
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10559,
			"primary_score":	999692,
			"second_score":	125283
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10560,
			"primary_score":	999692,
			"second_score":	125282
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10561,
			"primary_score":	999692,
			"second_score":	125281
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10563,
			"primary_score":	999692,
			"second_score":	125280
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10564,
			"primary_score":	999692,
			"second_score":	125279
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10565,
			"primary_score":	999692,
			"second_score":	125278
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10566,
			"primary_score":	999692,
			"second_score":	125277
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11273,
			"primary_score":	999692,
			"second_score":	121832
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11274,
			"primary_score":	999692,
			"second_score":	121831
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11275,
			"primary_score":	999692,
			"second_score":	121830
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11277,
			"primary_score":	999692,
			"second_score":	121829
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11278,
			"primary_score":	999692,
			"second_score":	121828
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11280,
			"primary_score":	999692,
			"second_score":	121817
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11281,
			"primary_score":	999692,
			"second_score":	121814
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11282,
			"primary_score":	999692,
			"second_score":	121813
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11284,
			"primary_score":	999692,
			"second_score":	121779
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11285,
			"primary_score":	999692,
			"second_score":	121725
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11286,
			"primary_score":	999692,
			"second_score":	121724
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39418,
			"primary_score":	999692,
			"second_score":	136039
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39437,
			"primary_score":	999692,
			"second_score":	136038
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39442,
			"primary_score":	999692,
			"second_score":	136040
		}, {
			"file":	"ext/date/php_date.c",
			"line":	626,
			"primary_score":	999692,
			"second_score":	120502
		}, {
			"file":	"ext/date/php_date.c",
			"line":	629,
			"primary_score":	999692,
			"second_score":	120501
		}, {
			"file":	"ext/date/php_date.c",
			"line":	630,
			"primary_score":	999692,
			"second_score":	120500
		}, {
			"file":	"ext/date/php_date.c",
			"line":	635,
			"primary_score":	999692,
			"second_score":	120499
		}, {
			"file":	"ext/date/php_date.c",
			"line":	640,
			"primary_score":	999692,
			"second_score":	120498
		}, {
			"file":	"ext/date/php_date.c",
			"line":	789,
			"primary_score":	999692,
			"second_score":	54363
		}, {
			"file":	"ext/date/php_date.c",
			"line":	791,
			"primary_score":	999692,
			"second_score":	53684
		}, {
			"file":	"ext/date/php_date.c",
			"line":	795,
			"primary_score":	999692,
			"second_score":	53683
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2264,
			"primary_score":	999999,
			"second_score":	538
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2265,
			"primary_score":	999999,
			"second_score":	537
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2267,
			"primary_score":	999999,
			"second_score":	536
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2268,
			"primary_score":	999999,
			"second_score":	455
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2269,
			"primary_score":	999999,
			"second_score":	454
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2273,
			"primary_score":	999999,
			"second_score":	453
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2274,
			"primary_score":	999999,
			"second_score":	448
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2276,
			"primary_score":	999999,
			"second_score":	445
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2277,
			"primary_score":	999999,
			"second_score":	428
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2279,
			"primary_score":	999999,
			"second_score":	427
		}, {
			"file":	"ext/date/php_date.c",
			"line":	2284,
			"primary_score":	999999,
			"second_score":	539
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3741,
			"primary_score":	999999,
			"second_score":	227
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3742,
			"primary_score":	999999,
			"second_score":	226
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3743,
			"primary_score":	999999,
			"second_score":	225
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3744,
			"primary_score":	999999,
			"second_score":	224
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3745,
			"primary_score":	999999,
			"second_score":	223
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3746,
			"primary_score":	999999,
			"second_score":	222
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3747,
			"primary_score":	999999,
			"second_score":	221
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3748,
			"primary_score":	999999,
			"second_score":	220
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3749,
			"primary_score":	999999,
			"second_score":	219
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3751,
			"primary_score":	999999,
			"second_score":	218
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3752,
			"primary_score":	999999,
			"second_score":	208
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3753,
			"primary_score":	999999,
			"second_score":	165
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3754,
			"primary_score":	999999,
			"second_score":	122
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3762,
			"primary_score":	999999,
			"second_score":	7
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3763,
			"primary_score":	999999,
			"second_score":	4
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3765,
			"primary_score":	999999,
			"second_score":	3
		}, {
			"file":	"ext/date/php_date.c",
			"line":	3785,
			"primary_score":	999999,
			"second_score":	2
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	910,
			"primary_score":	999692,
			"second_score":	59427
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	911,
			"primary_score":	999692,
			"second_score":	59412
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	912,
			"primary_score":	999692,
			"second_score":	59397
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	913,
			"primary_score":	999692,
			"second_score":	59382
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	914,
			"primary_score":	999692,
			"second_score":	59163
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	915,
			"primary_score":	999692,
			"second_score":	59058
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	916,
			"primary_score":	999692,
			"second_score":	59001
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	917,
			"primary_score":	999692,
			"second_score":	58986
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	918,
			"primary_score":	999692,
			"second_score":	58971
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	919,
			"primary_score":	999692,
			"second_score":	58854
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	920,
			"primary_score":	999692,
			"second_score":	58719
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	921,
			"primary_score":	999692,
			"second_score":	58602
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	922,
			"primary_score":	999692,
			"second_score":	58479
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	923,
			"primary_score":	999692,
			"second_score":	58458
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	924,
			"primary_score":	999692,
			"second_score":	58413
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	925,
			"primary_score":	999692,
			"second_score":	58374
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	926,
			"primary_score":	999692,
			"second_score":	58233
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	927,
			"primary_score":	999692,
			"second_score":	58116
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	928,
			"primary_score":	999692,
			"second_score":	57975
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	930,
			"primary_score":	999692,
			"second_score":	57858
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	932,
			"primary_score":	999692,
			"second_score":	57843
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	939,
			"primary_score":	999692,
			"second_score":	57690
		}, {
			"file":	"ext/ereg/ereg.c",
			"line":	230,
			"primary_score":	999692,
			"second_score":	54748
		}, {
			"file":	"ext/filter/filter.c",
			"line":	287,
			"primary_score":	999692,
			"second_score":	60835
		}, {
			"file":	"ext/filter/filter.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	60194
		}, {
			"file":	"ext/filter/filter.c",
			"line":	303,
			"primary_score":	999692,
			"second_score":	120995
		}, {
			"file":	"ext/filter/filter.c",
			"line":	304,
			"primary_score":	999692,
			"second_score":	120994
		}, {
			"file":	"ext/filter/filter.c",
			"line":	305,
			"primary_score":	999692,
			"second_score":	120993
		}, {
			"file":	"ext/filter/filter.c",
			"line":	306,
			"primary_score":	999692,
			"second_score":	120992
		}, {
			"file":	"ext/filter/filter.c",
			"line":	307,
			"primary_score":	999692,
			"second_score":	120524
		}, {
			"file":	"ext/filter/filter.c",
			"line":	308,
			"primary_score":	999692,
			"second_score":	120523
		}, {
			"file":	"ext/filter/filter.c",
			"line":	309,
			"primary_score":	999692,
			"second_score":	120522
		}, {
			"file":	"ext/filter/filter.c",
			"line":	405,
			"primary_score":	999692,
			"second_score":	153727
		}, {
			"file":	"ext/filter/filter.c",
			"line":	406,
			"primary_score":	999692,
			"second_score":	153726
		}, {
			"file":	"ext/filter/filter.c",
			"line":	407,
			"primary_score":	999692,
			"second_score":	153725
		}, {
			"file":	"ext/filter/filter.c",
			"line":	409,
			"primary_score":	999692,
			"second_score":	153724
		}, {
			"file":	"ext/filter/filter.c",
			"line":	424,
			"primary_score":	999692,
			"second_score":	153723
		}, {
			"file":	"ext/filter/filter.c",
			"line":	428,
			"primary_score":	999692,
			"second_score":	158188
		}, {
			"file":	"ext/filter/filter.c",
			"line":	442,
			"primary_score":	999692,
			"second_score":	153719
		}, {
			"file":	"ext/filter/filter.c",
			"line":	446,
			"primary_score":	999692,
			"second_score":	153718
		}, {
			"file":	"ext/filter/filter.c",
			"line":	448,
			"primary_score":	999692,
			"second_score":	153717
		}, {
			"file":	"ext/filter/filter.c",
			"line":	449,
			"primary_score":	999692,
			"second_score":	153716
		}, {
			"file":	"ext/filter/filter.c",
			"line":	450,
			"primary_score":	999692,
			"second_score":	153606
		}, {
			"file":	"ext/filter/filter.c",
			"line":	452,
			"primary_score":	999692,
			"second_score":	153605
		}, {
			"file":	"ext/filter/filter.c",
			"line":	455,
			"primary_score":	999692,
			"second_score":	153260
		}, {
			"file":	"ext/filter/filter.c",
			"line":	457,
			"primary_score":	999692,
			"second_score":	154200
		}, {
			"file":	"ext/filter/filter.c",
			"line":	458,
			"primary_score":	999692,
			"second_score":	154199
		}, {
			"file":	"ext/filter/filter.c",
			"line":	460,
			"primary_score":	999692,
			"second_score":	154198
		}, {
			"file":	"ext/filter/filter.c",
			"line":	465,
			"primary_score":	999692,
			"second_score":	154197
		}, {
			"file":	"ext/filter/filter.c",
			"line":	468,
			"primary_score":	999692,
			"second_score":	154196
		}, {
			"file":	"ext/filter/filter.c",
			"line":	471,
			"primary_score":	999692,
			"second_score":	153259
		}, {
			"file":	"ext/filter/filter.c",
			"line":	474,
			"primary_score":	999692,
			"second_score":	153145
		}, {
			"file":	"ext/filter/filter.c",
			"line":	475,
			"primary_score":	999692,
			"second_score":	153144
		}, {
			"file":	"ext/filter/filter.c",
			"line":	478,
			"primary_score":	999692,
			"second_score":	152796
		}, {
			"file":	"ext/filter/filter.c",
			"line":	491,
			"primary_score":	999692,
			"second_score":	152795
		}, {
			"file":	"ext/hash/hash.c",
			"line":	889,
			"primary_score":	999692,
			"second_score":	61714
		}, {
			"file":	"ext/hash/hash.c",
			"line":	891,
			"primary_score":	999692,
			"second_score":	61435
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	63041
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	290,
			"primary_score":	999692,
			"second_score":	62990
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	291,
			"primary_score":	999692,
			"second_score":	62307
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2852,
			"primary_score":	999692,
			"second_score":	63040
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2856,
			"primary_score":	999692,
			"second_score":	62991
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	581,
			"primary_score":	999692,
			"second_score":	55192
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	583,
			"primary_score":	999692,
			"second_score":	55191
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	585,
			"primary_score":	999692,
			"second_score":	55190
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	586,
			"primary_score":	999692,
			"second_score":	55189
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	587,
			"primary_score":	999692,
			"second_score":	55170
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	683,
			"primary_score":	999692,
			"second_score":	55194
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	690,
			"primary_score":	999692,
			"second_score":	55193
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	692,
			"primary_score":	999692,
			"second_score":	55169
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	699,
			"primary_score":	999692,
			"second_score":	120518
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	700,
			"primary_score":	999692,
			"second_score":	120517
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	701,
			"primary_score":	999692,
			"second_score":	120516
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	703,
			"primary_score":	999692,
			"second_score":	120515
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	704,
			"primary_score":	999692,
			"second_score":	120514
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	707,
			"primary_score":	999692,
			"second_score":	120513
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	711,
			"primary_score":	999692,
			"second_score":	120512
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	712,
			"primary_score":	999692,
			"second_score":	120508
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	717,
			"primary_score":	999692,
			"second_score":	120507
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	719,
			"primary_score":	999692,
			"second_score":	120506
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	113,
			"primary_score":	999692,
			"second_score":	55714
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	163,
			"primary_score":	999692,
			"second_score":	56342
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	165,
			"primary_score":	999692,
			"second_score":	55718
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	199,
			"primary_score":	999692,
			"second_score":	98987
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	98968
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	389,
			"primary_score":	999692,
			"second_score":	65461
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	390,
			"primary_score":	999692,
			"second_score":	65452
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	391,
			"primary_score":	999692,
			"second_score":	64112
		}, {
			"file":	"ext/pdo/pdo_sqlstate.c",
			"line":	309,
			"primary_score":	999692,
			"second_score":	65451
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	87,
			"primary_score":	999692,
			"second_score":	98988
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	88,
			"primary_score":	999692,
			"second_score":	98930
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1102,
			"primary_score":	999692,
			"second_score":	99891
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1104,
			"primary_score":	999692,
			"second_score":	99890
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1105,
			"primary_score":	999692,
			"second_score":	99865
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1106,
			"primary_score":	999692,
			"second_score":	99828
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1107,
			"primary_score":	999692,
			"second_score":	99801
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1108,
			"primary_score":	999692,
			"second_score":	99775
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1109,
			"primary_score":	999692,
			"second_score":	99748
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1110,
			"primary_score":	999692,
			"second_score":	99717
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1111,
			"primary_score":	999692,
			"second_score":	99688
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1112,
			"primary_score":	999692,
			"second_score":	99659
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1113,
			"primary_score":	999692,
			"second_score":	99631
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1114,
			"primary_score":	999692,
			"second_score":	99602
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1115,
			"primary_score":	999692,
			"second_score":	99573
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1116,
			"primary_score":	999692,
			"second_score":	99544
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1117,
			"primary_score":	999692,
			"second_score":	99515
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1118,
			"primary_score":	999692,
			"second_score":	99486
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1119,
			"primary_score":	999692,
			"second_score":	99458
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1120,
			"primary_score":	999692,
			"second_score":	99427
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1121,
			"primary_score":	999692,
			"second_score":	99396
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1122,
			"primary_score":	999692,
			"second_score":	99363
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1123,
			"primary_score":	999692,
			"second_score":	99338
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1124,
			"primary_score":	999692,
			"second_score":	99314
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1125,
			"primary_score":	999692,
			"second_score":	99284
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3332,
			"primary_score":	999692,
			"second_score":	146235
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3333,
			"primary_score":	999692,
			"second_score":	146234
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3334,
			"primary_score":	999692,
			"second_score":	146233
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3335,
			"primary_score":	999692,
			"second_score":	146232
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3337,
			"primary_score":	999692,
			"second_score":	146231
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3340,
			"primary_score":	999692,
			"second_score":	146230
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3389,
			"primary_score":	999692,
			"second_score":	146229
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3390,
			"primary_score":	999692,
			"second_score":	146223
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3391,
			"primary_score":	999692,
			"second_score":	146222
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3394,
			"primary_score":	999692,
			"second_score":	136002
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3396,
			"primary_score":	999692,
			"second_score":	136000
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3400,
			"primary_score":	999692,
			"second_score":	135999
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3404,
			"primary_score":	999692,
			"second_score":	135998
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3527,
			"primary_score":	999692,
			"second_score":	99276
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3557,
			"primary_score":	999692,
			"second_score":	99929
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3559,
			"primary_score":	999692,
			"second_score":	99892
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3561,
			"primary_score":	999692,
			"second_score":	99283
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3562,
			"primary_score":	999692,
			"second_score":	99282
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3570,
			"primary_score":	999692,
			"second_score":	99281
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3575,
			"primary_score":	999692,
			"second_score":	99280
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3617,
			"primary_score":	999692,
			"second_score":	121083
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3619,
			"primary_score":	999692,
			"second_score":	121082
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3621,
			"primary_score":	999692,
			"second_score":	121081
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3657,
			"primary_score":	999692,
			"second_score":	121080
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3658,
			"primary_score":	999692,
			"second_score":	121079
		}, {
			"file":	"ext/session/session.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	121016
		}, {
			"file":	"ext/session/session.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	121015
		}, {
			"file":	"ext/session/session.c",
			"line":	103,
			"primary_score":	999692,
			"second_score":	121014
		}, {
			"file":	"ext/session/session.c",
			"line":	1441,
			"primary_score":	999692,
			"second_score":	121018
		}, {
			"file":	"ext/session/session.c",
			"line":	1958,
			"primary_score":	999692,
			"second_score":	121020
		}, {
			"file":	"ext/session/session.c",
			"line":	1960,
			"primary_score":	999692,
			"second_score":	121019
		}, {
			"file":	"ext/session/session.c",
			"line":	1961,
			"primary_score":	999692,
			"second_score":	121017
		}, {
			"file":	"ext/session/session.c",
			"line":	1964,
			"primary_score":	999692,
			"second_score":	121013
		}, {
			"file":	"ext/session/session.c",
			"line":	1965,
			"primary_score":	999692,
			"second_score":	121007
		}, {
			"file":	"ext/session/session.c",
			"line":	1971,
			"primary_score":	999692,
			"second_score":	121006
		}, {
			"file":	"ext/session/session.c",
			"line":	2013,
			"primary_score":	999692,
			"second_score":	67921
		}, {
			"file":	"ext/session/session.c",
			"line":	2019,
			"primary_score":	999692,
			"second_score":	66489
		}, {
			"file":	"ext/session/session.c",
			"line":	2020,
			"primary_score":	999692,
			"second_score":	66488
		}, {
			"file":	"ext/session/session.c",
			"line":	2022,
			"primary_score":	999692,
			"second_score":	66487
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2600,
			"primary_score":	999692,
			"second_score":	98889
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2601,
			"primary_score":	999692,
			"second_score":	98888
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	919,
			"primary_score":	999692,
			"second_score":	121002
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	924,
			"primary_score":	999692,
			"second_score":	121001
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	929,
			"primary_score":	999692,
			"second_score":	121000
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	932,
			"primary_score":	999692,
			"second_score":	120999
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2140,
			"primary_score":	999692,
			"second_score":	56986
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2142,
			"primary_score":	999692,
			"second_score":	56377
		}, {
			"file":	"ext/standard/array.c",
			"line":	138,
			"primary_score":	999692,
			"second_score":	98467
		}, {
			"file":	"ext/standard/assert.c",
			"line":	114,
			"primary_score":	999692,
			"second_score":	98465
		}, {
			"file":	"ext/standard/assert.c",
			"line":	118,
			"primary_score":	999692,
			"second_score":	98464
		}, {
			"file":	"ext/standard/assert.c",
			"line":	124,
			"primary_score":	999692,
			"second_score":	121054
		}, {
			"file":	"ext/standard/assert.c",
			"line":	129,
			"primary_score":	999692,
			"second_score":	121053
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3470,
			"primary_score":	999692,
			"second_score":	98661
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3471,
			"primary_score":	999692,
			"second_score":	98660
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3472,
			"primary_score":	999692,
			"second_score":	98621
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3645,
			"primary_score":	999692,
			"second_score":	98665
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3653,
			"primary_score":	999692,
			"second_score":	98662
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3659,
			"primary_score":	999692,
			"second_score":	98620
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3661,
			"primary_score":	999692,
			"second_score":	98579
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3662,
			"primary_score":	999692,
			"second_score":	98541
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3665,
			"primary_score":	999692,
			"second_score":	98504
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3666,
			"primary_score":	999692,
			"second_score":	98468
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3667,
			"primary_score":	999692,
			"second_score":	98466
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3668,
			"primary_score":	999692,
			"second_score":	98463
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3669,
			"primary_score":	999692,
			"second_score":	97386
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3670,
			"primary_score":	999692,
			"second_score":	97383
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3675,
			"primary_score":	999692,
			"second_score":	97061
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3678,
			"primary_score":	999692,
			"second_score":	97058
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3708,
			"primary_score":	999692,
			"second_score":	173244
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3709,
			"primary_score":	999692,
			"second_score":	173241
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3712,
			"primary_score":	999692,
			"second_score":	173238
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3715,
			"primary_score":	999692,
			"second_score":	173237
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3718,
			"primary_score":	999692,
			"second_score":	173236
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3720,
			"primary_score":	999692,
			"second_score":	173235
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3726,
			"primary_score":	999692,
			"second_score":	121075
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3729,
			"primary_score":	999692,
			"second_score":	121074
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3730,
			"primary_score":	999692,
			"second_score":	121073
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3732,
			"primary_score":	999692,
			"second_score":	121072
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3735,
			"primary_score":	999692,
			"second_score":	121064
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3741,
			"primary_score":	999692,
			"second_score":	121063
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3746,
			"primary_score":	999692,
			"second_score":	121062
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3747,
			"primary_score":	999692,
			"second_score":	121060
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3752,
			"primary_score":	999692,
			"second_score":	121059
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3758,
			"primary_score":	999692,
			"second_score":	121055
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3759,
			"primary_score":	999692,
			"second_score":	121052
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3760,
			"primary_score":	999692,
			"second_score":	121041
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3765,
			"primary_score":	999692,
			"second_score":	121030
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3771,
			"primary_score":	999692,
			"second_score":	121029
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3773,
			"primary_score":	999692,
			"second_score":	121026
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3774,
			"primary_score":	999692,
			"second_score":	121025
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3775,
			"primary_score":	999692,
			"second_score":	121024
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4526,
			"primary_score":	999692,
			"second_score":	124326
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4527,
			"primary_score":	999692,
			"second_score":	124325
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4528,
			"primary_score":	999692,
			"second_score":	124324
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4530,
			"primary_score":	999692,
			"second_score":	124323
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4534,
			"primary_score":	999692,
			"second_score":	124256
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4536,
			"primary_score":	999692,
			"second_score":	124225
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4545,
			"primary_score":	999692,
			"second_score":	124224
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5006,
			"primary_score":	999692,
			"second_score":	121227
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5018,
			"primary_score":	999692,
			"second_score":	120493
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5024,
			"primary_score":	999692,
			"second_score":	120492
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	234,
			"primary_score":	999692,
			"second_score":	98503
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	98470
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	238,
			"primary_score":	999692,
			"second_score":	98469
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	130,
			"primary_score":	999692,
			"second_score":	97060
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	133,
			"primary_score":	999692,
			"second_score":	97059
		}, {
			"file":	"ext/standard/dir.c",
			"line":	127,
			"primary_score":	999692,
			"second_score":	173243
		}, {
			"file":	"ext/standard/dir.c",
			"line":	128,
			"primary_score":	999692,
			"second_score":	173242
		}, {
			"file":	"ext/standard/file.c",
			"line":	318,
			"primary_score":	999692,
			"second_score":	97385
		}, {
			"file":	"ext/standard/file.c",
			"line":	320,
			"primary_score":	999692,
			"second_score":	97384
		}, {
			"file":	"ext/standard/file.c",
			"line":	2342,
			"primary_score":	999692,
			"second_score":	124020
		}, {
			"file":	"ext/standard/file.c",
			"line":	2343,
			"primary_score":	999692,
			"second_score":	124019
		}, {
			"file":	"ext/standard/file.c",
			"line":	2344,
			"primary_score":	999692,
			"second_score":	124018
		}, {
			"file":	"ext/standard/file.c",
			"line":	2346,
			"primary_score":	999692,
			"second_score":	124017
		}, {
			"file":	"ext/standard/file.c",
			"line":	2350,
			"primary_score":	999692,
			"second_score":	123907
		}, {
			"file":	"ext/standard/file.c",
			"line":	2351,
			"primary_score":	999692,
			"second_score":	123704
		}, {
			"file":	"ext/standard/file.c",
			"line":	2360,
			"primary_score":	999692,
			"second_score":	123700
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	110,
			"primary_score":	999692,
			"second_score":	121058
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	114,
			"primary_score":	999692,
			"second_score":	121057
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	118,
			"primary_score":	999692,
			"second_score":	121056
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2148,
			"primary_score":	999692,
			"second_score":	97382
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2150,
			"primary_score":	999692,
			"second_score":	97381
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2151,
			"primary_score":	999692,
			"second_score":	97102
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2153,
			"primary_score":	999692,
			"second_score":	97062
		}, {
			"file":	"ext/standard/head.c",
			"line":	68,
			"primary_score":	999692,
			"second_score":	126847
		}, {
			"file":	"ext/standard/head.c",
			"line":	71,
			"primary_score":	999692,
			"second_score":	126746
		}, {
			"file":	"ext/standard/info.c",
			"line":	527,
			"primary_score":	999692,
			"second_score":	125443
		}, {
			"file":	"ext/standard/info.c",
			"line":	528,
			"primary_score":	999692,
			"second_score":	125442
		}, {
			"file":	"ext/standard/info.c",
			"line":	577,
			"primary_score":	999692,
			"second_score":	125441
		}, {
			"file":	"ext/standard/info.c",
			"line":	578,
			"primary_score":	999692,
			"second_score":	125440
		}, {
			"file":	"ext/standard/info.c",
			"line":	605,
			"primary_score":	999692,
			"second_score":	125439
		}, {
			"file":	"ext/standard/info.c",
			"line":	607,
			"primary_score":	999692,
			"second_score":	125438
		}, {
			"file":	"ext/standard/info.c",
			"line":	609,
			"primary_score":	999692,
			"second_score":	125437
		}, {
			"file":	"ext/standard/info.c",
			"line":	611,
			"primary_score":	999692,
			"second_score":	125436
		}, {
			"file":	"ext/standard/info.c",
			"line":	613,
			"primary_score":	999692,
			"second_score":	125435
		}, {
			"file":	"ext/standard/info.c",
			"line":	616,
			"primary_score":	999692,
			"second_score":	125434
		}, {
			"file":	"ext/standard/info.c",
			"line":	619,
			"primary_score":	999692,
			"second_score":	124751
		}, {
			"file":	"ext/standard/info.c",
			"line":	627,
			"primary_score":	999692,
			"second_score":	124750
		}, {
			"file":	"ext/standard/info.c",
			"line":	1153,
			"primary_score":	999692,
			"second_score":	126392
		}, {
			"file":	"ext/standard/info.c",
			"line":	1154,
			"primary_score":	999692,
			"second_score":	126391
		}, {
			"file":	"ext/standard/info.c",
			"line":	1156,
			"primary_score":	999692,
			"second_score":	126390
		}, {
			"file":	"ext/standard/info.c",
			"line":	1160,
			"primary_score":	999692,
			"second_score":	126352
		}, {
			"file":	"ext/standard/info.c",
			"line":	1161,
			"primary_score":	999692,
			"second_score":	126351
		}, {
			"file":	"ext/standard/info.c",
			"line":	1280,
			"primary_score":	999692,
			"second_score":	125486
		}, {
			"file":	"ext/standard/info.c",
			"line":	1281,
			"primary_score":	999692,
			"second_score":	125485
		}, {
			"file":	"ext/standard/info.c",
			"line":	1283,
			"primary_score":	999692,
			"second_score":	125484
		}, {
			"file":	"ext/standard/info.c",
			"line":	1286,
			"primary_score":	999692,
			"second_score":	125446
		}, {
			"file":	"ext/standard/info.c",
			"line":	1295,
			"primary_score":	999692,
			"second_score":	122514
		}, {
			"file":	"ext/standard/info.c",
			"line":	1299,
			"primary_score":	999692,
			"second_score":	122481
		}, {
			"file":	"ext/standard/info.c",
			"line":	1302,
			"primary_score":	999692,
			"second_score":	122480
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	162,
			"primary_score":	999692,
			"second_score":	149674
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	163,
			"primary_score":	999692,
			"second_score":	149673
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	164,
			"primary_score":	999692,
			"second_score":	149672
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	165,
			"primary_score":	999692,
			"second_score":	149671
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	166,
			"primary_score":	999692,
			"second_score":	149670
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	167,
			"primary_score":	999692,
			"second_score":	149669
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	169,
			"primary_score":	999692,
			"second_score":	149668
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	149667
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	173,
			"primary_score":	999692,
			"second_score":	149666
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	192,
			"primary_score":	999692,
			"second_score":	149665
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	149664
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	205,
			"primary_score":	999692,
			"second_score":	149663
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	149662
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	151366
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	222,
			"primary_score":	999692,
			"second_score":	151365
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	223,
			"primary_score":	999692,
			"second_score":	151364
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	224,
			"primary_score":	999692,
			"second_score":	151363
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	225,
			"primary_score":	999692,
			"second_score":	151362
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	228,
			"primary_score":	999692,
			"second_score":	151361
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	229,
			"primary_score":	999692,
			"second_score":	151360
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	234,
			"primary_score":	999692,
			"second_score":	149661
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	150454
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	236,
			"primary_score":	999692,
			"second_score":	150453
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	237,
			"primary_score":	999692,
			"second_score":	150452
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	238,
			"primary_score":	999692,
			"second_score":	150451
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	241,
			"primary_score":	999692,
			"second_score":	150450
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	242,
			"primary_score":	999692,
			"second_score":	150449
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	247,
			"primary_score":	999692,
			"second_score":	149660
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	248,
			"primary_score":	999692,
			"second_score":	149659
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	249,
			"primary_score":	999692,
			"second_score":	149658
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	250,
			"primary_score":	999692,
			"second_score":	149657
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	149656
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	254,
			"primary_score":	999692,
			"second_score":	149655
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	255,
			"primary_score":	999692,
			"second_score":	149654
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	336,
			"primary_score":	999692,
			"second_score":	149653
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	342,
			"primary_score":	999692,
			"second_score":	149652
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	343,
			"primary_score":	999692,
			"second_score":	149651
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	344,
			"primary_score":	999692,
			"second_score":	149650
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	345,
			"primary_score":	999692,
			"second_score":	149649
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	355,
			"primary_score":	999692,
			"second_score":	149647
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	356,
			"primary_score":	999692,
			"second_score":	149646
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	364,
			"primary_score":	999692,
			"second_score":	149196
		}, {
			"file":	"ext/standard/string.c",
			"line":	1058,
			"primary_score":	999692,
			"second_score":	124921
		}, {
			"file":	"ext/standard/string.c",
			"line":	1059,
			"primary_score":	999692,
			"second_score":	124920
		}, {
			"file":	"ext/standard/string.c",
			"line":	1060,
			"primary_score":	999692,
			"second_score":	124919
		}, {
			"file":	"ext/standard/string.c",
			"line":	1061,
			"primary_score":	999692,
			"second_score":	124918
		}, {
			"file":	"ext/standard/string.c",
			"line":	1062,
			"primary_score":	999692,
			"second_score":	124917
		}, {
			"file":	"ext/standard/string.c",
			"line":	1063,
			"primary_score":	999692,
			"second_score":	124916
		}, {
			"file":	"ext/standard/string.c",
			"line":	1065,
			"primary_score":	999692,
			"second_score":	124915
		}, {
			"file":	"ext/standard/string.c",
			"line":	1067,
			"primary_score":	999692,
			"second_score":	124912
		}, {
			"file":	"ext/standard/string.c",
			"line":	1071,
			"primary_score":	999692,
			"second_score":	124911
		}, {
			"file":	"ext/standard/string.c",
			"line":	1073,
			"primary_score":	999692,
			"second_score":	124907
		}, {
			"file":	"ext/standard/string.c",
			"line":	1074,
			"primary_score":	999692,
			"second_score":	123866
		}, {
			"file":	"ext/standard/string.c",
			"line":	1076,
			"primary_score":	999692,
			"second_score":	124895
		}, {
			"file":	"ext/standard/string.c",
			"line":	1077,
			"primary_score":	999692,
			"second_score":	123857
		}, {
			"file":	"ext/standard/string.c",
			"line":	1124,
			"primary_score":	999692,
			"second_score":	123856
		}, {
			"file":	"ext/standard/string.c",
			"line":	1125,
			"primary_score":	999692,
			"second_score":	123887
		}, {
			"file":	"ext/standard/string.c",
			"line":	1127,
			"primary_score":	999692,
			"second_score":	123855
		}, {
			"file":	"ext/standard/string.c",
			"line":	1129,
			"primary_score":	999692,
			"second_score":	123844
		}, {
			"file":	"ext/standard/string.c",
			"line":	1131,
			"primary_score":	999692,
			"second_score":	123841
		}, {
			"file":	"ext/standard/string.c",
			"line":	1132,
			"primary_score":	999692,
			"second_score":	123840
		}, {
			"file":	"ext/standard/string.c",
			"line":	1144,
			"primary_score":	999692,
			"second_score":	125022
		}, {
			"file":	"ext/standard/string.c",
			"line":	1146,
			"primary_score":	999692,
			"second_score":	125021
		}, {
			"file":	"ext/standard/string.c",
			"line":	1150,
			"primary_score":	999692,
			"second_score":	124929
		}, {
			"file":	"ext/standard/string.c",
			"line":	1163,
			"primary_score":	999692,
			"second_score":	124928
		}, {
			"file":	"ext/standard/string.c",
			"line":	1167,
			"primary_score":	999692,
			"second_score":	124927
		}, {
			"file":	"ext/standard/string.c",
			"line":	1168,
			"primary_score":	999692,
			"second_score":	124926
		}, {
			"file":	"ext/standard/string.c",
			"line":	1169,
			"primary_score":	999692,
			"second_score":	124925
		}, {
			"file":	"ext/standard/string.c",
			"line":	1170,
			"primary_score":	999692,
			"second_score":	124923
		}, {
			"file":	"ext/standard/string.c",
			"line":	1177,
			"primary_score":	999692,
			"second_score":	124922
		}, {
			"file":	"ext/standard/string.c",
			"line":	1179,
			"primary_score":	999692,
			"second_score":	123831
		}, {
			"file":	"ext/standard/string.c",
			"line":	3536,
			"primary_score":	999692,
			"second_score":	122060
		}, {
			"file":	"ext/standard/string.c",
			"line":	3539,
			"primary_score":	999692,
			"second_score":	122059
		}, {
			"file":	"ext/standard/string.c",
			"line":	3540,
			"primary_score":	999692,
			"second_score":	122058
		}, {
			"file":	"ext/standard/string.c",
			"line":	3543,
			"primary_score":	999692,
			"second_score":	122057
		}, {
			"file":	"ext/standard/string.c",
			"line":	3544,
			"primary_score":	999692,
			"second_score":	122012
		}, {
			"file":	"ext/standard/string.c",
			"line":	3545,
			"primary_score":	999692,
			"second_score":	122011
		}, {
			"file":	"ext/standard/string.c",
			"line":	3546,
			"primary_score":	999692,
			"second_score":	122010
		}, {
			"file":	"ext/standard/string.c",
			"line":	3547,
			"primary_score":	999692,
			"second_score":	121976
		}, {
			"file":	"ext/standard/string.c",
			"line":	3647,
			"primary_score":	999692,
			"second_score":	122205
		}, {
			"file":	"ext/standard/string.c",
			"line":	3648,
			"primary_score":	999692,
			"second_score":	122204
		}, {
			"file":	"ext/standard/string.c",
			"line":	3649,
			"primary_score":	999692,
			"second_score":	122203
		}, {
			"file":	"ext/standard/string.c",
			"line":	3650,
			"primary_score":	999692,
			"second_score":	122202
		}, {
			"file":	"ext/standard/string.c",
			"line":	3651,
			"primary_score":	999692,
			"second_score":	122201
		}, {
			"file":	"ext/standard/string.c",
			"line":	3652,
			"primary_score":	999692,
			"second_score":	122200
		}, {
			"file":	"ext/standard/string.c",
			"line":	3653,
			"primary_score":	999692,
			"second_score":	122199
		}, {
			"file":	"ext/standard/string.c",
			"line":	3655,
			"primary_score":	999692,
			"second_score":	122198
		}, {
			"file":	"ext/standard/string.c",
			"line":	3659,
			"primary_score":	999692,
			"second_score":	122076
		}, {
			"file":	"ext/standard/string.c",
			"line":	3660,
			"primary_score":	999692,
			"second_score":	122073
		}, {
			"file":	"ext/standard/string.c",
			"line":	3661,
			"primary_score":	999692,
			"second_score":	122070
		}, {
			"file":	"ext/standard/string.c",
			"line":	3664,
			"primary_score":	999692,
			"second_score":	122067
		}, {
			"file":	"ext/standard/string.c",
			"line":	3665,
			"primary_score":	999692,
			"second_score":	122066
		}, {
			"file":	"ext/standard/string.c",
			"line":	3666,
			"primary_score":	999692,
			"second_score":	122064
		}, {
			"file":	"ext/standard/string.c",
			"line":	3672,
			"primary_score":	999692,
			"second_score":	122062
		}, {
			"file":	"ext/standard/string.c",
			"line":	3703,
			"primary_score":	999692,
			"second_score":	122061
		}, {
			"file":	"ext/standard/string.c",
			"line":	3705,
			"primary_score":	999692,
			"second_score":	121975
		}, {
			"file":	"ext/standard/string.c",
			"line":	3716,
			"primary_score":	999692,
			"second_score":	122206
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	107,
			"primary_score":	999692,
			"second_score":	173245
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	121,
			"primary_score":	999692,
			"second_score":	98664
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	125,
			"primary_score":	999692,
			"second_score":	98663
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1083,
			"primary_score":	999692,
			"second_score":	98462
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1085,
			"primary_score":	999692,
			"second_score":	97387
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1090,
			"primary_score":	999692,
			"second_score":	173240
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1092,
			"primary_score":	999692,
			"second_score":	173239
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1097,
			"primary_score":	999692,
			"second_score":	121051
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1102,
			"primary_score":	999692,
			"second_score":	121050
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1103,
			"primary_score":	999692,
			"second_score":	121046
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1105,
			"primary_score":	999692,
			"second_score":	121042
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	129,
			"primary_score":	999692,
			"second_score":	121028
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	135,
			"primary_score":	999692,
			"second_score":	121027
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1378,
			"primary_score":	999692,
			"second_score":	101774
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1379,
			"primary_score":	999692,
			"second_score":	101681
		}, {
			"file":	"ext/xmlwriter/php_xmlwriter.c",
			"line":	1972,
			"primary_score":	999692,
			"second_score":	104464
		}, {
			"file":	"ext/zip/php_zip.c",
			"line":	2827,
			"primary_score":	999692,
			"second_score":	105140
		}, {
			"file":	"ext/zip/php_zip.c",
			"line":	2828,
			"primary_score":	999692,
			"second_score":	105101
		}, {
			"file":	"ext/zip/php_zip.c",
			"line":	2830,
			"primary_score":	999692,
			"second_score":	105064
		}, {
			"file":	"main/SAPI.c",
			"line":	69,
			"primary_score":	999692,
			"second_score":	3128
		}, {
			"file":	"main/SAPI.c",
			"line":	104,
			"primary_score":	999692,
			"second_score":	3129
		}, {
			"file":	"main/SAPI.c",
			"line":	107,
			"primary_score":	999692,
			"second_score":	3107
		}, {
			"file":	"main/SAPI.c",
			"line":	109,
			"primary_score":	999692,
			"second_score":	3106
		}, {
			"file":	"main/SAPI.c",
			"line":	119,
			"primary_score":	999692,
			"second_score":	126776
		}, {
			"file":	"main/SAPI.c",
			"line":	286,
			"primary_score":	999692,
			"second_score":	126839
		}, {
			"file":	"main/SAPI.c",
			"line":	287,
			"primary_score":	999692,
			"second_score":	126838
		}, {
			"file":	"main/SAPI.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	126837
		}, {
			"file":	"main/SAPI.c",
			"line":	290,
			"primary_score":	999692,
			"second_score":	126836
		}, {
			"file":	"main/SAPI.c",
			"line":	291,
			"primary_score":	999692,
			"second_score":	126835
		}, {
			"file":	"main/SAPI.c",
			"line":	296,
			"primary_score":	999692,
			"second_score":	126834
		}, {
			"file":	"main/SAPI.c",
			"line":	297,
			"primary_score":	999692,
			"second_score":	126833
		}, {
			"file":	"main/SAPI.c",
			"line":	298,
			"primary_score":	999692,
			"second_score":	126832
		}, {
			"file":	"main/SAPI.c",
			"line":	304,
			"primary_score":	999692,
			"second_score":	126831
		}, {
			"file":	"main/SAPI.c",
			"line":	316,
			"primary_score":	999692,
			"second_score":	126830
		}, {
			"file":	"main/SAPI.c",
			"line":	317,
			"primary_score":	999692,
			"second_score":	126829
		}, {
			"file":	"main/SAPI.c",
			"line":	318,
			"primary_score":	999692,
			"second_score":	126807
		}, {
			"file":	"main/SAPI.c",
			"line":	320,
			"primary_score":	999692,
			"second_score":	126806
		}, {
			"file":	"main/SAPI.c",
			"line":	482,
			"primary_score":	999692,
			"second_score":	115079
		}, {
			"file":	"main/SAPI.c",
			"line":	490,
			"primary_score":	999692,
			"second_score":	115120
		}, {
			"file":	"main/SAPI.c",
			"line":	491,
			"primary_score":	999692,
			"second_score":	115116
		}, {
			"file":	"main/SAPI.c",
			"line":	494,
			"primary_score":	999692,
			"second_score":	115115
		}, {
			"file":	"main/SAPI.c",
			"line":	496,
			"primary_score":	999692,
			"second_score":	115114
		}, {
			"file":	"main/SAPI.c",
			"line":	507,
			"primary_score":	999692,
			"second_score":	115113
		}, {
			"file":	"main/SAPI.c",
			"line":	510,
			"primary_score":	999692,
			"second_score":	115112
		}, {
			"file":	"main/SAPI.c",
			"line":	513,
			"primary_score":	999692,
			"second_score":	115111
		}, {
			"file":	"main/SAPI.c",
			"line":	516,
			"primary_score":	999692,
			"second_score":	115110
		}, {
			"file":	"main/SAPI.c",
			"line":	519,
			"primary_score":	999692,
			"second_score":	115109
		}, {
			"file":	"main/SAPI.c",
			"line":	522,
			"primary_score":	999692,
			"second_score":	115108
		}, {
			"file":	"main/SAPI.c",
			"line":	525,
			"primary_score":	999692,
			"second_score":	115107
		}, {
			"file":	"main/SAPI.c",
			"line":	526,
			"primary_score":	999692,
			"second_score":	115106
		}, {
			"file":	"main/SAPI.c",
			"line":	528,
			"primary_score":	999692,
			"second_score":	115102
		}, {
			"file":	"main/SAPI.c",
			"line":	531,
			"primary_score":	999692,
			"second_score":	115101
		}, {
			"file":	"main/SAPI.c",
			"line":	532,
			"primary_score":	999692,
			"second_score":	115100
		}, {
			"file":	"main/SAPI.c",
			"line":	533,
			"primary_score":	999692,
			"second_score":	115081
		}, {
			"file":	"main/SAPI.c",
			"line":	535,
			"primary_score":	999692,
			"second_score":	115080
		}, {
			"file":	"main/SAPI.c",
			"line":	536,
			"primary_score":	999692,
			"second_score":	115078
		}, {
			"file":	"main/SAPI.c",
			"line":	537,
			"primary_score":	999692,
			"second_score":	115077
		}, {
			"file":	"main/SAPI.c",
			"line":	538,
			"primary_score":	999692,
			"second_score":	115076
		}, {
			"file":	"main/SAPI.c",
			"line":	539,
			"primary_score":	999692,
			"second_score":	115075
		}, {
			"file":	"main/SAPI.c",
			"line":	608,
			"primary_score":	999692,
			"second_score":	126779
		}, {
			"file":	"main/SAPI.c",
			"line":	623,
			"primary_score":	999692,
			"second_score":	126777
		}, {
			"file":	"main/SAPI.c",
			"line":	812,
			"primary_score":	999692,
			"second_score":	121103
		}, {
			"file":	"main/SAPI.c",
			"line":	813,
			"primary_score":	999692,
			"second_score":	121102
		}, {
			"file":	"main/SAPI.c",
			"line":	815,
			"primary_score":	999692,
			"second_score":	121101
		}, {
			"file":	"main/SAPI.c",
			"line":	816,
			"primary_score":	999692,
			"second_score":	121100
		}, {
			"file":	"main/SAPI.c",
			"line":	822,
			"primary_score":	999692,
			"second_score":	126843
		}, {
			"file":	"main/SAPI.c",
			"line":	823,
			"primary_score":	999692,
			"second_score":	126842
		}, {
			"file":	"main/SAPI.c",
			"line":	824,
			"primary_score":	999692,
			"second_score":	126841
		}, {
			"file":	"main/SAPI.c",
			"line":	826,
			"primary_score":	999692,
			"second_score":	126840
		}, {
			"file":	"main/SAPI.c",
			"line":	827,
			"primary_score":	999692,
			"second_score":	126805
		}, {
			"file":	"main/SAPI.c",
			"line":	828,
			"primary_score":	999692,
			"second_score":	126804
		}, {
			"file":	"main/SAPI.c",
			"line":	829,
			"primary_score":	999692,
			"second_score":	126782
		}, {
			"file":	"main/SAPI.c",
			"line":	830,
			"primary_score":	999692,
			"second_score":	126781
		}, {
			"file":	"main/SAPI.c",
			"line":	831,
			"primary_score":	999692,
			"second_score":	126780
		}, {
			"file":	"main/SAPI.c",
			"line":	832,
			"primary_score":	999692,
			"second_score":	126757
		}, {
			"file":	"main/SAPI.c",
			"line":	835,
			"primary_score":	999692,
			"second_score":	126756
		}, {
			"file":	"main/SAPI.c",
			"line":	840,
			"primary_score":	999692,
			"second_score":	126755
		}, {
			"file":	"main/SAPI.c",
			"line":	842,
			"primary_score":	999692,
			"second_score":	126754
		}, {
			"file":	"main/SAPI.c",
			"line":	843,
			"primary_score":	999692,
			"second_score":	126753
		}, {
			"file":	"main/SAPI.c",
			"line":	848,
			"primary_score":	999692,
			"second_score":	126751
		}, {
			"file":	"main/SAPI.c",
			"line":	851,
			"primary_score":	999692,
			"second_score":	126750
		}, {
			"file":	"main/SAPI.c",
			"line":	882,
			"primary_score":	999692,
			"second_score":	126749
		}, {
			"file":	"main/SAPI.c",
			"line":	884,
			"primary_score":	999692,
			"second_score":	126747
		}, {
			"file":	"main/SAPI.c",
			"line":	953,
			"primary_score":	999692,
			"second_score":	105185
		}, {
			"file":	"main/SAPI.c",
			"line":	954,
			"primary_score":	999692,
			"second_score":	105184
		}, {
			"file":	"main/SAPI.c",
			"line":	955,
			"primary_score":	999692,
			"second_score":	105182
		}, {
			"file":	"main/SAPI.c",
			"line":	1027,
			"primary_score":	999692,
			"second_score":	152787
		}, {
			"file":	"main/SAPI.c",
			"line":	1029,
			"primary_score":	999692,
			"second_score":	152786
		}, {
			"file":	"main/SAPI.c",
			"line":	1032,
			"primary_score":	999692,
			"second_score":	152785
		}, {
			"file":	"main/SAPI.c",
			"line":	1033,
			"primary_score":	999692,
			"second_score":	152784
		}, {
			"file":	"main/SAPI.c",
			"line":	1034,
			"primary_score":	999692,
			"second_score":	152783
		}, {
			"file":	"main/SAPI.c",
			"line":	1039,
			"primary_score":	999692,
			"second_score":	152782
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	736,
			"primary_score":	999692,
			"second_score":	148690
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	744,
			"primary_score":	999692,
			"second_score":	148689
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	745,
			"primary_score":	999692,
			"second_score":	148688
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	746,
			"primary_score":	999692,
			"second_score":	148687
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	748,
			"primary_score":	999692,
			"second_score":	148686
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	750,
			"primary_score":	999692,
			"second_score":	148685
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	751,
			"primary_score":	999692,
			"second_score":	148684
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	785,
			"primary_score":	999692,
			"second_score":	148683
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	786,
			"primary_score":	999692,
			"second_score":	148682
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	788,
			"primary_score":	999692,
			"second_score":	148681
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	793,
			"primary_score":	999692,
			"second_score":	146827
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	794,
			"primary_score":	999692,
			"second_score":	146826
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	795,
			"primary_score":	999692,
			"second_score":	146825
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	796,
			"primary_score":	999692,
			"second_score":	146824
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	800,
			"primary_score":	999692,
			"second_score":	146823
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	802,
			"primary_score":	999692,
			"second_score":	146822
		}, {
			"file":	"main/getopt.c",
			"line":	66,
			"primary_score":	999692,
			"second_score":	152134
		}, {
			"file":	"main/getopt.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	152227
		}, {
			"file":	"main/getopt.c",
			"line":	175,
			"primary_score":	999692,
			"second_score":	152226
		}, {
			"file":	"main/getopt.c",
			"line":	177,
			"primary_score":	999692,
			"second_score":	152225
		}, {
			"file":	"main/getopt.c",
			"line":	178,
			"primary_score":	999692,
			"second_score":	152224
		}, {
			"file":	"main/getopt.c",
			"line":	185,
			"primary_score":	999692,
			"second_score":	152223
		}, {
			"file":	"main/main.c",
			"line":	1472,
			"primary_score":	999692,
			"second_score":	173233
		}, {
			"file":	"main/main.c",
			"line":	1475,
			"primary_score":	999692,
			"second_score":	173232
		}, {
			"file":	"main/main.c",
			"line":	1477,
			"primary_score":	999692,
			"second_score":	173230
		}, {
			"file":	"main/main.c",
			"line":	1479,
			"primary_score":	999692,
			"second_score":	173229
		}, {
			"file":	"main/main.c",
			"line":	1599,
			"primary_score":	999692,
			"second_score":	121246
		}, {
			"file":	"main/main.c",
			"line":	1600,
			"primary_score":	999692,
			"second_score":	121245
		}, {
			"file":	"main/main.c",
			"line":	1602,
			"primary_score":	999692,
			"second_score":	121244
		}, {
			"file":	"main/main.c",
			"line":	1607,
			"primary_score":	999692,
			"second_score":	121243
		}, {
			"file":	"main/main.c",
			"line":	1608,
			"primary_score":	999692,
			"second_score":	121242
		}, {
			"file":	"main/main.c",
			"line":	1610,
			"primary_score":	999692,
			"second_score":	121241
		}, {
			"file":	"main/main.c",
			"line":	1613,
			"primary_score":	999692,
			"second_score":	121234
		}, {
			"file":	"main/main.c",
			"line":	1614,
			"primary_score":	999692,
			"second_score":	121228
		}, {
			"file":	"main/main.c",
			"line":	1615,
			"primary_score":	999692,
			"second_score":	121226
		}, {
			"file":	"main/main.c",
			"line":	1618,
			"primary_score":	999692,
			"second_score":	121224
		}, {
			"file":	"main/main.c",
			"line":	1619,
			"primary_score":	999692,
			"second_score":	121218
		}, {
			"file":	"main/main.c",
			"line":	1620,
			"primary_score":	999692,
			"second_score":	121130
		}, {
			"file":	"main/main.c",
			"line":	1623,
			"primary_score":	999692,
			"second_score":	121128
		}, {
			"file":	"main/main.c",
			"line":	1624,
			"primary_score":	999692,
			"second_score":	121122
		}, {
			"file":	"main/main.c",
			"line":	1626,
			"primary_score":	999692,
			"second_score":	121121
		}, {
			"file":	"main/main.c",
			"line":	1632,
			"primary_score":	999692,
			"second_score":	121120
		}, {
			"file":	"main/main.c",
			"line":	1635,
			"primary_score":	999692,
			"second_score":	121119
		}, {
			"file":	"main/main.c",
			"line":	1637,
			"primary_score":	999692,
			"second_score":	121117
		}, {
			"file":	"main/main.c",
			"line":	1638,
			"primary_score":	999692,
			"second_score":	121112
		}, {
			"file":	"main/main.c",
			"line":	1641,
			"primary_score":	999692,
			"second_score":	121110
		}, {
			"file":	"main/main.c",
			"line":	1642,
			"primary_score":	999692,
			"second_score":	121104
		}, {
			"file":	"main/main.c",
			"line":	1643,
			"primary_score":	999692,
			"second_score":	121099
		}, {
			"file":	"main/main.c",
			"line":	1646,
			"primary_score":	999692,
			"second_score":	121097
		}, {
			"file":	"main/main.c",
			"line":	1647,
			"primary_score":	999692,
			"second_score":	121096
		}, {
			"file":	"main/main.c",
			"line":	1648,
			"primary_score":	999692,
			"second_score":	120494
		}, {
			"file":	"main/main.c",
			"line":	1652,
			"primary_score":	999692,
			"second_score":	120491
		}, {
			"file":	"main/main.c",
			"line":	1653,
			"primary_score":	999692,
			"second_score":	120485
		}, {
			"file":	"main/main.c",
			"line":	1655,
			"primary_score":	999692,
			"second_score":	120484
		}, {
			"file":	"main/main.c",
			"line":	1656,
			"primary_score":	999692,
			"second_score":	120342
		}, {
			"file":	"main/main.c",
			"line":	1657,
			"primary_score":	999692,
			"second_score":	120341
		}, {
			"file":	"main/main.c",
			"line":	1660,
			"primary_score":	999692,
			"second_score":	120307
		}, {
			"file":	"main/main.c",
			"line":	1663,
			"primary_score":	999692,
			"second_score":	120305
		}, {
			"file":	"main/main.c",
			"line":	1667,
			"primary_score":	999692,
			"second_score":	120304
		}, {
			"file":	"main/main.c",
			"line":	1673,
			"primary_score":	999692,
			"second_score":	120303
		}, {
			"file":	"main/main.c",
			"line":	1676,
			"primary_score":	999692,
			"second_score":	115139
		}, {
			"file":	"main/main.c",
			"line":	1677,
			"primary_score":	999692,
			"second_score":	115133
		}, {
			"file":	"main/main.c",
			"line":	1678,
			"primary_score":	999692,
			"second_score":	115129
		}, {
			"file":	"main/main.c",
			"line":	1681,
			"primary_score":	999692,
			"second_score":	115127
		}, {
			"file":	"main/main.c",
			"line":	1682,
			"primary_score":	999692,
			"second_score":	115121
		}, {
			"file":	"main/main.c",
			"line":	1683,
			"primary_score":	999692,
			"second_score":	115074
		}, {
			"file":	"main/main.c",
			"line":	1686,
			"primary_score":	999692,
			"second_score":	115072
		}, {
			"file":	"main/main.c",
			"line":	1687,
			"primary_score":	999692,
			"second_score":	115066
		}, {
			"file":	"main/main.c",
			"line":	1688,
			"primary_score":	999692,
			"second_score":	115063
		}, {
			"file":	"main/main.c",
			"line":	1691,
			"primary_score":	999692,
			"second_score":	115061
		}, {
			"file":	"main/main.c",
			"line":	1692,
			"primary_score":	999692,
			"second_score":	115055
		}, {
			"file":	"main/main.c",
			"line":	1693,
			"primary_score":	999692,
			"second_score":	114636
		}, {
			"file":	"main/main.c",
			"line":	1694,
			"primary_score":	999692,
			"second_score":	114634
		}, {
			"file":	"main/main.c",
			"line":	1697,
			"primary_score":	999692,
			"second_score":	105206
		}, {
			"file":	"main/main.c",
			"line":	1698,
			"primary_score":	999692,
			"second_score":	105200
		}, {
			"file":	"main/main.c",
			"line":	1699,
			"primary_score":	999692,
			"second_score":	105198
		}, {
			"file":	"main/main.c",
			"line":	1732,
			"primary_score":	999692,
			"second_score":	123354
		}, {
			"file":	"main/main.c",
			"line":	1733,
			"primary_score":	999692,
			"second_score":	123353
		}, {
			"file":	"main/main.c",
			"line":	1753,
			"primary_score":	999692,
			"second_score":	3144
		}, {
			"file":	"main/main.c",
			"line":	1756,
			"primary_score":	999692,
			"second_score":	3143
		}, {
			"file":	"main/main.c",
			"line":	1759,
			"primary_score":	999692,
			"second_score":	3142
		}, {
			"file":	"main/main.c",
			"line":	1762,
			"primary_score":	999692,
			"second_score":	3141
		}, {
			"file":	"main/main.c",
			"line":	1766,
			"primary_score":	999692,
			"second_score":	3140
		}, {
			"file":	"main/main.c",
			"line":	2198,
			"primary_score":	999692,
			"second_score":	105189
		}, {
			"file":	"main/main.c",
			"line":	2200,
			"primary_score":	999692,
			"second_score":	105188
		}, {
			"file":	"main/main.c",
			"line":	2202,
			"primary_score":	999692,
			"second_score":	105187
		}, {
			"file":	"main/main.c",
			"line":	2215,
			"primary_score":	999692,
			"second_score":	105186
		}, {
			"file":	"main/main.c",
			"line":	2217,
			"primary_score":	999692,
			"second_score":	105181
		}, {
			"file":	"main/main.c",
			"line":	2220,
			"primary_score":	999692,
			"second_score":	6105
		}, {
			"file":	"main/main.c",
			"line":	2222,
			"primary_score":	999692,
			"second_score":	6039
		}, {
			"file":	"main/main.c",
			"line":	2223,
			"primary_score":	999692,
			"second_score":	6010
		}, {
			"file":	"main/main.c",
			"line":	2226,
			"primary_score":	999692,
			"second_score":	3551
		}, {
			"file":	"main/main.c",
			"line":	2229,
			"primary_score":	999692,
			"second_score":	3238
		}, {
			"file":	"main/main.c",
			"line":	2230,
			"primary_score":	999692,
			"second_score":	3208
		}, {
			"file":	"main/main.c",
			"line":	2235,
			"primary_score":	999692,
			"second_score":	3185
		}, {
			"file":	"main/main.c",
			"line":	2236,
			"primary_score":	999692,
			"second_score":	3148
		}, {
			"file":	"main/main.c",
			"line":	2238,
			"primary_score":	999692,
			"second_score":	3146
		}, {
			"file":	"main/main.c",
			"line":	2241,
			"primary_score":	999692,
			"second_score":	3145
		}, {
			"file":	"main/main.c",
			"line":	2242,
			"primary_score":	999692,
			"second_score":	3135
		}, {
			"file":	"main/main.c",
			"line":	2259,
			"primary_score":	999692,
			"second_score":	148714
		}, {
			"file":	"main/main.c",
			"line":	2260,
			"primary_score":	999692,
			"second_score":	148713
		}, {
			"file":	"main/main.c",
			"line":	2264,
			"primary_score":	999692,
			"second_score":	148712
		}, {
			"file":	"main/main.c",
			"line":	2265,
			"primary_score":	999692,
			"second_score":	148711
		}, {
			"file":	"main/main.c",
			"line":	2267,
			"primary_score":	999692,
			"second_score":	148710
		}, {
			"file":	"main/main.c",
			"line":	2269,
			"primary_score":	999692,
			"second_score":	148709
		}, {
			"file":	"main/main.c",
			"line":	2270,
			"primary_score":	999692,
			"second_score":	148708
		}, {
			"file":	"main/main.c",
			"line":	2276,
			"primary_score":	999692,
			"second_score":	148705
		}, {
			"file":	"main/main.c",
			"line":	2277,
			"primary_score":	999692,
			"second_score":	148704
		}, {
			"file":	"main/main.c",
			"line":	2280,
			"primary_score":	999692,
			"second_score":	148703
		}, {
			"file":	"main/main.c",
			"line":	2281,
			"primary_score":	999692,
			"second_score":	148697
		}, {
			"file":	"main/main.c",
			"line":	2289,
			"primary_score":	999692,
			"second_score":	148696
		}, {
			"file":	"main/main.c",
			"line":	2291,
			"primary_score":	999692,
			"second_score":	148695
		}, {
			"file":	"main/main.c",
			"line":	2304,
			"primary_score":	999692,
			"second_score":	148694
		}, {
			"file":	"main/main.c",
			"line":	2309,
			"primary_score":	999692,
			"second_score":	148693
		}, {
			"file":	"main/main.c",
			"line":	2310,
			"primary_score":	999692,
			"second_score":	148692
		}, {
			"file":	"main/main.c",
			"line":	2312,
			"primary_score":	999692,
			"second_score":	148691
		}, {
			"file":	"main/main.c",
			"line":	2313,
			"primary_score":	999692,
			"second_score":	146821
		}, {
			"file":	"main/main.c",
			"line":	2314,
			"primary_score":	999692,
			"second_score":	146820
		}, {
			"file":	"main/main.c",
			"line":	2315,
			"primary_score":	999692,
			"second_score":	146364
		}, {
			"file":	"main/main.c",
			"line":	2319,
			"primary_score":	999692,
			"second_score":	146254
		}, {
			"file":	"main/main.c",
			"line":	2326,
			"primary_score":	999692,
			"second_score":	146253
		}, {
			"file":	"main/main.c",
			"line":	2329,
			"primary_score":	999692,
			"second_score":	146252
		}, {
			"file":	"main/main.c",
			"line":	2336,
			"primary_score":	999692,
			"second_score":	146251
		}, {
			"file":	"main/main.c",
			"line":	2338,
			"primary_score":	999692,
			"second_score":	146250
		}, {
			"file":	"main/main.c",
			"line":	2344,
			"primary_score":	999692,
			"second_score":	146249
		}, {
			"file":	"main/main.c",
			"line":	2346,
			"primary_score":	999692,
			"second_score":	121258
		}, {
			"file":	"main/main.c",
			"line":	2354,
			"primary_score":	999692,
			"second_score":	121256
		}, {
			"file":	"main/main.c",
			"line":	2357,
			"primary_score":	999692,
			"second_score":	121255
		}, {
			"file":	"main/main.c",
			"line":	2359,
			"primary_score":	999692,
			"second_score":	121253
		}, {
			"file":	"main/output.c",
			"line":	103,
			"primary_score":	999692,
			"second_score":	3184
		}, {
			"file":	"main/output.c",
			"line":	104,
			"primary_score":	999692,
			"second_score":	3170
		}, {
			"file":	"main/output.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	3156
		}, {
			"file":	"main/output.c",
			"line":	129,
			"primary_score":	999692,
			"second_score":	121116
		}, {
			"file":	"main/output.c",
			"line":	131,
			"primary_score":	999692,
			"second_score":	121115
		}, {
			"file":	"main/output.c",
			"line":	132,
			"primary_score":	999692,
			"second_score":	121114
		}, {
			"file":	"main/output.c",
			"line":	135,
			"primary_score":	999692,
			"second_score":	121113
		}, {
			"file":	"main/output.c",
			"line":	198,
			"primary_score":	999692,
			"second_score":	123352
		}, {
			"file":	"main/output.c",
			"line":	201,
			"primary_score":	999692,
			"second_score":	123351
		}, {
			"file":	"main/output.c",
			"line":	202,
			"primary_score":	999692,
			"second_score":	123305
		}, {
			"file":	"main/output.c",
			"line":	281,
			"primary_score":	999692,
			"second_score":	121118
		}, {
			"file":	"main/output.c",
			"line":	697,
			"primary_score":	999692,
			"second_score":	123346
		}, {
			"file":	"main/output.c",
			"line":	703,
			"primary_score":	999692,
			"second_score":	123345
		}, {
			"file":	"main/output.c",
			"line":	711,
			"primary_score":	999692,
			"second_score":	123343
		}, {
			"file":	"main/output.c",
			"line":	715,
			"primary_score":	999692,
			"second_score":	123342
		}, {
			"file":	"main/output.c",
			"line":	716,
			"primary_score":	999692,
			"second_score":	123341
		}, {
			"file":	"main/output.c",
			"line":	717,
			"primary_score":	999692,
			"second_score":	123340
		}, {
			"file":	"main/output.c",
			"line":	719,
			"primary_score":	999692,
			"second_score":	123339
		}, {
			"file":	"main/output.c",
			"line":	785,
			"primary_score":	999692,
			"second_score":	123307
		}, {
			"file":	"main/output.c",
			"line":	789,
			"primary_score":	999692,
			"second_score":	123306
		}, {
			"file":	"main/output.c",
			"line":	975,
			"primary_score":	999692,
			"second_score":	123350
		}, {
			"file":	"main/output.c",
			"line":	976,
			"primary_score":	999692,
			"second_score":	123349
		}, {
			"file":	"main/output.c",
			"line":	977,
			"primary_score":	999692,
			"second_score":	123348
		}, {
			"file":	"main/output.c",
			"line":	979,
			"primary_score":	999692,
			"second_score":	123347
		}, {
			"file":	"main/output.c",
			"line":	983,
			"primary_score":	999692,
			"second_score":	123344
		}, {
			"file":	"main/output.c",
			"line":	990,
			"primary_score":	999692,
			"second_score":	123338
		}, {
			"file":	"main/output.c",
			"line":	1002,
			"primary_score":	999692,
			"second_score":	123337
		}, {
			"file":	"main/output.c",
			"line":	1003,
			"primary_score":	999692,
			"second_score":	123336
		}, {
			"file":	"main/output.c",
			"line":	1006,
			"primary_score":	999692,
			"second_score":	123335
		}, {
			"file":	"main/output.c",
			"line":	1010,
			"primary_score":	999692,
			"second_score":	123334
		}, {
			"file":	"main/output.c",
			"line":	1011,
			"primary_score":	999692,
			"second_score":	126745
		}, {
			"file":	"main/output.c",
			"line":	1014,
			"primary_score":	999692,
			"second_score":	126743
		}, {
			"file":	"main/output.c",
			"line":	1015,
			"primary_score":	999692,
			"second_score":	126741
		}, {
			"file":	"main/output.c",
			"line":	1016,
			"primary_score":	999692,
			"second_score":	126738
		}, {
			"file":	"main/output.c",
			"line":	1022,
			"primary_score":	999692,
			"second_score":	123333
		}, {
			"file":	"main/output.c",
			"line":	1023,
			"primary_score":	999692,
			"second_score":	123315
		}, {
			"file":	"main/output.c",
			"line":	1024,
			"primary_score":	999692,
			"second_score":	123314
		}, {
			"file":	"main/output.c",
			"line":	1026,
			"primary_score":	999692,
			"second_score":	123309
		}, {
			"file":	"main/output.c",
			"line":	1028,
			"primary_score":	999692,
			"second_score":	123308
		}, {
			"file":	"main/php_ini.c",
			"line":	729,
			"primary_score":	999692,
			"second_score":	3550
		}, {
			"file":	"main/php_ini.c",
			"line":	730,
			"primary_score":	999692,
			"second_score":	3241
		}, {
			"file":	"main/php_ini.c",
			"line":	734,
			"primary_score":	999692,
			"second_score":	3240
		}, {
			"file":	"main/php_ini.c",
			"line":	738,
			"primary_score":	999692,
			"second_score":	3239
		}, {
			"file":	"main/php_logos.c",
			"line":	67,
			"primary_score":	999692,
			"second_score":	6038
		}, {
			"file":	"main/php_logos.c",
			"line":	68,
			"primary_score":	999692,
			"second_score":	6011
		}, {
			"file":	"main/php_open_temporary_file.c",
			"line":	183,
			"primary_score":	999692,
			"second_score":	3147
		}, {
			"file":	"main/php_ticks.c",
			"line":	32,
			"primary_score":	999692,
			"second_score":	121240
		}, {
			"file":	"main/php_ticks.c",
			"line":	37,
			"primary_score":	999692,
			"second_score":	3139
		}, {
			"file":	"main/php_variables.c",
			"line":	39,
			"primary_score":	999692,
			"second_score":	158630
		}, {
			"file":	"main/php_variables.c",
			"line":	45,
			"primary_score":	999692,
			"second_score":	158629
		}, {
			"file":	"main/php_variables.c",
			"line":	46,
			"primary_score":	999692,
			"second_score":	158628
		}, {
			"file":	"main/php_variables.c",
			"line":	49,
			"primary_score":	999692,
			"second_score":	158627
		}, {
			"file":	"main/php_variables.c",
			"line":	50,
			"primary_score":	999692,
			"second_score":	158626
		}, {
			"file":	"main/php_variables.c",
			"line":	53,
			"primary_score":	999692,
			"second_score":	158625
		}, {
			"file":	"main/php_variables.c",
			"line":	55,
			"primary_score":	999692,
			"second_score":	158515
		}, {
			"file":	"main/php_variables.c",
			"line":	57,
			"primary_score":	999692,
			"second_score":	158514
		}, {
			"file":	"main/php_variables.c",
			"line":	62,
			"primary_score":	999692,
			"second_score":	152780
		}, {
			"file":	"main/php_variables.c",
			"line":	63,
			"primary_score":	999692,
			"second_score":	152779
		}, {
			"file":	"main/php_variables.c",
			"line":	64,
			"primary_score":	999692,
			"second_score":	152778
		}, {
			"file":	"main/php_variables.c",
			"line":	65,
			"primary_score":	999692,
			"second_score":	152777
		}, {
			"file":	"main/php_variables.c",
			"line":	66,
			"primary_score":	999692,
			"second_score":	152776
		}, {
			"file":	"main/php_variables.c",
			"line":	67,
			"primary_score":	999692,
			"second_score":	152775
		}, {
			"file":	"main/php_variables.c",
			"line":	68,
			"primary_score":	999692,
			"second_score":	152774
		}, {
			"file":	"main/php_variables.c",
			"line":	69,
			"primary_score":	999692,
			"second_score":	152773
		}, {
			"file":	"main/php_variables.c",
			"line":	70,
			"primary_score":	999692,
			"second_score":	152772
		}, {
			"file":	"main/php_variables.c",
			"line":	72,
			"primary_score":	999692,
			"second_score":	152771
		}, {
			"file":	"main/php_variables.c",
			"line":	74,
			"primary_score":	999692,
			"second_score":	152770
		}, {
			"file":	"main/php_variables.c",
			"line":	75,
			"primary_score":	999692,
			"second_score":	152769
		}, {
			"file":	"main/php_variables.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	152768
		}, {
			"file":	"main/php_variables.c",
			"line":	86,
			"primary_score":	999692,
			"second_score":	152767
		}, {
			"file":	"main/php_variables.c",
			"line":	93,
			"primary_score":	999692,
			"second_score":	152766
		}, {
			"file":	"main/php_variables.c",
			"line":	94,
			"primary_score":	999692,
			"second_score":	152765
		}, {
			"file":	"main/php_variables.c",
			"line":	95,
			"primary_score":	999692,
			"second_score":	152764
		}, {
			"file":	"main/php_variables.c",
			"line":	98,
			"primary_score":	999692,
			"second_score":	152763
		}, {
			"file":	"main/php_variables.c",
			"line":	99,
			"primary_score":	999692,
			"second_score":	152740
		}, {
			"file":	"main/php_variables.c",
			"line":	101,
			"primary_score":	999692,
			"second_score":	152739
		}, {
			"file":	"main/php_variables.c",
			"line":	108,
			"primary_score":	999692,
			"second_score":	152738
		}, {
			"file":	"main/php_variables.c",
			"line":	110,
			"primary_score":	999692,
			"second_score":	152737
		}, {
			"file":	"main/php_variables.c",
			"line":	117,
			"primary_score":	999692,
			"second_score":	152736
		}, {
			"file":	"main/php_variables.c",
			"line":	125,
			"primary_score":	999692,
			"second_score":	152735
		}, {
			"file":	"main/php_variables.c",
			"line":	126,
			"primary_score":	999692,
			"second_score":	152734
		}, {
			"file":	"main/php_variables.c",
			"line":	128,
			"primary_score":	999692,
			"second_score":	152733
		}, {
			"file":	"main/php_variables.c",
			"line":	212,
			"primary_score":	999692,
			"second_score":	152732
		}, {
			"file":	"main/php_variables.c",
			"line":	213,
			"primary_score":	999692,
			"second_score":	152731
		}, {
			"file":	"main/php_variables.c",
			"line":	214,
			"primary_score":	999692,
			"second_score":	152622
		}, {
			"file":	"main/php_variables.c",
			"line":	215,
			"primary_score":	999692,
			"second_score":	152621
		}, {
			"file":	"main/php_variables.c",
			"line":	216,
			"primary_score":	999692,
			"second_score":	152620
		}, {
			"file":	"main/php_variables.c",
			"line":	219,
			"primary_score":	999692,
			"second_score":	152619
		}, {
			"file":	"main/php_variables.c",
			"line":	222,
			"primary_score":	999692,
			"second_score":	152618
		}, {
			"file":	"main/php_variables.c",
			"line":	230,
			"primary_score":	999692,
			"second_score":	152617
		}, {
			"file":	"main/php_variables.c",
			"line":	235,
			"primary_score":	999692,
			"second_score":	152616
		}, {
			"file":	"main/php_variables.c",
			"line":	237,
			"primary_score":	999692,
			"second_score":	152439
		}, {
			"file":	"main/php_variables.c",
			"line":	242,
			"primary_score":	999692,
			"second_score":	152438
		}, {
			"file":	"main/php_variables.c",
			"line":	423,
			"primary_score":	999692,
			"second_score":	172950
		}, {
			"file":	"main/php_variables.c",
			"line":	424,
			"primary_score":	999692,
			"second_score":	172949
		}, {
			"file":	"main/php_variables.c",
			"line":	425,
			"primary_score":	999692,
			"second_score":	172948
		}, {
			"file":	"main/php_variables.c",
			"line":	426,
			"primary_score":	999692,
			"second_score":	172947
		}, {
			"file":	"main/php_variables.c",
			"line":	429,
			"primary_score":	999692,
			"second_score":	172946
		}, {
			"file":	"main/php_variables.c",
			"line":	430,
			"primary_score":	999692,
			"second_score":	172945
		}, {
			"file":	"main/php_variables.c",
			"line":	432,
			"primary_score":	999692,
			"second_score":	172944
		}, {
			"file":	"main/php_variables.c",
			"line":	433,
			"primary_score":	999692,
			"second_score":	158637
		}, {
			"file":	"main/php_variables.c",
			"line":	434,
			"primary_score":	999692,
			"second_score":	158636
		}, {
			"file":	"main/php_variables.c",
			"line":	437,
			"primary_score":	999692,
			"second_score":	158635
		}, {
			"file":	"main/php_variables.c",
			"line":	438,
			"primary_score":	999692,
			"second_score":	158634
		}, {
			"file":	"main/php_variables.c",
			"line":	442,
			"primary_score":	999692,
			"second_score":	158633
		}, {
			"file":	"main/php_variables.c",
			"line":	443,
			"primary_score":	999692,
			"second_score":	158632
		}, {
			"file":	"main/php_variables.c",
			"line":	444,
			"primary_score":	999692,
			"second_score":	158631
		}, {
			"file":	"main/php_variables.c",
			"line":	446,
			"primary_score":	999692,
			"second_score":	158197
		}, {
			"file":	"main/php_variables.c",
			"line":	449,
			"primary_score":	999692,
			"second_score":	158196
		}, {
			"file":	"main/php_variables.c",
			"line":	546,
			"primary_score":	999692,
			"second_score":	148707
		}, {
			"file":	"main/php_variables.c",
			"line":	554,
			"primary_score":	999692,
			"second_score":	148706
		}, {
			"file":	"main/php_variables.c",
			"line":	562,
			"primary_score":	999692,
			"second_score":	173194
		}, {
			"file":	"main/php_variables.c",
			"line":	564,
			"primary_score":	999692,
			"second_score":	173193
		}, {
			"file":	"main/php_variables.c",
			"line":	566,
			"primary_score":	999692,
			"second_score":	173192
		}, {
			"file":	"main/php_variables.c",
			"line":	567,
			"primary_score":	999692,
			"second_score":	173086
		}, {
			"file":	"main/php_variables.c",
			"line":	568,
			"primary_score":	999692,
			"second_score":	172961
		}, {
			"file":	"main/php_variables.c",
			"line":	569,
			"primary_score":	999692,
			"second_score":	172958
		}, {
			"file":	"main/php_variables.c",
			"line":	572,
			"primary_score":	999692,
			"second_score":	172957
		}, {
			"file":	"main/php_variables.c",
			"line":	573,
			"primary_score":	999692,
			"second_score":	172956
		}, {
			"file":	"main/php_variables.c",
			"line":	576,
			"primary_score":	999692,
			"second_score":	172955
		}, {
			"file":	"main/php_variables.c",
			"line":	577,
			"primary_score":	999692,
			"second_score":	172954
		}, {
			"file":	"main/php_variables.c",
			"line":	581,
			"primary_score":	999692,
			"second_score":	152794
		}, {
			"file":	"main/php_variables.c",
			"line":	584,
			"primary_score":	999692,
			"second_score":	152793
		}, {
			"file":	"main/php_variables.c",
			"line":	587,
			"primary_score":	999692,
			"second_score":	152792
		}, {
			"file":	"main/php_variables.c",
			"line":	591,
			"primary_score":	999692,
			"second_score":	152791
		}, {
			"file":	"main/php_variables.c",
			"line":	592,
			"primary_score":	999692,
			"second_score":	152790
		}, {
			"file":	"main/php_variables.c",
			"line":	593,
			"primary_score":	999692,
			"second_score":	152789
		}, {
			"file":	"main/php_variables.c",
			"line":	594,
			"primary_score":	999692,
			"second_score":	152788
		}, {
			"file":	"main/php_variables.c",
			"line":	595,
			"primary_score":	999692,
			"second_score":	152781
		}, {
			"file":	"main/php_variables.c",
			"line":	598,
			"primary_score":	999692,
			"second_score":	152436
		}, {
			"file":	"main/php_variables.c",
			"line":	752,
			"primary_score":	999692,
			"second_score":	173196
		}, {
			"file":	"main/php_variables.c",
			"line":	753,
			"primary_score":	999692,
			"second_score":	173195
		}, {
			"file":	"main/php_variables.c",
			"line":	755,
			"primary_score":	999692,
			"second_score":	152435
		}, {
			"file":	"main/php_variables.c",
			"line":	756,
			"primary_score":	999692,
			"second_score":	152434
		}, {
			"file":	"main/php_variables.c",
			"line":	757,
			"primary_score":	999692,
			"second_score":	152433
		}, {
			"file":	"main/php_variables.c",
			"line":	759,
			"primary_score":	999692,
			"second_score":	152432
		}, {
			"file":	"main/php_variables.c",
			"line":	761,
			"primary_score":	999692,
			"second_score":	152391
		}, {
			"file":	"main/php_variables.c",
			"line":	762,
			"primary_score":	999692,
			"second_score":	152389
		}, {
			"file":	"main/php_variables.c",
			"line":	763,
			"primary_score":	999692,
			"second_score":	152387
		}, {
			"file":	"main/php_variables.c",
			"line":	764,
			"primary_score":	999692,
			"second_score":	152224
		}, {
			"file":	"main/php_variables.c",
			"line":	782,
			"primary_score":	999692,
			"second_score":	152066
		}, {
			"file":	"main/php_variables.c",
			"line":	783,
			"primary_score":	999692,
			"second_score":	151906
		}, {
			"file":	"main/php_variables.c",
			"line":	785,
			"primary_score":	999692,
			"second_score":	151904
		}, {
			"file":	"main/streams/filter.c",
			"line":	54,
			"primary_score":	999692,
			"second_score":	63039
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	134,
			"primary_score":	999692,
			"second_score":	149207
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	135,
			"primary_score":	999692,
			"second_score":	149206
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	136,
			"primary_score":	999692,
			"second_score":	149205
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	138,
			"primary_score":	999692,
			"second_score":	149204
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	139,
			"primary_score":	999692,
			"second_score":	149203
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	140,
			"primary_score":	999692,
			"second_score":	149201
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	142,
			"primary_score":	999692,
			"second_score":	149200
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	165,
			"primary_score":	999692,
			"second_score":	149644
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	167,
			"primary_score":	999692,
			"second_score":	149643
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	168,
			"primary_score":	999692,
			"second_score":	149539
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	169,
			"primary_score":	999692,
			"second_score":	149538
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	170,
			"primary_score":	999692,
			"second_score":	149537
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	171,
			"primary_score":	999692,
			"second_score":	149536
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	172,
			"primary_score":	999692,
			"second_score":	149535
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	173,
			"primary_score":	999692,
			"second_score":	149534
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	174,
			"primary_score":	999692,
			"second_score":	149533
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	176,
			"primary_score":	999692,
			"second_score":	149532
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	264,
			"primary_score":	999692,
			"second_score":	149645
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	266,
			"primary_score":	999692,
			"second_score":	149211
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	267,
			"primary_score":	999692,
			"second_score":	149210
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	271,
			"primary_score":	999692,
			"second_score":	149209
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	272,
			"primary_score":	999692,
			"second_score":	149208
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	284,
			"primary_score":	999692,
			"second_score":	149199
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	285,
			"primary_score":	999692,
			"second_score":	149198
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	287,
			"primary_score":	999692,
			"second_score":	150787
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	291,
			"primary_score":	999692,
			"second_score":	149197
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	371,
			"primary_score":	999692,
			"second_score":	115666
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	372,
			"primary_score":	999692,
			"second_score":	115665
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	374,
			"primary_score":	999692,
			"second_score":	115664
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	377,
			"primary_score":	999692,
			"second_score":	115663
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	392,
			"primary_score":	999692,
			"second_score":	115662
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	393,
			"primary_score":	999692,
			"second_score":	115661
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	394,
			"primary_score":	999692,
			"second_score":	115660
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	404,
			"primary_score":	999692,
			"second_score":	115659
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	405,
			"primary_score":	999692,
			"second_score":	115658
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	413,
			"primary_score":	999692,
			"second_score":	115657
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	425,
			"primary_score":	999692,
			"second_score":	115656
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	427,
			"primary_score":	999692,
			"second_score":	115637
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	432,
			"primary_score":	999692,
			"second_score":	115676
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	434,
			"primary_score":	999692,
			"second_score":	115675
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	441,
			"primary_score":	999692,
			"second_score":	115674
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	442,
			"primary_score":	999692,
			"second_score":	115673
		}, {
			"file":	"main/streams/streams.c",
			"line":	104,
			"primary_score":	999692,
			"second_score":	121040
		}, {
			"file":	"main/streams/streams.c",
			"line":	105,
			"primary_score":	999692,
			"second_score":	121031
		}, {
			"file":	"main/streams/streams.c",
			"line":	196,
			"primary_score":	999692,
			"second_score":	149073
		}, {
			"file":	"main/streams/streams.c",
			"line":	198,
			"primary_score":	999692,
			"second_score":	149072
		}, {
			"file":	"main/streams/streams.c",
			"line":	200,
			"primary_score":	999692,
			"second_score":	149071
		}, {
			"file":	"main/streams/streams.c",
			"line":	203,
			"primary_score":	999692,
			"second_score":	149070
		}, {
			"file":	"main/streams/streams.c",
			"line":	206,
			"primary_score":	999692,
			"second_score":	149069
		}, {
			"file":	"main/streams/streams.c",
			"line":	207,
			"primary_score":	999692,
			"second_score":	149068
		}, {
			"file":	"main/streams/streams.c",
			"line":	238,
			"primary_score":	999692,
			"second_score":	149531
		}, {
			"file":	"main/streams/streams.c",
			"line":	240,
			"primary_score":	999692,
			"second_score":	149530
		}, {
			"file":	"main/streams/streams.c",
			"line":	242,
			"primary_score":	999692,
			"second_score":	149426
		}, {
			"file":	"main/streams/streams.c",
			"line":	244,
			"primary_score":	999692,
			"second_score":	149425
		}, {
			"file":	"main/streams/streams.c",
			"line":	245,
			"primary_score":	999692,
			"second_score":	149424
		}, {
			"file":	"main/streams/streams.c",
			"line":	251,
			"primary_score":	999692,
			"second_score":	149423
		}, {
			"file":	"main/streams/streams.c",
			"line":	252,
			"primary_score":	999692,
			"second_score":	149422
		}, {
			"file":	"main/streams/streams.c",
			"line":	253,
			"primary_score":	999692,
			"second_score":	149421
		}, {
			"file":	"main/streams/streams.c",
			"line":	254,
			"primary_score":	999692,
			"second_score":	149420
		}, {
			"file":	"main/streams/streams.c",
			"line":	261,
			"primary_score":	999692,
			"second_score":	149419
		}, {
			"file":	"main/streams/streams.c",
			"line":	265,
			"primary_score":	999692,
			"second_score":	149418
		}, {
			"file":	"main/streams/streams.c",
			"line":	281,
			"primary_score":	999692,
			"second_score":	149417
		}, {
			"file":	"main/streams/streams.c",
			"line":	282,
			"primary_score":	999692,
			"second_score":	149232
		}, {
			"file":	"main/streams/streams.c",
			"line":	284,
			"primary_score":	999692,
			"second_score":	149220
		}, {
			"file":	"main/streams/streams.c",
			"line":	285,
			"primary_score":	999692,
			"second_score":	149219
		}, {
			"file":	"main/streams/streams.c",
			"line":	286,
			"primary_score":	999692,
			"second_score":	149218
		}, {
			"file":	"main/streams/streams.c",
			"line":	287,
			"primary_score":	999692,
			"second_score":	149217
		}, {
			"file":	"main/streams/streams.c",
			"line":	288,
			"primary_score":	999692,
			"second_score":	149216
		}, {
			"file":	"main/streams/streams.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	149215
		}, {
			"file":	"main/streams/streams.c",
			"line":	290,
			"primary_score":	999692,
			"second_score":	149214
		}, {
			"file":	"main/streams/streams.c",
			"line":	291,
			"primary_score":	999692,
			"second_score":	149213
		}, {
			"file":	"main/streams/streams.c",
			"line":	293,
			"primary_score":	999692,
			"second_score":	149212
		}, {
			"file":	"main/streams/streams.c",
			"line":	333,
			"primary_score":	999692,
			"second_score":	115690
		}, {
			"file":	"main/streams/streams.c",
			"line":	334,
			"primary_score":	999692,
			"second_score":	115689
		}, {
			"file":	"main/streams/streams.c",
			"line":	335,
			"primary_score":	999692,
			"second_score":	115688
		}, {
			"file":	"main/streams/streams.c",
			"line":	336,
			"primary_score":	999692,
			"second_score":	115687
		}, {
			"file":	"main/streams/streams.c",
			"line":	338,
			"primary_score":	999692,
			"second_score":	115686
		}, {
			"file":	"main/streams/streams.c",
			"line":	351,
			"primary_score":	999692,
			"second_score":	115685
		}, {
			"file":	"main/streams/streams.c",
			"line":	360,
			"primary_score":	999692,
			"second_score":	115684
		}, {
			"file":	"main/streams/streams.c",
			"line":	364,
			"primary_score":	999692,
			"second_score":	115683
		}, {
			"file":	"main/streams/streams.c",
			"line":	382,
			"primary_score":	999692,
			"second_score":	115682
		}, {
			"file":	"main/streams/streams.c",
			"line":	402,
			"primary_score":	999692,
			"second_score":	115681
		}, {
			"file":	"main/streams/streams.c",
			"line":	405,
			"primary_score":	999692,
			"second_score":	115671
		}, {
			"file":	"main/streams/streams.c",
			"line":	415,
			"primary_score":	999692,
			"second_score":	115670
		}, {
			"file":	"main/streams/streams.c",
			"line":	419,
			"primary_score":	999692,
			"second_score":	115669
		}, {
			"file":	"main/streams/streams.c",
			"line":	420,
			"primary_score":	999692,
			"second_score":	115668
		}, {
			"file":	"main/streams/streams.c",
			"line":	432,
			"primary_score":	999692,
			"second_score":	115667
		}, {
			"file":	"main/streams/streams.c",
			"line":	433,
			"primary_score":	999692,
			"second_score":	115636
		}, {
			"file":	"main/streams/streams.c",
			"line":	436,
			"primary_score":	999692,
			"second_score":	115635
		}, {
			"file":	"main/streams/streams.c",
			"line":	443,
			"primary_score":	999692,
			"second_score":	115634
		}, {
			"file":	"main/streams/streams.c",
			"line":	444,
			"primary_score":	999692,
			"second_score":	115633
		}, {
			"file":	"main/streams/streams.c",
			"line":	447,
			"primary_score":	999692,
			"second_score":	115632
		}, {
			"file":	"main/streams/streams.c",
			"line":	451,
			"primary_score":	999692,
			"second_score":	115631
		}, {
			"file":	"main/streams/streams.c",
			"line":	456,
			"primary_score":	999692,
			"second_score":	115630
		}, {
			"file":	"main/streams/streams.c",
			"line":	461,
			"primary_score":	999692,
			"second_score":	115629
		}, {
			"file":	"main/streams/streams.c",
			"line":	466,
			"primary_score":	999692,
			"second_score":	115628
		}, {
			"file":	"main/streams/streams.c",
			"line":	498,
			"primary_score":	999692,
			"second_score":	115627
		}, {
			"file":	"main/streams/streams.c",
			"line":	499,
			"primary_score":	999692,
			"second_score":	115626
		}, {
			"file":	"main/streams/streams.c",
			"line":	500,
			"primary_score":	999692,
			"second_score":	115607
		}, {
			"file":	"main/streams/streams.c",
			"line":	503,
			"primary_score":	999692,
			"second_score":	115606
		}, {
			"file":	"main/streams/streams.c",
			"line":	507,
			"primary_score":	999692,
			"second_score":	115587
		}, {
			"file":	"main/streams/streams.c",
			"line":	511,
			"primary_score":	999692,
			"second_score":	115586
		}, {
			"file":	"main/streams/streams.c",
			"line":	1123,
			"primary_score":	999692,
			"second_score":	115680
		}, {
			"file":	"main/streams/streams.c",
			"line":	1125,
			"primary_score":	999692,
			"second_score":	115679
		}, {
			"file":	"main/streams/streams.c",
			"line":	1129,
			"primary_score":	999692,
			"second_score":	115678
		}, {
			"file":	"main/streams/streams.c",
			"line":	1130,
			"primary_score":	999692,
			"second_score":	115677
		}, {
			"file":	"main/streams/streams.c",
			"line":	1133,
			"primary_score":	999692,
			"second_score":	115672
		}, {
			"file":	"main/streams/streams.c",
			"line":	1507,
			"primary_score":	999692,
			"second_score":	115692
		}, {
			"file":	"main/streams/streams.c",
			"line":	1509,
			"primary_score":	999692,
			"second_score":	115691
		}, {
			"file":	"main/streams/streams.c",
			"line":	1520,
			"primary_score":	999692,
			"second_score":	115065
		}, {
			"file":	"main/streams/streams.c",
			"line":	1526,
			"primary_score":	999692,
			"second_score":	115064
		}, {
			"file":	"main/streams/streams.c",
			"line":	1562,
			"primary_score":	999692,
			"second_score":	6104
		}, {
			"file":	"main/streams/streams.c",
			"line":	1563,
			"primary_score":	999692,
			"second_score":	6080
		}, {
			"file":	"main/streams/streams.c",
			"line":	1564,
			"primary_score":	999692,
			"second_score":	6070
		}, {
			"file":	"main/streams/streams.c",
			"line":	1565,
			"primary_score":	999692,
			"second_score":	6040
		}, {
			"file":	"main/streams/streams.c",
			"line":	1601,
			"primary_score":	999692,
			"second_score":	98540
		}, {
			"file":	"main/streams/streams.c",
			"line":	1642,
			"primary_score":	999692,
			"second_score":	149848
		}, {
			"file":	"main/streams/streams.c",
			"line":	1643,
			"primary_score":	999692,
			"second_score":	149847
		}, {
			"file":	"main/streams/streams.c",
			"line":	1644,
			"primary_score":	999692,
			"second_score":	149846
		}, {
			"file":	"main/streams/streams.c",
			"line":	1645,
			"primary_score":	999692,
			"second_score":	149845
		}, {
			"file":	"main/streams/streams.c",
			"line":	1647,
			"primary_score":	999692,
			"second_score":	149844
		}, {
			"file":	"main/streams/streams.c",
			"line":	1648,
			"primary_score":	999692,
			"second_score":	149843
		}, {
			"file":	"main/streams/streams.c",
			"line":	1651,
			"primary_score":	999692,
			"second_score":	149842
		}, {
			"file":	"main/streams/streams.c",
			"line":	1655,
			"primary_score":	999692,
			"second_score":	149841
		}, {
			"file":	"main/streams/streams.c",
			"line":	1656,
			"primary_score":	999692,
			"second_score":	149838
		}, {
			"file":	"main/streams/streams.c",
			"line":	1659,
			"primary_score":	999692,
			"second_score":	149837
		}, {
			"file":	"main/streams/streams.c",
			"line":	1660,
			"primary_score":	999692,
			"second_score":	149836
		}, {
			"file":	"main/streams/streams.c",
			"line":	1668,
			"primary_score":	999692,
			"second_score":	149835
		}, {
			"file":	"main/streams/streams.c",
			"line":	1669,
			"primary_score":	999692,
			"second_score":	149834
		}, {
			"file":	"main/streams/streams.c",
			"line":	1670,
			"primary_score":	999692,
			"second_score":	149724
		}, {
			"file":	"main/streams/streams.c",
			"line":	1686,
			"primary_score":	999692,
			"second_score":	149700
		}, {
			"file":	"main/streams/streams.c",
			"line":	1689,
			"primary_score":	999692,
			"second_score":	149681
		}, {
			"file":	"main/streams/streams.c",
			"line":	1751,
			"primary_score":	999692,
			"second_score":	149680
		}, {
			"file":	"main/streams/streams.c",
			"line":	1769,
			"primary_score":	999692,
			"second_score":	149679
		}, {
			"file":	"main/streams/streams.c",
			"line":	1901,
			"primary_score":	999692,
			"second_score":	149859
		}, {
			"file":	"main/streams/streams.c",
			"line":	1902,
			"primary_score":	999692,
			"second_score":	149858
		}, {
			"file":	"main/streams/streams.c",
			"line":	1903,
			"primary_score":	999692,
			"second_score":	149857
		}, {
			"file":	"main/streams/streams.c",
			"line":	1904,
			"primary_score":	999692,
			"second_score":	149856
		}, {
			"file":	"main/streams/streams.c",
			"line":	1905,
			"primary_score":	999692,
			"second_score":	149855
		}, {
			"file":	"main/streams/streams.c",
			"line":	1906,
			"primary_score":	999692,
			"second_score":	149854
		}, {
			"file":	"main/streams/streams.c",
			"line":	1908,
			"primary_score":	999692,
			"second_score":	149853
		}, {
			"file":	"main/streams/streams.c",
			"line":	1912,
			"primary_score":	999692,
			"second_score":	149852
		}, {
			"file":	"main/streams/streams.c",
			"line":	1917,
			"primary_score":	999692,
			"second_score":	149851
		}, {
			"file":	"main/streams/streams.c",
			"line":	1927,
			"primary_score":	999692,
			"second_score":	149850
		}, {
			"file":	"main/streams/streams.c",
			"line":	1929,
			"primary_score":	999692,
			"second_score":	149849
		}, {
			"file":	"main/streams/streams.c",
			"line":	1930,
			"primary_score":	999692,
			"second_score":	149678
		}, {
			"file":	"main/streams/streams.c",
			"line":	1938,
			"primary_score":	999692,
			"second_score":	149677
		}, {
			"file":	"main/streams/streams.c",
			"line":	1939,
			"primary_score":	999692,
			"second_score":	149676
		}, {
			"file":	"main/streams/streams.c",
			"line":	1943,
			"primary_score":	999692,
			"second_score":	149675
		}, {
			"file":	"main/streams/streams.c",
			"line":	1950,
			"primary_score":	999692,
			"second_score":	149195
		}, {
			"file":	"main/streams/streams.c",
			"line":	1957,
			"primary_score":	999692,
			"second_score":	149194
		}, {
			"file":	"main/streams/streams.c",
			"line":	1958,
			"primary_score":	999692,
			"second_score":	149193
		}, {
			"file":	"main/streams/streams.c",
			"line":	1962,
			"primary_score":	999692,
			"second_score":	149192
		}, {
			"file":	"main/streams/streams.c",
			"line":	1963,
			"primary_score":	999692,
			"second_score":	149191
		}, {
			"file":	"main/streams/streams.c",
			"line":	1967,
			"primary_score":	999692,
			"second_score":	149190
		}, {
			"file":	"main/streams/streams.c",
			"line":	1970,
			"primary_score":	999692,
			"second_score":	149189
		}, {
			"file":	"main/streams/streams.c",
			"line":	1971,
			"primary_score":	999692,
			"second_score":	149078
		}, {
			"file":	"main/streams/streams.c",
			"line":	1978,
			"primary_score":	999692,
			"second_score":	149077
		}, {
			"file":	"main/streams/streams.c",
			"line":	2013,
			"primary_score":	999692,
			"second_score":	149076
		}, {
			"file":	"main/streams/streams.c",
			"line":	2022,
			"primary_score":	999692,
			"second_score":	149075
		}, {
			"file":	"main/streams/streams.c",
			"line":	2029,
			"primary_score":	999692,
			"second_score":	149074
		}, {
			"file":	"main/streams/streams.c",
			"line":	2035,
			"primary_score":	999692,
			"second_score":	149067
		}, {
			"file":	"main/streams/streams.c",
			"line":	2038,
			"primary_score":	999692,
			"second_score":	149066
		}, {
			"file":	"main/strlcpy.c",
			"line":	71,
			"primary_score":	999692,
			"second_score":	149231
		}, {
			"file":	"main/strlcpy.c",
			"line":	72,
			"primary_score":	999692,
			"second_score":	149230
		}, {
			"file":	"main/strlcpy.c",
			"line":	73,
			"primary_score":	999692,
			"second_score":	149229
		}, {
			"file":	"main/strlcpy.c",
			"line":	76,
			"primary_score":	999692,
			"second_score":	149228
		}, {
			"file":	"main/strlcpy.c",
			"line":	77,
			"primary_score":	999692,
			"second_score":	149227
		}, {
			"file":	"main/strlcpy.c",
			"line":	78,
			"primary_score":	999692,
			"second_score":	149224
		}, {
			"file":	"main/strlcpy.c",
			"line":	79,
			"primary_score":	999692,
			"second_score":	149223
		}, {
			"file":	"main/strlcpy.c",
			"line":	84,
			"primary_score":	999692,
			"second_score":	149222
		}, {
			"file":	"main/strlcpy.c",
			"line":	91,
			"primary_score":	999692,
			"second_score":	149221
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	255,
			"primary_score":	999692,
			"second_score":	123325
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	260,
			"primary_score":	999692,
			"second_score":	123324
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	269,
			"primary_score":	999692,
			"second_score":	123323
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	270,
			"primary_score":	999692,
			"second_score":	123322
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	273,
			"primary_score":	999692,
			"second_score":	123321
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	277,
			"primary_score":	999692,
			"second_score":	123320
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	287,
			"primary_score":	999692,
			"second_score":	123332
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	288,
			"primary_score":	999692,
			"second_score":	123331
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	289,
			"primary_score":	999692,
			"second_score":	123330
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	291,
			"primary_score":	999692,
			"second_score":	123329
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	295,
			"primary_score":	999692,
			"second_score":	123328
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	303,
			"primary_score":	999692,
			"second_score":	123327
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	305,
			"primary_score":	999692,
			"second_score":	123326
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	306,
			"primary_score":	999692,
			"second_score":	123319
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	312,
			"primary_score":	999692,
			"second_score":	123318
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	313,
			"primary_score":	999692,
			"second_score":	123317
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	316,
			"primary_score":	999692,
			"second_score":	123316
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	325,
			"primary_score":	999692,
			"second_score":	105183
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	338,
			"primary_score":	999692,
			"second_score":	172953
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	339,
			"primary_score":	999692,
			"second_score":	172952
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	344,
			"primary_score":	999692,
			"second_score":	172951
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	347,
			"primary_score":	999692,
			"second_score":	158195
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	348,
			"primary_score":	999692,
			"second_score":	158194
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	351,
			"primary_score":	999692,
			"second_score":	156942
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	355,
			"primary_score":	999692,
			"second_score":	155622
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	356,
			"primary_score":	999692,
			"second_score":	155621
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	359,
			"primary_score":	999692,
			"second_score":	154675
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	363,
			"primary_score":	999692,
			"second_score":	153729
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	364,
			"primary_score":	999692,
			"second_score":	153728
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	378,
			"primary_score":	999692,
			"second_score":	115105
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	379,
			"primary_score":	999692,
			"second_score":	115104
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	383,
			"primary_score":	999692,
			"second_score":	115103
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	395,
			"primary_score":	999692,
			"second_score":	126778
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	403,
			"primary_score":	999692,
			"second_score":	126752
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	550,
			"primary_score":	999692,
			"second_score":	151899
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	551,
			"primary_score":	999692,
			"second_score":	151898
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	552,
			"primary_score":	999692,
			"second_score":	151897
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	553,
			"primary_score":	999692,
			"second_score":	151896
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	555,
			"primary_score":	999692,
			"second_score":	151895
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	556,
			"primary_score":	999692,
			"second_score":	151785
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	557,
			"primary_score":	999692,
			"second_score":	151675
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	559,
			"primary_score":	999692,
			"second_score":	151565
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	560,
			"primary_score":	999692,
			"second_score":	150654
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	561,
			"primary_score":	999692,
			"second_score":	149860
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	563,
			"primary_score":	999692,
			"second_score":	149065
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	579,
			"primary_score":	999692,
			"second_score":	149064
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	581,
			"primary_score":	999692,
			"second_score":	149063
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	582,
			"primary_score":	999692,
			"second_score":	149057
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	583,
			"primary_score":	999692,
			"second_score":	149051
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	585,
			"primary_score":	999692,
			"second_score":	149045
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	586,
			"primary_score":	999692,
			"second_score":	149044
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	587,
			"primary_score":	999692,
			"second_score":	149043
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	588,
			"primary_score":	999692,
			"second_score":	149035
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	589,
			"primary_score":	999692,
			"second_score":	149034
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	590,
			"primary_score":	999692,
			"second_score":	149033
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	592,
			"primary_score":	999692,
			"second_score":	148956
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	593,
			"primary_score":	999692,
			"second_score":	148955
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	594,
			"primary_score":	999692,
			"second_score":	148954
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	595,
			"primary_score":	999692,
			"second_score":	148946
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	596,
			"primary_score":	999692,
			"second_score":	148945
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	597,
			"primary_score":	999692,
			"second_score":	148944
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	599,
			"primary_score":	999692,
			"second_score":	148869
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	600,
			"primary_score":	999692,
			"second_score":	148868
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	601,
			"primary_score":	999692,
			"second_score":	148867
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	602,
			"primary_score":	999692,
			"second_score":	148859
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	603,
			"primary_score":	999692,
			"second_score":	148858
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	604,
			"primary_score":	999692,
			"second_score":	148857
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	606,
			"primary_score":	999692,
			"second_score":	148782
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	607,
			"primary_score":	999692,
			"second_score":	148760
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	608,
			"primary_score":	999692,
			"second_score":	148738
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	916,
			"primary_score":	999692,
			"second_score":	43491
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	920,
			"primary_score":	999692,
			"second_score":	43490
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	921,
			"primary_score":	999692,
			"second_score":	43489
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	950,
			"primary_score":	999692,
			"second_score":	152142
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	954,
			"primary_score":	999692,
			"second_score":	152141
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	955,
			"primary_score":	999692,
			"second_score":	152140
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	956,
			"primary_score":	999692,
			"second_score":	152139
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1090,
			"primary_score":	999692,
			"second_score":	152128
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1091,
			"primary_score":	999692,
			"second_score":	152127
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1113,
			"primary_score":	999692,
			"second_score":	173228
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1114,
			"primary_score":	999692,
			"second_score":	173227
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1115,
			"primary_score":	999692,
			"second_score":	173226
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1117,
			"primary_score":	999692,
			"second_score":	173225
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1124,
			"primary_score":	999692,
			"second_score":	173224
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1126,
			"primary_score":	999692,
			"second_score":	151902
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1127,
			"primary_score":	999692,
			"second_score":	151901
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1130,
			"primary_score":	999692,
			"second_score":	151900
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1133,
			"primary_score":	999692,
			"second_score":	148716
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1136,
			"primary_score":	999692,
			"second_score":	148715
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1137,
			"primary_score":	999692,
			"second_score":	121252
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1140,
			"primary_score":	999692,
			"second_score":	121251
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1177,
			"primary_score":	999692,
			"second_score":	123839
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1180,
			"primary_score":	999692,
			"second_score":	120807
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1319,
			"primary_score":	999692,
			"second_score":	121250
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1321,
			"primary_score":	999692,
			"second_score":	121248
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1323,
			"primary_score":	999692,
			"second_score":	121247
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1325,
			"primary_score":	999692,
			"second_score":	105196
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1326,
			"primary_score":	999692,
			"second_score":	105195
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1328,
			"primary_score":	999692,
			"second_score":	105194
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1332,
			"primary_score":	999692,
			"second_score":	105193
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1333,
			"primary_score":	999692,
			"second_score":	105192
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1336,
			"primary_score":	999692,
			"second_score":	105191
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1337,
			"primary_score":	999692,
			"second_score":	105190
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1339,
			"primary_score":	999692,
			"second_score":	3130
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1344,
			"primary_score":	999692,
			"second_score":	1
		}],
	"mutation_info":	[{
			"file":	"ext/date/php_date.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"ext/date/php_date.c",
			"lines":	[{
					"line":	2264,
					"switches":	[]
				}, {
					"line":	2265,
					"switches":	[]
				}, {
					"line":	2267,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2268,
							"begin_column":	0,
							"end_line":	2268,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	2,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	3,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	4,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	5,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	6,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	7,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	8,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	9,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	10,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	11,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	12,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	13,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	14,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	15,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	16,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}]
						}, {
							"switch":	1,
							"types":	[[], [], [1], [], [], [], [12], [], [7, 8, 9, 10, 11], [], [], [], [], [2, 3, 4, 5], [], [], [6]],
							"begin_line":	2268,
							"begin_column":	2,
							"end_line":	2268,
							"end_column":	11,
							"patch_codes":	["if (!__is_neg(\"\", \"L2268\", 10, &(intern), sizeof (intern), &(ptr), sizeof (ptr), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date)))\n    intern = _emalloc((sizeof(php_period_obj)));\n", "__zend_calloc((sizeof(php_period_obj)), 0)", "_ecalloc((sizeof(php_period_obj)), 0)", "aligned_alloc((sizeof(php_period_obj)), 0)", "calloc((sizeof(php_period_obj)), 0)", "{\n}\n", "intern = __zend_malloc((sizeof(php_period_obj)))", "intern = alloca((sizeof(php_period_obj)))", "intern = malloc((sizeof(php_period_obj)))", "intern = valloc((sizeof(php_period_obj)))", "intern = zend_vm_stack_alloc((sizeof(php_period_obj)))", "intern = (intern)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6656611589486143, -5.633042191048613, -5.3884574500486133, -5.5857759510486131, -5.5857759510486131, -5.5857759510486131, -5.5857759510486131, -4.8278878510486134, -4.8278878510486134, -4.8278878510486134]
								}, {
									"case":	2,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	3,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	4,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	5,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	6,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	7,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	8,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	9,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	10,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	11,
									"scores":	[-4.3968879810486134]
								}, {
									"case":	12,
									"scores":	[-4.3968879810486134]
								}]
						}]
				}, {
					"line":	2268,
					"switches":	[{
							"switch":	2,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2269,
							"begin_column":	0,
							"end_line":	2269,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.376685273731094]
								}, {
									"case":	2,
									"scores":	[-4.376685273731094]
								}, {
									"case":	3,
									"scores":	[-4.376685273731094]
								}, {
									"case":	4,
									"scores":	[-4.376685273731094]
								}, {
									"case":	5,
									"scores":	[-4.376685273731094]
								}, {
									"case":	6,
									"scores":	[-4.376685273731094]
								}, {
									"case":	7,
									"scores":	[-4.376685273731094]
								}, {
									"case":	8,
									"scores":	[-4.376685273731094]
								}, {
									"case":	9,
									"scores":	[-4.376685273731094]
								}, {
									"case":	10,
									"scores":	[-4.376685273731094]
								}, {
									"case":	11,
									"scores":	[-4.376685273731094]
								}, {
									"case":	12,
									"scores":	[-4.376685273731094]
								}, {
									"case":	13,
									"scores":	[-4.376685273731094]
								}, {
									"case":	14,
									"scores":	[-4.376685273731094]
								}, {
									"case":	15,
									"scores":	[-4.376685273731094]
								}, {
									"case":	16,
									"scores":	[-4.376685273731094]
								}, {
									"case":	17,
									"scores":	[-4.376685273731094]
								}, {
									"case":	18,
									"scores":	[-4.376685273731094]
								}, {
									"case":	19,
									"scores":	[-4.376685273731094]
								}, {
									"case":	20,
									"scores":	[-4.376685273731094]
								}, {
									"case":	21,
									"scores":	[-4.376685273731094]
								}, {
									"case":	22,
									"scores":	[-4.376685273731094]
								}, {
									"case":	23,
									"scores":	[-4.376685273731094]
								}, {
									"case":	24,
									"scores":	[-4.376685273731094]
								}, {
									"case":	25,
									"scores":	[-4.376685273731094]
								}, {
									"case":	26,
									"scores":	[-4.376685273731094]
								}, {
									"case":	27,
									"scores":	[-4.376685273731094]
								}, {
									"case":	28,
									"scores":	[-4.376685273731094]
								}, {
									"case":	29,
									"scores":	[-4.376685273731094]
								}, {
									"case":	30,
									"scores":	[-4.376685273731094]
								}, {
									"case":	31,
									"scores":	[-4.376685273731094]
								}, {
									"case":	32,
									"scores":	[-4.376685273731094]
								}, {
									"case":	33,
									"scores":	[-4.376685273731094]
								}, {
									"case":	34,
									"scores":	[-4.376685273731094]
								}, {
									"case":	35,
									"scores":	[-4.376685273731094]
								}, {
									"case":	36,
									"scores":	[-4.376685273731094]
								}, {
									"case":	37,
									"scores":	[-4.376685273731094]
								}, {
									"case":	38,
									"scores":	[-4.376685273731094]
								}, {
									"case":	39,
									"scores":	[-4.376685273731094]
								}, {
									"case":	40,
									"scores":	[-4.376685273731094]
								}, {
									"case":	41,
									"scores":	[-4.376685273731094]
								}, {
									"case":	42,
									"scores":	[-4.376685273731094]
								}, {
									"case":	43,
									"scores":	[-4.376685273731094]
								}, {
									"case":	44,
									"scores":	[-4.376685273731094]
								}, {
									"case":	45,
									"scores":	[-4.376685273731094]
								}, {
									"case":	46,
									"scores":	[-4.376685273731094]
								}, {
									"case":	47,
									"scores":	[-4.376685273731094]
								}, {
									"case":	48,
									"scores":	[-4.376685273731094]
								}, {
									"case":	49,
									"scores":	[-4.376685273731094]
								}, {
									"case":	50,
									"scores":	[-4.376685273731094]
								}, {
									"case":	51,
									"scores":	[-4.376685273731094]
								}, {
									"case":	52,
									"scores":	[-4.376685273731094]
								}, {
									"case":	53,
									"scores":	[-4.376685273731094]
								}, {
									"case":	54,
									"scores":	[-4.376685273731094]
								}, {
									"case":	55,
									"scores":	[-4.376685273731094]
								}, {
									"case":	56,
									"scores":	[-4.376685273731094]
								}, {
									"case":	57,
									"scores":	[-4.376685273731094]
								}, {
									"case":	58,
									"scores":	[-4.376685273731094]
								}, {
									"case":	59,
									"scores":	[-4.376685273731094]
								}, {
									"case":	60,
									"scores":	[-4.376685273731094]
								}, {
									"case":	61,
									"scores":	[-4.376685273731094]
								}, {
									"case":	62,
									"scores":	[-4.376685273731094]
								}, {
									"case":	63,
									"scores":	[-4.376685273731094]
								}, {
									"case":	64,
									"scores":	[-4.376685273731094]
								}, {
									"case":	65,
									"scores":	[-4.376685273731094]
								}, {
									"case":	66,
									"scores":	[-4.376685273731094]
								}, {
									"case":	67,
									"scores":	[-4.376685273731094]
								}, {
									"case":	68,
									"scores":	[-4.376685273731094]
								}, {
									"case":	69,
									"scores":	[-4.376685273731094]
								}, {
									"case":	70,
									"scores":	[-4.376685273731094]
								}, {
									"case":	71,
									"scores":	[-4.376685273731094]
								}, {
									"case":	72,
									"scores":	[-4.376685273731094]
								}, {
									"case":	73,
									"scores":	[-4.376685273731094]
								}, {
									"case":	74,
									"scores":	[-4.376685273731094]
								}, {
									"case":	75,
									"scores":	[-4.376685273731094]
								}, {
									"case":	76,
									"scores":	[-4.376685273731094]
								}, {
									"case":	77,
									"scores":	[-4.376685273731094]
								}, {
									"case":	78,
									"scores":	[-4.376685273731094]
								}, {
									"case":	79,
									"scores":	[-4.376685273731094]
								}, {
									"case":	80,
									"scores":	[-4.376685273731094]
								}, {
									"case":	81,
									"scores":	[-4.376685273731094]
								}, {
									"case":	82,
									"scores":	[-4.376685273731094]
								}, {
									"case":	83,
									"scores":	[-4.376685273731094]
								}, {
									"case":	84,
									"scores":	[-4.376685273731094]
								}, {
									"case":	85,
									"scores":	[-4.376685273731094]
								}, {
									"case":	86,
									"scores":	[-4.376685273731094]
								}, {
									"case":	87,
									"scores":	[-4.376685273731094]
								}, {
									"case":	88,
									"scores":	[-4.376685273731094]
								}, {
									"case":	89,
									"scores":	[-4.376685273731094]
								}, {
									"case":	90,
									"scores":	[-4.376685273731094]
								}, {
									"case":	91,
									"scores":	[-4.376685273731094]
								}, {
									"case":	92,
									"scores":	[-4.376685273731094]
								}, {
									"case":	93,
									"scores":	[-4.376685273731094]
								}, {
									"case":	94,
									"scores":	[-4.376685273731094]
								}, {
									"case":	95,
									"scores":	[-4.376685273731094]
								}, {
									"case":	96,
									"scores":	[-4.376685273731094]
								}, {
									"case":	97,
									"scores":	[-4.376685273731094]
								}, {
									"case":	98,
									"scores":	[-4.376685273731094]
								}, {
									"case":	99,
									"scores":	[-4.376685273731094]
								}, {
									"case":	100,
									"scores":	[-4.376685273731094]
								}, {
									"case":	101,
									"scores":	[-4.376685273731094]
								}, {
									"case":	102,
									"scores":	[-4.376685273731094]
								}, {
									"case":	103,
									"scores":	[-4.376685273731094]
								}, {
									"case":	104,
									"scores":	[-4.376685273731094]
								}, {
									"case":	105,
									"scores":	[-4.376685273731094]
								}, {
									"case":	106,
									"scores":	[-4.376685273731094]
								}, {
									"case":	107,
									"scores":	[-4.376685273731094]
								}, {
									"case":	108,
									"scores":	[-4.376685273731094]
								}, {
									"case":	109,
									"scores":	[-4.376685273731094]
								}, {
									"case":	110,
									"scores":	[-4.376685273731094]
								}, {
									"case":	111,
									"scores":	[-4.376685273731094]
								}, {
									"case":	112,
									"scores":	[-4.376685273731094]
								}, {
									"case":	113,
									"scores":	[-4.376685273731094]
								}, {
									"case":	114,
									"scores":	[-4.376685273731094]
								}, {
									"case":	115,
									"scores":	[-4.376685273731094]
								}, {
									"case":	116,
									"scores":	[-4.376685273731094]
								}, {
									"case":	117,
									"scores":	[-4.376685273731094]
								}, {
									"case":	118,
									"scores":	[-4.376685273731094]
								}, {
									"case":	119,
									"scores":	[-4.376685273731094]
								}, {
									"case":	120,
									"scores":	[-4.376685273731094]
								}, {
									"case":	121,
									"scores":	[-4.376685273731094]
								}, {
									"case":	122,
									"scores":	[-4.376685273731094]
								}, {
									"case":	123,
									"scores":	[-4.376685273731094]
								}, {
									"case":	124,
									"scores":	[-4.376685273731094]
								}, {
									"case":	125,
									"scores":	[-4.376685273731094]
								}, {
									"case":	126,
									"scores":	[-4.376685273731094]
								}, {
									"case":	127,
									"scores":	[-4.376685273731094]
								}, {
									"case":	128,
									"scores":	[-4.376685273731094]
								}, {
									"case":	129,
									"scores":	[-4.376685273731094]
								}, {
									"case":	130,
									"scores":	[-4.376685273731094]
								}, {
									"case":	131,
									"scores":	[-4.376685273731094]
								}, {
									"case":	132,
									"scores":	[-4.376685273731094]
								}, {
									"case":	133,
									"scores":	[-4.376685273731094]
								}, {
									"case":	134,
									"scores":	[-4.376685273731094]
								}, {
									"case":	135,
									"scores":	[-4.376685273731094]
								}, {
									"case":	136,
									"scores":	[-4.376685273731094]
								}, {
									"case":	137,
									"scores":	[-4.376685273731094]
								}, {
									"case":	138,
									"scores":	[-4.376685273731094]
								}, {
									"case":	139,
									"scores":	[-4.376685273731094]
								}, {
									"case":	140,
									"scores":	[-4.376685273731094]
								}, {
									"case":	141,
									"scores":	[-4.376685273731094]
								}, {
									"case":	142,
									"scores":	[-4.376685273731094]
								}, {
									"case":	143,
									"scores":	[-4.376685273731094]
								}, {
									"case":	144,
									"scores":	[-4.376685273731094]
								}, {
									"case":	145,
									"scores":	[-4.376685273731094]
								}, {
									"case":	146,
									"scores":	[-4.376685273731094]
								}, {
									"case":	147,
									"scores":	[-4.376685273731094]
								}, {
									"case":	148,
									"scores":	[-4.376685273731094]
								}]
						}, {
							"switch":	3,
							"types":	[[], [], [1], [], [], [], [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], [], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [], [], [29]],
							"begin_line":	2269,
							"begin_column":	2,
							"end_line":	2269,
							"end_column":	42,
							"patch_codes":	["if (!__is_neg(\"\", \"L2269\", 10, &(intern), sizeof (intern), &(ptr), sizeof (ptr), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date)))\n    memset(intern, 0, sizeof(php_period_obj));\n", "_php_stream_copy_to_mem(intern, 0, sizeof(php_period_obj), 0)", "_php_stream_copy_to_mem(intern, 0, sizeof(php_period_obj), le_index_ptr)", "_php_stream_copy_to_mem(intern, 0, sizeof(php_period_obj), php_date_global_timezone_db_enabled)", "_php_stream_copy_to_stream_ex(intern, 0, sizeof(php_period_obj), 0)", "_php_stream_get_line(intern, 0, sizeof(php_period_obj), 0)", "_safe_erealloc(intern, 0, sizeof(php_period_obj), 0)", "_safe_realloc(intern, 0, sizeof(php_period_obj), 0)", "fread(intern, 0, sizeof(php_period_obj), 0)", "fread_unlocked(intern, 0, sizeof(php_period_obj), 0)", "fwrite(intern, 0, sizeof(php_period_obj), 0)", "fwrite_unlocked(intern, 0, sizeof(php_period_obj), 0)", "getpwent_r(intern, 0, sizeof(php_period_obj), 0)", "mbrtowc(intern, 0, sizeof(php_period_obj), 0)", "mbsrtowcs(intern, 0, sizeof(php_period_obj), 0)", "php_mergesort(intern, 0, sizeof(php_period_obj), 0)", "profil(intern, 0, sizeof(php_period_obj), 0)", "qsort(intern, 0, sizeof(php_period_obj), 0)", "strncasecmp_l(intern, 0, sizeof(php_period_obj), 0)", "strxfrm_l(intern, 0, sizeof(php_period_obj), 0)", "wcsncasecmp_l(intern, 0, sizeof(php_period_obj), 0)", "wcsrtombs(intern, 0, sizeof(php_period_obj), 0)", "wcsxfrm_l(intern, 0, sizeof(php_period_obj), 0)", "zend_declare_class_constant(intern, 0, sizeof(php_period_obj), 0)", "zend_declare_class_constant_bool(intern, 0, sizeof(php_period_obj), 0)", "zend_declare_class_constant_long(intern, 0, sizeof(php_period_obj), 0)", "zend_declare_class_constant_string(intern, 0, sizeof(php_period_obj), 0)", "zend_qsort(intern, 0, sizeof(php_period_obj), 0)", "{\n}\n", "Debug(intern, 0, sizeof(php_period_obj))", "_IO_sgetn(intern, 0, sizeof(php_period_obj))", "__stpncpy(intern, 0, sizeof(php_period_obj))", "_php_stream_copy_to_stream(intern, 0, sizeof(php_period_obj))", "_php_stream_printf(intern, 0, sizeof(php_period_obj))", "_php_stream_read(intern, 0, sizeof(php_period_obj))", "_php_stream_write(intern, 0, sizeof(php_period_obj))", "_zend_mm_realloc(intern, 0, sizeof(php_period_obj))", "ap_php_asprintf(intern, 0, sizeof(php_period_obj))", "bcmp(intern, 0, sizeof(php_period_obj))", "bcopy(intern, 0, sizeof(php_period_obj))", "execl(intern, 0, sizeof(php_period_obj))", "execle(intern, 0, sizeof(php_period_obj))", "execlp(intern, 0, sizeof(php_period_obj))", "fprintf(intern, 0, sizeof(php_period_obj))", "fwprintf(intern, 0, sizeof(php_period_obj))", "mbstowcs(intern, 0, sizeof(php_period_obj))", "mbtowc(intern, 0, sizeof(php_period_obj))", "memchr(intern, 0, sizeof(php_period_obj))", "memcmp(intern, 0, sizeof(php_period_obj))", "memcpy(intern, 0, sizeof(php_period_obj))", "memmove(intern, 0, sizeof(php_period_obj))", "memset(intern, 0, sizeof(php_period_obj))", "mknod(intern, 0, sizeof(php_period_obj))", "php_printf(intern, 0, sizeof(php_period_obj))", "php_sprintf(intern, 0, sizeof(php_period_obj))", "php_stream_locate_eol(intern, 0, sizeof(php_period_obj))", "php_strlcat(intern, 0, sizeof(php_period_obj))", "php_strlcpy(intern, 0, sizeof(php_period_obj))", "posix_memalign(intern, 0, sizeof(php_period_obj))", "printf(intern, 0, sizeof(php_period_obj))", "readlink(intern, 0, sizeof(php_period_obj))", "setbuffer(intern, 0, sizeof(php_period_obj))", "sprintf(intern, 0, sizeof(php_period_obj))", "stpncpy(intern, 0, sizeof(php_period_obj))", "strncasecmp(intern, 0, sizeof(php_period_obj))", "strncat(intern, 0, sizeof(php_period_obj))", "strncmp(intern, 0, sizeof(php_period_obj))", "strncpy(intern, 0, sizeof(php_period_obj))", "strxfrm(intern, 0, sizeof(php_period_obj))", "virtual_open(intern, 0, sizeof(php_period_obj))", "wcpncpy(intern, 0, sizeof(php_period_obj))", "wcsncasecmp(intern, 0, sizeof(php_period_obj))", "wcsncat(intern, 0, sizeof(php_period_obj))", "wcsncmp(intern, 0, sizeof(php_period_obj))", "wcsncpy(intern, 0, sizeof(php_period_obj))", "wcstombs(intern, 0, sizeof(php_period_obj))", "wcsxfrm(intern, 0, sizeof(php_period_obj))", "wmemchr(intern, 0, sizeof(php_period_obj))", "wmemcmp(intern, 0, sizeof(php_period_obj))", "wmemcpy(intern, 0, sizeof(php_period_obj))", "wmemmove(intern, 0, sizeof(php_period_obj))", "wmemset(intern, 0, sizeof(php_period_obj))", "wprintf(intern, 0, sizeof(php_period_obj))", "zend_class_implements(intern, 0, sizeof(php_period_obj))", "zend_declare_class_constant_null(intern, 0, sizeof(php_period_obj))", "zend_delete_global_variable_ex(intern, 0, sizeof(php_period_obj))", "zend_fcall_info_argn(intern, 0, sizeof(php_period_obj))", "zend_memrchr(intern, 0, sizeof(php_period_obj))", "zend_ptr_stack_n_pop(intern, 0, sizeof(php_period_obj))", "zend_ptr_stack_n_push(intern, 0, sizeof(php_period_obj))", "memset((&class_type), 0, sizeof(php_period_obj))", "memset((&intern), 0, sizeof(php_period_obj))", "memset((&ptr), 0, sizeof(php_period_obj))", "memset((&retval), 0, sizeof(php_period_obj))", "memset((intern), 0, sizeof(php_period_obj))", "memset(intern, (0), sizeof(php_period_obj))", "memset(intern, (class_type != 0), sizeof(php_period_obj))", "memset(intern, (class_type == 0), sizeof(php_period_obj))", "memset(intern, (intern != 0), sizeof(php_period_obj))", "memset(intern, (intern == 0), sizeof(php_period_obj))", "memset(intern, (ptr != 0), sizeof(php_period_obj))", "memset(intern, (ptr == 0), sizeof(php_period_obj))", "memset(intern, (retval != 0), sizeof(php_period_obj))", "memset(intern, (retval == 0), sizeof(php_period_obj))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4641758816310944, -5.8492384937310939, -7.2979487427310943, -7.4952672437310941, -7.4952672437310941, -7.4952672437310941, -7.4952672437310941, -6.7373791437310935, -6.7373791437310935, -6.7373791437310935]
								}, {
									"case":	2,
									"scores":	[-4.376685273731094]
								}, {
									"case":	3,
									"scores":	[-4.376685273731094]
								}, {
									"case":	4,
									"scores":	[-4.376685273731094]
								}, {
									"case":	5,
									"scores":	[-4.376685273731094]
								}, {
									"case":	6,
									"scores":	[-4.376685273731094]
								}, {
									"case":	7,
									"scores":	[-4.376685273731094]
								}, {
									"case":	8,
									"scores":	[-4.376685273731094]
								}, {
									"case":	9,
									"scores":	[-4.376685273731094]
								}, {
									"case":	10,
									"scores":	[-4.376685273731094]
								}, {
									"case":	11,
									"scores":	[-4.376685273731094]
								}, {
									"case":	12,
									"scores":	[-4.376685273731094]
								}, {
									"case":	13,
									"scores":	[-4.376685273731094]
								}, {
									"case":	14,
									"scores":	[-4.376685273731094]
								}, {
									"case":	15,
									"scores":	[-4.376685273731094]
								}, {
									"case":	16,
									"scores":	[-4.376685273731094]
								}, {
									"case":	17,
									"scores":	[-4.376685273731094]
								}, {
									"case":	18,
									"scores":	[-4.376685273731094]
								}, {
									"case":	19,
									"scores":	[-4.376685273731094]
								}, {
									"case":	20,
									"scores":	[-4.376685273731094]
								}, {
									"case":	21,
									"scores":	[-4.376685273731094]
								}, {
									"case":	22,
									"scores":	[-4.376685273731094]
								}, {
									"case":	23,
									"scores":	[-4.376685273731094]
								}, {
									"case":	24,
									"scores":	[-4.376685273731094]
								}, {
									"case":	25,
									"scores":	[-4.376685273731094]
								}, {
									"case":	26,
									"scores":	[-4.376685273731094]
								}, {
									"case":	27,
									"scores":	[-4.376685273731094]
								}, {
									"case":	28,
									"scores":	[-4.376685273731094]
								}, {
									"case":	29,
									"scores":	[-4.376685273731094]
								}, {
									"case":	30,
									"scores":	[-4.376685273731094]
								}, {
									"case":	31,
									"scores":	[-4.376685273731094]
								}, {
									"case":	32,
									"scores":	[-4.376685273731094]
								}, {
									"case":	33,
									"scores":	[-4.376685273731094]
								}, {
									"case":	34,
									"scores":	[-4.376685273731094]
								}, {
									"case":	35,
									"scores":	[-4.376685273731094]
								}, {
									"case":	36,
									"scores":	[-4.376685273731094]
								}, {
									"case":	37,
									"scores":	[-4.376685273731094]
								}, {
									"case":	38,
									"scores":	[-4.376685273731094]
								}, {
									"case":	39,
									"scores":	[-4.376685273731094]
								}, {
									"case":	40,
									"scores":	[-4.376685273731094]
								}, {
									"case":	41,
									"scores":	[-4.376685273731094]
								}, {
									"case":	42,
									"scores":	[-4.376685273731094]
								}, {
									"case":	43,
									"scores":	[-4.376685273731094]
								}, {
									"case":	44,
									"scores":	[-4.376685273731094]
								}, {
									"case":	45,
									"scores":	[-4.376685273731094]
								}, {
									"case":	46,
									"scores":	[-4.376685273731094]
								}, {
									"case":	47,
									"scores":	[-4.376685273731094]
								}, {
									"case":	48,
									"scores":	[-4.376685273731094]
								}, {
									"case":	49,
									"scores":	[-4.376685273731094]
								}, {
									"case":	50,
									"scores":	[-4.376685273731094]
								}, {
									"case":	51,
									"scores":	[-4.376685273731094]
								}, {
									"case":	52,
									"scores":	[-4.376685273731094]
								}, {
									"case":	53,
									"scores":	[-4.376685273731094]
								}, {
									"case":	54,
									"scores":	[-4.376685273731094]
								}, {
									"case":	55,
									"scores":	[-4.376685273731094]
								}, {
									"case":	56,
									"scores":	[-4.376685273731094]
								}, {
									"case":	57,
									"scores":	[-4.376685273731094]
								}, {
									"case":	58,
									"scores":	[-4.376685273731094]
								}, {
									"case":	59,
									"scores":	[-4.376685273731094]
								}, {
									"case":	60,
									"scores":	[-4.376685273731094]
								}, {
									"case":	61,
									"scores":	[-4.376685273731094]
								}, {
									"case":	62,
									"scores":	[-4.376685273731094]
								}, {
									"case":	63,
									"scores":	[-4.376685273731094]
								}, {
									"case":	64,
									"scores":	[-4.376685273731094]
								}, {
									"case":	65,
									"scores":	[-4.376685273731094]
								}, {
									"case":	66,
									"scores":	[-4.376685273731094]
								}, {
									"case":	67,
									"scores":	[-4.376685273731094]
								}, {
									"case":	68,
									"scores":	[-4.376685273731094]
								}, {
									"case":	69,
									"scores":	[-4.376685273731094]
								}, {
									"case":	70,
									"scores":	[-4.376685273731094]
								}, {
									"case":	71,
									"scores":	[-4.376685273731094]
								}, {
									"case":	72,
									"scores":	[-4.376685273731094]
								}, {
									"case":	73,
									"scores":	[-4.376685273731094]
								}, {
									"case":	74,
									"scores":	[-4.376685273731094]
								}, {
									"case":	75,
									"scores":	[-4.376685273731094]
								}, {
									"case":	76,
									"scores":	[-4.376685273731094]
								}, {
									"case":	77,
									"scores":	[-4.376685273731094]
								}, {
									"case":	78,
									"scores":	[-4.376685273731094]
								}, {
									"case":	79,
									"scores":	[-4.376685273731094]
								}, {
									"case":	80,
									"scores":	[-4.376685273731094]
								}, {
									"case":	81,
									"scores":	[-4.376685273731094]
								}, {
									"case":	82,
									"scores":	[-4.376685273731094]
								}, {
									"case":	83,
									"scores":	[-4.376685273731094]
								}, {
									"case":	84,
									"scores":	[-4.376685273731094]
								}, {
									"case":	85,
									"scores":	[-4.376685273731094]
								}, {
									"case":	86,
									"scores":	[-4.376685273731094]
								}, {
									"case":	87,
									"scores":	[-4.376685273731094]
								}, {
									"case":	88,
									"scores":	[-4.376685273731094]
								}, {
									"case":	89,
									"scores":	[-4.376685273731094]
								}, {
									"case":	90,
									"scores":	[-4.376685273731094]
								}, {
									"case":	91,
									"scores":	[-4.376685273731094]
								}, {
									"case":	92,
									"scores":	[-4.376685273731094]
								}, {
									"case":	93,
									"scores":	[-4.376685273731094]
								}, {
									"case":	94,
									"scores":	[-4.376685273731094]
								}, {
									"case":	95,
									"scores":	[-4.376685273731094]
								}, {
									"case":	96,
									"scores":	[-4.376685273731094]
								}, {
									"case":	97,
									"scores":	[-4.376685273731094]
								}, {
									"case":	98,
									"scores":	[-4.376685273731094]
								}, {
									"case":	99,
									"scores":	[-4.376685273731094]
								}, {
									"case":	100,
									"scores":	[-4.376685273731094]
								}, {
									"case":	101,
									"scores":	[-4.376685273731094]
								}, {
									"case":	102,
									"scores":	[-4.376685273731094]
								}, {
									"case":	103,
									"scores":	[-4.376685273731094]
								}, {
									"case":	104,
									"scores":	[-4.376685273731094]
								}]
						}]
				}, {
					"line":	2269,
					"switches":	[{
							"switch":	4,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2270,
							"begin_column":	0,
							"end_line":	2270,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	2,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	3,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	4,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	5,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	6,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	7,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	8,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	9,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	10,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	11,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	12,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	13,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	14,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	15,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	16,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	17,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	18,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	19,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	20,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	21,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	22,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	23,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	24,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	25,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	26,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	27,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	28,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	29,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	30,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	31,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	32,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	33,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	34,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	35,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	36,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	37,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	38,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	39,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	40,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	41,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	42,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	43,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	44,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	45,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	46,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	47,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	48,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	49,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	50,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	51,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	52,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	53,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	54,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	55,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	56,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	57,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	58,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	59,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	60,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	61,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	62,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	63,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	64,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	65,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	66,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	67,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	68,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	69,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	70,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	71,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	72,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	73,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	74,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	75,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	76,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	77,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	78,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	79,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	80,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	81,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	82,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	83,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	84,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	85,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	86,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	87,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	88,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	89,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	90,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	91,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	92,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	93,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	94,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	95,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	96,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	97,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	98,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	99,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	100,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	101,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	102,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	103,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	104,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	105,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	106,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	107,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	108,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	109,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	110,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	111,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	112,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	113,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	114,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	115,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	116,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	117,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	118,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	119,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	120,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	121,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	122,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	123,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	124,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	125,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	126,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	127,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	128,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	129,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	130,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	131,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	132,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	133,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	134,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	135,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	136,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	137,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	138,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	139,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	140,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	141,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	142,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	143,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	144,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	145,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	146,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	147,
									"scores":	[-4.3564825664135745]
								}, {
									"case":	148,
									"scores":	[-4.3564825664135745]
								}]
						}, {
							"switch":	5,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	2270,
							"begin_column":	2,
							"end_line":	2272,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L2270\", 10, &(ptr), sizeof (ptr), &(intern), sizeof (intern), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date))) {\n    *ptr = intern;\n}\n", "if ((ptr) || __is_neg(\"\", \"L2270\", 10, &(ptr), sizeof (ptr), &(intern), sizeof (intern), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date))) {\n    *ptr = intern;\n}\n", "if ((ptr) && !__is_neg(\"\", \"L2270\", 10, &(ptr), sizeof (ptr), &(intern), sizeof (intern), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date))) {\n    *ptr = intern;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-0.31989478642814584, -0.66334986932814433, -1.6215580854281457, -2.5323118864281451, -2.5323118864281451, -2.5323118864281451, -2.5323118864281451, -1.7744237864281458, -1.7744237864281458, -1.7744237864281458]
								}, {
									"case":	2,
									"scores":	[-3.9186076454281462, -4.2620627283281456, -5.2202709444281457, -6.1310247454281459, -6.1310247454281459, -6.1310247454281459, -6.1310247454281459, -5.3731366454281462, -5.3731366454281462, -5.3731366454281462]
								}, {
									"case":	3,
									"scores":	[-3.9186076454281462, -4.2620627283281456, -5.2202709444281457, -6.1310247454281459, -6.1310247454281459, -6.1310247454281459, -6.1310247454281459, -5.3731366454281462, -5.3731366454281462, -5.3731366454281462]
								}]
						}, {
							"switch":	6,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2270,
							"begin_column":	2,
							"end_line":	2272,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L2270\", 10, &(ptr), sizeof (ptr), &(intern), sizeof (intern), &(class_type), sizeof (class_type), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date)))\n    if (ptr) {\n        *ptr = intern;\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1964430464135747, -5.5398981293135749, -6.498106345413575, -7.4088601464135744, -7.4088601464135744, -7.4088601464135744, -7.4088601464135744, -6.6509720464135746, -6.6509720464135746, -6.6509720464135746]
								}]
						}]
				}, {
					"line":	2273,
					"switches":	[{
							"switch":	7,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2274,
							"begin_column":	0,
							"end_line":	2274,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.336279859096055]
								}, {
									"case":	2,
									"scores":	[-4.336279859096055]
								}, {
									"case":	3,
									"scores":	[-4.336279859096055]
								}, {
									"case":	4,
									"scores":	[-4.336279859096055]
								}, {
									"case":	5,
									"scores":	[-4.336279859096055]
								}, {
									"case":	6,
									"scores":	[-4.336279859096055]
								}, {
									"case":	7,
									"scores":	[-4.336279859096055]
								}, {
									"case":	8,
									"scores":	[-4.336279859096055]
								}, {
									"case":	9,
									"scores":	[-4.336279859096055]
								}, {
									"case":	10,
									"scores":	[-4.336279859096055]
								}, {
									"case":	11,
									"scores":	[-4.336279859096055]
								}, {
									"case":	12,
									"scores":	[-4.336279859096055]
								}, {
									"case":	13,
									"scores":	[-4.336279859096055]
								}, {
									"case":	14,
									"scores":	[-4.336279859096055]
								}, {
									"case":	15,
									"scores":	[-4.336279859096055]
								}, {
									"case":	16,
									"scores":	[-4.336279859096055]
								}, {
									"case":	17,
									"scores":	[-4.336279859096055]
								}, {
									"case":	18,
									"scores":	[-4.336279859096055]
								}, {
									"case":	19,
									"scores":	[-4.336279859096055]
								}, {
									"case":	20,
									"scores":	[-4.336279859096055]
								}, {
									"case":	21,
									"scores":	[-4.336279859096055]
								}, {
									"case":	22,
									"scores":	[-4.336279859096055]
								}, {
									"case":	23,
									"scores":	[-4.336279859096055]
								}, {
									"case":	24,
									"scores":	[-4.336279859096055]
								}, {
									"case":	25,
									"scores":	[-4.336279859096055]
								}, {
									"case":	26,
									"scores":	[-4.336279859096055]
								}, {
									"case":	27,
									"scores":	[-4.336279859096055]
								}, {
									"case":	28,
									"scores":	[-4.336279859096055]
								}, {
									"case":	29,
									"scores":	[-4.336279859096055]
								}, {
									"case":	30,
									"scores":	[-4.336279859096055]
								}, {
									"case":	31,
									"scores":	[-4.336279859096055]
								}, {
									"case":	32,
									"scores":	[-4.336279859096055]
								}, {
									"case":	33,
									"scores":	[-4.336279859096055]
								}, {
									"case":	34,
									"scores":	[-4.336279859096055]
								}, {
									"case":	35,
									"scores":	[-4.336279859096055]
								}, {
									"case":	36,
									"scores":	[-4.336279859096055]
								}, {
									"case":	37,
									"scores":	[-4.336279859096055]
								}, {
									"case":	38,
									"scores":	[-4.336279859096055]
								}, {
									"case":	39,
									"scores":	[-4.336279859096055]
								}, {
									"case":	40,
									"scores":	[-4.336279859096055]
								}, {
									"case":	41,
									"scores":	[-4.336279859096055]
								}, {
									"case":	42,
									"scores":	[-4.336279859096055]
								}, {
									"case":	43,
									"scores":	[-4.336279859096055]
								}, {
									"case":	44,
									"scores":	[-4.336279859096055]
								}, {
									"case":	45,
									"scores":	[-4.336279859096055]
								}, {
									"case":	46,
									"scores":	[-4.336279859096055]
								}, {
									"case":	47,
									"scores":	[-4.336279859096055]
								}, {
									"case":	48,
									"scores":	[-4.336279859096055]
								}, {
									"case":	49,
									"scores":	[-4.336279859096055]
								}, {
									"case":	50,
									"scores":	[-4.336279859096055]
								}, {
									"case":	51,
									"scores":	[-4.336279859096055]
								}, {
									"case":	52,
									"scores":	[-4.336279859096055]
								}, {
									"case":	53,
									"scores":	[-4.336279859096055]
								}, {
									"case":	54,
									"scores":	[-4.336279859096055]
								}, {
									"case":	55,
									"scores":	[-4.336279859096055]
								}, {
									"case":	56,
									"scores":	[-4.336279859096055]
								}, {
									"case":	57,
									"scores":	[-4.336279859096055]
								}, {
									"case":	58,
									"scores":	[-4.336279859096055]
								}, {
									"case":	59,
									"scores":	[-4.336279859096055]
								}, {
									"case":	60,
									"scores":	[-4.336279859096055]
								}, {
									"case":	61,
									"scores":	[-4.336279859096055]
								}, {
									"case":	62,
									"scores":	[-4.336279859096055]
								}, {
									"case":	63,
									"scores":	[-4.336279859096055]
								}, {
									"case":	64,
									"scores":	[-4.336279859096055]
								}, {
									"case":	65,
									"scores":	[-4.336279859096055]
								}, {
									"case":	66,
									"scores":	[-4.336279859096055]
								}, {
									"case":	67,
									"scores":	[-4.336279859096055]
								}, {
									"case":	68,
									"scores":	[-4.336279859096055]
								}, {
									"case":	69,
									"scores":	[-4.336279859096055]
								}, {
									"case":	70,
									"scores":	[-4.336279859096055]
								}, {
									"case":	71,
									"scores":	[-4.336279859096055]
								}, {
									"case":	72,
									"scores":	[-4.336279859096055]
								}, {
									"case":	73,
									"scores":	[-4.336279859096055]
								}, {
									"case":	74,
									"scores":	[-4.336279859096055]
								}, {
									"case":	75,
									"scores":	[-4.336279859096055]
								}, {
									"case":	76,
									"scores":	[-4.336279859096055]
								}, {
									"case":	77,
									"scores":	[-4.336279859096055]
								}, {
									"case":	78,
									"scores":	[-4.336279859096055]
								}, {
									"case":	79,
									"scores":	[-4.336279859096055]
								}, {
									"case":	80,
									"scores":	[-4.336279859096055]
								}, {
									"case":	81,
									"scores":	[-4.336279859096055]
								}, {
									"case":	82,
									"scores":	[-4.336279859096055]
								}, {
									"case":	83,
									"scores":	[-4.336279859096055]
								}, {
									"case":	84,
									"scores":	[-4.336279859096055]
								}, {
									"case":	85,
									"scores":	[-4.336279859096055]
								}, {
									"case":	86,
									"scores":	[-4.336279859096055]
								}, {
									"case":	87,
									"scores":	[-4.336279859096055]
								}, {
									"case":	88,
									"scores":	[-4.336279859096055]
								}, {
									"case":	89,
									"scores":	[-4.336279859096055]
								}, {
									"case":	90,
									"scores":	[-4.336279859096055]
								}, {
									"case":	91,
									"scores":	[-4.336279859096055]
								}, {
									"case":	92,
									"scores":	[-4.336279859096055]
								}, {
									"case":	93,
									"scores":	[-4.336279859096055]
								}, {
									"case":	94,
									"scores":	[-4.336279859096055]
								}, {
									"case":	95,
									"scores":	[-4.336279859096055]
								}, {
									"case":	96,
									"scores":	[-4.336279859096055]
								}, {
									"case":	97,
									"scores":	[-4.336279859096055]
								}, {
									"case":	98,
									"scores":	[-4.336279859096055]
								}, {
									"case":	99,
									"scores":	[-4.336279859096055]
								}, {
									"case":	100,
									"scores":	[-4.336279859096055]
								}, {
									"case":	101,
									"scores":	[-4.336279859096055]
								}, {
									"case":	102,
									"scores":	[-4.336279859096055]
								}, {
									"case":	103,
									"scores":	[-4.336279859096055]
								}, {
									"case":	104,
									"scores":	[-4.336279859096055]
								}, {
									"case":	105,
									"scores":	[-4.336279859096055]
								}, {
									"case":	106,
									"scores":	[-4.336279859096055]
								}, {
									"case":	107,
									"scores":	[-4.336279859096055]
								}, {
									"case":	108,
									"scores":	[-4.336279859096055]
								}, {
									"case":	109,
									"scores":	[-4.336279859096055]
								}, {
									"case":	110,
									"scores":	[-4.336279859096055]
								}, {
									"case":	111,
									"scores":	[-4.336279859096055]
								}, {
									"case":	112,
									"scores":	[-4.336279859096055]
								}, {
									"case":	113,
									"scores":	[-4.336279859096055]
								}, {
									"case":	114,
									"scores":	[-4.336279859096055]
								}, {
									"case":	115,
									"scores":	[-4.336279859096055]
								}, {
									"case":	116,
									"scores":	[-4.336279859096055]
								}, {
									"case":	117,
									"scores":	[-4.336279859096055]
								}, {
									"case":	118,
									"scores":	[-4.336279859096055]
								}, {
									"case":	119,
									"scores":	[-4.336279859096055]
								}, {
									"case":	120,
									"scores":	[-4.336279859096055]
								}, {
									"case":	121,
									"scores":	[-4.336279859096055]
								}, {
									"case":	122,
									"scores":	[-4.336279859096055]
								}, {
									"case":	123,
									"scores":	[-4.336279859096055]
								}, {
									"case":	124,
									"scores":	[-4.336279859096055]
								}, {
									"case":	125,
									"scores":	[-4.336279859096055]
								}, {
									"case":	126,
									"scores":	[-4.336279859096055]
								}, {
									"case":	127,
									"scores":	[-4.336279859096055]
								}, {
									"case":	128,
									"scores":	[-4.336279859096055]
								}, {
									"case":	129,
									"scores":	[-4.336279859096055]
								}, {
									"case":	130,
									"scores":	[-4.336279859096055]
								}, {
									"case":	131,
									"scores":	[-4.336279859096055]
								}, {
									"case":	132,
									"scores":	[-4.336279859096055]
								}, {
									"case":	133,
									"scores":	[-4.336279859096055]
								}, {
									"case":	134,
									"scores":	[-4.336279859096055]
								}, {
									"case":	135,
									"scores":	[-4.336279859096055]
								}, {
									"case":	136,
									"scores":	[-4.336279859096055]
								}, {
									"case":	137,
									"scores":	[-4.336279859096055]
								}, {
									"case":	138,
									"scores":	[-4.336279859096055]
								}, {
									"case":	139,
									"scores":	[-4.336279859096055]
								}, {
									"case":	140,
									"scores":	[-4.336279859096055]
								}, {
									"case":	141,
									"scores":	[-4.336279859096055]
								}, {
									"case":	142,
									"scores":	[-4.336279859096055]
								}, {
									"case":	143,
									"scores":	[-4.336279859096055]
								}, {
									"case":	144,
									"scores":	[-4.336279859096055]
								}, {
									"case":	145,
									"scores":	[-4.336279859096055]
								}, {
									"case":	146,
									"scores":	[-4.336279859096055]
								}, {
									"case":	147,
									"scores":	[-4.336279859096055]
								}, {
									"case":	148,
									"scores":	[-4.336279859096055]
								}]
						}, {
							"switch":	8,
							"types":	[[], [], [1], [], [], [], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [], [2, 3, 4, 5, 6], [], [], [7]],
							"begin_line":	2274,
							"begin_column":	2,
							"end_line":	2274,
							"end_column":	57,
							"patch_codes":	["if (!__is_neg(\"\", \"L2274\", 14, &(class_type), sizeof (class_type), &(intern), sizeof (intern), &(ptr), sizeof (ptr), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date), &(intern->std.ce), sizeof (intern->std.ce), &(intern->std.properties), sizeof (intern->std.properties), &(intern->std.properties_table), sizeof (intern->std.properties_table), &(intern->std.guards), sizeof (intern->std.guards)))\n    zend_object_std_init(&intern->std, class_type);\n", "_object_and_properties_init(&intern->std, class_type, 0)", "zend_check_property_access(&intern->std, class_type, 0)", "zend_check_property_access(&intern->std, class_type, le_index_ptr)", "zend_check_property_access(&intern->std, class_type, php_date_global_timezone_db_enabled)", "zend_register_internal_class_ex(&intern->std, class_type, 0)", "{\n}\n", "Debug(&intern->std, class_type)", "_object_init_ex(&intern->std, class_type)", "object_properties_init(&intern->std, class_type)", "php_printf(&intern->std, class_type)", "printf(&intern->std, class_type)", "wprintf(&intern->std, class_type)", "zend_check_protected(&intern->std, class_type)", "zend_do_implement_interface(&intern->std, class_type)", "zend_do_implement_trait(&intern->std, class_type)", "zend_do_inheritance(&intern->std, class_type)", "zend_objects_new(&intern->std, class_type)", "zend_object_std_init(&(&class_type)->std, class_type)", "zend_object_std_init(&(&intern)->std, class_type)", "zend_object_std_init(&(&ptr)->std, class_type)", "zend_object_std_init(&(&retval)->std, class_type)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (&class_type))", "zend_object_std_init(&intern->std, (&intern))", "zend_object_std_init(&intern->std, (&ptr))", "zend_object_std_init(&intern->std, (&retval))", "zend_object_std_init(&intern->std, (class_type))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4820106380960549, -5.0187114119960547, -5.5795830395960548, -6.3927644390960552, -6.3927644390960552, -6.3927644390960552, -6.3927644390960552, -5.6348763390960546, -5.6348763390960546, -5.6348763390960546, -6.3927644390960552, -6.3927644390960552, -6.1041363390960548, -6.3927644390960552]
								}, {
									"case":	2,
									"scores":	[-4.336279859096055]
								}, {
									"case":	3,
									"scores":	[-4.336279859096055]
								}, {
									"case":	4,
									"scores":	[-4.336279859096055]
								}, {
									"case":	5,
									"scores":	[-4.336279859096055]
								}, {
									"case":	6,
									"scores":	[-4.336279859096055]
								}, {
									"case":	7,
									"scores":	[-4.336279859096055]
								}, {
									"case":	8,
									"scores":	[-4.336279859096055]
								}, {
									"case":	9,
									"scores":	[-4.336279859096055]
								}, {
									"case":	10,
									"scores":	[-4.336279859096055]
								}, {
									"case":	11,
									"scores":	[-4.336279859096055]
								}, {
									"case":	12,
									"scores":	[-4.336279859096055]
								}, {
									"case":	13,
									"scores":	[-4.336279859096055]
								}, {
									"case":	14,
									"scores":	[-4.336279859096055]
								}, {
									"case":	15,
									"scores":	[-4.336279859096055]
								}, {
									"case":	16,
									"scores":	[-4.336279859096055]
								}, {
									"case":	17,
									"scores":	[-4.336279859096055]
								}, {
									"case":	18,
									"scores":	[-4.336279859096055]
								}, {
									"case":	19,
									"scores":	[-4.336279859096055]
								}, {
									"case":	20,
									"scores":	[-4.336279859096055]
								}, {
									"case":	21,
									"scores":	[-4.336279859096055]
								}, {
									"case":	22,
									"scores":	[-4.336279859096055]
								}, {
									"case":	23,
									"scores":	[-4.336279859096055]
								}, {
									"case":	24,
									"scores":	[-4.336279859096055]
								}, {
									"case":	25,
									"scores":	[-4.336279859096055]
								}, {
									"case":	26,
									"scores":	[-4.336279859096055]
								}, {
									"case":	27,
									"scores":	[-4.336279859096055]
								}, {
									"case":	28,
									"scores":	[-4.336279859096055]
								}]
						}]
				}, {
					"line":	2274,
					"switches":	[{
							"switch":	9,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2275,
							"begin_column":	0,
							"end_line":	2275,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	2,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	3,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	4,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	5,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	6,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	7,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	8,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	9,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	10,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	11,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	12,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	13,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	14,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	15,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	16,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	17,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	18,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	19,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	20,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	21,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	22,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	23,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	24,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	25,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	26,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	27,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	28,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	29,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	30,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	31,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	32,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	33,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	34,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	35,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	36,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	37,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	38,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	39,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	40,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	41,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	42,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	43,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	44,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	45,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	46,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	47,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	48,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	49,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	50,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	51,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	52,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	53,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	54,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	55,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	56,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	57,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	58,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	59,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	60,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	61,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	62,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	63,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	64,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	65,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	66,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	67,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	68,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	69,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	70,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	71,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	72,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	73,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	74,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	75,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	76,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	77,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	78,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	79,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	80,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	81,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	82,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	83,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	84,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	85,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	86,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	87,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	88,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	89,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	90,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	91,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	92,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	93,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	94,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	95,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	96,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	97,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	98,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	99,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	100,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	101,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	102,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	103,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	104,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	105,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	106,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	107,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	108,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	109,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	110,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	111,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	112,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	113,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	114,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	115,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	116,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	117,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	118,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	119,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	120,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	121,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	122,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	123,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	124,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	125,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	126,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	127,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	128,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	129,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	130,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	131,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	132,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	133,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	134,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	135,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	136,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	137,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	138,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	139,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	140,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	141,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	142,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	143,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	144,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	145,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	146,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	147,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	148,
									"scores":	[-4.3160771517785355]
								}]
						}, {
							"switch":	10,
							"types":	[[], [], [1], [], [], [], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [], [2, 3, 4, 5, 6], [], [], [7]],
							"begin_line":	2275,
							"begin_column":	2,
							"end_line":	2275,
							"end_column":	49,
							"patch_codes":	["if (!__is_neg(\"\", \"L2275\", 14, &(class_type), sizeof (class_type), &(intern), sizeof (intern), &(ptr), sizeof (ptr), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date), &(intern->std.ce), sizeof (intern->std.ce), &(intern->std.properties), sizeof (intern->std.properties), &(intern->std.properties_table), sizeof (intern->std.properties_table), &(intern->std.guards), sizeof (intern->std.guards)))\n    object_properties_init(&intern->std, class_type);\n", "_object_and_properties_init(&intern->std, class_type, 0)", "zend_check_property_access(&intern->std, class_type, 0)", "zend_check_property_access(&intern->std, class_type, le_index_ptr)", "zend_check_property_access(&intern->std, class_type, php_date_global_timezone_db_enabled)", "zend_register_internal_class_ex(&intern->std, class_type, 0)", "{\n}\n", "Debug(&intern->std, class_type)", "_object_init_ex(&intern->std, class_type)", "php_printf(&intern->std, class_type)", "printf(&intern->std, class_type)", "wprintf(&intern->std, class_type)", "zend_check_protected(&intern->std, class_type)", "zend_do_implement_interface(&intern->std, class_type)", "zend_do_implement_trait(&intern->std, class_type)", "zend_do_inheritance(&intern->std, class_type)", "zend_object_std_init(&intern->std, class_type)", "zend_objects_new(&intern->std, class_type)", "object_properties_init(&(&class_type)->std, class_type)", "object_properties_init(&(&intern)->std, class_type)", "object_properties_init(&(&ptr)->std, class_type)", "object_properties_init(&(&retval)->std, class_type)", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (&class_type))", "object_properties_init(&intern->std, (&intern))", "object_properties_init(&intern->std, (&ptr))", "object_properties_init(&intern->std, (&retval))", "object_properties_init(&intern->std, (class_type))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.7869692677785354, -3.890701027278535, -4.8287343322785352, -5.6419157317785356, -5.6419157317785356, -5.6419157317785356, -5.6419157317785356, -4.8840276317785349, -4.8840276317785349, -4.8840276317785349, -5.6419157317785356, -5.6419157317785356, -5.3532876317785352, -5.6419157317785356]
								}, {
									"case":	2,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	3,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	4,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	5,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	6,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	7,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	8,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	9,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	10,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	11,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	12,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	13,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	14,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	15,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	16,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	17,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	18,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	19,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	20,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	21,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	22,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	23,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	24,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	25,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	26,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	27,
									"scores":	[-4.3160771517785355]
								}, {
									"case":	28,
									"scores":	[-4.3160771517785355]
								}]
						}]
				}, {
					"line":	2276,
					"switches":	[{
							"switch":	11,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [], [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], [], [], [], [], [], []],
							"begin_line":	2277,
							"begin_column":	0,
							"end_line":	2277,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval, 0, sizeof (*(&retval)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern, 0, sizeof (*(intern)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.295874444461016]
								}, {
									"case":	2,
									"scores":	[-4.295874444461016]
								}, {
									"case":	3,
									"scores":	[-4.295874444461016]
								}, {
									"case":	4,
									"scores":	[-4.295874444461016]
								}, {
									"case":	5,
									"scores":	[-4.295874444461016]
								}, {
									"case":	6,
									"scores":	[-4.295874444461016]
								}, {
									"case":	7,
									"scores":	[-4.295874444461016]
								}, {
									"case":	8,
									"scores":	[-4.295874444461016]
								}, {
									"case":	9,
									"scores":	[-4.295874444461016]
								}, {
									"case":	10,
									"scores":	[-4.295874444461016]
								}, {
									"case":	11,
									"scores":	[-4.295874444461016]
								}, {
									"case":	12,
									"scores":	[-4.295874444461016]
								}, {
									"case":	13,
									"scores":	[-4.295874444461016]
								}, {
									"case":	14,
									"scores":	[-4.295874444461016]
								}, {
									"case":	15,
									"scores":	[-4.295874444461016]
								}, {
									"case":	16,
									"scores":	[-4.295874444461016]
								}, {
									"case":	17,
									"scores":	[-4.295874444461016]
								}, {
									"case":	18,
									"scores":	[-4.295874444461016]
								}, {
									"case":	19,
									"scores":	[-4.295874444461016]
								}, {
									"case":	20,
									"scores":	[-4.295874444461016]
								}, {
									"case":	21,
									"scores":	[-4.295874444461016]
								}, {
									"case":	22,
									"scores":	[-4.295874444461016]
								}, {
									"case":	23,
									"scores":	[-4.295874444461016]
								}, {
									"case":	24,
									"scores":	[-4.295874444461016]
								}, {
									"case":	25,
									"scores":	[-4.295874444461016]
								}, {
									"case":	26,
									"scores":	[-4.295874444461016]
								}, {
									"case":	27,
									"scores":	[-4.295874444461016]
								}, {
									"case":	28,
									"scores":	[-4.295874444461016]
								}, {
									"case":	29,
									"scores":	[-4.295874444461016]
								}, {
									"case":	30,
									"scores":	[-4.295874444461016]
								}, {
									"case":	31,
									"scores":	[-4.295874444461016]
								}, {
									"case":	32,
									"scores":	[-4.295874444461016]
								}, {
									"case":	33,
									"scores":	[-4.295874444461016]
								}, {
									"case":	34,
									"scores":	[-4.295874444461016]
								}, {
									"case":	35,
									"scores":	[-4.295874444461016]
								}, {
									"case":	36,
									"scores":	[-4.295874444461016]
								}, {
									"case":	37,
									"scores":	[-4.295874444461016]
								}, {
									"case":	38,
									"scores":	[-4.295874444461016]
								}, {
									"case":	39,
									"scores":	[-4.295874444461016]
								}, {
									"case":	40,
									"scores":	[-4.295874444461016]
								}, {
									"case":	41,
									"scores":	[-4.295874444461016]
								}, {
									"case":	42,
									"scores":	[-4.295874444461016]
								}, {
									"case":	43,
									"scores":	[-4.295874444461016]
								}, {
									"case":	44,
									"scores":	[-4.295874444461016]
								}, {
									"case":	45,
									"scores":	[-4.295874444461016]
								}, {
									"case":	46,
									"scores":	[-4.295874444461016]
								}, {
									"case":	47,
									"scores":	[-4.295874444461016]
								}, {
									"case":	48,
									"scores":	[-4.295874444461016]
								}, {
									"case":	49,
									"scores":	[-4.295874444461016]
								}, {
									"case":	50,
									"scores":	[-4.295874444461016]
								}, {
									"case":	51,
									"scores":	[-4.295874444461016]
								}, {
									"case":	52,
									"scores":	[-4.295874444461016]
								}, {
									"case":	53,
									"scores":	[-4.295874444461016]
								}, {
									"case":	54,
									"scores":	[-4.295874444461016]
								}, {
									"case":	55,
									"scores":	[-4.295874444461016]
								}, {
									"case":	56,
									"scores":	[-4.295874444461016]
								}, {
									"case":	57,
									"scores":	[-4.295874444461016]
								}, {
									"case":	58,
									"scores":	[-4.295874444461016]
								}, {
									"case":	59,
									"scores":	[-4.295874444461016]
								}, {
									"case":	60,
									"scores":	[-4.295874444461016]
								}, {
									"case":	61,
									"scores":	[-4.295874444461016]
								}, {
									"case":	62,
									"scores":	[-4.295874444461016]
								}, {
									"case":	63,
									"scores":	[-4.295874444461016]
								}, {
									"case":	64,
									"scores":	[-4.295874444461016]
								}, {
									"case":	65,
									"scores":	[-4.295874444461016]
								}, {
									"case":	66,
									"scores":	[-4.295874444461016]
								}, {
									"case":	67,
									"scores":	[-4.295874444461016]
								}, {
									"case":	68,
									"scores":	[-4.295874444461016]
								}, {
									"case":	69,
									"scores":	[-4.295874444461016]
								}, {
									"case":	70,
									"scores":	[-4.295874444461016]
								}, {
									"case":	71,
									"scores":	[-4.295874444461016]
								}, {
									"case":	72,
									"scores":	[-4.295874444461016]
								}, {
									"case":	73,
									"scores":	[-4.295874444461016]
								}, {
									"case":	74,
									"scores":	[-4.295874444461016]
								}, {
									"case":	75,
									"scores":	[-4.295874444461016]
								}, {
									"case":	76,
									"scores":	[-4.295874444461016]
								}, {
									"case":	77,
									"scores":	[-4.295874444461016]
								}, {
									"case":	78,
									"scores":	[-4.295874444461016]
								}, {
									"case":	79,
									"scores":	[-4.295874444461016]
								}, {
									"case":	80,
									"scores":	[-4.295874444461016]
								}, {
									"case":	81,
									"scores":	[-4.295874444461016]
								}, {
									"case":	82,
									"scores":	[-4.295874444461016]
								}, {
									"case":	83,
									"scores":	[-4.295874444461016]
								}, {
									"case":	84,
									"scores":	[-4.295874444461016]
								}, {
									"case":	85,
									"scores":	[-4.295874444461016]
								}, {
									"case":	86,
									"scores":	[-4.295874444461016]
								}, {
									"case":	87,
									"scores":	[-4.295874444461016]
								}, {
									"case":	88,
									"scores":	[-4.295874444461016]
								}, {
									"case":	89,
									"scores":	[-4.295874444461016]
								}, {
									"case":	90,
									"scores":	[-4.295874444461016]
								}, {
									"case":	91,
									"scores":	[-4.295874444461016]
								}, {
									"case":	92,
									"scores":	[-4.295874444461016]
								}, {
									"case":	93,
									"scores":	[-4.295874444461016]
								}, {
									"case":	94,
									"scores":	[-4.295874444461016]
								}, {
									"case":	95,
									"scores":	[-4.295874444461016]
								}, {
									"case":	96,
									"scores":	[-4.295874444461016]
								}, {
									"case":	97,
									"scores":	[-4.295874444461016]
								}, {
									"case":	98,
									"scores":	[-4.295874444461016]
								}, {
									"case":	99,
									"scores":	[-4.295874444461016]
								}, {
									"case":	100,
									"scores":	[-4.295874444461016]
								}, {
									"case":	101,
									"scores":	[-4.295874444461016]
								}, {
									"case":	102,
									"scores":	[-4.295874444461016]
								}, {
									"case":	103,
									"scores":	[-4.295874444461016]
								}, {
									"case":	104,
									"scores":	[-4.295874444461016]
								}, {
									"case":	105,
									"scores":	[-4.295874444461016]
								}, {
									"case":	106,
									"scores":	[-4.295874444461016]
								}, {
									"case":	107,
									"scores":	[-4.295874444461016]
								}, {
									"case":	108,
									"scores":	[-4.295874444461016]
								}, {
									"case":	109,
									"scores":	[-4.295874444461016]
								}, {
									"case":	110,
									"scores":	[-4.295874444461016]
								}, {
									"case":	111,
									"scores":	[-4.295874444461016]
								}, {
									"case":	112,
									"scores":	[-4.295874444461016]
								}, {
									"case":	113,
									"scores":	[-4.295874444461016]
								}, {
									"case":	114,
									"scores":	[-4.295874444461016]
								}, {
									"case":	115,
									"scores":	[-4.295874444461016]
								}, {
									"case":	116,
									"scores":	[-4.295874444461016]
								}, {
									"case":	117,
									"scores":	[-4.295874444461016]
								}, {
									"case":	118,
									"scores":	[-4.295874444461016]
								}, {
									"case":	119,
									"scores":	[-4.295874444461016]
								}, {
									"case":	120,
									"scores":	[-4.295874444461016]
								}, {
									"case":	121,
									"scores":	[-4.295874444461016]
								}, {
									"case":	122,
									"scores":	[-4.295874444461016]
								}, {
									"case":	123,
									"scores":	[-4.295874444461016]
								}, {
									"case":	124,
									"scores":	[-4.295874444461016]
								}, {
									"case":	125,
									"scores":	[-4.295874444461016]
								}, {
									"case":	126,
									"scores":	[-4.295874444461016]
								}, {
									"case":	127,
									"scores":	[-4.295874444461016]
								}, {
									"case":	128,
									"scores":	[-4.295874444461016]
								}, {
									"case":	129,
									"scores":	[-4.295874444461016]
								}, {
									"case":	130,
									"scores":	[-4.295874444461016]
								}, {
									"case":	131,
									"scores":	[-4.295874444461016]
								}, {
									"case":	132,
									"scores":	[-4.295874444461016]
								}, {
									"case":	133,
									"scores":	[-4.295874444461016]
								}, {
									"case":	134,
									"scores":	[-4.295874444461016]
								}, {
									"case":	135,
									"scores":	[-4.295874444461016]
								}, {
									"case":	136,
									"scores":	[-4.295874444461016]
								}, {
									"case":	137,
									"scores":	[-4.295874444461016]
								}, {
									"case":	138,
									"scores":	[-4.295874444461016]
								}, {
									"case":	139,
									"scores":	[-4.295874444461016]
								}, {
									"case":	140,
									"scores":	[-4.295874444461016]
								}, {
									"case":	141,
									"scores":	[-4.295874444461016]
								}, {
									"case":	142,
									"scores":	[-4.295874444461016]
								}, {
									"case":	143,
									"scores":	[-4.295874444461016]
								}, {
									"case":	144,
									"scores":	[-4.295874444461016]
								}, {
									"case":	145,
									"scores":	[-4.295874444461016]
								}, {
									"case":	146,
									"scores":	[-4.295874444461016]
								}, {
									"case":	147,
									"scores":	[-4.295874444461016]
								}, {
									"case":	148,
									"scores":	[-4.295874444461016]
								}, {
									"case":	149,
									"scores":	[-4.295874444461016]
								}]
						}, {
							"switch":	12,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2277,
							"begin_column":	2,
							"end_line":	2277,
							"end_column":	189,
							"patch_codes":	["if (!__is_neg(\"\", \"L2277\", 37, &(intern), sizeof (intern), &(retval.handle), sizeof (retval.handle), &(retval.handlers), sizeof (retval.handlers), &(class_type), sizeof (class_type), &(ptr), sizeof (ptr), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date), &(date_object_handlers_period.add_ref), sizeof (date_object_handlers_period.add_ref), &(date_object_handlers_period.del_ref), sizeof (date_object_handlers_period.del_ref), &(date_object_handlers_period.clone_obj), sizeof (date_object_handlers_period.clone_obj), &(date_object_handlers_period.read_property), sizeof (date_object_handlers_period.read_property), &(date_object_handlers_period.write_property), sizeof (date_object_handlers_period.write_property), &(date_object_handlers_period.read_dimension), sizeof (date_object_handlers_period.read_dimension), &(date_object_handlers_period.write_dimension), sizeof (date_object_handlers_period.write_dimension), &(date_object_handlers_period.get_property_ptr_ptr), sizeof (date_object_handlers_period.get_property_ptr_ptr), &(date_object_handlers_period.get), sizeof (date_object_handlers_period.get), &(date_object_handlers_period.set), sizeof (date_object_handlers_period.set), &(date_object_handlers_period.has_property), sizeof (date_object_handlers_period.has_property), &(date_object_handlers_period.unset_property), sizeof (date_object_handlers_period.unset_property), &(date_object_handlers_period.has_dimension), sizeof (date_object_handlers_period.has_dimension), &(date_object_handlers_period.unset_dimension), sizeof (date_object_handlers_period.unset_dimension), &(date_object_handlers_period.get_properties), sizeof (date_object_handlers_period.get_properties), &(date_object_handlers_period.get_method), sizeof (date_object_handlers_period.get_method), &(date_object_handlers_period.call_method), sizeof (date_object_handlers_period.call_method), &(date_object_handlers_period.get_constructor), sizeof (date_object_handlers_period.get_constructor), &(date_object_handlers_period.get_class_entry), sizeof (date_object_handlers_period.get_class_entry), &(date_object_handlers_period.get_class_name), sizeof (date_object_handlers_period.get_class_name), &(date_object_handlers_period.compare_objects), sizeof (date_object_handlers_period.compare_objects), &(date_object_handlers_period.cast_object), sizeof (date_object_handlers_period.cast_object), &(date_object_handlers_period.count_elements), sizeof (date_object_handlers_period.count_elements), &(date_object_handlers_period.get_debug_info), sizeof (date_object_handlers_period.get_debug_info), &(date_object_handlers_period.get_closure), sizeof (date_object_handlers_period.get_closure)))\n    retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0));\n", "{\n}\n", "retval.handle = (0)", "retval.handle = zend_objects_store_put((&class_type), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handle = zend_objects_store_put((&intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handle = zend_objects_store_put((&ptr), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handle = zend_objects_store_put((&retval), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9578362149610156, -4.8445814454610154, -5.4693629654610163, -5.594015860461016, -4.9223456249610162, -5.7355270244610157, -5.7355270244610157, -5.7355270244610157, -5.7355270244610157, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016, -4.977638924461016]
								}, {
									"case":	2,
									"scores":	[-4.295874444461016]
								}, {
									"case":	3,
									"scores":	[-4.295874444461016]
								}, {
									"case":	4,
									"scores":	[-4.295874444461016]
								}, {
									"case":	5,
									"scores":	[-4.295874444461016]
								}, {
									"case":	6,
									"scores":	[-4.295874444461016]
								}, {
									"case":	7,
									"scores":	[-4.295874444461016]
								}, {
									"case":	8,
									"scores":	[-4.295874444461016]
								}, {
									"case":	9,
									"scores":	[-4.295874444461016]
								}]
						}]
				}, {
					"line":	2277,
					"switches":	[{
							"switch":	13,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2278,
							"begin_column":	0,
							"end_line":	2278,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval, 0, sizeof (*(&retval)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	2,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	3,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	4,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	5,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	6,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	7,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	8,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	9,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	10,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	11,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	12,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	13,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	14,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	15,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	16,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	17,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	18,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	19,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	20,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	21,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	22,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	23,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	24,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	25,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	26,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	27,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	28,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	29,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	30,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	31,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	32,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	33,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	34,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	35,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	36,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	37,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	38,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	39,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	40,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	41,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	42,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	43,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	44,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	45,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	46,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	47,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	48,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	49,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	50,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	51,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	52,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	53,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	54,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	55,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	56,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	57,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	58,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	59,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	60,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	61,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	62,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	63,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	64,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	65,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	66,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	67,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	68,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	69,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	70,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	71,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	72,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	73,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	74,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	75,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	76,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	77,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	78,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	79,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	80,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	81,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	82,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	83,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	84,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	85,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	86,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	87,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	88,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	89,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	90,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	91,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	92,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	93,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	94,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	95,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	96,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	97,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	98,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	99,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	100,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	101,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	102,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	103,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	104,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	105,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	106,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	107,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	108,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	109,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	110,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	111,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	112,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	113,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	114,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	115,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	116,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	117,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	118,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	119,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	120,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	121,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	122,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	123,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	124,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	125,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	126,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	127,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	128,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	129,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	130,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	131,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	132,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	133,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	134,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	135,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	136,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	137,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	138,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	139,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	140,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	141,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	142,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	143,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	144,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	145,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	146,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	147,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	148,
									"scores":	[-4.2756717371434965]
								}]
						}, {
							"switch":	14,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	2278,
							"begin_column":	2,
							"end_line":	2278,
							"end_column":	21,
							"patch_codes":	["if (!__is_neg(\"\", \"L2278\", 37, &(retval.handlers), sizeof (retval.handlers), &(intern), sizeof (intern), &(retval.handle), sizeof (retval.handle), &(class_type), sizeof (class_type), &(ptr), sizeof (ptr), &(intern->start), sizeof (intern->start), &(intern->current), sizeof (intern->current), &(intern->end), sizeof (intern->end), &(intern->interval), sizeof (intern->interval), &(intern->recurrences), sizeof (intern->recurrences), &(intern->initialized), sizeof (intern->initialized), &(intern->include_start_date), sizeof (intern->include_start_date), &(date_object_handlers_period.add_ref), sizeof (date_object_handlers_period.add_ref), &(date_object_handlers_period.del_ref), sizeof (date_object_handlers_period.del_ref), &(date_object_handlers_period.clone_obj), sizeof (date_object_handlers_period.clone_obj), &(date_object_handlers_period.read_property), sizeof (date_object_handlers_period.read_property), &(date_object_handlers_period.write_property), sizeof (date_object_handlers_period.write_property), &(date_object_handlers_period.read_dimension), sizeof (date_object_handlers_period.read_dimension), &(date_object_handlers_period.write_dimension), sizeof (date_object_handlers_period.write_dimension), &(date_object_handlers_period.get_property_ptr_ptr), sizeof (date_object_handlers_period.get_property_ptr_ptr), &(date_object_handlers_period.get), sizeof (date_object_handlers_period.get), &(date_object_handlers_period.set), sizeof (date_object_handlers_period.set), &(date_object_handlers_period.has_property), sizeof (date_object_handlers_period.has_property), &(date_object_handlers_period.unset_property), sizeof (date_object_handlers_period.unset_property), &(date_object_handlers_period.has_dimension), sizeof (date_object_handlers_period.has_dimension), &(date_object_handlers_period.unset_dimension), sizeof (date_object_handlers_period.unset_dimension), &(date_object_handlers_period.get_properties), sizeof (date_object_handlers_period.get_properties), &(date_object_handlers_period.get_method), sizeof (date_object_handlers_period.get_method), &(date_object_handlers_period.call_method), sizeof (date_object_handlers_period.call_method), &(date_object_handlers_period.get_constructor), sizeof (date_object_handlers_period.get_constructor), &(date_object_handlers_period.get_class_entry), sizeof (date_object_handlers_period.get_class_entry), &(date_object_handlers_period.get_class_name), sizeof (date_object_handlers_period.get_class_name), &(date_object_handlers_period.compare_objects), sizeof (date_object_handlers_period.compare_objects), &(date_object_handlers_period.cast_object), sizeof (date_object_handlers_period.cast_object), &(date_object_handlers_period.count_elements), sizeof (date_object_handlers_period.count_elements), &(date_object_handlers_period.get_debug_info), sizeof (date_object_handlers_period.get_debug_info), &(date_object_handlers_period.get_closure), sizeof (date_object_handlers_period.get_closure)))\n    retval.handlers = &date_object_handlers_period;\n", "{\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.1184544381434964, -5.6868744436434966, -4.6129469571434969, -6.1100007531434963, -5.7323898071434964, -6.2515119171434961, -6.2515119171434961, -6.2515119171434961, -6.2515119171434961, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963, -5.4936238171434963]
								}, {
									"case":	2,
									"scores":	[-4.2756717371434965]
								}]
						}]
				}, {
					"line":	2279,
					"switches":	[{
							"switch":	15,
							"types":	[[], [], [], [], [], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [], [], [], [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [], [], [], [], [], []],
							"begin_line":	2280,
							"begin_column":	0,
							"end_line":	2280,
							"end_column":	0,
							"patch_codes":	["memset(&intern->current, 0, sizeof (*(&intern->current)))", "memset(&intern->end, 0, sizeof (*(&intern->end)))", "memset(&intern->include_start_date, 0, sizeof (*(&intern->include_start_date)))", "memset(&intern->initialized, 0, sizeof (*(&intern->initialized)))", "memset(&intern->interval, 0, sizeof (*(&intern->interval)))", "memset(&intern->recurrences, 0, sizeof (*(&intern->recurrences)))", "memset(&intern->start, 0, sizeof (*(&intern->start)))", "memset(&intern->std, 0, sizeof (*(&intern->std)))", "memset(&retval, 0, sizeof (*(&retval)))", "memset(&retval.handle, 0, sizeof (*(&retval.handle)))", "memset(&retval.handlers, 0, sizeof (*(&retval.handlers)))", "memset(intern->current, 0, sizeof (*(intern->current)))", "memset(intern->end, 0, sizeof (*(intern->end)))", "memset(intern->interval, 0, sizeof (*(intern->interval)))", "memset(intern->start, 0, sizeof (*(intern->start)))", "memset(retval.handlers, 0, sizeof (*(retval.handlers)))", "date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "intern = (intern)", "memset((intern), 0, sizeof(php_period_obj))", "object_properties_init(&(intern)->std, class_type)", "object_properties_init(&intern->std, (class_type))", "php_date_global_timezone_db_enabled = (0)", "retval.handle = (0)", "retval.handle = zend_objects_store_put((intern), (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "timelib_rel_time_dtor((intern)->interval)", "timelib_time_dtor((intern)->current)", "timelib_time_dtor((intern)->end)", "timelib_time_dtor((intern)->start)", "timelib_update_ts((intern)->end, ((void *)0))", "timelib_update_ts((intern)->start, ((void *)0))", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_object_std_dtor(&(intern)->std)", "zend_object_std_init(&(intern)->std, class_type)", "zend_object_std_init(&intern->std, (class_type))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "intern = _emalloc((sizeof(php_period_obj)))", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memset(intern, 0, sizeof(php_period_obj))", "object_properties_init(&intern->std, class_type)", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t)date_object_free_storage_period, ((void *)0))", "retval.handlers = &date_object_handlers_period", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_object_std_init(&intern->std, class_type)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.255469029825977]
								}, {
									"case":	2,
									"scores":	[-4.255469029825977]
								}, {
									"case":	3,
									"scores":	[-4.255469029825977]
								}, {
									"case":	4,
									"scores":	[-4.255469029825977]
								}, {
									"case":	5,
									"scores":	[-4.255469029825977]
								}, {
									"case":	6,
									"scores":	[-4.255469029825977]
								}, {
									"case":	7,
									"scores":	[-4.255469029825977]
								}, {
									"case":	8,
									"scores":	[-4.255469029825977]
								}, {
									"case":	9,
									"scores":	[-4.255469029825977]
								}, {
									"case":	10,
									"scores":	[-4.255469029825977]
								}, {
									"case":	11,
									"scores":	[-4.255469029825977]
								}, {
									"case":	12,
									"scores":	[-4.255469029825977]
								}, {
									"case":	13,
									"scores":	[-4.255469029825977]
								}, {
									"case":	14,
									"scores":	[-4.255469029825977]
								}, {
									"case":	15,
									"scores":	[-4.255469029825977]
								}, {
									"case":	16,
									"scores":	[-4.255469029825977]
								}, {
									"case":	17,
									"scores":	[-4.255469029825977]
								}, {
									"case":	18,
									"scores":	[-4.255469029825977]
								}, {
									"case":	19,
									"scores":	[-4.255469029825977]
								}, {
									"case":	20,
									"scores":	[-4.255469029825977]
								}, {
									"case":	21,
									"scores":	[-4.255469029825977]
								}, {
									"case":	22,
									"scores":	[-4.255469029825977]
								}, {
									"case":	23,
									"scores":	[-4.255469029825977]
								}, {
									"case":	24,
									"scores":	[-4.255469029825977]
								}, {
									"case":	25,
									"scores":	[-4.255469029825977]
								}, {
									"case":	26,
									"scores":	[-4.255469029825977]
								}, {
									"case":	27,
									"scores":	[-4.255469029825977]
								}, {
									"case":	28,
									"scores":	[-4.255469029825977]
								}, {
									"case":	29,
									"scores":	[-4.255469029825977]
								}, {
									"case":	30,
									"scores":	[-4.255469029825977]
								}, {
									"case":	31,
									"scores":	[-4.255469029825977]
								}, {
									"case":	32,
									"scores":	[-4.255469029825977]
								}, {
									"case":	33,
									"scores":	[-4.255469029825977]
								}, {
									"case":	34,
									"scores":	[-4.255469029825977]
								}, {
									"case":	35,
									"scores":	[-4.255469029825977]
								}, {
									"case":	36,
									"scores":	[-4.255469029825977]
								}, {
									"case":	37,
									"scores":	[-4.255469029825977]
								}, {
									"case":	38,
									"scores":	[-4.255469029825977]
								}, {
									"case":	39,
									"scores":	[-4.255469029825977]
								}, {
									"case":	40,
									"scores":	[-4.255469029825977]
								}, {
									"case":	41,
									"scores":	[-4.255469029825977]
								}, {
									"case":	42,
									"scores":	[-4.255469029825977]
								}, {
									"case":	43,
									"scores":	[-4.255469029825977]
								}, {
									"case":	44,
									"scores":	[-4.255469029825977]
								}, {
									"case":	45,
									"scores":	[-4.255469029825977]
								}, {
									"case":	46,
									"scores":	[-4.255469029825977]
								}, {
									"case":	47,
									"scores":	[-4.255469029825977]
								}, {
									"case":	48,
									"scores":	[-4.255469029825977]
								}, {
									"case":	49,
									"scores":	[-4.255469029825977]
								}, {
									"case":	50,
									"scores":	[-4.255469029825977]
								}, {
									"case":	51,
									"scores":	[-4.255469029825977]
								}, {
									"case":	52,
									"scores":	[-4.255469029825977]
								}, {
									"case":	53,
									"scores":	[-4.255469029825977]
								}, {
									"case":	54,
									"scores":	[-4.255469029825977]
								}, {
									"case":	55,
									"scores":	[-4.255469029825977]
								}, {
									"case":	56,
									"scores":	[-4.255469029825977]
								}, {
									"case":	57,
									"scores":	[-4.255469029825977]
								}, {
									"case":	58,
									"scores":	[-4.255469029825977]
								}, {
									"case":	59,
									"scores":	[-4.255469029825977]
								}, {
									"case":	60,
									"scores":	[-4.255469029825977]
								}, {
									"case":	61,
									"scores":	[-4.255469029825977]
								}, {
									"case":	62,
									"scores":	[-4.255469029825977]
								}, {
									"case":	63,
									"scores":	[-4.255469029825977]
								}, {
									"case":	64,
									"scores":	[-4.255469029825977]
								}, {
									"case":	65,
									"scores":	[-4.255469029825977]
								}, {
									"case":	66,
									"scores":	[-4.255469029825977]
								}, {
									"case":	67,
									"scores":	[-4.255469029825977]
								}, {
									"case":	68,
									"scores":	[-4.255469029825977]
								}, {
									"case":	69,
									"scores":	[-4.255469029825977]
								}, {
									"case":	70,
									"scores":	[-4.255469029825977]
								}, {
									"case":	71,
									"scores":	[-4.255469029825977]
								}, {
									"case":	72,
									"scores":	[-4.255469029825977]
								}, {
									"case":	73,
									"scores":	[-4.255469029825977]
								}, {
									"case":	74,
									"scores":	[-4.255469029825977]
								}, {
									"case":	75,
									"scores":	[-4.255469029825977]
								}, {
									"case":	76,
									"scores":	[-4.255469029825977]
								}, {
									"case":	77,
									"scores":	[-4.255469029825977]
								}, {
									"case":	78,
									"scores":	[-4.255469029825977]
								}, {
									"case":	79,
									"scores":	[-4.255469029825977]
								}, {
									"case":	80,
									"scores":	[-4.255469029825977]
								}, {
									"case":	81,
									"scores":	[-4.255469029825977]
								}, {
									"case":	82,
									"scores":	[-4.255469029825977]
								}, {
									"case":	83,
									"scores":	[-4.255469029825977]
								}, {
									"case":	84,
									"scores":	[-4.255469029825977]
								}, {
									"case":	85,
									"scores":	[-4.255469029825977]
								}, {
									"case":	86,
									"scores":	[-4.255469029825977]
								}, {
									"case":	87,
									"scores":	[-4.255469029825977]
								}, {
									"case":	88,
									"scores":	[-4.255469029825977]
								}, {
									"case":	89,
									"scores":	[-4.255469029825977]
								}, {
									"case":	90,
									"scores":	[-4.255469029825977]
								}, {
									"case":	91,
									"scores":	[-4.255469029825977]
								}, {
									"case":	92,
									"scores":	[-4.255469029825977]
								}, {
									"case":	93,
									"scores":	[-4.255469029825977]
								}, {
									"case":	94,
									"scores":	[-4.255469029825977]
								}, {
									"case":	95,
									"scores":	[-4.255469029825977]
								}, {
									"case":	96,
									"scores":	[-4.255469029825977]
								}, {
									"case":	97,
									"scores":	[-4.255469029825977]
								}, {
									"case":	98,
									"scores":	[-4.255469029825977]
								}, {
									"case":	99,
									"scores":	[-4.255469029825977]
								}, {
									"case":	100,
									"scores":	[-4.255469029825977]
								}, {
									"case":	101,
									"scores":	[-4.255469029825977]
								}, {
									"case":	102,
									"scores":	[-4.255469029825977]
								}, {
									"case":	103,
									"scores":	[-4.255469029825977]
								}, {
									"case":	104,
									"scores":	[-4.255469029825977]
								}, {
									"case":	105,
									"scores":	[-4.255469029825977]
								}, {
									"case":	106,
									"scores":	[-4.255469029825977]
								}, {
									"case":	107,
									"scores":	[-4.255469029825977]
								}, {
									"case":	108,
									"scores":	[-4.255469029825977]
								}, {
									"case":	109,
									"scores":	[-4.255469029825977]
								}, {
									"case":	110,
									"scores":	[-4.255469029825977]
								}, {
									"case":	111,
									"scores":	[-4.255469029825977]
								}, {
									"case":	112,
									"scores":	[-4.255469029825977]
								}, {
									"case":	113,
									"scores":	[-4.255469029825977]
								}, {
									"case":	114,
									"scores":	[-4.255469029825977]
								}, {
									"case":	115,
									"scores":	[-4.255469029825977]
								}, {
									"case":	116,
									"scores":	[-4.255469029825977]
								}, {
									"case":	117,
									"scores":	[-4.255469029825977]
								}, {
									"case":	118,
									"scores":	[-4.255469029825977]
								}, {
									"case":	119,
									"scores":	[-4.255469029825977]
								}, {
									"case":	120,
									"scores":	[-4.255469029825977]
								}, {
									"case":	121,
									"scores":	[-4.255469029825977]
								}, {
									"case":	122,
									"scores":	[-4.255469029825977]
								}, {
									"case":	123,
									"scores":	[-4.255469029825977]
								}, {
									"case":	124,
									"scores":	[-4.255469029825977]
								}, {
									"case":	125,
									"scores":	[-4.255469029825977]
								}, {
									"case":	126,
									"scores":	[-4.255469029825977]
								}, {
									"case":	127,
									"scores":	[-4.255469029825977]
								}, {
									"case":	128,
									"scores":	[-4.255469029825977]
								}, {
									"case":	129,
									"scores":	[-4.255469029825977]
								}, {
									"case":	130,
									"scores":	[-4.255469029825977]
								}, {
									"case":	131,
									"scores":	[-4.255469029825977]
								}, {
									"case":	132,
									"scores":	[-4.255469029825977]
								}, {
									"case":	133,
									"scores":	[-4.255469029825977]
								}, {
									"case":	134,
									"scores":	[-4.255469029825977]
								}, {
									"case":	135,
									"scores":	[-4.255469029825977]
								}, {
									"case":	136,
									"scores":	[-4.255469029825977]
								}, {
									"case":	137,
									"scores":	[-4.255469029825977]
								}, {
									"case":	138,
									"scores":	[-4.255469029825977]
								}, {
									"case":	139,
									"scores":	[-4.255469029825977]
								}, {
									"case":	140,
									"scores":	[-4.255469029825977]
								}, {
									"case":	141,
									"scores":	[-4.255469029825977]
								}, {
									"case":	142,
									"scores":	[-4.255469029825977]
								}, {
									"case":	143,
									"scores":	[-4.255469029825977]
								}, {
									"case":	144,
									"scores":	[-4.255469029825977]
								}, {
									"case":	145,
									"scores":	[-4.255469029825977]
								}, {
									"case":	146,
									"scores":	[-4.255469029825977]
								}, {
									"case":	147,
									"scores":	[-4.255469029825977]
								}, {
									"case":	148,
									"scores":	[-4.255469029825977]
								}]
						}, {
							"switch":	16,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2280,
							"begin_column":	2,
							"end_line":	2280,
							"end_column":	9,
							"patch_codes":	["if (!__is_neg(\"\", \"L2280\", 5, &(retval.handlers), sizeof (retval.handlers), &(intern), sizeof (intern), &(retval.handle), sizeof (retval.handle), &(class_type), sizeof (class_type), &(ptr), sizeof (ptr)))\n    return retval;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.9324633498259773, -6.2485027363259773, -5.1745752498259767, -6.671629045825977, -6.2940180998259772]
								}]
						}]
				}, {
					"line":	2284,
					"switches":	[{
							"switch":	17,
							"types":	[[], [], [], [], [], [], [], [], [], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [], [], [], [], [], []],
							"begin_line":	2285,
							"begin_column":	0,
							"end_line":	2285,
							"end_column":	0,
							"patch_codes":	["date_ce_date = (class_type)", "date_ce_interval = (class_type)", "date_ce_period = (class_type)", "date_ce_timezone = (class_type)", "php_date_global_timezone_db_enabled = (0)", "zend_class_implements((class_type), 1, zend_ce_traversable)", "zend_class_implements(date_ce_period, 1, (class_type))", "zend_declare_class_constant_long((class_type), \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long((class_type), \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long((class_type), \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long((class_type), \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long((class_type), \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long((class_type), \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long((class_type), \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long((class_type), \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long((class_type), \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long((class_type), \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long((class_type), \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long((class_type), \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long((class_type), \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long((class_type), \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl((class_type), \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl((class_type), \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl((class_type), \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_register_classes()", "exit(1)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}]
						}, {
							"switch":	18,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	2285,
							"begin_column":	2,
							"end_line":	2285,
							"end_column":	61,
							"patch_codes":	["if (!__is_neg(\"\", \"L2285\", 1, &(class_type), sizeof (class_type)))\n    return date_object_new_period_ex(class_type, ((void *)0));\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.6878235690011714]
								}]
						}]
				}, {
					"line":	3741,
					"switches":	[]
				}, {
					"line":	3742,
					"switches":	[]
				}, {
					"line":	3743,
					"switches":	[]
				}, {
					"line":	3744,
					"switches":	[]
				}, {
					"line":	3745,
					"switches":	[]
				}, {
					"line":	3746,
					"switches":	[]
				}, {
					"line":	3747,
					"switches":	[]
				}, {
					"line":	3748,
					"switches":	[]
				}, {
					"line":	3749,
					"switches":	[]
				}, {
					"line":	3751,
					"switches":	[{
							"switch":	19,
							"types":	[[], [], [], [], [394], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [], [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], [], [], [], [], [], []],
							"begin_line":	3752,
							"begin_column":	0,
							"end_line":	3752,
							"end_column":	0,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3752\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.053441956650782]
								}, {
									"case":	2,
									"scores":	[-4.053441956650782]
								}, {
									"case":	3,
									"scores":	[-4.053441956650782]
								}, {
									"case":	4,
									"scores":	[-4.053441956650782]
								}, {
									"case":	5,
									"scores":	[-4.053441956650782]
								}, {
									"case":	6,
									"scores":	[-4.053441956650782]
								}, {
									"case":	7,
									"scores":	[-4.053441956650782]
								}, {
									"case":	8,
									"scores":	[-4.053441956650782]
								}, {
									"case":	9,
									"scores":	[-4.053441956650782]
								}, {
									"case":	10,
									"scores":	[-4.053441956650782]
								}, {
									"case":	11,
									"scores":	[-4.053441956650782]
								}, {
									"case":	12,
									"scores":	[-4.053441956650782]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	168,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	169,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	170,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	171,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	172,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	173,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	174,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	175,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	176,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	177,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	178,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	179,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	180,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	181,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	182,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	183,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	184,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	185,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	186,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	187,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	188,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	189,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	190,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	191,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	192,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	193,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	194,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	195,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	196,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	197,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	198,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	199,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	200,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	201,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	202,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	203,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	204,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	205,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	206,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	207,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	208,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	209,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	210,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	211,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	212,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	213,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	214,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	215,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	216,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	217,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	218,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	219,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	220,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	221,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	222,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	223,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	224,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	225,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	226,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	227,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	228,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	229,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	230,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	231,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	232,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	233,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	234,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	235,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	236,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	237,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	238,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	239,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	240,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	241,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	242,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	243,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	244,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	245,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	246,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	247,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	248,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	249,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	250,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	251,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	252,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	253,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	254,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	255,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	256,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	257,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	258,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	259,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	260,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	261,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	262,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	263,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	264,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	265,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	266,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	267,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	268,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	269,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	270,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	271,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	272,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	273,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	274,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	275,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	276,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	277,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	278,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	279,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	280,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	281,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	282,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	283,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	284,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	285,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	286,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	287,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	288,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	289,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	290,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	291,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	292,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	293,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	294,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	295,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	296,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	297,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	298,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	299,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	300,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	301,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	302,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	303,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	304,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	305,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	306,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	307,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	308,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	309,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	310,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	311,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	312,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	313,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	314,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	315,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	316,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	317,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	318,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	319,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	320,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	321,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	322,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	323,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	324,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	325,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	326,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	327,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	328,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	329,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	330,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	331,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	332,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	333,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	334,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	335,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	336,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	337,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	338,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	339,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	340,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	341,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	342,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	343,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	344,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	345,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	346,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	347,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	348,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	349,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	350,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	351,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	352,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	353,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	354,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	355,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	356,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	357,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	358,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	359,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	360,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	361,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	362,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	363,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	364,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	365,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	366,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	367,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	368,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	369,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	370,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	371,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	372,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	373,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	374,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	375,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	376,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	377,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	378,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	379,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	380,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	381,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	382,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	383,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	384,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	385,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	386,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	387,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	388,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	389,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	390,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	391,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	392,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	393,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	394,
									"scores":	[-7.23628466705078, -7.8193445378507818, -7.8193445378507818, -7.5733056240507821, -7.5733056240507821, -7.70429538885078, -7.70429538885078, -7.8193445378507818, -7.7841947410507819, -7.072370624050782, -6.9392865808507818, -8.1346453047507836, -7.29954052785078, -7.29954052785078, -7.29954052785078, -7.8676477880507818, -8.07853690505078, -7.3667127880507817, -8.11368670185078, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -8.07853690505078, -8.07853690505078, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -7.8676477880507818, -8.07853690505078, -7.8676477880507818, -8.07853690505078, -8.07853690505078, -7.8676477880507818, -8.07853690505078, -7.3667127880507817, -8.11368670185078, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -8.07853690505078, -8.07853690505078, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -8.07853690505078, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -7.8676477880507818, -8.07853690505078, -7.8676477880507818, -8.07853690505078, -7.8676477880507818, -8.07853690505078, -8.07853690505078]
								}]
						}, {
							"switch":	20,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3752,
							"begin_column":	2,
							"end_line":	3752,
							"end_column":	71,
							"patch_codes":	["if (!__is_neg(\"\", \"L3752\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling);\n", "{\n}\n", "zend_replace_error_handling((0 * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * options), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((0 * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zend_replace_error_handling((clone != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((clone == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((dateobj != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((dateobj == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((dpobj != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((dpobj == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((end != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((end != interval), ((void *)0), &error_handling)", "zend_replace_error_handling((end == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((end == interval), ((void *)0), &error_handling)", "zend_replace_error_handling((error_handling != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((error_handling == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != options), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((ht != return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * options), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((ht * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + options), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((ht + return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - options), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((ht - return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == options), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((ht == return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((interval != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((interval == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((intobj != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((intobj == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len * options), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len * recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((isostr_len == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((options != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((options != isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((options * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((options * isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((options * recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((options * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((options + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((options + isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((options - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((options - isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((options == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((options == isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences != isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences != options), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences * isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences * options), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences * return_value_used), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences + isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences + options), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences - isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences - options), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences == isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((recurrences == options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != end), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != interval), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != start), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value != this_ptr), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == end), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == interval), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == start), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value == this_ptr), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_ptr != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_ptr == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used != recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * ht), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used * recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used + recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used - recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == isostr_len), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == options), ((void *)0), &error_handling)", "zend_replace_error_handling((return_value_used == recurrences), ((void *)0), &error_handling)", "zend_replace_error_handling((start != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((start != end), ((void *)0), &error_handling)", "zend_replace_error_handling((start != interval), ((void *)0), &error_handling)", "zend_replace_error_handling((start == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((start == end), ((void *)0), &error_handling)", "zend_replace_error_handling((start == interval), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr != 0), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr != end), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr != interval), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr != start), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr == 0), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr == end), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr == interval), ((void *)0), &error_handling)", "zend_replace_error_handling((this_ptr == start), ((void *)0), &error_handling)", "zend_replace_error_handling(EH_THROW, ((void *)0), &(error_handling))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1792726256507819, -6.3465572266507824, -6.3465572266507824, -5.5886691266507817, -5.5886691266507817, -5.9598650656507823, -5.9598650656507823, -6.3465572266507824, -6.057929126650782, -5.2666580966507821, -6.531821575650782, -6.7267848745507823, -6.3230697166507825, -6.3230697166507825, -6.3230697166507825, -6.0900264266507822, -6.5592864266507824, -5.7680153966507817, -6.8479145266507819, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.0900264266507822, -6.5592864266507824, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824, -6.0900264266507822, -6.5592864266507824, -5.7680153966507817, -6.8479145266507819, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.5592864266507824, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.0900264266507822, -6.5592864266507824, -6.0900264266507822, -6.5592864266507824, -6.0900264266507822, -6.5592864266507824, -6.5592864266507824]
								}, {
									"case":	2,
									"scores":	[-4.053441956650782]
								}, {
									"case":	3,
									"scores":	[-4.053441956650782]
								}, {
									"case":	4,
									"scores":	[-4.053441956650782]
								}, {
									"case":	5,
									"scores":	[-4.053441956650782]
								}, {
									"case":	6,
									"scores":	[-4.053441956650782]
								}, {
									"case":	7,
									"scores":	[-4.053441956650782]
								}, {
									"case":	8,
									"scores":	[-4.053441956650782]
								}, {
									"case":	9,
									"scores":	[-4.053441956650782]
								}, {
									"case":	10,
									"scores":	[-4.053441956650782]
								}, {
									"case":	11,
									"scores":	[-4.053441956650782]
								}, {
									"case":	12,
									"scores":	[-4.053441956650782]
								}, {
									"case":	13,
									"scores":	[-4.053441956650782]
								}, {
									"case":	14,
									"scores":	[-4.053441956650782]
								}, {
									"case":	15,
									"scores":	[-4.053441956650782]
								}, {
									"case":	16,
									"scores":	[-4.053441956650782]
								}, {
									"case":	17,
									"scores":	[-4.053441956650782]
								}, {
									"case":	18,
									"scores":	[-4.053441956650782]
								}, {
									"case":	19,
									"scores":	[-4.053441956650782]
								}, {
									"case":	20,
									"scores":	[-4.053441956650782]
								}, {
									"case":	21,
									"scores":	[-4.053441956650782]
								}, {
									"case":	22,
									"scores":	[-4.053441956650782]
								}, {
									"case":	23,
									"scores":	[-4.053441956650782]
								}, {
									"case":	24,
									"scores":	[-4.053441956650782]
								}, {
									"case":	25,
									"scores":	[-4.053441956650782]
								}, {
									"case":	26,
									"scores":	[-4.053441956650782]
								}, {
									"case":	27,
									"scores":	[-4.053441956650782]
								}, {
									"case":	28,
									"scores":	[-4.053441956650782]
								}, {
									"case":	29,
									"scores":	[-4.053441956650782]
								}, {
									"case":	30,
									"scores":	[-4.053441956650782]
								}, {
									"case":	31,
									"scores":	[-4.053441956650782]
								}, {
									"case":	32,
									"scores":	[-4.053441956650782]
								}, {
									"case":	33,
									"scores":	[-4.053441956650782]
								}, {
									"case":	34,
									"scores":	[-4.053441956650782]
								}, {
									"case":	35,
									"scores":	[-4.053441956650782]
								}, {
									"case":	36,
									"scores":	[-4.053441956650782]
								}, {
									"case":	37,
									"scores":	[-4.053441956650782]
								}, {
									"case":	38,
									"scores":	[-4.053441956650782]
								}, {
									"case":	39,
									"scores":	[-4.053441956650782]
								}, {
									"case":	40,
									"scores":	[-4.053441956650782]
								}, {
									"case":	41,
									"scores":	[-4.053441956650782]
								}, {
									"case":	42,
									"scores":	[-4.053441956650782]
								}, {
									"case":	43,
									"scores":	[-4.053441956650782]
								}, {
									"case":	44,
									"scores":	[-4.053441956650782]
								}, {
									"case":	45,
									"scores":	[-4.053441956650782]
								}, {
									"case":	46,
									"scores":	[-4.053441956650782]
								}, {
									"case":	47,
									"scores":	[-4.053441956650782]
								}, {
									"case":	48,
									"scores":	[-4.053441956650782]
								}, {
									"case":	49,
									"scores":	[-4.053441956650782]
								}, {
									"case":	50,
									"scores":	[-4.053441956650782]
								}, {
									"case":	51,
									"scores":	[-4.053441956650782]
								}, {
									"case":	52,
									"scores":	[-4.053441956650782]
								}, {
									"case":	53,
									"scores":	[-4.053441956650782]
								}, {
									"case":	54,
									"scores":	[-4.053441956650782]
								}, {
									"case":	55,
									"scores":	[-4.053441956650782]
								}, {
									"case":	56,
									"scores":	[-4.053441956650782]
								}, {
									"case":	57,
									"scores":	[-4.053441956650782]
								}, {
									"case":	58,
									"scores":	[-4.053441956650782]
								}, {
									"case":	59,
									"scores":	[-4.053441956650782]
								}, {
									"case":	60,
									"scores":	[-4.053441956650782]
								}, {
									"case":	61,
									"scores":	[-4.053441956650782]
								}, {
									"case":	62,
									"scores":	[-4.053441956650782]
								}, {
									"case":	63,
									"scores":	[-4.053441956650782]
								}, {
									"case":	64,
									"scores":	[-4.053441956650782]
								}, {
									"case":	65,
									"scores":	[-4.053441956650782]
								}, {
									"case":	66,
									"scores":	[-4.053441956650782]
								}, {
									"case":	67,
									"scores":	[-4.053441956650782]
								}, {
									"case":	68,
									"scores":	[-4.053441956650782]
								}, {
									"case":	69,
									"scores":	[-4.053441956650782]
								}, {
									"case":	70,
									"scores":	[-4.053441956650782]
								}, {
									"case":	71,
									"scores":	[-4.053441956650782]
								}, {
									"case":	72,
									"scores":	[-4.053441956650782]
								}, {
									"case":	73,
									"scores":	[-4.053441956650782]
								}, {
									"case":	74,
									"scores":	[-4.053441956650782]
								}, {
									"case":	75,
									"scores":	[-4.053441956650782]
								}, {
									"case":	76,
									"scores":	[-4.053441956650782]
								}, {
									"case":	77,
									"scores":	[-4.053441956650782]
								}, {
									"case":	78,
									"scores":	[-4.053441956650782]
								}, {
									"case":	79,
									"scores":	[-4.053441956650782]
								}, {
									"case":	80,
									"scores":	[-4.053441956650782]
								}, {
									"case":	81,
									"scores":	[-4.053441956650782]
								}, {
									"case":	82,
									"scores":	[-4.053441956650782]
								}, {
									"case":	83,
									"scores":	[-4.053441956650782]
								}, {
									"case":	84,
									"scores":	[-4.053441956650782]
								}, {
									"case":	85,
									"scores":	[-4.053441956650782]
								}, {
									"case":	86,
									"scores":	[-4.053441956650782]
								}, {
									"case":	87,
									"scores":	[-4.053441956650782]
								}, {
									"case":	88,
									"scores":	[-4.053441956650782]
								}, {
									"case":	89,
									"scores":	[-4.053441956650782]
								}, {
									"case":	90,
									"scores":	[-4.053441956650782]
								}, {
									"case":	91,
									"scores":	[-4.053441956650782]
								}, {
									"case":	92,
									"scores":	[-4.053441956650782]
								}, {
									"case":	93,
									"scores":	[-4.053441956650782]
								}, {
									"case":	94,
									"scores":	[-4.053441956650782]
								}, {
									"case":	95,
									"scores":	[-4.053441956650782]
								}, {
									"case":	96,
									"scores":	[-4.053441956650782]
								}, {
									"case":	97,
									"scores":	[-4.053441956650782]
								}, {
									"case":	98,
									"scores":	[-4.053441956650782]
								}, {
									"case":	99,
									"scores":	[-4.053441956650782]
								}, {
									"case":	100,
									"scores":	[-4.053441956650782]
								}, {
									"case":	101,
									"scores":	[-4.053441956650782]
								}, {
									"case":	102,
									"scores":	[-4.053441956650782]
								}, {
									"case":	103,
									"scores":	[-4.053441956650782]
								}, {
									"case":	104,
									"scores":	[-4.053441956650782]
								}, {
									"case":	105,
									"scores":	[-4.053441956650782]
								}, {
									"case":	106,
									"scores":	[-4.053441956650782]
								}, {
									"case":	107,
									"scores":	[-4.053441956650782]
								}, {
									"case":	108,
									"scores":	[-4.053441956650782]
								}, {
									"case":	109,
									"scores":	[-4.053441956650782]
								}, {
									"case":	110,
									"scores":	[-4.053441956650782]
								}, {
									"case":	111,
									"scores":	[-4.053441956650782]
								}, {
									"case":	112,
									"scores":	[-4.053441956650782]
								}, {
									"case":	113,
									"scores":	[-4.053441956650782]
								}, {
									"case":	114,
									"scores":	[-4.053441956650782]
								}, {
									"case":	115,
									"scores":	[-4.053441956650782]
								}, {
									"case":	116,
									"scores":	[-4.053441956650782]
								}, {
									"case":	117,
									"scores":	[-4.053441956650782]
								}, {
									"case":	118,
									"scores":	[-4.053441956650782]
								}, {
									"case":	119,
									"scores":	[-4.053441956650782]
								}, {
									"case":	120,
									"scores":	[-4.053441956650782]
								}, {
									"case":	121,
									"scores":	[-4.053441956650782]
								}, {
									"case":	122,
									"scores":	[-4.053441956650782]
								}, {
									"case":	123,
									"scores":	[-4.053441956650782]
								}, {
									"case":	124,
									"scores":	[-4.053441956650782]
								}, {
									"case":	125,
									"scores":	[-4.053441956650782]
								}, {
									"case":	126,
									"scores":	[-4.053441956650782]
								}, {
									"case":	127,
									"scores":	[-4.053441956650782]
								}, {
									"case":	128,
									"scores":	[-4.053441956650782]
								}, {
									"case":	129,
									"scores":	[-4.053441956650782]
								}, {
									"case":	130,
									"scores":	[-4.053441956650782]
								}, {
									"case":	131,
									"scores":	[-4.053441956650782]
								}, {
									"case":	132,
									"scores":	[-4.053441956650782]
								}, {
									"case":	133,
									"scores":	[-4.053441956650782]
								}, {
									"case":	134,
									"scores":	[-4.053441956650782]
								}, {
									"case":	135,
									"scores":	[-4.053441956650782]
								}, {
									"case":	136,
									"scores":	[-4.053441956650782]
								}]
						}]
				}, {
					"line":	3754,
					"switches":	[{
							"switch":	25,
							"types":	[[], [], [], [], [394], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [], [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], [], [], [], [], [], []],
							"begin_line":	3755,
							"begin_column":	2,
							"end_line":	3755,
							"end_column":	2,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	2,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	3,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	4,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	5,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	6,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	7,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	8,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	9,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	10,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	11,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	12,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	13,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	14,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	15,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	16,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	17,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	18,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	19,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	20,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	21,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	22,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	23,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	24,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	25,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	26,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	27,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	28,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	29,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	30,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	31,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	32,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	33,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	34,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	35,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	36,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	37,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	38,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	39,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	40,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	41,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	42,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	43,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	44,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	45,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	46,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	47,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	48,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	49,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	50,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	51,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	52,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	53,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	54,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	55,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	56,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	57,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	58,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	59,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	60,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	61,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	62,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	63,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	64,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	65,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	66,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	67,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	68,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	69,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	70,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	71,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	72,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	73,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	74,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	75,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	76,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	77,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	78,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	79,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	80,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	81,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	82,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	83,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	84,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	85,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	86,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	87,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	88,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	89,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	90,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	91,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	92,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	93,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	94,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	95,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	96,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	97,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	98,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	99,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	100,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	101,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	102,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	103,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	104,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	105,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	106,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	107,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	108,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	109,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	110,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	111,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	112,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	113,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	114,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	115,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	116,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	117,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	118,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	119,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	120,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	121,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	122,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	123,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	124,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	125,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	126,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	127,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	128,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	129,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	130,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	131,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	132,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	133,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	134,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	135,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	136,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	137,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	138,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	139,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	140,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	141,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	142,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	143,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	144,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	145,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	146,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	147,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	148,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	149,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	150,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	151,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	152,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	153,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	154,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	155,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	156,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	157,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	158,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	159,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	160,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	161,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	162,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	163,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	164,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	165,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	166,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	167,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	168,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	169,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	170,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	171,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	172,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	173,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	174,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	175,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	176,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	177,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	178,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	179,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	180,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	181,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	182,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	183,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	184,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	185,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	186,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	187,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	188,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	189,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	190,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	191,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	192,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	193,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	194,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	195,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	196,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	197,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	198,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	199,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	200,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	201,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	202,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	203,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	204,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	205,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	206,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	207,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	208,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	209,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	210,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	211,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	212,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	213,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	214,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	215,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	216,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	217,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	218,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	219,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	220,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	221,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	222,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	223,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	224,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	225,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	226,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	227,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	228,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	229,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	230,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	231,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	232,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	233,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	234,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	235,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	236,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	237,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	238,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	239,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	240,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	241,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	242,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	243,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	244,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	245,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	246,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	247,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	248,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	249,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	250,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	251,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	252,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	253,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	254,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	255,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	256,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	257,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	258,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	259,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	260,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	261,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	262,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	263,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	264,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	265,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	266,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	267,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	268,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	269,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	270,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	271,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	272,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	273,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	274,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	275,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	276,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	277,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	278,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	279,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	280,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	281,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	282,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	283,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	284,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	285,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	286,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	287,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	288,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	289,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	290,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	291,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	292,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	293,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	294,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	295,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	296,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	297,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	298,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	299,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	300,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	301,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	302,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	303,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	304,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	305,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	306,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	307,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	308,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	309,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	310,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	311,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	312,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	313,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	314,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	315,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	316,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	317,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	318,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	319,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	320,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	321,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	322,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	323,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	324,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	325,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	326,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	327,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	328,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	329,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	330,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	331,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	332,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	333,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	334,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	335,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	336,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	337,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	338,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	339,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	340,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	341,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	342,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	343,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	344,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	345,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	346,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	347,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	348,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	349,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	350,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	351,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	352,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	353,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	354,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	355,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	356,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	357,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	358,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	359,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	360,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	361,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	362,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	363,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	364,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	365,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	366,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	367,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	368,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	369,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	370,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	371,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	372,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	373,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	374,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	375,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	376,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	377,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	378,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	379,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	380,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	381,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	382,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	383,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	384,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	385,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	386,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	387,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	388,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	389,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	390,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	391,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	392,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	393,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	394,
									"scores":	[-6.2290800616982249, -7.2913309606982235, -7.5022200776982242, -6.7903959606982234, -7.2933265444982229, -7.2933265444982229, -7.2933265444982229, -7.5523987524982239, -7.5523987524982239, -7.0472876306982233, -7.3304269444982237, -7.2933265444982229, -7.2933265444982229, -7.2933265444982229, -7.2933265444982229, -7.8614338046982244, -8.0723229216982233, -7.3604988046982243, -8.107472718498224, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -7.8614338046982244, -8.0723229216982233, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233, -7.8614338046982244, -8.0723229216982233, -7.3604988046982243, -8.107472718498224, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -8.0723229216982233, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -7.8614338046982244, -8.0723229216982233, -7.8614338046982244, -8.0723229216982233, -7.8614338046982244, -8.0723229216982233, -8.0723229216982233]
								}]
						}, {
							"switch":	26,
							"types":	[[5], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4], []],
							"begin_line":	3755,
							"begin_column":	4,
							"end_line":	3759,
							"end_column":	4,
							"patch_codes":	["if (__is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) || __is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n", "if (zend_get_parameters(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n", "if (zend_get_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) && !__is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.7013180654281452, -4.6650516654281455, -5.1343116654281458, -4.3430406354281459, -5.8782906654281453, -5.8782906654281453, -5.8782906654281453, -6.1953458054281452, -6.1953458054281452, -5.1204025654281455, -6.1726414654281445, -5.8782906654281453, -5.8782906654281453, -5.8782906654281453, -5.8782906654281453, -5.6452473754281449, -6.1145073754281452, -5.3232363454281453, -6.4031354754281455, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -5.6452473754281449, -6.1145073754281452, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452, -5.6452473754281449, -6.1145073754281452, -5.3232363454281453, -6.4031354754281455, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -6.1145073754281452, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -5.6452473754281449, -6.1145073754281452, -5.6452473754281449, -6.1145073754281452, -5.6452473754281449, -6.1145073754281452, -6.1145073754281452]
								}, {
									"case":	2,
									"scores":	[-3.7236963474281457, -3.6874299474281456, -4.1566899474281458, -3.3654189174281459, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -5.2177240874281452, -5.2177240874281452, -4.1427808474281456, -5.1950197474281454, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -4.6676256574281449, -5.1368856574281452, -4.3456146274281453, -5.4255137574281456, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.3456146274281453, -5.4255137574281456, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.7236963474281457, -3.6874299474281456, -4.1566899474281458, -3.3654189174281459, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -5.2177240874281452, -5.2177240874281452, -4.1427808474281456, -5.1950197474281454, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -4.9006689474281453, -4.6676256574281449, -5.1368856574281452, -4.3456146274281453, -5.4255137574281456, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.3456146274281453, -5.4255137574281456, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -5.1368856574281452, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -4.6676256574281449, -5.1368856574281452, -5.1368856574281452]
								}]
						}, {
							"switch":	27,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3755,
							"begin_column":	4,
							"end_line":	3759,
							"end_column":	4,
							"patch_codes":	["if (!__is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n", "if (!__is_neg(\"\", \"L3755\", 85, &(ht), sizeof (ht), &(options), sizeof (options), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)) && (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1)) {\n    php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n    zend_restore_error_handling(&error_handling);\n    return;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4514246046982242, -5.4151582046982245, -5.8844182046982239, -5.093147174698224, -6.6283972046982242, -6.6283972046982242, -6.6283972046982242, -6.9454523446982241, -6.9454523446982241, -5.8705091046982236, -6.9227480046982244, -6.6283972046982242, -6.6283972046982242, -6.6283972046982242, -6.6283972046982242, -6.3953539146982239, -6.8646139146982241, -6.0733428846982243, -7.1532420146982236, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.3953539146982239, -6.8646139146982241, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241, -6.3953539146982239, -6.8646139146982241, -6.0733428846982243, -7.1532420146982236, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.8646139146982241, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.3953539146982239, -6.8646139146982241, -6.3953539146982239, -6.8646139146982241, -6.3953539146982239, -6.8646139146982241, -6.8646139146982241]
								}, {
									"case":	2,
									"scores":	[-5.2770730766982243, -5.2408066766982238, -5.710066676698224, -4.9187956466982241, -6.4540456766982235, -6.4540456766982235, -6.4540456766982235, -6.7711008166982243, -6.7711008166982243, -5.6961575766982238, -6.7483964766982236, -6.4540456766982235, -6.4540456766982235, -6.4540456766982235, -6.4540456766982235, -6.221002386698224, -6.6902623866982243, -5.8989913566982235, -6.9788904866982229, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.221002386698224, -6.6902623866982243, -6.221002386698224, -6.6902623866982243, -6.6902623866982243, -6.221002386698224, -6.6902623866982243, -5.8989913566982235, -6.9788904866982229, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.6902623866982243, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.221002386698224, -6.6902623866982243, -6.221002386698224, -6.6902623866982243, -6.221002386698224, -6.6902623866982243, -6.6902623866982243]
								}]
						}]
				}, {
					"line":	3753,
					"switches":	[{
							"switch":	23,
							"types":	[[], [], [], [], [394], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [], [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], [], [], [], [], [], []],
							"begin_line":	3754,
							"begin_column":	1,
							"end_line":	3754,
							"end_column":	1,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.013036542015743]
								}, {
									"case":	2,
									"scores":	[-4.013036542015743]
								}, {
									"case":	3,
									"scores":	[-4.013036542015743]
								}, {
									"case":	4,
									"scores":	[-4.013036542015743]
								}, {
									"case":	5,
									"scores":	[-4.013036542015743]
								}, {
									"case":	6,
									"scores":	[-4.013036542015743]
								}, {
									"case":	7,
									"scores":	[-4.013036542015743]
								}, {
									"case":	8,
									"scores":	[-4.013036542015743]
								}, {
									"case":	9,
									"scores":	[-4.013036542015743]
								}, {
									"case":	10,
									"scores":	[-4.013036542015743]
								}, {
									"case":	11,
									"scores":	[-4.013036542015743]
								}, {
									"case":	12,
									"scores":	[-4.013036542015743]
								}, {
									"case":	13,
									"scores":	[-4.013036542015743]
								}, {
									"case":	14,
									"scores":	[-4.013036542015743]
								}, {
									"case":	15,
									"scores":	[-4.013036542015743]
								}, {
									"case":	16,
									"scores":	[-4.013036542015743]
								}, {
									"case":	17,
									"scores":	[-4.013036542015743]
								}, {
									"case":	18,
									"scores":	[-4.013036542015743]
								}, {
									"case":	19,
									"scores":	[-4.013036542015743]
								}, {
									"case":	20,
									"scores":	[-4.013036542015743]
								}, {
									"case":	21,
									"scores":	[-4.013036542015743]
								}, {
									"case":	22,
									"scores":	[-4.013036542015743]
								}, {
									"case":	23,
									"scores":	[-4.013036542015743]
								}, {
									"case":	24,
									"scores":	[-4.013036542015743]
								}, {
									"case":	25,
									"scores":	[-4.013036542015743]
								}, {
									"case":	26,
									"scores":	[-4.013036542015743]
								}, {
									"case":	27,
									"scores":	[-4.013036542015743]
								}, {
									"case":	28,
									"scores":	[-4.013036542015743]
								}, {
									"case":	29,
									"scores":	[-4.013036542015743]
								}, {
									"case":	30,
									"scores":	[-4.013036542015743]
								}, {
									"case":	31,
									"scores":	[-4.013036542015743]
								}, {
									"case":	32,
									"scores":	[-4.013036542015743]
								}, {
									"case":	33,
									"scores":	[-4.013036542015743]
								}, {
									"case":	34,
									"scores":	[-4.013036542015743]
								}, {
									"case":	35,
									"scores":	[-4.013036542015743]
								}, {
									"case":	36,
									"scores":	[-4.013036542015743]
								}, {
									"case":	37,
									"scores":	[-4.013036542015743]
								}, {
									"case":	38,
									"scores":	[-4.013036542015743]
								}, {
									"case":	39,
									"scores":	[-4.013036542015743]
								}, {
									"case":	40,
									"scores":	[-4.013036542015743]
								}, {
									"case":	41,
									"scores":	[-4.013036542015743]
								}, {
									"case":	42,
									"scores":	[-4.013036542015743]
								}, {
									"case":	43,
									"scores":	[-4.013036542015743]
								}, {
									"case":	44,
									"scores":	[-4.013036542015743]
								}, {
									"case":	45,
									"scores":	[-4.013036542015743]
								}, {
									"case":	46,
									"scores":	[-4.013036542015743]
								}, {
									"case":	47,
									"scores":	[-4.013036542015743]
								}, {
									"case":	48,
									"scores":	[-4.013036542015743]
								}, {
									"case":	49,
									"scores":	[-4.013036542015743]
								}, {
									"case":	50,
									"scores":	[-4.013036542015743]
								}, {
									"case":	51,
									"scores":	[-4.013036542015743]
								}, {
									"case":	52,
									"scores":	[-4.013036542015743]
								}, {
									"case":	53,
									"scores":	[-4.013036542015743]
								}, {
									"case":	54,
									"scores":	[-4.013036542015743]
								}, {
									"case":	55,
									"scores":	[-4.013036542015743]
								}, {
									"case":	56,
									"scores":	[-4.013036542015743]
								}, {
									"case":	57,
									"scores":	[-4.013036542015743]
								}, {
									"case":	58,
									"scores":	[-4.013036542015743]
								}, {
									"case":	59,
									"scores":	[-4.013036542015743]
								}, {
									"case":	60,
									"scores":	[-4.013036542015743]
								}, {
									"case":	61,
									"scores":	[-4.013036542015743]
								}, {
									"case":	62,
									"scores":	[-4.013036542015743]
								}, {
									"case":	63,
									"scores":	[-4.013036542015743]
								}, {
									"case":	64,
									"scores":	[-4.013036542015743]
								}, {
									"case":	65,
									"scores":	[-4.013036542015743]
								}, {
									"case":	66,
									"scores":	[-4.013036542015743]
								}, {
									"case":	67,
									"scores":	[-4.013036542015743]
								}, {
									"case":	68,
									"scores":	[-4.013036542015743]
								}, {
									"case":	69,
									"scores":	[-4.013036542015743]
								}, {
									"case":	70,
									"scores":	[-4.013036542015743]
								}, {
									"case":	71,
									"scores":	[-4.013036542015743]
								}, {
									"case":	72,
									"scores":	[-4.013036542015743]
								}, {
									"case":	73,
									"scores":	[-4.013036542015743]
								}, {
									"case":	74,
									"scores":	[-4.013036542015743]
								}, {
									"case":	75,
									"scores":	[-4.013036542015743]
								}, {
									"case":	76,
									"scores":	[-4.013036542015743]
								}, {
									"case":	77,
									"scores":	[-4.013036542015743]
								}, {
									"case":	78,
									"scores":	[-4.013036542015743]
								}, {
									"case":	79,
									"scores":	[-4.013036542015743]
								}, {
									"case":	80,
									"scores":	[-4.013036542015743]
								}, {
									"case":	81,
									"scores":	[-4.013036542015743]
								}, {
									"case":	82,
									"scores":	[-4.013036542015743]
								}, {
									"case":	83,
									"scores":	[-4.013036542015743]
								}, {
									"case":	84,
									"scores":	[-4.013036542015743]
								}, {
									"case":	85,
									"scores":	[-4.013036542015743]
								}, {
									"case":	86,
									"scores":	[-4.013036542015743]
								}, {
									"case":	87,
									"scores":	[-4.013036542015743]
								}, {
									"case":	88,
									"scores":	[-4.013036542015743]
								}, {
									"case":	89,
									"scores":	[-4.013036542015743]
								}, {
									"case":	90,
									"scores":	[-4.013036542015743]
								}, {
									"case":	91,
									"scores":	[-4.013036542015743]
								}, {
									"case":	92,
									"scores":	[-4.013036542015743]
								}, {
									"case":	93,
									"scores":	[-4.013036542015743]
								}, {
									"case":	94,
									"scores":	[-4.013036542015743]
								}, {
									"case":	95,
									"scores":	[-4.013036542015743]
								}, {
									"case":	96,
									"scores":	[-4.013036542015743]
								}, {
									"case":	97,
									"scores":	[-4.013036542015743]
								}, {
									"case":	98,
									"scores":	[-4.013036542015743]
								}, {
									"case":	99,
									"scores":	[-4.013036542015743]
								}, {
									"case":	100,
									"scores":	[-4.013036542015743]
								}, {
									"case":	101,
									"scores":	[-4.013036542015743]
								}, {
									"case":	102,
									"scores":	[-4.013036542015743]
								}, {
									"case":	103,
									"scores":	[-4.013036542015743]
								}, {
									"case":	104,
									"scores":	[-4.013036542015743]
								}, {
									"case":	105,
									"scores":	[-4.013036542015743]
								}, {
									"case":	106,
									"scores":	[-4.013036542015743]
								}, {
									"case":	107,
									"scores":	[-4.013036542015743]
								}, {
									"case":	108,
									"scores":	[-4.013036542015743]
								}, {
									"case":	109,
									"scores":	[-4.013036542015743]
								}, {
									"case":	110,
									"scores":	[-4.013036542015743]
								}, {
									"case":	111,
									"scores":	[-4.013036542015743]
								}, {
									"case":	112,
									"scores":	[-4.013036542015743]
								}, {
									"case":	113,
									"scores":	[-4.013036542015743]
								}, {
									"case":	114,
									"scores":	[-4.013036542015743]
								}, {
									"case":	115,
									"scores":	[-4.013036542015743]
								}, {
									"case":	116,
									"scores":	[-4.013036542015743]
								}, {
									"case":	117,
									"scores":	[-4.013036542015743]
								}, {
									"case":	118,
									"scores":	[-4.013036542015743]
								}, {
									"case":	119,
									"scores":	[-4.013036542015743]
								}, {
									"case":	120,
									"scores":	[-4.013036542015743]
								}, {
									"case":	121,
									"scores":	[-4.013036542015743]
								}, {
									"case":	122,
									"scores":	[-4.013036542015743]
								}, {
									"case":	123,
									"scores":	[-4.013036542015743]
								}, {
									"case":	124,
									"scores":	[-4.013036542015743]
								}, {
									"case":	125,
									"scores":	[-4.013036542015743]
								}, {
									"case":	126,
									"scores":	[-4.013036542015743]
								}, {
									"case":	127,
									"scores":	[-4.013036542015743]
								}, {
									"case":	128,
									"scores":	[-4.013036542015743]
								}, {
									"case":	129,
									"scores":	[-4.013036542015743]
								}, {
									"case":	130,
									"scores":	[-4.013036542015743]
								}, {
									"case":	131,
									"scores":	[-4.013036542015743]
								}, {
									"case":	132,
									"scores":	[-4.013036542015743]
								}, {
									"case":	133,
									"scores":	[-4.013036542015743]
								}, {
									"case":	134,
									"scores":	[-4.013036542015743]
								}, {
									"case":	135,
									"scores":	[-4.013036542015743]
								}, {
									"case":	136,
									"scores":	[-4.013036542015743]
								}, {
									"case":	137,
									"scores":	[-4.013036542015743]
								}, {
									"case":	138,
									"scores":	[-4.013036542015743]
								}, {
									"case":	139,
									"scores":	[-4.013036542015743]
								}, {
									"case":	140,
									"scores":	[-4.013036542015743]
								}, {
									"case":	141,
									"scores":	[-4.013036542015743]
								}, {
									"case":	142,
									"scores":	[-4.013036542015743]
								}, {
									"case":	143,
									"scores":	[-4.013036542015743]
								}, {
									"case":	144,
									"scores":	[-4.013036542015743]
								}, {
									"case":	145,
									"scores":	[-4.013036542015743]
								}, {
									"case":	146,
									"scores":	[-4.013036542015743]
								}, {
									"case":	147,
									"scores":	[-4.013036542015743]
								}, {
									"case":	148,
									"scores":	[-4.013036542015743]
								}, {
									"case":	149,
									"scores":	[-4.013036542015743]
								}, {
									"case":	150,
									"scores":	[-4.013036542015743]
								}, {
									"case":	151,
									"scores":	[-4.013036542015743]
								}, {
									"case":	152,
									"scores":	[-4.013036542015743]
								}, {
									"case":	153,
									"scores":	[-4.013036542015743]
								}, {
									"case":	154,
									"scores":	[-4.013036542015743]
								}, {
									"case":	155,
									"scores":	[-4.013036542015743]
								}, {
									"case":	156,
									"scores":	[-4.013036542015743]
								}, {
									"case":	157,
									"scores":	[-4.013036542015743]
								}, {
									"case":	158,
									"scores":	[-4.013036542015743]
								}, {
									"case":	159,
									"scores":	[-4.013036542015743]
								}, {
									"case":	160,
									"scores":	[-4.013036542015743]
								}, {
									"case":	161,
									"scores":	[-4.013036542015743]
								}, {
									"case":	162,
									"scores":	[-4.013036542015743]
								}, {
									"case":	163,
									"scores":	[-4.013036542015743]
								}, {
									"case":	164,
									"scores":	[-4.013036542015743]
								}, {
									"case":	165,
									"scores":	[-4.013036542015743]
								}, {
									"case":	166,
									"scores":	[-4.013036542015743]
								}, {
									"case":	167,
									"scores":	[-4.013036542015743]
								}, {
									"case":	168,
									"scores":	[-4.013036542015743]
								}, {
									"case":	169,
									"scores":	[-4.013036542015743]
								}, {
									"case":	170,
									"scores":	[-4.013036542015743]
								}, {
									"case":	171,
									"scores":	[-4.013036542015743]
								}, {
									"case":	172,
									"scores":	[-4.013036542015743]
								}, {
									"case":	173,
									"scores":	[-4.013036542015743]
								}, {
									"case":	174,
									"scores":	[-4.013036542015743]
								}, {
									"case":	175,
									"scores":	[-4.013036542015743]
								}, {
									"case":	176,
									"scores":	[-4.013036542015743]
								}, {
									"case":	177,
									"scores":	[-4.013036542015743]
								}, {
									"case":	178,
									"scores":	[-4.013036542015743]
								}, {
									"case":	179,
									"scores":	[-4.013036542015743]
								}, {
									"case":	180,
									"scores":	[-4.013036542015743]
								}, {
									"case":	181,
									"scores":	[-4.013036542015743]
								}, {
									"case":	182,
									"scores":	[-4.013036542015743]
								}, {
									"case":	183,
									"scores":	[-4.013036542015743]
								}, {
									"case":	184,
									"scores":	[-4.013036542015743]
								}, {
									"case":	185,
									"scores":	[-4.013036542015743]
								}, {
									"case":	186,
									"scores":	[-4.013036542015743]
								}, {
									"case":	187,
									"scores":	[-4.013036542015743]
								}, {
									"case":	188,
									"scores":	[-4.013036542015743]
								}, {
									"case":	189,
									"scores":	[-4.013036542015743]
								}, {
									"case":	190,
									"scores":	[-4.013036542015743]
								}, {
									"case":	191,
									"scores":	[-4.013036542015743]
								}, {
									"case":	192,
									"scores":	[-4.013036542015743]
								}, {
									"case":	193,
									"scores":	[-4.013036542015743]
								}, {
									"case":	194,
									"scores":	[-4.013036542015743]
								}, {
									"case":	195,
									"scores":	[-4.013036542015743]
								}, {
									"case":	196,
									"scores":	[-4.013036542015743]
								}, {
									"case":	197,
									"scores":	[-4.013036542015743]
								}, {
									"case":	198,
									"scores":	[-4.013036542015743]
								}, {
									"case":	199,
									"scores":	[-4.013036542015743]
								}, {
									"case":	200,
									"scores":	[-4.013036542015743]
								}, {
									"case":	201,
									"scores":	[-4.013036542015743]
								}, {
									"case":	202,
									"scores":	[-4.013036542015743]
								}, {
									"case":	203,
									"scores":	[-4.013036542015743]
								}, {
									"case":	204,
									"scores":	[-4.013036542015743]
								}, {
									"case":	205,
									"scores":	[-4.013036542015743]
								}, {
									"case":	206,
									"scores":	[-4.013036542015743]
								}, {
									"case":	207,
									"scores":	[-4.013036542015743]
								}, {
									"case":	208,
									"scores":	[-4.013036542015743]
								}, {
									"case":	209,
									"scores":	[-4.013036542015743]
								}, {
									"case":	210,
									"scores":	[-4.013036542015743]
								}, {
									"case":	211,
									"scores":	[-4.013036542015743]
								}, {
									"case":	212,
									"scores":	[-4.013036542015743]
								}, {
									"case":	213,
									"scores":	[-4.013036542015743]
								}, {
									"case":	214,
									"scores":	[-4.013036542015743]
								}, {
									"case":	215,
									"scores":	[-4.013036542015743]
								}, {
									"case":	216,
									"scores":	[-4.013036542015743]
								}, {
									"case":	217,
									"scores":	[-4.013036542015743]
								}, {
									"case":	218,
									"scores":	[-4.013036542015743]
								}, {
									"case":	219,
									"scores":	[-4.013036542015743]
								}, {
									"case":	220,
									"scores":	[-4.013036542015743]
								}, {
									"case":	221,
									"scores":	[-4.013036542015743]
								}, {
									"case":	222,
									"scores":	[-4.013036542015743]
								}, {
									"case":	223,
									"scores":	[-4.013036542015743]
								}, {
									"case":	224,
									"scores":	[-4.013036542015743]
								}, {
									"case":	225,
									"scores":	[-4.013036542015743]
								}, {
									"case":	226,
									"scores":	[-4.013036542015743]
								}, {
									"case":	227,
									"scores":	[-4.013036542015743]
								}, {
									"case":	228,
									"scores":	[-4.013036542015743]
								}, {
									"case":	229,
									"scores":	[-4.013036542015743]
								}, {
									"case":	230,
									"scores":	[-4.013036542015743]
								}, {
									"case":	231,
									"scores":	[-4.013036542015743]
								}, {
									"case":	232,
									"scores":	[-4.013036542015743]
								}, {
									"case":	233,
									"scores":	[-4.013036542015743]
								}, {
									"case":	234,
									"scores":	[-4.013036542015743]
								}, {
									"case":	235,
									"scores":	[-4.013036542015743]
								}, {
									"case":	236,
									"scores":	[-4.013036542015743]
								}, {
									"case":	237,
									"scores":	[-4.013036542015743]
								}, {
									"case":	238,
									"scores":	[-4.013036542015743]
								}, {
									"case":	239,
									"scores":	[-4.013036542015743]
								}, {
									"case":	240,
									"scores":	[-4.013036542015743]
								}, {
									"case":	241,
									"scores":	[-4.013036542015743]
								}, {
									"case":	242,
									"scores":	[-4.013036542015743]
								}, {
									"case":	243,
									"scores":	[-4.013036542015743]
								}, {
									"case":	244,
									"scores":	[-4.013036542015743]
								}, {
									"case":	245,
									"scores":	[-4.013036542015743]
								}, {
									"case":	246,
									"scores":	[-4.013036542015743]
								}, {
									"case":	247,
									"scores":	[-4.013036542015743]
								}, {
									"case":	248,
									"scores":	[-4.013036542015743]
								}, {
									"case":	249,
									"scores":	[-4.013036542015743]
								}, {
									"case":	250,
									"scores":	[-4.013036542015743]
								}, {
									"case":	251,
									"scores":	[-4.013036542015743]
								}, {
									"case":	252,
									"scores":	[-4.013036542015743]
								}, {
									"case":	253,
									"scores":	[-4.013036542015743]
								}, {
									"case":	254,
									"scores":	[-4.013036542015743]
								}, {
									"case":	255,
									"scores":	[-4.013036542015743]
								}, {
									"case":	256,
									"scores":	[-4.013036542015743]
								}, {
									"case":	257,
									"scores":	[-4.013036542015743]
								}, {
									"case":	258,
									"scores":	[-4.013036542015743]
								}, {
									"case":	259,
									"scores":	[-4.013036542015743]
								}, {
									"case":	260,
									"scores":	[-4.013036542015743]
								}, {
									"case":	261,
									"scores":	[-4.013036542015743]
								}, {
									"case":	262,
									"scores":	[-4.013036542015743]
								}, {
									"case":	263,
									"scores":	[-4.013036542015743]
								}, {
									"case":	264,
									"scores":	[-4.013036542015743]
								}, {
									"case":	265,
									"scores":	[-4.013036542015743]
								}, {
									"case":	266,
									"scores":	[-4.013036542015743]
								}, {
									"case":	267,
									"scores":	[-4.013036542015743]
								}, {
									"case":	268,
									"scores":	[-4.013036542015743]
								}, {
									"case":	269,
									"scores":	[-4.013036542015743]
								}, {
									"case":	270,
									"scores":	[-4.013036542015743]
								}, {
									"case":	271,
									"scores":	[-4.013036542015743]
								}, {
									"case":	272,
									"scores":	[-4.013036542015743]
								}, {
									"case":	273,
									"scores":	[-4.013036542015743]
								}, {
									"case":	274,
									"scores":	[-4.013036542015743]
								}, {
									"case":	275,
									"scores":	[-4.013036542015743]
								}, {
									"case":	276,
									"scores":	[-4.013036542015743]
								}, {
									"case":	277,
									"scores":	[-4.013036542015743]
								}, {
									"case":	278,
									"scores":	[-4.013036542015743]
								}, {
									"case":	279,
									"scores":	[-4.013036542015743]
								}, {
									"case":	280,
									"scores":	[-4.013036542015743]
								}, {
									"case":	281,
									"scores":	[-4.013036542015743]
								}, {
									"case":	282,
									"scores":	[-4.013036542015743]
								}, {
									"case":	283,
									"scores":	[-4.013036542015743]
								}, {
									"case":	284,
									"scores":	[-4.013036542015743]
								}, {
									"case":	285,
									"scores":	[-4.013036542015743]
								}, {
									"case":	286,
									"scores":	[-4.013036542015743]
								}, {
									"case":	287,
									"scores":	[-4.013036542015743]
								}, {
									"case":	288,
									"scores":	[-4.013036542015743]
								}, {
									"case":	289,
									"scores":	[-4.013036542015743]
								}, {
									"case":	290,
									"scores":	[-4.013036542015743]
								}, {
									"case":	291,
									"scores":	[-4.013036542015743]
								}, {
									"case":	292,
									"scores":	[-4.013036542015743]
								}, {
									"case":	293,
									"scores":	[-4.013036542015743]
								}, {
									"case":	294,
									"scores":	[-4.013036542015743]
								}, {
									"case":	295,
									"scores":	[-4.013036542015743]
								}, {
									"case":	296,
									"scores":	[-4.013036542015743]
								}, {
									"case":	297,
									"scores":	[-4.013036542015743]
								}, {
									"case":	298,
									"scores":	[-4.013036542015743]
								}, {
									"case":	299,
									"scores":	[-4.013036542015743]
								}, {
									"case":	300,
									"scores":	[-4.013036542015743]
								}, {
									"case":	301,
									"scores":	[-4.013036542015743]
								}, {
									"case":	302,
									"scores":	[-4.013036542015743]
								}, {
									"case":	303,
									"scores":	[-4.013036542015743]
								}, {
									"case":	304,
									"scores":	[-4.013036542015743]
								}, {
									"case":	305,
									"scores":	[-4.013036542015743]
								}, {
									"case":	306,
									"scores":	[-4.013036542015743]
								}, {
									"case":	307,
									"scores":	[-4.013036542015743]
								}, {
									"case":	308,
									"scores":	[-4.013036542015743]
								}, {
									"case":	309,
									"scores":	[-4.013036542015743]
								}, {
									"case":	310,
									"scores":	[-4.013036542015743]
								}, {
									"case":	311,
									"scores":	[-4.013036542015743]
								}, {
									"case":	312,
									"scores":	[-4.013036542015743]
								}, {
									"case":	313,
									"scores":	[-4.013036542015743]
								}, {
									"case":	314,
									"scores":	[-4.013036542015743]
								}, {
									"case":	315,
									"scores":	[-4.013036542015743]
								}, {
									"case":	316,
									"scores":	[-4.013036542015743]
								}, {
									"case":	317,
									"scores":	[-4.013036542015743]
								}, {
									"case":	318,
									"scores":	[-4.013036542015743]
								}, {
									"case":	319,
									"scores":	[-4.013036542015743]
								}, {
									"case":	320,
									"scores":	[-4.013036542015743]
								}, {
									"case":	321,
									"scores":	[-4.013036542015743]
								}, {
									"case":	322,
									"scores":	[-4.013036542015743]
								}, {
									"case":	323,
									"scores":	[-4.013036542015743]
								}, {
									"case":	324,
									"scores":	[-4.013036542015743]
								}, {
									"case":	325,
									"scores":	[-4.013036542015743]
								}, {
									"case":	326,
									"scores":	[-4.013036542015743]
								}, {
									"case":	327,
									"scores":	[-4.013036542015743]
								}, {
									"case":	328,
									"scores":	[-4.013036542015743]
								}, {
									"case":	329,
									"scores":	[-4.013036542015743]
								}, {
									"case":	330,
									"scores":	[-4.013036542015743]
								}, {
									"case":	331,
									"scores":	[-4.013036542015743]
								}, {
									"case":	332,
									"scores":	[-4.013036542015743]
								}, {
									"case":	333,
									"scores":	[-4.013036542015743]
								}, {
									"case":	334,
									"scores":	[-4.013036542015743]
								}, {
									"case":	335,
									"scores":	[-4.013036542015743]
								}, {
									"case":	336,
									"scores":	[-4.013036542015743]
								}, {
									"case":	337,
									"scores":	[-4.013036542015743]
								}, {
									"case":	338,
									"scores":	[-4.013036542015743]
								}, {
									"case":	339,
									"scores":	[-4.013036542015743]
								}, {
									"case":	340,
									"scores":	[-4.013036542015743]
								}, {
									"case":	341,
									"scores":	[-4.013036542015743]
								}, {
									"case":	342,
									"scores":	[-4.013036542015743]
								}, {
									"case":	343,
									"scores":	[-4.013036542015743]
								}, {
									"case":	344,
									"scores":	[-4.013036542015743]
								}, {
									"case":	345,
									"scores":	[-4.013036542015743]
								}, {
									"case":	346,
									"scores":	[-4.013036542015743]
								}, {
									"case":	347,
									"scores":	[-4.013036542015743]
								}, {
									"case":	348,
									"scores":	[-4.013036542015743]
								}, {
									"case":	349,
									"scores":	[-4.013036542015743]
								}, {
									"case":	350,
									"scores":	[-4.013036542015743]
								}, {
									"case":	351,
									"scores":	[-4.013036542015743]
								}, {
									"case":	352,
									"scores":	[-4.013036542015743]
								}, {
									"case":	353,
									"scores":	[-4.013036542015743]
								}, {
									"case":	354,
									"scores":	[-4.013036542015743]
								}, {
									"case":	355,
									"scores":	[-4.013036542015743]
								}, {
									"case":	356,
									"scores":	[-4.013036542015743]
								}, {
									"case":	357,
									"scores":	[-4.013036542015743]
								}, {
									"case":	358,
									"scores":	[-4.013036542015743]
								}, {
									"case":	359,
									"scores":	[-4.013036542015743]
								}, {
									"case":	360,
									"scores":	[-4.013036542015743]
								}, {
									"case":	361,
									"scores":	[-4.013036542015743]
								}, {
									"case":	362,
									"scores":	[-4.013036542015743]
								}, {
									"case":	363,
									"scores":	[-4.013036542015743]
								}, {
									"case":	364,
									"scores":	[-4.013036542015743]
								}, {
									"case":	365,
									"scores":	[-4.013036542015743]
								}, {
									"case":	366,
									"scores":	[-4.013036542015743]
								}, {
									"case":	367,
									"scores":	[-4.013036542015743]
								}, {
									"case":	368,
									"scores":	[-4.013036542015743]
								}, {
									"case":	369,
									"scores":	[-4.013036542015743]
								}, {
									"case":	370,
									"scores":	[-4.013036542015743]
								}, {
									"case":	371,
									"scores":	[-4.013036542015743]
								}, {
									"case":	372,
									"scores":	[-4.013036542015743]
								}, {
									"case":	373,
									"scores":	[-4.013036542015743]
								}, {
									"case":	374,
									"scores":	[-4.013036542015743]
								}, {
									"case":	375,
									"scores":	[-4.013036542015743]
								}, {
									"case":	376,
									"scores":	[-4.013036542015743]
								}, {
									"case":	377,
									"scores":	[-4.013036542015743]
								}, {
									"case":	378,
									"scores":	[-4.013036542015743]
								}, {
									"case":	379,
									"scores":	[-4.013036542015743]
								}, {
									"case":	380,
									"scores":	[-4.013036542015743]
								}, {
									"case":	381,
									"scores":	[-4.013036542015743]
								}, {
									"case":	382,
									"scores":	[-4.013036542015743]
								}, {
									"case":	383,
									"scores":	[-4.013036542015743]
								}, {
									"case":	384,
									"scores":	[-4.013036542015743]
								}, {
									"case":	385,
									"scores":	[-4.013036542015743]
								}, {
									"case":	386,
									"scores":	[-4.013036542015743]
								}, {
									"case":	387,
									"scores":	[-4.013036542015743]
								}, {
									"case":	388,
									"scores":	[-4.013036542015743]
								}, {
									"case":	389,
									"scores":	[-4.013036542015743]
								}, {
									"case":	390,
									"scores":	[-4.013036542015743]
								}, {
									"case":	391,
									"scores":	[-4.013036542015743]
								}, {
									"case":	392,
									"scores":	[-4.013036542015743]
								}, {
									"case":	393,
									"scores":	[-4.013036542015743]
								}, {
									"case":	394,
									"scores":	[-6.2492827690157435, -7.5575725818157427, -7.5575725818157427, -7.5575725818157427, -7.311533668015743, -6.7172934908157433, -6.7172934908157433, -7.0674903380157428, -7.5224227850157428, -6.8105986680157429, -7.3506296518157423, -7.3135292518157424, -7.3135292518157424, -7.3135292518157424, -7.3135292518157424, -7.881636512015743, -8.0925256290157428, -7.3807015120157429, -8.12767542581574, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -7.881636512015743, -8.0925256290157428, -7.881636512015743, -8.0925256290157428, -8.0925256290157428, -7.881636512015743, -8.0925256290157428, -7.3807015120157429, -8.12767542581574, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -8.0925256290157428, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -7.881636512015743, -8.0925256290157428, -7.881636512015743, -8.0925256290157428, -7.881636512015743, -8.0925256290157428, -8.0925256290157428]
								}]
						}, {
							"switch":	24,
							"types":	[[5], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4], []],
							"begin_line":	3754,
							"begin_column":	3,
							"end_line":	3760,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) || __is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n", "if (zend_get_parameters(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n", "if (zend_get_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) && !__is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6961820374281462, -5.4178037374281462, -5.4178037374281462, -5.4178037374281462, -4.6599156374281456, -5.4767744774281457, -5.4767744774281457, -5.1152665374281456, -5.1291756374281459, -4.337904607428146, -6.1675054374281455, -5.8731546374281454, -5.8731546374281454, -5.8731546374281454, -5.8731546374281454, -5.640111347428145, -6.1093713474281444, -5.3181003174281454, -6.3979994474281447, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -5.640111347428145, -6.1093713474281444, -5.640111347428145, -6.1093713474281444, -6.1093713474281444, -5.640111347428145, -6.1093713474281444, -5.3181003174281454, -6.3979994474281447, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -6.1093713474281444, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -5.640111347428145, -6.1093713474281444, -5.640111347428145, -6.1093713474281444, -5.640111347428145, -6.1093713474281444, -6.1093713474281444]
								}, {
									"case":	2,
									"scores":	[-5.2898611394281456, -6.0114828394281457, -6.0114828394281457, -6.0114828394281457, -5.2535947394281459, -6.070453579428146, -6.070453579428146, -5.708945639428145, -5.7228547394281462, -4.9315837094281463, -6.7611845394281449, -6.4668337394281448, -6.4668337394281448, -6.4668337394281448, -6.4668337394281448, -6.2337904494281453, -6.7030504494281455, -5.9117794194281448, -6.991678549428145, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -5.9117794194281448, -6.991678549428145, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-5.2898611394281456, -6.0114828394281457, -6.0114828394281457, -6.0114828394281457, -5.2535947394281459, -6.070453579428146, -6.070453579428146, -5.708945639428145, -5.7228547394281462, -4.9315837094281463, -6.7611845394281449, -6.4668337394281448, -6.4668337394281448, -6.4668337394281448, -6.4668337394281448, -6.2337904494281453, -6.7030504494281455, -5.9117794194281448, -6.991678549428145, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -5.9117794194281448, -6.991678549428145, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.7030504494281455, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.2337904494281453, -6.7030504494281455, -6.7030504494281455]
								}]
						}, {
							"switch":	28,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3754,
							"begin_column":	3,
							"end_line":	3760,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n", "if (!__is_neg(\"\", \"L3754\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)) && (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1)) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n        php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n        zend_restore_error_handling(&error_handling);\n        return;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4716273120157428, -6.1932490120157428, -6.1932490120157428, -6.1932490120157428, -5.4353609120157431, -6.2522197520157432, -6.2522197520157432, -5.8907118120157431, -5.9046209120157434, -5.1133498820157435, -6.942950712015743, -6.6485999120157429, -6.6485999120157429, -6.6485999120157429, -6.6485999120157429, -6.4155566220157425, -6.8848166220157427, -6.0935455920157429, -7.1734447220157431, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.4155566220157425, -6.8848166220157427, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427, -6.4155566220157425, -6.8848166220157427, -6.0935455920157429, -7.1734447220157431, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.8848166220157427, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.4155566220157425, -6.8848166220157427, -6.4155566220157425, -6.8848166220157427, -6.4155566220157425, -6.8848166220157427, -6.8848166220157427]
								}, {
									"case":	2,
									"scores":	[-6.8958939760157421, -7.617515676015743, -7.617515676015743, -7.617515676015743, -6.8596275760157432, -7.6764864160157424, -7.6764864160157424, -7.3149784760157424, -7.3288875760157435, -6.5376165460157427, -8.36721737601574, -8.07286657601574, -8.07286657601574, -8.07286657601574, -8.07286657601574, -7.8398232860157435, -8.30908328601574, -7.517812256015743, -8.59771138601574, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -8.30908328601574, -8.30908328601574, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -7.8398232860157435, -8.30908328601574, -7.8398232860157435, -8.30908328601574, -8.30908328601574, -7.8398232860157435, -8.30908328601574, -7.517812256015743, -8.59771138601574, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -8.30908328601574, -8.30908328601574, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -8.30908328601574, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -7.8398232860157435, -8.30908328601574, -7.8398232860157435, -8.30908328601574, -7.8398232860157435, -8.30908328601574, -8.30908328601574]
								}]
						}]
				}, {
					"line":	3752,
					"switches":	[{
							"switch":	21,
							"types":	[[], [], [], [], [394], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [], [], [], [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], [], [], [], [], [], []],
							"begin_line":	3753,
							"begin_column":	0,
							"end_line":	3753,
							"end_column":	0,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	2,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	3,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	4,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	5,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	6,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	7,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	8,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	9,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	10,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	11,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	12,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	13,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	14,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	15,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	16,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	17,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	18,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	19,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	20,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	21,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	22,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	23,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	24,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	25,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	26,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	27,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	28,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	29,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	30,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	31,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	32,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	33,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	34,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	35,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	36,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	37,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	38,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	39,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	40,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	41,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	42,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	43,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	44,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	45,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	46,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	47,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	48,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	49,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	50,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	51,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	52,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	53,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	54,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	55,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	56,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	57,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	58,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	59,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	60,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	61,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	62,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	63,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	64,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	65,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	66,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	67,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	68,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	69,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	70,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	71,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	72,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	73,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	74,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	75,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	76,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	77,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	78,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	79,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	80,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	81,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	82,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	83,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	84,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	85,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	86,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	87,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	88,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	89,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	90,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	91,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	92,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	93,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	94,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	95,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	96,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	97,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	98,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	99,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	100,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	101,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	102,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	103,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	104,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	105,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	106,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	107,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	108,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	109,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	110,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	111,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	112,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	113,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	114,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	115,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	116,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	117,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	118,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	119,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	120,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	121,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	122,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	123,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	124,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	125,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	126,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	127,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	128,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	129,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	130,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	131,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	132,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	133,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	134,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	135,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	136,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	137,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	138,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	139,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	140,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	141,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	142,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	143,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	144,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	145,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	146,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	147,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	148,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	149,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	150,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	151,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	152,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	153,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	154,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	155,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	156,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	157,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	158,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	159,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	160,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	161,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	162,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	163,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	164,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	165,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	166,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	167,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	168,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	169,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	170,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	171,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	172,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	173,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	174,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	175,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	176,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	177,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	178,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	179,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	180,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	181,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	182,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	183,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	184,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	185,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	186,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	187,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	188,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	189,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	190,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	191,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	192,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	193,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	194,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	195,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	196,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	197,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	198,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	199,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	200,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	201,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	202,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	203,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	204,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	205,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	206,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	207,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	208,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	209,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	210,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	211,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	212,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	213,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	214,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	215,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	216,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	217,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	218,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	219,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	220,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	221,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	222,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	223,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	224,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	225,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	226,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	227,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	228,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	229,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	230,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	231,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	232,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	233,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	234,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	235,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	236,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	237,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	238,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	239,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	240,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	241,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	242,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	243,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	244,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	245,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	246,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	247,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	248,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	249,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	250,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	251,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	252,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	253,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	254,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	255,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	256,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	257,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	258,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	259,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	260,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	261,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	262,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	263,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	264,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	265,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	266,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	267,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	268,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	269,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	270,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	271,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	272,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	273,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	274,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	275,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	276,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	277,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	278,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	279,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	280,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	281,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	282,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	283,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	284,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	285,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	286,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	287,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	288,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	289,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	290,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	291,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	292,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	293,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	294,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	295,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	296,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	297,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	298,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	299,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	300,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	301,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	302,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	303,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	304,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	305,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	306,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	307,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	308,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	309,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	310,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	311,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	312,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	313,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	314,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	315,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	316,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	317,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	318,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	319,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	320,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	321,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	322,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	323,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	324,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	325,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	326,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	327,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	328,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	329,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	330,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	331,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	332,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	333,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	334,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	335,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	336,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	337,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	338,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	339,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	340,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	341,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	342,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	343,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	344,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	345,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	346,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	347,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	348,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	349,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	350,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	351,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	352,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	353,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	354,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	355,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	356,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	357,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	358,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	359,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	360,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	361,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	362,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	363,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	364,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	365,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	366,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	367,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	368,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	369,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	370,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	371,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	372,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	373,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	374,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	375,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	376,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	377,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	378,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	379,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	380,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	381,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	382,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	383,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	384,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	385,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	386,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	387,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	388,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	389,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	390,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	391,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	392,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	393,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	394,
									"scores":	[-7.1273824763332625, -7.7605859421332619, -7.7605859421332619, -9.0737713753332638, -8.18963337533326, -7.5953931981332623, -7.5953931981332623, -7.7605859421332619, -8.26847314533326, -7.55664902833326, -7.8313750121332628, -9.304465736033265, -9.304465736033265, -9.304465736033265, -9.1724163890332662, -8.7597362193332629, -8.97062533633326, -8.2588012193332627, -9.00577513313326, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.7597362193332629, -8.97062533633326, -8.7597362193332629, -8.97062533633326, -8.97062533633326, -8.7597362193332629, -8.97062533633326, -8.2588012193332627, -9.00577513313326, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.97062533633326, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.7597362193332629, -8.97062533633326, -8.7597362193332629, -8.97062533633326, -8.7597362193332629, -8.97062533633326, -8.97062533633326]
								}]
						}, {
							"switch":	22,
							"types":	[[5], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4], []],
							"begin_line":	3753,
							"begin_column":	2,
							"end_line":	3761,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1) || __is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n", "if (zend_get_parameters(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n", "if (zend_get_parameters_ex(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n", "if ((zend_parse_parameters_ex(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1) && !__is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences))) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.6447971993281456, -5.2808199583281468, -5.2808199583281468, -6.0535822093281446, -4.6085307993281468, -5.425389639328146, -5.425389639328146, -5.2808199583281468, -5.1109663083281465, -4.3196952783281466, -4.8221773683281439, -6.2571547882281457, -6.3902122672281436, -6.3902122672281436, -6.2586604662281449, -5.5887265093281453, -6.0579865093281455, -5.2667154793281457, -6.3466146093281459, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -5.5887265093281453, -6.0579865093281455, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455, -5.5887265093281453, -6.0579865093281455, -5.2667154793281457, -6.3466146093281459, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -6.0579865093281455, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -5.5887265093281453, -6.0579865093281455, -5.5887265093281453, -6.0579865093281455, -5.5887265093281453, -6.0579865093281455, -6.0579865093281455]
								}, {
									"case":	2,
									"scores":	[-5.6411941626281461, -6.2772169216281455, -6.2772169216281455, -7.0499791726281451, -5.6049277626281455, -6.4217866026281456, -6.4217866026281456, -6.2772169216281455, -6.1073632716281452, -5.3160922416281453, -5.8185743316281462, -7.2535517515281462, -7.3866092305281459, -7.3866092305281459, -7.2550574295281454, -6.5851234726281458, -7.054383472628146, -6.2631124426281453, -7.3430115726281455, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.2631124426281453, -7.3430115726281455, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -7.054383472628146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-5.6411941626281461, -6.2772169216281455, -6.2772169216281455, -7.0499791726281451, -5.6049277626281455, -6.4217866026281456, -6.4217866026281456, -6.2772169216281455, -6.1073632716281452, -5.3160922416281453, -5.8185743316281462, -7.2535517515281462, -7.3866092305281459, -7.3866092305281459, -7.2550574295281454, -6.5851234726281458, -7.054383472628146, -6.2631124426281453, -7.3430115726281455, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.2631124426281453, -7.3430115726281455, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -7.054383472628146, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -6.5851234726281458, -7.054383472628146, -7.054383472628146]
								}]
						}, {
							"switch":	29,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3753,
							"begin_column":	2,
							"end_line":	3761,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)))\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n            if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n                php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n                zend_restore_error_handling(&error_handling);\n                return;\n            }\n        }\n    }\n", "if (!__is_neg(\"\", \"L3753\", 85, &(ht), sizeof (ht), &(start), sizeof (start), &(interval), sizeof (interval), &(recurrences), sizeof (recurrences), &(options), sizeof (options), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(end), sizeof (end), &(isostr), sizeof (isostr), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(date_ce_date->type), sizeof (date_ce_date->type), &(date_ce_date->name), sizeof (date_ce_date->name), &(date_ce_date->name_length), sizeof (date_ce_date->name_length), &(date_ce_date->parent), sizeof (date_ce_date->parent), &(date_ce_date->refcount), sizeof (date_ce_date->refcount), &(date_ce_date->ce_flags), sizeof (date_ce_date->ce_flags), &(date_ce_date->default_properties_table), sizeof (date_ce_date->default_properties_table), &(date_ce_date->default_static_members_table), sizeof (date_ce_date->default_static_members_table), &(date_ce_date->static_members_table), sizeof (date_ce_date->static_members_table), &(date_ce_date->default_properties_count), sizeof (date_ce_date->default_properties_count), &(date_ce_date->default_static_members_count), sizeof (date_ce_date->default_static_members_count), &(date_ce_date->constructor), sizeof (date_ce_date->constructor), &(date_ce_date->destructor), sizeof (date_ce_date->destructor), &(date_ce_date->clone), sizeof (date_ce_date->clone), &(date_ce_date->__get), sizeof (date_ce_date->__get), &(date_ce_date->__set), sizeof (date_ce_date->__set), &(date_ce_date->__unset), sizeof (date_ce_date->__unset), &(date_ce_date->__isset), sizeof (date_ce_date->__isset), &(date_ce_date->__call), sizeof (date_ce_date->__call), &(date_ce_date->__callstatic), sizeof (date_ce_date->__callstatic), &(date_ce_date->__tostring), sizeof (date_ce_date->__tostring), &(date_ce_date->serialize_func), sizeof (date_ce_date->serialize_func), &(date_ce_date->unserialize_func), sizeof (date_ce_date->unserialize_func), &(date_ce_date->create_object), sizeof (date_ce_date->create_object), &(date_ce_date->get_iterator), sizeof (date_ce_date->get_iterator), &(date_ce_date->interface_gets_implemented), sizeof (date_ce_date->interface_gets_implemented), &(date_ce_date->get_static_method), sizeof (date_ce_date->get_static_method), &(date_ce_date->serialize), sizeof (date_ce_date->serialize), &(date_ce_date->unserialize), sizeof (date_ce_date->unserialize), &(date_ce_date->interfaces), sizeof (date_ce_date->interfaces), &(date_ce_date->num_interfaces), sizeof (date_ce_date->num_interfaces), &(date_ce_date->traits), sizeof (date_ce_date->traits), &(date_ce_date->num_traits), sizeof (date_ce_date->num_traits), &(date_ce_date->trait_aliases), sizeof (date_ce_date->trait_aliases), &(date_ce_date->trait_precedences), sizeof (date_ce_date->trait_precedences), &(date_ce_interval->type), sizeof (date_ce_interval->type), &(date_ce_interval->name), sizeof (date_ce_interval->name), &(date_ce_interval->name_length), sizeof (date_ce_interval->name_length), &(date_ce_interval->parent), sizeof (date_ce_interval->parent), &(date_ce_interval->refcount), sizeof (date_ce_interval->refcount), &(date_ce_interval->ce_flags), sizeof (date_ce_interval->ce_flags), &(date_ce_interval->default_properties_table), sizeof (date_ce_interval->default_properties_table), &(date_ce_interval->default_static_members_table), sizeof (date_ce_interval->default_static_members_table), &(date_ce_interval->static_members_table), sizeof (date_ce_interval->static_members_table), &(date_ce_interval->default_properties_count), sizeof (date_ce_interval->default_properties_count), &(date_ce_interval->default_static_members_count), sizeof (date_ce_interval->default_static_members_count), &(date_ce_interval->constructor), sizeof (date_ce_interval->constructor), &(date_ce_interval->destructor), sizeof (date_ce_interval->destructor), &(date_ce_interval->clone), sizeof (date_ce_interval->clone), &(date_ce_interval->__get), sizeof (date_ce_interval->__get), &(date_ce_interval->__set), sizeof (date_ce_interval->__set), &(date_ce_interval->__unset), sizeof (date_ce_interval->__unset), &(date_ce_interval->__isset), sizeof (date_ce_interval->__isset), &(date_ce_interval->__call), sizeof (date_ce_interval->__call), &(date_ce_interval->__callstatic), sizeof (date_ce_interval->__callstatic), &(date_ce_interval->__tostring), sizeof (date_ce_interval->__tostring), &(date_ce_interval->serialize_func), sizeof (date_ce_interval->serialize_func), &(date_ce_interval->unserialize_func), sizeof (date_ce_interval->unserialize_func), &(date_ce_interval->create_object), sizeof (date_ce_interval->create_object), &(date_ce_interval->get_iterator), sizeof (date_ce_interval->get_iterator), &(date_ce_interval->interface_gets_implemented), sizeof (date_ce_interval->interface_gets_implemented), &(date_ce_interval->get_static_method), sizeof (date_ce_interval->get_static_method), &(date_ce_interval->serialize), sizeof (date_ce_interval->serialize), &(date_ce_interval->unserialize), sizeof (date_ce_interval->unserialize), &(date_ce_interval->interfaces), sizeof (date_ce_interval->interfaces), &(date_ce_interval->num_interfaces), sizeof (date_ce_interval->num_interfaces), &(date_ce_interval->traits), sizeof (date_ce_interval->traits), &(date_ce_interval->num_traits), sizeof (date_ce_interval->num_traits), &(date_ce_interval->trait_aliases), sizeof (date_ce_interval->trait_aliases), &(date_ce_interval->trait_precedences), sizeof (date_ce_interval->trait_precedences)) && (zend_parse_parameters_ex(1 << 1, (ht), \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == -1)) {\n    if (zend_parse_parameters_ex(1 << 1, (ht), \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == -1) {\n        if (zend_parse_parameters_ex(1 << 1, (ht), \"s|l\", &isostr, &isostr_len, &options) == -1) {\n            php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n            zend_restore_error_handling(&error_handling);\n            return;\n        }\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.2410934093332626, -5.8771161683332629, -5.8771161683332629, -6.6498784193332625, -5.2048270093332629, -6.021685849333263, -6.021685849333263, -5.8771161683332629, -5.7072625183332626, -4.9159914883332627, -5.4184735783332627, -6.8534509982332619, -6.9865084772332633, -6.9865084772332633, -6.8549566762332628, -6.1850227193332623, -6.6542827193332617, -5.8630116893332627, -6.942910819333262, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.1850227193332623, -6.6542827193332617, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617, -6.1850227193332623, -6.6542827193332617, -5.8630116893332627, -6.942910819333262, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.6542827193332617, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.1850227193332623, -6.6542827193332617, -6.1850227193332623, -6.6542827193332617, -6.1850227193332623, -6.6542827193332617, -6.6542827193332617]
								}, {
									"case":	2,
									"scores":	[-6.9168429735332619, -7.5528657325332622, -7.5528657325332622, -8.3256279835332627, -6.8805765735332614, -7.6974354135332623, -7.6974354135332623, -7.5528657325332622, -7.3830120825332628, -6.591741052533262, -7.094223142533262, -8.52920056243326, -8.66225804143326, -8.66225804143326, -8.53070624043326, -7.8607722835332616, -8.33003228353326, -7.53876125353326, -8.61866038353326, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -8.33003228353326, -8.33003228353326, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -7.8607722835332616, -8.33003228353326, -7.8607722835332616, -8.33003228353326, -8.33003228353326, -7.8607722835332616, -8.33003228353326, -7.53876125353326, -8.61866038353326, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -8.33003228353326, -8.33003228353326, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -8.33003228353326, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -7.8607722835332616, -8.33003228353326, -7.8607722835332616, -8.33003228353326, -7.8607722835332616, -8.33003228353326, -8.33003228353326]
								}]
						}]
				}, {
					"line":	3762,
					"switches":	[{
							"switch":	30,
							"types":	[[], [], [], [], [395], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [], [], [], [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], [], [], [], [], [], []],
							"begin_line":	3763,
							"begin_column":	0,
							"end_line":	3763,
							"end_column":	0,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj, 0, sizeof (*(dpobj)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3763\", 22, &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(dpobj->current), sizeof (dpobj->current), &(isostr_len), sizeof (isostr_len), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	2,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	3,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	4,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	5,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	6,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	7,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	8,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	9,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	10,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	11,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	12,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	13,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	14,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	15,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	16,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	17,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	18,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	19,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	20,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	21,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	22,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	23,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	24,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	25,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	26,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	27,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	28,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	29,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	30,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	31,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	32,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	33,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	34,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	35,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	36,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	37,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	38,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	39,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	40,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	41,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	42,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	43,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	44,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	45,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	46,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	47,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	48,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	49,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	50,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	51,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	52,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	53,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	54,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	55,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	56,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	57,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	58,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	59,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	60,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	61,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	62,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	63,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	64,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	65,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	66,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	67,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	68,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	69,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	70,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	71,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	72,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	73,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	74,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	75,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	76,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	77,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	78,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	79,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	80,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	81,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	82,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	83,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	84,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	85,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	86,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	87,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	88,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	89,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	90,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	91,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	92,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	93,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	94,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	95,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	96,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	97,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	98,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	99,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	100,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	101,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	102,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	103,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	104,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	105,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	106,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	107,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	108,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	109,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	110,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	111,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	112,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	113,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	114,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	115,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	116,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	117,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	118,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	119,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	120,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	121,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	122,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	123,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	124,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	125,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	126,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	127,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	128,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	129,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	130,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	131,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	132,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	133,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	134,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	135,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	136,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	137,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	138,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	139,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	140,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	141,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	142,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	143,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	144,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	145,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	146,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	147,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	148,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	149,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	150,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	151,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	152,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	153,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	154,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	155,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	156,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	157,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	158,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	159,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	160,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	161,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	162,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	163,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	164,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	165,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	166,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	167,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	168,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	169,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	170,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	171,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	172,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	173,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	174,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	175,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	176,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	177,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	178,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	179,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	180,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	181,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	182,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	183,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	184,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	185,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	186,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	187,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	188,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	189,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	190,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	191,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	192,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	193,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	194,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	195,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	196,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	197,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	198,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	199,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	200,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	201,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	202,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	203,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	204,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	205,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	206,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	207,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	208,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	209,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	210,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	211,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	212,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	213,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	214,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	215,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	216,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	217,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	218,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	219,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	220,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	221,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	222,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	223,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	224,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	225,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	226,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	227,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	228,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	229,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	230,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	231,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	232,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	233,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	234,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	235,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	236,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	237,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	238,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	239,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	240,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	241,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	242,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	243,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	244,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	245,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	246,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	247,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	248,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	249,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	250,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	251,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	252,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	253,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	254,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	255,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	256,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	257,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	258,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	259,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	260,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	261,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	262,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	263,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	264,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	265,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	266,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	267,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	268,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	269,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	270,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	271,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	272,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	273,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	274,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	275,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	276,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	277,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	278,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	279,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	280,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	281,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	282,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	283,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	284,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	285,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	286,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	287,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	288,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	289,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	290,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	291,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	292,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	293,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	294,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	295,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	296,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	297,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	298,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	299,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	300,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	301,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	302,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	303,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	304,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	305,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	306,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	307,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	308,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	309,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	310,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	311,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	312,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	313,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	314,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	315,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	316,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	317,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	318,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	319,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	320,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	321,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	322,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	323,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	324,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	325,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	326,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	327,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	328,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	329,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	330,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	331,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	332,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	333,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	334,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	335,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	336,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	337,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	338,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	339,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	340,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	341,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	342,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	343,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	344,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	345,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	346,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	347,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	348,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	349,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	350,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	351,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	352,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	353,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	354,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	355,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	356,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	357,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	358,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	359,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	360,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	361,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	362,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	363,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	364,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	365,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	366,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	367,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	368,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	369,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	370,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	371,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	372,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	373,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	374,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	375,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	376,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	377,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	378,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	379,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	380,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	381,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	382,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	383,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	384,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	385,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	386,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	387,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	388,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	389,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	390,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	391,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	392,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	393,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	394,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	395,
									"scores":	[-5.1460582681807043, -7.9349423350807022, -8.4634815311807046, -6.737758216380703, -8.496952573380705, -7.4495823333807039, -9.7353741941807037, -9.7353741941807037, -9.8674235411807043, -7.4919094033807045, -6.5499735633807044, -6.9416951301807046, -6.9416951301807046, -6.9416951301807046, -7.9599201251807035, -7.9599201251807035, -8.7935706140807035, -8.7935706140807035, -8.6615212670807047, -8.2174426173807049, -8.2488410973807049, -8.2488410973807049]
								}]
						}, {
							"switch":	31,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3763,
							"begin_column":	2,
							"end_line":	3763,
							"end_column":	58,
							"patch_codes":	["if (!__is_neg(\"\", \"L3763\", 22, &(this_ptr), sizeof (this_ptr), &(dpobj), sizeof (dpobj), &(dpobj->current), sizeof (dpobj->current), &(isostr_len), sizeof (isostr_len), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    dpobj = zend_object_store_get_object((this_ptr));\n", "{\n}\n", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((&clone)))", "dpobj = zend_object_store_get_object(((&dateobj)))", "dpobj = zend_object_store_get_object(((&dpobj)))", "dpobj = zend_object_store_get_object(((&end)))", "dpobj = zend_object_store_get_object(((&error_handling)))", "dpobj = zend_object_store_get_object(((&ht)))", "dpobj = zend_object_store_get_object(((&interval)))", "dpobj = zend_object_store_get_object(((&intobj)))", "dpobj = zend_object_store_get_object(((&isostr)))", "dpobj = zend_object_store_get_object(((&isostr_len)))", "dpobj = zend_object_store_get_object(((&options)))", "dpobj = zend_object_store_get_object(((&recurrences)))", "dpobj = zend_object_store_get_object(((&return_value)))", "dpobj = zend_object_store_get_object(((&return_value_ptr)))", "dpobj = zend_object_store_get_object(((&return_value_used)))", "dpobj = zend_object_store_get_object(((&start)))", "dpobj = zend_object_store_get_object(((&this_ptr)))", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3998853973807046, -5.8709620062807044, -5.5725596383807048, -4.0711824903807043, -5.8050694213807041, -4.8624535203807042, -7.0191167263807035, -7.0191167263807035, -7.150668527380704, -4.9393244333807047, -4.2412435613807045, -5.0323071703807045, -5.0323071703807045, -5.0323071703807045, -5.7199168733807042, -5.7199168733807042, -5.8823213552807045, -5.8823213552807045, -5.7507695542807049, -4.9477290173807038, -5.0808355973807044, -5.0808355973807044]
								}, {
									"case":	2,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	3,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	4,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	5,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	6,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	7,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	8,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	9,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	10,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	11,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	12,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	13,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	14,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	15,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	16,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	17,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	18,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	19,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	20,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	21,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	22,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	23,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	24,
									"scores":	[-3.9726311273807045]
								}, {
									"case":	25,
									"scores":	[-3.9726311273807045]
								}]
						}]
				}, {
					"line":	3763,
					"switches":	[{
							"switch":	32,
							"types":	[[], [], [], [], [395], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [], [], [], [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], [], [], [], [], [], []],
							"begin_line":	3764,
							"begin_column":	0,
							"end_line":	3764,
							"end_column":	0,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj, 0, sizeof (*(dpobj)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3764\", 22, &(dpobj), sizeof (dpobj), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(isostr_len), sizeof (isostr_len), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.952428420063185]
								}, {
									"case":	2,
									"scores":	[-3.952428420063185]
								}, {
									"case":	3,
									"scores":	[-3.952428420063185]
								}, {
									"case":	4,
									"scores":	[-3.952428420063185]
								}, {
									"case":	5,
									"scores":	[-3.952428420063185]
								}, {
									"case":	6,
									"scores":	[-3.952428420063185]
								}, {
									"case":	7,
									"scores":	[-3.952428420063185]
								}, {
									"case":	8,
									"scores":	[-3.952428420063185]
								}, {
									"case":	9,
									"scores":	[-3.952428420063185]
								}, {
									"case":	10,
									"scores":	[-3.952428420063185]
								}, {
									"case":	11,
									"scores":	[-3.952428420063185]
								}, {
									"case":	12,
									"scores":	[-3.952428420063185]
								}, {
									"case":	13,
									"scores":	[-3.952428420063185]
								}, {
									"case":	14,
									"scores":	[-3.952428420063185]
								}, {
									"case":	15,
									"scores":	[-3.952428420063185]
								}, {
									"case":	16,
									"scores":	[-3.952428420063185]
								}, {
									"case":	17,
									"scores":	[-3.952428420063185]
								}, {
									"case":	18,
									"scores":	[-3.952428420063185]
								}, {
									"case":	19,
									"scores":	[-3.952428420063185]
								}, {
									"case":	20,
									"scores":	[-3.952428420063185]
								}, {
									"case":	21,
									"scores":	[-3.952428420063185]
								}, {
									"case":	22,
									"scores":	[-3.952428420063185]
								}, {
									"case":	23,
									"scores":	[-3.952428420063185]
								}, {
									"case":	24,
									"scores":	[-3.952428420063185]
								}, {
									"case":	25,
									"scores":	[-3.952428420063185]
								}, {
									"case":	26,
									"scores":	[-3.952428420063185]
								}, {
									"case":	27,
									"scores":	[-3.952428420063185]
								}, {
									"case":	28,
									"scores":	[-3.952428420063185]
								}, {
									"case":	29,
									"scores":	[-3.952428420063185]
								}, {
									"case":	30,
									"scores":	[-3.952428420063185]
								}, {
									"case":	31,
									"scores":	[-3.952428420063185]
								}, {
									"case":	32,
									"scores":	[-3.952428420063185]
								}, {
									"case":	33,
									"scores":	[-3.952428420063185]
								}, {
									"case":	34,
									"scores":	[-3.952428420063185]
								}, {
									"case":	35,
									"scores":	[-3.952428420063185]
								}, {
									"case":	36,
									"scores":	[-3.952428420063185]
								}, {
									"case":	37,
									"scores":	[-3.952428420063185]
								}, {
									"case":	38,
									"scores":	[-3.952428420063185]
								}, {
									"case":	39,
									"scores":	[-3.952428420063185]
								}, {
									"case":	40,
									"scores":	[-3.952428420063185]
								}, {
									"case":	41,
									"scores":	[-3.952428420063185]
								}, {
									"case":	42,
									"scores":	[-3.952428420063185]
								}, {
									"case":	43,
									"scores":	[-3.952428420063185]
								}, {
									"case":	44,
									"scores":	[-3.952428420063185]
								}, {
									"case":	45,
									"scores":	[-3.952428420063185]
								}, {
									"case":	46,
									"scores":	[-3.952428420063185]
								}, {
									"case":	47,
									"scores":	[-3.952428420063185]
								}, {
									"case":	48,
									"scores":	[-3.952428420063185]
								}, {
									"case":	49,
									"scores":	[-3.952428420063185]
								}, {
									"case":	50,
									"scores":	[-3.952428420063185]
								}, {
									"case":	51,
									"scores":	[-3.952428420063185]
								}, {
									"case":	52,
									"scores":	[-3.952428420063185]
								}, {
									"case":	53,
									"scores":	[-3.952428420063185]
								}, {
									"case":	54,
									"scores":	[-3.952428420063185]
								}, {
									"case":	55,
									"scores":	[-3.952428420063185]
								}, {
									"case":	56,
									"scores":	[-3.952428420063185]
								}, {
									"case":	57,
									"scores":	[-3.952428420063185]
								}, {
									"case":	58,
									"scores":	[-3.952428420063185]
								}, {
									"case":	59,
									"scores":	[-3.952428420063185]
								}, {
									"case":	60,
									"scores":	[-3.952428420063185]
								}, {
									"case":	61,
									"scores":	[-3.952428420063185]
								}, {
									"case":	62,
									"scores":	[-3.952428420063185]
								}, {
									"case":	63,
									"scores":	[-3.952428420063185]
								}, {
									"case":	64,
									"scores":	[-3.952428420063185]
								}, {
									"case":	65,
									"scores":	[-3.952428420063185]
								}, {
									"case":	66,
									"scores":	[-3.952428420063185]
								}, {
									"case":	67,
									"scores":	[-3.952428420063185]
								}, {
									"case":	68,
									"scores":	[-3.952428420063185]
								}, {
									"case":	69,
									"scores":	[-3.952428420063185]
								}, {
									"case":	70,
									"scores":	[-3.952428420063185]
								}, {
									"case":	71,
									"scores":	[-3.952428420063185]
								}, {
									"case":	72,
									"scores":	[-3.952428420063185]
								}, {
									"case":	73,
									"scores":	[-3.952428420063185]
								}, {
									"case":	74,
									"scores":	[-3.952428420063185]
								}, {
									"case":	75,
									"scores":	[-3.952428420063185]
								}, {
									"case":	76,
									"scores":	[-3.952428420063185]
								}, {
									"case":	77,
									"scores":	[-3.952428420063185]
								}, {
									"case":	78,
									"scores":	[-3.952428420063185]
								}, {
									"case":	79,
									"scores":	[-3.952428420063185]
								}, {
									"case":	80,
									"scores":	[-3.952428420063185]
								}, {
									"case":	81,
									"scores":	[-3.952428420063185]
								}, {
									"case":	82,
									"scores":	[-3.952428420063185]
								}, {
									"case":	83,
									"scores":	[-3.952428420063185]
								}, {
									"case":	84,
									"scores":	[-3.952428420063185]
								}, {
									"case":	85,
									"scores":	[-3.952428420063185]
								}, {
									"case":	86,
									"scores":	[-3.952428420063185]
								}, {
									"case":	87,
									"scores":	[-3.952428420063185]
								}, {
									"case":	88,
									"scores":	[-3.952428420063185]
								}, {
									"case":	89,
									"scores":	[-3.952428420063185]
								}, {
									"case":	90,
									"scores":	[-3.952428420063185]
								}, {
									"case":	91,
									"scores":	[-3.952428420063185]
								}, {
									"case":	92,
									"scores":	[-3.952428420063185]
								}, {
									"case":	93,
									"scores":	[-3.952428420063185]
								}, {
									"case":	94,
									"scores":	[-3.952428420063185]
								}, {
									"case":	95,
									"scores":	[-3.952428420063185]
								}, {
									"case":	96,
									"scores":	[-3.952428420063185]
								}, {
									"case":	97,
									"scores":	[-3.952428420063185]
								}, {
									"case":	98,
									"scores":	[-3.952428420063185]
								}, {
									"case":	99,
									"scores":	[-3.952428420063185]
								}, {
									"case":	100,
									"scores":	[-3.952428420063185]
								}, {
									"case":	101,
									"scores":	[-3.952428420063185]
								}, {
									"case":	102,
									"scores":	[-3.952428420063185]
								}, {
									"case":	103,
									"scores":	[-3.952428420063185]
								}, {
									"case":	104,
									"scores":	[-3.952428420063185]
								}, {
									"case":	105,
									"scores":	[-3.952428420063185]
								}, {
									"case":	106,
									"scores":	[-3.952428420063185]
								}, {
									"case":	107,
									"scores":	[-3.952428420063185]
								}, {
									"case":	108,
									"scores":	[-3.952428420063185]
								}, {
									"case":	109,
									"scores":	[-3.952428420063185]
								}, {
									"case":	110,
									"scores":	[-3.952428420063185]
								}, {
									"case":	111,
									"scores":	[-3.952428420063185]
								}, {
									"case":	112,
									"scores":	[-3.952428420063185]
								}, {
									"case":	113,
									"scores":	[-3.952428420063185]
								}, {
									"case":	114,
									"scores":	[-3.952428420063185]
								}, {
									"case":	115,
									"scores":	[-3.952428420063185]
								}, {
									"case":	116,
									"scores":	[-3.952428420063185]
								}, {
									"case":	117,
									"scores":	[-3.952428420063185]
								}, {
									"case":	118,
									"scores":	[-3.952428420063185]
								}, {
									"case":	119,
									"scores":	[-3.952428420063185]
								}, {
									"case":	120,
									"scores":	[-3.952428420063185]
								}, {
									"case":	121,
									"scores":	[-3.952428420063185]
								}, {
									"case":	122,
									"scores":	[-3.952428420063185]
								}, {
									"case":	123,
									"scores":	[-3.952428420063185]
								}, {
									"case":	124,
									"scores":	[-3.952428420063185]
								}, {
									"case":	125,
									"scores":	[-3.952428420063185]
								}, {
									"case":	126,
									"scores":	[-3.952428420063185]
								}, {
									"case":	127,
									"scores":	[-3.952428420063185]
								}, {
									"case":	128,
									"scores":	[-3.952428420063185]
								}, {
									"case":	129,
									"scores":	[-3.952428420063185]
								}, {
									"case":	130,
									"scores":	[-3.952428420063185]
								}, {
									"case":	131,
									"scores":	[-3.952428420063185]
								}, {
									"case":	132,
									"scores":	[-3.952428420063185]
								}, {
									"case":	133,
									"scores":	[-3.952428420063185]
								}, {
									"case":	134,
									"scores":	[-3.952428420063185]
								}, {
									"case":	135,
									"scores":	[-3.952428420063185]
								}, {
									"case":	136,
									"scores":	[-3.952428420063185]
								}, {
									"case":	137,
									"scores":	[-3.952428420063185]
								}, {
									"case":	138,
									"scores":	[-3.952428420063185]
								}, {
									"case":	139,
									"scores":	[-3.952428420063185]
								}, {
									"case":	140,
									"scores":	[-3.952428420063185]
								}, {
									"case":	141,
									"scores":	[-3.952428420063185]
								}, {
									"case":	142,
									"scores":	[-3.952428420063185]
								}, {
									"case":	143,
									"scores":	[-3.952428420063185]
								}, {
									"case":	144,
									"scores":	[-3.952428420063185]
								}, {
									"case":	145,
									"scores":	[-3.952428420063185]
								}, {
									"case":	146,
									"scores":	[-3.952428420063185]
								}, {
									"case":	147,
									"scores":	[-3.952428420063185]
								}, {
									"case":	148,
									"scores":	[-3.952428420063185]
								}, {
									"case":	149,
									"scores":	[-3.952428420063185]
								}, {
									"case":	150,
									"scores":	[-3.952428420063185]
								}, {
									"case":	151,
									"scores":	[-3.952428420063185]
								}, {
									"case":	152,
									"scores":	[-3.952428420063185]
								}, {
									"case":	153,
									"scores":	[-3.952428420063185]
								}, {
									"case":	154,
									"scores":	[-3.952428420063185]
								}, {
									"case":	155,
									"scores":	[-3.952428420063185]
								}, {
									"case":	156,
									"scores":	[-3.952428420063185]
								}, {
									"case":	157,
									"scores":	[-3.952428420063185]
								}, {
									"case":	158,
									"scores":	[-3.952428420063185]
								}, {
									"case":	159,
									"scores":	[-3.952428420063185]
								}, {
									"case":	160,
									"scores":	[-3.952428420063185]
								}, {
									"case":	161,
									"scores":	[-3.952428420063185]
								}, {
									"case":	162,
									"scores":	[-3.952428420063185]
								}, {
									"case":	163,
									"scores":	[-3.952428420063185]
								}, {
									"case":	164,
									"scores":	[-3.952428420063185]
								}, {
									"case":	165,
									"scores":	[-3.952428420063185]
								}, {
									"case":	166,
									"scores":	[-3.952428420063185]
								}, {
									"case":	167,
									"scores":	[-3.952428420063185]
								}, {
									"case":	168,
									"scores":	[-3.952428420063185]
								}, {
									"case":	169,
									"scores":	[-3.952428420063185]
								}, {
									"case":	170,
									"scores":	[-3.952428420063185]
								}, {
									"case":	171,
									"scores":	[-3.952428420063185]
								}, {
									"case":	172,
									"scores":	[-3.952428420063185]
								}, {
									"case":	173,
									"scores":	[-3.952428420063185]
								}, {
									"case":	174,
									"scores":	[-3.952428420063185]
								}, {
									"case":	175,
									"scores":	[-3.952428420063185]
								}, {
									"case":	176,
									"scores":	[-3.952428420063185]
								}, {
									"case":	177,
									"scores":	[-3.952428420063185]
								}, {
									"case":	178,
									"scores":	[-3.952428420063185]
								}, {
									"case":	179,
									"scores":	[-3.952428420063185]
								}, {
									"case":	180,
									"scores":	[-3.952428420063185]
								}, {
									"case":	181,
									"scores":	[-3.952428420063185]
								}, {
									"case":	182,
									"scores":	[-3.952428420063185]
								}, {
									"case":	183,
									"scores":	[-3.952428420063185]
								}, {
									"case":	184,
									"scores":	[-3.952428420063185]
								}, {
									"case":	185,
									"scores":	[-3.952428420063185]
								}, {
									"case":	186,
									"scores":	[-3.952428420063185]
								}, {
									"case":	187,
									"scores":	[-3.952428420063185]
								}, {
									"case":	188,
									"scores":	[-3.952428420063185]
								}, {
									"case":	189,
									"scores":	[-3.952428420063185]
								}, {
									"case":	190,
									"scores":	[-3.952428420063185]
								}, {
									"case":	191,
									"scores":	[-3.952428420063185]
								}, {
									"case":	192,
									"scores":	[-3.952428420063185]
								}, {
									"case":	193,
									"scores":	[-3.952428420063185]
								}, {
									"case":	194,
									"scores":	[-3.952428420063185]
								}, {
									"case":	195,
									"scores":	[-3.952428420063185]
								}, {
									"case":	196,
									"scores":	[-3.952428420063185]
								}, {
									"case":	197,
									"scores":	[-3.952428420063185]
								}, {
									"case":	198,
									"scores":	[-3.952428420063185]
								}, {
									"case":	199,
									"scores":	[-3.952428420063185]
								}, {
									"case":	200,
									"scores":	[-3.952428420063185]
								}, {
									"case":	201,
									"scores":	[-3.952428420063185]
								}, {
									"case":	202,
									"scores":	[-3.952428420063185]
								}, {
									"case":	203,
									"scores":	[-3.952428420063185]
								}, {
									"case":	204,
									"scores":	[-3.952428420063185]
								}, {
									"case":	205,
									"scores":	[-3.952428420063185]
								}, {
									"case":	206,
									"scores":	[-3.952428420063185]
								}, {
									"case":	207,
									"scores":	[-3.952428420063185]
								}, {
									"case":	208,
									"scores":	[-3.952428420063185]
								}, {
									"case":	209,
									"scores":	[-3.952428420063185]
								}, {
									"case":	210,
									"scores":	[-3.952428420063185]
								}, {
									"case":	211,
									"scores":	[-3.952428420063185]
								}, {
									"case":	212,
									"scores":	[-3.952428420063185]
								}, {
									"case":	213,
									"scores":	[-3.952428420063185]
								}, {
									"case":	214,
									"scores":	[-3.952428420063185]
								}, {
									"case":	215,
									"scores":	[-3.952428420063185]
								}, {
									"case":	216,
									"scores":	[-3.952428420063185]
								}, {
									"case":	217,
									"scores":	[-3.952428420063185]
								}, {
									"case":	218,
									"scores":	[-3.952428420063185]
								}, {
									"case":	219,
									"scores":	[-3.952428420063185]
								}, {
									"case":	220,
									"scores":	[-3.952428420063185]
								}, {
									"case":	221,
									"scores":	[-3.952428420063185]
								}, {
									"case":	222,
									"scores":	[-3.952428420063185]
								}, {
									"case":	223,
									"scores":	[-3.952428420063185]
								}, {
									"case":	224,
									"scores":	[-3.952428420063185]
								}, {
									"case":	225,
									"scores":	[-3.952428420063185]
								}, {
									"case":	226,
									"scores":	[-3.952428420063185]
								}, {
									"case":	227,
									"scores":	[-3.952428420063185]
								}, {
									"case":	228,
									"scores":	[-3.952428420063185]
								}, {
									"case":	229,
									"scores":	[-3.952428420063185]
								}, {
									"case":	230,
									"scores":	[-3.952428420063185]
								}, {
									"case":	231,
									"scores":	[-3.952428420063185]
								}, {
									"case":	232,
									"scores":	[-3.952428420063185]
								}, {
									"case":	233,
									"scores":	[-3.952428420063185]
								}, {
									"case":	234,
									"scores":	[-3.952428420063185]
								}, {
									"case":	235,
									"scores":	[-3.952428420063185]
								}, {
									"case":	236,
									"scores":	[-3.952428420063185]
								}, {
									"case":	237,
									"scores":	[-3.952428420063185]
								}, {
									"case":	238,
									"scores":	[-3.952428420063185]
								}, {
									"case":	239,
									"scores":	[-3.952428420063185]
								}, {
									"case":	240,
									"scores":	[-3.952428420063185]
								}, {
									"case":	241,
									"scores":	[-3.952428420063185]
								}, {
									"case":	242,
									"scores":	[-3.952428420063185]
								}, {
									"case":	243,
									"scores":	[-3.952428420063185]
								}, {
									"case":	244,
									"scores":	[-3.952428420063185]
								}, {
									"case":	245,
									"scores":	[-3.952428420063185]
								}, {
									"case":	246,
									"scores":	[-3.952428420063185]
								}, {
									"case":	247,
									"scores":	[-3.952428420063185]
								}, {
									"case":	248,
									"scores":	[-3.952428420063185]
								}, {
									"case":	249,
									"scores":	[-3.952428420063185]
								}, {
									"case":	250,
									"scores":	[-3.952428420063185]
								}, {
									"case":	251,
									"scores":	[-3.952428420063185]
								}, {
									"case":	252,
									"scores":	[-3.952428420063185]
								}, {
									"case":	253,
									"scores":	[-3.952428420063185]
								}, {
									"case":	254,
									"scores":	[-3.952428420063185]
								}, {
									"case":	255,
									"scores":	[-3.952428420063185]
								}, {
									"case":	256,
									"scores":	[-3.952428420063185]
								}, {
									"case":	257,
									"scores":	[-3.952428420063185]
								}, {
									"case":	258,
									"scores":	[-3.952428420063185]
								}, {
									"case":	259,
									"scores":	[-3.952428420063185]
								}, {
									"case":	260,
									"scores":	[-3.952428420063185]
								}, {
									"case":	261,
									"scores":	[-3.952428420063185]
								}, {
									"case":	262,
									"scores":	[-3.952428420063185]
								}, {
									"case":	263,
									"scores":	[-3.952428420063185]
								}, {
									"case":	264,
									"scores":	[-3.952428420063185]
								}, {
									"case":	265,
									"scores":	[-3.952428420063185]
								}, {
									"case":	266,
									"scores":	[-3.952428420063185]
								}, {
									"case":	267,
									"scores":	[-3.952428420063185]
								}, {
									"case":	268,
									"scores":	[-3.952428420063185]
								}, {
									"case":	269,
									"scores":	[-3.952428420063185]
								}, {
									"case":	270,
									"scores":	[-3.952428420063185]
								}, {
									"case":	271,
									"scores":	[-3.952428420063185]
								}, {
									"case":	272,
									"scores":	[-3.952428420063185]
								}, {
									"case":	273,
									"scores":	[-3.952428420063185]
								}, {
									"case":	274,
									"scores":	[-3.952428420063185]
								}, {
									"case":	275,
									"scores":	[-3.952428420063185]
								}, {
									"case":	276,
									"scores":	[-3.952428420063185]
								}, {
									"case":	277,
									"scores":	[-3.952428420063185]
								}, {
									"case":	278,
									"scores":	[-3.952428420063185]
								}, {
									"case":	279,
									"scores":	[-3.952428420063185]
								}, {
									"case":	280,
									"scores":	[-3.952428420063185]
								}, {
									"case":	281,
									"scores":	[-3.952428420063185]
								}, {
									"case":	282,
									"scores":	[-3.952428420063185]
								}, {
									"case":	283,
									"scores":	[-3.952428420063185]
								}, {
									"case":	284,
									"scores":	[-3.952428420063185]
								}, {
									"case":	285,
									"scores":	[-3.952428420063185]
								}, {
									"case":	286,
									"scores":	[-3.952428420063185]
								}, {
									"case":	287,
									"scores":	[-3.952428420063185]
								}, {
									"case":	288,
									"scores":	[-3.952428420063185]
								}, {
									"case":	289,
									"scores":	[-3.952428420063185]
								}, {
									"case":	290,
									"scores":	[-3.952428420063185]
								}, {
									"case":	291,
									"scores":	[-3.952428420063185]
								}, {
									"case":	292,
									"scores":	[-3.952428420063185]
								}, {
									"case":	293,
									"scores":	[-3.952428420063185]
								}, {
									"case":	294,
									"scores":	[-3.952428420063185]
								}, {
									"case":	295,
									"scores":	[-3.952428420063185]
								}, {
									"case":	296,
									"scores":	[-3.952428420063185]
								}, {
									"case":	297,
									"scores":	[-3.952428420063185]
								}, {
									"case":	298,
									"scores":	[-3.952428420063185]
								}, {
									"case":	299,
									"scores":	[-3.952428420063185]
								}, {
									"case":	300,
									"scores":	[-3.952428420063185]
								}, {
									"case":	301,
									"scores":	[-3.952428420063185]
								}, {
									"case":	302,
									"scores":	[-3.952428420063185]
								}, {
									"case":	303,
									"scores":	[-3.952428420063185]
								}, {
									"case":	304,
									"scores":	[-3.952428420063185]
								}, {
									"case":	305,
									"scores":	[-3.952428420063185]
								}, {
									"case":	306,
									"scores":	[-3.952428420063185]
								}, {
									"case":	307,
									"scores":	[-3.952428420063185]
								}, {
									"case":	308,
									"scores":	[-3.952428420063185]
								}, {
									"case":	309,
									"scores":	[-3.952428420063185]
								}, {
									"case":	310,
									"scores":	[-3.952428420063185]
								}, {
									"case":	311,
									"scores":	[-3.952428420063185]
								}, {
									"case":	312,
									"scores":	[-3.952428420063185]
								}, {
									"case":	313,
									"scores":	[-3.952428420063185]
								}, {
									"case":	314,
									"scores":	[-3.952428420063185]
								}, {
									"case":	315,
									"scores":	[-3.952428420063185]
								}, {
									"case":	316,
									"scores":	[-3.952428420063185]
								}, {
									"case":	317,
									"scores":	[-3.952428420063185]
								}, {
									"case":	318,
									"scores":	[-3.952428420063185]
								}, {
									"case":	319,
									"scores":	[-3.952428420063185]
								}, {
									"case":	320,
									"scores":	[-3.952428420063185]
								}, {
									"case":	321,
									"scores":	[-3.952428420063185]
								}, {
									"case":	322,
									"scores":	[-3.952428420063185]
								}, {
									"case":	323,
									"scores":	[-3.952428420063185]
								}, {
									"case":	324,
									"scores":	[-3.952428420063185]
								}, {
									"case":	325,
									"scores":	[-3.952428420063185]
								}, {
									"case":	326,
									"scores":	[-3.952428420063185]
								}, {
									"case":	327,
									"scores":	[-3.952428420063185]
								}, {
									"case":	328,
									"scores":	[-3.952428420063185]
								}, {
									"case":	329,
									"scores":	[-3.952428420063185]
								}, {
									"case":	330,
									"scores":	[-3.952428420063185]
								}, {
									"case":	331,
									"scores":	[-3.952428420063185]
								}, {
									"case":	332,
									"scores":	[-3.952428420063185]
								}, {
									"case":	333,
									"scores":	[-3.952428420063185]
								}, {
									"case":	334,
									"scores":	[-3.952428420063185]
								}, {
									"case":	335,
									"scores":	[-3.952428420063185]
								}, {
									"case":	336,
									"scores":	[-3.952428420063185]
								}, {
									"case":	337,
									"scores":	[-3.952428420063185]
								}, {
									"case":	338,
									"scores":	[-3.952428420063185]
								}, {
									"case":	339,
									"scores":	[-3.952428420063185]
								}, {
									"case":	340,
									"scores":	[-3.952428420063185]
								}, {
									"case":	341,
									"scores":	[-3.952428420063185]
								}, {
									"case":	342,
									"scores":	[-3.952428420063185]
								}, {
									"case":	343,
									"scores":	[-3.952428420063185]
								}, {
									"case":	344,
									"scores":	[-3.952428420063185]
								}, {
									"case":	345,
									"scores":	[-3.952428420063185]
								}, {
									"case":	346,
									"scores":	[-3.952428420063185]
								}, {
									"case":	347,
									"scores":	[-3.952428420063185]
								}, {
									"case":	348,
									"scores":	[-3.952428420063185]
								}, {
									"case":	349,
									"scores":	[-3.952428420063185]
								}, {
									"case":	350,
									"scores":	[-3.952428420063185]
								}, {
									"case":	351,
									"scores":	[-3.952428420063185]
								}, {
									"case":	352,
									"scores":	[-3.952428420063185]
								}, {
									"case":	353,
									"scores":	[-3.952428420063185]
								}, {
									"case":	354,
									"scores":	[-3.952428420063185]
								}, {
									"case":	355,
									"scores":	[-3.952428420063185]
								}, {
									"case":	356,
									"scores":	[-3.952428420063185]
								}, {
									"case":	357,
									"scores":	[-3.952428420063185]
								}, {
									"case":	358,
									"scores":	[-3.952428420063185]
								}, {
									"case":	359,
									"scores":	[-3.952428420063185]
								}, {
									"case":	360,
									"scores":	[-3.952428420063185]
								}, {
									"case":	361,
									"scores":	[-3.952428420063185]
								}, {
									"case":	362,
									"scores":	[-3.952428420063185]
								}, {
									"case":	363,
									"scores":	[-3.952428420063185]
								}, {
									"case":	364,
									"scores":	[-3.952428420063185]
								}, {
									"case":	365,
									"scores":	[-3.952428420063185]
								}, {
									"case":	366,
									"scores":	[-3.952428420063185]
								}, {
									"case":	367,
									"scores":	[-3.952428420063185]
								}, {
									"case":	368,
									"scores":	[-3.952428420063185]
								}, {
									"case":	369,
									"scores":	[-3.952428420063185]
								}, {
									"case":	370,
									"scores":	[-3.952428420063185]
								}, {
									"case":	371,
									"scores":	[-3.952428420063185]
								}, {
									"case":	372,
									"scores":	[-3.952428420063185]
								}, {
									"case":	373,
									"scores":	[-3.952428420063185]
								}, {
									"case":	374,
									"scores":	[-3.952428420063185]
								}, {
									"case":	375,
									"scores":	[-3.952428420063185]
								}, {
									"case":	376,
									"scores":	[-3.952428420063185]
								}, {
									"case":	377,
									"scores":	[-3.952428420063185]
								}, {
									"case":	378,
									"scores":	[-3.952428420063185]
								}, {
									"case":	379,
									"scores":	[-3.952428420063185]
								}, {
									"case":	380,
									"scores":	[-3.952428420063185]
								}, {
									"case":	381,
									"scores":	[-3.952428420063185]
								}, {
									"case":	382,
									"scores":	[-3.952428420063185]
								}, {
									"case":	383,
									"scores":	[-3.952428420063185]
								}, {
									"case":	384,
									"scores":	[-3.952428420063185]
								}, {
									"case":	385,
									"scores":	[-3.952428420063185]
								}, {
									"case":	386,
									"scores":	[-3.952428420063185]
								}, {
									"case":	387,
									"scores":	[-3.952428420063185]
								}, {
									"case":	388,
									"scores":	[-3.952428420063185]
								}, {
									"case":	389,
									"scores":	[-3.952428420063185]
								}, {
									"case":	390,
									"scores":	[-3.952428420063185]
								}, {
									"case":	391,
									"scores":	[-3.952428420063185]
								}, {
									"case":	392,
									"scores":	[-3.952428420063185]
								}, {
									"case":	393,
									"scores":	[-3.952428420063185]
								}, {
									"case":	394,
									"scores":	[-3.952428420063185]
								}, {
									"case":	395,
									"scores":	[-6.2953824407631842, -8.1919045448631831, -8.1109243298631846, -7.3248095090631837, -8.2908812154631839, -8.0366336260631837, -10.322425486863187, -10.322425486863187, -10.454474833863188, -8.0789606960631843, -7.1370248560631842, -7.5287464228631844, -7.5287464228631844, -7.5287464228631844, -8.546971417863185, -8.546971417863185, -9.3806219067631869, -9.3806219067631869, -9.24857255976319, -8.5544082594631838, -8.8044939100631829, -8.8358923900631829]
								}]
						}, {
							"switch":	33,
							"types":	[[], [], [1], [], [], [], [3, 4], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3764,
							"begin_column":	2,
							"end_line":	3764,
							"end_column":	19,
							"patch_codes":	["if (!__is_neg(\"\", \"L3764\", 22, &(dpobj), sizeof (dpobj), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(isostr_len), sizeof (isostr_len), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    dpobj->current = ((void *)0);\n", "{\n}\n", "dpobj->current = ((void *)0)", "dpobj->current = (clone)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.9151699279631851, -7.6085055110631838, -7.229488826063184, -5.260586483063185, -5.2835017134631848, -6.0518575130631849, -6.1122253400631843, -6.1122253400631843, -6.3411094410631836, -6.842163726063184, -6.1440828540631838, -5.7268021730631853, -5.7268021730631853, -5.7268021730631853, -7.6227561660631844, -7.6227561660631844, -7.1433661689631842, -7.1433661689631842, -6.9144820679631849, -7.1242766594631846, -6.8505683100631849, -6.9836748900631846]
								}, {
									"case":	2,
									"scores":	[-3.952428420063185]
								}, {
									"case":	3,
									"scores":	[-3.952428420063185]
								}, {
									"case":	4,
									"scores":	[-3.952428420063185]
								}]
						}]
				}, {
					"line":	3785,
					"switches":	[{
							"switch":	36,
							"types":	[[], [], [], [], [430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], [], [], [], [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], [], [], [], [], [], []],
							"begin_line":	3786,
							"begin_column":	1,
							"end_line":	3786,
							"end_column":	1,
							"patch_codes":	["memset(&dateobj->props, 0, sizeof (*(&dateobj->props)))", "memset(&dateobj->std, 0, sizeof (*(&dateobj->std)))", "memset(&dateobj->time, 0, sizeof (*(&dateobj->time)))", "memset(&dateobj->time->d, 0, sizeof (*(&dateobj->time->d)))", "memset(&dateobj->time->dst, 0, sizeof (*(&dateobj->time->dst)))", "memset(&dateobj->time->f, 0, sizeof (*(&dateobj->time->f)))", "memset(&dateobj->time->h, 0, sizeof (*(&dateobj->time->h)))", "memset(&dateobj->time->have_date, 0, sizeof (*(&dateobj->time->have_date)))", "memset(&dateobj->time->have_relative, 0, sizeof (*(&dateobj->time->have_relative)))", "memset(&dateobj->time->have_time, 0, sizeof (*(&dateobj->time->have_time)))", "memset(&dateobj->time->have_weeknr_day, 0, sizeof (*(&dateobj->time->have_weeknr_day)))", "memset(&dateobj->time->have_zone, 0, sizeof (*(&dateobj->time->have_zone)))", "memset(&dateobj->time->i, 0, sizeof (*(&dateobj->time->i)))", "memset(&dateobj->time->is_localtime, 0, sizeof (*(&dateobj->time->is_localtime)))", "memset(&dateobj->time->m, 0, sizeof (*(&dateobj->time->m)))", "memset(&dateobj->time->relative, 0, sizeof (*(&dateobj->time->relative)))", "memset(&dateobj->time->s, 0, sizeof (*(&dateobj->time->s)))", "memset(&dateobj->time->sse, 0, sizeof (*(&dateobj->time->sse)))", "memset(&dateobj->time->sse_uptodate, 0, sizeof (*(&dateobj->time->sse_uptodate)))", "memset(&dateobj->time->tim_uptodate, 0, sizeof (*(&dateobj->time->tim_uptodate)))", "memset(&dateobj->time->tz_abbr, 0, sizeof (*(&dateobj->time->tz_abbr)))", "memset(&dateobj->time->tz_info, 0, sizeof (*(&dateobj->time->tz_info)))", "memset(&dateobj->time->y, 0, sizeof (*(&dateobj->time->y)))", "memset(&dateobj->time->z, 0, sizeof (*(&dateobj->time->z)))", "memset(&dateobj->time->zone_type, 0, sizeof (*(&dateobj->time->zone_type)))", "memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(&intobj->diff, 0, sizeof (*(&intobj->diff)))", "memset(&intobj->initialized, 0, sizeof (*(&intobj->initialized)))", "memset(&intobj->props, 0, sizeof (*(&intobj->props)))", "memset(&intobj->std, 0, sizeof (*(&intobj->std)))", "memset(dateobj->props, 0, sizeof (*(dateobj->props)))", "memset(dateobj->time, 0, sizeof (*(dateobj->time)))", "memset(dateobj->time->tz_abbr, 0, sizeof (*(dateobj->time->tz_abbr)))", "memset(dateobj->time->tz_info, 0, sizeof (*(dateobj->time->tz_info)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "memset(intobj, 0, sizeof (*(intobj)))", "memset(intobj->diff, 0, sizeof (*(intobj->diff)))", "memset(intobj->props, 0, sizeof (*(intobj->props)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3786\", 18, &(intobj), sizeof (intobj), &(interval), sizeof (interval), &(dateobj), sizeof (dateobj), &(start), sizeof (start), &(dpobj), sizeof (dpobj), &(clone), sizeof (clone), &(isostr), sizeof (isostr), &(recurrences), sizeof (recurrences), &(intobj->diff), sizeof (intobj->diff), &(end), sizeof (end), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(options), sizeof (options), &(ht), sizeof (ht), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj->props), sizeof (intobj->props), &(intobj->initialized), sizeof (intobj->initialized)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.912023005428146]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}, {
									"case":	69,
									"scores":	[-3.912023005428146]
								}, {
									"case":	70,
									"scores":	[-3.912023005428146]
								}, {
									"case":	71,
									"scores":	[-3.912023005428146]
								}, {
									"case":	72,
									"scores":	[-3.912023005428146]
								}, {
									"case":	73,
									"scores":	[-3.912023005428146]
								}, {
									"case":	74,
									"scores":	[-3.912023005428146]
								}, {
									"case":	75,
									"scores":	[-3.912023005428146]
								}, {
									"case":	76,
									"scores":	[-3.912023005428146]
								}, {
									"case":	77,
									"scores":	[-3.912023005428146]
								}, {
									"case":	78,
									"scores":	[-3.912023005428146]
								}, {
									"case":	79,
									"scores":	[-3.912023005428146]
								}, {
									"case":	80,
									"scores":	[-3.912023005428146]
								}, {
									"case":	81,
									"scores":	[-3.912023005428146]
								}, {
									"case":	82,
									"scores":	[-3.912023005428146]
								}, {
									"case":	83,
									"scores":	[-3.912023005428146]
								}, {
									"case":	84,
									"scores":	[-3.912023005428146]
								}, {
									"case":	85,
									"scores":	[-3.912023005428146]
								}, {
									"case":	86,
									"scores":	[-3.912023005428146]
								}, {
									"case":	87,
									"scores":	[-3.912023005428146]
								}, {
									"case":	88,
									"scores":	[-3.912023005428146]
								}, {
									"case":	89,
									"scores":	[-3.912023005428146]
								}, {
									"case":	90,
									"scores":	[-3.912023005428146]
								}, {
									"case":	91,
									"scores":	[-3.912023005428146]
								}, {
									"case":	92,
									"scores":	[-3.912023005428146]
								}, {
									"case":	93,
									"scores":	[-3.912023005428146]
								}, {
									"case":	94,
									"scores":	[-3.912023005428146]
								}, {
									"case":	95,
									"scores":	[-3.912023005428146]
								}, {
									"case":	96,
									"scores":	[-3.912023005428146]
								}, {
									"case":	97,
									"scores":	[-3.912023005428146]
								}, {
									"case":	98,
									"scores":	[-3.912023005428146]
								}, {
									"case":	99,
									"scores":	[-3.912023005428146]
								}, {
									"case":	100,
									"scores":	[-3.912023005428146]
								}, {
									"case":	101,
									"scores":	[-3.912023005428146]
								}, {
									"case":	102,
									"scores":	[-3.912023005428146]
								}, {
									"case":	103,
									"scores":	[-3.912023005428146]
								}, {
									"case":	104,
									"scores":	[-3.912023005428146]
								}, {
									"case":	105,
									"scores":	[-3.912023005428146]
								}, {
									"case":	106,
									"scores":	[-3.912023005428146]
								}, {
									"case":	107,
									"scores":	[-3.912023005428146]
								}, {
									"case":	108,
									"scores":	[-3.912023005428146]
								}, {
									"case":	109,
									"scores":	[-3.912023005428146]
								}, {
									"case":	110,
									"scores":	[-3.912023005428146]
								}, {
									"case":	111,
									"scores":	[-3.912023005428146]
								}, {
									"case":	112,
									"scores":	[-3.912023005428146]
								}, {
									"case":	113,
									"scores":	[-3.912023005428146]
								}, {
									"case":	114,
									"scores":	[-3.912023005428146]
								}, {
									"case":	115,
									"scores":	[-3.912023005428146]
								}, {
									"case":	116,
									"scores":	[-3.912023005428146]
								}, {
									"case":	117,
									"scores":	[-3.912023005428146]
								}, {
									"case":	118,
									"scores":	[-3.912023005428146]
								}, {
									"case":	119,
									"scores":	[-3.912023005428146]
								}, {
									"case":	120,
									"scores":	[-3.912023005428146]
								}, {
									"case":	121,
									"scores":	[-3.912023005428146]
								}, {
									"case":	122,
									"scores":	[-3.912023005428146]
								}, {
									"case":	123,
									"scores":	[-3.912023005428146]
								}, {
									"case":	124,
									"scores":	[-3.912023005428146]
								}, {
									"case":	125,
									"scores":	[-3.912023005428146]
								}, {
									"case":	126,
									"scores":	[-3.912023005428146]
								}, {
									"case":	127,
									"scores":	[-3.912023005428146]
								}, {
									"case":	128,
									"scores":	[-3.912023005428146]
								}, {
									"case":	129,
									"scores":	[-3.912023005428146]
								}, {
									"case":	130,
									"scores":	[-3.912023005428146]
								}, {
									"case":	131,
									"scores":	[-3.912023005428146]
								}, {
									"case":	132,
									"scores":	[-3.912023005428146]
								}, {
									"case":	133,
									"scores":	[-3.912023005428146]
								}, {
									"case":	134,
									"scores":	[-3.912023005428146]
								}, {
									"case":	135,
									"scores":	[-3.912023005428146]
								}, {
									"case":	136,
									"scores":	[-3.912023005428146]
								}, {
									"case":	137,
									"scores":	[-3.912023005428146]
								}, {
									"case":	138,
									"scores":	[-3.912023005428146]
								}, {
									"case":	139,
									"scores":	[-3.912023005428146]
								}, {
									"case":	140,
									"scores":	[-3.912023005428146]
								}, {
									"case":	141,
									"scores":	[-3.912023005428146]
								}, {
									"case":	142,
									"scores":	[-3.912023005428146]
								}, {
									"case":	143,
									"scores":	[-3.912023005428146]
								}, {
									"case":	144,
									"scores":	[-3.912023005428146]
								}, {
									"case":	145,
									"scores":	[-3.912023005428146]
								}, {
									"case":	146,
									"scores":	[-3.912023005428146]
								}, {
									"case":	147,
									"scores":	[-3.912023005428146]
								}, {
									"case":	148,
									"scores":	[-3.912023005428146]
								}, {
									"case":	149,
									"scores":	[-3.912023005428146]
								}, {
									"case":	150,
									"scores":	[-3.912023005428146]
								}, {
									"case":	151,
									"scores":	[-3.912023005428146]
								}, {
									"case":	152,
									"scores":	[-3.912023005428146]
								}, {
									"case":	153,
									"scores":	[-3.912023005428146]
								}, {
									"case":	154,
									"scores":	[-3.912023005428146]
								}, {
									"case":	155,
									"scores":	[-3.912023005428146]
								}, {
									"case":	156,
									"scores":	[-3.912023005428146]
								}, {
									"case":	157,
									"scores":	[-3.912023005428146]
								}, {
									"case":	158,
									"scores":	[-3.912023005428146]
								}, {
									"case":	159,
									"scores":	[-3.912023005428146]
								}, {
									"case":	160,
									"scores":	[-3.912023005428146]
								}, {
									"case":	161,
									"scores":	[-3.912023005428146]
								}, {
									"case":	162,
									"scores":	[-3.912023005428146]
								}, {
									"case":	163,
									"scores":	[-3.912023005428146]
								}, {
									"case":	164,
									"scores":	[-3.912023005428146]
								}, {
									"case":	165,
									"scores":	[-3.912023005428146]
								}, {
									"case":	166,
									"scores":	[-3.912023005428146]
								}, {
									"case":	167,
									"scores":	[-3.912023005428146]
								}, {
									"case":	168,
									"scores":	[-3.912023005428146]
								}, {
									"case":	169,
									"scores":	[-3.912023005428146]
								}, {
									"case":	170,
									"scores":	[-3.912023005428146]
								}, {
									"case":	171,
									"scores":	[-3.912023005428146]
								}, {
									"case":	172,
									"scores":	[-3.912023005428146]
								}, {
									"case":	173,
									"scores":	[-3.912023005428146]
								}, {
									"case":	174,
									"scores":	[-3.912023005428146]
								}, {
									"case":	175,
									"scores":	[-3.912023005428146]
								}, {
									"case":	176,
									"scores":	[-3.912023005428146]
								}, {
									"case":	177,
									"scores":	[-3.912023005428146]
								}, {
									"case":	178,
									"scores":	[-3.912023005428146]
								}, {
									"case":	179,
									"scores":	[-3.912023005428146]
								}, {
									"case":	180,
									"scores":	[-3.912023005428146]
								}, {
									"case":	181,
									"scores":	[-3.912023005428146]
								}, {
									"case":	182,
									"scores":	[-3.912023005428146]
								}, {
									"case":	183,
									"scores":	[-3.912023005428146]
								}, {
									"case":	184,
									"scores":	[-3.912023005428146]
								}, {
									"case":	185,
									"scores":	[-3.912023005428146]
								}, {
									"case":	186,
									"scores":	[-3.912023005428146]
								}, {
									"case":	187,
									"scores":	[-3.912023005428146]
								}, {
									"case":	188,
									"scores":	[-3.912023005428146]
								}, {
									"case":	189,
									"scores":	[-3.912023005428146]
								}, {
									"case":	190,
									"scores":	[-3.912023005428146]
								}, {
									"case":	191,
									"scores":	[-3.912023005428146]
								}, {
									"case":	192,
									"scores":	[-3.912023005428146]
								}, {
									"case":	193,
									"scores":	[-3.912023005428146]
								}, {
									"case":	194,
									"scores":	[-3.912023005428146]
								}, {
									"case":	195,
									"scores":	[-3.912023005428146]
								}, {
									"case":	196,
									"scores":	[-3.912023005428146]
								}, {
									"case":	197,
									"scores":	[-3.912023005428146]
								}, {
									"case":	198,
									"scores":	[-3.912023005428146]
								}, {
									"case":	199,
									"scores":	[-3.912023005428146]
								}, {
									"case":	200,
									"scores":	[-3.912023005428146]
								}, {
									"case":	201,
									"scores":	[-3.912023005428146]
								}, {
									"case":	202,
									"scores":	[-3.912023005428146]
								}, {
									"case":	203,
									"scores":	[-3.912023005428146]
								}, {
									"case":	204,
									"scores":	[-3.912023005428146]
								}, {
									"case":	205,
									"scores":	[-3.912023005428146]
								}, {
									"case":	206,
									"scores":	[-3.912023005428146]
								}, {
									"case":	207,
									"scores":	[-3.912023005428146]
								}, {
									"case":	208,
									"scores":	[-3.912023005428146]
								}, {
									"case":	209,
									"scores":	[-3.912023005428146]
								}, {
									"case":	210,
									"scores":	[-3.912023005428146]
								}, {
									"case":	211,
									"scores":	[-3.912023005428146]
								}, {
									"case":	212,
									"scores":	[-3.912023005428146]
								}, {
									"case":	213,
									"scores":	[-3.912023005428146]
								}, {
									"case":	214,
									"scores":	[-3.912023005428146]
								}, {
									"case":	215,
									"scores":	[-3.912023005428146]
								}, {
									"case":	216,
									"scores":	[-3.912023005428146]
								}, {
									"case":	217,
									"scores":	[-3.912023005428146]
								}, {
									"case":	218,
									"scores":	[-3.912023005428146]
								}, {
									"case":	219,
									"scores":	[-3.912023005428146]
								}, {
									"case":	220,
									"scores":	[-3.912023005428146]
								}, {
									"case":	221,
									"scores":	[-3.912023005428146]
								}, {
									"case":	222,
									"scores":	[-3.912023005428146]
								}, {
									"case":	223,
									"scores":	[-3.912023005428146]
								}, {
									"case":	224,
									"scores":	[-3.912023005428146]
								}, {
									"case":	225,
									"scores":	[-3.912023005428146]
								}, {
									"case":	226,
									"scores":	[-3.912023005428146]
								}, {
									"case":	227,
									"scores":	[-3.912023005428146]
								}, {
									"case":	228,
									"scores":	[-3.912023005428146]
								}, {
									"case":	229,
									"scores":	[-3.912023005428146]
								}, {
									"case":	230,
									"scores":	[-3.912023005428146]
								}, {
									"case":	231,
									"scores":	[-3.912023005428146]
								}, {
									"case":	232,
									"scores":	[-3.912023005428146]
								}, {
									"case":	233,
									"scores":	[-3.912023005428146]
								}, {
									"case":	234,
									"scores":	[-3.912023005428146]
								}, {
									"case":	235,
									"scores":	[-3.912023005428146]
								}, {
									"case":	236,
									"scores":	[-3.912023005428146]
								}, {
									"case":	237,
									"scores":	[-3.912023005428146]
								}, {
									"case":	238,
									"scores":	[-3.912023005428146]
								}, {
									"case":	239,
									"scores":	[-3.912023005428146]
								}, {
									"case":	240,
									"scores":	[-3.912023005428146]
								}, {
									"case":	241,
									"scores":	[-3.912023005428146]
								}, {
									"case":	242,
									"scores":	[-3.912023005428146]
								}, {
									"case":	243,
									"scores":	[-3.912023005428146]
								}, {
									"case":	244,
									"scores":	[-3.912023005428146]
								}, {
									"case":	245,
									"scores":	[-3.912023005428146]
								}, {
									"case":	246,
									"scores":	[-3.912023005428146]
								}, {
									"case":	247,
									"scores":	[-3.912023005428146]
								}, {
									"case":	248,
									"scores":	[-3.912023005428146]
								}, {
									"case":	249,
									"scores":	[-3.912023005428146]
								}, {
									"case":	250,
									"scores":	[-3.912023005428146]
								}, {
									"case":	251,
									"scores":	[-3.912023005428146]
								}, {
									"case":	252,
									"scores":	[-3.912023005428146]
								}, {
									"case":	253,
									"scores":	[-3.912023005428146]
								}, {
									"case":	254,
									"scores":	[-3.912023005428146]
								}, {
									"case":	255,
									"scores":	[-3.912023005428146]
								}, {
									"case":	256,
									"scores":	[-3.912023005428146]
								}, {
									"case":	257,
									"scores":	[-3.912023005428146]
								}, {
									"case":	258,
									"scores":	[-3.912023005428146]
								}, {
									"case":	259,
									"scores":	[-3.912023005428146]
								}, {
									"case":	260,
									"scores":	[-3.912023005428146]
								}, {
									"case":	261,
									"scores":	[-3.912023005428146]
								}, {
									"case":	262,
									"scores":	[-3.912023005428146]
								}, {
									"case":	263,
									"scores":	[-3.912023005428146]
								}, {
									"case":	264,
									"scores":	[-3.912023005428146]
								}, {
									"case":	265,
									"scores":	[-3.912023005428146]
								}, {
									"case":	266,
									"scores":	[-3.912023005428146]
								}, {
									"case":	267,
									"scores":	[-3.912023005428146]
								}, {
									"case":	268,
									"scores":	[-3.912023005428146]
								}, {
									"case":	269,
									"scores":	[-3.912023005428146]
								}, {
									"case":	270,
									"scores":	[-3.912023005428146]
								}, {
									"case":	271,
									"scores":	[-3.912023005428146]
								}, {
									"case":	272,
									"scores":	[-3.912023005428146]
								}, {
									"case":	273,
									"scores":	[-3.912023005428146]
								}, {
									"case":	274,
									"scores":	[-3.912023005428146]
								}, {
									"case":	275,
									"scores":	[-3.912023005428146]
								}, {
									"case":	276,
									"scores":	[-3.912023005428146]
								}, {
									"case":	277,
									"scores":	[-3.912023005428146]
								}, {
									"case":	278,
									"scores":	[-3.912023005428146]
								}, {
									"case":	279,
									"scores":	[-3.912023005428146]
								}, {
									"case":	280,
									"scores":	[-3.912023005428146]
								}, {
									"case":	281,
									"scores":	[-3.912023005428146]
								}, {
									"case":	282,
									"scores":	[-3.912023005428146]
								}, {
									"case":	283,
									"scores":	[-3.912023005428146]
								}, {
									"case":	284,
									"scores":	[-3.912023005428146]
								}, {
									"case":	285,
									"scores":	[-3.912023005428146]
								}, {
									"case":	286,
									"scores":	[-3.912023005428146]
								}, {
									"case":	287,
									"scores":	[-3.912023005428146]
								}, {
									"case":	288,
									"scores":	[-3.912023005428146]
								}, {
									"case":	289,
									"scores":	[-3.912023005428146]
								}, {
									"case":	290,
									"scores":	[-3.912023005428146]
								}, {
									"case":	291,
									"scores":	[-3.912023005428146]
								}, {
									"case":	292,
									"scores":	[-3.912023005428146]
								}, {
									"case":	293,
									"scores":	[-3.912023005428146]
								}, {
									"case":	294,
									"scores":	[-3.912023005428146]
								}, {
									"case":	295,
									"scores":	[-3.912023005428146]
								}, {
									"case":	296,
									"scores":	[-3.912023005428146]
								}, {
									"case":	297,
									"scores":	[-3.912023005428146]
								}, {
									"case":	298,
									"scores":	[-3.912023005428146]
								}, {
									"case":	299,
									"scores":	[-3.912023005428146]
								}, {
									"case":	300,
									"scores":	[-3.912023005428146]
								}, {
									"case":	301,
									"scores":	[-3.912023005428146]
								}, {
									"case":	302,
									"scores":	[-3.912023005428146]
								}, {
									"case":	303,
									"scores":	[-3.912023005428146]
								}, {
									"case":	304,
									"scores":	[-3.912023005428146]
								}, {
									"case":	305,
									"scores":	[-3.912023005428146]
								}, {
									"case":	306,
									"scores":	[-3.912023005428146]
								}, {
									"case":	307,
									"scores":	[-3.912023005428146]
								}, {
									"case":	308,
									"scores":	[-3.912023005428146]
								}, {
									"case":	309,
									"scores":	[-3.912023005428146]
								}, {
									"case":	310,
									"scores":	[-3.912023005428146]
								}, {
									"case":	311,
									"scores":	[-3.912023005428146]
								}, {
									"case":	312,
									"scores":	[-3.912023005428146]
								}, {
									"case":	313,
									"scores":	[-3.912023005428146]
								}, {
									"case":	314,
									"scores":	[-3.912023005428146]
								}, {
									"case":	315,
									"scores":	[-3.912023005428146]
								}, {
									"case":	316,
									"scores":	[-3.912023005428146]
								}, {
									"case":	317,
									"scores":	[-3.912023005428146]
								}, {
									"case":	318,
									"scores":	[-3.912023005428146]
								}, {
									"case":	319,
									"scores":	[-3.912023005428146]
								}, {
									"case":	320,
									"scores":	[-3.912023005428146]
								}, {
									"case":	321,
									"scores":	[-3.912023005428146]
								}, {
									"case":	322,
									"scores":	[-3.912023005428146]
								}, {
									"case":	323,
									"scores":	[-3.912023005428146]
								}, {
									"case":	324,
									"scores":	[-3.912023005428146]
								}, {
									"case":	325,
									"scores":	[-3.912023005428146]
								}, {
									"case":	326,
									"scores":	[-3.912023005428146]
								}, {
									"case":	327,
									"scores":	[-3.912023005428146]
								}, {
									"case":	328,
									"scores":	[-3.912023005428146]
								}, {
									"case":	329,
									"scores":	[-3.912023005428146]
								}, {
									"case":	330,
									"scores":	[-3.912023005428146]
								}, {
									"case":	331,
									"scores":	[-3.912023005428146]
								}, {
									"case":	332,
									"scores":	[-3.912023005428146]
								}, {
									"case":	333,
									"scores":	[-3.912023005428146]
								}, {
									"case":	334,
									"scores":	[-3.912023005428146]
								}, {
									"case":	335,
									"scores":	[-3.912023005428146]
								}, {
									"case":	336,
									"scores":	[-3.912023005428146]
								}, {
									"case":	337,
									"scores":	[-3.912023005428146]
								}, {
									"case":	338,
									"scores":	[-3.912023005428146]
								}, {
									"case":	339,
									"scores":	[-3.912023005428146]
								}, {
									"case":	340,
									"scores":	[-3.912023005428146]
								}, {
									"case":	341,
									"scores":	[-3.912023005428146]
								}, {
									"case":	342,
									"scores":	[-3.912023005428146]
								}, {
									"case":	343,
									"scores":	[-3.912023005428146]
								}, {
									"case":	344,
									"scores":	[-3.912023005428146]
								}, {
									"case":	345,
									"scores":	[-3.912023005428146]
								}, {
									"case":	346,
									"scores":	[-3.912023005428146]
								}, {
									"case":	347,
									"scores":	[-3.912023005428146]
								}, {
									"case":	348,
									"scores":	[-3.912023005428146]
								}, {
									"case":	349,
									"scores":	[-3.912023005428146]
								}, {
									"case":	350,
									"scores":	[-3.912023005428146]
								}, {
									"case":	351,
									"scores":	[-3.912023005428146]
								}, {
									"case":	352,
									"scores":	[-3.912023005428146]
								}, {
									"case":	353,
									"scores":	[-3.912023005428146]
								}, {
									"case":	354,
									"scores":	[-3.912023005428146]
								}, {
									"case":	355,
									"scores":	[-3.912023005428146]
								}, {
									"case":	356,
									"scores":	[-3.912023005428146]
								}, {
									"case":	357,
									"scores":	[-3.912023005428146]
								}, {
									"case":	358,
									"scores":	[-3.912023005428146]
								}, {
									"case":	359,
									"scores":	[-3.912023005428146]
								}, {
									"case":	360,
									"scores":	[-3.912023005428146]
								}, {
									"case":	361,
									"scores":	[-3.912023005428146]
								}, {
									"case":	362,
									"scores":	[-3.912023005428146]
								}, {
									"case":	363,
									"scores":	[-3.912023005428146]
								}, {
									"case":	364,
									"scores":	[-3.912023005428146]
								}, {
									"case":	365,
									"scores":	[-3.912023005428146]
								}, {
									"case":	366,
									"scores":	[-3.912023005428146]
								}, {
									"case":	367,
									"scores":	[-3.912023005428146]
								}, {
									"case":	368,
									"scores":	[-3.912023005428146]
								}, {
									"case":	369,
									"scores":	[-3.912023005428146]
								}, {
									"case":	370,
									"scores":	[-3.912023005428146]
								}, {
									"case":	371,
									"scores":	[-3.912023005428146]
								}, {
									"case":	372,
									"scores":	[-3.912023005428146]
								}, {
									"case":	373,
									"scores":	[-3.912023005428146]
								}, {
									"case":	374,
									"scores":	[-3.912023005428146]
								}, {
									"case":	375,
									"scores":	[-3.912023005428146]
								}, {
									"case":	376,
									"scores":	[-3.912023005428146]
								}, {
									"case":	377,
									"scores":	[-3.912023005428146]
								}, {
									"case":	378,
									"scores":	[-3.912023005428146]
								}, {
									"case":	379,
									"scores":	[-3.912023005428146]
								}, {
									"case":	380,
									"scores":	[-3.912023005428146]
								}, {
									"case":	381,
									"scores":	[-3.912023005428146]
								}, {
									"case":	382,
									"scores":	[-3.912023005428146]
								}, {
									"case":	383,
									"scores":	[-3.912023005428146]
								}, {
									"case":	384,
									"scores":	[-3.912023005428146]
								}, {
									"case":	385,
									"scores":	[-3.912023005428146]
								}, {
									"case":	386,
									"scores":	[-3.912023005428146]
								}, {
									"case":	387,
									"scores":	[-3.912023005428146]
								}, {
									"case":	388,
									"scores":	[-3.912023005428146]
								}, {
									"case":	389,
									"scores":	[-3.912023005428146]
								}, {
									"case":	390,
									"scores":	[-3.912023005428146]
								}, {
									"case":	391,
									"scores":	[-3.912023005428146]
								}, {
									"case":	392,
									"scores":	[-3.912023005428146]
								}, {
									"case":	393,
									"scores":	[-3.912023005428146]
								}, {
									"case":	394,
									"scores":	[-3.912023005428146]
								}, {
									"case":	395,
									"scores":	[-3.912023005428146]
								}, {
									"case":	396,
									"scores":	[-3.912023005428146]
								}, {
									"case":	397,
									"scores":	[-3.912023005428146]
								}, {
									"case":	398,
									"scores":	[-3.912023005428146]
								}, {
									"case":	399,
									"scores":	[-3.912023005428146]
								}, {
									"case":	400,
									"scores":	[-3.912023005428146]
								}, {
									"case":	401,
									"scores":	[-3.912023005428146]
								}, {
									"case":	402,
									"scores":	[-3.912023005428146]
								}, {
									"case":	403,
									"scores":	[-3.912023005428146]
								}, {
									"case":	404,
									"scores":	[-3.912023005428146]
								}, {
									"case":	405,
									"scores":	[-3.912023005428146]
								}, {
									"case":	406,
									"scores":	[-3.912023005428146]
								}, {
									"case":	407,
									"scores":	[-3.912023005428146]
								}, {
									"case":	408,
									"scores":	[-3.912023005428146]
								}, {
									"case":	409,
									"scores":	[-3.912023005428146]
								}, {
									"case":	410,
									"scores":	[-3.912023005428146]
								}, {
									"case":	411,
									"scores":	[-3.912023005428146]
								}, {
									"case":	412,
									"scores":	[-3.912023005428146]
								}, {
									"case":	413,
									"scores":	[-3.912023005428146]
								}, {
									"case":	414,
									"scores":	[-3.912023005428146]
								}, {
									"case":	415,
									"scores":	[-3.912023005428146]
								}, {
									"case":	416,
									"scores":	[-3.912023005428146]
								}, {
									"case":	417,
									"scores":	[-3.912023005428146]
								}, {
									"case":	418,
									"scores":	[-3.912023005428146]
								}, {
									"case":	419,
									"scores":	[-3.912023005428146]
								}, {
									"case":	420,
									"scores":	[-3.912023005428146]
								}, {
									"case":	421,
									"scores":	[-3.912023005428146]
								}, {
									"case":	422,
									"scores":	[-3.912023005428146]
								}, {
									"case":	423,
									"scores":	[-3.912023005428146]
								}, {
									"case":	424,
									"scores":	[-3.912023005428146]
								}, {
									"case":	425,
									"scores":	[-3.912023005428146]
								}, {
									"case":	426,
									"scores":	[-3.912023005428146]
								}, {
									"case":	427,
									"scores":	[-3.912023005428146]
								}, {
									"case":	428,
									"scores":	[-3.912023005428146]
								}, {
									"case":	429,
									"scores":	[-3.912023005428146]
								}, {
									"case":	430,
									"scores":	[-5.072838017628146, -3.391088807628146, -7.0757015535281464, -5.5655104296281461, -5.9628647766281455, -6.0771489496281461, -5.9277149798281457, -5.7168258628281459, -6.7770109506281457, -5.9628647766281455, -5.2158908628281457, -5.9999651766281463, -5.7168258628281459, -5.7539262628281458, -6.2219369846281456, -6.2219369846281456, -6.7770109506281457, -6.5309720368281461]
								}]
						}, {
							"switch":	37,
							"types":	[[], [], [1], [], [], [], [3, 4], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	3786,
							"begin_column":	3,
							"end_line":	3786,
							"end_column":	81,
							"patch_codes":	["if (!__is_neg(\"\", \"L3786\", 18, &(intobj), sizeof (intobj), &(interval), sizeof (interval), &(dateobj), sizeof (dateobj), &(start), sizeof (start), &(dpobj), sizeof (dpobj), &(clone), sizeof (clone), &(isostr), sizeof (isostr), &(recurrences), sizeof (recurrences), &(intobj->diff), sizeof (intobj->diff), &(end), sizeof (end), &(isostr_len), sizeof (isostr_len), &(this_ptr), sizeof (this_ptr), &(options), sizeof (options), &(ht), sizeof (ht), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj->props), sizeof (intobj->props), &(intobj->initialized), sizeof (intobj->initialized)))\n    intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n", "{\n}\n", "intobj = (intobj)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.3753348964281464, -3.3000480854281466, -4.9437773643281462, -3.214449144428146, -4.5083923754281461, -4.4084613044281458, -4.2197642754281457, -3.7505042754281459, -5.0332371854281455, -4.5083923754281461, -3.4284932454281458, -4.8027431754281462, -3.7505042754281459, -4.0448550754281456, -4.825447515428146, -4.825447515428146, -5.0332371854281455, -4.2753490854281457]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}]
						}]
				}, {
					"line":	3765,
					"switches":	[{
							"switch":	34,
							"types":	[[], [], [], [], [395], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [], [], [], [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], [], [], [], [], [], []],
							"begin_line":	3766,
							"begin_column":	0,
							"end_line":	3766,
							"end_column":	0,
							"patch_codes":	["memset(&dpobj->current, 0, sizeof (*(&dpobj->current)))", "memset(&dpobj->end, 0, sizeof (*(&dpobj->end)))", "memset(&dpobj->include_start_date, 0, sizeof (*(&dpobj->include_start_date)))", "memset(&dpobj->initialized, 0, sizeof (*(&dpobj->initialized)))", "memset(&dpobj->interval, 0, sizeof (*(&dpobj->interval)))", "memset(&dpobj->recurrences, 0, sizeof (*(&dpobj->recurrences)))", "memset(&dpobj->start, 0, sizeof (*(&dpobj->start)))", "memset(&dpobj->std, 0, sizeof (*(&dpobj->std)))", "memset(dpobj, 0, sizeof (*(dpobj)))", "memset(dpobj->current, 0, sizeof (*(dpobj->current)))", "memset(dpobj->end, 0, sizeof (*(dpobj->end)))", "memset(dpobj->interval, 0, sizeof (*(dpobj->interval)))", "memset(dpobj->start, 0, sizeof (*(dpobj->start)))", "(date_globals.timezone) = (isostr)", "(isostr)++", "_array_init(((end)), 0)", "_array_init(((interval)), 0)", "_array_init(((return_value)), 0)", "_array_init(((start)), 0)", "_array_init(((this_ptr)), 0)", "_convert_to_string((*(return_value_ptr)))", "_efree(((end)))", "_efree(((interval)))", "_efree(((isostr)))", "_efree(((return_value)))", "_efree(((start)))", "_efree(((this_ptr)))", "_zval_copy_ctor(((end)))", "_zval_copy_ctor(((interval)))", "_zval_copy_ctor(((return_value)))", "_zval_copy_ctor(((start)))", "_zval_copy_ctor(((this_ptr)))", "_zval_copy_ctor_func((end))", "_zval_copy_ctor_func((interval))", "_zval_copy_ctor_func((return_value))", "_zval_copy_ctor_func((start))", "_zval_copy_ctor_func((this_ptr))", "_zval_dtor(((end)))", "_zval_dtor(((interval)))", "_zval_dtor(((return_value)))", "_zval_dtor(((start)))", "_zval_dtor(((this_ptr)))", "_zval_dtor_func((end))", "_zval_dtor_func((interval))", "_zval_dtor_func((return_value))", "_zval_dtor_func((start))", "_zval_dtor_func((this_ptr))", "_zval_ptr_dtor((&(end)))", "_zval_ptr_dtor((&(interval)))", "_zval_ptr_dtor((&(return_value)))", "_zval_ptr_dtor((&(start)))", "_zval_ptr_dtor((&(this_ptr)))", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((end), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((end), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((end), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((end), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((end), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((end), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((end), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((end), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((end), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((end), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((interval), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((interval), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((interval), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((interval), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((interval), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((interval), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((interval), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((interval), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((interval), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((return_value), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((return_value), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((return_value), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((return_value), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((return_value), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((return_value), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((return_value), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((return_value), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((return_value), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((start), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((start), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((start), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((start), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((start), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((start), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((start), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((start), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((start), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((start), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"astronomical_twilight_end\", strlen(\"astronomical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"civil_twilight_end\", strlen(\"civil_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"day\", strlen(\"day\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"fraction\", strlen(\"fraction\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"hour\", strlen(\"hour\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"minute\", strlen(\"minute\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"month\", strlen(\"month\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"nautical_twilight_end\", strlen(\"nautical_twilight_end\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"second\", strlen(\"second\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"sunset\", strlen(\"sunset\") + 1, 1)", "add_assoc_bool_ex((this_ptr), \"year\", strlen(\"year\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone\", strlen(\"zone\") + 1, 0)", "add_assoc_bool_ex((this_ptr), \"zone_type\", strlen(\"zone_type\") + 1, 0)", "add_assoc_null_ex((end), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((interval), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((return_value), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((start), \"timezone_id\", strlen(\"timezone_id\") + 1)", "add_assoc_null_ex((this_ptr), \"timezone_id\", strlen(\"timezone_id\") + 1)", "clone = (clone)", "clone = timelib_time_clone((dateobj)->time)", "clone->tz_abbr = (isostr)", "clone->tz_abbr = strdup((dateobj)->time->tz_abbr)", "clone->tz_info = (dateobj)->time->tz_info", "convert_to_boolean((end))", "convert_to_boolean((interval))", "convert_to_boolean((return_value))", "convert_to_boolean((start))", "convert_to_boolean((this_ptr))", "convert_to_long(*(return_value_ptr))", "date_period_initialize(&((dpobj)->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &((dpobj)->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &((dpobj)->interval), &recurrences, isostr, isostr_len)", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, (isostr), isostr_len)", "dateobj = (dateobj)", "dpobj = (dpobj)", "dpobj = zend_object_store_get_object(((end)))", "dpobj = zend_object_store_get_object(((interval)))", "dpobj = zend_object_store_get_object(((return_value)))", "dpobj = zend_object_store_get_object(((start)))", "dpobj = zend_object_store_get_object(((this_ptr)))", "dpobj->current = (clone)", "dpobj->end = (clone)", "dpobj->include_start_date = (-1)", "dpobj->include_start_date = (0)", "dpobj->include_start_date = (1)", "dpobj->include_start_date = (2)", "dpobj->include_start_date = (ht)", "dpobj->include_start_date = (isostr_len)", "dpobj->include_start_date = (return_value_used)", "dpobj->initialized = (-1)", "dpobj->initialized = (0)", "dpobj->initialized = (1)", "dpobj->initialized = (2)", "dpobj->initialized = (ht)", "dpobj->initialized = (isostr_len)", "dpobj->initialized = (return_value_used)", "dpobj->interval = timelib_rel_time_clone((intobj)->diff)", "dpobj->recurrences = (-1)", "dpobj->recurrences = (0)", "dpobj->recurrences = (1)", "dpobj->recurrences = (2)", "dpobj->recurrences = (ht)", "dpobj->recurrences = (isostr_len)", "dpobj->recurrences = (return_value_used)", "dpobj->recurrences = recurrences + (dpobj)->include_start_date", "dpobj->start = (clone)", "gc_remove_zval_from_buffer((end))", "gc_remove_zval_from_buffer((interval))", "gc_remove_zval_from_buffer((return_value))", "gc_remove_zval_from_buffer((start))", "gc_remove_zval_from_buffer((this_ptr))", "gc_zval_check_possible_root(((end)))", "gc_zval_check_possible_root(((interval)))", "gc_zval_check_possible_root(((return_value)))", "gc_zval_check_possible_root(((start)))", "gc_zval_check_possible_root(((this_ptr)))", "gc_zval_possible_root((end))", "gc_zval_possible_root((interval))", "gc_zval_possible_root((return_value))", "gc_zval_possible_root((start))", "gc_zval_possible_root((this_ptr))", "i_zval_ptr_dtor((end))", "i_zval_ptr_dtor((interval))", "i_zval_ptr_dtor((return_value))", "i_zval_ptr_dtor((start))", "i_zval_ptr_dtor((this_ptr))", "intobj = (intobj)", "memcpy((clone), dateobj->time, sizeof(timelib_time))", "memcpy(clone, (dateobj)->time, sizeof(timelib_time))", "memset(&(dateobj)->time->relative, 0, sizeof(struct timelib_rel_time))", "memset((dateobj), 0, sizeof(php_date_obj))", "memset((dpobj), 0, sizeof(php_period_obj))", "memset((intobj), 0, sizeof(php_interval_obj))", "php_date_global_timezone_db_enabled = (-1)", "php_date_global_timezone_db_enabled = (0)", "php_date_global_timezone_db_enabled = (1)", "php_date_global_timezone_db_enabled = (2)", "php_date_global_timezone_db_enabled = (ht)", "php_date_global_timezone_db_enabled = (isostr_len)", "php_date_global_timezone_db_enabled = (return_value_used)", "php_date_instantiate(date_ce_date, (end))", "php_date_instantiate(date_ce_date, (interval))", "php_date_instantiate(date_ce_date, (return_value))", "php_date_instantiate(date_ce_date, (start))", "php_date_instantiate(date_ce_date, (this_ptr))", "php_date_instantiate(date_ce_interval, (end))", "php_date_instantiate(date_ce_interval, (interval))", "php_date_instantiate(date_ce_interval, (return_value))", "php_date_instantiate(date_ce_interval, (start))", "php_date_instantiate(date_ce_interval, (this_ptr))", "php_date_instantiate(date_ce_timezone, (end))", "php_date_instantiate(date_ce_timezone, (interval))", "php_date_instantiate(date_ce_timezone, (return_value))", "php_date_instantiate(date_ce_timezone, (start))", "php_date_instantiate(date_ce_timezone, (this_ptr))", "php_error_docref0(((void *)0), (1 << 1L), \"Failed to parse interval (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad format (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 1L), \"Unknown or bad timezone (%s)\", (isostr))", "php_error_docref0(((void *)0), (1 << 3L), \"Timezone ID '%s' is invalid\", (isostr))", "timelib_rel_time_dtor((dpobj)->interval)", "timelib_rel_time_dtor((intobj)->diff)", "timelib_time_dtor((clone))", "timelib_time_dtor((dateobj)->time)", "timelib_time_dtor((dpobj)->current)", "timelib_time_dtor((dpobj)->end)", "timelib_time_dtor((dpobj)->start)", "timelib_unixtime2gmt((clone), (timelib_sll)time(((void *)0)))", "timelib_unixtime2local((clone), (timelib_sll)time(((void *)0)))", "timelib_update_from_sse((clone))", "timelib_update_from_sse((dateobj)->time)", "timelib_update_ts((clone), ((void *)0))", "timelib_update_ts((dateobj)->time, ((void *)0))", "timelib_update_ts((dpobj)->end, ((void *)0))", "timelib_update_ts((dpobj)->start, ((void *)0))", "zend_object_std_dtor(&(dateobj)->std)", "zend_object_std_dtor(&(dpobj)->std)", "zend_object_std_dtor(&(intobj)->std)", "zend_replace_error_handling((EH_NORMAL), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_SUPPRESS), ((void *)0), &error_handling)", "zend_replace_error_handling((EH_THROW), ((void *)0), &error_handling)", "zval_addref_p((end))", "zval_addref_p((interval))", "zval_addref_p((return_value))", "zval_addref_p((start))", "zval_addref_p((this_ptr))", "zval_from_error_container((end), (date_globals.last_errors))", "zval_from_error_container((interval), (date_globals.last_errors))", "zval_from_error_container((return_value), (date_globals.last_errors))", "zval_from_error_container((start), (date_globals.last_errors))", "zval_from_error_container((this_ptr), (date_globals.last_errors))", "zval_set_refcount_p((end), 0)", "zval_set_refcount_p((end), 1)", "zval_set_refcount_p((interval), 0)", "zval_set_refcount_p((interval), 1)", "zval_set_refcount_p((return_value), 0)", "zval_set_refcount_p((return_value), 1)", "zval_set_refcount_p((start), 0)", "zval_set_refcount_p((start), 1)", "zval_set_refcount_p((this_ptr), 0)", "zval_set_refcount_p((this_ptr), 1)", "zval_unset_isref_p((end))", "zval_unset_isref_p((interval))", "zval_unset_isref_p((return_value))", "zval_unset_isref_p((start))", "zval_unset_isref_p((this_ptr))", "((date_globals.tzcache)) = (HashTable *)_emalloc((sizeof(HashTable)))", "(date_globals.last_errors) = ((void *)0)", "(date_globals.timezone) = ((void *)0)", "(date_globals.timezone) = _estrndup((zone), (zone_len))", "(date_globals.tzcache) = ((void *)0)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_efree(((date_globals.timezone)))", "_efree(((date_globals.tzcache)))", "_zend_hash_init(((date_globals.tzcache)), (4), (((void *)0)), (_php_date_tzinfo_dtor), (0))", "clone = timelib_time_clone(dateobj->time)", "clone = timelib_time_ctor()", "clone->tz_abbr = strdup(dateobj->time->tz_abbr)", "clone->tz_info = dateobj->time->tz_info", "date_ce_period->get_iterator = date_object_period_get_iterator", "date_ce_period->iterator_funcs.funcs = &date_period_it_funcs", "date_object_handlers_date.clone_obj = date_object_clone_date", "date_object_handlers_date.compare_objects = date_object_compare_date", "date_object_handlers_date.get_properties = date_object_get_properties", "date_object_handlers_interval.clone_obj = date_object_clone_interval", "date_object_handlers_interval.get_properties = date_object_get_properties_interval", "date_object_handlers_interval.get_property_ptr_ptr = ((void *)0)", "date_object_handlers_interval.read_property = date_interval_read_property", "date_object_handlers_interval.write_property = date_interval_write_property", "date_object_handlers_period.clone_obj = date_object_clone_period", "date_object_handlers_timezone.clone_obj = date_object_clone_timezone", "date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len)", "date_register_classes()", "dateobj = (php_date_obj *)zend_object_store_get_object(end)", "dateobj = (php_date_obj *)zend_object_store_get_object(start)", "dpobj = zend_object_store_get_object((this_ptr))", "dpobj->current = ((void *)0)", "dpobj->end = clone", "dpobj->include_start_date = !(options & 1)", "dpobj->initialized = 1", "dpobj->interval = timelib_rel_time_clone(intobj->diff)", "dpobj->recurrences = recurrences + dpobj->include_start_date", "dpobj->start = clone", "exit(1)", "intobj = (php_interval_obj *)zend_object_store_get_object(interval)", "memcpy(&date_object_handlers_date, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_interval, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_period, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(&date_object_handlers_timezone, zend_get_std_object_handlers(), sizeof(zend_object_handlers))", "memcpy(clone, dateobj->time, sizeof(timelib_time))", "php_date_global_timezone_db = ((void *)0)", "php_date_global_timezone_db_enabled = 0", "php_date_global_timezone_db_enabled = 1", "php_error_docref0(((void *)0), (1 << 0L), \"Timezone database is corrupt - this should *never* happen!\")", "php_error_docref0(((void *)0), (1 << 13L), \"The is_dst parameter is deprecated\")", "php_error_docref0(((void *)0), (1 << 1L), \"Can only do this for zones with ID for now\")", "php_error_docref0(((void *)0), (1 << 1L), \"It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We had to select 'UTC' because your platform doesn't provide functionality for the guessing algorithm\")", "php_error_docref0(((void *)0), (1 << 1L), \"Only non-special relative time specifications are supported for subtraction\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateInterval object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTime object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The DateTimeZone object has not been correctly initialized by its constructor\")", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr)", "php_error_docref0(((void *)0), (1 << 1L), \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Unrecognized date format token.\")", "php_error_docref0(((void *)0), (1 << 1L), \"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\")", "php_error_docref0(((void *)0), (1 << 1L), \"idate format is one char\")", "php_error_docref0(((void *)0), (1 << 3L), \"A two-letter ISO 3166-1 compatible country code is expected\")", "php_info_print_table_end()", "php_info_print_table_row(2, \"Timezone Database\", php_date_global_timezone_db_enabled ? \"external\" : \"internal\")", "php_info_print_table_row(2, \"date/time support\", \"enabled\")", "php_info_print_table_start()", "timelib_error_container_dtor((date_globals.last_errors))", "timelib_update_ts(dpobj->end, ((void *)0))", "timelib_update_ts(dpobj->start, ((void *)0))", "zend_class_implements(date_ce_period, 1, zend_ce_traversable)", "zend_declare_class_constant_long(date_ce_period, \"EXCLUDE_START_DATE\", sizeof (\"EXCLUDE_START_DATE\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"AFRICA\", sizeof (\"AFRICA\") - 1, 1)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL\", sizeof (\"ALL\") - 1, 2047)", "zend_declare_class_constant_long(date_ce_timezone, \"ALL_WITH_BC\", sizeof (\"ALL_WITH_BC\") - 1, 4095)", "zend_declare_class_constant_long(date_ce_timezone, \"AMERICA\", sizeof (\"AMERICA\") - 1, 2)", "zend_declare_class_constant_long(date_ce_timezone, \"ANTARCTICA\", sizeof (\"ANTARCTICA\") - 1, 4)", "zend_declare_class_constant_long(date_ce_timezone, \"ARCTIC\", sizeof (\"ARCTIC\") - 1, 8)", "zend_declare_class_constant_long(date_ce_timezone, \"ASIA\", sizeof (\"ASIA\") - 1, 16)", "zend_declare_class_constant_long(date_ce_timezone, \"ATLANTIC\", sizeof (\"ATLANTIC\") - 1, 32)", "zend_declare_class_constant_long(date_ce_timezone, \"AUSTRALIA\", sizeof (\"AUSTRALIA\") - 1, 64)", "zend_declare_class_constant_long(date_ce_timezone, \"EUROPE\", sizeof (\"EUROPE\") - 1, 128)", "zend_declare_class_constant_long(date_ce_timezone, \"INDIAN\", sizeof (\"INDIAN\") - 1, 256)", "zend_declare_class_constant_long(date_ce_timezone, \"PACIFIC\", sizeof (\"PACIFIC\") - 1, 512)", "zend_declare_class_constant_long(date_ce_timezone, \"PER_COUNTRY\", sizeof (\"PER_COUNTRY\") - 1, 4096)", "zend_declare_class_constant_long(date_ce_timezone, \"UTC\", sizeof (\"UTC\") - 1, 1024)", "zend_declare_class_constant_stringl(date_ce_date, \"ATOM\", sizeof (\"ATOM\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"COOKIE\", sizeof (\"COOKIE\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"ISO8601\", sizeof (\"ISO8601\") - 1, \"Y-m-d\\\\TH:i:sO\", sizeof (\"Y-m-d\\\\TH:i:sO\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1036\", sizeof (\"RFC1036\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC1123\", sizeof (\"RFC1123\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC2822\", sizeof (\"RFC2822\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC3339\", sizeof (\"RFC3339\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC822\", sizeof (\"RFC822\") - 1, \"D, d M y H:i:s O\", sizeof (\"D, d M y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RFC850\", sizeof (\"RFC850\") - 1, \"l, d-M-y H:i:s T\", sizeof (\"l, d-M-y H:i:s T\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"RSS\", sizeof (\"RSS\") - 1, \"D, d M Y H:i:s O\", sizeof (\"D, d M Y H:i:s O\") - 1)", "zend_declare_class_constant_stringl(date_ce_date, \"W3C\", sizeof (\"W3C\") - 1, \"Y-m-d\\\\TH:i:sP\", sizeof (\"Y-m-d\\\\TH:i:sP\") - 1)", "zend_error((1 << 0L), \"An iterator cannot be used with foreach by reference\")", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_hash_destroy((date_globals.tzcache))", "zend_replace_error_handling(EH_THROW, ((void *)0), &error_handling)", "zend_restore_error_handling(&error_handling)", "if (__is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	2,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	3,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	4,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	5,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	6,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	7,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	8,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	9,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	10,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	11,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	12,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	13,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	14,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	15,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	16,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	17,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	18,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	19,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	20,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	21,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	22,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	23,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	24,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	25,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	26,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	27,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	28,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	29,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	30,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	31,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	32,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	33,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	34,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	35,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	36,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	37,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	38,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	39,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	40,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	41,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	42,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	43,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	44,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	45,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	46,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	47,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	48,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	49,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	50,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	51,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	52,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	53,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	54,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	55,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	56,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	57,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	58,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	59,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	60,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	61,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	62,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	63,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	64,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	65,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	66,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	67,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	68,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	69,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	70,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	71,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	72,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	73,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	74,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	75,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	76,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	77,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	78,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	79,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	80,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	81,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	82,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	83,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	84,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	85,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	86,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	87,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	88,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	89,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	90,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	91,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	92,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	93,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	94,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	95,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	96,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	97,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	98,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	99,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	100,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	101,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	102,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	103,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	104,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	105,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	106,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	107,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	108,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	109,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	110,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	111,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	112,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	113,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	114,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	115,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	116,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	117,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	118,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	119,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	120,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	121,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	122,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	123,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	124,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	125,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	126,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	127,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	128,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	129,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	130,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	131,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	132,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	133,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	134,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	135,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	136,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	137,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	138,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	139,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	140,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	141,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	142,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	143,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	144,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	145,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	146,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	147,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	148,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	149,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	150,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	151,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	152,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	153,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	154,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	155,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	156,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	157,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	158,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	159,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	160,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	161,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	162,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	163,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	164,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	165,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	166,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	167,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	168,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	169,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	170,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	171,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	172,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	173,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	174,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	175,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	176,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	177,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	178,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	179,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	180,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	181,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	182,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	183,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	184,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	185,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	186,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	187,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	188,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	189,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	190,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	191,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	192,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	193,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	194,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	195,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	196,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	197,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	198,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	199,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	200,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	201,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	202,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	203,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	204,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	205,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	206,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	207,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	208,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	209,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	210,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	211,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	212,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	213,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	214,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	215,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	216,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	217,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	218,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	219,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	220,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	221,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	222,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	223,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	224,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	225,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	226,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	227,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	228,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	229,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	230,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	231,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	232,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	233,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	234,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	235,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	236,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	237,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	238,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	239,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	240,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	241,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	242,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	243,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	244,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	245,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	246,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	247,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	248,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	249,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	250,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	251,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	252,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	253,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	254,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	255,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	256,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	257,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	258,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	259,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	260,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	261,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	262,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	263,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	264,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	265,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	266,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	267,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	268,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	269,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	270,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	271,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	272,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	273,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	274,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	275,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	276,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	277,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	278,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	279,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	280,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	281,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	282,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	283,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	284,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	285,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	286,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	287,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	288,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	289,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	290,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	291,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	292,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	293,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	294,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	295,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	296,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	297,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	298,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	299,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	300,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	301,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	302,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	303,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	304,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	305,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	306,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	307,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	308,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	309,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	310,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	311,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	312,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	313,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	314,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	315,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	316,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	317,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	318,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	319,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	320,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	321,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	322,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	323,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	324,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	325,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	326,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	327,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	328,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	329,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	330,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	331,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	332,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	333,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	334,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	335,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	336,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	337,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	338,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	339,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	340,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	341,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	342,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	343,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	344,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	345,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	346,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	347,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	348,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	349,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	350,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	351,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	352,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	353,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	354,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	355,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	356,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	357,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	358,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	359,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	360,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	361,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	362,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	363,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	364,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	365,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	366,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	367,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	368,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	369,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	370,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	371,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	372,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	373,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	374,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	375,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	376,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	377,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	378,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	379,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	380,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	381,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	382,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	383,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	384,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	385,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	386,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	387,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	388,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	389,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	390,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	391,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	392,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	393,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	394,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	395,
									"scores":	[-7.223181179745664, -7.3171028114456647, -7.9971844481456653, -7.9350052967456648, -8.5820154405456641, -8.5820154405456641, -9.3021497875456642, -8.1764621165456646, -9.0102866225456655, -8.978322988745667, -8.036387148745666, -6.2536870935456648, -6.2536870935456648, -6.2536870935456648, -9.446333710545666, -9.446333710545666, -9.4131118324456668, -9.4131118324456668, -8.692977485445665, -9.4537705521456648, -9.7038562027456656, -9.8332346757456666]
								}]
						}, {
							"switch":	35,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	3766,
							"begin_column":	2,
							"end_line":	3809,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized))) {\n    date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len);\n    if (dpobj->start == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr);\n    }\n    if (dpobj->interval == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr);\n    }\n    if (dpobj->end == ((void *)0) && recurrences == 0) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n    }\n    if (dpobj->start) {\n        timelib_update_ts(dpobj->start, ((void *)0));\n    }\n    if (dpobj->end) {\n        timelib_update_ts(dpobj->end, ((void *)0));\n    }\n} else {\n    intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n    dateobj = (php_date_obj *)zend_object_store_get_object(start);\n    clone = timelib_time_ctor();\n    memcpy(clone, dateobj->time, sizeof(timelib_time));\n    if (dateobj->time->tz_abbr) {\n        clone->tz_abbr = strdup(dateobj->time->tz_abbr);\n    }\n    if (dateobj->time->tz_info) {\n        clone->tz_info = dateobj->time->tz_info;\n    }\n    dpobj->start = clone;\n    dpobj->interval = timelib_rel_time_clone(intobj->diff);\n    if (end) {\n        dateobj = (php_date_obj *)zend_object_store_get_object(end);\n        clone = timelib_time_clone(dateobj->time);\n        dpobj->end = clone;\n    }\n}\n", "if ((isostr_len) || __is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized))) {\n    date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len);\n    if (dpobj->start == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr);\n    }\n    if (dpobj->interval == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr);\n    }\n    if (dpobj->end == ((void *)0) && recurrences == 0) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n    }\n    if (dpobj->start) {\n        timelib_update_ts(dpobj->start, ((void *)0));\n    }\n    if (dpobj->end) {\n        timelib_update_ts(dpobj->end, ((void *)0));\n    }\n} else {\n    intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n    dateobj = (php_date_obj *)zend_object_store_get_object(start);\n    clone = timelib_time_ctor();\n    memcpy(clone, dateobj->time, sizeof(timelib_time));\n    if (dateobj->time->tz_abbr) {\n        clone->tz_abbr = strdup(dateobj->time->tz_abbr);\n    }\n    if (dateobj->time->tz_info) {\n        clone->tz_info = dateobj->time->tz_info;\n    }\n    dpobj->start = clone;\n    dpobj->interval = timelib_rel_time_clone(intobj->diff);\n    if (end) {\n        dateobj = (php_date_obj *)zend_object_store_get_object(end);\n        clone = timelib_time_clone(dateobj->time);\n        dpobj->end = clone;\n    }\n}\n", "if ((isostr_len) && !__is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized))) {\n    date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len);\n    if (dpobj->start == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr);\n    }\n    if (dpobj->interval == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr);\n    }\n    if (dpobj->end == ((void *)0) && recurrences == 0) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n    }\n    if (dpobj->start) {\n        timelib_update_ts(dpobj->start, ((void *)0));\n    }\n    if (dpobj->end) {\n        timelib_update_ts(dpobj->end, ((void *)0));\n    }\n} else {\n    intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n    dateobj = (php_date_obj *)zend_object_store_get_object(start);\n    clone = timelib_time_ctor();\n    memcpy(clone, dateobj->time, sizeof(timelib_time));\n    if (dateobj->time->tz_abbr) {\n        clone->tz_abbr = strdup(dateobj->time->tz_abbr);\n    }\n    if (dateobj->time->tz_info) {\n        clone->tz_info = dateobj->time->tz_info;\n    }\n    dpobj->start = clone;\n    dpobj->interval = timelib_rel_time_clone(intobj->diff);\n    if (end) {\n        dateobj = (php_date_obj *)zend_object_store_get_object(end);\n        clone = timelib_time_clone(dateobj->time);\n        dpobj->end = clone;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.8829801965281456, -4.6477993309281445, -2.4940195259281435, -4.6742512265281455, -3.5874015335281442, -3.5874015335281442, -3.6847338335281439, -5.5164553525281459, -5.8850580485281441, -5.4977329485281423, -4.7996520765281465, -4.4679703365281451, -4.4679703365281451, -4.4679703365281451, -6.2783253885281418, -6.2783253885281418, -5.2304929235281463, -5.2304929235281463, -5.1331606235281448, -5.7798458819281446, -5.506137532528145, -5.635762856528145]
								}, {
									"case":	2,
									"scores":	[-3.9688673694281462, -4.7336865038281459, -2.5799066988281458, -4.7601383994281461, -3.6732887064281456, -3.6732887064281456, -3.7706210064281453, -5.6023425254281465, -5.9709452214281455, -5.5836201214281456, -4.8855392494281462, -4.5538575094281457, -4.5538575094281457, -4.5538575094281457, -6.364212561428146, -6.364212561428146, -5.316380096428146, -5.316380096428146, -5.2190477964281463, -5.8657330548281461, -5.5920247054281456, -5.7216500294281456]
								}, {
									"case":	3,
									"scores":	[-3.9688673694281462, -4.7336865038281459, -2.5799066988281458, -4.7601383994281461, -3.6732887064281456, -3.6732887064281456, -3.7706210064281453, -5.6023425254281465, -5.9709452214281455, -5.5836201214281456, -4.8855392494281462, -4.5538575094281457, -4.5538575094281457, -4.5538575094281457, -6.364212561428146, -6.364212561428146, -5.316380096428146, -5.316380096428146, -5.2190477964281463, -5.8657330548281461, -5.5920247054281456, -5.7216500294281456]
								}]
						}, {
							"switch":	38,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	3766,
							"begin_column":	2,
							"end_line":	3809,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)))\n    if (isostr_len) {\n        date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len);\n        if (dpobj->start == ((void *)0)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr);\n        }\n        if (dpobj->interval == ((void *)0)) {\n            php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr);\n        }\n        if (dpobj->end == ((void *)0) && recurrences == 0) {\n            php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n        }\n        if (dpobj->start) {\n            timelib_update_ts(dpobj->start, ((void *)0));\n        }\n        if (dpobj->end) {\n            timelib_update_ts(dpobj->end, ((void *)0));\n        }\n    } else {\n        intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n        dateobj = (php_date_obj *)zend_object_store_get_object(start);\n        clone = timelib_time_ctor();\n        memcpy(clone, dateobj->time, sizeof(timelib_time));\n        if (dateobj->time->tz_abbr) {\n            clone->tz_abbr = strdup(dateobj->time->tz_abbr);\n        }\n        if (dateobj->time->tz_info) {\n            clone->tz_info = dateobj->time->tz_info;\n        }\n        dpobj->start = clone;\n        dpobj->interval = timelib_rel_time_clone(intobj->diff);\n        if (end) {\n            dateobj = (php_date_obj *)zend_object_store_get_object(end);\n            clone = timelib_time_clone(dateobj->time);\n            dpobj->end = clone;\n        }\n    }\n", "if (!__is_neg(\"\", \"L3766\", 22, &(isostr_len), sizeof (isostr_len), &(dpobj), sizeof (dpobj), &(recurrences), sizeof (recurrences), &(isostr), sizeof (isostr), &(dpobj->start), sizeof (dpobj->start), &(dpobj->end), sizeof (dpobj->end), &(dpobj->interval), sizeof (dpobj->interval), &(dpobj->current), sizeof (dpobj->current), &(this_ptr), sizeof (this_ptr), &(ht), sizeof (ht), &(options), sizeof (options), &(start), sizeof (start), &(end), sizeof (end), &(interval), sizeof (interval), &(date_ce_date), sizeof (date_ce_date), &(date_ce_interval), sizeof (date_ce_interval), &(intobj), sizeof (intobj), &(dateobj), sizeof (dateobj), &(clone), sizeof (clone), &(dpobj->include_start_date), sizeof (dpobj->include_start_date), &(dpobj->recurrences), sizeof (dpobj->recurrences), &(dpobj->initialized), sizeof (dpobj->initialized)) && (isostr_len)) {\n    date_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len);\n    if (dpobj->start == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain a start date.\", isostr);\n    }\n    if (dpobj->interval == ((void *)0)) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an interval.\", isostr);\n    }\n    if (dpobj->end == ((void *)0) && recurrences == 0) {\n        php_error_docref0(((void *)0), (1 << 1L), \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n    }\n    if (dpobj->start) {\n        timelib_update_ts(dpobj->start, ((void *)0));\n    }\n    if (dpobj->end) {\n        timelib_update_ts(dpobj->end, ((void *)0));\n    }\n} else {\n    intobj = (php_interval_obj *)zend_object_store_get_object(interval);\n    dateobj = (php_date_obj *)zend_object_store_get_object(start);\n    clone = timelib_time_ctor();\n    memcpy(clone, dateobj->time, sizeof(timelib_time));\n    if (dateobj->time->tz_abbr) {\n        clone->tz_abbr = strdup(dateobj->time->tz_abbr);\n    }\n    if (dateobj->time->tz_info) {\n        clone->tz_info = dateobj->time->tz_info;\n    }\n    dpobj->start = clone;\n    dpobj->interval = timelib_rel_time_clone(intobj->diff);\n    if (end) {\n        dateobj = (php_date_obj *)zend_object_store_get_object(end);\n        clone = timelib_time_clone(dateobj->time);\n        dpobj->end = clone;\n    }\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0503968767456655, -5.8152160111456652, -3.6614362061456651, -5.8416679067456654, -4.7548182137456649, -4.7548182137456649, -4.8521505137456646, -6.6838720327456649, -7.0524747287456648, -6.6651496287456649, -5.4721597667456656, -5.635387016745665, -5.635387016745665, -5.635387016745665, -7.4457420687456644, -7.4457420687456644, -6.3979096037456653, -6.3979096037456653, -6.3005773037456656, -6.8142050831456658, -6.6735542127456657, -6.8031795367456649]
								}, {
									"case":	2,
									"scores":	[-4.936582876745665, -5.7014020111456656, -3.547622206145665, -5.7278539067456649, -4.6410042137456653, -4.6410042137456653, -4.738336513745665, -6.5700580327456652, -6.9386607287456652, -6.5513356287456652, -5.853254756745665, -5.5215730167456654, -5.5215730167456654, -5.5215730167456654, -7.3319280687456647, -7.3319280687456647, -6.2840956037456657, -6.2840956037456657, -6.186763303745666, -6.8334485621456658, -6.5597402127456661, -6.6893655367456653]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	1,
			"case":	1,
			"size":	10
		}, {
			"switch":	3,
			"case":	1,
			"size":	10
		}, {
			"switch":	5,
			"case":	1,
			"size":	10
		}, {
			"switch":	5,
			"case":	2,
			"size":	10
		}, {
			"switch":	5,
			"case":	3,
			"size":	10
		}, {
			"switch":	6,
			"case":	1,
			"size":	10
		}, {
			"switch":	8,
			"case":	1,
			"size":	14
		}, {
			"switch":	10,
			"case":	1,
			"size":	14
		}, {
			"switch":	12,
			"case":	1,
			"size":	37
		}, {
			"switch":	14,
			"case":	1,
			"size":	37
		}, {
			"switch":	16,
			"case":	1,
			"size":	5
		}, {
			"switch":	18,
			"case":	1,
			"size":	1
		}, {
			"switch":	19,
			"case":	394,
			"size":	85
		}, {
			"switch":	20,
			"case":	1,
			"size":	85
		}, {
			"switch":	21,
			"case":	394,
			"size":	85
		}, {
			"switch":	22,
			"case":	1,
			"size":	85
		}, {
			"switch":	22,
			"case":	2,
			"size":	85
		}, {
			"switch":	22,
			"case":	5,
			"size":	85
		}, {
			"switch":	23,
			"case":	394,
			"size":	85
		}, {
			"switch":	24,
			"case":	1,
			"size":	85
		}, {
			"switch":	24,
			"case":	2,
			"size":	85
		}, {
			"switch":	24,
			"case":	5,
			"size":	85
		}, {
			"switch":	25,
			"case":	394,
			"size":	85
		}, {
			"switch":	26,
			"case":	1,
			"size":	85
		}, {
			"switch":	26,
			"case":	2,
			"size":	85
		}, {
			"switch":	26,
			"case":	5,
			"size":	85
		}, {
			"switch":	27,
			"case":	1,
			"size":	85
		}, {
			"switch":	27,
			"case":	2,
			"size":	85
		}, {
			"switch":	28,
			"case":	1,
			"size":	85
		}, {
			"switch":	28,
			"case":	2,
			"size":	85
		}, {
			"switch":	29,
			"case":	1,
			"size":	85
		}, {
			"switch":	29,
			"case":	2,
			"size":	85
		}, {
			"switch":	30,
			"case":	395,
			"size":	22
		}, {
			"switch":	31,
			"case":	1,
			"size":	22
		}, {
			"switch":	32,
			"case":	395,
			"size":	22
		}, {
			"switch":	33,
			"case":	1,
			"size":	22
		}, {
			"switch":	34,
			"case":	395,
			"size":	22
		}, {
			"switch":	35,
			"case":	1,
			"size":	22
		}, {
			"switch":	35,
			"case":	2,
			"size":	22
		}, {
			"switch":	35,
			"case":	3,
			"size":	22
		}, {
			"switch":	36,
			"case":	430,
			"size":	18
		}, {
			"switch":	37,
			"case":	1,
			"size":	18
		}, {
			"switch":	38,
			"case":	1,
			"size":	22
		}, {
			"switch":	38,
			"case":	2,
			"size":	22
		}],
	"func_locations":	[{
			"file":	"ext/date/php_date.c",
			"functions":	[{
					"function":	"__cmsg_nxthdr",
					"begin":	308,
					"end":	324
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"__zend_calloc",
					"begin":	103,
					"end":	108
				}, {
					"function":	"__zend_malloc",
					"begin":	93,
					"end":	101
				}, {
					"function":	"__zend_realloc",
					"begin":	110,
					"end":	118
				}, {
					"function":	"_php_date_tzinfo_dtor",
					"begin":	603,
					"end":	608
				}, {
					"function":	"_zval_copy_ctor",
					"begin":	40,
					"end":	46
				}, {
					"function":	"_zval_dtor",
					"begin":	30,
					"end":	36
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"btowc",
					"begin":	317,
					"end":	320
				}, {
					"function":	"check_id_allowed",
					"begin":	3823,
					"end":	3837
				}, {
					"function":	"date_format",
					"begin":	1008,
					"end":	1160
				}, {
					"function":	"date_interval_format",
					"begin":	3632,
					"end":	3690
				}, {
					"function":	"date_interval_initialize",
					"begin":	3445,
					"end":	3476
				}, {
					"function":	"date_interval_read_property",
					"begin":	3479,
					"end":	3529
				}, {
					"function":	"date_interval_write_property",
					"begin":	3533,
					"end":	3576
				}, {
					"function":	"date_object_clone_date",
					"begin":	2042,
					"end":	2061
				}, {
					"function":	"date_object_clone_interval",
					"begin":	2213,
					"end":	2223
				}, {
					"function":	"date_object_clone_period",
					"begin":	2288,
					"end":	2298
				}, {
					"function":	"date_object_clone_timezone",
					"begin":	2162,
					"end":	2186
				}, {
					"function":	"date_object_compare_date",
					"begin":	2063,
					"end":	2082
				}, {
					"function":	"date_object_free_storage_date",
					"begin":	2300,
					"end":	2310
				}, {
					"function":	"date_object_free_storage_interval",
					"begin":	2323,
					"end":	2330
				}, {
					"function":	"date_object_free_storage_period",
					"begin":	2332,
					"end":	2351
				}, {
					"function":	"date_object_free_storage_timezone",
					"begin":	2312,
					"end":	2321
				}, {
					"function":	"date_object_get_properties",
					"begin":	2084,
					"end":	2135
				}, {
					"function":	"date_object_get_properties_interval",
					"begin":	2225,
					"end":	2261
				}, {
					"function":	"date_object_new_date",
					"begin":	2037,
					"end":	2040
				}, {
					"function":	"date_object_new_date_ex",
					"begin":	2017,
					"end":	2035
				}, {
					"function":	"date_object_new_interval",
					"begin":	2208,
					"end":	2211
				}, {
					"function":	"date_object_new_interval_ex",
					"begin":	2188,
					"end":	2206
				}, {
					"function":	"date_object_new_period",
					"begin":	2283,
					"end":	2286
				}, {
					"function":	"date_object_new_period_ex",
					"begin":	2263,
					"end":	2281
				}, {
					"function":	"date_object_new_timezone",
					"begin":	2157,
					"end":	2160
				}, {
					"function":	"date_object_new_timezone_ex",
					"begin":	2137,
					"end":	2155
				}, {
					"function":	"date_object_period_get_iterator",
					"begin":	1921,
					"end":	1938
				}, {
					"function":	"date_period_initialize",
					"begin":	3713,
					"end":	3735
				}, {
					"function":	"date_period_it_current_data",
					"begin":	1847,
					"end":	1868
				}, {
					"function":	"date_period_it_current_key",
					"begin":	1873,
					"end":	1878
				}, {
					"function":	"date_period_it_dtor",
					"begin":	1808,
					"end":	1817
				}, {
					"function":	"date_period_it_has_more",
					"begin":	1822,
					"end":	1842
				}, {
					"function":	"date_period_it_invalidate_current",
					"begin":	1795,
					"end":	1803
				}, {
					"function":	"date_period_it_move_forward",
					"begin":	1883,
					"end":	1889
				}, {
					"function":	"date_period_it_rewind",
					"begin":	1894,
					"end":	1904
				}, {
					"function":	"date_register_classes",
					"begin":	1940,
					"end":	2015
				}, {
					"function":	"english_suffix",
					"begin":	972,
					"end":	984
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"fstat",
					"begin":	462,
					"end":	466
				}, {
					"function":	"fstatat",
					"begin":	469,
					"end":	474
				}, {
					"function":	"gc_remove_from_buffer",
					"begin":	187,
					"end":	194
				}, {
					"function":	"gc_zval_check_possible_root",
					"begin":	180,
					"end":	185
				}, {
					"function":	"get_timezone_info",
					"begin":	936,
					"end":	947
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"guess_timezone",
					"begin":	839,
					"end":	934
				}, {
					"function":	"i_zend_is_true",
					"begin":	101,
					"end":	156
				}, {
					"function":	"i_zval_ptr_dtor",
					"begin":	80,
					"end":	99
				}, {
					"function":	"is_numeric_string",
					"begin":	102,
					"end":	224
				}, {
					"function":	"lstat",
					"begin":	455,
					"end":	459
				}, {
					"function":	"mbrlen",
					"begin":	328,
					"end":	332
				}, {
					"function":	"mknod",
					"begin":	478,
					"end":	482
				}, {
					"function":	"mknodat",
					"begin":	486,
					"end":	491
				}, {
					"function":	"php_date",
					"begin":	1162,
					"end":	1179
				}, {
					"function":	"php_date_do_return_parsed_time",
					"begin":	2634,
					"end":	2707
				}, {
					"function":	"php_date_full_day_name",
					"begin":	988,
					"end":	995
				}, {
					"function":	"php_date_get_date_ce",
					"begin":	510,
					"end":	513
				}, {
					"function":	"php_date_get_timezone_ce",
					"begin":	515,
					"end":	518
				}, {
					"function":	"php_date_initialize",
					"begin":	2374,
					"end":	2454
				}, {
					"function":	"php_date_initialize_from_hash",
					"begin":	2514,
					"end":	2559
				}, {
					"function":	"php_date_instantiate",
					"begin":	2354,
					"end":	2361
				}, {
					"function":	"php_date_llabs",
					"begin":	40,
					"end":	40
				}, {
					"function":	"php_date_parse_tzfile",
					"begin":	817,
					"end":	835
				}, {
					"function":	"php_date_set_tzdb",
					"begin":	1351,
					"end":	1359
				}, {
					"function":	"php_date_short_day_name",
					"begin":	997,
					"end":	1004
				}, {
					"function":	"php_do_date_sunrise_sunset",
					"begin":	3964,
					"end":	4045
				}, {
					"function":	"php_format_date",
					"begin":	1182,
					"end":	1204
				}, {
					"function":	"php_idate",
					"begin":	1209,
					"end":	1300
				}, {
					"function":	"php_mktime",
					"begin":	1449,
					"end":	1537
				}, {
					"function":	"php_parse_date",
					"begin":	1363,
					"end":	1383
				}, {
					"function":	"php_set_error_handling",
					"begin":	292,
					"end":	295
				}, {
					"function":	"php_std_error_handling",
					"begin":	296,
					"end":	296
				}, {
					"function":	"php_strftime",
					"begin":	1576,
					"end":	1656
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"safe_free_zval_ptr_rel",
					"begin":	62,
					"end":	69
				}, {
					"function":	"smart_str_print_long",
					"begin":	153,
					"end":	157
				}, {
					"function":	"smart_str_print_unsigned",
					"begin":	159,
					"end":	163
				}, {
					"function":	"stat",
					"begin":	448,
					"end":	452
				}, {
					"function":	"strtoimax",
					"begin":	323,
					"end":	328
				}, {
					"function":	"strtoumax",
					"begin":	335,
					"end":	340
				}, {
					"function":	"timezone_initialize",
					"begin":	3174,
					"end":	3192
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"update_errors_warnings",
					"begin":	2365,
					"end":	2372
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"wcstoimax",
					"begin":	347,
					"end":	352
				}, {
					"function":	"wcstoumax",
					"begin":	361,
					"end":	366
				}, {
					"function":	"wctob",
					"begin":	323,
					"end":	326
				}, {
					"function":	"zend_arg_types_stack_2_pop",
					"begin":	355,
					"end":	363
				}, {
					"function":	"zend_arg_types_stack_3_pop",
					"begin":	365,
					"end":	374
				}, {
					"function":	"zend_dval_to_lval",
					"begin":	77,
					"end":	83
				}, {
					"function":	"zend_inline_hash_func",
					"begin":	261,
					"end":	288
				}, {
					"function":	"zend_memnstr",
					"begin":	226,
					"end":	257
				}, {
					"function":	"zend_memrchr",
					"begin":	259,
					"end":	274
				}, {
					"function":	"zend_objects_store_del_ref_by_handle",
					"begin":	71,
					"end":	73
				}, {
					"function":	"zend_ptr_stack_2_pop",
					"begin":	93,
					"end":	98
				}, {
					"function":	"zend_ptr_stack_2_push",
					"begin":	72,
					"end":	83
				}, {
					"function":	"zend_ptr_stack_3_pop",
					"begin":	85,
					"end":	91
				}, {
					"function":	"zend_ptr_stack_3_push",
					"begin":	58,
					"end":	70
				}, {
					"function":	"zend_ptr_stack_pop",
					"begin":	108,
					"end":	112
				}, {
					"function":	"zend_ptr_stack_push",
					"begin":	100,
					"end":	106
				}, {
					"function":	"zend_symtable_del",
					"begin":	355,
					"end":	359
				}, {
					"function":	"zend_symtable_exists",
					"begin":	369,
					"end":	373
				}, {
					"function":	"zend_symtable_find",
					"begin":	362,
					"end":	366
				}, {
					"function":	"zend_symtable_update",
					"begin":	348,
					"end":	352
				}, {
					"function":	"zend_symtable_update_current_key_ex",
					"begin":	375,
					"end":	379
				}, {
					"function":	"zend_vm_stack_alloc",
					"begin":	243,
					"end":	270
				}, {
					"function":	"zend_vm_stack_clear_multiple",
					"begin":	331,
					"end":	342
				}, {
					"function":	"zend_vm_stack_destroy",
					"begin":	197,
					"end":	206
				}, {
					"function":	"zend_vm_stack_extend",
					"begin":	208,
					"end":	213
				}, {
					"function":	"zend_vm_stack_free",
					"begin":	284,
					"end":	300
				}, {
					"function":	"zend_vm_stack_free_int",
					"begin":	272,
					"end":	282
				}, {
					"function":	"zend_vm_stack_get_arg",
					"begin":	344,
					"end":	353
				}, {
					"function":	"zend_vm_stack_init",
					"begin":	192,
					"end":	195
				}, {
					"function":	"zend_vm_stack_new_page",
					"begin":	183,
					"end":	190
				}, {
					"function":	"zend_vm_stack_pop",
					"begin":	231,
					"end":	241
				}, {
					"function":	"zend_vm_stack_push",
					"begin":	220,
					"end":	224
				}, {
					"function":	"zend_vm_stack_push_args",
					"begin":	302,
					"end":	329
				}, {
					"function":	"zend_vm_stack_push_nocheck",
					"begin":	226,
					"end":	229
				}, {
					"function":	"zend_vm_stack_top",
					"begin":	215,
					"end":	218
				}, {
					"function":	"zif_checkdate",
					"begin":	1559,
					"end":	1571
				}, {
					"function":	"zif_date",
					"begin":	1305,
					"end":	1308
				}, {
					"function":	"zif_date_add",
					"begin":	2837,
					"end":	2875
				}, {
					"function":	"zif_date_create",
					"begin":	2459,
					"end":	2473
				}, {
					"function":	"zif_date_create_from_format",
					"begin":	2479,
					"end":	2493
				}, {
					"function":	"zif_date_date_set",
					"begin":	3050,
					"end":	3067
				}, {
					"function":	"zif_date_default_timezone_get",
					"begin":	3952,
					"end":	3958
				}, {
					"function":	"zif_date_default_timezone_set",
					"begin":	3929,
					"end":	3947
				}, {
					"function":	"zif_date_diff",
					"begin":	3147,
					"end":	3171
				}, {
					"function":	"zif_date_format",
					"begin":	2750,
					"end":	2763
				}, {
					"function":	"zif_date_get_last_errors",
					"begin":	2623,
					"end":	2631
				}, {
					"function":	"zif_date_interval_create_from_date_string",
					"begin":	3608,
					"end":	3628
				}, {
					"function":	"zif_date_interval_format",
					"begin":	3696,
					"end":	3710
				}, {
					"function":	"zif_date_isodate_set",
					"begin":	3073,
					"end":	3094
				}, {
					"function":	"zif_date_modify",
					"begin":	2769,
					"end":	2831
				}, {
					"function":	"zif_date_offset_get",
					"begin":	2992,
					"end":	3021
				}, {
					"function":	"zif_date_parse",
					"begin":	2712,
					"end":	2725
				}, {
					"function":	"zif_date_parse_from_format",
					"begin":	2731,
					"end":	2744
				}, {
					"function":	"zif_date_sub",
					"begin":	2881,
					"end":	2921
				}, {
					"function":	"zif_date_sun_info",
					"begin":	4066,
					"end":	4166
				}, {
					"function":	"zif_date_sunrise",
					"begin":	4050,
					"end":	4053
				}, {
					"function":	"zif_date_sunset",
					"begin":	4058,
					"end":	4061
				}, {
					"function":	"zif_date_time_set",
					"begin":	3027,
					"end":	3044
				}, {
					"function":	"zif_date_timestamp_get",
					"begin":	3121,
					"end":	3141
				}, {
					"function":	"zif_date_timestamp_set",
					"begin":	3100,
					"end":	3115
				}, {
					"function":	"zif_date_timezone_get",
					"begin":	2927,
					"end":	2959
				}, {
					"function":	"zif_date_timezone_set",
					"begin":	2965,
					"end":	2986
				}, {
					"function":	"zif_getdate",
					"begin":	1733,
					"end":	1764
				}, {
					"function":	"zif_gmdate",
					"begin":	1313,
					"end":	1316
				}, {
					"function":	"zif_gmmktime",
					"begin":	1550,
					"end":	1553
				}, {
					"function":	"zif_gmstrftime",
					"begin":	1669,
					"end":	1672
				}, {
					"function":	"zif_idate",
					"begin":	1321,
					"end":	1347
				}, {
					"function":	"zif_localtime",
					"begin":	1686,
					"end":	1728
				}, {
					"function":	"zif_mktime",
					"begin":	1542,
					"end":	1545
				}, {
					"function":	"zif_strftime",
					"begin":	1661,
					"end":	1664
				}, {
					"function":	"zif_strtotime",
					"begin":	1389,
					"end":	1444
				}, {
					"function":	"zif_time",
					"begin":	1678,
					"end":	1681
				}, {
					"function":	"zif_timezone_abbreviations_list",
					"begin":	3894,
					"end":	3924
				}, {
					"function":	"zif_timezone_identifiers_list",
					"begin":	3842,
					"end":	3876
				}, {
					"function":	"zif_timezone_location_get",
					"begin":	3423,
					"end":	3442
				}, {
					"function":	"zif_timezone_name_from_abbr",
					"begin":	3283,
					"end":	3301
				}, {
					"function":	"zif_timezone_name_get",
					"begin":	3246,
					"end":	3277
				}, {
					"function":	"zif_timezone_offset_get",
					"begin":	3307,
					"end":	3335
				}, {
					"function":	"zif_timezone_open",
					"begin":	3197,
					"end":	3214
				}, {
					"function":	"zif_timezone_transitions_get",
					"begin":	3341,
					"end":	3417
				}, {
					"function":	"zif_timezone_version_get",
					"begin":	3882,
					"end":	3888
				}, {
					"function":	"zim_DateInterval___construct",
					"begin":	3583,
					"end":	3602
				}, {
					"function":	"zim_DatePeriod___construct",
					"begin":	3740,
					"end":	3820
				}, {
					"function":	"zim_DateTimeZone___construct",
					"begin":	3220,
					"end":	3240
				}, {
					"function":	"zim_DateTime___construct",
					"begin":	2499,
					"end":	2511
				}, {
					"function":	"zim_DateTime___set_state",
					"begin":	2563,
					"end":	2578
				}, {
					"function":	"zim_DateTime___wakeup",
					"begin":	2583,
					"end":	2594
				}, {
					"function":	"zm_activate_date",
					"begin":	611,
					"end":	621
				}, {
					"function":	"zm_deactivate_date",
					"begin":	625,
					"end":	642
				}, {
					"function":	"zm_globals_ctor_date",
					"begin":	594,
					"end":	599
				}, {
					"function":	"zm_info_date",
					"begin":	801,
					"end":	813
				}, {
					"function":	"zm_shutdown_date",
					"begin":	788,
					"end":	797
				}, {
					"function":	"zm_startup_date",
					"begin":	742,
					"end":	784
				}, {
					"function":	"zval_addref_p",
					"begin":	386,
					"end":	388
				}, {
					"function":	"zval_delref_p",
					"begin":	390,
					"end":	392
				}, {
					"function":	"zval_from_error_container",
					"begin":	2598,
					"end":	2618
				}, {
					"function":	"zval_isref_p",
					"begin":	394,
					"end":	396
				}, {
					"function":	"zval_refcount_p",
					"begin":	378,
					"end":	380
				}, {
					"function":	"zval_set_isref_p",
					"begin":	398,
					"end":	400
				}, {
					"function":	"zval_set_isref_to_p",
					"begin":	406,
					"end":	408
				}, {
					"function":	"zval_set_refcount_p",
					"begin":	382,
					"end":	384
				}, {
					"function":	"zval_unset_isref_p",
					"begin":	402,
					"end":	404
				}]
		}]
}
