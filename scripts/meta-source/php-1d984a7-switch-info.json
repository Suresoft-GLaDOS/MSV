{
	"switch_num":	28,
	"case_num":	[430, 2, 434, 23, 434, 30, 434, 848, 434, 3, 1, 2, 434, 848, 485, 857, 485, 846, 485, 19, 485, 430, 5, 434, 5, 2, 434, 1],
	"switch_cluster":	[[3, 5, 7, 10, 13, 15, 17, 19, 25, 27], [1, 9, 11, 22, 24], [0, 2, 4, 6, 8, 12, 14, 16, 18, 20, 21, 23, 26], []],
	"priority":	[{
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	428,
			"primary_score":	1999935,
			"second_score":	3110
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	429,
			"primary_score":	1999935,
			"second_score":	3108
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	479,
			"primary_score":	1999935,
			"second_score":	3111
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	485,
			"primary_score":	1999935,
			"second_score":	2
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	575,
			"primary_score":	1999935,
			"second_score":	705325
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	576,
			"primary_score":	1999935,
			"second_score":	705324
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	578,
			"primary_score":	1999935,
			"second_score":	705323
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	579,
			"primary_score":	1999935,
			"second_score":	705120
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	580,
			"primary_score":	1999935,
			"second_score":	705119
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	583,
			"primary_score":	1999935,
			"second_score":	705118
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	590,
			"primary_score":	1999935,
			"second_score":	3107
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	592,
			"primary_score":	1999935,
			"second_score":	3106
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	593,
			"primary_score":	1999935,
			"second_score":	6
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	594,
			"primary_score":	1999935,
			"second_score":	5
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	595,
			"primary_score":	1999935,
			"second_score":	553
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	596,
			"primary_score":	1999935,
			"second_score":	552
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	597,
			"primary_score":	1999935,
			"second_score":	551
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	599,
			"primary_score":	1999935,
			"second_score":	4
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	601,
			"primary_score":	1999935,
			"second_score":	3
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	632,
			"primary_score":	1999935,
			"second_score":	705333
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	633,
			"primary_score":	1999935,
			"second_score":	705332
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	635,
			"primary_score":	1999935,
			"second_score":	705331
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	641,
			"primary_score":	1999935,
			"second_score":	705330
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	642,
			"primary_score":	1999935,
			"second_score":	705329
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	643,
			"primary_score":	1999935,
			"second_score":	705328
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	645,
			"primary_score":	1999935,
			"second_score":	705327
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	652,
			"primary_score":	1999935,
			"second_score":	705326
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	654,
			"primary_score":	1999935,
			"second_score":	705117
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	655,
			"primary_score":	1999935,
			"second_score":	705116
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	656,
			"primary_score":	1999935,
			"second_score":	705115
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	657,
			"primary_score":	1999935,
			"second_score":	705114
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	658,
			"primary_score":	1999935,
			"second_score":	705113
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	663,
			"primary_score":	1999935,
			"second_score":	705112
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	664,
			"primary_score":	1999935,
			"second_score":	705111
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	671,
			"primary_score":	1999935,
			"second_score":	705110
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	672,
			"primary_score":	1999935,
			"second_score":	705109
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	673,
			"primary_score":	1999935,
			"second_score":	705108
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	674,
			"primary_score":	1999935,
			"second_score":	705107
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	675,
			"primary_score":	1999935,
			"second_score":	705106
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	685,
			"primary_score":	1999935,
			"second_score":	706428
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	688,
			"primary_score":	1999935,
			"second_score":	706413
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	689,
			"primary_score":	1999935,
			"second_score":	706412
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	691,
			"primary_score":	1999935,
			"second_score":	706411
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	692,
			"primary_score":	1999935,
			"second_score":	121734
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	697,
			"primary_score":	1999935,
			"second_score":	121733
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	121732
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	704,
			"primary_score":	1999935,
			"second_score":	706410
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	735,
			"primary_score":	1999935,
			"second_score":	706449
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	736,
			"primary_score":	1999935,
			"second_score":	706448
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	742,
			"primary_score":	1999935,
			"second_score":	706447
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	744,
			"primary_score":	1999935,
			"second_score":	706446
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	745,
			"primary_score":	1999935,
			"second_score":	706445
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	746,
			"primary_score":	1999935,
			"second_score":	706444
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	748,
			"primary_score":	1999935,
			"second_score":	706443
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	749,
			"primary_score":	1999935,
			"second_score":	706442
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	753,
			"primary_score":	1999935,
			"second_score":	706441
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	754,
			"primary_score":	1999935,
			"second_score":	706440
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	755,
			"primary_score":	1999935,
			"second_score":	706436
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	758,
			"primary_score":	1999935,
			"second_score":	706435
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	764,
			"primary_score":	1999935,
			"second_score":	706434
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	802,
			"primary_score":	1999935,
			"second_score":	706433
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	804,
			"primary_score":	1999935,
			"second_score":	706432
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	806,
			"primary_score":	1999935,
			"second_score":	706431
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	808,
			"primary_score":	1999935,
			"second_score":	706430
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	809,
			"primary_score":	1999935,
			"second_score":	707794
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	811,
			"primary_score":	1999935,
			"second_score":	706429
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	812,
			"primary_score":	1999935,
			"second_score":	121731
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	816,
			"primary_score":	1999935,
			"second_score":	121730
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	819,
			"primary_score":	1999935,
			"second_score":	121729
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	820,
			"primary_score":	1999935,
			"second_score":	121728
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1020,
			"primary_score":	1999935,
			"second_score":	706409
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1029,
			"primary_score":	1999935,
			"second_score":	706407
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1030,
			"primary_score":	1999935,
			"second_score":	706406
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1032,
			"primary_score":	1999935,
			"second_score":	706405
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1063,
			"primary_score":	1999935,
			"second_score":	706404
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1064,
			"primary_score":	1999935,
			"second_score":	706403
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1065,
			"primary_score":	1999935,
			"second_score":	706402
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1068,
			"primary_score":	1999935,
			"second_score":	706401
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1074,
			"primary_score":	1999935,
			"second_score":	706400
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1075,
			"primary_score":	1999935,
			"second_score":	706399
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1078,
			"primary_score":	1999935,
			"second_score":	706450
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1079,
			"primary_score":	1999935,
			"second_score":	705340
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1080,
			"primary_score":	1999935,
			"second_score":	705339
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1099,
			"primary_score":	1999935,
			"second_score":	705338
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1103,
			"primary_score":	1999935,
			"second_score":	705337
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1104,
			"primary_score":	1999935,
			"second_score":	705336
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1108,
			"primary_score":	1999935,
			"second_score":	705335
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1110,
			"primary_score":	1999935,
			"second_score":	705334
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1113,
			"primary_score":	1999935,
			"second_score":	705105
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1114,
			"primary_score":	1999935,
			"second_score":	705103
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1123,
			"primary_score":	1999935,
			"second_score":	707833
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1124,
			"primary_score":	1999935,
			"second_score":	707832
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1125,
			"primary_score":	1999935,
			"second_score":	707831
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1126,
			"primary_score":	1999935,
			"second_score":	707830
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1127,
			"primary_score":	1999935,
			"second_score":	707829
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1128,
			"primary_score":	1999935,
			"second_score":	707828
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1129,
			"primary_score":	1999935,
			"second_score":	707827
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1130,
			"primary_score":	1999935,
			"second_score":	707826
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1132,
			"primary_score":	1999935,
			"second_score":	707825
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1152,
			"primary_score":	1999935,
			"second_score":	707824
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1203,
			"primary_score":	1999935,
			"second_score":	707823
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1255,
			"primary_score":	1999935,
			"second_score":	707822
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1256,
			"primary_score":	1999935,
			"second_score":	707821
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1257,
			"primary_score":	1999935,
			"second_score":	707820
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1259,
			"primary_score":	1999935,
			"second_score":	705102
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1264,
			"primary_score":	1999935,
			"second_score":	705101
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1267,
			"primary_score":	1999935,
			"second_score":	705100
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1273,
			"primary_score":	1999935,
			"second_score":	705099
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1278,
			"primary_score":	1999935,
			"second_score":	705098
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1303,
			"primary_score":	1999935,
			"second_score":	705097
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1304,
			"primary_score":	1999935,
			"second_score":	705096
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1305,
			"primary_score":	1999935,
			"second_score":	705095
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1311,
			"primary_score":	1999935,
			"second_score":	705094
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1313,
			"primary_score":	1999935,
			"second_score":	705093
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1314,
			"primary_score":	1999935,
			"second_score":	705092
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1320,
			"primary_score":	1999935,
			"second_score":	705091
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1897,
			"primary_score":	1999935,
			"second_score":	121950
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1898,
			"primary_score":	1999935,
			"second_score":	121949
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1901,
			"primary_score":	1999935,
			"second_score":	121948
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1902,
			"primary_score":	1999935,
			"second_score":	121947
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1903,
			"primary_score":	1999935,
			"second_score":	121946
		}, {
			"file":	"TSRM/tsrm_virtual_cwd.c",
			"line":	1904,
			"primary_score":	1999935,
			"second_score":	121945
		}, {
			"file":	"Zend/zend.c",
			"line":	227,
			"primary_score":	1999935,
			"second_score":	149739
		}, {
			"file":	"Zend/zend.c",
			"line":	228,
			"primary_score":	1999935,
			"second_score":	149738
		}, {
			"file":	"Zend/zend.c",
			"line":	229,
			"primary_score":	1999935,
			"second_score":	149737
		}, {
			"file":	"Zend/zend.c",
			"line":	305,
			"primary_score":	1999935,
			"second_score":	149743
		}, {
			"file":	"Zend/zend.c",
			"line":	311,
			"primary_score":	1999935,
			"second_score":	149742
		}, {
			"file":	"Zend/zend.c",
			"line":	312,
			"primary_score":	1999935,
			"second_score":	149741
		}, {
			"file":	"Zend/zend.c",
			"line":	314,
			"primary_score":	1999935,
			"second_score":	149740
		}, {
			"file":	"Zend/zend.c",
			"line":	315,
			"primary_score":	1999935,
			"second_score":	149736
		}, {
			"file":	"Zend/zend.c",
			"line":	318,
			"primary_score":	1999935,
			"second_score":	149735
		}, {
			"file":	"Zend/zend.c",
			"line":	319,
			"primary_score":	1999935,
			"second_score":	119701
		}, {
			"file":	"Zend/zend.c",
			"line":	322,
			"primary_score":	1999935,
			"second_score":	119700
		}, {
			"file":	"Zend/zend.c",
			"line":	324,
			"primary_score":	1999935,
			"second_score":	149734
		}, {
			"file":	"Zend/zend.c",
			"line":	325,
			"primary_score":	1999935,
			"second_score":	149683
		}, {
			"file":	"Zend/zend.c",
			"line":	328,
			"primary_score":	1999935,
			"second_score":	149682
		}, {
			"file":	"Zend/zend.c",
			"line":	797,
			"primary_score":	1999935,
			"second_score":	103518
		}, {
			"file":	"Zend/zend.c",
			"line":	798,
			"primary_score":	1999935,
			"second_score":	103510
		}, {
			"file":	"Zend/zend.c",
			"line":	800,
			"primary_score":	1999935,
			"second_score":	47188
		}, {
			"file":	"Zend/zend.c",
			"line":	801,
			"primary_score":	1999935,
			"second_score":	47169
		}, {
			"file":	"Zend/zend.c",
			"line":	803,
			"primary_score":	1999935,
			"second_score":	14813
		}, {
			"file":	"Zend/zend.c",
			"line":	804,
			"primary_score":	1999935,
			"second_score":	14750
		}, {
			"file":	"Zend/zend.c",
			"line":	806,
			"primary_score":	1999935,
			"second_score":	14749
		}, {
			"file":	"Zend/zend.c",
			"line":	807,
			"primary_score":	1999935,
			"second_score":	14741
		}, {
			"file":	"Zend/zend.c",
			"line":	809,
			"primary_score":	1999935,
			"second_score":	14740
		}, {
			"file":	"Zend/zend.c",
			"line":	810,
			"primary_score":	1999935,
			"second_score":	14739
		}, {
			"file":	"Zend/zend.c",
			"line":	812,
			"primary_score":	1999935,
			"second_score":	14738
		}, {
			"file":	"Zend/zend.c",
			"line":	813,
			"primary_score":	1999935,
			"second_score":	6281
		}, {
			"file":	"Zend/zend.c",
			"line":	814,
			"primary_score":	1999935,
			"second_score":	6280
		}, {
			"file":	"Zend/zend.c",
			"line":	822,
			"primary_score":	1999935,
			"second_score":	6224
		}, {
			"file":	"Zend/zend.c",
			"line":	824,
			"primary_score":	1999935,
			"second_score":	6124
		}, {
			"file":	"Zend/zend.c",
			"line":	898,
			"primary_score":	1999935,
			"second_score":	149417
		}, {
			"file":	"Zend/zend.c",
			"line":	899,
			"primary_score":	1999935,
			"second_score":	149411
		}, {
			"file":	"Zend/zend.c",
			"line":	900,
			"primary_score":	1999935,
			"second_score":	149318
		}, {
			"file":	"Zend/zend.c",
			"line":	907,
			"primary_score":	1999935,
			"second_score":	148488
		}, {
			"file":	"Zend/zend.c",
			"line":	908,
			"primary_score":	1999935,
			"second_score":	148487
		}, {
			"file":	"Zend/zend.c",
			"line":	910,
			"primary_score":	1999935,
			"second_score":	148486
		}, {
			"file":	"Zend/zend.c",
			"line":	911,
			"primary_score":	1999935,
			"second_score":	148480
		}, {
			"file":	"Zend/zend.c",
			"line":	912,
			"primary_score":	1999935,
			"second_score":	148470
		}, {
			"file":	"Zend/zend.c",
			"line":	915,
			"primary_score":	1999935,
			"second_score":	148468
		}, {
			"file":	"Zend/zend.c",
			"line":	917,
			"primary_score":	1999935,
			"second_score":	113669
		}, {
			"file":	"Zend/zend.c",
			"line":	918,
			"primary_score":	1999935,
			"second_score":	113663
		}, {
			"file":	"Zend/zend.c",
			"line":	919,
			"primary_score":	1999935,
			"second_score":	113494
		}, {
			"file":	"Zend/zend.c",
			"line":	921,
			"primary_score":	1999935,
			"second_score":	113492
		}, {
			"file":	"Zend/zend.c",
			"line":	924,
			"primary_score":	1999935,
			"second_score":	113465
		}, {
			"file":	"Zend/zend.c",
			"line":	925,
			"primary_score":	1999935,
			"second_score":	113464
		}, {
			"file":	"Zend/zend.c",
			"line":	943,
			"primary_score":	1999935,
			"second_score":	113460
		}, {
			"file":	"Zend/zend.c",
			"line":	944,
			"primary_score":	1999935,
			"second_score":	113454
		}, {
			"file":	"Zend/zend.c",
			"line":	945,
			"primary_score":	1999935,
			"second_score":	113451
		}, {
			"file":	"Zend/zend.c",
			"line":	1192,
			"primary_score":	1999935,
			"second_score":	704571
		}, {
			"file":	"Zend/zend.c",
			"line":	1193,
			"primary_score":	1999935,
			"second_score":	704570
		}, {
			"file":	"Zend/zend.c",
			"line":	1194,
			"primary_score":	1999935,
			"second_score":	704569
		}, {
			"file":	"Zend/zend.c",
			"line":	1195,
			"primary_score":	1999935,
			"second_score":	704568
		}, {
			"file":	"Zend/zend.c",
			"line":	1196,
			"primary_score":	1999935,
			"second_score":	704567
		}, {
			"file":	"Zend/zend.c",
			"line":	1198,
			"primary_score":	1999935,
			"second_score":	704566
		}, {
			"file":	"Zend/zend.c",
			"line":	1199,
			"primary_score":	1999935,
			"second_score":	704565
		}, {
			"file":	"Zend/zend.c",
			"line":	1200,
			"primary_score":	1999935,
			"second_score":	149465
		}, {
			"file":	"Zend/zend.c",
			"line":	1201,
			"primary_score":	1999935,
			"second_score":	149464
		}, {
			"file":	"Zend/zend.c",
			"line":	1202,
			"primary_score":	1999935,
			"second_score":	149463
		}, {
			"file":	"Zend/zend.c",
			"line":	1204,
			"primary_score":	1999935,
			"second_score":	704559
		}, {
			"file":	"Zend/zend.c",
			"line":	1205,
			"primary_score":	1999935,
			"second_score":	690300
		}, {
			"file":	"Zend/zend.c",
			"line":	1206,
			"primary_score":	1999935,
			"second_score":	690299
		}, {
			"file":	"Zend/zend.c",
			"line":	1207,
			"primary_score":	1999935,
			"second_score":	690298
		}, {
			"file":	"Zend/zend.c",
			"line":	1209,
			"primary_score":	1999935,
			"second_score":	690176
		}, {
			"file":	"Zend/zend.c",
			"line":	1210,
			"primary_score":	1999935,
			"second_score":	690097
		}, {
			"file":	"Zend/zend.c",
			"line":	1211,
			"primary_score":	1999935,
			"second_score":	690096
		}, {
			"file":	"Zend/zend.c",
			"line":	1212,
			"primary_score":	1999935,
			"second_score":	690095
		}, {
			"file":	"Zend/zend.c",
			"line":	1213,
			"primary_score":	1999935,
			"second_score":	149654
		}, {
			"file":	"Zend/zend.c",
			"line":	1214,
			"primary_score":	1999935,
			"second_score":	149652
		}, {
			"file":	"Zend/zend.c",
			"line":	1239,
			"primary_score":	1999935,
			"second_score":	149651
		}, {
			"file":	"Zend/zend.c",
			"line":	1240,
			"primary_score":	1999935,
			"second_score":	149484
		}, {
			"file":	"Zend/zend.c",
			"line":	1248,
			"primary_score":	1999935,
			"second_score":	149462
		}, {
			"file":	"Zend/zend.c",
			"line":	1249,
			"primary_score":	1999935,
			"second_score":	149461
		}, {
			"file":	"Zend/zend.c",
			"line":	1250,
			"primary_score":	1999935,
			"second_score":	149460
		}, {
			"file":	"Zend/zend.c",
			"line":	1252,
			"primary_score":	1999935,
			"second_score":	149459
		}, {
			"file":	"Zend/zend.c",
			"line":	1282,
			"primary_score":	1999935,
			"second_score":	113562
		}, {
			"file":	"Zend/zend.h",
			"line":	379,
			"primary_score":	1999935,
			"second_score":	15289
		}, {
			"file":	"Zend/zend.h",
			"line":	383,
			"primary_score":	1999935,
			"second_score":	533260
		}, {
			"file":	"Zend/zend.h",
			"line":	387,
			"primary_score":	1999935,
			"second_score":	533012
		}, {
			"file":	"Zend/zend.h",
			"line":	391,
			"primary_score":	1999935,
			"second_score":	15291
		}, {
			"file":	"Zend/zend.h",
			"line":	395,
			"primary_score":	1999935,
			"second_score":	150448
		}, {
			"file":	"Zend/zend.h",
			"line":	399,
			"primary_score":	1999935,
			"second_score":	690617
		}, {
			"file":	"Zend/zend.h",
			"line":	403,
			"primary_score":	1999935,
			"second_score":	17648
		}, {
			"file":	"Zend/zend_API.c",
			"line":	307,
			"primary_score":	1999935,
			"second_score":	689345
		}, {
			"file":	"Zend/zend_API.c",
			"line":	308,
			"primary_score":	1999935,
			"second_score":	689344
		}, {
			"file":	"Zend/zend_API.c",
			"line":	309,
			"primary_score":	1999935,
			"second_score":	689343
		}, {
			"file":	"Zend/zend_API.c",
			"line":	312,
			"primary_score":	1999935,
			"second_score":	689342
		}, {
			"file":	"Zend/zend_API.c",
			"line":	313,
			"primary_score":	1999935,
			"second_score":	689341
		}, {
			"file":	"Zend/zend_API.c",
			"line":	315,
			"primary_score":	1999935,
			"second_score":	689340
		}, {
			"file":	"Zend/zend_API.c",
			"line":	320,
			"primary_score":	1999935,
			"second_score":	689339
		}, {
			"file":	"Zend/zend_API.c",
			"line":	325,
			"primary_score":	1999935,
			"second_score":	689338
		}, {
			"file":	"Zend/zend_API.c",
			"line":	416,
			"primary_score":	1999935,
			"second_score":	689337
		}, {
			"file":	"Zend/zend_API.c",
			"line":	417,
			"primary_score":	1999935,
			"second_score":	689336
		}, {
			"file":	"Zend/zend_API.c",
			"line":	418,
			"primary_score":	1999935,
			"second_score":	689335
		}, {
			"file":	"Zend/zend_API.c",
			"line":	431,
			"primary_score":	1999935,
			"second_score":	689334
		}, {
			"file":	"Zend/zend_API.c",
			"line":	432,
			"primary_score":	1999935,
			"second_score":	689333
		}, {
			"file":	"Zend/zend_API.c",
			"line":	438,
			"primary_score":	1999935,
			"second_score":	689331
		}, {
			"file":	"Zend/zend_API.c",
			"line":	439,
			"primary_score":	1999935,
			"second_score":	689330
		}, {
			"file":	"Zend/zend_API.c",
			"line":	440,
			"primary_score":	1999935,
			"second_score":	689329
		}, {
			"file":	"Zend/zend_API.c",
			"line":	453,
			"primary_score":	1999935,
			"second_score":	689328
		}, {
			"file":	"Zend/zend_API.c",
			"line":	643,
			"primary_score":	1999935,
			"second_score":	122837
		}, {
			"file":	"Zend/zend_API.c",
			"line":	644,
			"primary_score":	1999935,
			"second_score":	122836
		}, {
			"file":	"Zend/zend_API.c",
			"line":	647,
			"primary_score":	1999935,
			"second_score":	122835
		}, {
			"file":	"Zend/zend_API.c",
			"line":	650,
			"primary_score":	1999935,
			"second_score":	122834
		}, {
			"file":	"Zend/zend_API.c",
			"line":	656,
			"primary_score":	1999935,
			"second_score":	689327
		}, {
			"file":	"Zend/zend_API.c",
			"line":	658,
			"primary_score":	1999935,
			"second_score":	689326
		}, {
			"file":	"Zend/zend_API.c",
			"line":	664,
			"primary_score":	1999935,
			"second_score":	689348
		}, {
			"file":	"Zend/zend_API.c",
			"line":	665,
			"primary_score":	1999935,
			"second_score":	689347
		}, {
			"file":	"Zend/zend_API.c",
			"line":	667,
			"primary_score":	1999935,
			"second_score":	689346
		}, {
			"file":	"Zend/zend_API.c",
			"line":	668,
			"primary_score":	1999935,
			"second_score":	689325
		}, {
			"file":	"Zend/zend_API.c",
			"line":	688,
			"primary_score":	1999935,
			"second_score":	689324
		}, {
			"file":	"Zend/zend_API.c",
			"line":	694,
			"primary_score":	1999935,
			"second_score":	532809
		}, {
			"file":	"Zend/zend_API.c",
			"line":	695,
			"primary_score":	1999935,
			"second_score":	532808
		}, {
			"file":	"Zend/zend_API.c",
			"line":	696,
			"primary_score":	1999935,
			"second_score":	532807
		}, {
			"file":	"Zend/zend_API.c",
			"line":	697,
			"primary_score":	1999935,
			"second_score":	532806
		}, {
			"file":	"Zend/zend_API.c",
			"line":	698,
			"primary_score":	1999935,
			"second_score":	532805
		}, {
			"file":	"Zend/zend_API.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	532804
		}, {
			"file":	"Zend/zend_API.c",
			"line":	700,
			"primary_score":	1999935,
			"second_score":	532803
		}, {
			"file":	"Zend/zend_API.c",
			"line":	701,
			"primary_score":	1999935,
			"second_score":	532802
		}, {
			"file":	"Zend/zend_API.c",
			"line":	702,
			"primary_score":	1999935,
			"second_score":	532801
		}, {
			"file":	"Zend/zend_API.c",
			"line":	703,
			"primary_score":	1999935,
			"second_score":	532800
		}, {
			"file":	"Zend/zend_API.c",
			"line":	704,
			"primary_score":	1999935,
			"second_score":	532799
		}, {
			"file":	"Zend/zend_API.c",
			"line":	706,
			"primary_score":	1999935,
			"second_score":	532798
		}, {
			"file":	"Zend/zend_API.c",
			"line":	707,
			"primary_score":	1999935,
			"second_score":	532797
		}, {
			"file":	"Zend/zend_API.c",
			"line":	708,
			"primary_score":	1999935,
			"second_score":	532796
		}, {
			"file":	"Zend/zend_API.c",
			"line":	718,
			"primary_score":	1999935,
			"second_score":	689363
		}, {
			"file":	"Zend/zend_API.c",
			"line":	722,
			"primary_score":	1999935,
			"second_score":	122891
		}, {
			"file":	"Zend/zend_API.c",
			"line":	742,
			"primary_score":	1999959,
			"second_score":	532795
		}, {
			"file":	"Zend/zend_API.c",
			"line":	744,
			"primary_score":	1999959,
			"second_score":	532794
		}, {
			"file":	"Zend/zend_API.c",
			"line":	745,
			"primary_score":	1999959,
			"second_score":	532793
		}, {
			"file":	"Zend/zend_API.c",
			"line":	748,
			"primary_score":	1999959,
			"second_score":	532792
		}, {
			"file":	"Zend/zend_API.c",
			"line":	749,
			"primary_score":	1999959,
			"second_score":	532791
		}, {
			"file":	"Zend/zend_API.c",
			"line":	764,
			"primary_score":	1999935,
			"second_score":	532790
		}, {
			"file":	"Zend/zend_API.c",
			"line":	765,
			"primary_score":	1999935,
			"second_score":	532789
		}, {
			"file":	"Zend/zend_API.c",
			"line":	768,
			"primary_score":	1999935,
			"second_score":	532788
		}, {
			"file":	"Zend/zend_API.c",
			"line":	770,
			"primary_score":	1999959,
			"second_score":	532787
		}, {
			"file":	"Zend/zend_API.c",
			"line":	771,
			"primary_score":	1999959,
			"second_score":	532786
		}, {
			"file":	"Zend/zend_API.c",
			"line":	774,
			"primary_score":	1999935,
			"second_score":	532785
		}, {
			"file":	"Zend/zend_API.c",
			"line":	790,
			"primary_score":	1999935,
			"second_score":	532784
		}, {
			"file":	"Zend/zend_API.c",
			"line":	792,
			"primary_score":	1999935,
			"second_score":	532782
		}, {
			"file":	"Zend/zend_API.c",
			"line":	798,
			"primary_score":	1999935,
			"second_score":	532781
		}, {
			"file":	"Zend/zend_API.c",
			"line":	799,
			"primary_score":	1999935,
			"second_score":	532780
		}, {
			"file":	"Zend/zend_API.c",
			"line":	800,
			"primary_score":	1999935,
			"second_score":	532779
		}, {
			"file":	"Zend/zend_API.c",
			"line":	801,
			"primary_score":	1999935,
			"second_score":	122853
		}, {
			"file":	"Zend/zend_API.c",
			"line":	804,
			"primary_score":	1999935,
			"second_score":	532778
		}, {
			"file":	"Zend/zend_API.c",
			"line":	805,
			"primary_score":	1999959,
			"second_score":	532777
		}, {
			"file":	"Zend/zend_API.c",
			"line":	808,
			"primary_score":	1999959,
			"second_score":	532776
		}, {
			"file":	"Zend/zend_API.c",
			"line":	809,
			"primary_score":	1999959,
			"second_score":	532775
		}, {
			"file":	"Zend/zend_API.c",
			"line":	810,
			"primary_score":	1999959,
			"second_score":	532774
		}, {
			"file":	"Zend/zend_API.c",
			"line":	812,
			"primary_score":	1999959,
			"second_score":	532773
		}, {
			"file":	"Zend/zend_API.c",
			"line":	813,
			"primary_score":	1999959,
			"second_score":	532772
		}, {
			"file":	"Zend/zend_API.c",
			"line":	814,
			"primary_score":	1999959,
			"second_score":	532771
		}, {
			"file":	"Zend/zend_API.c",
			"line":	816,
			"primary_score":	1999959,
			"second_score":	532769
		}, {
			"file":	"Zend/zend_API.c",
			"line":	819,
			"primary_score":	1999959,
			"second_score":	532768
		}, {
			"file":	"Zend/zend_API.c",
			"line":	820,
			"primary_score":	1999959,
			"second_score":	532658
		}, {
			"file":	"Zend/zend_API.c",
			"line":	821,
			"primary_score":	1999959,
			"second_score":	532657
		}, {
			"file":	"Zend/zend_API.c",
			"line":	825,
			"primary_score":	1999959,
			"second_score":	532656
		}, {
			"file":	"Zend/zend_API.c",
			"line":	826,
			"primary_score":	1999959,
			"second_score":	532655
		}, {
			"file":	"Zend/zend_API.c",
			"line":	827,
			"primary_score":	1999959,
			"second_score":	532654
		}, {
			"file":	"Zend/zend_API.c",
			"line":	834,
			"primary_score":	1999935,
			"second_score":	689351
		}, {
			"file":	"Zend/zend_API.c",
			"line":	836,
			"primary_score":	1999935,
			"second_score":	689349
		}, {
			"file":	"Zend/zend_API.c",
			"line":	844,
			"primary_score":	1999935,
			"second_score":	689323
		}, {
			"file":	"Zend/zend_API.c",
			"line":	847,
			"primary_score":	1999935,
			"second_score":	532653
		}, {
			"file":	"Zend/zend_API.c",
			"line":	881,
			"primary_score":	1999935,
			"second_score":	532817
		}, {
			"file":	"Zend/zend_API.c",
			"line":	882,
			"primary_score":	1999935,
			"second_score":	532816
		}, {
			"file":	"Zend/zend_API.c",
			"line":	884,
			"primary_score":	1999935,
			"second_score":	532815
		}, {
			"file":	"Zend/zend_API.c",
			"line":	886,
			"primary_score":	1999935,
			"second_score":	532811
		}, {
			"file":	"Zend/zend_API.c",
			"line":	887,
			"primary_score":	1999935,
			"second_score":	532810
		}, {
			"file":	"Zend/zend_API.c",
			"line":	888,
			"primary_score":	1999935,
			"second_score":	532652
		}, {
			"file":	"Zend/zend_API.c",
			"line":	890,
			"primary_score":	1999935,
			"second_score":	532651
		}, {
			"file":	"Zend/zend_API.c",
			"line":	973,
			"primary_score":	1999935,
			"second_score":	534698
		}, {
			"file":	"Zend/zend_API.c",
			"line":	975,
			"primary_score":	1999935,
			"second_score":	534594
		}, {
			"file":	"Zend/zend_API.c",
			"line":	976,
			"primary_score":	1999935,
			"second_score":	534576
		}, {
			"file":	"Zend/zend_API.c",
			"line":	977,
			"primary_score":	1999935,
			"second_score":	534575
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1313,
			"primary_score":	1999978,
			"second_score":	533814
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1315,
			"primary_score":	1999978,
			"second_score":	533813
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1316,
			"primary_score":	1999978,
			"second_score":	533703
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1318,
			"primary_score":	1999978,
			"second_score":	533698
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1368,
			"primary_score":	1999935,
			"second_score":	123577
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1370,
			"primary_score":	1999935,
			"second_score":	123576
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1371,
			"primary_score":	1999935,
			"second_score":	123466
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1373,
			"primary_score":	1999935,
			"second_score":	123351
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1379,
			"primary_score":	1999978,
			"second_score":	534190
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1381,
			"primary_score":	1999978,
			"second_score":	534189
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1382,
			"primary_score":	1999978,
			"second_score":	534079
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1384,
			"primary_score":	1999978,
			"second_score":	533963
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1390,
			"primary_score":	1999978,
			"second_score":	533549
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1779,
			"primary_score":	1999935,
			"second_score":	103509
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1780,
			"primary_score":	1999935,
			"second_score":	103508
		}, {
			"file":	"Zend/zend_API.c",
			"line":	1781,
			"primary_score":	1999935,
			"second_score":	103507
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2171,
			"primary_score":	1999935,
			"second_score":	50133
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2172,
			"primary_score":	1999935,
			"second_score":	50132
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2173,
			"primary_score":	1999935,
			"second_score":	50131
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2175,
			"primary_score":	1999935,
			"second_score":	50130
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2176,
			"primary_score":	1999935,
			"second_score":	50129
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2178,
			"primary_score":	1999935,
			"second_score":	50128
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2179,
			"primary_score":	1999935,
			"second_score":	47249
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2185,
			"primary_score":	1999935,
			"second_score":	47248
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2186,
			"primary_score":	1999935,
			"second_score":	47200
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2187,
			"primary_score":	1999935,
			"second_score":	47199
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2213,
			"primary_score":	1999935,
			"second_score":	50140
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2215,
			"primary_score":	1999935,
			"second_score":	50139
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2220,
			"primary_score":	1999935,
			"second_score":	50138
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2224,
			"primary_score":	1999935,
			"second_score":	53380
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2228,
			"primary_score":	1999935,
			"second_score":	50137
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2232,
			"primary_score":	1999935,
			"second_score":	52697
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2233,
			"primary_score":	1999935,
			"second_score":	53765
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2238,
			"primary_score":	1999935,
			"second_score":	50136
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2239,
			"primary_score":	1999935,
			"second_score":	50135
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2240,
			"primary_score":	1999935,
			"second_score":	50134
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2245,
			"primary_score":	1999935,
			"second_score":	47198
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2284,
			"primary_score":	1999935,
			"second_score":	149281
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2286,
			"primary_score":	1999935,
			"second_score":	149280
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2287,
			"primary_score":	1999935,
			"second_score":	149274
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2290,
			"primary_score":	1999935,
			"second_score":	149273
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2292,
			"primary_score":	1999935,
			"second_score":	149272
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2293,
			"primary_score":	1999935,
			"second_score":	148690
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2295,
			"primary_score":	1999935,
			"second_score":	148689
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2296,
			"primary_score":	1999935,
			"second_score":	148683
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2299,
			"primary_score":	1999935,
			"second_score":	148682
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2305,
			"primary_score":	1999935,
			"second_score":	114692
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2307,
			"primary_score":	1999935,
			"second_score":	114691
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2331,
			"primary_score":	1999935,
			"second_score":	113442
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2335,
			"primary_score":	1999935,
			"second_score":	113441
		}, {
			"file":	"Zend/zend_API.c",
			"line":	2337,
			"primary_score":	1999935,
			"second_score":	113440
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	144,
			"primary_score":	1999935,
			"second_score":	3194
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	297,
			"primary_score":	1999935,
			"second_score":	3197
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	673,
			"primary_score":	1999935,
			"second_score":	112964
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	675,
			"primary_score":	1999935,
			"second_score":	112963
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	676,
			"primary_score":	1999935,
			"second_score":	112962
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	113022
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	701,
			"primary_score":	1999935,
			"second_score":	113021
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	702,
			"primary_score":	1999935,
			"second_score":	113020
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	725,
			"primary_score":	1999935,
			"second_score":	112971
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	726,
			"primary_score":	1999935,
			"second_score":	112970
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	728,
			"primary_score":	1999935,
			"second_score":	112969
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	730,
			"primary_score":	1999935,
			"second_score":	112968
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	731,
			"primary_score":	1999935,
			"second_score":	112967
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	732,
			"primary_score":	1999935,
			"second_score":	112966
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	734,
			"primary_score":	1999935,
			"second_score":	112965
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	735,
			"primary_score":	1999935,
			"second_score":	112961
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	736,
			"primary_score":	1999935,
			"second_score":	112960
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	737,
			"primary_score":	1999935,
			"second_score":	112959
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	738,
			"primary_score":	1999935,
			"second_score":	112958
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	739,
			"primary_score":	1999935,
			"second_score":	112957
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	740,
			"primary_score":	1999935,
			"second_score":	112956
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	741,
			"primary_score":	1999935,
			"second_score":	112955
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	743,
			"primary_score":	1999935,
			"second_score":	116780
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	745,
			"primary_score":	1999935,
			"second_score":	116779
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	746,
			"primary_score":	1999935,
			"second_score":	116778
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	748,
			"primary_score":	1999935,
			"second_score":	116777
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	749,
			"primary_score":	1999935,
			"second_score":	116776
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	750,
			"primary_score":	1999935,
			"second_score":	116775
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	751,
			"primary_score":	1999935,
			"second_score":	116774
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	752,
			"primary_score":	1999935,
			"second_score":	116773
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	753,
			"primary_score":	1999935,
			"second_score":	116772
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	754,
			"primary_score":	1999935,
			"second_score":	116771
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	768,
			"primary_score":	1999935,
			"second_score":	542653
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	770,
			"primary_score":	1999935,
			"second_score":	542652
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	772,
			"primary_score":	1999935,
			"second_score":	542651
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	773,
			"primary_score":	1999935,
			"second_score":	542650
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	774,
			"primary_score":	1999935,
			"second_score":	542649
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	776,
			"primary_score":	1999935,
			"second_score":	542648
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	778,
			"primary_score":	1999935,
			"second_score":	542647
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	779,
			"primary_score":	1999935,
			"second_score":	542646
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	780,
			"primary_score":	1999935,
			"second_score":	542645
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	786,
			"primary_score":	1999935,
			"second_score":	113008
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	787,
			"primary_score":	1999935,
			"second_score":	113007
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	789,
			"primary_score":	1999935,
			"second_score":	113006
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	791,
			"primary_score":	1999935,
			"second_score":	113005
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	792,
			"primary_score":	1999935,
			"second_score":	113004
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	795,
			"primary_score":	1999935,
			"second_score":	113003
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	800,
			"primary_score":	1999935,
			"second_score":	113002
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	801,
			"primary_score":	1999935,
			"second_score":	113001
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	802,
			"primary_score":	1999935,
			"second_score":	113000
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	803,
			"primary_score":	1999935,
			"second_score":	112999
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	805,
			"primary_score":	1999935,
			"second_score":	112995
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	806,
			"primary_score":	1999935,
			"second_score":	112993
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	807,
			"primary_score":	1999935,
			"second_score":	112992
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	808,
			"primary_score":	1999935,
			"second_score":	112991
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	833,
			"primary_score":	1999935,
			"second_score":	542593
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	838,
			"primary_score":	1999935,
			"second_score":	542592
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	839,
			"primary_score":	1999935,
			"second_score":	542591
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	841,
			"primary_score":	1999935,
			"second_score":	542590
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	842,
			"primary_score":	1999935,
			"second_score":	542589
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	843,
			"primary_score":	1999935,
			"second_score":	542588
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	845,
			"primary_score":	1999935,
			"second_score":	542587
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	846,
			"primary_score":	1999935,
			"second_score":	542586
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	890,
			"primary_score":	1999935,
			"second_score":	113346
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	891,
			"primary_score":	1999935,
			"second_score":	113345
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	893,
			"primary_score":	1999935,
			"second_score":	113344
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	894,
			"primary_score":	1999935,
			"second_score":	113343
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	896,
			"primary_score":	1999935,
			"second_score":	113342
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	897,
			"primary_score":	1999935,
			"second_score":	113341
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	904,
			"primary_score":	1999935,
			"second_score":	113340
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	905,
			"primary_score":	1999935,
			"second_score":	113339
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	906,
			"primary_score":	1999935,
			"second_score":	113086
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	907,
			"primary_score":	1999935,
			"second_score":	113085
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	908,
			"primary_score":	1999935,
			"second_score":	113084
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	909,
			"primary_score":	1999935,
			"second_score":	113083
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	911,
			"primary_score":	1999935,
			"second_score":	113082
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	912,
			"primary_score":	1999935,
			"second_score":	113081
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1599,
			"primary_score":	1999935,
			"second_score":	3212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1600,
			"primary_score":	1999935,
			"second_score":	3211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1601,
			"primary_score":	1999935,
			"second_score":	3210
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1602,
			"primary_score":	1999935,
			"second_score":	3209
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1604,
			"primary_score":	1999935,
			"second_score":	3208
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1608,
			"primary_score":	1999935,
			"second_score":	3207
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1614,
			"primary_score":	1999935,
			"second_score":	3206
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1669,
			"primary_score":	1999935,
			"second_score":	3205
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1670,
			"primary_score":	1999935,
			"second_score":	3204
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1671,
			"primary_score":	1999935,
			"second_score":	3203
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1672,
			"primary_score":	1999935,
			"second_score":	3202
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1673,
			"primary_score":	1999935,
			"second_score":	3201
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1674,
			"primary_score":	1999935,
			"second_score":	3200
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1675,
			"primary_score":	1999935,
			"second_score":	3199
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1676,
			"primary_score":	1999935,
			"second_score":	3198
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1678,
			"primary_score":	1999935,
			"second_score":	3196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1679,
			"primary_score":	1999935,
			"second_score":	3195
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1680,
			"primary_score":	1999935,
			"second_score":	3193
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1681,
			"primary_score":	1999935,
			"second_score":	3192
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1684,
			"primary_score":	1999935,
			"second_score":	113352
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1686,
			"primary_score":	1999935,
			"second_score":	113351
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1687,
			"primary_score":	1999935,
			"second_score":	113350
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1692,
			"primary_score":	1999935,
			"second_score":	113349
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1705,
			"primary_score":	1999935,
			"second_score":	113348
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1709,
			"primary_score":	1999935,
			"second_score":	113347
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1710,
			"primary_score":	1999935,
			"second_score":	113080
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1711,
			"primary_score":	1999935,
			"second_score":	113079
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1712,
			"primary_score":	1999935,
			"second_score":	113078
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1717,
			"primary_score":	1999935,
			"second_score":	113077
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1718,
			"primary_score":	1999935,
			"second_score":	113076
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1719,
			"primary_score":	1999935,
			"second_score":	113075
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1721,
			"primary_score":	1999935,
			"second_score":	113074
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1722,
			"primary_score":	1999935,
			"second_score":	113073
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1724,
			"primary_score":	1999935,
			"second_score":	113072
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1725,
			"primary_score":	1999935,
			"second_score":	113071
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1726,
			"primary_score":	1999935,
			"second_score":	113067
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1727,
			"primary_score":	1999935,
			"second_score":	113061
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1729,
			"primary_score":	1999935,
			"second_score":	113043
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1730,
			"primary_score":	1999935,
			"second_score":	113042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1732,
			"primary_score":	1999935,
			"second_score":	112947
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1802,
			"primary_score":	1999935,
			"second_score":	113032
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1803,
			"primary_score":	1999935,
			"second_score":	113031
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1804,
			"primary_score":	1999935,
			"second_score":	113027
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1805,
			"primary_score":	1999935,
			"second_score":	113026
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1807,
			"primary_score":	1999935,
			"second_score":	113025
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1811,
			"primary_score":	1999935,
			"second_score":	113024
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1813,
			"primary_score":	1999935,
			"second_score":	616998
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1814,
			"primary_score":	1999935,
			"second_score":	616997
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1815,
			"primary_score":	1999935,
			"second_score":	616996
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1817,
			"primary_score":	1999935,
			"second_score":	616995
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1818,
			"primary_score":	1999935,
			"second_score":	616994
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1819,
			"primary_score":	1999935,
			"second_score":	616993
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1820,
			"primary_score":	1999935,
			"second_score":	616992
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1822,
			"primary_score":	1999935,
			"second_score":	616991
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1824,
			"primary_score":	1999935,
			"second_score":	616990
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1825,
			"primary_score":	1999935,
			"second_score":	616989
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1827,
			"primary_score":	1999935,
			"second_score":	616988
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1828,
			"primary_score":	1999935,
			"second_score":	616987
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1831,
			"primary_score":	1999935,
			"second_score":	616986
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1834,
			"primary_score":	1999935,
			"second_score":	616985
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1843,
			"primary_score":	1999935,
			"second_score":	616984
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1853,
			"primary_score":	1999935,
			"second_score":	616983
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1854,
			"primary_score":	1999935,
			"second_score":	616982
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1864,
			"primary_score":	1999935,
			"second_score":	113023
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1865,
			"primary_score":	1999935,
			"second_score":	113019
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1870,
			"primary_score":	1999935,
			"second_score":	113018
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1875,
			"primary_score":	1999935,
			"second_score":	113041
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1876,
			"primary_score":	1999935,
			"second_score":	113040
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1877,
			"primary_score":	1999935,
			"second_score":	113039
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1878,
			"primary_score":	1999935,
			"second_score":	113038
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1879,
			"primary_score":	1999935,
			"second_score":	113037
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1880,
			"primary_score":	1999935,
			"second_score":	113036
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1881,
			"primary_score":	1999935,
			"second_score":	113035
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1883,
			"primary_score":	1999935,
			"second_score":	113034
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1884,
			"primary_score":	1999935,
			"second_score":	150051
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1885,
			"primary_score":	1999935,
			"second_score":	150050
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1887,
			"primary_score":	1999935,
			"second_score":	150049
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1891,
			"primary_score":	1999935,
			"second_score":	150048
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1897,
			"primary_score":	1999935,
			"second_score":	150047
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1898,
			"primary_score":	1999935,
			"second_score":	150046
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1899,
			"primary_score":	1999935,
			"second_score":	150045
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1900,
			"primary_score":	1999935,
			"second_score":	150044
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1901,
			"primary_score":	1999935,
			"second_score":	150043
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1902,
			"primary_score":	1999935,
			"second_score":	150042
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1909,
			"primary_score":	1999935,
			"second_score":	532553
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1910,
			"primary_score":	1999935,
			"second_score":	532552
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1912,
			"primary_score":	1999935,
			"second_score":	542609
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1913,
			"primary_score":	1999935,
			"second_score":	542605
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1917,
			"primary_score":	1999935,
			"second_score":	542604
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1925,
			"primary_score":	1999935,
			"second_score":	113033
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1927,
			"primary_score":	1999935,
			"second_score":	113017
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	1944,
			"primary_score":	1999935,
			"second_score":	113016
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2005,
			"primary_score":	1999935,
			"second_score":	113015
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2007,
			"primary_score":	1999935,
			"second_score":	113014
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2008,
			"primary_score":	1999935,
			"second_score":	113013
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2009,
			"primary_score":	1999935,
			"second_score":	113012
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2010,
			"primary_score":	1999935,
			"second_score":	113011
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2011,
			"primary_score":	1999935,
			"second_score":	113009
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2013,
			"primary_score":	1999935,
			"second_score":	112990
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2016,
			"primary_score":	1999935,
			"second_score":	112989
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2018,
			"primary_score":	1999935,
			"second_score":	112988
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2019,
			"primary_score":	1999935,
			"second_score":	542582
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2020,
			"primary_score":	1999935,
			"second_score":	542581
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2022,
			"primary_score":	1999935,
			"second_score":	112987
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2025,
			"primary_score":	1999935,
			"second_score":	112986
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2026,
			"primary_score":	1999935,
			"second_score":	112980
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2027,
			"primary_score":	1999935,
			"second_score":	112979
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2030,
			"primary_score":	1999935,
			"second_score":	112973
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2031,
			"primary_score":	1999935,
			"second_score":	112972
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2037,
			"primary_score":	1999935,
			"second_score":	112954
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2039,
			"primary_score":	1999935,
			"second_score":	112953
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2040,
			"primary_score":	1999935,
			"second_score":	112952
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2041,
			"primary_score":	1999935,
			"second_score":	112951
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2044,
			"primary_score":	1999935,
			"second_score":	112950
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2046,
			"primary_score":	1999935,
			"second_score":	112948
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2052,
			"primary_score":	1999935,
			"second_score":	113406
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2053,
			"primary_score":	1999935,
			"second_score":	113405
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2054,
			"primary_score":	1999935,
			"second_score":	113404
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2056,
			"primary_score":	1999935,
			"second_score":	113403
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2060,
			"primary_score":	1999935,
			"second_score":	113402
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2061,
			"primary_score":	1999935,
			"second_score":	113401
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2062,
			"primary_score":	1999935,
			"second_score":	113400
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2069,
			"primary_score":	1999935,
			"second_score":	113399
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2070,
			"primary_score":	1999935,
			"second_score":	113398
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2071,
			"primary_score":	1999935,
			"second_score":	113397
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2073,
			"primary_score":	1999935,
			"second_score":	113396
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2074,
			"primary_score":	1999935,
			"second_score":	113395
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2075,
			"primary_score":	1999935,
			"second_score":	113394
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2076,
			"primary_score":	1999935,
			"second_score":	113393
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2082,
			"primary_score":	1999935,
			"second_score":	113392
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2086,
			"primary_score":	1999935,
			"second_score":	113733
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2088,
			"primary_score":	1999935,
			"second_score":	113731
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2090,
			"primary_score":	1999935,
			"second_score":	113730
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2091,
			"primary_score":	1999935,
			"second_score":	113729
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2095,
			"primary_score":	1999935,
			"second_score":	113728
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2096,
			"primary_score":	1999935,
			"second_score":	113727
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2097,
			"primary_score":	1999935,
			"second_score":	113726
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2098,
			"primary_score":	1999935,
			"second_score":	113707
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2100,
			"primary_score":	1999935,
			"second_score":	113706
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2104,
			"primary_score":	1999935,
			"second_score":	113705
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2105,
			"primary_score":	1999935,
			"second_score":	113699
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2107,
			"primary_score":	1999935,
			"second_score":	113681
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2112,
			"primary_score":	1999935,
			"second_score":	150066
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2113,
			"primary_score":	1999935,
			"second_score":	150065
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2114,
			"primary_score":	1999935,
			"second_score":	150064
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2115,
			"primary_score":	1999935,
			"second_score":	150063
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2116,
			"primary_score":	1999935,
			"second_score":	150062
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2118,
			"primary_score":	1999935,
			"second_score":	150061
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2119,
			"primary_score":	1999935,
			"second_score":	150060
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2121,
			"primary_score":	1999935,
			"second_score":	545874
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2122,
			"primary_score":	1999935,
			"second_score":	545873
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2123,
			"primary_score":	1999935,
			"second_score":	545872
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2124,
			"primary_score":	1999935,
			"second_score":	545871
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2126,
			"primary_score":	1999935,
			"second_score":	545870
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2130,
			"primary_score":	1999935,
			"second_score":	545869
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2131,
			"primary_score":	1999935,
			"second_score":	690461
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2133,
			"primary_score":	1999935,
			"second_score":	690460
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2134,
			"primary_score":	1999935,
			"second_score":	690459
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2136,
			"primary_score":	1999935,
			"second_score":	690458
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2137,
			"primary_score":	1999935,
			"second_score":	690456
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2138,
			"primary_score":	1999935,
			"second_score":	690455
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2139,
			"primary_score":	1999935,
			"second_score":	125780
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2140,
			"primary_score":	1999935,
			"second_score":	125779
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2144,
			"primary_score":	1999935,
			"second_score":	690454
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2145,
			"primary_score":	1999935,
			"second_score":	690448
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2147,
			"primary_score":	1999935,
			"second_score":	690447
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2150,
			"primary_score":	1999935,
			"second_score":	690441
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2151,
			"primary_score":	1999935,
			"second_score":	690426
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2152,
			"primary_score":	1999935,
			"second_score":	690425
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2154,
			"primary_score":	1999935,
			"second_score":	690423
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2155,
			"primary_score":	1999935,
			"second_score":	690422
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2159,
			"primary_score":	1999935,
			"second_score":	545868
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2160,
			"primary_score":	1999935,
			"second_score":	654673
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2162,
			"primary_score":	1999935,
			"second_score":	654672
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2163,
			"primary_score":	1999935,
			"second_score":	672470
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2164,
			"primary_score":	1999935,
			"second_score":	672469
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2170,
			"primary_score":	1999935,
			"second_score":	672468
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2171,
			"primary_score":	1999935,
			"second_score":	672467
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2172,
			"primary_score":	1999935,
			"second_score":	672466
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2173,
			"primary_score":	1999935,
			"second_score":	672465
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2175,
			"primary_score":	1999935,
			"second_score":	672464
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2180,
			"primary_score":	1999935,
			"second_score":	672463
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2183,
			"primary_score":	1999935,
			"second_score":	672462
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2185,
			"primary_score":	1999935,
			"second_score":	672461
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2186,
			"primary_score":	1999935,
			"second_score":	672460
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2188,
			"primary_score":	1999935,
			"second_score":	672459
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2189,
			"primary_score":	1999935,
			"second_score":	672458
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2190,
			"primary_score":	1999935,
			"second_score":	672457
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2197,
			"primary_score":	1999935,
			"second_score":	672456
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2202,
			"primary_score":	1999935,
			"second_score":	545867
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2204,
			"primary_score":	1999935,
			"second_score":	545866
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2205,
			"primary_score":	1999935,
			"second_score":	147701
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2206,
			"primary_score":	1999935,
			"second_score":	147700
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2207,
			"primary_score":	1999935,
			"second_score":	147698
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2208,
			"primary_score":	1999935,
			"second_score":	122235
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2209,
			"primary_score":	1999935,
			"second_score":	122234
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2211,
			"primary_score":	1999935,
			"second_score":	122233
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2212,
			"primary_score":	1999935,
			"second_score":	122231
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2214,
			"primary_score":	1999935,
			"second_score":	122212
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2218,
			"primary_score":	1999935,
			"second_score":	122211
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2221,
			"primary_score":	1999935,
			"second_score":	122210
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2222,
			"primary_score":	1999935,
			"second_score":	122204
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2223,
			"primary_score":	1999935,
			"second_score":	122203
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2226,
			"primary_score":	1999935,
			"second_score":	122197
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2230,
			"primary_score":	1999935,
			"second_score":	122196
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2233,
			"primary_score":	1999935,
			"second_score":	122178
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2234,
			"primary_score":	1999935,
			"second_score":	122177
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2235,
			"primary_score":	1999935,
			"second_score":	122176
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2236,
			"primary_score":	1999935,
			"second_score":	122175
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2238,
			"primary_score":	1999935,
			"second_score":	122174
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2239,
			"primary_score":	1999935,
			"second_score":	122172
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2246,
			"primary_score":	1999935,
			"second_score":	545865
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2344,
			"primary_score":	1999935,
			"second_score":	545864
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2348,
			"primary_score":	1999935,
			"second_score":	545769
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2350,
			"primary_score":	1999935,
			"second_score":	545768
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2351,
			"primary_score":	1999935,
			"second_score":	545726
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2408,
			"primary_score":	1999935,
			"second_score":	532761
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2410,
			"primary_score":	1999935,
			"second_score":	532760
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2413,
			"primary_score":	1999935,
			"second_score":	532759
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2418,
			"primary_score":	1999935,
			"second_score":	113409
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2420,
			"primary_score":	1999935,
			"second_score":	113408
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2424,
			"primary_score":	1999935,
			"second_score":	113407
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2429,
			"primary_score":	1999935,
			"second_score":	150069
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2431,
			"primary_score":	1999935,
			"second_score":	150068
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2434,
			"primary_score":	1999935,
			"second_score":	150067
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2469,
			"primary_score":	1999935,
			"second_score":	532766
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2470,
			"primary_score":	1999935,
			"second_score":	532765
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2472,
			"primary_score":	1999935,
			"second_score":	532764
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2478,
			"primary_score":	1999935,
			"second_score":	532763
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2482,
			"primary_score":	1999935,
			"second_score":	532762
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2517,
			"primary_score":	1999935,
			"second_score":	532767
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2527,
			"primary_score":	1999935,
			"second_score":	689255
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2538,
			"primary_score":	1999935,
			"second_score":	534449
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2540,
			"primary_score":	1999935,
			"second_score":	534448
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2541,
			"primary_score":	1999935,
			"second_score":	534338
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2544,
			"primary_score":	1999935,
			"second_score":	534337
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2545,
			"primary_score":	1999935,
			"second_score":	534336
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2550,
			"primary_score":	1999935,
			"second_score":	708341
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2551,
			"primary_score":	1999935,
			"second_score":	708340
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2553,
			"primary_score":	1999935,
			"second_score":	708339
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2554,
			"primary_score":	1999935,
			"second_score":	708338
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2555,
			"primary_score":	1999935,
			"second_score":	708234
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2558,
			"primary_score":	1999935,
			"second_score":	708233
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2559,
			"primary_score":	1999935,
			"second_score":	708232
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2564,
			"primary_score":	1999935,
			"second_score":	534073
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2566,
			"primary_score":	1999935,
			"second_score":	534072
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2567,
			"primary_score":	1999935,
			"second_score":	533968
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2570,
			"primary_score":	1999935,
			"second_score":	533967
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2571,
			"primary_score":	1999935,
			"second_score":	533966
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2572,
			"primary_score":	1999935,
			"second_score":	533965
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2578,
			"primary_score":	1999935,
			"second_score":	708019
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2580,
			"primary_score":	1999935,
			"second_score":	708018
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2581,
			"primary_score":	1999935,
			"second_score":	708017
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2584,
			"primary_score":	1999935,
			"second_score":	708016
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2585,
			"primary_score":	1999935,
			"second_score":	708015
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2587,
			"primary_score":	1999935,
			"second_score":	708014
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2588,
			"primary_score":	1999935,
			"second_score":	708013
		}, {
			"file":	"Zend/zend_alloc.c",
			"line":	2625,
			"primary_score":	1999935,
			"second_score":	3213
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	707967
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	96,
			"primary_score":	1999935,
			"second_score":	707966
		}, {
			"file":	"Zend/zend_alloc.h",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	707965
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	346,
			"primary_score":	1999935,
			"second_score":	124147
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1335,
			"primary_score":	1999935,
			"second_score":	121147
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1336,
			"primary_score":	1999935,
			"second_score":	121146
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1337,
			"primary_score":	1999935,
			"second_score":	121145
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1338,
			"primary_score":	1999935,
			"second_score":	121144
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1339,
			"primary_score":	1999935,
			"second_score":	121143
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1341,
			"primary_score":	1999935,
			"second_score":	121142
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1345,
			"primary_score":	1999935,
			"second_score":	121075
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1348,
			"primary_score":	1999935,
			"second_score":	120899
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1349,
			"primary_score":	1999935,
			"second_score":	120898
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1354,
			"primary_score":	1999935,
			"second_score":	120897
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1356,
			"primary_score":	1999935,
			"second_score":	120857
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1362,
			"primary_score":	1999935,
			"second_score":	120838
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1367,
			"primary_score":	1999935,
			"second_score":	120837
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1891,
			"primary_score":	1999935,
			"second_score":	123579
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1892,
			"primary_score":	1999935,
			"second_score":	123578
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1893,
			"primary_score":	1999935,
			"second_score":	123203
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1921,
			"primary_score":	1999935,
			"second_score":	133001
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1923,
			"primary_score":	1999935,
			"second_score":	133000
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1927,
			"primary_score":	1999935,
			"second_score":	132962
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1929,
			"primary_score":	1999935,
			"second_score":	132860
		}, {
			"file":	"Zend/zend_builtin_functions.c",
			"line":	1932,
			"primary_score":	1999935,
			"second_score":	132859
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	131,
			"primary_score":	1999935,
			"second_score":	18912
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	703361
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	703360
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	173,
			"primary_score":	1999935,
			"second_score":	703359
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	703358
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	175,
			"primary_score":	1999935,
			"second_score":	703357
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	176,
			"primary_score":	1999935,
			"second_score":	703356
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	208,
			"primary_score":	1999935,
			"second_score":	690161
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	210,
			"primary_score":	1999935,
			"second_score":	690160
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	229,
			"primary_score":	1999935,
			"second_score":	113662
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	230,
			"primary_score":	1999935,
			"second_score":	113637
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	231,
			"primary_score":	1999935,
			"second_score":	113612
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	232,
			"primary_score":	1999935,
			"second_score":	113608
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	233,
			"primary_score":	1999935,
			"second_score":	113593
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	234,
			"primary_score":	1999935,
			"second_score":	113589
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	113585
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	236,
			"primary_score":	1999935,
			"second_score":	113581
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	237,
			"primary_score":	1999935,
			"second_score":	113502
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	238,
			"primary_score":	1999935,
			"second_score":	113498
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	245,
			"primary_score":	1999935,
			"second_score":	689143
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	246,
			"primary_score":	1999935,
			"second_score":	689142
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	248,
			"primary_score":	1999935,
			"second_score":	689141
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	252,
			"primary_score":	1999935,
			"second_score":	689126
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	253,
			"primary_score":	1999935,
			"second_score":	689098
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	254,
			"primary_score":	1999935,
			"second_score":	688966
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	255,
			"primary_score":	1999935,
			"second_score":	688965
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	262,
			"primary_score":	1999935,
			"second_score":	533337
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	269,
			"primary_score":	1999935,
			"second_score":	689269
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	283,
			"primary_score":	1999935,
			"second_score":	689822
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	290,
			"primary_score":	1999935,
			"second_score":	691863
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	296,
			"primary_score":	1999945,
			"second_score":	692288
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	297,
			"primary_score":	1999945,
			"second_score":	692287
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	299,
			"primary_score":	1999945,
			"second_score":	692275
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	300,
			"primary_score":	1999945,
			"second_score":	692272
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	304,
			"primary_score":	1999945,
			"second_score":	692271
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	305,
			"primary_score":	1999945,
			"second_score":	692250
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	307,
			"primary_score":	1999965,
			"second_score":	692273
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	309,
			"primary_score":	1999945,
			"second_score":	695394
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	310,
			"primary_score":	1999945,
			"second_score":	695393
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	311,
			"primary_score":	1999945,
			"second_score":	695392
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	312,
			"primary_score":	1999945,
			"second_score":	699422
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	313,
			"primary_score":	1999945,
			"second_score":	699421
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	315,
			"primary_score":	1999945,
			"second_score":	695391
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	316,
			"primary_score":	1999945,
			"second_score":	695325
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	317,
			"primary_score":	1999945,
			"second_score":	695324
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	318,
			"primary_score":	1999945,
			"second_score":	695323
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	335,
			"primary_score":	1999935,
			"second_score":	690625
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	690624
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	337,
			"primary_score":	1999935,
			"second_score":	690623
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	338,
			"primary_score":	1999935,
			"second_score":	700420
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	339,
			"primary_score":	1999935,
			"second_score":	700419
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	341,
			"primary_score":	1999935,
			"second_score":	690622
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	342,
			"primary_score":	1999935,
			"second_score":	690961
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	343,
			"primary_score":	1999935,
			"second_score":	690960
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	345,
			"primary_score":	1999935,
			"second_score":	690959
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	348,
			"primary_score":	1999935,
			"second_score":	690621
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	349,
			"primary_score":	1999935,
			"second_score":	690620
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	350,
			"primary_score":	1999935,
			"second_score":	690618
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	351,
			"primary_score":	1999935,
			"second_score":	690616
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	352,
			"primary_score":	1999935,
			"second_score":	690615
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	353,
			"primary_score":	1999935,
			"second_score":	690614
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	546,
			"primary_score":	1999935,
			"second_score":	692084
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	548,
			"primary_score":	1999935,
			"second_score":	692083
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	632,
			"primary_score":	1999945,
			"second_score":	692321
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	633,
			"primary_score":	1999945,
			"second_score":	692320
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	634,
			"primary_score":	1999945,
			"second_score":	692319
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	636,
			"primary_score":	1999945,
			"second_score":	692318
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	637,
			"primary_score":	1999945,
			"second_score":	692317
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	640,
			"primary_score":	1999945,
			"second_score":	692316
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	645,
			"primary_score":	1999945,
			"second_score":	692290
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	646,
			"primary_score":	1999945,
			"second_score":	692289
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	647,
			"primary_score":	1999945,
			"second_score":	692249
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	648,
			"primary_score":	1999945,
			"second_score":	692248
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	649,
			"primary_score":	1999945,
			"second_score":	692247
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	685,
			"primary_score":	1999945,
			"second_score":	692322
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	841,
			"primary_score":	1999935,
			"second_score":	690980
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	843,
			"primary_score":	1999935,
			"second_score":	690970
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	844,
			"primary_score":	1999935,
			"second_score":	690969
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	845,
			"primary_score":	1999935,
			"second_score":	690884
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	897,
			"primary_score":	1999945,
			"second_score":	693259
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	898,
			"primary_score":	1999945,
			"second_score":	693258
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	900,
			"primary_score":	1999945,
			"second_score":	693257
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	927,
			"primary_score":	1999945,
			"second_score":	693256
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	929,
			"primary_score":	1999945,
			"second_score":	693218
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	930,
			"primary_score":	1999945,
			"second_score":	693216
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	932,
			"primary_score":	1999945,
			"second_score":	693206
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	933,
			"primary_score":	1999945,
			"second_score":	693205
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	989,
			"primary_score":	1999945,
			"second_score":	693204
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	990,
			"primary_score":	1999945,
			"second_score":	693203
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	991,
			"primary_score":	1999945,
			"second_score":	693199
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	992,
			"primary_score":	1999945,
			"second_score":	693195
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	993,
			"primary_score":	1999945,
			"second_score":	693194
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	994,
			"primary_score":	1999945,
			"second_score":	693192
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1251,
			"primary_score":	1999945,
			"second_score":	693263
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1253,
			"primary_score":	1999945,
			"second_score":	693262
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1256,
			"primary_score":	1999945,
			"second_score":	693261
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1264,
			"primary_score":	1999935,
			"second_score":	691766
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1266,
			"primary_score":	1999935,
			"second_score":	691765
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1267,
			"primary_score":	1999935,
			"second_score":	691758
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1273,
			"primary_score":	1999935,
			"second_score":	691672
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1274,
			"primary_score":	1999935,
			"second_score":	691671
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1275,
			"primary_score":	1999935,
			"second_score":	691670
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1276,
			"primary_score":	1999935,
			"second_score":	691669
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1277,
			"primary_score":	1999935,
			"second_score":	691668
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1279,
			"primary_score":	1999935,
			"second_score":	691667
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1281,
			"primary_score":	1999935,
			"second_score":	691663
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1285,
			"primary_score":	1999935,
			"second_score":	691662
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1362,
			"primary_score":	1999935,
			"second_score":	691661
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1363,
			"primary_score":	1999935,
			"second_score":	691657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1421,
			"primary_score":	1999935,
			"second_score":	691567
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1427,
			"primary_score":	1999936,
			"second_score":	691566
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1428,
			"primary_score":	1999936,
			"second_score":	691565
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1430,
			"primary_score":	1999936,
			"second_score":	691564
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1433,
			"primary_score":	1999936,
			"second_score":	691563
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1435,
			"primary_score":	1999936,
			"second_score":	691562
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1446,
			"primary_score":	1999936,
			"second_score":	691561
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1917,
			"primary_score":	1999935,
			"second_score":	692726
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1918,
			"primary_score":	1999935,
			"second_score":	692725
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1919,
			"primary_score":	1999935,
			"second_score":	692724
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1921,
			"primary_score":	1999935,
			"second_score":	692723
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1923,
			"primary_score":	1999935,
			"second_score":	692714
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1933,
			"primary_score":	1999935,
			"second_score":	692713
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1934,
			"primary_score":	1999935,
			"second_score":	692628
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1941,
			"primary_score":	1999935,
			"second_score":	692603
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1942,
			"primary_score":	1999935,
			"second_score":	692584
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1944,
			"primary_score":	1999935,
			"second_score":	692583
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1945,
			"primary_score":	1999935,
			"second_score":	692557
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	1946,
			"primary_score":	1999935,
			"second_score":	692553
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2047,
			"primary_score":	1999935,
			"second_score":	692722
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2048,
			"primary_score":	1999935,
			"second_score":	692721
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2049,
			"primary_score":	1999935,
			"second_score":	692720
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2050,
			"primary_score":	1999935,
			"second_score":	692719
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2052,
			"primary_score":	1999935,
			"second_score":	692718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2059,
			"primary_score":	1999935,
			"second_score":	692717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2063,
			"primary_score":	1999935,
			"second_score":	692716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2083,
			"primary_score":	1999935,
			"second_score":	692715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2315,
			"primary_score":	1999935,
			"second_score":	690336
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2319,
			"primary_score":	1999935,
			"second_score":	690335
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2414,
			"primary_score":	1999935,
			"second_score":	691946
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2416,
			"primary_score":	1999935,
			"second_score":	691945
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2423,
			"primary_score":	1999935,
			"second_score":	691944
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2424,
			"primary_score":	1999935,
			"second_score":	691934
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2425,
			"primary_score":	1999935,
			"second_score":	691933
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2426,
			"primary_score":	1999935,
			"second_score":	691932
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2427,
			"primary_score":	1999935,
			"second_score":	691869
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2428,
			"primary_score":	1999935,
			"second_score":	691866
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2435,
			"primary_score":	1999935,
			"second_score":	691864
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2436,
			"primary_score":	1999935,
			"second_score":	691862
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2437,
			"primary_score":	1999935,
			"second_score":	691861
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2438,
			"primary_score":	1999935,
			"second_score":	691856
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2440,
			"primary_score":	1999935,
			"second_score":	691855
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2441,
			"primary_score":	1999935,
			"second_score":	691833
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2447,
			"primary_score":	1999935,
			"second_score":	692099
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2448,
			"primary_score":	1999935,
			"second_score":	692098
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2449,
			"primary_score":	1999935,
			"second_score":	692097
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2450,
			"primary_score":	1999935,
			"second_score":	692096
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2451,
			"primary_score":	1999935,
			"second_score":	692095
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2453,
			"primary_score":	1999935,
			"second_score":	692094
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2454,
			"primary_score":	1999935,
			"second_score":	692090
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2456,
			"primary_score":	1999935,
			"second_score":	692089
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2471,
			"primary_score":	1999935,
			"second_score":	692088
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2472,
			"primary_score":	1999935,
			"second_score":	692087
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2485,
			"primary_score":	1999935,
			"second_score":	692086
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2491,
			"primary_score":	1999935,
			"second_score":	692085
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2493,
			"primary_score":	1999935,
			"second_score":	134770
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2494,
			"primary_score":	1999935,
			"second_score":	134769
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2495,
			"primary_score":	1999935,
			"second_score":	692082
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2499,
			"primary_score":	1999935,
			"second_score":	692081
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2512,
			"primary_score":	1999935,
			"second_score":	692080
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2513,
			"primary_score":	1999935,
			"second_score":	692079
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2516,
			"primary_score":	1999935,
			"second_score":	134728
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2519,
			"primary_score":	1999952,
			"second_score":	692078
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2523,
			"primary_score":	1999952,
			"second_score":	692040
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2530,
			"primary_score":	1999935,
			"second_score":	692039
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2532,
			"primary_score":	1999935,
			"second_score":	692029
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2533,
			"primary_score":	1999935,
			"second_score":	134716
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2534,
			"primary_score":	1999935,
			"second_score":	134715
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2539,
			"primary_score":	1999935,
			"second_score":	692028
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2540,
			"primary_score":	1999935,
			"second_score":	692027
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2545,
			"primary_score":	1999935,
			"second_score":	692026
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2546,
			"primary_score":	1999935,
			"second_score":	692025
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2547,
			"primary_score":	1999935,
			"second_score":	692021
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2548,
			"primary_score":	1999935,
			"second_score":	692020
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2601,
			"primary_score":	1999935,
			"second_score":	690657
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2602,
			"primary_score":	1999935,
			"second_score":	690656
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2604,
			"primary_score":	1999935,
			"second_score":	690655
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2612,
			"primary_score":	1999935,
			"second_score":	690654
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2618,
			"primary_score":	1999935,
			"second_score":	690652
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2619,
			"primary_score":	1999935,
			"second_score":	690648
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2622,
			"primary_score":	1999935,
			"second_score":	690644
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2623,
			"primary_score":	1999935,
			"second_score":	690642
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2628,
			"primary_score":	1999935,
			"second_score":	690641
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2630,
			"primary_score":	1999935,
			"second_score":	690631
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2632,
			"primary_score":	1999935,
			"second_score":	690630
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2633,
			"primary_score":	1999935,
			"second_score":	690629
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2635,
			"primary_score":	1999935,
			"second_score":	690613
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2639,
			"primary_score":	1999935,
			"second_score":	119587
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2640,
			"primary_score":	1999935,
			"second_score":	119586
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	2643,
			"primary_score":	1999935,
			"second_score":	690612
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5070,
			"primary_score":	1999935,
			"second_score":	137335
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5072,
			"primary_score":	1999935,
			"second_score":	137334
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5085,
			"primary_score":	1999935,
			"second_score":	137333
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5097,
			"primary_score":	1999935,
			"second_score":	137306
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5100,
			"primary_score":	1999935,
			"second_score":	137305
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5105,
			"primary_score":	1999935,
			"second_score":	137304
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5113,
			"primary_score":	1999935,
			"second_score":	137336
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5115,
			"primary_score":	1999935,
			"second_score":	137303
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5116,
			"primary_score":	1999935,
			"second_score":	137302
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5117,
			"primary_score":	1999935,
			"second_score":	137276
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5118,
			"primary_score":	1999935,
			"second_score":	137275
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5119,
			"primary_score":	1999935,
			"second_score":	137274
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5120,
			"primary_score":	1999935,
			"second_score":	137240
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5121,
			"primary_score":	1999935,
			"second_score":	137237
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5129,
			"primary_score":	1999935,
			"second_score":	137353
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5130,
			"primary_score":	1999935,
			"second_score":	137352
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5131,
			"primary_score":	1999935,
			"second_score":	137351
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5132,
			"primary_score":	1999935,
			"second_score":	137350
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5133,
			"primary_score":	1999935,
			"second_score":	137349
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5135,
			"primary_score":	1999935,
			"second_score":	137348
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5182,
			"primary_score":	1999935,
			"second_score":	137347
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5203,
			"primary_score":	1999935,
			"second_score":	137346
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5205,
			"primary_score":	1999935,
			"second_score":	137337
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	5206,
			"primary_score":	1999935,
			"second_score":	137236
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6096,
			"primary_score":	1999935,
			"second_score":	158620
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6097,
			"primary_score":	1999935,
			"second_score":	158618
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6099,
			"primary_score":	1999935,
			"second_score":	158617
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6101,
			"primary_score":	1999935,
			"second_score":	158607
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6102,
			"primary_score":	1999935,
			"second_score":	158606
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6103,
			"primary_score":	1999935,
			"second_score":	158602
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6104,
			"primary_score":	1999935,
			"second_score":	158601
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6105,
			"primary_score":	1999935,
			"second_score":	158600
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6107,
			"primary_score":	1999935,
			"second_score":	158595
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6113,
			"primary_score":	1999935,
			"second_score":	157705
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6115,
			"primary_score":	1999935,
			"second_score":	157695
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6117,
			"primary_score":	1999935,
			"second_score":	157693
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6118,
			"primary_score":	1999935,
			"second_score":	157692
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6119,
			"primary_score":	1999935,
			"second_score":	157691
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6120,
			"primary_score":	1999935,
			"second_score":	157689
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6121,
			"primary_score":	1999935,
			"second_score":	157685
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6123,
			"primary_score":	1999935,
			"second_score":	157684
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6124,
			"primary_score":	1999935,
			"second_score":	157679
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6126,
			"primary_score":	1999935,
			"second_score":	157677
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6127,
			"primary_score":	1999935,
			"second_score":	157667
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6128,
			"primary_score":	1999935,
			"second_score":	157666
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6129,
			"primary_score":	1999935,
			"second_score":	157665
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6135,
			"primary_score":	1999935,
			"second_score":	157146
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6137,
			"primary_score":	1999935,
			"second_score":	157136
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6138,
			"primary_score":	1999935,
			"second_score":	157135
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6139,
			"primary_score":	1999935,
			"second_score":	157131
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6140,
			"primary_score":	1999935,
			"second_score":	157127
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6142,
			"primary_score":	1999935,
			"second_score":	157126
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6144,
			"primary_score":	1999935,
			"second_score":	157124
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6146,
			"primary_score":	1999935,
			"second_score":	157119
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6152,
			"primary_score":	1999935,
			"second_score":	691364
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6154,
			"primary_score":	1999935,
			"second_score":	691363
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6155,
			"primary_score":	1999935,
			"second_score":	691362
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6168,
			"primary_score":	1999935,
			"second_score":	692556
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6170,
			"primary_score":	1999935,
			"second_score":	692555
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6171,
			"primary_score":	1999935,
			"second_score":	692554
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6184,
			"primary_score":	1999935,
			"second_score":	691831
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6186,
			"primary_score":	1999935,
			"second_score":	691830
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6187,
			"primary_score":	1999935,
			"second_score":	691829
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6200,
			"primary_score":	1999935,
			"second_score":	690818
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6213,
			"primary_score":	1999935,
			"second_score":	692315
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6215,
			"primary_score":	1999935,
			"second_score":	692314
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6219,
			"primary_score":	1999935,
			"second_score":	711095
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6221,
			"primary_score":	1999945,
			"second_score":	692291
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6259,
			"primary_score":	1999935,
			"second_score":	690750
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6261,
			"primary_score":	1999935,
			"second_score":	690749
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6262,
			"primary_score":	1999935,
			"second_score":	690748
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6263,
			"primary_score":	1999935,
			"second_score":	690747
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6266,
			"primary_score":	1999935,
			"second_score":	690746
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6268,
			"primary_score":	1999935,
			"second_score":	690745
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6269,
			"primary_score":	1999935,
			"second_score":	690722
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6278,
			"primary_score":	1999935,
			"second_score":	691001
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6280,
			"primary_score":	1999935,
			"second_score":	691000
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6283,
			"primary_score":	1999935,
			"second_score":	690999
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6284,
			"primary_score":	1999935,
			"second_score":	690998
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6293,
			"primary_score":	1999935,
			"second_score":	690721
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6294,
			"primary_score":	1999935,
			"second_score":	690718
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6295,
			"primary_score":	1999935,
			"second_score":	690717
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6610,
			"primary_score":	1999935,
			"second_score":	690794
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6618,
			"primary_score":	1999935,
			"second_score":	690700
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6619,
			"primary_score":	1999935,
			"second_score":	690699
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6624,
			"primary_score":	1999935,
			"second_score":	690698
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6634,
			"primary_score":	1999935,
			"second_score":	690702
		}, {
			"file":	"Zend/zend_compile.c",
			"line":	6635,
			"primary_score":	1999935,
			"second_score":	690701
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	32,
			"primary_score":	1999935,
			"second_score":	6291
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	33,
			"primary_score":	1999935,
			"second_score":	114078
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	35,
			"primary_score":	1999935,
			"second_score":	6290
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	60,
			"primary_score":	1999935,
			"second_score":	113860
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	114594
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	114593
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	452,
			"primary_score":	1999935,
			"second_score":	708009
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	453,
			"primary_score":	1999935,
			"second_score":	708008
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	454,
			"primary_score":	1999935,
			"second_score":	708007
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	460,
			"primary_score":	1999935,
			"second_score":	708006
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	467,
			"primary_score":	1999935,
			"second_score":	708005
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	468,
			"primary_score":	1999935,
			"second_score":	708004
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	474,
			"primary_score":	1999935,
			"second_score":	708003
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	479,
			"primary_score":	1999935,
			"second_score":	708002
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	495,
			"primary_score":	1999935,
			"second_score":	707937
		}, {
			"file":	"Zend/zend_constants.c",
			"line":	498,
			"primary_score":	1999935,
			"second_score":	707936
		}, {
			"file":	"Zend/zend_exceptions.c",
			"line":	73,
			"primary_score":	1999935,
			"second_score":	149653
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	71,
			"primary_score":	1999935,
			"second_score":	533263
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	72,
			"primary_score":	1999935,
			"second_score":	533261
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	73,
			"primary_score":	1999935,
			"second_score":	533259
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	74,
			"primary_score":	1999935,
			"second_score":	533257
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	177,
			"primary_score":	1999935,
			"second_score":	122280
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	182,
			"primary_score":	1999935,
			"second_score":	533265
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	184,
			"primary_score":	1999935,
			"second_score":	533264
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	185,
			"primary_score":	1999935,
			"second_score":	533256
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	273,
			"primary_score":	1999945,
			"second_score":	533251
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	275,
			"primary_score":	1999945,
			"second_score":	533250
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	279,
			"primary_score":	1999945,
			"second_score":	533249
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	280,
			"primary_score":	1999945,
			"second_score":	533240
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	281,
			"primary_score":	1999945,
			"second_score":	533238
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	283,
			"primary_score":	1999945,
			"second_score":	533091
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	298,
			"primary_score":	1999945,
			"second_score":	533019
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	300,
			"primary_score":	1999945,
			"second_score":	533018
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	303,
			"primary_score":	1999945,
			"second_score":	533017
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	439,
			"primary_score":	1999945,
			"second_score":	533254
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	441,
			"primary_score":	1999945,
			"second_score":	533253
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	442,
			"primary_score":	1999945,
			"second_score":	533252
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	602,
			"primary_score":	1999935,
			"second_score":	532832
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	603,
			"primary_score":	1999935,
			"second_score":	532831
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	604,
			"primary_score":	1999935,
			"second_score":	532830
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	606,
			"primary_score":	1999935,
			"second_score":	532829
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	611,
			"primary_score":	1999935,
			"second_score":	532828
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	613,
			"primary_score":	1999935,
			"second_score":	532827
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	629,
			"primary_score":	1999935,
			"second_score":	532826
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	638,
			"primary_score":	1999935,
			"second_score":	532825
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	820,
			"primary_score":	1999968,
			"second_score":	689683
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	821,
			"primary_score":	1999968,
			"second_score":	689682
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	823,
			"primary_score":	1999968,
			"second_score":	689681
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	829,
			"primary_score":	1999968,
			"second_score":	689680
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	832,
			"primary_score":	1999968,
			"second_score":	689677
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	833,
			"primary_score":	1999968,
			"second_score":	689675
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	834,
			"primary_score":	1999968,
			"second_score":	689673
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	835,
			"primary_score":	1999968,
			"second_score":	689649
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	836,
			"primary_score":	1999968,
			"second_score":	689641
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	837,
			"primary_score":	1999968,
			"second_score":	689635
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	838,
			"primary_score":	1999968,
			"second_score":	689634
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	856,
			"primary_score":	1999962,
			"second_score":	533085
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	857,
			"primary_score":	1999962,
			"second_score":	533084
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	859,
			"primary_score":	1999962,
			"second_score":	533083
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	865,
			"primary_score":	1999962,
			"second_score":	533082
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	866,
			"primary_score":	1999962,
			"second_score":	533080
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	884,
			"primary_score":	1999962,
			"second_score":	533078
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	885,
			"primary_score":	1999962,
			"second_score":	533076
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	886,
			"primary_score":	1999962,
			"second_score":	533074
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	893,
			"primary_score":	1999962,
			"second_score":	533072
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	894,
			"primary_score":	1999962,
			"second_score":	533071
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	895,
			"primary_score":	1999962,
			"second_score":	533069
		}, {
			"file":	"Zend/zend_execute.c",
			"line":	896,
			"primary_score":	1999962,
			"second_score":	533067
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	82,
			"primary_score":	1999935,
			"second_score":	149773
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	83,
			"primary_score":	1999935,
			"second_score":	149811
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	85,
			"primary_score":	1999935,
			"second_score":	149810
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	86,
			"primary_score":	1999935,
			"second_score":	149809
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	87,
			"primary_score":	1999935,
			"second_score":	149807
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	88,
			"primary_score":	1999935,
			"second_score":	149804
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	91,
			"primary_score":	1999935,
			"second_score":	149771
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	149770
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	94,
			"primary_score":	1999935,
			"second_score":	149768
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	149766
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	120760
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	120759
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	113,
			"primary_score":	1999935,
			"second_score":	120758
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	155,
			"primary_score":	1999935,
			"second_score":	120757
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	199,
			"primary_score":	1999935,
			"second_score":	114689
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	114688
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	202,
			"primary_score":	1999935,
			"second_score":	114687
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	114686
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	204,
			"primary_score":	1999935,
			"second_score":	114641
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	217,
			"primary_score":	1999935,
			"second_score":	532770
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	533010
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	223,
			"primary_score":	1999935,
			"second_score":	533008
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	245,
			"primary_score":	1999935,
			"second_score":	690088
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	247,
			"primary_score":	1999935,
			"second_score":	690087
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	250,
			"primary_score":	1999935,
			"second_score":	690086
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	265,
			"primary_score":	1999935,
			"second_score":	690085
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	267,
			"primary_score":	1999935,
			"second_score":	690083
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	268,
			"primary_score":	1999935,
			"second_score":	690082
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	269,
			"primary_score":	1999935,
			"second_score":	690081
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	274,
			"primary_score":	1999935,
			"second_score":	149758
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	280,
			"primary_score":	1999935,
			"second_score":	149757
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	286,
			"primary_score":	1999935,
			"second_score":	149662
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	293,
			"primary_score":	1999935,
			"second_score":	149661
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	297,
			"primary_score":	1999935,
			"second_score":	149660
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	305,
			"primary_score":	1999935,
			"second_score":	532959
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	327,
			"primary_score":	1999935,
			"second_score":	532958
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	328,
			"primary_score":	1999935,
			"second_score":	532957
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	333,
			"primary_score":	1999935,
			"second_score":	149779
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	334,
			"primary_score":	1999935,
			"second_score":	149778
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	149777
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	337,
			"primary_score":	1999935,
			"second_score":	149776
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	338,
			"primary_score":	1999935,
			"second_score":	149775
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	339,
			"primary_score":	1999935,
			"second_score":	149774
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	341,
			"primary_score":	1999935,
			"second_score":	149759
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	367,
			"primary_score":	1999935,
			"second_score":	532969
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	369,
			"primary_score":	1999935,
			"second_score":	532968
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	371,
			"primary_score":	1999935,
			"second_score":	532963
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	372,
			"primary_score":	1999935,
			"second_score":	532962
		}, {
			"file":	"Zend/zend_execute.h",
			"line":	373,
			"primary_score":	1999935,
			"second_score":	532961
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	107,
			"primary_score":	1999935,
			"second_score":	114628
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	119,
			"primary_score":	1999935,
			"second_score":	114612
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	149334
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	206,
			"primary_score":	1999935,
			"second_score":	149333
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	213,
			"primary_score":	1999935,
			"second_score":	149410
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	214,
			"primary_score":	1999935,
			"second_score":	149404
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	215,
			"primary_score":	1999935,
			"second_score":	149403
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	149402
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	217,
			"primary_score":	1999935,
			"second_score":	149399
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	219,
			"primary_score":	1999935,
			"second_score":	149323
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	223,
			"primary_score":	1999935,
			"second_score":	149320
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	229,
			"primary_score":	1999935,
			"second_score":	148467
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	246,
			"primary_score":	1999935,
			"second_score":	148461
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	247,
			"primary_score":	1999935,
			"second_score":	148458
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	248,
			"primary_score":	1999935,
			"second_score":	114774
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	250,
			"primary_score":	1999935,
			"second_score":	114772
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	251,
			"primary_score":	1999935,
			"second_score":	114766
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	254,
			"primary_score":	1999935,
			"second_score":	114765
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	261,
			"primary_score":	1999935,
			"second_score":	114764
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	268,
			"primary_score":	1999935,
			"second_score":	114763
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	269,
			"primary_score":	1999935,
			"second_score":	114759
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	270,
			"primary_score":	1999935,
			"second_score":	114754
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	271,
			"primary_score":	1999935,
			"second_score":	114745
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	272,
			"primary_score":	1999935,
			"second_score":	114736
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	274,
			"primary_score":	1999935,
			"second_score":	114734
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	284,
			"primary_score":	1999935,
			"second_score":	114728
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	288,
			"primary_score":	1999935,
			"second_score":	114727
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	114710
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	290,
			"primary_score":	1999935,
			"second_score":	114693
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	293,
			"primary_score":	1999935,
			"second_score":	114690
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	295,
			"primary_score":	1999935,
			"second_score":	114640
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	298,
			"primary_score":	1999935,
			"second_score":	114637
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	302,
			"primary_score":	1999935,
			"second_score":	114636
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	303,
			"primary_score":	1999935,
			"second_score":	114620
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	306,
			"primary_score":	1999935,
			"second_score":	114604
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	311,
			"primary_score":	1999935,
			"second_score":	114603
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	313,
			"primary_score":	1999935,
			"second_score":	114601
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	314,
			"primary_score":	1999935,
			"second_score":	114595
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	315,
			"primary_score":	1999935,
			"second_score":	113852
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	317,
			"primary_score":	1999935,
			"second_score":	113850
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	322,
			"primary_score":	1999935,
			"second_score":	113844
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	324,
			"primary_score":	1999935,
			"second_score":	113775
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	325,
			"primary_score":	1999935,
			"second_score":	113754
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	326,
			"primary_score":	1999935,
			"second_score":	113750
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	327,
			"primary_score":	1999935,
			"second_score":	113748
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	328,
			"primary_score":	1999935,
			"second_score":	113746
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	329,
			"primary_score":	1999935,
			"second_score":	113678
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	333,
			"primary_score":	1999935,
			"second_score":	113677
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	335,
			"primary_score":	1999935,
			"second_score":	113675
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	337,
			"primary_score":	1999935,
			"second_score":	113670
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	397,
			"primary_score":	1999935,
			"second_score":	689818
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	398,
			"primary_score":	1999935,
			"second_score":	689817
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	407,
			"primary_score":	1999935,
			"second_score":	689815
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	411,
			"primary_score":	1999935,
			"second_score":	689814
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	412,
			"primary_score":	1999935,
			"second_score":	689813
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	430,
			"primary_score":	1999935,
			"second_score":	114890
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	431,
			"primary_score":	1999935,
			"second_score":	114888
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	432,
			"primary_score":	1999935,
			"second_score":	114886
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	434,
			"primary_score":	1999935,
			"second_score":	114885
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	435,
			"primary_score":	1999935,
			"second_score":	114884
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	436,
			"primary_score":	1999935,
			"second_score":	114871
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	437,
			"primary_score":	1999935,
			"second_score":	114837
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	440,
			"primary_score":	1999935,
			"second_score":	115644
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	115643
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	443,
			"primary_score":	1999935,
			"second_score":	115641
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	446,
			"primary_score":	1999935,
			"second_score":	115639
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	456,
			"primary_score":	1999935,
			"second_score":	15292
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	457,
			"primary_score":	1999935,
			"second_score":	15290
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	458,
			"primary_score":	1999935,
			"second_score":	15288
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	459,
			"primary_score":	1999935,
			"second_score":	15286
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	460,
			"primary_score":	1999935,
			"second_score":	17651
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	461,
			"primary_score":	1999935,
			"second_score":	17649
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1155,
			"primary_score":	1999935,
			"second_score":	121834
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1156,
			"primary_score":	1999935,
			"second_score":	121833
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1157,
			"primary_score":	1999935,
			"second_score":	121832
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1158,
			"primary_score":	1999935,
			"second_score":	121831
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1159,
			"primary_score":	1999935,
			"second_score":	121830
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1161,
			"primary_score":	1999935,
			"second_score":	121829
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1169,
			"primary_score":	1999935,
			"second_score":	121828
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1170,
			"primary_score":	1999935,
			"second_score":	121827
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1172,
			"primary_score":	1999935,
			"second_score":	121826
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1176,
			"primary_score":	1999935,
			"second_score":	121825
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1177,
			"primary_score":	1999935,
			"second_score":	121824
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1178,
			"primary_score":	1999935,
			"second_score":	121823
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1179,
			"primary_score":	1999935,
			"second_score":	119336
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1181,
			"primary_score":	1999935,
			"second_score":	119335
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1182,
			"primary_score":	1999935,
			"second_score":	119334
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1183,
			"primary_score":	1999935,
			"second_score":	119333
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1184,
			"primary_score":	1999935,
			"second_score":	119332
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1185,
			"primary_score":	1999935,
			"second_score":	119331
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1187,
			"primary_score":	1999935,
			"second_score":	119330
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1188,
			"primary_score":	1999935,
			"second_score":	119329
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1189,
			"primary_score":	1999935,
			"second_score":	119328
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1190,
			"primary_score":	1999935,
			"second_score":	119327
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1193,
			"primary_score":	1999935,
			"second_score":	119326
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1195,
			"primary_score":	1999935,
			"second_score":	119325
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1197,
			"primary_score":	1999935,
			"second_score":	118957
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1198,
			"primary_score":	1999935,
			"second_score":	118956
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1199,
			"primary_score":	1999935,
			"second_score":	118955
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1202,
			"primary_score":	1999935,
			"second_score":	118954
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1210,
			"primary_score":	1999935,
			"second_score":	118923
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1211,
			"primary_score":	1999935,
			"second_score":	118922
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1212,
			"primary_score":	1999935,
			"second_score":	118921
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1213,
			"primary_score":	1999935,
			"second_score":	118920
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1214,
			"primary_score":	1999935,
			"second_score":	118831
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1215,
			"primary_score":	1999935,
			"second_score":	118812
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1216,
			"primary_score":	1999935,
			"second_score":	118811
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1220,
			"primary_score":	1999935,
			"second_score":	118810
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1223,
			"primary_score":	1999935,
			"second_score":	118809
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1235,
			"primary_score":	1999935,
			"second_score":	121836
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1237,
			"primary_score":	1999935,
			"second_score":	121835
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1238,
			"primary_score":	1999935,
			"second_score":	118808
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1242,
			"primary_score":	1999935,
			"second_score":	118807
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1248,
			"primary_score":	1999935,
			"second_score":	121837
		}, {
			"file":	"Zend/zend_execute_API.c",
			"line":	1510,
			"primary_score":	1999935,
			"second_score":	103537
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	182,
			"primary_score":	1999935,
			"second_score":	14748
		}, {
			"file":	"Zend/zend_extensions.c",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	14745
		}, {
			"file":	"Zend/zend_float.c",
			"line":	44,
			"primary_score":	1999935,
			"second_score":	113674
		}, {
			"file":	"Zend/zend_float.c",
			"line":	45,
			"primary_score":	1999935,
			"second_score":	113673
		}, {
			"file":	"Zend/zend_float.c",
			"line":	48,
			"primary_score":	1999935,
			"second_score":	113671
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	35,
			"primary_score":	1999935,
			"second_score":	3139
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	36,
			"primary_score":	1999935,
			"second_score":	3138
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	37,
			"primary_score":	1999935,
			"second_score":	3137
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	3140
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	132,
			"primary_score":	1999935,
			"second_score":	115676
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	142,
			"primary_score":	1999935,
			"second_score":	115675
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	147,
			"primary_score":	1999935,
			"second_score":	115674
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	149,
			"primary_score":	1999935,
			"second_score":	115673
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	150,
			"primary_score":	1999935,
			"second_score":	148510
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	152,
			"primary_score":	1999935,
			"second_score":	148509
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	153,
			"primary_score":	1999935,
			"second_score":	148508
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	155,
			"primary_score":	1999935,
			"second_score":	148507
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	156,
			"primary_score":	1999935,
			"second_score":	118386
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	157,
			"primary_score":	1999935,
			"second_score":	148506
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	158,
			"primary_score":	1999935,
			"second_score":	148505
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	159,
			"primary_score":	1999935,
			"second_score":	148504
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	176,
			"primary_score":	1999935,
			"second_score":	148503
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	177,
			"primary_score":	1999935,
			"second_score":	148502
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	178,
			"primary_score":	1999935,
			"second_score":	148501
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	179,
			"primary_score":	1999935,
			"second_score":	148500
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	181,
			"primary_score":	1999935,
			"second_score":	148499
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	148498
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	184,
			"primary_score":	1999935,
			"second_score":	148497
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	186,
			"primary_score":	1999935,
			"second_score":	148496
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	187,
			"primary_score":	1999935,
			"second_score":	148495
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	188,
			"primary_score":	1999935,
			"second_score":	148494
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	251,
			"primary_score":	1999935,
			"second_score":	114882
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	253,
			"primary_score":	1999935,
			"second_score":	114881
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	264,
			"primary_score":	1999935,
			"second_score":	114880
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	265,
			"primary_score":	1999935,
			"second_score":	114879
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	266,
			"primary_score":	1999935,
			"second_score":	114873
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	653,
			"primary_score":	1999935,
			"second_score":	113463
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	655,
			"primary_score":	1999935,
			"second_score":	113462
		}, {
			"file":	"Zend/zend_gc.c",
			"line":	728,
			"primary_score":	1999935,
			"second_score":	113461
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	182,
			"primary_score":	1999935,
			"second_score":	115638
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	115677
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	189,
			"primary_score":	1999935,
			"second_score":	114878
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	190,
			"primary_score":	1999935,
			"second_score":	114877
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	191,
			"primary_score":	1999935,
			"second_score":	114876
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	114875
		}, {
			"file":	"Zend/zend_gc.h",
			"line":	193,
			"primary_score":	1999935,
			"second_score":	114874
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	150,
			"primary_score":	1999935,
			"second_score":	534593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	152,
			"primary_score":	1999935,
			"second_score":	534592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	154,
			"primary_score":	1999935,
			"second_score":	534591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	158,
			"primary_score":	1999935,
			"second_score":	534590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	161,
			"primary_score":	1999935,
			"second_score":	534589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	164,
			"primary_score":	1999935,
			"second_score":	534588
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	165,
			"primary_score":	1999935,
			"second_score":	534587
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	166,
			"primary_score":	1999935,
			"second_score":	534586
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	167,
			"primary_score":	1999935,
			"second_score":	534585
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	168,
			"primary_score":	1999935,
			"second_score":	534584
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	169,
			"primary_score":	1999935,
			"second_score":	534583
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	170,
			"primary_score":	1999935,
			"second_score":	534582
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	534581
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	534580
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	173,
			"primary_score":	1999935,
			"second_score":	534579
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	534578
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	175,
			"primary_score":	1999935,
			"second_score":	534577
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	197,
			"primary_score":	1999935,
			"second_score":	689097
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	198,
			"primary_score":	1999935,
			"second_score":	689096
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	199,
			"primary_score":	1999935,
			"second_score":	689095
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	689094
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	689093
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	210,
			"primary_score":	1999935,
			"second_score":	703981
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	212,
			"primary_score":	1999935,
			"second_score":	689090
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	213,
			"primary_score":	1999935,
			"second_score":	689084
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	215,
			"primary_score":	1999935,
			"second_score":	689083
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	689082
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	217,
			"primary_score":	1999935,
			"second_score":	690179
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	219,
			"primary_score":	1999935,
			"second_score":	690178
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	220,
			"primary_score":	1999935,
			"second_score":	690177
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	713310
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	230,
			"primary_score":	1999935,
			"second_score":	713308
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	231,
			"primary_score":	1999935,
			"second_score":	713307
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	233,
			"primary_score":	1999935,
			"second_score":	713253
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	234,
			"primary_score":	1999935,
			"second_score":	713248
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	237,
			"primary_score":	1999935,
			"second_score":	713246
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	238,
			"primary_score":	1999935,
			"second_score":	713244
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	240,
			"primary_score":	1999935,
			"second_score":	708155
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	243,
			"primary_score":	1999935,
			"second_score":	689081
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	244,
			"primary_score":	1999935,
			"second_score":	711233
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	245,
			"primary_score":	1999935,
			"second_score":	711129
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	248,
			"primary_score":	1999935,
			"second_score":	711128
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	250,
			"primary_score":	1999935,
			"second_score":	689080
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	251,
			"primary_score":	1999935,
			"second_score":	688999
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	254,
			"primary_score":	1999935,
			"second_score":	688998
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	255,
			"primary_score":	1999935,
			"second_score":	688997
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	257,
			"primary_score":	1999935,
			"second_score":	688996
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	258,
			"primary_score":	1999935,
			"second_score":	704737
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	259,
			"primary_score":	1999935,
			"second_score":	688990
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	260,
			"primary_score":	1999935,
			"second_score":	708131
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	261,
			"primary_score":	1999935,
			"second_score":	688985
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	262,
			"primary_score":	1999935,
			"second_score":	688984
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	265,
			"primary_score":	1999935,
			"second_score":	688983
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	266,
			"primary_score":	1999935,
			"second_score":	703626
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	267,
			"primary_score":	1999935,
			"second_score":	688973
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	268,
			"primary_score":	1999935,
			"second_score":	688972
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	270,
			"primary_score":	1999935,
			"second_score":	688970
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	271,
			"primary_score":	1999935,
			"second_score":	711822
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	272,
			"primary_score":	1999935,
			"second_score":	688967
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	277,
			"primary_score":	1999935,
			"second_score":	533237
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	278,
			"primary_score":	1999935,
			"second_score":	533236
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	280,
			"primary_score":	1999935,
			"second_score":	533235
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	282,
			"primary_score":	1999935,
			"second_score":	533234
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	286,
			"primary_score":	1999935,
			"second_score":	533233
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	533231
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	533230
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	290,
			"primary_score":	1999935,
			"second_score":	533229
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	317,
			"primary_score":	1999935,
			"second_score":	533228
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	318,
			"primary_score":	1999935,
			"second_score":	533227
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	319,
			"primary_score":	1999935,
			"second_score":	533123
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	322,
			"primary_score":	1999935,
			"second_score":	533122
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	332,
			"primary_score":	1999935,
			"second_score":	533121
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	333,
			"primary_score":	1999935,
			"second_score":	533120
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	334,
			"primary_score":	1999935,
			"second_score":	533115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	533114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	338,
			"primary_score":	1999935,
			"second_score":	533110
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	339,
			"primary_score":	1999935,
			"second_score":	533109
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	342,
			"primary_score":	1999935,
			"second_score":	533108
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	343,
			"primary_score":	1999935,
			"second_score":	533106
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	344,
			"primary_score":	1999935,
			"second_score":	533105
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	345,
			"primary_score":	1999935,
			"second_score":	533097
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	347,
			"primary_score":	1999935,
			"second_score":	533095
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	348,
			"primary_score":	1999935,
			"second_score":	533094
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	349,
			"primary_score":	1999935,
			"second_score":	533092
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	363,
			"primary_score":	1999935,
			"second_score":	533548
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	364,
			"primary_score":	1999935,
			"second_score":	533547
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	366,
			"primary_score":	1999935,
			"second_score":	533546
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	367,
			"primary_score":	1999935,
			"second_score":	534451
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	369,
			"primary_score":	1999935,
			"second_score":	533543
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	370,
			"primary_score":	1999935,
			"second_score":	533542
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	372,
			"primary_score":	1999935,
			"second_score":	533541
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	374,
			"primary_score":	1999935,
			"second_score":	533540
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	375,
			"primary_score":	1999935,
			"second_score":	533539
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	376,
			"primary_score":	1999935,
			"second_score":	546026
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	401,
			"primary_score":	1999935,
			"second_score":	546025
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	403,
			"primary_score":	1999935,
			"second_score":	533538
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	404,
			"primary_score":	1999935,
			"second_score":	533434
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	407,
			"primary_score":	1999935,
			"second_score":	533433
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	408,
			"primary_score":	1999935,
			"second_score":	533432
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	409,
			"primary_score":	1999935,
			"second_score":	533431
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	410,
			"primary_score":	1999935,
			"second_score":	708439
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	411,
			"primary_score":	1999935,
			"second_score":	533425
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	415,
			"primary_score":	1999935,
			"second_score":	545907
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	417,
			"primary_score":	1999935,
			"second_score":	533420
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	418,
			"primary_score":	1999935,
			"second_score":	533418
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	419,
			"primary_score":	1999935,
			"second_score":	534204
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	420,
			"primary_score":	1999935,
			"second_score":	533409
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	422,
			"primary_score":	1999935,
			"second_score":	533407
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	423,
			"primary_score":	1999935,
			"second_score":	533406
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	425,
			"primary_score":	1999935,
			"second_score":	533405
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	426,
			"primary_score":	1999935,
			"second_score":	545888
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	427,
			"primary_score":	1999935,
			"second_score":	533402
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	433,
			"primary_score":	1999935,
			"second_score":	545887
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	435,
			"primary_score":	1999935,
			"second_score":	545886
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	437,
			"primary_score":	1999935,
			"second_score":	545885
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	438,
			"primary_score":	1999935,
			"second_score":	545884
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	439,
			"primary_score":	1999935,
			"second_score":	545725
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	440,
			"primary_score":	1999935,
			"second_score":	545724
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	441,
			"primary_score":	1999935,
			"second_score":	545722
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	545721
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	443,
			"primary_score":	1999935,
			"second_score":	545720
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	444,
			"primary_score":	1999935,
			"second_score":	545719
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	445,
			"primary_score":	1999935,
			"second_score":	544807
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	446,
			"primary_score":	1999935,
			"second_score":	544805
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	455,
			"primary_score":	1999935,
			"second_score":	545718
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	456,
			"primary_score":	1999935,
			"second_score":	545717
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	458,
			"primary_score":	1999935,
			"second_score":	545716
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	459,
			"primary_score":	1999935,
			"second_score":	545715
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	463,
			"primary_score":	1999935,
			"second_score":	545714
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	464,
			"primary_score":	1999935,
			"second_score":	545713
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	465,
			"primary_score":	1999935,
			"second_score":	545712
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	466,
			"primary_score":	1999935,
			"second_score":	544815
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	467,
			"primary_score":	1999935,
			"second_score":	711426
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	468,
			"primary_score":	1999935,
			"second_score":	544810
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	469,
			"primary_score":	1999935,
			"second_score":	544809
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	471,
			"primary_score":	1999935,
			"second_score":	544808
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	476,
			"primary_score":	1999935,
			"second_score":	47247
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	477,
			"primary_score":	1999935,
			"second_score":	47246
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	479,
			"primary_score":	1999935,
			"second_score":	47245
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	481,
			"primary_score":	1999935,
			"second_score":	47244
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	482,
			"primary_score":	1999935,
			"second_score":	47243
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	484,
			"primary_score":	1999935,
			"second_score":	47227
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	486,
			"primary_score":	1999935,
			"second_score":	47226
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	487,
			"primary_score":	1999935,
			"second_score":	47225
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	488,
			"primary_score":	1999935,
			"second_score":	47224
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	492,
			"primary_score":	1999935,
			"second_score":	47223
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	493,
			"primary_score":	1999935,
			"second_score":	47221
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	494,
			"primary_score":	1999935,
			"second_score":	47220
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	496,
			"primary_score":	1999935,
			"second_score":	47271
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	498,
			"primary_score":	1999935,
			"second_score":	47219
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	499,
			"primary_score":	1999935,
			"second_score":	51598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	501,
			"primary_score":	1999935,
			"second_score":	47218
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	502,
			"primary_score":	1999935,
			"second_score":	50185
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	505,
			"primary_score":	1999935,
			"second_score":	47217
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	507,
			"primary_score":	1999935,
			"second_score":	47216
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	508,
			"primary_score":	1999935,
			"second_score":	47215
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	510,
			"primary_score":	1999935,
			"second_score":	62017
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	512,
			"primary_score":	1999935,
			"second_score":	47214
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	513,
			"primary_score":	1999935,
			"second_score":	47213
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	515,
			"primary_score":	1999935,
			"second_score":	47212
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	516,
			"primary_score":	1999935,
			"second_score":	47211
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	518,
			"primary_score":	1999935,
			"second_score":	47207
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	519,
			"primary_score":	1999935,
			"second_score":	47206
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	521,
			"primary_score":	1999935,
			"second_score":	47205
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	522,
			"primary_score":	1999935,
			"second_score":	47204
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	523,
			"primary_score":	1999935,
			"second_score":	47202
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	524,
			"primary_score":	1999935,
			"second_score":	47201
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	526,
			"primary_score":	1999935,
			"second_score":	47276
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	534,
			"primary_score":	1999935,
			"second_score":	3133
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	536,
			"primary_score":	1999935,
			"second_score":	3132
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	538,
			"primary_score":	1999935,
			"second_score":	3131
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	540,
			"primary_score":	1999935,
			"second_score":	3130
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	541,
			"primary_score":	1999935,
			"second_score":	3129
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	542,
			"primary_score":	1999935,
			"second_score":	3122
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	543,
			"primary_score":	1999935,
			"second_score":	3121
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	544,
			"primary_score":	1999935,
			"second_score":	3120
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	545,
			"primary_score":	1999935,
			"second_score":	3257
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	547,
			"primary_score":	1999935,
			"second_score":	3119
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	548,
			"primary_score":	1999935,
			"second_score":	3118
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	550,
			"primary_score":	1999935,
			"second_score":	3117
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	552,
			"primary_score":	1999935,
			"second_score":	3116
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	553,
			"primary_score":	1999935,
			"second_score":	3115
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	556,
			"primary_score":	1999935,
			"second_score":	3114
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	599,
			"primary_score":	1999935,
			"second_score":	3611
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	601,
			"primary_score":	1999935,
			"second_score":	3610
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	602,
			"primary_score":	1999935,
			"second_score":	3608
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	603,
			"primary_score":	1999935,
			"second_score":	3924
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	605,
			"primary_score":	1999935,
			"second_score":	3607
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	607,
			"primary_score":	1999935,
			"second_score":	3606
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	608,
			"primary_score":	1999935,
			"second_score":	3605
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	610,
			"primary_score":	1999935,
			"second_score":	3604
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	611,
			"primary_score":	1999935,
			"second_score":	52792
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	616,
			"primary_score":	1999935,
			"second_score":	3603
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	617,
			"primary_score":	1999935,
			"second_score":	52734
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	620,
			"primary_score":	1999935,
			"second_score":	3602
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	622,
			"primary_score":	1999935,
			"second_score":	3601
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	623,
			"primary_score":	1999935,
			"second_score":	3600
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	625,
			"primary_score":	1999935,
			"second_score":	50148
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	627,
			"primary_score":	1999935,
			"second_score":	3599
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	628,
			"primary_score":	1999935,
			"second_score":	3598
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	630,
			"primary_score":	1999935,
			"second_score":	3597
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	631,
			"primary_score":	1999935,
			"second_score":	3596
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	633,
			"primary_score":	1999935,
			"second_score":	3594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	634,
			"primary_score":	1999935,
			"second_score":	50141
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	636,
			"primary_score":	1999935,
			"second_score":	3593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	637,
			"primary_score":	1999935,
			"second_score":	3592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	639,
			"primary_score":	1999935,
			"second_score":	3591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	640,
			"primary_score":	1999935,
			"second_score":	3590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	642,
			"primary_score":	1999935,
			"second_score":	3589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	665,
			"primary_score":	1999935,
			"second_score":	103506
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	667,
			"primary_score":	1999935,
			"second_score":	103505
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	669,
			"primary_score":	1999935,
			"second_score":	103504
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	670,
			"primary_score":	1999935,
			"second_score":	103503
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	671,
			"primary_score":	1999935,
			"second_score":	50160
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	672,
			"primary_score":	1999935,
			"second_score":	47192
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	675,
			"primary_score":	1999935,
			"second_score":	47191
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	676,
			"primary_score":	1999935,
			"second_score":	47190
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	679,
			"primary_score":	1999935,
			"second_score":	47189
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	693,
			"primary_score":	1999935,
			"second_score":	149225
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	695,
			"primary_score":	1999935,
			"second_score":	149224
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	697,
			"primary_score":	1999935,
			"second_score":	149223
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	698,
			"primary_score":	1999935,
			"second_score":	149221
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	149220
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	711,
			"primary_score":	1999935,
			"second_score":	149219
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	717,
			"primary_score":	1999935,
			"second_score":	6024
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	719,
			"primary_score":	1999935,
			"second_score":	6023
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	721,
			"primary_score":	1999935,
			"second_score":	6022
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	722,
			"primary_score":	1999935,
			"second_score":	6020
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	723,
			"primary_score":	1999935,
			"second_score":	6019
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	724,
			"primary_score":	1999935,
			"second_score":	3575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	726,
			"primary_score":	1999935,
			"second_score":	3572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	727,
			"primary_score":	1999935,
			"second_score":	3612
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	729,
			"primary_score":	1999935,
			"second_score":	3571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	731,
			"primary_score":	1999935,
			"second_score":	3570
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	735,
			"primary_score":	1999935,
			"second_score":	3569
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	741,
			"primary_score":	1999979,
			"second_score":	152734
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	742,
			"primary_score":	1999979,
			"second_score":	152733
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	743,
			"primary_score":	1999979,
			"second_score":	152732
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	745,
			"primary_score":	1999979,
			"second_score":	152731
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	747,
			"primary_score":	1999979,
			"second_score":	152730
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	749,
			"primary_score":	1999979,
			"second_score":	152727
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	750,
			"primary_score":	1999979,
			"second_score":	152726
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	751,
			"primary_score":	1999979,
			"second_score":	150961
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	752,
			"primary_score":	1999979,
			"second_score":	150960
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	753,
			"primary_score":	1999979,
			"second_score":	150959
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	754,
			"primary_score":	1999979,
			"second_score":	150958
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	755,
			"primary_score":	1999979,
			"second_score":	150957
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	756,
			"primary_score":	1999979,
			"second_score":	150956
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	758,
			"primary_score":	1999979,
			"second_score":	149896
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	761,
			"primary_score":	1999979,
			"second_score":	149895
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	763,
			"primary_score":	1999979,
			"second_score":	149894
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	766,
			"primary_score":	1999979,
			"second_score":	149893
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	769,
			"primary_score":	1999979,
			"second_score":	149892
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	775,
			"primary_score":	1999935,
			"second_score":	114592
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	777,
			"primary_score":	1999935,
			"second_score":	114591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	779,
			"primary_score":	1999935,
			"second_score":	149395
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	780,
			"primary_score":	1999935,
			"second_score":	114588
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	781,
			"primary_score":	1999935,
			"second_score":	114587
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	782,
			"primary_score":	1999935,
			"second_score":	113861
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	784,
			"primary_score":	1999935,
			"second_score":	113859
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	785,
			"primary_score":	1999935,
			"second_score":	113858
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	786,
			"primary_score":	1999935,
			"second_score":	113857
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	787,
			"primary_score":	1999935,
			"second_score":	114099
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	789,
			"primary_score":	1999935,
			"second_score":	113856
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	790,
			"primary_score":	1999935,
			"second_score":	113855
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	793,
			"primary_score":	1999935,
			"second_score":	149327
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	898,
			"primary_score":	1999935,
			"second_score":	97613
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	899,
			"primary_score":	1999935,
			"second_score":	97612
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	900,
			"primary_score":	1999935,
			"second_score":	97611
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	902,
			"primary_score":	1999935,
			"second_score":	97610
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	904,
			"primary_score":	1999935,
			"second_score":	97609
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	905,
			"primary_score":	1999935,
			"second_score":	97595
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	907,
			"primary_score":	1999935,
			"second_score":	97594
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	908,
			"primary_score":	1999935,
			"second_score":	97593
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	909,
			"primary_score":	1999935,
			"second_score":	97590
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	911,
			"primary_score":	1999935,
			"second_score":	97589
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	912,
			"primary_score":	1999935,
			"second_score":	97588
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	914,
			"primary_score":	1999935,
			"second_score":	97591
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	916,
			"primary_score":	1999935,
			"second_score":	689127
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	922,
			"primary_score":	1999935,
			"second_score":	532991
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	923,
			"primary_score":	1999935,
			"second_score":	532990
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	925,
			"primary_score":	1999935,
			"second_score":	532989
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	929,
			"primary_score":	1999935,
			"second_score":	532988
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	931,
			"primary_score":	1999935,
			"second_score":	532987
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	933,
			"primary_score":	1999935,
			"second_score":	532986
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	934,
			"primary_score":	1999935,
			"second_score":	532985
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	935,
			"primary_score":	1999935,
			"second_score":	532984
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	937,
			"primary_score":	1999935,
			"second_score":	532983
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	938,
			"primary_score":	1999935,
			"second_score":	532982
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	942,
			"primary_score":	1999935,
			"second_score":	533241
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	948,
			"primary_score":	1999935,
			"second_score":	64575
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	949,
			"primary_score":	1999935,
			"second_score":	64574
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	950,
			"primary_score":	1999935,
			"second_score":	64573
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	952,
			"primary_score":	1999935,
			"second_score":	64572
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	954,
			"primary_score":	1999935,
			"second_score":	64571
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	955,
			"primary_score":	1999935,
			"second_score":	64562
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	957,
			"primary_score":	1999935,
			"second_score":	64561
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	958,
			"primary_score":	1999935,
			"second_score":	64560
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	959,
			"primary_score":	1999935,
			"second_score":	64559
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	961,
			"primary_score":	1999935,
			"second_score":	64558
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	997,
			"primary_score":	1999935,
			"second_score":	114034
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	998,
			"primary_score":	1999935,
			"second_score":	114033
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1000,
			"primary_score":	1999935,
			"second_score":	114032
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1002,
			"primary_score":	1999935,
			"second_score":	114031
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1004,
			"primary_score":	1999935,
			"second_score":	114030
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1005,
			"primary_score":	1999935,
			"second_score":	114029
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1006,
			"primary_score":	1999935,
			"second_score":	114028
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1007,
			"primary_score":	1999935,
			"second_score":	114027
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1008,
			"primary_score":	1999935,
			"second_score":	114026
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1038,
			"primary_score":	1999935,
			"second_score":	149325
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1040,
			"primary_score":	1999935,
			"second_score":	149324
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1536,
			"primary_score":	1999935,
			"second_score":	708561
		}, {
			"file":	"Zend/zend_hash.c",
			"line":	1538,
			"primary_score":	1999935,
			"second_score":	708560
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	263,
			"primary_score":	1999935,
			"second_score":	47242
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	266,
			"primary_score":	1999935,
			"second_score":	47241
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	267,
			"primary_score":	1999935,
			"second_score":	47240
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	268,
			"primary_score":	1999935,
			"second_score":	47239
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	269,
			"primary_score":	1999935,
			"second_score":	47238
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	270,
			"primary_score":	1999935,
			"second_score":	47237
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	271,
			"primary_score":	1999935,
			"second_score":	47236
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	272,
			"primary_score":	1999935,
			"second_score":	47235
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	273,
			"primary_score":	1999935,
			"second_score":	47234
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	274,
			"primary_score":	1999935,
			"second_score":	47233
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	276,
			"primary_score":	1999935,
			"second_score":	47232
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	278,
			"primary_score":	1999935,
			"second_score":	48691
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	279,
			"primary_score":	1999935,
			"second_score":	47446
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	280,
			"primary_score":	1999935,
			"second_score":	47445
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	281,
			"primary_score":	1999935,
			"second_score":	47444
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	282,
			"primary_score":	1999935,
			"second_score":	47231
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	283,
			"primary_score":	1999935,
			"second_score":	47230
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	47228
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	350,
			"primary_score":	1999935,
			"second_score":	712206
		}, {
			"file":	"Zend/zend_hash.h",
			"line":	351,
			"primary_score":	1999935,
			"second_score":	712200
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	39,
			"primary_score":	1999935,
			"second_score":	3574
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	40,
			"primary_score":	1999935,
			"second_score":	3614
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	42,
			"primary_score":	1999935,
			"second_score":	3573
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	3243
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	106,
			"primary_score":	1999935,
			"second_score":	3216
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	107,
			"primary_score":	1999935,
			"second_score":	3215
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	121,
			"primary_score":	1999935,
			"second_score":	113453
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	127,
			"primary_score":	1999935,
			"second_score":	113452
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	226,
			"primary_score":	1999935,
			"second_score":	6025
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	384,
			"primary_score":	1999935,
			"second_score":	97616
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	385,
			"primary_score":	1999935,
			"second_score":	97615
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	387,
			"primary_score":	1999935,
			"second_score":	97614
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	388,
			"primary_score":	1999935,
			"second_score":	97587
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	392,
			"primary_score":	1999935,
			"second_score":	97586
		}, {
			"file":	"Zend/zend_ini.c",
			"line":	395,
			"primary_score":	1999935,
			"second_score":	97585
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3151,
			"primary_score":	1999935,
			"second_score":	690666
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3153,
			"primary_score":	1999935,
			"second_score":	690665
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3155,
			"primary_score":	1999935,
			"second_score":	690664
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3157,
			"primary_score":	1999935,
			"second_score":	690663
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3214,
			"primary_score":	1999935,
			"second_score":	703354
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3217,
			"primary_score":	1999935,
			"second_score":	703353
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3220,
			"primary_score":	1999935,
			"second_score":	703352
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3222,
			"primary_score":	1999935,
			"second_score":	703351
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3223,
			"primary_score":	1999935,
			"second_score":	703350
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3224,
			"primary_score":	1999935,
			"second_score":	703349
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3226,
			"primary_score":	1999935,
			"second_score":	703348
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3228,
			"primary_score":	1999935,
			"second_score":	703347
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3231,
			"primary_score":	1999935,
			"second_score":	703346
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3232,
			"primary_score":	1999935,
			"second_score":	703345
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3233,
			"primary_score":	1999935,
			"second_score":	703344
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3245,
			"primary_score":	1999935,
			"second_score":	703343
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3246,
			"primary_score":	1999935,
			"second_score":	703342
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3247,
			"primary_score":	1999935,
			"second_score":	703341
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3250,
			"primary_score":	1999935,
			"second_score":	703340
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3251,
			"primary_score":	1999935,
			"second_score":	703339
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3252,
			"primary_score":	1999935,
			"second_score":	703338
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3258,
			"primary_score":	1999935,
			"second_score":	703337
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3262,
			"primary_score":	1999935,
			"second_score":	703336
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3267,
			"primary_score":	1999935,
			"second_score":	703335
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3269,
			"primary_score":	1999935,
			"second_score":	703334
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3271,
			"primary_score":	1999935,
			"second_score":	703333
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3272,
			"primary_score":	1999935,
			"second_score":	703332
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3273,
			"primary_score":	1999935,
			"second_score":	703331
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3274,
			"primary_score":	1999935,
			"second_score":	703330
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3281,
			"primary_score":	1999935,
			"second_score":	703329
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3282,
			"primary_score":	1999935,
			"second_score":	703328
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3284,
			"primary_score":	1999935,
			"second_score":	703327
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3294,
			"primary_score":	1999935,
			"second_score":	690686
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3297,
			"primary_score":	1999935,
			"second_score":	690685
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3362,
			"primary_score":	1999935,
			"second_score":	690684
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3364,
			"primary_score":	1999935,
			"second_score":	690683
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3376,
			"primary_score":	1999935,
			"second_score":	690682
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3377,
			"primary_score":	1999935,
			"second_score":	690777
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3382,
			"primary_score":	1999935,
			"second_score":	690681
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3384,
			"primary_score":	1999935,
			"second_score":	690752
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3385,
			"primary_score":	1999935,
			"second_score":	690751
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3388,
			"primary_score":	1999935,
			"second_score":	690680
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3390,
			"primary_score":	1999935,
			"second_score":	690679
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3391,
			"primary_score":	1999935,
			"second_score":	690678
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3395,
			"primary_score":	1999935,
			"second_score":	690865
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3396,
			"primary_score":	1999935,
			"second_score":	690864
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3401,
			"primary_score":	1999935,
			"second_score":	690677
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3402,
			"primary_score":	1999935,
			"second_score":	690676
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3403,
			"primary_score":	1999935,
			"second_score":	690987
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3404,
			"primary_score":	1999935,
			"second_score":	690675
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3405,
			"primary_score":	1999935,
			"second_score":	690674
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3407,
			"primary_score":	1999935,
			"second_score":	690709
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3409,
			"primary_score":	1999935,
			"second_score":	690708
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3410,
			"primary_score":	1999935,
			"second_score":	690707
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3413,
			"primary_score":	1999935,
			"second_score":	690673
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3414,
			"primary_score":	1999935,
			"second_score":	690672
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3418,
			"primary_score":	1999935,
			"second_score":	690858
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3422,
			"primary_score":	1999935,
			"second_score":	690857
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3425,
			"primary_score":	1999935,
			"second_score":	690856
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3426,
			"primary_score":	1999935,
			"second_score":	690855
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3428,
			"primary_score":	1999935,
			"second_score":	690854
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3429,
			"primary_score":	1999935,
			"second_score":	690853
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3431,
			"primary_score":	1999935,
			"second_score":	690852
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3439,
			"primary_score":	1999935,
			"second_score":	690776
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3441,
			"primary_score":	1999935,
			"second_score":	690775
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3459,
			"primary_score":	1999935,
			"second_score":	690706
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3462,
			"primary_score":	1999935,
			"second_score":	690705
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3463,
			"primary_score":	1999935,
			"second_score":	690704
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3467,
			"primary_score":	1999935,
			"second_score":	690703
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3468,
			"primary_score":	1999935,
			"second_score":	690697
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3472,
			"primary_score":	1999935,
			"second_score":	691365
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3473,
			"primary_score":	1999935,
			"second_score":	691361
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3477,
			"primary_score":	1999935,
			"second_score":	690771
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3478,
			"primary_score":	1999935,
			"second_score":	690769
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3482,
			"primary_score":	1999935,
			"second_score":	692771
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3483,
			"primary_score":	1999935,
			"second_score":	692770
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3492,
			"primary_score":	1999935,
			"second_score":	690795
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3493,
			"primary_score":	1999935,
			"second_score":	690793
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3592,
			"primary_score":	1999935,
			"second_score":	690819
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3593,
			"primary_score":	1999935,
			"second_score":	690817
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3732,
			"primary_score":	1999935,
			"second_score":	691568
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	3733,
			"primary_score":	1999935,
			"second_score":	691560
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4142,
			"primary_score":	1999935,
			"second_score":	691991
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4143,
			"primary_score":	1999935,
			"second_score":	691990
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4147,
			"primary_score":	1999935,
			"second_score":	135318
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4148,
			"primary_score":	1999935,
			"second_score":	135317
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4152,
			"primary_score":	1999935,
			"second_score":	136460
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4153,
			"primary_score":	1999935,
			"second_score":	136234
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4157,
			"primary_score":	1999935,
			"second_score":	692101
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4158,
			"primary_score":	1999935,
			"second_score":	692019
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4167,
			"primary_score":	1999935,
			"second_score":	128958
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4168,
			"primary_score":	1999935,
			"second_score":	128844
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4172,
			"primary_score":	1999935,
			"second_score":	134789
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4173,
			"primary_score":	1999935,
			"second_score":	134707
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4412,
			"primary_score":	1999935,
			"second_score":	126394
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4413,
			"primary_score":	1999935,
			"second_score":	126377
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4417,
			"primary_score":	1999935,
			"second_score":	690981
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4418,
			"primary_score":	1999935,
			"second_score":	690883
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4457,
			"primary_score":	1999945,
			"second_score":	693264
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4458,
			"primary_score":	1999945,
			"second_score":	693187
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4732,
			"primary_score":	1999935,
			"second_score":	126479
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4733,
			"primary_score":	1999935,
			"second_score":	126478
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4737,
			"primary_score":	1999935,
			"second_score":	158621
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4738,
			"primary_score":	1999935,
			"second_score":	158593
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4742,
			"primary_score":	1999935,
			"second_score":	157706
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4743,
			"primary_score":	1999935,
			"second_score":	157664
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4747,
			"primary_score":	1999935,
			"second_score":	157147
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4748,
			"primary_score":	1999935,
			"second_score":	157117
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4827,
			"primary_score":	1999935,
			"second_score":	691117
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4828,
			"primary_score":	1999935,
			"second_score":	691116
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4892,
			"primary_score":	1999935,
			"second_score":	692727
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4893,
			"primary_score":	1999935,
			"second_score":	692552
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4897,
			"primary_score":	1999935,
			"second_score":	691947
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	4898,
			"primary_score":	1999935,
			"second_score":	691828
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5092,
			"primary_score":	1999935,
			"second_score":	691163
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5093,
			"primary_score":	1999935,
			"second_score":	691162
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5197,
			"primary_score":	1999935,
			"second_score":	137354
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5198,
			"primary_score":	1999935,
			"second_score":	137235
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5212,
			"primary_score":	1999935,
			"second_score":	691140
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5213,
			"primary_score":	1999935,
			"second_score":	691139
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5257,
			"primary_score":	1999935,
			"second_score":	691612
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5258,
			"primary_score":	1999935,
			"second_score":	691611
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5262,
			"primary_score":	1999935,
			"second_score":	691094
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5263,
			"primary_score":	1999935,
			"second_score":	691093
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5267,
			"primary_score":	1999935,
			"second_score":	691673
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5268,
			"primary_score":	1999935,
			"second_score":	691634
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5299,
			"primary_score":	1999935,
			"second_score":	691702
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5300,
			"primary_score":	1999935,
			"second_score":	691701
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5399,
			"primary_score":	1999945,
			"second_score":	692161
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5400,
			"primary_score":	1999945,
			"second_score":	692160
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5409,
			"primary_score":	1999935,
			"second_score":	691767
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5410,
			"primary_score":	1999935,
			"second_score":	691730
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5414,
			"primary_score":	1999945,
			"second_score":	692185
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5415,
			"primary_score":	1999945,
			"second_score":	692183
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5439,
			"primary_score":	1999945,
			"second_score":	692358
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5440,
			"primary_score":	1999945,
			"second_score":	692246
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5444,
			"primary_score":	1999945,
			"second_score":	692381
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5445,
			"primary_score":	1999945,
			"second_score":	692380
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5717,
			"primary_score":	1999935,
			"second_score":	690696
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5719,
			"primary_score":	1999935,
			"second_score":	690695
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5720,
			"primary_score":	1999935,
			"second_score":	690694
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5721,
			"primary_score":	1999935,
			"second_score":	690693
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5723,
			"primary_score":	1999935,
			"second_score":	690692
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5730,
			"primary_score":	1999935,
			"second_score":	690691
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5732,
			"primary_score":	1999935,
			"second_score":	690690
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5733,
			"primary_score":	1999935,
			"second_score":	690689
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5734,
			"primary_score":	1999935,
			"second_score":	690808
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5736,
			"primary_score":	1999935,
			"second_score":	690688
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5738,
			"primary_score":	1999935,
			"second_score":	690687
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5882,
			"primary_score":	1999935,
			"second_score":	690671
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5907,
			"primary_score":	1999935,
			"second_score":	690670
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5908,
			"primary_score":	1999935,
			"second_score":	690669
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5909,
			"primary_score":	1999935,
			"second_score":	690668
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5911,
			"primary_score":	1999935,
			"second_score":	690667
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5913,
			"primary_score":	1999935,
			"second_score":	690662
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5916,
			"primary_score":	1999935,
			"second_score":	690661
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5920,
			"primary_score":	1999935,
			"second_score":	690660
		}, {
			"file":	"Zend/zend_language_parser.c",
			"line":	5923,
			"primary_score":	1999935,
			"second_score":	690659
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	127,
			"primary_score":	1999974,
			"second_score":	542721
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	128,
			"primary_score":	1999974,
			"second_score":	542635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	135,
			"primary_score":	1999974,
			"second_score":	536627
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	136,
			"primary_score":	1999974,
			"second_score":	536626
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	137,
			"primary_score":	1999974,
			"second_score":	536622
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	138,
			"primary_score":	1999974,
			"second_score":	536621
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	143,
			"primary_score":	1999935,
			"second_score":	689148
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	144,
			"primary_score":	1999935,
			"second_score":	689147
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	145,
			"primary_score":	1999935,
			"second_score":	689146
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	146,
			"primary_score":	1999935,
			"second_score":	689145
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	161,
			"primary_score":	1999935,
			"second_score":	148479
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	165,
			"primary_score":	1999935,
			"second_score":	148478
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	166,
			"primary_score":	1999935,
			"second_score":	148474
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	689284
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	689283
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	173,
			"primary_score":	1999935,
			"second_score":	689282
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	689281
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	175,
			"primary_score":	1999935,
			"second_score":	689280
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	176,
			"primary_score":	1999935,
			"second_score":	689279
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	178,
			"primary_score":	1999935,
			"second_score":	689278
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	179,
			"primary_score":	1999935,
			"second_score":	689277
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	181,
			"primary_score":	1999935,
			"second_score":	689272
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	182,
			"primary_score":	1999935,
			"second_score":	689271
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	689270
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	184,
			"primary_score":	1999935,
			"second_score":	689268
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	186,
			"primary_score":	1999935,
			"second_score":	689267
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	187,
			"primary_score":	1999935,
			"second_score":	689266
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	188,
			"primary_score":	1999935,
			"second_score":	689265
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	189,
			"primary_score":	1999935,
			"second_score":	689264
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	190,
			"primary_score":	1999935,
			"second_score":	689263
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	191,
			"primary_score":	1999935,
			"second_score":	689262
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	689261
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	197,
			"primary_score":	1999935,
			"second_score":	533373
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	198,
			"primary_score":	1999935,
			"second_score":	533372
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	199,
			"primary_score":	1999935,
			"second_score":	533371
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	200,
			"primary_score":	1999935,
			"second_score":	533370
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	533369
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	202,
			"primary_score":	1999935,
			"second_score":	533368
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	204,
			"primary_score":	1999935,
			"second_score":	533367
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	205,
			"primary_score":	1999935,
			"second_score":	533342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	207,
			"primary_score":	1999935,
			"second_score":	533341
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	208,
			"primary_score":	1999935,
			"second_score":	533340
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	209,
			"primary_score":	1999935,
			"second_score":	533339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	210,
			"primary_score":	1999935,
			"second_score":	533338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	212,
			"primary_score":	1999935,
			"second_score":	533336
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	533335
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	217,
			"primary_score":	1999935,
			"second_score":	533334
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	218,
			"primary_score":	1999935,
			"second_score":	533333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	219,
			"primary_score":	1999935,
			"second_score":	533332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	220,
			"primary_score":	1999935,
			"second_score":	533331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	221,
			"primary_score":	1999935,
			"second_score":	533330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	533329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	224,
			"primary_score":	1999935,
			"second_score":	533328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	233,
			"primary_score":	1999935,
			"second_score":	690175
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	690099
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	236,
			"primary_score":	1999935,
			"second_score":	690098
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	441,
			"primary_score":	1999935,
			"second_score":	704399
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	704398
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	445,
			"primary_score":	1999935,
			"second_score":	704397
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	451,
			"primary_score":	1999935,
			"second_score":	704396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	455,
			"primary_score":	1999935,
			"second_score":	704352
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	456,
			"primary_score":	1999935,
			"second_score":	704240
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	457,
			"primary_score":	1999935,
			"second_score":	704239
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	458,
			"primary_score":	1999935,
			"second_score":	704234
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	459,
			"primary_score":	1999935,
			"second_score":	704233
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	460,
			"primary_score":	1999935,
			"second_score":	704232
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	464,
			"primary_score":	1999935,
			"second_score":	704231
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	465,
			"primary_score":	1999935,
			"second_score":	704230
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	467,
			"primary_score":	1999935,
			"second_score":	704229
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	468,
			"primary_score":	1999935,
			"second_score":	704228
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	484,
			"primary_score":	1999935,
			"second_score":	704227
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	485,
			"primary_score":	1999935,
			"second_score":	704226
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	490,
			"primary_score":	1999935,
			"second_score":	704222
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	492,
			"primary_score":	1999935,
			"second_score":	704221
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	493,
			"primary_score":	1999935,
			"second_score":	704220
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	498,
			"primary_score":	1999935,
			"second_score":	704219
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	500,
			"primary_score":	1999935,
			"second_score":	703613
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	501,
			"primary_score":	1999935,
			"second_score":	703612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	502,
			"primary_score":	1999935,
			"second_score":	703611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	507,
			"primary_score":	1999935,
			"second_score":	703610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	508,
			"primary_score":	1999935,
			"second_score":	703609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	515,
			"primary_score":	1999935,
			"second_score":	704544
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	516,
			"primary_score":	1999935,
			"second_score":	704543
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	517,
			"primary_score":	1999935,
			"second_score":	704439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	518,
			"primary_score":	1999935,
			"second_score":	704438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	519,
			"primary_score":	1999935,
			"second_score":	704437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	520,
			"primary_score":	1999935,
			"second_score":	704436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	521,
			"primary_score":	1999935,
			"second_score":	704435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	522,
			"primary_score":	1999935,
			"second_score":	704434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	524,
			"primary_score":	1999935,
			"second_score":	704433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	525,
			"primary_score":	1999935,
			"second_score":	704432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	526,
			"primary_score":	1999935,
			"second_score":	704431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	527,
			"primary_score":	1999935,
			"second_score":	704430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	528,
			"primary_score":	1999935,
			"second_score":	704428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	530,
			"primary_score":	1999935,
			"second_score":	704426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	532,
			"primary_score":	1999935,
			"second_score":	704401
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	534,
			"primary_score":	1999935,
			"second_score":	704400
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	543,
			"primary_score":	1999935,
			"second_score":	703608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	544,
			"primary_score":	1999935,
			"second_score":	703364
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	545,
			"primary_score":	1999935,
			"second_score":	703363
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	546,
			"primary_score":	1999935,
			"second_score":	703362
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	547,
			"primary_score":	1999935,
			"second_score":	703355
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	548,
			"primary_score":	1999935,
			"second_score":	690658
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	549,
			"primary_score":	1999935,
			"second_score":	690611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	550,
			"primary_score":	1999935,
			"second_score":	690610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	553,
			"primary_score":	1999935,
			"second_score":	690609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	556,
			"primary_score":	1999935,
			"second_score":	690608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	557,
			"primary_score":	1999935,
			"second_score":	690607
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	558,
			"primary_score":	1999935,
			"second_score":	690606
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	559,
			"primary_score":	1999935,
			"second_score":	690605
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	560,
			"primary_score":	1999935,
			"second_score":	690337
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	566,
			"primary_score":	1999935,
			"second_score":	690332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	567,
			"primary_score":	1999935,
			"second_score":	690306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	614,
			"primary_score":	1999935,
			"second_score":	689259
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	615,
			"primary_score":	1999935,
			"second_score":	689258
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	618,
			"primary_score":	1999935,
			"second_score":	689257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	623,
			"primary_score":	1999935,
			"second_score":	689256
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	626,
			"primary_score":	1999935,
			"second_score":	689155
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	628,
			"primary_score":	1999935,
			"second_score":	689154
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	629,
			"primary_score":	1999935,
			"second_score":	689153
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	631,
			"primary_score":	1999935,
			"second_score":	689152
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	632,
			"primary_score":	1999935,
			"second_score":	689151
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	634,
			"primary_score":	1999935,
			"second_score":	689150
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	651,
			"primary_score":	1999935,
			"second_score":	689149
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	653,
			"primary_score":	1999935,
			"second_score":	689144
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	654,
			"primary_score":	1999935,
			"second_score":	688964
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	655,
			"primary_score":	1999935,
			"second_score":	688963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	656,
			"primary_score":	1999935,
			"second_score":	688962
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	684,
			"primary_score":	1999935,
			"second_score":	121822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	685,
			"primary_score":	1999935,
			"second_score":	121821
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	686,
			"primary_score":	1999935,
			"second_score":	121717
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	687,
			"primary_score":	1999935,
			"second_score":	121716
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	688,
			"primary_score":	1999935,
			"second_score":	121715
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	689,
			"primary_score":	1999935,
			"second_score":	121714
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	690,
			"primary_score":	1999935,
			"second_score":	121713
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	692,
			"primary_score":	1999935,
			"second_score":	121712
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	697,
			"primary_score":	1999935,
			"second_score":	121711
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	121710
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	700,
			"primary_score":	1999935,
			"second_score":	121709
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	701,
			"primary_score":	1999935,
			"second_score":	121593
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	702,
			"primary_score":	1999935,
			"second_score":	121591
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	704,
			"primary_score":	1999935,
			"second_score":	121590
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	705,
			"primary_score":	1999935,
			"second_score":	121565
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	709,
			"primary_score":	1999935,
			"second_score":	121016
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	711,
			"primary_score":	1999935,
			"second_score":	121015
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	712,
			"primary_score":	1999935,
			"second_score":	121014
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	713,
			"primary_score":	1999935,
			"second_score":	120770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	714,
			"primary_score":	1999935,
			"second_score":	120769
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	715,
			"primary_score":	1999935,
			"second_score":	120768
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	716,
			"primary_score":	1999935,
			"second_score":	120761
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	717,
			"primary_score":	1999935,
			"second_score":	120760
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	719,
			"primary_score":	1999935,
			"second_score":	119618
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	724,
			"primary_score":	1999935,
			"second_score":	119617
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	729,
			"primary_score":	1999935,
			"second_score":	119616
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	730,
			"primary_score":	1999935,
			"second_score":	119568
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	731,
			"primary_score":	1999935,
			"second_score":	119567
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	732,
			"primary_score":	1999935,
			"second_score":	119396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	733,
			"primary_score":	1999935,
			"second_score":	119391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	736,
			"primary_score":	1999935,
			"second_score":	119390
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	737,
			"primary_score":	1999935,
			"second_score":	119364
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	738,
			"primary_score":	1999935,
			"second_score":	119338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	739,
			"primary_score":	1999935,
			"second_score":	119337
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	848,
			"primary_score":	1999935,
			"second_score":	672276
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	849,
			"primary_score":	1999935,
			"second_score":	672275
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	851,
			"primary_score":	1999935,
			"second_score":	672274
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	854,
			"primary_score":	1999935,
			"second_score":	672158
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	855,
			"primary_score":	1999935,
			"second_score":	672157
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	856,
			"primary_score":	1999935,
			"second_score":	672156
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	857,
			"primary_score":	1999935,
			"second_score":	672115
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	858,
			"primary_score":	1999935,
			"second_score":	700612
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	859,
			"primary_score":	1999935,
			"second_score":	700611
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	864,
			"primary_score":	1999935,
			"second_score":	700610
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	867,
			"primary_score":	1999935,
			"second_score":	700609
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	868,
			"primary_score":	1999935,
			"second_score":	700608
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	939,
			"primary_score":	1999935,
			"second_score":	672114
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	942,
			"primary_score":	1999935,
			"second_score":	672113
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	943,
			"primary_score":	1999935,
			"second_score":	132351
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	945,
			"primary_score":	1999935,
			"second_score":	672112
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	947,
			"primary_score":	1999935,
			"second_score":	672111
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	948,
			"primary_score":	1999935,
			"second_score":	672110
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	960,
			"primary_score":	1999935,
			"second_score":	533396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	963,
			"primary_score":	1999935,
			"second_score":	533395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	968,
			"primary_score":	1999935,
			"second_score":	533394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	969,
			"primary_score":	1999935,
			"second_score":	533393
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	970,
			"primary_score":	1999935,
			"second_score":	533392
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	971,
			"primary_score":	1999935,
			"second_score":	534839
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	972,
			"primary_score":	1999935,
			"second_score":	534838
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	973,
			"primary_score":	1999935,
			"second_score":	534837
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	989,
			"primary_score":	1999935,
			"second_score":	533391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	996,
			"primary_score":	1999935,
			"second_score":	533390
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	997,
			"primary_score":	1999935,
			"second_score":	533389
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1010,
			"primary_score":	1999935,
			"second_score":	533388
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1045,
			"primary_score":	1999935,
			"second_score":	533387
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1046,
			"primary_score":	1999935,
			"second_score":	533386
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1047,
			"primary_score":	1999935,
			"second_score":	533383
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1048,
			"primary_score":	1999935,
			"second_score":	533382
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1049,
			"primary_score":	1999935,
			"second_score":	688833
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1050,
			"primary_score":	1999935,
			"second_score":	688832
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1051,
			"primary_score":	1999935,
			"second_score":	688831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1052,
			"primary_score":	1999935,
			"second_score":	688830
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1053,
			"primary_score":	1999935,
			"second_score":	688829
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1054,
			"primary_score":	1999935,
			"second_score":	688828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1064,
			"primary_score":	1999935,
			"second_score":	533378
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1066,
			"primary_score":	1999935,
			"second_score":	533377
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1067,
			"primary_score":	1999935,
			"second_score":	533376
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1068,
			"primary_score":	1999935,
			"second_score":	533375
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1128,
			"primary_score":	1999935,
			"second_score":	533380
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1129,
			"primary_score":	1999935,
			"second_score":	533379
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1132,
			"primary_score":	1999935,
			"second_score":	688826
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1133,
			"primary_score":	1999935,
			"second_score":	688825
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1134,
			"primary_score":	1999935,
			"second_score":	688824
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1137,
			"primary_score":	1999935,
			"second_score":	688823
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1138,
			"primary_score":	1999935,
			"second_score":	688822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1437,
			"primary_score":	1999935,
			"second_score":	688820
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1438,
			"primary_score":	1999935,
			"second_score":	688819
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1439,
			"primary_score":	1999935,
			"second_score":	688818
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1440,
			"primary_score":	1999935,
			"second_score":	688817
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1442,
			"primary_score":	1999935,
			"second_score":	688816
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1443,
			"primary_score":	1999935,
			"second_score":	688815
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1444,
			"primary_score":	1999935,
			"second_score":	688814
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1445,
			"primary_score":	1999935,
			"second_score":	688813
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1447,
			"primary_score":	1999935,
			"second_score":	688812
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1448,
			"primary_score":	1999935,
			"second_score":	688811
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1449,
			"primary_score":	1999958,
			"second_score":	688810
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1450,
			"primary_score":	1999958,
			"second_score":	688809
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1452,
			"primary_score":	1999935,
			"second_score":	152821
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1453,
			"primary_score":	1999935,
			"second_score":	152820
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1455,
			"primary_score":	1999935,
			"second_score":	688808
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1457,
			"primary_score":	1999935,
			"second_score":	688807
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1458,
			"primary_score":	1999935,
			"second_score":	688806
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1460,
			"primary_score":	1999935,
			"second_score":	688805
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1462,
			"primary_score":	1999935,
			"second_score":	688804
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1463,
			"primary_score":	1999935,
			"second_score":	688803
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1464,
			"primary_score":	1999935,
			"second_score":	688802
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1465,
			"primary_score":	1999935,
			"second_score":	688801
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1466,
			"primary_score":	1999958,
			"second_score":	688798
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1467,
			"primary_score":	1999935,
			"second_score":	688796
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	1468,
			"primary_score":	1999935,
			"second_score":	688795
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2191,
			"primary_score":	1999935,
			"second_score":	534836
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2225,
			"primary_score":	1999935,
			"second_score":	534835
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2226,
			"primary_score":	1999935,
			"second_score":	534834
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2227,
			"primary_score":	1999935,
			"second_score":	534831
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2228,
			"primary_score":	1999935,
			"second_score":	534830
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2229,
			"primary_score":	1999935,
			"second_score":	534829
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2347,
			"primary_score":	1999935,
			"second_score":	557922
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2348,
			"primary_score":	1999935,
			"second_score":	557921
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2349,
			"primary_score":	1999935,
			"second_score":	557920
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2366,
			"primary_score":	1999935,
			"second_score":	628502
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2368,
			"primary_score":	1999935,
			"second_score":	628501
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2369,
			"primary_score":	1999935,
			"second_score":	628500
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2370,
			"primary_score":	1999935,
			"second_score":	628387
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2371,
			"primary_score":	1999935,
			"second_score":	628386
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2398,
			"primary_score":	1999935,
			"second_score":	668457
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2399,
			"primary_score":	1999935,
			"second_score":	668456
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2410,
			"primary_score":	1999935,
			"second_score":	668455
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2415,
			"primary_score":	1999935,
			"second_score":	668454
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2419,
			"primary_score":	1999935,
			"second_score":	668453
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2448,
			"primary_score":	1999935,
			"second_score":	647673
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2449,
			"primary_score":	1999935,
			"second_score":	647672
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2450,
			"primary_score":	1999935,
			"second_score":	647671
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2454,
			"primary_score":	1999952,
			"second_score":	695059
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2455,
			"primary_score":	1999952,
			"second_score":	695058
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2460,
			"primary_score":	1999952,
			"second_score":	695057
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2464,
			"primary_score":	1999952,
			"second_score":	695056
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2465,
			"primary_score":	1999976,
			"second_score":	695055
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2470,
			"primary_score":	1999955,
			"second_score":	549348
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2471,
			"primary_score":	1999955,
			"second_score":	549347
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2482,
			"primary_score":	1999955,
			"second_score":	549346
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2483,
			"primary_score":	1999955,
			"second_score":	559773
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2487,
			"primary_score":	1999996,
			"second_score":	549345
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2488,
			"primary_score":	1999998,
			"second_score":	549344
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2500,
			"primary_score":	1999989,
			"second_score":	611750
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2501,
			"primary_score":	1999989,
			"second_score":	611749
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2512,
			"primary_score":	1999989,
			"second_score":	611748
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2517,
			"primary_score":	1999990,
			"second_score":	611747
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2518,
			"primary_score":	1999990,
			"second_score":	611746
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2525,
			"primary_score":	1999935,
			"second_score":	130058
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2526,
			"primary_score":	1999935,
			"second_score":	130057
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2536,
			"primary_score":	1999935,
			"second_score":	130056
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2540,
			"primary_score":	1999935,
			"second_score":	130055
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2585,
			"primary_score":	1999935,
			"second_score":	136138
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2586,
			"primary_score":	1999935,
			"second_score":	136137
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2591,
			"primary_score":	1999935,
			"second_score":	136136
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2592,
			"primary_score":	1999935,
			"second_score":	136135
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2601,
			"primary_score":	1999935,
			"second_score":	577886
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2602,
			"primary_score":	1999935,
			"second_score":	577885
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2603,
			"primary_score":	1999935,
			"second_score":	137564
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2604,
			"primary_score":	1999935,
			"second_score":	137563
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2607,
			"primary_score":	1999935,
			"second_score":	577884
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2608,
			"primary_score":	1999935,
			"second_score":	577883
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2609,
			"primary_score":	1999965,
			"second_score":	577882
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2626,
			"primary_score":	1999935,
			"second_score":	538494
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2628,
			"primary_score":	1999935,
			"second_score":	538493
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2629,
			"primary_score":	1999935,
			"second_score":	538492
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2634,
			"primary_score":	1999935,
			"second_score":	536280
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2635,
			"primary_score":	1999935,
			"second_score":	536279
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2636,
			"primary_score":	1999935,
			"second_score":	536278
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2639,
			"primary_score":	1999935,
			"second_score":	536273
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2641,
			"primary_score":	1999935,
			"second_score":	536272
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2642,
			"primary_score":	1999935,
			"second_score":	536271
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2643,
			"primary_score":	1999935,
			"second_score":	536270
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2644,
			"primary_score":	1999935,
			"second_score":	536269
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2645,
			"primary_score":	1999935,
			"second_score":	536268
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2646,
			"primary_score":	1999935,
			"second_score":	536262
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2651,
			"primary_score":	1999935,
			"second_score":	157962
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2652,
			"primary_score":	1999935,
			"second_score":	157961
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2653,
			"primary_score":	1999935,
			"second_score":	157960
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2688,
			"primary_score":	1999959,
			"second_score":	628535
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2689,
			"primary_score":	1999959,
			"second_score":	628534
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2690,
			"primary_score":	1999959,
			"second_score":	692963
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2694,
			"primary_score":	1999935,
			"second_score":	539311
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2695,
			"primary_score":	1999935,
			"second_score":	539310
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2696,
			"primary_score":	1999935,
			"second_score":	539309
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2697,
			"primary_score":	1999935,
			"second_score":	539308
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2698,
			"primary_score":	1999935,
			"second_score":	539307
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2703,
			"primary_score":	1999935,
			"second_score":	539306
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2719,
			"primary_score":	1999935,
			"second_score":	558330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2720,
			"primary_score":	1999935,
			"second_score":	558329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2725,
			"primary_score":	1999935,
			"second_score":	558328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2726,
			"primary_score":	1999935,
			"second_score":	558327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2727,
			"primary_score":	1999935,
			"second_score":	131877
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2730,
			"primary_score":	1999935,
			"second_score":	134799
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2731,
			"primary_score":	1999935,
			"second_score":	134798
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2732,
			"primary_score":	1999935,
			"second_score":	134797
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2763,
			"primary_score":	1999988,
			"second_score":	540802
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2764,
			"primary_score":	1999988,
			"second_score":	540801
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2768,
			"primary_score":	1999945,
			"second_score":	564998
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2769,
			"primary_score":	1999945,
			"second_score":	564997
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2813,
			"primary_score":	1999960,
			"second_score":	549754
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2814,
			"primary_score":	1999960,
			"second_score":	549753
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2815,
			"primary_score":	1999961,
			"second_score":	549752
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2891,
			"primary_score":	1999945,
			"second_score":	547482
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2892,
			"primary_score":	1999945,
			"second_score":	547481
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2898,
			"primary_score":	1999945,
			"second_score":	547480
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2899,
			"primary_score":	1999945,
			"second_score":	547479
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2905,
			"primary_score":	1999935,
			"second_score":	538496
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2906,
			"primary_score":	1999935,
			"second_score":	538495
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2909,
			"primary_score":	1999935,
			"second_score":	534828
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2910,
			"primary_score":	1999935,
			"second_score":	534827
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2911,
			"primary_score":	1999935,
			"second_score":	158778
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2914,
			"primary_score":	1999984,
			"second_score":	542726
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2915,
			"primary_score":	1999984,
			"second_score":	542725
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2916,
			"primary_score":	1999984,
			"second_score":	542724
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2918,
			"primary_score":	1999984,
			"second_score":	542723
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2919,
			"primary_score":	1999984,
			"second_score":	542722
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2920,
			"primary_score":	1999984,
			"second_score":	542634
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2925,
			"primary_score":	1999984,
			"second_score":	536639
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2926,
			"primary_score":	1999984,
			"second_score":	536638
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2927,
			"primary_score":	1999984,
			"second_score":	536637
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2929,
			"primary_score":	1999984,
			"second_score":	536636
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2930,
			"primary_score":	1999984,
			"second_score":	536635
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2931,
			"primary_score":	1999984,
			"second_score":	536631
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2932,
			"primary_score":	1999984,
			"second_score":	536628
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2934,
			"primary_score":	1999984,
			"second_score":	536599
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2958,
			"primary_score":	1999971,
			"second_score":	587439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2960,
			"primary_score":	1999971,
			"second_score":	587438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2961,
			"primary_score":	1999971,
			"second_score":	587437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2962,
			"primary_score":	1999971,
			"second_score":	587436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2977,
			"primary_score":	1999971,
			"second_score":	587435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2978,
			"primary_score":	1999971,
			"second_score":	587434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2983,
			"primary_score":	1999972,
			"second_score":	598468
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2984,
			"primary_score":	1999972,
			"second_score":	598467
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2985,
			"primary_score":	1999972,
			"second_score":	598466
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	2990,
			"primary_score":	1999990,
			"second_score":	598465
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3000,
			"primary_score":	1999935,
			"second_score":	665538
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3001,
			"primary_score":	1999935,
			"second_score":	665537
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3045,
			"primary_score":	1999935,
			"second_score":	698985
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3046,
			"primary_score":	1999935,
			"second_score":	698984
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3048,
			"primary_score":	1999935,
			"second_score":	698983
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3050,
			"primary_score":	1999935,
			"second_score":	698982
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3051,
			"primary_score":	1999935,
			"second_score":	698981
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3052,
			"primary_score":	1999935,
			"second_score":	698980
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3053,
			"primary_score":	1999935,
			"second_score":	698979
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3055,
			"primary_score":	1999935,
			"second_score":	698978
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3056,
			"primary_score":	1999935,
			"second_score":	697993
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3057,
			"primary_score":	1999935,
			"second_score":	697992
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3058,
			"primary_score":	1999935,
			"second_score":	697991
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3059,
			"primary_score":	1999935,
			"second_score":	697990
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3061,
			"primary_score":	1999935,
			"second_score":	697989
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3062,
			"primary_score":	1999935,
			"second_score":	697994
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3075,
			"primary_score":	1999935,
			"second_score":	697988
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3076,
			"primary_score":	1999935,
			"second_score":	697878
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3077,
			"primary_score":	1999935,
			"second_score":	697877
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3080,
			"primary_score":	1999935,
			"second_score":	697876
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3081,
			"primary_score":	1999935,
			"second_score":	697875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3082,
			"primary_score":	1999935,
			"second_score":	697874
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3083,
			"primary_score":	1999935,
			"second_score":	696538
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3098,
			"primary_score":	1999935,
			"second_score":	696537
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3101,
			"primary_score":	1999935,
			"second_score":	696536
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3104,
			"primary_score":	1999935,
			"second_score":	696535
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3106,
			"primary_score":	1999935,
			"second_score":	696534
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3108,
			"primary_score":	1999935,
			"second_score":	696533
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3115,
			"primary_score":	1999935,
			"second_score":	696532
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3120,
			"primary_score":	1999935,
			"second_score":	672295
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3121,
			"primary_score":	1999935,
			"second_score":	672294
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3123,
			"primary_score":	1999935,
			"second_score":	672293
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3125,
			"primary_score":	1999935,
			"second_score":	672292
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3126,
			"primary_score":	1999935,
			"second_score":	672291
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3128,
			"primary_score":	1999935,
			"second_score":	672290
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3129,
			"primary_score":	1999935,
			"second_score":	672278
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3132,
			"primary_score":	1999935,
			"second_score":	672277
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3133,
			"primary_score":	1999935,
			"second_score":	672109
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3146,
			"primary_score":	1999935,
			"second_score":	701010
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3149,
			"primary_score":	1999935,
			"second_score":	701009
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3179,
			"primary_score":	1999935,
			"second_score":	149000
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3180,
			"primary_score":	1999935,
			"second_score":	148999
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3181,
			"primary_score":	1999935,
			"second_score":	148998
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3183,
			"primary_score":	1999935,
			"second_score":	148997
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3184,
			"primary_score":	1999935,
			"second_score":	148996
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3185,
			"primary_score":	1999935,
			"second_score":	119683
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3194,
			"primary_score":	1999935,
			"second_score":	628510
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3195,
			"primary_score":	1999935,
			"second_score":	628509
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3196,
			"primary_score":	1999935,
			"second_score":	628506
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3197,
			"primary_score":	1999935,
			"second_score":	628505
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3199,
			"primary_score":	1999935,
			"second_score":	628504
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3200,
			"primary_score":	1999935,
			"second_score":	628511
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3202,
			"primary_score":	1999935,
			"second_score":	628503
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3255,
			"primary_score":	1999935,
			"second_score":	131865
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3256,
			"primary_score":	1999935,
			"second_score":	131864
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3257,
			"primary_score":	1999935,
			"second_score":	131863
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3258,
			"primary_score":	1999935,
			"second_score":	131862
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3261,
			"primary_score":	1999935,
			"second_score":	131861
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3333,
			"primary_score":	1999935,
			"second_score":	534825
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3334,
			"primary_score":	1999935,
			"second_score":	691012
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3335,
			"primary_score":	1999935,
			"second_score":	534823
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3336,
			"primary_score":	1999935,
			"second_score":	534822
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3338,
			"primary_score":	1999935,
			"second_score":	534821
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3340,
			"primary_score":	1999935,
			"second_score":	534820
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3341,
			"primary_score":	1999935,
			"second_score":	534819
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3342,
			"primary_score":	1999935,
			"second_score":	534818
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3343,
			"primary_score":	1999935,
			"second_score":	534817
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3344,
			"primary_score":	1999935,
			"second_score":	534816
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3345,
			"primary_score":	1999935,
			"second_score":	534815
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3350,
			"primary_score":	1999935,
			"second_score":	691011
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3351,
			"primary_score":	1999935,
			"second_score":	691010
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3359,
			"primary_score":	1999945,
			"second_score":	547427
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3360,
			"primary_score":	1999945,
			"second_score":	547426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3361,
			"primary_score":	1999945,
			"second_score":	547423
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3362,
			"primary_score":	1999945,
			"second_score":	547422
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3363,
			"primary_score":	1999945,
			"second_score":	547421
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3364,
			"primary_score":	1999945,
			"second_score":	547420
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3365,
			"primary_score":	1999945,
			"second_score":	547419
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3367,
			"primary_score":	1999978,
			"second_score":	563127
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3371,
			"primary_score":	1999945,
			"second_score":	547440
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3374,
			"primary_score":	1999945,
			"second_score":	547439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3378,
			"primary_score":	1999945,
			"second_score":	547418
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3380,
			"primary_score":	1999945,
			"second_score":	547417
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3382,
			"primary_score":	1999945,
			"second_score":	547416
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3383,
			"primary_score":	1999945,
			"second_score":	547415
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3384,
			"primary_score":	1999945,
			"second_score":	547302
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	3385,
			"primary_score":	1999945,
			"second_score":	547301
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4210,
			"primary_score":	1999988,
			"second_score":	540799
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4211,
			"primary_score":	1999988,
			"second_score":	540798
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4212,
			"primary_score":	1999988,
			"second_score":	540797
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4231,
			"primary_score":	2000000,
			"second_score":	540796
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4232,
			"primary_score":	2000000,
			"second_score":	540795
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4233,
			"primary_score":	2000000,
			"second_score":	540794
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4621,
			"primary_score":	2000000,
			"second_score":	540792
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4622,
			"primary_score":	2000000,
			"second_score":	540791
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4623,
			"primary_score":	2000000,
			"second_score":	540790
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4624,
			"primary_score":	2000000,
			"second_score":	540789
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4626,
			"primary_score":	2000000,
			"second_score":	540788
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4627,
			"primary_score":	2000000,
			"second_score":	540787
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4628,
			"primary_score":	2000000,
			"second_score":	540786
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4629,
			"primary_score":	2000000,
			"second_score":	540785
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4631,
			"primary_score":	2000000,
			"second_score":	540784
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4632,
			"primary_score":	2000000,
			"second_score":	540783
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4633,
			"primary_score":	2000000,
			"second_score":	540782
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4634,
			"primary_score":	2000000,
			"second_score":	540781
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4635,
			"primary_score":	2000000,
			"second_score":	540780
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4636,
			"primary_score":	2000000,
			"second_score":	540779
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4637,
			"primary_score":	2000000,
			"second_score":	540778
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4639,
			"primary_score":	2000000,
			"second_score":	540777
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4640,
			"primary_score":	2000000,
			"second_score":	540776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4641,
			"primary_score":	2000000,
			"second_score":	540775
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4642,
			"primary_score":	2000000,
			"second_score":	540774
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4644,
			"primary_score":	2000000,
			"second_score":	540773
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4645,
			"primary_score":	2000000,
			"second_score":	540772
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4646,
			"primary_score":	2000000,
			"second_score":	540771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4647,
			"primary_score":	2000000,
			"second_score":	540770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4649,
			"primary_score":	2000000,
			"second_score":	540769
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4650,
			"primary_score":	2000000,
			"second_score":	540768
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4651,
			"primary_score":	2000000,
			"second_score":	540767
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4652,
			"primary_score":	2000000,
			"second_score":	540766
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4654,
			"primary_score":	2000000,
			"second_score":	540765
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4655,
			"primary_score":	2000000,
			"second_score":	540764
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4656,
			"primary_score":	2000000,
			"second_score":	540763
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4657,
			"primary_score":	2000000,
			"second_score":	540762
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4659,
			"primary_score":	2000000,
			"second_score":	540761
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4660,
			"primary_score":	2000000,
			"second_score":	540760
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4661,
			"primary_score":	2000000,
			"second_score":	540759
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4662,
			"primary_score":	2000000,
			"second_score":	540758
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4664,
			"primary_score":	2000000,
			"second_score":	540757
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4665,
			"primary_score":	2000000,
			"second_score":	540756
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4666,
			"primary_score":	2000000,
			"second_score":	540755
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4667,
			"primary_score":	2000000,
			"second_score":	540754
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4669,
			"primary_score":	2000000,
			"second_score":	540753
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4670,
			"primary_score":	2000000,
			"second_score":	540752
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4671,
			"primary_score":	2000000,
			"second_score":	540751
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4672,
			"primary_score":	2000000,
			"second_score":	540750
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4674,
			"primary_score":	2000000,
			"second_score":	540749
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4675,
			"primary_score":	2000000,
			"second_score":	540748
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4678,
			"primary_score":	2000000,
			"second_score":	540747
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4679,
			"primary_score":	2000000,
			"second_score":	540746
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4681,
			"primary_score":	2000000,
			"second_score":	540745
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4682,
			"primary_score":	2000000,
			"second_score":	540744
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4739,
			"primary_score":	1999935,
			"second_score":	131876
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4772,
			"primary_score":	1999935,
			"second_score":	131875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4773,
			"primary_score":	1999935,
			"second_score":	131874
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4778,
			"primary_score":	1999935,
			"second_score":	131873
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4782,
			"primary_score":	1999935,
			"second_score":	131872
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4783,
			"primary_score":	1999935,
			"second_score":	131871
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4784,
			"primary_score":	1999935,
			"second_score":	131870
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4870,
			"primary_score":	1999935,
			"second_score":	131869
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4871,
			"primary_score":	1999935,
			"second_score":	131868
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4872,
			"primary_score":	1999935,
			"second_score":	131867
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	4873,
			"primary_score":	1999935,
			"second_score":	131866
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5273,
			"primary_score":	1999959,
			"second_score":	628532
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5274,
			"primary_score":	1999959,
			"second_score":	628531
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5275,
			"primary_score":	1999959,
			"second_score":	628530
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5276,
			"primary_score":	1999959,
			"second_score":	692958
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5278,
			"primary_score":	1999959,
			"second_score":	692957
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5279,
			"primary_score":	1999959,
			"second_score":	692956
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5280,
			"primary_score":	1999959,
			"second_score":	692955
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5476,
			"primary_score":	1999943,
			"second_score":	542261
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5477,
			"primary_score":	1999943,
			"second_score":	542260
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5478,
			"primary_score":	1999943,
			"second_score":	542257
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5479,
			"primary_score":	1999943,
			"second_score":	542256
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5481,
			"primary_score":	1999935,
			"second_score":	536277
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5482,
			"primary_score":	1999943,
			"second_score":	573697
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5483,
			"primary_score":	1999943,
			"second_score":	573696
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5486,
			"primary_score":	1999935,
			"second_score":	536276
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5487,
			"primary_score":	1999935,
			"second_score":	536275
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5488,
			"primary_score":	1999935,
			"second_score":	536274
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5523,
			"primary_score":	1999965,
			"second_score":	577881
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5524,
			"primary_score":	1999965,
			"second_score":	577880
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5529,
			"primary_score":	1999965,
			"second_score":	577879
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5530,
			"primary_score":	1999965,
			"second_score":	577878
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5531,
			"primary_score":	1999966,
			"second_score":	577877
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5572,
			"primary_score":	1999966,
			"second_score":	577876
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5573,
			"primary_score":	1999966,
			"second_score":	577875
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5578,
			"primary_score":	1999966,
			"second_score":	577874
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5579,
			"primary_score":	1999967,
			"second_score":	577873
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5580,
			"primary_score":	1999967,
			"second_score":	577872
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5631,
			"primary_score":	1999967,
			"second_score":	577871
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5632,
			"primary_score":	1999967,
			"second_score":	577870
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5633,
			"primary_score":	1999967,
			"second_score":	577869
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5665,
			"primary_score":	1999967,
			"second_score":	577867
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5666,
			"primary_score":	1999967,
			"second_score":	577866
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5669,
			"primary_score":	1999967,
			"second_score":	577865
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5670,
			"primary_score":	1999967,
			"second_score":	577864
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5672,
			"primary_score":	1999967,
			"second_score":	577863
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	5673,
			"primary_score":	1999967,
			"second_score":	577862
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6045,
			"primary_score":	1999935,
			"second_score":	130053
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6046,
			"primary_score":	1999935,
			"second_score":	130052
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6051,
			"primary_score":	1999935,
			"second_score":	130051
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6055,
			"primary_score":	1999935,
			"second_score":	130050
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6100,
			"primary_score":	1999935,
			"second_score":	130048
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6101,
			"primary_score":	1999935,
			"second_score":	130047
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6102,
			"primary_score":	1999935,
			"second_score":	130046
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6369,
			"primary_score":	1999955,
			"second_score":	559771
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6370,
			"primary_score":	1999955,
			"second_score":	559770
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6373,
			"primary_score":	1999955,
			"second_score":	559769
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6374,
			"primary_score":	1999955,
			"second_score":	559768
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6376,
			"primary_score":	1999955,
			"second_score":	559767
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6377,
			"primary_score":	1999955,
			"second_score":	559766
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6410,
			"primary_score":	1999998,
			"second_score":	549342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6411,
			"primary_score":	1999998,
			"second_score":	549341
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6412,
			"primary_score":	1999998,
			"second_score":	549340
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6413,
			"primary_score":	1999999,
			"second_score":	549339
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6415,
			"primary_score":	1999999,
			"second_score":	549338
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6416,
			"primary_score":	1999999,
			"second_score":	549337
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6417,
			"primary_score":	1999999,
			"second_score":	549336
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6418,
			"primary_score":	1999999,
			"second_score":	549335
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6420,
			"primary_score":	1999999,
			"second_score":	549334
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6421,
			"primary_score":	1999999,
			"second_score":	549333
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6422,
			"primary_score":	1999999,
			"second_score":	549332
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6423,
			"primary_score":	1999999,
			"second_score":	549331
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6425,
			"primary_score":	1999999,
			"second_score":	549330
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6426,
			"primary_score":	1999999,
			"second_score":	549329
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6429,
			"primary_score":	1999999,
			"second_score":	549328
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6430,
			"primary_score":	1999999,
			"second_score":	549327
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6432,
			"primary_score":	1999999,
			"second_score":	549326
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6433,
			"primary_score":	1999999,
			"second_score":	549325
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6842,
			"primary_score":	1999935,
			"second_score":	647669
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6843,
			"primary_score":	1999935,
			"second_score":	647668
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6853,
			"primary_score":	1999935,
			"second_score":	647667
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6854,
			"primary_score":	1999935,
			"second_score":	674342
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6876,
			"primary_score":	1999935,
			"second_score":	134950
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6877,
			"primary_score":	1999935,
			"second_score":	134949
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6878,
			"primary_score":	1999935,
			"second_score":	134948
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6989,
			"primary_score":	1999935,
			"second_score":	134946
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6990,
			"primary_score":	1999935,
			"second_score":	134945
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6991,
			"primary_score":	1999935,
			"second_score":	134944
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	6992,
			"primary_score":	1999935,
			"second_score":	134943
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7379,
			"primary_score":	1999935,
			"second_score":	668451
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7380,
			"primary_score":	1999935,
			"second_score":	668450
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7381,
			"primary_score":	1999935,
			"second_score":	668449
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7382,
			"primary_score":	1999935,
			"second_score":	668448
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7384,
			"primary_score":	1999935,
			"second_score":	668447
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7385,
			"primary_score":	1999935,
			"second_score":	668446
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7386,
			"primary_score":	1999935,
			"second_score":	668445
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7387,
			"primary_score":	1999935,
			"second_score":	668444
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7389,
			"primary_score":	1999935,
			"second_score":	668443
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7390,
			"primary_score":	1999935,
			"second_score":	668442
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7391,
			"primary_score":	1999935,
			"second_score":	668441
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7392,
			"primary_score":	1999935,
			"second_score":	668440
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7394,
			"primary_score":	1999935,
			"second_score":	668439
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7395,
			"primary_score":	1999935,
			"second_score":	668438
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7396,
			"primary_score":	1999935,
			"second_score":	668437
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7397,
			"primary_score":	1999935,
			"second_score":	668436
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7399,
			"primary_score":	1999935,
			"second_score":	668435
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7400,
			"primary_score":	1999935,
			"second_score":	668434
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7401,
			"primary_score":	1999935,
			"second_score":	668433
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7402,
			"primary_score":	1999935,
			"second_score":	668432
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7404,
			"primary_score":	1999935,
			"second_score":	668431
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7405,
			"primary_score":	1999935,
			"second_score":	668430
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7406,
			"primary_score":	1999935,
			"second_score":	668429
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7407,
			"primary_score":	1999935,
			"second_score":	668428
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7409,
			"primary_score":	1999935,
			"second_score":	668427
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7410,
			"primary_score":	1999935,
			"second_score":	668426
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7411,
			"primary_score":	1999935,
			"second_score":	131776
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7658,
			"primary_score":	1999935,
			"second_score":	691396
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7659,
			"primary_score":	1999935,
			"second_score":	691395
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7660,
			"primary_score":	1999935,
			"second_score":	691394
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7688,
			"primary_score":	1999960,
			"second_score":	638479
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7689,
			"primary_score":	1999960,
			"second_score":	638478
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	7694,
			"primary_score":	1999960,
			"second_score":	638477
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8066,
			"primary_score":	1999935,
			"second_score":	691392
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8067,
			"primary_score":	1999935,
			"second_score":	691391
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8068,
			"primary_score":	1999935,
			"second_score":	691390
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8069,
			"primary_score":	1999935,
			"second_score":	691389
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8071,
			"primary_score":	1999935,
			"second_score":	691388
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8072,
			"primary_score":	1999935,
			"second_score":	691387
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8075,
			"primary_score":	1999935,
			"second_score":	691386
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8076,
			"primary_score":	1999935,
			"second_score":	691385
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8078,
			"primary_score":	1999935,
			"second_score":	691384
		}, {
			"file":	"Zend/zend_language_scanner.c",
			"line":	8079,
			"primary_score":	1999935,
			"second_score":	691383
		}, {
			"file":	"Zend/zend_list.c",
			"line":	37,
			"primary_score":	1999935,
			"second_score":	708567
		}, {
			"file":	"Zend/zend_list.c",
			"line":	38,
			"primary_score":	1999935,
			"second_score":	708566
		}, {
			"file":	"Zend/zend_list.c",
			"line":	40,
			"primary_score":	1999935,
			"second_score":	708565
		}, {
			"file":	"Zend/zend_list.c",
			"line":	41,
			"primary_score":	1999935,
			"second_score":	708564
		}, {
			"file":	"Zend/zend_list.c",
			"line":	42,
			"primary_score":	1999935,
			"second_score":	708563
		}, {
			"file":	"Zend/zend_list.c",
			"line":	44,
			"primary_score":	1999935,
			"second_score":	708562
		}, {
			"file":	"Zend/zend_list.c",
			"line":	46,
			"primary_score":	1999935,
			"second_score":	708559
		}, {
			"file":	"Zend/zend_list.c",
			"line":	47,
			"primary_score":	1999935,
			"second_score":	708389
		}, {
			"file":	"Zend/zend_list.c",
			"line":	52,
			"primary_score":	1999935,
			"second_score":	114072
		}, {
			"file":	"Zend/zend_list.c",
			"line":	54,
			"primary_score":	1999935,
			"second_score":	114071
		}, {
			"file":	"Zend/zend_list.c",
			"line":	56,
			"primary_score":	1999935,
			"second_score":	114061
		}, {
			"file":	"Zend/zend_list.c",
			"line":	57,
			"primary_score":	1999935,
			"second_score":	114060
		}, {
			"file":	"Zend/zend_list.c",
			"line":	96,
			"primary_score":	1999935,
			"second_score":	708569
		}, {
			"file":	"Zend/zend_list.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	708568
		}, {
			"file":	"Zend/zend_list.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	708388
		}, {
			"file":	"Zend/zend_list.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	708387
		}, {
			"file":	"Zend/zend_list.c",
			"line":	170,
			"primary_score":	1999935,
			"second_score":	114038
		}, {
			"file":	"Zend/zend_list.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	114037
		}, {
			"file":	"Zend/zend_list.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	114036
		}, {
			"file":	"Zend/zend_list.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	114035
		}, {
			"file":	"Zend/zend_list.c",
			"line":	175,
			"primary_score":	1999935,
			"second_score":	114025
		}, {
			"file":	"Zend/zend_list.c",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	114024
		}, {
			"file":	"Zend/zend_list.c",
			"line":	185,
			"primary_score":	1999935,
			"second_score":	113915
		}, {
			"file":	"Zend/zend_list.c",
			"line":	239,
			"primary_score":	1999935,
			"second_score":	103517
		}, {
			"file":	"Zend/zend_list.c",
			"line":	347,
			"primary_score":	1999935,
			"second_score":	6223
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	28,
			"primary_score":	1999935,
			"second_score":	691764
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	29,
			"primary_score":	1999935,
			"second_score":	691763
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	30,
			"primary_score":	1999935,
			"second_score":	691762
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	31,
			"primary_score":	1999935,
			"second_score":	691761
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	32,
			"primary_score":	1999935,
			"second_score":	691760
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	33,
			"primary_score":	1999935,
			"second_score":	691759
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	39,
			"primary_score":	1999935,
			"second_score":	704351
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	41,
			"primary_score":	1999935,
			"second_score":	704247
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	42,
			"primary_score":	1999935,
			"second_score":	704246
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	43,
			"primary_score":	1999935,
			"second_score":	704245
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	46,
			"primary_score":	1999935,
			"second_score":	704244
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	48,
			"primary_score":	1999935,
			"second_score":	704243
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	49,
			"primary_score":	1999935,
			"second_score":	704242
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	51,
			"primary_score":	1999935,
			"second_score":	704241
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	690174
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	94,
			"primary_score":	1999935,
			"second_score":	690173
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	96,
			"primary_score":	1999935,
			"second_score":	690172
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	690171
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	690170
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	99,
			"primary_score":	1999935,
			"second_score":	690167
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	690100
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	109,
			"primary_score":	1999935,
			"second_score":	3144
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	111,
			"primary_score":	1999935,
			"second_score":	3143
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	120,
			"primary_score":	1999935,
			"second_score":	3142
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	126,
			"primary_score":	1999935,
			"second_score":	149439
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	127,
			"primary_score":	1999935,
			"second_score":	149435
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	190,
			"primary_score":	1999935,
			"second_score":	14747
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	14746
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	233,
			"primary_score":	1999935,
			"second_score":	149487
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	149486
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	275,
			"primary_score":	1999935,
			"second_score":	704238
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	277,
			"primary_score":	1999935,
			"second_score":	704237
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	278,
			"primary_score":	1999935,
			"second_score":	704236
		}, {
			"file":	"Zend/zend_llist.c",
			"line":	279,
			"primary_score":	1999935,
			"second_score":	704235
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	41,
			"primary_score":	1999935,
			"second_score":	113745
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	42,
			"primary_score":	1999935,
			"second_score":	113679
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	47,
			"primary_score":	1999935,
			"second_score":	149322
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	49,
			"primary_score":	1999935,
			"second_score":	149321
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	82,
			"primary_score":	1999935,
			"second_score":	114639
		}, {
			"file":	"Zend/zend_objects_API.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	114638
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	48,
			"primary_score":	1999935,
			"second_score":	703497
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	53,
			"primary_score":	1999935,
			"second_score":	703607
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	55,
			"primary_score":	1999935,
			"second_score":	703606
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	62,
			"primary_score":	1999935,
			"second_score":	703605
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	63,
			"primary_score":	1999935,
			"second_score":	703501
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	64,
			"primary_score":	1999935,
			"second_score":	703500
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	65,
			"primary_score":	1999935,
			"second_score":	703499
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	66,
			"primary_score":	1999935,
			"second_score":	703498
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	68,
			"primary_score":	1999935,
			"second_score":	703392
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	69,
			"primary_score":	1999935,
			"second_score":	703391
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	71,
			"primary_score":	1999935,
			"second_score":	703390
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	73,
			"primary_score":	1999935,
			"second_score":	703389
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	74,
			"primary_score":	1999935,
			"second_score":	703388
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	75,
			"primary_score":	1999935,
			"second_score":	703386
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	76,
			"primary_score":	1999935,
			"second_score":	703385
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	703384
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	79,
			"primary_score":	1999935,
			"second_score":	703383
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	80,
			"primary_score":	1999935,
			"second_score":	703382
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	82,
			"primary_score":	1999935,
			"second_score":	703381
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	703380
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	85,
			"primary_score":	1999935,
			"second_score":	703379
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	86,
			"primary_score":	1999935,
			"second_score":	703378
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	88,
			"primary_score":	1999935,
			"second_score":	703377
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	89,
			"primary_score":	1999935,
			"second_score":	703376
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	91,
			"primary_score":	1999935,
			"second_score":	703375
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	703374
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	703373
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	703372
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	703371
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	703370
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	101,
			"primary_score":	1999935,
			"second_score":	703369
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	703368
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	703367
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	110,
			"primary_score":	1999935,
			"second_score":	14836
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	122,
			"primary_score":	1999935,
			"second_score":	14838
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	124,
			"primary_score":	1999935,
			"second_score":	14837
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	136,
			"primary_score":	1999935,
			"second_score":	114719
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	140,
			"primary_score":	1999935,
			"second_score":	114718
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	197,
			"primary_score":	1999935,
			"second_score":	114702
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	114701
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	266,
			"primary_score":	1999935,
			"second_score":	15271
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	268,
			"primary_score":	1999935,
			"second_score":	15270
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	271,
			"primary_score":	1999935,
			"second_score":	15269
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	312,
			"primary_score":	1999935,
			"second_score":	19051
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	314,
			"primary_score":	1999935,
			"second_score":	19050
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	315,
			"primary_score":	1999935,
			"second_score":	18987
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	316,
			"primary_score":	1999935,
			"second_score":	18986
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	319,
			"primary_score":	1999935,
			"second_score":	18978
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	321,
			"primary_score":	1999935,
			"second_score":	15268
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	329,
			"primary_score":	1999935,
			"second_score":	15267
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	330,
			"primary_score":	1999935,
			"second_score":	15259
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	333,
			"primary_score":	1999935,
			"second_score":	15258
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	334,
			"primary_score":	1999935,
			"second_score":	14829
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	335,
			"primary_score":	1999935,
			"second_score":	14821
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	16325
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	338,
			"primary_score":	1999935,
			"second_score":	14820
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	339,
			"primary_score":	1999935,
			"second_score":	14819
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	350,
			"primary_score":	1999935,
			"second_score":	149650
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	351,
			"primary_score":	1999935,
			"second_score":	149649
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	352,
			"primary_score":	1999935,
			"second_score":	149648
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	354,
			"primary_score":	1999935,
			"second_score":	149647
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	359,
			"primary_score":	1999935,
			"second_score":	149646
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	360,
			"primary_score":	1999935,
			"second_score":	149645
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	363,
			"primary_score":	1999935,
			"second_score":	149626
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	367,
			"primary_score":	1999935,
			"second_score":	149625
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	369,
			"primary_score":	1999935,
			"second_score":	149606
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	370,
			"primary_score":	1999945,
			"second_score":	149605
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	371,
			"primary_score":	1999945,
			"second_score":	149604
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	372,
			"primary_score":	1999945,
			"second_score":	149600
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	373,
			"primary_score":	1999945,
			"second_score":	149599
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	375,
			"primary_score":	1999945,
			"second_score":	149597
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	378,
			"primary_score":	1999935,
			"second_score":	149578
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	379,
			"primary_score":	1999935,
			"second_score":	149577
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	380,
			"primary_score":	1999935,
			"second_score":	149576
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	381,
			"primary_score":	1999935,
			"second_score":	149535
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	382,
			"primary_score":	1999935,
			"second_score":	149532
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	384,
			"primary_score":	1999935,
			"second_score":	149531
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	386,
			"primary_score":	1999935,
			"second_score":	149512
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	388,
			"primary_score":	1999935,
			"second_score":	149493
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	391,
			"primary_score":	1999935,
			"second_score":	149492
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	394,
			"primary_score":	1999935,
			"second_score":	149491
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	397,
			"primary_score":	1999935,
			"second_score":	149490
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	400,
			"primary_score":	1999935,
			"second_score":	149489
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	401,
			"primary_score":	1999935,
			"second_score":	149488
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	403,
			"primary_score":	1999935,
			"second_score":	149485
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	416,
			"primary_score":	1999935,
			"second_score":	690635
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	417,
			"primary_score":	1999935,
			"second_score":	690634
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	418,
			"primary_score":	1999935,
			"second_score":	690633
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	423,
			"primary_score":	1999935,
			"second_score":	690640
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	424,
			"primary_score":	1999935,
			"second_score":	690639
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	426,
			"primary_score":	1999935,
			"second_score":	690638
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	437,
			"primary_score":	1999935,
			"second_score":	690637
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	439,
			"primary_score":	1999935,
			"second_score":	690636
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	441,
			"primary_score":	1999935,
			"second_score":	690632
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	446,
			"primary_score":	1999935,
			"second_score":	690643
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	488,
			"primary_score":	1999935,
			"second_score":	690604
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	490,
			"primary_score":	1999935,
			"second_score":	690603
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	493,
			"primary_score":	1999935,
			"second_score":	690602
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	496,
			"primary_score":	1999935,
			"second_score":	690601
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	497,
			"primary_score":	1999935,
			"second_score":	690600
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	500,
			"primary_score":	1999935,
			"second_score":	690597
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	501,
			"primary_score":	1999945,
			"second_score":	690596
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	502,
			"primary_score":	1999945,
			"second_score":	690540
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	504,
			"primary_score":	1999935,
			"second_score":	690539
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	505,
			"primary_score":	1999935,
			"second_score":	690538
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	506,
			"primary_score":	1999935,
			"second_score":	690479
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	508,
			"primary_score":	1999935,
			"second_score":	690478
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	509,
			"primary_score":	1999935,
			"second_score":	690477
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	510,
			"primary_score":	1999935,
			"second_score":	690421
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	513,
			"primary_score":	1999935,
			"second_score":	690420
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	514,
			"primary_score":	1999935,
			"second_score":	690419
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	515,
			"primary_score":	1999935,
			"second_score":	690418
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	516,
			"primary_score":	1999935,
			"second_score":	690348
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	517,
			"primary_score":	1999935,
			"second_score":	690347
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	519,
			"primary_score":	1999935,
			"second_score":	690346
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	520,
			"primary_score":	1999947,
			"second_score":	690406
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	522,
			"primary_score":	1999935,
			"second_score":	690345
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	530,
			"primary_score":	1999935,
			"second_score":	154142
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	537,
			"primary_score":	1999935,
			"second_score":	154193
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	539,
			"primary_score":	1999935,
			"second_score":	690344
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	540,
			"primary_score":	1999935,
			"second_score":	690340
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	543,
			"primary_score":	1999935,
			"second_score":	690339
		}, {
			"file":	"Zend/zend_opcode.c",
			"line":	544,
			"primary_score":	1999935,
			"second_score":	690338
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	543,
			"primary_score":	1999935,
			"second_score":	120053
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	544,
			"primary_score":	1999935,
			"second_score":	120052
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	546,
			"primary_score":	1999935,
			"second_score":	120051
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	558,
			"primary_score":	1999935,
			"second_score":	120050
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	559,
			"primary_score":	1999935,
			"second_score":	120022
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	561,
			"primary_score":	1999935,
			"second_score":	120021
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	608,
			"primary_score":	1999935,
			"second_score":	120020
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1892,
			"primary_score":	1999935,
			"second_score":	692690
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1893,
			"primary_score":	1999935,
			"second_score":	692689
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1894,
			"primary_score":	1999935,
			"second_score":	692688
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1896,
			"primary_score":	1999935,
			"second_score":	692687
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1897,
			"primary_score":	1999935,
			"second_score":	692637
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1899,
			"primary_score":	1999935,
			"second_score":	692630
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1901,
			"primary_score":	1999935,
			"second_score":	692629
		}, {
			"file":	"Zend/zend_operators.c",
			"line":	1907,
			"primary_score":	1999935,
			"second_score":	692712
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	113747
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	79,
			"primary_score":	1999935,
			"second_score":	113773
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	86,
			"primary_score":	1999935,
			"second_score":	114743
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	88,
			"primary_score":	1999935,
			"second_score":	114742
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	96,
			"primary_score":	1999935,
			"second_score":	114744
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	114741
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	114740
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	114739
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	104,
			"primary_score":	1999935,
			"second_score":	114738
		}, {
			"file":	"Zend/zend_ptr_stack.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	114737
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	62,
			"primary_score":	1999935,
			"second_score":	689598
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	64,
			"primary_score":	1999935,
			"second_score":	532997
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	65,
			"primary_score":	1999935,
			"second_score":	532996
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	66,
			"primary_score":	1999935,
			"second_score":	532995
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	67,
			"primary_score":	1999935,
			"second_score":	532994
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	87,
			"primary_score":	1999935,
			"second_score":	532967
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	88,
			"primary_score":	1999935,
			"second_score":	532966
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	89,
			"primary_score":	1999935,
			"second_score":	532965
		}, {
			"file":	"Zend/zend_ptr_stack.h",
			"line":	90,
			"primary_score":	1999935,
			"second_score":	532964
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	27,
			"primary_score":	1999935,
			"second_score":	114758
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	28,
			"primary_score":	1999935,
			"second_score":	114757
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	29,
			"primary_score":	1999935,
			"second_score":	114756
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	30,
			"primary_score":	1999935,
			"second_score":	114755
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	50,
			"primary_score":	1999935,
			"second_score":	536625
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	51,
			"primary_score":	1999935,
			"second_score":	536624
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	52,
			"primary_score":	1999935,
			"second_score":	536623
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	62,
			"primary_score":	1999935,
			"second_score":	536620
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	63,
			"primary_score":	1999935,
			"second_score":	536619
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	65,
			"primary_score":	1999935,
			"second_score":	536600
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	83,
			"primary_score":	1999935,
			"second_score":	536630
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	690333
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	86,
			"primary_score":	1999984,
			"second_score":	536629
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	113497
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	113496
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	113495
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	121,
			"primary_score":	1999935,
			"second_score":	690647
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	123,
			"primary_score":	1999935,
			"second_score":	690646
		}, {
			"file":	"Zend/zend_stack.c",
			"line":	130,
			"primary_score":	1999935,
			"second_score":	690645
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	46,
			"primary_score":	1999935,
			"second_score":	690147
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	47,
			"primary_score":	1999935,
			"second_score":	690146
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	67,
			"primary_score":	1999935,
			"second_score":	690156
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	68,
			"primary_score":	1999935,
			"second_score":	690155
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	74,
			"primary_score":	1999935,
			"second_score":	690154
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	75,
			"primary_score":	1999935,
			"second_score":	690153
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	76,
			"primary_score":	1999935,
			"second_score":	690152
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	77,
			"primary_score":	1999935,
			"second_score":	690151
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	690150
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	83,
			"primary_score":	1999935,
			"second_score":	690157
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	690149
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	85,
			"primary_score":	1999935,
			"second_score":	690148
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	90,
			"primary_score":	1999935,
			"second_score":	704381
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	704383
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	704382
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	704380
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	704379
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	704377
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	109,
			"primary_score":	1999935,
			"second_score":	704376
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	169,
			"primary_score":	1999935,
			"second_score":	704395
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	170,
			"primary_score":	1999935,
			"second_score":	704394
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	704393
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	178,
			"primary_score":	1999935,
			"second_score":	704392
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	187,
			"primary_score":	1999935,
			"second_score":	704391
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	188,
			"primary_score":	1999935,
			"second_score":	704390
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	189,
			"primary_score":	1999935,
			"second_score":	704389
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	190,
			"primary_score":	1999935,
			"second_score":	704388
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	191,
			"primary_score":	1999935,
			"second_score":	704387
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	704386
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	194,
			"primary_score":	1999935,
			"second_score":	704385
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	208,
			"primary_score":	1999935,
			"second_score":	704384
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	209,
			"primary_score":	1999935,
			"second_score":	704375
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	213,
			"primary_score":	1999935,
			"second_score":	704374
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	214,
			"primary_score":	1999935,
			"second_score":	704373
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	704372
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	218,
			"primary_score":	1999935,
			"second_score":	704371
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	704370
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	223,
			"primary_score":	1999935,
			"second_score":	704369
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	224,
			"primary_score":	1999935,
			"second_score":	704368
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	225,
			"primary_score":	1999935,
			"second_score":	704367
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	227,
			"primary_score":	1999935,
			"second_score":	704366
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	228,
			"primary_score":	1999935,
			"second_score":	704365
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	229,
			"primary_score":	1999935,
			"second_score":	704364
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	231,
			"primary_score":	1999935,
			"second_score":	704363
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	232,
			"primary_score":	1999935,
			"second_score":	704362
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	234,
			"primary_score":	1999935,
			"second_score":	704361
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	275,
			"primary_score":	1999935,
			"second_score":	704360
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	276,
			"primary_score":	1999935,
			"second_score":	704359
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	277,
			"primary_score":	1999935,
			"second_score":	704358
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	278,
			"primary_score":	1999935,
			"second_score":	704357
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	279,
			"primary_score":	1999935,
			"second_score":	704356
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	281,
			"primary_score":	1999935,
			"second_score":	704355
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	282,
			"primary_score":	1999935,
			"second_score":	704354
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	284,
			"primary_score":	1999935,
			"second_score":	704353
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	690159
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	299,
			"primary_score":	1999935,
			"second_score":	690158
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	301,
			"primary_score":	1999935,
			"second_score":	690145
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	302,
			"primary_score":	1999935,
			"second_score":	690144
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	309,
			"primary_score":	1999935,
			"second_score":	690143
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	310,
			"primary_score":	1999935,
			"second_score":	690142
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	311,
			"primary_score":	1999935,
			"second_score":	690123
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	313,
			"primary_score":	1999935,
			"second_score":	690122
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	322,
			"primary_score":	1999935,
			"second_score":	690169
		}, {
			"file":	"Zend/zend_stream.c",
			"line":	325,
			"primary_score":	1999935,
			"second_score":	690168
		}, {
			"file":	"Zend/zend_string.c",
			"line":	77,
			"primary_score":	1999935,
			"second_score":	6123
		}, {
			"file":	"Zend/zend_string.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	6122
		}, {
			"file":	"Zend/zend_string.c",
			"line":	85,
			"primary_score":	1999935,
			"second_score":	690958
		}, {
			"file":	"Zend/zend_string.c",
			"line":	86,
			"primary_score":	1999935,
			"second_score":	690957
		}, {
			"file":	"Zend/zend_string.c",
			"line":	87,
			"primary_score":	1999935,
			"second_score":	690956
		}, {
			"file":	"Zend/zend_string.c",
			"line":	89,
			"primary_score":	1999935,
			"second_score":	690955
		}, {
			"file":	"Zend/zend_string.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	690954
		}, {
			"file":	"Zend/zend_string.c",
			"line":	94,
			"primary_score":	1999935,
			"second_score":	690944
		}, {
			"file":	"Zend/zend_string.c",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	690943
		}, {
			"file":	"Zend/zend_string.c",
			"line":	96,
			"primary_score":	1999935,
			"second_score":	690942
		}, {
			"file":	"Zend/zend_string.c",
			"line":	97,
			"primary_score":	1999935,
			"second_score":	690941
		}, {
			"file":	"Zend/zend_string.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	691899
		}, {
			"file":	"Zend/zend_string.c",
			"line":	99,
			"primary_score":	1999935,
			"second_score":	691898
		}, {
			"file":	"Zend/zend_string.c",
			"line":	100,
			"primary_score":	1999935,
			"second_score":	691897
		}, {
			"file":	"Zend/zend_string.c",
			"line":	102,
			"primary_score":	1999935,
			"second_score":	691878
		}, {
			"file":	"Zend/zend_string.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	690940
		}, {
			"file":	"Zend/zend_string.c",
			"line":	108,
			"primary_score":	1999935,
			"second_score":	690939
		}, {
			"file":	"Zend/zend_string.c",
			"line":	114,
			"primary_score":	1999935,
			"second_score":	690938
		}, {
			"file":	"Zend/zend_string.c",
			"line":	115,
			"primary_score":	1999935,
			"second_score":	690937
		}, {
			"file":	"Zend/zend_string.c",
			"line":	121,
			"primary_score":	1999935,
			"second_score":	690936
		}, {
			"file":	"Zend/zend_string.c",
			"line":	122,
			"primary_score":	1999935,
			"second_score":	690935
		}, {
			"file":	"Zend/zend_string.c",
			"line":	123,
			"primary_score":	1999935,
			"second_score":	690934
		}, {
			"file":	"Zend/zend_string.c",
			"line":	124,
			"primary_score":	1999935,
			"second_score":	690933
		}, {
			"file":	"Zend/zend_string.c",
			"line":	126,
			"primary_score":	1999935,
			"second_score":	690914
		}, {
			"file":	"Zend/zend_string.c",
			"line":	127,
			"primary_score":	1999935,
			"second_score":	690913
		}, {
			"file":	"Zend/zend_string.c",
			"line":	128,
			"primary_score":	1999935,
			"second_score":	690912
		}, {
			"file":	"Zend/zend_string.c",
			"line":	129,
			"primary_score":	1999935,
			"second_score":	690911
		}, {
			"file":	"Zend/zend_string.c",
			"line":	131,
			"primary_score":	1999935,
			"second_score":	690910
		}, {
			"file":	"Zend/zend_string.c",
			"line":	132,
			"primary_score":	1999935,
			"second_score":	690909
		}, {
			"file":	"Zend/zend_string.c",
			"line":	133,
			"primary_score":	1999935,
			"second_score":	690908
		}, {
			"file":	"Zend/zend_string.c",
			"line":	134,
			"primary_score":	1999935,
			"second_score":	690907
		}, {
			"file":	"Zend/zend_string.c",
			"line":	137,
			"primary_score":	1999935,
			"second_score":	690906
		}, {
			"file":	"Zend/zend_string.c",
			"line":	139,
			"primary_score":	1999935,
			"second_score":	690904
		}, {
			"file":	"Zend/zend_string.c",
			"line":	140,
			"primary_score":	1999935,
			"second_score":	690903
		}, {
			"file":	"Zend/zend_string.c",
			"line":	141,
			"primary_score":	1999935,
			"second_score":	690902
		}, {
			"file":	"Zend/zend_string.c",
			"line":	142,
			"primary_score":	1999935,
			"second_score":	690901
		}, {
			"file":	"Zend/zend_string.c",
			"line":	143,
			"primary_score":	1999935,
			"second_score":	690900
		}, {
			"file":	"Zend/zend_string.c",
			"line":	145,
			"primary_score":	1999935,
			"second_score":	690899
		}, {
			"file":	"Zend/zend_string.c",
			"line":	149,
			"primary_score":	1999935,
			"second_score":	690898
		}, {
			"file":	"Zend/zend_string.c",
			"line":	151,
			"primary_score":	1999935,
			"second_score":	690897
		}, {
			"file":	"Zend/zend_string.c",
			"line":	153,
			"primary_score":	1999935,
			"second_score":	690895
		}, {
			"file":	"Zend/zend_string.c",
			"line":	155,
			"primary_score":	1999935,
			"second_score":	690894
		}, {
			"file":	"Zend/zend_string.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	690893
		}, {
			"file":	"Zend/zend_string.c",
			"line":	188,
			"primary_score":	1999935,
			"second_score":	112943
		}, {
			"file":	"Zend/zend_string.c",
			"line":	189,
			"primary_score":	1999935,
			"second_score":	112942
		}, {
			"file":	"Zend/zend_string.c",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	112941
		}, {
			"file":	"Zend/zend_string.c",
			"line":	199,
			"primary_score":	1999935,
			"second_score":	112940
		}, {
			"file":	"Zend/zend_string.c",
			"line":	200,
			"primary_score":	1999935,
			"second_score":	103549
		}, {
			"file":	"Zend/zend_string.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	103548
		}, {
			"file":	"Zend/zend_string.c",
			"line":	202,
			"primary_score":	1999935,
			"second_score":	110117
		}, {
			"file":	"Zend/zend_string.c",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	110116
		}, {
			"file":	"Zend/zend_string.c",
			"line":	204,
			"primary_score":	1999935,
			"second_score":	110115
		}, {
			"file":	"Zend/zend_string.c",
			"line":	208,
			"primary_score":	1999935,
			"second_score":	110114
		}, {
			"file":	"Zend/zend_string.c",
			"line":	209,
			"primary_score":	1999935,
			"second_score":	112291
		}, {
			"file":	"Zend/zend_string.c",
			"line":	211,
			"primary_score":	1999935,
			"second_score":	110113
		}, {
			"file":	"Zend/zend_string.c",
			"line":	213,
			"primary_score":	1999935,
			"second_score":	110112
		}, {
			"file":	"Zend/zend_string.c",
			"line":	215,
			"primary_score":	1999935,
			"second_score":	103547
		}, {
			"file":	"Zend/zend_string.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	103546
		}, {
			"file":	"Zend/zend_string.c",
			"line":	218,
			"primary_score":	1999935,
			"second_score":	103545
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	459,
			"primary_score":	1999935,
			"second_score":	6279
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	467,
			"primary_score":	1999935,
			"second_score":	6225
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1379,
			"primary_score":	1999935,
			"second_score":	6278
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1380,
			"primary_score":	1999935,
			"second_score":	6277
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1382,
			"primary_score":	1999935,
			"second_score":	6276
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1383,
			"primary_score":	1999935,
			"second_score":	6275
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1384,
			"primary_score":	1999935,
			"second_score":	6229
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1385,
			"primary_score":	1999935,
			"second_score":	6228
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1389,
			"primary_score":	1999935,
			"second_score":	6227
		}, {
			"file":	"Zend/zend_strtod.c",
			"line":	1391,
			"primary_score":	1999935,
			"second_score":	6226
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	32,
			"primary_score":	1999935,
			"second_score":	114075
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	37,
			"primary_score":	1999935,
			"second_score":	115396
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	38,
			"primary_score":	1999935,
			"second_score":	115375
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	41,
			"primary_score":	1999935,
			"second_score":	114867
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	43,
			"primary_score":	1999935,
			"second_score":	114866
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	44,
			"primary_score":	1999935,
			"second_score":	114865
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	45,
			"primary_score":	1999935,
			"second_score":	114857
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	48,
			"primary_score":	1999935,
			"second_score":	114838
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	58,
			"primary_score":	1999935,
			"second_score":	114074
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	61,
			"primary_score":	1999935,
			"second_score":	114073
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	63,
			"primary_score":	1999935,
			"second_score":	113871
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	77,
			"primary_score":	1999935,
			"second_score":	15287
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	81,
			"primary_score":	1999935,
			"second_score":	19028
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	82,
			"primary_score":	1999935,
			"second_score":	19025
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	107,
			"primary_score":	1999935,
			"second_score":	689638
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	121,
			"primary_score":	1999935,
			"second_score":	689637
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	124,
			"primary_score":	1999935,
			"second_score":	689636
		}, {
			"file":	"Zend/zend_variables.c",
			"line":	153,
			"primary_score":	1999935,
			"second_score":	149744
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	32,
			"primary_score":	1999935,
			"second_score":	114077
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	33,
			"primary_score":	1999935,
			"second_score":	115505
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	35,
			"primary_score":	1999935,
			"second_score":	114076
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	42,
			"primary_score":	1999935,
			"second_score":	689640
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	43,
			"primary_score":	1999935,
			"second_score":	118975
		}, {
			"file":	"Zend/zend_variables.h",
			"line":	45,
			"primary_score":	1999935,
			"second_score":	689639
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	345,
			"primary_score":	1999935,
			"second_score":	690094
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	346,
			"primary_score":	1999935,
			"second_score":	690093
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	347,
			"primary_score":	1999935,
			"second_score":	690092
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	350,
			"primary_score":	1999935,
			"second_score":	690091
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	354,
			"primary_score":	1999935,
			"second_score":	690090
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	356,
			"primary_score":	1999935,
			"second_score":	690089
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	363,
			"primary_score":	1999935,
			"second_score":	690080
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	364,
			"primary_score":	1999935,
			"second_score":	690079
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	365,
			"primary_score":	1999935,
			"second_score":	690078
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	366,
			"primary_score":	1999935,
			"second_score":	690077
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	367,
			"primary_score":	1999935,
			"second_score":	690076
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	368,
			"primary_score":	1999935,
			"second_score":	690075
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	369,
			"primary_score":	1999935,
			"second_score":	690074
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	370,
			"primary_score":	1999935,
			"second_score":	690073
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	371,
			"primary_score":	1999935,
			"second_score":	690072
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	372,
			"primary_score":	1999935,
			"second_score":	690071
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	373,
			"primary_score":	1999935,
			"second_score":	690070
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	374,
			"primary_score":	1999935,
			"second_score":	690069
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	375,
			"primary_score":	1999935,
			"second_score":	690068
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	377,
			"primary_score":	1999935,
			"second_score":	690067
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	379,
			"primary_score":	1999935,
			"second_score":	690066
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	380,
			"primary_score":	1999935,
			"second_score":	690065
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	383,
			"primary_score":	1999935,
			"second_score":	690032
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	395,
			"primary_score":	1999935,
			"second_score":	690031
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	396,
			"primary_score":	1999935,
			"second_score":	690030
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	397,
			"primary_score":	1999935,
			"second_score":	690029
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	399,
			"primary_score":	1999935,
			"second_score":	690028
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	400,
			"primary_score":	1999935,
			"second_score":	690027
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	402,
			"primary_score":	1999935,
			"second_score":	690026
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	403,
			"primary_score":	1999935,
			"second_score":	149678
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	410,
			"primary_score":	1999935,
			"second_score":	149677
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	411,
			"primary_score":	1999935,
			"second_score":	149656
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	414,
			"primary_score":	1999935,
			"second_score":	149655
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	431,
			"primary_score":	1999935,
			"second_score":	122196
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	436,
			"primary_score":	1999935,
			"second_score":	122195
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	437,
			"primary_score":	1999935,
			"second_score":	122194
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	458,
			"primary_score":	1999935,
			"second_score":	149669
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	459,
			"primary_score":	1999935,
			"second_score":	149668
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	461,
			"primary_score":	1999935,
			"second_score":	149667
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	462,
			"primary_score":	1999935,
			"second_score":	149666
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	463,
			"primary_score":	1999935,
			"second_score":	149665
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	474,
			"primary_score":	1999935,
			"second_score":	149664
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	476,
			"primary_score":	1999935,
			"second_score":	149663
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	478,
			"primary_score":	1999935,
			"second_score":	149659
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	481,
			"primary_score":	1999935,
			"second_score":	149658
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	566,
			"primary_score":	1999935,
			"second_score":	149657
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	571,
			"primary_score":	1999935,
			"second_score":	532977
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	572,
			"primary_score":	1999935,
			"second_score":	532976
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	573,
			"primary_score":	1999935,
			"second_score":	532975
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	575,
			"primary_score":	1999935,
			"second_score":	532974
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	576,
			"primary_score":	1999935,
			"second_score":	532973
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	589,
			"primary_score":	1999935,
			"second_score":	532972
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	603,
			"primary_score":	1999935,
			"second_score":	532971
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	613,
			"primary_score":	1999935,
			"second_score":	532970
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	614,
			"primary_score":	1999935,
			"second_score":	532960
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	615,
			"primary_score":	1999935,
			"second_score":	532956
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	617,
			"primary_score":	1999935,
			"second_score":	532955
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	618,
			"primary_score":	1999935,
			"second_score":	532954
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	620,
			"primary_score":	1999935,
			"second_score":	532953
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	621,
			"primary_score":	1999935,
			"second_score":	532843
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	622,
			"primary_score":	1999935,
			"second_score":	532840
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	623,
			"primary_score":	1999935,
			"second_score":	532839
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	625,
			"primary_score":	1999935,
			"second_score":	532838
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	626,
			"primary_score":	1999935,
			"second_score":	532837
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	627,
			"primary_score":	1999935,
			"second_score":	532836
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	628,
			"primary_score":	1999935,
			"second_score":	532835
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	630,
			"primary_score":	1999935,
			"second_score":	532834
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	631,
			"primary_score":	1999935,
			"second_score":	532833
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	632,
			"primary_score":	1999935,
			"second_score":	532824
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	636,
			"primary_score":	1999935,
			"second_score":	532823
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	638,
			"primary_score":	1999935,
			"second_score":	532822
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	643,
			"primary_score":	1999935,
			"second_score":	149815
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	644,
			"primary_score":	1999936,
			"second_score":	149814
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	709,
			"primary_score":	1999935,
			"second_score":	149785
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	710,
			"primary_score":	1999935,
			"second_score":	149784
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	712,
			"primary_score":	1999935,
			"second_score":	149783
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	729,
			"primary_score":	1999935,
			"second_score":	149782
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	730,
			"primary_score":	1999935,
			"second_score":	149781
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	732,
			"primary_score":	1999935,
			"second_score":	149780
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	734,
			"primary_score":	1999935,
			"second_score":	149756
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	742,
			"primary_score":	1999935,
			"second_score":	149755
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1731,
			"primary_score":	1999935,
			"second_score":	149751
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1733,
			"primary_score":	1999935,
			"second_score":	149750
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1734,
			"primary_score":	1999935,
			"second_score":	149749
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1736,
			"primary_score":	1999935,
			"second_score":	149748
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1737,
			"primary_score":	1999935,
			"second_score":	149747
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1739,
			"primary_score":	1999935,
			"second_score":	149746
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1746,
			"primary_score":	1999935,
			"second_score":	149745
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1749,
			"primary_score":	1999935,
			"second_score":	149681
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1750,
			"primary_score":	1999935,
			"second_score":	149680
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1919,
			"primary_score":	1999935,
			"second_score":	533001
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1921,
			"primary_score":	1999935,
			"second_score":	533000
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1923,
			"primary_score":	1999935,
			"second_score":	532999
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1925,
			"primary_score":	1999935,
			"second_score":	532993
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1927,
			"primary_score":	1999935,
			"second_score":	532992
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1931,
			"primary_score":	1999935,
			"second_score":	532981
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1933,
			"primary_score":	1999935,
			"second_score":	532979
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1935,
			"primary_score":	1999935,
			"second_score":	532978
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1940,
			"primary_score":	1999935,
			"second_score":	149676
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1941,
			"primary_score":	1999935,
			"second_score":	149675
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1944,
			"primary_score":	1999935,
			"second_score":	149674
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1945,
			"primary_score":	1999935,
			"second_score":	149673
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1947,
			"primary_score":	1999935,
			"second_score":	149672
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1948,
			"primary_score":	1999935,
			"second_score":	149671
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1951,
			"primary_score":	1999935,
			"second_score":	119012
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1952,
			"primary_score":	1999935,
			"second_score":	119011
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1954,
			"primary_score":	1999935,
			"second_score":	119010
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1956,
			"primary_score":	1999935,
			"second_score":	119009
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1957,
			"primary_score":	1999935,
			"second_score":	118985
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1958,
			"primary_score":	1999935,
			"second_score":	118977
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1959,
			"primary_score":	1999935,
			"second_score":	118974
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	1978,
			"primary_score":	1999935,
			"second_score":	149670
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2077,
			"primary_score":	1999935,
			"second_score":	133257
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2079,
			"primary_score":	1999935,
			"second_score":	133256
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2080,
			"primary_score":	1999935,
			"second_score":	133255
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2084,
			"primary_score":	1999935,
			"second_score":	133254
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2085,
			"primary_score":	1999935,
			"second_score":	133253
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2086,
			"primary_score":	1999935,
			"second_score":	133252
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2089,
			"primary_score":	1999935,
			"second_score":	133251
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2091,
			"primary_score":	1999935,
			"second_score":	133250
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2092,
			"primary_score":	1999935,
			"second_score":	133226
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2093,
			"primary_score":	1999935,
			"second_score":	133218
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2094,
			"primary_score":	1999935,
			"second_score":	133217
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2096,
			"primary_score":	1999935,
			"second_score":	133211
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2099,
			"primary_score":	1999935,
			"second_score":	133207
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	2100,
			"primary_score":	1999935,
			"second_score":	133206
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	5999,
			"primary_score":	1999935,
			"second_score":	119720
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6000,
			"primary_score":	1999935,
			"second_score":	119719
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6001,
			"primary_score":	1999935,
			"second_score":	119718
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6002,
			"primary_score":	1999935,
			"second_score":	119717
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6004,
			"primary_score":	1999935,
			"second_score":	119716
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6005,
			"primary_score":	1999935,
			"second_score":	119715
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6007,
			"primary_score":	1999935,
			"second_score":	119713
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6014,
			"primary_score":	1999935,
			"second_score":	119712
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6017,
			"primary_score":	1999935,
			"second_score":	119699
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6018,
			"primary_score":	1999935,
			"second_score":	119673
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	6019,
			"primary_score":	1999935,
			"second_score":	119672
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10178,
			"primary_score":	1999935,
			"second_score":	121517
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10179,
			"primary_score":	1999935,
			"second_score":	121516
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10180,
			"primary_score":	1999935,
			"second_score":	121515
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10181,
			"primary_score":	1999935,
			"second_score":	121514
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10183,
			"primary_score":	1999935,
			"second_score":	121513
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10184,
			"primary_score":	1999935,
			"second_score":	121512
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10186,
			"primary_score":	1999935,
			"second_score":	121501
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10193,
			"primary_score":	1999935,
			"second_score":	121500
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10196,
			"primary_score":	1999935,
			"second_score":	121436
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10197,
			"primary_score":	1999935,
			"second_score":	121382
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10198,
			"primary_score":	1999935,
			"second_score":	121381
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10211,
			"primary_score":	1999935,
			"second_score":	120778
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10212,
			"primary_score":	1999935,
			"second_score":	120777
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10213,
			"primary_score":	1999935,
			"second_score":	120776
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10214,
			"primary_score":	1999935,
			"second_score":	120775
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10216,
			"primary_score":	1999935,
			"second_score":	120774
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10217,
			"primary_score":	1999935,
			"second_score":	120773
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10219,
			"primary_score":	1999935,
			"second_score":	120762
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10222,
			"primary_score":	1999935,
			"second_score":	120761
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10223,
			"primary_score":	1999935,
			"second_score":	120756
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10224,
			"primary_score":	1999935,
			"second_score":	120725
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10228,
			"primary_score":	1999935,
			"second_score":	120724
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10236,
			"primary_score":	1999935,
			"second_score":	120723
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10519,
			"primary_score":	1999935,
			"second_score":	123172
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10520,
			"primary_score":	1999935,
			"second_score":	123171
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10521,
			"primary_score":	1999935,
			"second_score":	123170
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10522,
			"primary_score":	1999935,
			"second_score":	123169
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10524,
			"primary_score":	1999935,
			"second_score":	123158
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10528,
			"primary_score":	1999935,
			"second_score":	123157
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10537,
			"primary_score":	1999935,
			"second_score":	123155
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10538,
			"primary_score":	1999935,
			"second_score":	123153
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10539,
			"primary_score":	1999935,
			"second_score":	123149
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10541,
			"primary_score":	1999935,
			"second_score":	123115
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10542,
			"primary_score":	1999935,
			"second_score":	123114
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10547,
			"primary_score":	1999935,
			"second_score":	123179
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10548,
			"primary_score":	1999935,
			"second_score":	123178
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10549,
			"primary_score":	1999935,
			"second_score":	123177
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10551,
			"primary_score":	1999935,
			"second_score":	123176
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10552,
			"primary_score":	1999935,
			"second_score":	123175
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10553,
			"primary_score":	1999935,
			"second_score":	123174
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	10554,
			"primary_score":	1999935,
			"second_score":	123173
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11261,
			"primary_score":	1999935,
			"second_score":	122352
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11262,
			"primary_score":	1999935,
			"second_score":	122351
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11263,
			"primary_score":	1999935,
			"second_score":	122350
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11265,
			"primary_score":	1999935,
			"second_score":	122349
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11266,
			"primary_score":	1999935,
			"second_score":	122348
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11268,
			"primary_score":	1999935,
			"second_score":	122337
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11269,
			"primary_score":	1999935,
			"second_score":	122334
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11270,
			"primary_score":	1999935,
			"second_score":	122333
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11272,
			"primary_score":	1999935,
			"second_score":	122299
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11273,
			"primary_score":	1999935,
			"second_score":	122297
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	11274,
			"primary_score":	1999935,
			"second_score":	122296
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26202,
			"primary_score":	1999952,
			"second_score":	533022
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26203,
			"primary_score":	1999952,
			"second_score":	533021
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26205,
			"primary_score":	1999952,
			"second_score":	533020
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26207,
			"primary_score":	1999952,
			"second_score":	533016
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26211,
			"primary_score":	1999952,
			"second_score":	533015
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26220,
			"primary_score":	1999952,
			"second_score":	533013
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26221,
			"primary_score":	1999952,
			"second_score":	533011
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26222,
			"primary_score":	1999952,
			"second_score":	533007
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26224,
			"primary_score":	1999952,
			"second_score":	533006
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26225,
			"primary_score":	1999952,
			"second_score":	533005
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26316,
			"primary_score":	1999952,
			"second_score":	533026
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26318,
			"primary_score":	1999952,
			"second_score":	533025
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26322,
			"primary_score":	1999952,
			"second_score":	533024
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	26323,
			"primary_score":	1999952,
			"second_score":	533023
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28237,
			"primary_score":	1999968,
			"second_score":	689776
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28239,
			"primary_score":	1999968,
			"second_score":	689775
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28240,
			"primary_score":	1999968,
			"second_score":	689774
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28242,
			"primary_score":	1999968,
			"second_score":	689773
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28243,
			"primary_score":	1999968,
			"second_score":	689772
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28244,
			"primary_score":	1999968,
			"second_score":	689771
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28246,
			"primary_score":	1999968,
			"second_score":	689688
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28260,
			"primary_score":	1999968,
			"second_score":	689687
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28269,
			"primary_score":	1999968,
			"second_score":	689686
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28271,
			"primary_score":	1999968,
			"second_score":	689685
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28272,
			"primary_score":	1999968,
			"second_score":	689684
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28276,
			"primary_score":	1999968,
			"second_score":	689633
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28284,
			"primary_score":	1999968,
			"second_score":	689632
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	28285,
			"primary_score":	1999968,
			"second_score":	689631
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32090,
			"primary_score":	1999962,
			"second_score":	533271
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32091,
			"primary_score":	1999962,
			"second_score":	533270
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32092,
			"primary_score":	1999962,
			"second_score":	533269
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32093,
			"primary_score":	1999962,
			"second_score":	533268
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32095,
			"primary_score":	1999962,
			"second_score":	533267
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32096,
			"primary_score":	1999962,
			"second_score":	533266
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32097,
			"primary_score":	1999962,
			"second_score":	533255
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32099,
			"primary_score":	1999962,
			"second_score":	533090
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32113,
			"primary_score":	1999962,
			"second_score":	533089
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32122,
			"primary_score":	1999962,
			"second_score":	533088
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32124,
			"primary_score":	1999962,
			"second_score":	533087
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32127,
			"primary_score":	1999962,
			"second_score":	533086
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32129,
			"primary_score":	1999962,
			"second_score":	533066
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32136,
			"primary_score":	1999963,
			"second_score":	533064
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32138,
			"primary_score":	1999962,
			"second_score":	533031
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	32139,
			"primary_score":	1999962,
			"second_score":	533030
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39394,
			"primary_score":	1999935,
			"second_score":	690342
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39413,
			"primary_score":	1999935,
			"second_score":	690341
		}, {
			"file":	"Zend/zend_vm_execute.h",
			"line":	39418,
			"primary_score":	1999935,
			"second_score":	690343
		}, {
			"file":	"ext/date/php_date.c",
			"line":	626,
			"primary_score":	1999935,
			"second_score":	148688
		}, {
			"file":	"ext/date/php_date.c",
			"line":	629,
			"primary_score":	1999935,
			"second_score":	148687
		}, {
			"file":	"ext/date/php_date.c",
			"line":	630,
			"primary_score":	1999935,
			"second_score":	148686
		}, {
			"file":	"ext/date/php_date.c",
			"line":	635,
			"primary_score":	1999935,
			"second_score":	148685
		}, {
			"file":	"ext/date/php_date.c",
			"line":	640,
			"primary_score":	1999935,
			"second_score":	148684
		}, {
			"file":	"ext/date/php_date.c",
			"line":	789,
			"primary_score":	1999935,
			"second_score":	53379
		}, {
			"file":	"ext/date/php_date.c",
			"line":	791,
			"primary_score":	1999935,
			"second_score":	52700
		}, {
			"file":	"ext/date/php_date.c",
			"line":	795,
			"primary_score":	1999935,
			"second_score":	52699
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	910,
			"primary_score":	1999935,
			"second_score":	58443
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	911,
			"primary_score":	1999935,
			"second_score":	58428
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	912,
			"primary_score":	1999935,
			"second_score":	58413
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	913,
			"primary_score":	1999935,
			"second_score":	58398
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	914,
			"primary_score":	1999935,
			"second_score":	58179
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	915,
			"primary_score":	1999935,
			"second_score":	58074
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	916,
			"primary_score":	1999935,
			"second_score":	58017
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	917,
			"primary_score":	1999935,
			"second_score":	58002
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	918,
			"primary_score":	1999935,
			"second_score":	57987
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	919,
			"primary_score":	1999935,
			"second_score":	57870
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	920,
			"primary_score":	1999935,
			"second_score":	57735
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	921,
			"primary_score":	1999935,
			"second_score":	57618
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	922,
			"primary_score":	1999935,
			"second_score":	57495
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	923,
			"primary_score":	1999935,
			"second_score":	57474
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	924,
			"primary_score":	1999935,
			"second_score":	57429
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	925,
			"primary_score":	1999935,
			"second_score":	57390
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	926,
			"primary_score":	1999935,
			"second_score":	57249
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	927,
			"primary_score":	1999935,
			"second_score":	57132
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	928,
			"primary_score":	1999935,
			"second_score":	56991
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	930,
			"primary_score":	1999935,
			"second_score":	56874
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	932,
			"primary_score":	1999935,
			"second_score":	56859
		}, {
			"file":	"ext/dom/php_dom.c",
			"line":	939,
			"primary_score":	1999935,
			"second_score":	56706
		}, {
			"file":	"ext/ereg/ereg.c",
			"line":	230,
			"primary_score":	1999935,
			"second_score":	53764
		}, {
			"file":	"ext/filter/filter.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	59851
		}, {
			"file":	"ext/filter/filter.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	59210
		}, {
			"file":	"ext/filter/filter.c",
			"line":	303,
			"primary_score":	1999935,
			"second_score":	149181
		}, {
			"file":	"ext/filter/filter.c",
			"line":	304,
			"primary_score":	1999935,
			"second_score":	149180
		}, {
			"file":	"ext/filter/filter.c",
			"line":	305,
			"primary_score":	1999935,
			"second_score":	149179
		}, {
			"file":	"ext/filter/filter.c",
			"line":	306,
			"primary_score":	1999935,
			"second_score":	149178
		}, {
			"file":	"ext/filter/filter.c",
			"line":	307,
			"primary_score":	1999935,
			"second_score":	148710
		}, {
			"file":	"ext/filter/filter.c",
			"line":	308,
			"primary_score":	1999935,
			"second_score":	148709
		}, {
			"file":	"ext/filter/filter.c",
			"line":	309,
			"primary_score":	1999935,
			"second_score":	148708
		}, {
			"file":	"ext/filter/filter.c",
			"line":	405,
			"primary_score":	1999935,
			"second_score":	713236
		}, {
			"file":	"ext/filter/filter.c",
			"line":	406,
			"primary_score":	1999935,
			"second_score":	713235
		}, {
			"file":	"ext/filter/filter.c",
			"line":	407,
			"primary_score":	1999935,
			"second_score":	713234
		}, {
			"file":	"ext/filter/filter.c",
			"line":	409,
			"primary_score":	1999935,
			"second_score":	713233
		}, {
			"file":	"ext/filter/filter.c",
			"line":	424,
			"primary_score":	1999935,
			"second_score":	713232
		}, {
			"file":	"ext/filter/filter.c",
			"line":	428,
			"primary_score":	1999935,
			"second_score":	716688
		}, {
			"file":	"ext/filter/filter.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	713228
		}, {
			"file":	"ext/filter/filter.c",
			"line":	446,
			"primary_score":	1999935,
			"second_score":	713227
		}, {
			"file":	"ext/filter/filter.c",
			"line":	448,
			"primary_score":	1999935,
			"second_score":	713226
		}, {
			"file":	"ext/filter/filter.c",
			"line":	449,
			"primary_score":	1999935,
			"second_score":	713225
		}, {
			"file":	"ext/filter/filter.c",
			"line":	450,
			"primary_score":	1999935,
			"second_score":	713115
		}, {
			"file":	"ext/filter/filter.c",
			"line":	452,
			"primary_score":	1999935,
			"second_score":	713114
		}, {
			"file":	"ext/filter/filter.c",
			"line":	455,
			"primary_score":	1999935,
			"second_score":	712851
		}, {
			"file":	"ext/filter/filter.c",
			"line":	457,
			"primary_score":	1999935,
			"second_score":	713637
		}, {
			"file":	"ext/filter/filter.c",
			"line":	458,
			"primary_score":	1999935,
			"second_score":	713636
		}, {
			"file":	"ext/filter/filter.c",
			"line":	460,
			"primary_score":	1999935,
			"second_score":	713635
		}, {
			"file":	"ext/filter/filter.c",
			"line":	465,
			"primary_score":	1999935,
			"second_score":	713634
		}, {
			"file":	"ext/filter/filter.c",
			"line":	468,
			"primary_score":	1999935,
			"second_score":	713633
		}, {
			"file":	"ext/filter/filter.c",
			"line":	471,
			"primary_score":	1999935,
			"second_score":	712850
		}, {
			"file":	"ext/filter/filter.c",
			"line":	474,
			"primary_score":	1999935,
			"second_score":	712736
		}, {
			"file":	"ext/filter/filter.c",
			"line":	475,
			"primary_score":	1999935,
			"second_score":	712735
		}, {
			"file":	"ext/filter/filter.c",
			"line":	478,
			"primary_score":	1999935,
			"second_score":	712387
		}, {
			"file":	"ext/filter/filter.c",
			"line":	491,
			"primary_score":	1999935,
			"second_score":	712386
		}, {
			"file":	"ext/hash/hash.c",
			"line":	889,
			"primary_score":	1999935,
			"second_score":	60730
		}, {
			"file":	"ext/hash/hash.c",
			"line":	891,
			"primary_score":	1999935,
			"second_score":	60451
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	62057
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	290,
			"primary_score":	1999935,
			"second_score":	62006
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	291,
			"primary_score":	1999935,
			"second_score":	61323
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2852,
			"primary_score":	1999935,
			"second_score":	62056
		}, {
			"file":	"ext/iconv/iconv.c",
			"line":	2856,
			"primary_score":	1999935,
			"second_score":	62007
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	581,
			"primary_score":	1999935,
			"second_score":	54208
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	583,
			"primary_score":	1999935,
			"second_score":	54207
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	585,
			"primary_score":	1999935,
			"second_score":	54206
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	586,
			"primary_score":	1999935,
			"second_score":	54205
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	587,
			"primary_score":	1999935,
			"second_score":	54186
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	683,
			"primary_score":	1999935,
			"second_score":	54210
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	690,
			"primary_score":	1999935,
			"second_score":	54209
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	692,
			"primary_score":	1999935,
			"second_score":	54185
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	699,
			"primary_score":	1999935,
			"second_score":	148704
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	700,
			"primary_score":	1999935,
			"second_score":	148703
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	701,
			"primary_score":	1999935,
			"second_score":	148702
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	703,
			"primary_score":	1999935,
			"second_score":	148701
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	704,
			"primary_score":	1999935,
			"second_score":	148700
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	707,
			"primary_score":	1999935,
			"second_score":	148699
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	711,
			"primary_score":	1999935,
			"second_score":	148698
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	712,
			"primary_score":	1999935,
			"second_score":	148694
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	717,
			"primary_score":	1999935,
			"second_score":	148693
		}, {
			"file":	"ext/libxml/libxml.c",
			"line":	719,
			"primary_score":	1999935,
			"second_score":	148692
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	113,
			"primary_score":	1999935,
			"second_score":	54730
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	163,
			"primary_score":	1999935,
			"second_score":	55358
		}, {
			"file":	"ext/pcre/php_pcre.c",
			"line":	165,
			"primary_score":	1999935,
			"second_score":	54734
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	199,
			"primary_score":	1999935,
			"second_score":	64576
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	64557
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	389,
			"primary_score":	1999935,
			"second_score":	64477
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	390,
			"primary_score":	1999935,
			"second_score":	64468
		}, {
			"file":	"ext/pdo/pdo.c",
			"line":	391,
			"primary_score":	1999935,
			"second_score":	63128
		}, {
			"file":	"ext/pdo/pdo_sqlstate.c",
			"line":	309,
			"primary_score":	1999935,
			"second_score":	64467
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	87,
			"primary_score":	1999935,
			"second_score":	64577
		}, {
			"file":	"ext/pdo_sqlite/pdo_sqlite.c",
			"line":	88,
			"primary_score":	1999935,
			"second_score":	64519
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1102,
			"primary_score":	1999935,
			"second_score":	98906
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1104,
			"primary_score":	1999935,
			"second_score":	98905
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1105,
			"primary_score":	1999935,
			"second_score":	98880
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1106,
			"primary_score":	1999935,
			"second_score":	98843
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1107,
			"primary_score":	1999935,
			"second_score":	98816
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1108,
			"primary_score":	1999935,
			"second_score":	98790
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1109,
			"primary_score":	1999935,
			"second_score":	98763
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1110,
			"primary_score":	1999935,
			"second_score":	98732
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1111,
			"primary_score":	1999935,
			"second_score":	98703
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1112,
			"primary_score":	1999935,
			"second_score":	98674
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1113,
			"primary_score":	1999935,
			"second_score":	98646
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1114,
			"primary_score":	1999935,
			"second_score":	98617
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1115,
			"primary_score":	1999935,
			"second_score":	98588
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1116,
			"primary_score":	1999935,
			"second_score":	98559
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1117,
			"primary_score":	1999935,
			"second_score":	98530
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1118,
			"primary_score":	1999935,
			"second_score":	98501
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1119,
			"primary_score":	1999935,
			"second_score":	98473
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1120,
			"primary_score":	1999935,
			"second_score":	98442
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1121,
			"primary_score":	1999935,
			"second_score":	98411
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1122,
			"primary_score":	1999935,
			"second_score":	98378
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1123,
			"primary_score":	1999935,
			"second_score":	98353
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1124,
			"primary_score":	1999935,
			"second_score":	98329
		}, {
			"file":	"ext/phar/func_interceptors.c",
			"line":	1125,
			"primary_score":	1999935,
			"second_score":	98299
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3332,
			"primary_score":	1999935,
			"second_score":	704558
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3333,
			"primary_score":	1999935,
			"second_score":	704557
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3334,
			"primary_score":	1999935,
			"second_score":	704556
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3335,
			"primary_score":	1999935,
			"second_score":	704555
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3337,
			"primary_score":	1999935,
			"second_score":	704554
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3340,
			"primary_score":	1999935,
			"second_score":	704553
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3389,
			"primary_score":	1999935,
			"second_score":	704552
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3390,
			"primary_score":	1999935,
			"second_score":	704546
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3391,
			"primary_score":	1999935,
			"second_score":	704545
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3394,
			"primary_score":	1999935,
			"second_score":	690305
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3396,
			"primary_score":	1999935,
			"second_score":	690303
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3400,
			"primary_score":	1999935,
			"second_score":	690302
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3404,
			"primary_score":	1999935,
			"second_score":	690301
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3527,
			"primary_score":	1999935,
			"second_score":	98291
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3557,
			"primary_score":	1999935,
			"second_score":	98944
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3559,
			"primary_score":	1999935,
			"second_score":	98907
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3561,
			"primary_score":	1999935,
			"second_score":	98298
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3562,
			"primary_score":	1999935,
			"second_score":	98297
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3570,
			"primary_score":	1999935,
			"second_score":	98296
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3575,
			"primary_score":	1999935,
			"second_score":	98295
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3617,
			"primary_score":	1999935,
			"second_score":	149269
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3619,
			"primary_score":	1999935,
			"second_score":	149268
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3621,
			"primary_score":	1999935,
			"second_score":	149267
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3657,
			"primary_score":	1999935,
			"second_score":	149266
		}, {
			"file":	"ext/phar/phar.c",
			"line":	3658,
			"primary_score":	1999935,
			"second_score":	149265
		}, {
			"file":	"ext/session/session.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	149202
		}, {
			"file":	"ext/session/session.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	149201
		}, {
			"file":	"ext/session/session.c",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	149200
		}, {
			"file":	"ext/session/session.c",
			"line":	1441,
			"primary_score":	1999935,
			"second_score":	149204
		}, {
			"file":	"ext/session/session.c",
			"line":	1958,
			"primary_score":	1999935,
			"second_score":	149206
		}, {
			"file":	"ext/session/session.c",
			"line":	1960,
			"primary_score":	1999935,
			"second_score":	149205
		}, {
			"file":	"ext/session/session.c",
			"line":	1961,
			"primary_score":	1999935,
			"second_score":	149203
		}, {
			"file":	"ext/session/session.c",
			"line":	1964,
			"primary_score":	1999935,
			"second_score":	149199
		}, {
			"file":	"ext/session/session.c",
			"line":	1965,
			"primary_score":	1999935,
			"second_score":	149193
		}, {
			"file":	"ext/session/session.c",
			"line":	1971,
			"primary_score":	1999935,
			"second_score":	149192
		}, {
			"file":	"ext/session/session.c",
			"line":	2013,
			"primary_score":	1999935,
			"second_score":	67036
		}, {
			"file":	"ext/session/session.c",
			"line":	2019,
			"primary_score":	1999935,
			"second_score":	65604
		}, {
			"file":	"ext/session/session.c",
			"line":	2020,
			"primary_score":	1999935,
			"second_score":	65603
		}, {
			"file":	"ext/session/session.c",
			"line":	2022,
			"primary_score":	1999935,
			"second_score":	65602
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2600,
			"primary_score":	1999935,
			"second_score":	98003
		}, {
			"file":	"ext/simplexml/simplexml.c",
			"line":	2601,
			"primary_score":	1999935,
			"second_score":	98002
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	919,
			"primary_score":	1999935,
			"second_score":	149188
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	924,
			"primary_score":	1999935,
			"second_score":	149187
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	929,
			"primary_score":	1999935,
			"second_score":	149186
		}, {
			"file":	"ext/spl/php_spl.c",
			"line":	932,
			"primary_score":	1999935,
			"second_score":	149185
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2140,
			"primary_score":	1999935,
			"second_score":	56002
		}, {
			"file":	"ext/sqlite3/sqlite3.c",
			"line":	2142,
			"primary_score":	1999935,
			"second_score":	55393
		}, {
			"file":	"ext/standard/array.c",
			"line":	138,
			"primary_score":	1999935,
			"second_score":	97581
		}, {
			"file":	"ext/standard/assert.c",
			"line":	114,
			"primary_score":	1999935,
			"second_score":	97579
		}, {
			"file":	"ext/standard/assert.c",
			"line":	118,
			"primary_score":	1999935,
			"second_score":	97578
		}, {
			"file":	"ext/standard/assert.c",
			"line":	124,
			"primary_score":	1999935,
			"second_score":	149240
		}, {
			"file":	"ext/standard/assert.c",
			"line":	129,
			"primary_score":	1999935,
			"second_score":	149239
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3470,
			"primary_score":	1999935,
			"second_score":	97775
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3471,
			"primary_score":	1999935,
			"second_score":	97774
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3472,
			"primary_score":	1999935,
			"second_score":	97735
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3645,
			"primary_score":	1999935,
			"second_score":	97779
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3653,
			"primary_score":	1999935,
			"second_score":	97776
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3659,
			"primary_score":	1999935,
			"second_score":	97734
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3661,
			"primary_score":	1999935,
			"second_score":	97693
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3662,
			"primary_score":	1999935,
			"second_score":	97655
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3665,
			"primary_score":	1999935,
			"second_score":	97618
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3666,
			"primary_score":	1999935,
			"second_score":	97582
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3667,
			"primary_score":	1999935,
			"second_score":	97580
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3668,
			"primary_score":	1999935,
			"second_score":	97577
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3669,
			"primary_score":	1999935,
			"second_score":	96500
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3670,
			"primary_score":	1999935,
			"second_score":	96497
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3675,
			"primary_score":	1999935,
			"second_score":	96175
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3678,
			"primary_score":	1999935,
			"second_score":	96172
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3726,
			"primary_score":	1999935,
			"second_score":	149261
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3729,
			"primary_score":	1999935,
			"second_score":	149260
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3730,
			"primary_score":	1999935,
			"second_score":	149259
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3732,
			"primary_score":	1999935,
			"second_score":	149258
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3735,
			"primary_score":	1999935,
			"second_score":	149250
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3741,
			"primary_score":	1999935,
			"second_score":	149249
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3746,
			"primary_score":	1999935,
			"second_score":	149248
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3747,
			"primary_score":	1999935,
			"second_score":	149246
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3752,
			"primary_score":	1999935,
			"second_score":	149245
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3758,
			"primary_score":	1999935,
			"second_score":	149241
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3759,
			"primary_score":	1999935,
			"second_score":	149238
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3760,
			"primary_score":	1999935,
			"second_score":	149227
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3765,
			"primary_score":	1999935,
			"second_score":	149216
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3771,
			"primary_score":	1999935,
			"second_score":	149215
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3773,
			"primary_score":	1999935,
			"second_score":	149212
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3774,
			"primary_score":	1999935,
			"second_score":	149211
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	3775,
			"primary_score":	1999935,
			"second_score":	149210
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4526,
			"primary_score":	1999935,
			"second_score":	122373
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4527,
			"primary_score":	1999935,
			"second_score":	122372
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4528,
			"primary_score":	1999935,
			"second_score":	122371
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4530,
			"primary_score":	1999935,
			"second_score":	122370
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4534,
			"primary_score":	1999935,
			"second_score":	122303
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4536,
			"primary_score":	1999935,
			"second_score":	122272
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	4545,
			"primary_score":	1999935,
			"second_score":	122271
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5006,
			"primary_score":	1999935,
			"second_score":	149427
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5018,
			"primary_score":	1999935,
			"second_score":	148679
		}, {
			"file":	"ext/standard/basic_functions.c",
			"line":	5024,
			"primary_score":	1999935,
			"second_score":	148678
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	234,
			"primary_score":	1999935,
			"second_score":	97617
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	97584
		}, {
			"file":	"ext/standard/browscap.c",
			"line":	238,
			"primary_score":	1999935,
			"second_score":	97583
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	130,
			"primary_score":	1999935,
			"second_score":	96174
		}, {
			"file":	"ext/standard/crypt.c",
			"line":	133,
			"primary_score":	1999935,
			"second_score":	96173
		}, {
			"file":	"ext/standard/file.c",
			"line":	318,
			"primary_score":	1999935,
			"second_score":	96499
		}, {
			"file":	"ext/standard/file.c",
			"line":	320,
			"primary_score":	1999935,
			"second_score":	96498
		}, {
			"file":	"ext/standard/file.c",
			"line":	2342,
			"primary_score":	1999935,
			"second_score":	122067
		}, {
			"file":	"ext/standard/file.c",
			"line":	2343,
			"primary_score":	1999935,
			"second_score":	122066
		}, {
			"file":	"ext/standard/file.c",
			"line":	2344,
			"primary_score":	1999935,
			"second_score":	122065
		}, {
			"file":	"ext/standard/file.c",
			"line":	2346,
			"primary_score":	1999935,
			"second_score":	122064
		}, {
			"file":	"ext/standard/file.c",
			"line":	2350,
			"primary_score":	1999935,
			"second_score":	121954
		}, {
			"file":	"ext/standard/file.c",
			"line":	2351,
			"primary_score":	1999935,
			"second_score":	121709
		}, {
			"file":	"ext/standard/file.c",
			"line":	2360,
			"primary_score":	1999935,
			"second_score":	121705
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	110,
			"primary_score":	1999935,
			"second_score":	149244
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	114,
			"primary_score":	1999935,
			"second_score":	149243
		}, {
			"file":	"ext/standard/filestat.c",
			"line":	118,
			"primary_score":	1999935,
			"second_score":	149242
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2148,
			"primary_score":	1999935,
			"second_score":	96496
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2150,
			"primary_score":	1999935,
			"second_score":	96495
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2151,
			"primary_score":	1999935,
			"second_score":	96216
		}, {
			"file":	"ext/standard/filters.c",
			"line":	2153,
			"primary_score":	1999935,
			"second_score":	96176
		}, {
			"file":	"ext/standard/head.c",
			"line":	68,
			"primary_score":	1999935,
			"second_score":	689984
		}, {
			"file":	"ext/standard/head.c",
			"line":	71,
			"primary_score":	1999935,
			"second_score":	689824
		}, {
			"file":	"ext/standard/info.c",
			"line":	527,
			"primary_score":	1999935,
			"second_score":	123595
		}, {
			"file":	"ext/standard/info.c",
			"line":	528,
			"primary_score":	1999935,
			"second_score":	123594
		}, {
			"file":	"ext/standard/info.c",
			"line":	577,
			"primary_score":	1999935,
			"second_score":	123593
		}, {
			"file":	"ext/standard/info.c",
			"line":	578,
			"primary_score":	1999935,
			"second_score":	123592
		}, {
			"file":	"ext/standard/info.c",
			"line":	605,
			"primary_score":	1999935,
			"second_score":	123591
		}, {
			"file":	"ext/standard/info.c",
			"line":	607,
			"primary_score":	1999935,
			"second_score":	123590
		}, {
			"file":	"ext/standard/info.c",
			"line":	609,
			"primary_score":	1999935,
			"second_score":	123589
		}, {
			"file":	"ext/standard/info.c",
			"line":	611,
			"primary_score":	1999935,
			"second_score":	123588
		}, {
			"file":	"ext/standard/info.c",
			"line":	613,
			"primary_score":	1999935,
			"second_score":	123587
		}, {
			"file":	"ext/standard/info.c",
			"line":	616,
			"primary_score":	1999935,
			"second_score":	123586
		}, {
			"file":	"ext/standard/info.c",
			"line":	619,
			"primary_score":	1999935,
			"second_score":	122879
		}, {
			"file":	"ext/standard/info.c",
			"line":	627,
			"primary_score":	1999935,
			"second_score":	122878
		}, {
			"file":	"ext/standard/info.c",
			"line":	1153,
			"primary_score":	1999935,
			"second_score":	124544
		}, {
			"file":	"ext/standard/info.c",
			"line":	1154,
			"primary_score":	1999935,
			"second_score":	124543
		}, {
			"file":	"ext/standard/info.c",
			"line":	1156,
			"primary_score":	1999935,
			"second_score":	124542
		}, {
			"file":	"ext/standard/info.c",
			"line":	1160,
			"primary_score":	1999935,
			"second_score":	124504
		}, {
			"file":	"ext/standard/info.c",
			"line":	1161,
			"primary_score":	1999935,
			"second_score":	124503
		}, {
			"file":	"ext/standard/info.c",
			"line":	1280,
			"primary_score":	1999935,
			"second_score":	123638
		}, {
			"file":	"ext/standard/info.c",
			"line":	1281,
			"primary_score":	1999935,
			"second_score":	123637
		}, {
			"file":	"ext/standard/info.c",
			"line":	1283,
			"primary_score":	1999935,
			"second_score":	123636
		}, {
			"file":	"ext/standard/info.c",
			"line":	1286,
			"primary_score":	1999935,
			"second_score":	123598
		}, {
			"file":	"ext/standard/info.c",
			"line":	1295,
			"primary_score":	1999935,
			"second_score":	120519
		}, {
			"file":	"ext/standard/info.c",
			"line":	1299,
			"primary_score":	1999935,
			"second_score":	120486
		}, {
			"file":	"ext/standard/info.c",
			"line":	1302,
			"primary_score":	1999935,
			"second_score":	120485
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	162,
			"primary_score":	1999935,
			"second_score":	708838
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	163,
			"primary_score":	1999935,
			"second_score":	708837
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	164,
			"primary_score":	1999935,
			"second_score":	708836
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	165,
			"primary_score":	1999935,
			"second_score":	708835
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	166,
			"primary_score":	1999935,
			"second_score":	708834
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	167,
			"primary_score":	1999935,
			"second_score":	708833
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	169,
			"primary_score":	1999935,
			"second_score":	708832
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	170,
			"primary_score":	1999935,
			"second_score":	708831
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	173,
			"primary_score":	1999935,
			"second_score":	708830
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	192,
			"primary_score":	1999935,
			"second_score":	708829
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	708828
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	205,
			"primary_score":	1999935,
			"second_score":	708827
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	215,
			"primary_score":	1999935,
			"second_score":	708826
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	710552
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	710551
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	223,
			"primary_score":	1999935,
			"second_score":	710539
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	224,
			"primary_score":	1999935,
			"second_score":	710538
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	225,
			"primary_score":	1999935,
			"second_score":	710537
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	228,
			"primary_score":	1999935,
			"second_score":	710536
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	229,
			"primary_score":	1999935,
			"second_score":	710535
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	234,
			"primary_score":	1999935,
			"second_score":	708825
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	709629
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	236,
			"primary_score":	1999935,
			"second_score":	709617
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	237,
			"primary_score":	1999935,
			"second_score":	709616
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	238,
			"primary_score":	1999935,
			"second_score":	709615
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	241,
			"primary_score":	1999935,
			"second_score":	709614
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	242,
			"primary_score":	1999935,
			"second_score":	709613
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	247,
			"primary_score":	1999935,
			"second_score":	708824
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	248,
			"primary_score":	1999935,
			"second_score":	708823
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	249,
			"primary_score":	1999935,
			"second_score":	708811
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	250,
			"primary_score":	1999935,
			"second_score":	708810
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	251,
			"primary_score":	1999935,
			"second_score":	708809
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	254,
			"primary_score":	1999935,
			"second_score":	708808
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	255,
			"primary_score":	1999935,
			"second_score":	708807
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	708806
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	342,
			"primary_score":	1999935,
			"second_score":	708805
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	343,
			"primary_score":	1999935,
			"second_score":	708804
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	344,
			"primary_score":	1999935,
			"second_score":	708803
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	345,
			"primary_score":	1999935,
			"second_score":	708802
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	355,
			"primary_score":	1999935,
			"second_score":	708800
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	356,
			"primary_score":	1999935,
			"second_score":	708799
		}, {
			"file":	"ext/standard/php_fopen_wrapper.c",
			"line":	364,
			"primary_score":	1999935,
			"second_score":	708349
		}, {
			"file":	"ext/standard/string.c",
			"line":	1058,
			"primary_score":	1999935,
			"second_score":	122817
		}, {
			"file":	"ext/standard/string.c",
			"line":	1059,
			"primary_score":	1999935,
			"second_score":	122816
		}, {
			"file":	"ext/standard/string.c",
			"line":	1060,
			"primary_score":	1999935,
			"second_score":	122815
		}, {
			"file":	"ext/standard/string.c",
			"line":	1061,
			"primary_score":	1999935,
			"second_score":	122814
		}, {
			"file":	"ext/standard/string.c",
			"line":	1062,
			"primary_score":	1999935,
			"second_score":	122813
		}, {
			"file":	"ext/standard/string.c",
			"line":	1063,
			"primary_score":	1999935,
			"second_score":	122812
		}, {
			"file":	"ext/standard/string.c",
			"line":	1065,
			"primary_score":	1999935,
			"second_score":	122811
		}, {
			"file":	"ext/standard/string.c",
			"line":	1067,
			"primary_score":	1999935,
			"second_score":	122808
		}, {
			"file":	"ext/standard/string.c",
			"line":	1071,
			"primary_score":	1999935,
			"second_score":	122807
		}, {
			"file":	"ext/standard/string.c",
			"line":	1073,
			"primary_score":	1999935,
			"second_score":	122803
		}, {
			"file":	"ext/standard/string.c",
			"line":	1074,
			"primary_score":	1999935,
			"second_score":	121794
		}, {
			"file":	"ext/standard/string.c",
			"line":	1076,
			"primary_score":	1999935,
			"second_score":	122791
		}, {
			"file":	"ext/standard/string.c",
			"line":	1077,
			"primary_score":	1999935,
			"second_score":	121785
		}, {
			"file":	"ext/standard/string.c",
			"line":	1124,
			"primary_score":	1999935,
			"second_score":	121784
		}, {
			"file":	"ext/standard/string.c",
			"line":	1125,
			"primary_score":	1999935,
			"second_score":	121815
		}, {
			"file":	"ext/standard/string.c",
			"line":	1127,
			"primary_score":	1999935,
			"second_score":	121783
		}, {
			"file":	"ext/standard/string.c",
			"line":	1129,
			"primary_score":	1999935,
			"second_score":	121772
		}, {
			"file":	"ext/standard/string.c",
			"line":	1131,
			"primary_score":	1999935,
			"second_score":	121769
		}, {
			"file":	"ext/standard/string.c",
			"line":	1132,
			"primary_score":	1999935,
			"second_score":	121768
		}, {
			"file":	"ext/standard/string.c",
			"line":	1144,
			"primary_score":	1999935,
			"second_score":	122918
		}, {
			"file":	"ext/standard/string.c",
			"line":	1146,
			"primary_score":	1999935,
			"second_score":	122917
		}, {
			"file":	"ext/standard/string.c",
			"line":	1150,
			"primary_score":	1999935,
			"second_score":	122825
		}, {
			"file":	"ext/standard/string.c",
			"line":	1163,
			"primary_score":	1999935,
			"second_score":	122824
		}, {
			"file":	"ext/standard/string.c",
			"line":	1167,
			"primary_score":	1999935,
			"second_score":	122823
		}, {
			"file":	"ext/standard/string.c",
			"line":	1168,
			"primary_score":	1999935,
			"second_score":	122822
		}, {
			"file":	"ext/standard/string.c",
			"line":	1169,
			"primary_score":	1999935,
			"second_score":	122821
		}, {
			"file":	"ext/standard/string.c",
			"line":	1170,
			"primary_score":	1999935,
			"second_score":	122819
		}, {
			"file":	"ext/standard/string.c",
			"line":	1177,
			"primary_score":	1999935,
			"second_score":	122818
		}, {
			"file":	"ext/standard/string.c",
			"line":	1179,
			"primary_score":	1999935,
			"second_score":	121759
		}, {
			"file":	"ext/standard/string.c",
			"line":	3536,
			"primary_score":	1999935,
			"second_score":	120065
		}, {
			"file":	"ext/standard/string.c",
			"line":	3539,
			"primary_score":	1999935,
			"second_score":	120064
		}, {
			"file":	"ext/standard/string.c",
			"line":	3540,
			"primary_score":	1999935,
			"second_score":	120063
		}, {
			"file":	"ext/standard/string.c",
			"line":	3543,
			"primary_score":	1999935,
			"second_score":	120062
		}, {
			"file":	"ext/standard/string.c",
			"line":	3544,
			"primary_score":	1999935,
			"second_score":	120017
		}, {
			"file":	"ext/standard/string.c",
			"line":	3545,
			"primary_score":	1999935,
			"second_score":	120016
		}, {
			"file":	"ext/standard/string.c",
			"line":	3546,
			"primary_score":	1999935,
			"second_score":	120015
		}, {
			"file":	"ext/standard/string.c",
			"line":	3547,
			"primary_score":	1999935,
			"second_score":	119981
		}, {
			"file":	"ext/standard/string.c",
			"line":	3647,
			"primary_score":	1999935,
			"second_score":	120210
		}, {
			"file":	"ext/standard/string.c",
			"line":	3648,
			"primary_score":	1999935,
			"second_score":	120209
		}, {
			"file":	"ext/standard/string.c",
			"line":	3649,
			"primary_score":	1999935,
			"second_score":	120208
		}, {
			"file":	"ext/standard/string.c",
			"line":	3650,
			"primary_score":	1999935,
			"second_score":	120207
		}, {
			"file":	"ext/standard/string.c",
			"line":	3651,
			"primary_score":	1999935,
			"second_score":	120206
		}, {
			"file":	"ext/standard/string.c",
			"line":	3652,
			"primary_score":	1999935,
			"second_score":	120205
		}, {
			"file":	"ext/standard/string.c",
			"line":	3653,
			"primary_score":	1999935,
			"second_score":	120204
		}, {
			"file":	"ext/standard/string.c",
			"line":	3655,
			"primary_score":	1999935,
			"second_score":	120203
		}, {
			"file":	"ext/standard/string.c",
			"line":	3659,
			"primary_score":	1999935,
			"second_score":	120081
		}, {
			"file":	"ext/standard/string.c",
			"line":	3660,
			"primary_score":	1999935,
			"second_score":	120078
		}, {
			"file":	"ext/standard/string.c",
			"line":	3661,
			"primary_score":	1999935,
			"second_score":	120075
		}, {
			"file":	"ext/standard/string.c",
			"line":	3664,
			"primary_score":	1999935,
			"second_score":	120072
		}, {
			"file":	"ext/standard/string.c",
			"line":	3665,
			"primary_score":	1999935,
			"second_score":	120071
		}, {
			"file":	"ext/standard/string.c",
			"line":	3666,
			"primary_score":	1999935,
			"second_score":	120069
		}, {
			"file":	"ext/standard/string.c",
			"line":	3672,
			"primary_score":	1999935,
			"second_score":	120067
		}, {
			"file":	"ext/standard/string.c",
			"line":	3703,
			"primary_score":	1999935,
			"second_score":	120066
		}, {
			"file":	"ext/standard/string.c",
			"line":	3705,
			"primary_score":	1999935,
			"second_score":	119980
		}, {
			"file":	"ext/standard/string.c",
			"line":	3716,
			"primary_score":	1999935,
			"second_score":	120211
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	121,
			"primary_score":	1999935,
			"second_score":	97778
		}, {
			"file":	"ext/standard/syslog.c",
			"line":	125,
			"primary_score":	1999935,
			"second_score":	97777
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1083,
			"primary_score":	1999935,
			"second_score":	97576
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1085,
			"primary_score":	1999935,
			"second_score":	96501
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1097,
			"primary_score":	1999935,
			"second_score":	149237
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1102,
			"primary_score":	1999935,
			"second_score":	149236
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1103,
			"primary_score":	1999935,
			"second_score":	149232
		}, {
			"file":	"ext/standard/url_scanner_ex.c",
			"line":	1105,
			"primary_score":	1999935,
			"second_score":	149228
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	129,
			"primary_score":	1999935,
			"second_score":	149214
		}, {
			"file":	"ext/standard/user_filters.c",
			"line":	135,
			"primary_score":	1999935,
			"second_score":	149213
		}, {
			"file":	"ext/standard/var.c",
			"line":	40,
			"primary_score":	1999979,
			"second_score":	150955
		}, {
			"file":	"ext/standard/var.c",
			"line":	42,
			"primary_score":	1999979,
			"second_score":	150954
		}, {
			"file":	"ext/standard/var.c",
			"line":	44,
			"primary_score":	1999979,
			"second_score":	150953
		}, {
			"file":	"ext/standard/var.c",
			"line":	45,
			"primary_score":	1999979,
			"second_score":	150952
		}, {
			"file":	"ext/standard/var.c",
			"line":	51,
			"primary_score":	1999979,
			"second_score":	150651
		}, {
			"file":	"ext/standard/var.c",
			"line":	52,
			"primary_score":	1999979,
			"second_score":	149897
		}, {
			"file":	"ext/standard/var.c",
			"line":	89,
			"primary_score":	1999959,
			"second_score":	150650
		}, {
			"file":	"ext/standard/var.c",
			"line":	90,
			"primary_score":	1999959,
			"second_score":	150649
		}, {
			"file":	"ext/standard/var.c",
			"line":	91,
			"primary_score":	1999959,
			"second_score":	150648
		}, {
			"file":	"ext/standard/var.c",
			"line":	92,
			"primary_score":	1999959,
			"second_score":	150647
		}, {
			"file":	"ext/standard/var.c",
			"line":	93,
			"primary_score":	1999959,
			"second_score":	150646
		}, {
			"file":	"ext/standard/var.c",
			"line":	95,
			"primary_score":	1999959,
			"second_score":	150645
		}, {
			"file":	"ext/standard/var.c",
			"line":	96,
			"primary_score":	1999979,
			"second_score":	150644
		}, {
			"file":	"ext/standard/var.c",
			"line":	99,
			"primary_score":	1999959,
			"second_score":	150449
		}, {
			"file":	"ext/standard/var.c",
			"line":	108,
			"primary_score":	1999978,
			"second_score":	150156
		}, {
			"file":	"ext/standard/var.c",
			"line":	114,
			"primary_score":	1999975,
			"second_score":	151067
		}, {
			"file":	"ext/standard/var.c",
			"line":	115,
			"primary_score":	1999975,
			"second_score":	151018
		}, {
			"file":	"ext/standard/var.c",
			"line":	116,
			"primary_score":	1999975,
			"second_score":	150967
		}, {
			"file":	"ext/standard/var.c",
			"line":	119,
			"primary_score":	1999979,
			"second_score":	153073
		}, {
			"file":	"ext/standard/var.c",
			"line":	124,
			"primary_score":	1999979,
			"second_score":	153072
		}, {
			"file":	"ext/standard/var.c",
			"line":	125,
			"primary_score":	1999979,
			"second_score":	152738
		}, {
			"file":	"ext/standard/var.c",
			"line":	126,
			"primary_score":	1999979,
			"second_score":	152737
		}, {
			"file":	"ext/standard/var.c",
			"line":	127,
			"primary_score":	1999979,
			"second_score":	152736
		}, {
			"file":	"ext/standard/var.c",
			"line":	146,
			"primary_score":	1999979,
			"second_score":	152735
		}, {
			"file":	"ext/standard/var.c",
			"line":	147,
			"primary_score":	1999979,
			"second_score":	149889
		}, {
			"file":	"ext/standard/var.c",
			"line":	148,
			"primary_score":	1999979,
			"second_score":	149888
		}, {
			"file":	"ext/standard/var.c",
			"line":	153,
			"primary_score":	1999979,
			"second_score":	149887
		}, {
			"file":	"ext/standard/var.c",
			"line":	154,
			"primary_score":	1999979,
			"second_score":	150144
		}, {
			"file":	"ext/standard/var.c",
			"line":	156,
			"primary_score":	1999979,
			"second_score":	149886
		}, {
			"file":	"ext/standard/var.c",
			"line":	157,
			"primary_score":	1999979,
			"second_score":	149835
		}, {
			"file":	"ext/standard/var.c",
			"line":	174,
			"primary_score":	1999959,
			"second_score":	532821
		}, {
			"file":	"ext/standard/var.c",
			"line":	175,
			"primary_score":	1999959,
			"second_score":	532820
		}, {
			"file":	"ext/standard/var.c",
			"line":	176,
			"primary_score":	1999959,
			"second_score":	532819
		}, {
			"file":	"ext/standard/var.c",
			"line":	178,
			"primary_score":	1999959,
			"second_score":	532818
		}, {
			"file":	"ext/standard/var.c",
			"line":	182,
			"primary_score":	1999959,
			"second_score":	532650
		}, {
			"file":	"ext/standard/var.c",
			"line":	183,
			"primary_score":	1999959,
			"second_score":	532649
		}, {
			"file":	"ext/standard/var.c",
			"line":	185,
			"primary_score":	1999959,
			"second_score":	149834
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	104,
			"primary_score":	1999978,
			"second_score":	688959
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	105,
			"primary_score":	1999978,
			"second_score":	688958
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	106,
			"primary_score":	1999978,
			"second_score":	688957
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	107,
			"primary_score":	1999978,
			"second_score":	688956
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	108,
			"primary_score":	1999978,
			"second_score":	688955
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	110,
			"primary_score":	1999978,
			"second_score":	688954
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	112,
			"primary_score":	1999978,
			"second_score":	688852
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	113,
			"primary_score":	1999978,
			"second_score":	688849
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	114,
			"primary_score":	1999978,
			"second_score":	534814
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	115,
			"primary_score":	1999978,
			"second_score":	534813
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	120,
			"primary_score":	1999980,
			"second_score":	534812
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	126,
			"primary_score":	1999980,
			"second_score":	534811
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	129,
			"primary_score":	1999978,
			"second_score":	534810
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	130,
			"primary_score":	1999978,
			"second_score":	534809
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	131,
			"primary_score":	1999978,
			"second_score":	534699
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	132,
			"primary_score":	1999978,
			"second_score":	534574
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	133,
			"primary_score":	1999978,
			"second_score":	534192
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	141,
			"primary_score":	1999978,
			"second_score":	534191
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	143,
			"primary_score":	1999978,
			"second_score":	533815
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	144,
			"primary_score":	1999978,
			"second_score":	533550
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	146,
			"primary_score":	1999980,
			"second_score":	536595
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	148,
			"primary_score":	1999978,
			"second_score":	533401
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	149,
			"primary_score":	1999978,
			"second_score":	544801
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	151,
			"primary_score":	1999978,
			"second_score":	533400
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	153,
			"primary_score":	1999978,
			"second_score":	533397
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	161,
			"primary_score":	1999977,
			"second_score":	689391
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	162,
			"primary_score":	1999977,
			"second_score":	689390
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	163,
			"primary_score":	1999977,
			"second_score":	689389
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	164,
			"primary_score":	1999977,
			"second_score":	689388
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	165,
			"primary_score":	1999977,
			"second_score":	689387
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	167,
			"primary_score":	1999977,
			"second_score":	689386
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	171,
			"primary_score":	1999978,
			"second_score":	689319
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	172,
			"primary_score":	1999978,
			"second_score":	689285
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	174,
			"primary_score":	1999978,
			"second_score":	689260
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	179,
			"primary_score":	1999978,
			"second_score":	688961
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	181,
			"primary_score":	1999978,
			"second_score":	688960
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	183,
			"primary_score":	1999978,
			"second_score":	533374
		}, {
			"file":	"ext/tokenizer/tokenizer.c",
			"line":	184,
			"primary_score":	1999978,
			"second_score":	533327
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1378,
			"primary_score":	1999935,
			"second_score":	100789
		}, {
			"file":	"ext/xmlreader/php_xmlreader.c",
			"line":	1379,
			"primary_score":	1999935,
			"second_score":	100696
		}, {
			"file":	"ext/xmlwriter/php_xmlwriter.c",
			"line":	1972,
			"primary_score":	1999935,
			"second_score":	103479
		}, {
			"file":	"main/SAPI.c",
			"line":	69,
			"primary_score":	1999935,
			"second_score":	3134
		}, {
			"file":	"main/SAPI.c",
			"line":	101,
			"primary_score":	1999935,
			"second_score":	3135
		}, {
			"file":	"main/SAPI.c",
			"line":	104,
			"primary_score":	1999935,
			"second_score":	3113
		}, {
			"file":	"main/SAPI.c",
			"line":	106,
			"primary_score":	1999935,
			"second_score":	3112
		}, {
			"file":	"main/SAPI.c",
			"line":	116,
			"primary_score":	1999935,
			"second_score":	689854
		}, {
			"file":	"main/SAPI.c",
			"line":	283,
			"primary_score":	1999935,
			"second_score":	689976
		}, {
			"file":	"main/SAPI.c",
			"line":	284,
			"primary_score":	1999935,
			"second_score":	689975
		}, {
			"file":	"main/SAPI.c",
			"line":	286,
			"primary_score":	1999935,
			"second_score":	689974
		}, {
			"file":	"main/SAPI.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	689973
		}, {
			"file":	"main/SAPI.c",
			"line":	288,
			"primary_score":	1999935,
			"second_score":	689972
		}, {
			"file":	"main/SAPI.c",
			"line":	293,
			"primary_score":	1999935,
			"second_score":	689971
		}, {
			"file":	"main/SAPI.c",
			"line":	294,
			"primary_score":	1999935,
			"second_score":	689970
		}, {
			"file":	"main/SAPI.c",
			"line":	295,
			"primary_score":	1999935,
			"second_score":	689969
		}, {
			"file":	"main/SAPI.c",
			"line":	301,
			"primary_score":	1999935,
			"second_score":	689968
		}, {
			"file":	"main/SAPI.c",
			"line":	313,
			"primary_score":	1999935,
			"second_score":	689967
		}, {
			"file":	"main/SAPI.c",
			"line":	314,
			"primary_score":	1999935,
			"second_score":	689966
		}, {
			"file":	"main/SAPI.c",
			"line":	315,
			"primary_score":	1999935,
			"second_score":	689944
		}, {
			"file":	"main/SAPI.c",
			"line":	317,
			"primary_score":	1999935,
			"second_score":	689943
		}, {
			"file":	"main/SAPI.c",
			"line":	479,
			"primary_score":	1999935,
			"second_score":	113389
		}, {
			"file":	"main/SAPI.c",
			"line":	487,
			"primary_score":	1999935,
			"second_score":	113430
		}, {
			"file":	"main/SAPI.c",
			"line":	488,
			"primary_score":	1999935,
			"second_score":	113426
		}, {
			"file":	"main/SAPI.c",
			"line":	491,
			"primary_score":	1999935,
			"second_score":	113425
		}, {
			"file":	"main/SAPI.c",
			"line":	493,
			"primary_score":	1999935,
			"second_score":	113424
		}, {
			"file":	"main/SAPI.c",
			"line":	504,
			"primary_score":	1999935,
			"second_score":	113423
		}, {
			"file":	"main/SAPI.c",
			"line":	507,
			"primary_score":	1999935,
			"second_score":	113422
		}, {
			"file":	"main/SAPI.c",
			"line":	510,
			"primary_score":	1999935,
			"second_score":	113421
		}, {
			"file":	"main/SAPI.c",
			"line":	513,
			"primary_score":	1999935,
			"second_score":	113420
		}, {
			"file":	"main/SAPI.c",
			"line":	516,
			"primary_score":	1999935,
			"second_score":	113419
		}, {
			"file":	"main/SAPI.c",
			"line":	519,
			"primary_score":	1999935,
			"second_score":	113418
		}, {
			"file":	"main/SAPI.c",
			"line":	522,
			"primary_score":	1999935,
			"second_score":	113417
		}, {
			"file":	"main/SAPI.c",
			"line":	523,
			"primary_score":	1999935,
			"second_score":	113416
		}, {
			"file":	"main/SAPI.c",
			"line":	525,
			"primary_score":	1999935,
			"second_score":	113412
		}, {
			"file":	"main/SAPI.c",
			"line":	528,
			"primary_score":	1999935,
			"second_score":	113411
		}, {
			"file":	"main/SAPI.c",
			"line":	529,
			"primary_score":	1999935,
			"second_score":	113410
		}, {
			"file":	"main/SAPI.c",
			"line":	530,
			"primary_score":	1999935,
			"second_score":	113391
		}, {
			"file":	"main/SAPI.c",
			"line":	532,
			"primary_score":	1999935,
			"second_score":	113390
		}, {
			"file":	"main/SAPI.c",
			"line":	533,
			"primary_score":	1999935,
			"second_score":	113388
		}, {
			"file":	"main/SAPI.c",
			"line":	534,
			"primary_score":	1999935,
			"second_score":	113387
		}, {
			"file":	"main/SAPI.c",
			"line":	535,
			"primary_score":	1999935,
			"second_score":	113386
		}, {
			"file":	"main/SAPI.c",
			"line":	536,
			"primary_score":	1999935,
			"second_score":	113385
		}, {
			"file":	"main/SAPI.c",
			"line":	605,
			"primary_score":	1999935,
			"second_score":	689857
		}, {
			"file":	"main/SAPI.c",
			"line":	620,
			"primary_score":	1999935,
			"second_score":	689855
		}, {
			"file":	"main/SAPI.c",
			"line":	809,
			"primary_score":	1999935,
			"second_score":	149289
		}, {
			"file":	"main/SAPI.c",
			"line":	810,
			"primary_score":	1999935,
			"second_score":	149288
		}, {
			"file":	"main/SAPI.c",
			"line":	812,
			"primary_score":	1999935,
			"second_score":	149287
		}, {
			"file":	"main/SAPI.c",
			"line":	813,
			"primary_score":	1999935,
			"second_score":	149286
		}, {
			"file":	"main/SAPI.c",
			"line":	819,
			"primary_score":	1999935,
			"second_score":	689980
		}, {
			"file":	"main/SAPI.c",
			"line":	820,
			"primary_score":	1999935,
			"second_score":	689979
		}, {
			"file":	"main/SAPI.c",
			"line":	821,
			"primary_score":	1999935,
			"second_score":	689978
		}, {
			"file":	"main/SAPI.c",
			"line":	823,
			"primary_score":	1999935,
			"second_score":	689977
		}, {
			"file":	"main/SAPI.c",
			"line":	824,
			"primary_score":	1999935,
			"second_score":	689942
		}, {
			"file":	"main/SAPI.c",
			"line":	825,
			"primary_score":	1999935,
			"second_score":	689941
		}, {
			"file":	"main/SAPI.c",
			"line":	826,
			"primary_score":	1999935,
			"second_score":	689860
		}, {
			"file":	"main/SAPI.c",
			"line":	827,
			"primary_score":	1999935,
			"second_score":	689859
		}, {
			"file":	"main/SAPI.c",
			"line":	828,
			"primary_score":	1999935,
			"second_score":	689858
		}, {
			"file":	"main/SAPI.c",
			"line":	829,
			"primary_score":	1999935,
			"second_score":	689835
		}, {
			"file":	"main/SAPI.c",
			"line":	832,
			"primary_score":	1999935,
			"second_score":	689834
		}, {
			"file":	"main/SAPI.c",
			"line":	837,
			"primary_score":	1999935,
			"second_score":	689833
		}, {
			"file":	"main/SAPI.c",
			"line":	839,
			"primary_score":	1999935,
			"second_score":	689832
		}, {
			"file":	"main/SAPI.c",
			"line":	840,
			"primary_score":	1999935,
			"second_score":	689831
		}, {
			"file":	"main/SAPI.c",
			"line":	845,
			"primary_score":	1999935,
			"second_score":	689829
		}, {
			"file":	"main/SAPI.c",
			"line":	848,
			"primary_score":	1999935,
			"second_score":	689828
		}, {
			"file":	"main/SAPI.c",
			"line":	879,
			"primary_score":	1999935,
			"second_score":	689827
		}, {
			"file":	"main/SAPI.c",
			"line":	881,
			"primary_score":	1999935,
			"second_score":	689825
		}, {
			"file":	"main/SAPI.c",
			"line":	950,
			"primary_score":	1999935,
			"second_score":	103523
		}, {
			"file":	"main/SAPI.c",
			"line":	951,
			"primary_score":	1999935,
			"second_score":	103522
		}, {
			"file":	"main/SAPI.c",
			"line":	952,
			"primary_score":	1999935,
			"second_score":	103520
		}, {
			"file":	"main/SAPI.c",
			"line":	1024,
			"primary_score":	1999935,
			"second_score":	712378
		}, {
			"file":	"main/SAPI.c",
			"line":	1026,
			"primary_score":	1999935,
			"second_score":	712377
		}, {
			"file":	"main/SAPI.c",
			"line":	1029,
			"primary_score":	1999935,
			"second_score":	712376
		}, {
			"file":	"main/SAPI.c",
			"line":	1030,
			"primary_score":	1999935,
			"second_score":	712375
		}, {
			"file":	"main/SAPI.c",
			"line":	1031,
			"primary_score":	1999935,
			"second_score":	712374
		}, {
			"file":	"main/SAPI.c",
			"line":	1036,
			"primary_score":	1999935,
			"second_score":	712373
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	736,
			"primary_score":	1999935,
			"second_score":	707843
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	744,
			"primary_score":	1999935,
			"second_score":	707842
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	745,
			"primary_score":	1999935,
			"second_score":	707841
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	746,
			"primary_score":	1999935,
			"second_score":	707840
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	748,
			"primary_score":	1999935,
			"second_score":	707839
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	750,
			"primary_score":	1999935,
			"second_score":	707838
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	751,
			"primary_score":	1999935,
			"second_score":	707837
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	785,
			"primary_score":	1999935,
			"second_score":	707836
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	786,
			"primary_score":	1999935,
			"second_score":	707835
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	788,
			"primary_score":	1999935,
			"second_score":	707834
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	793,
			"primary_score":	1999935,
			"second_score":	705090
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	794,
			"primary_score":	1999935,
			"second_score":	705089
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	795,
			"primary_score":	1999935,
			"second_score":	705088
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	796,
			"primary_score":	1999935,
			"second_score":	705087
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	800,
			"primary_score":	1999935,
			"second_score":	705086
		}, {
			"file":	"main/fopen_wrappers.c",
			"line":	802,
			"primary_score":	1999935,
			"second_score":	705085
		}, {
			"file":	"main/getopt.c",
			"line":	70,
			"primary_score":	1999935,
			"second_score":	174211
		}, {
			"file":	"main/getopt.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	154698
		}, {
			"file":	"main/getopt.c",
			"line":	175,
			"primary_score":	1999935,
			"second_score":	154697
		}, {
			"file":	"main/getopt.c",
			"line":	177,
			"primary_score":	1999935,
			"second_score":	154696
		}, {
			"file":	"main/getopt.c",
			"line":	178,
			"primary_score":	1999935,
			"second_score":	154695
		}, {
			"file":	"main/getopt.c",
			"line":	185,
			"primary_score":	1999935,
			"second_score":	154694
		}, {
			"file":	"main/main.c",
			"line":	591,
			"primary_score":	1999956,
			"second_score":	150143
		}, {
			"file":	"main/main.c",
			"line":	592,
			"primary_score":	1999956,
			"second_score":	150142
		}, {
			"file":	"main/main.c",
			"line":	593,
			"primary_score":	1999956,
			"second_score":	150141
		}, {
			"file":	"main/main.c",
			"line":	594,
			"primary_score":	1999956,
			"second_score":	150140
		}, {
			"file":	"main/main.c",
			"line":	595,
			"primary_score":	1999956,
			"second_score":	150139
		}, {
			"file":	"main/main.c",
			"line":	597,
			"primary_score":	1999956,
			"second_score":	150138
		}, {
			"file":	"main/main.c",
			"line":	598,
			"primary_score":	1999956,
			"second_score":	150137
		}, {
			"file":	"main/main.c",
			"line":	599,
			"primary_score":	1999956,
			"second_score":	150019
		}, {
			"file":	"main/main.c",
			"line":	600,
			"primary_score":	1999956,
			"second_score":	149970
		}, {
			"file":	"main/main.c",
			"line":	601,
			"primary_score":	1999956,
			"second_score":	149951
		}, {
			"file":	"main/main.c",
			"line":	603,
			"primary_score":	1999956,
			"second_score":	149950
		}, {
			"file":	"main/main.c",
			"line":	1599,
			"primary_score":	1999935,
			"second_score":	149446
		}, {
			"file":	"main/main.c",
			"line":	1600,
			"primary_score":	1999935,
			"second_score":	149445
		}, {
			"file":	"main/main.c",
			"line":	1602,
			"primary_score":	1999935,
			"second_score":	149444
		}, {
			"file":	"main/main.c",
			"line":	1607,
			"primary_score":	1999935,
			"second_score":	149443
		}, {
			"file":	"main/main.c",
			"line":	1608,
			"primary_score":	1999935,
			"second_score":	149442
		}, {
			"file":	"main/main.c",
			"line":	1610,
			"primary_score":	1999935,
			"second_score":	149441
		}, {
			"file":	"main/main.c",
			"line":	1613,
			"primary_score":	1999935,
			"second_score":	149434
		}, {
			"file":	"main/main.c",
			"line":	1614,
			"primary_score":	1999935,
			"second_score":	149428
		}, {
			"file":	"main/main.c",
			"line":	1615,
			"primary_score":	1999935,
			"second_score":	149426
		}, {
			"file":	"main/main.c",
			"line":	1618,
			"primary_score":	1999935,
			"second_score":	149424
		}, {
			"file":	"main/main.c",
			"line":	1619,
			"primary_score":	1999935,
			"second_score":	149418
		}, {
			"file":	"main/main.c",
			"line":	1620,
			"primary_score":	1999935,
			"second_score":	149316
		}, {
			"file":	"main/main.c",
			"line":	1623,
			"primary_score":	1999935,
			"second_score":	149314
		}, {
			"file":	"main/main.c",
			"line":	1624,
			"primary_score":	1999935,
			"second_score":	149308
		}, {
			"file":	"main/main.c",
			"line":	1626,
			"primary_score":	1999935,
			"second_score":	149307
		}, {
			"file":	"main/main.c",
			"line":	1632,
			"primary_score":	1999935,
			"second_score":	149306
		}, {
			"file":	"main/main.c",
			"line":	1635,
			"primary_score":	1999935,
			"second_score":	149305
		}, {
			"file":	"main/main.c",
			"line":	1637,
			"primary_score":	1999935,
			"second_score":	149303
		}, {
			"file":	"main/main.c",
			"line":	1638,
			"primary_score":	1999935,
			"second_score":	149298
		}, {
			"file":	"main/main.c",
			"line":	1641,
			"primary_score":	1999935,
			"second_score":	149296
		}, {
			"file":	"main/main.c",
			"line":	1642,
			"primary_score":	1999935,
			"second_score":	149290
		}, {
			"file":	"main/main.c",
			"line":	1643,
			"primary_score":	1999935,
			"second_score":	149285
		}, {
			"file":	"main/main.c",
			"line":	1646,
			"primary_score":	1999935,
			"second_score":	149283
		}, {
			"file":	"main/main.c",
			"line":	1647,
			"primary_score":	1999935,
			"second_score":	149282
		}, {
			"file":	"main/main.c",
			"line":	1648,
			"primary_score":	1999935,
			"second_score":	148680
		}, {
			"file":	"main/main.c",
			"line":	1652,
			"primary_score":	1999935,
			"second_score":	148677
		}, {
			"file":	"main/main.c",
			"line":	1653,
			"primary_score":	1999935,
			"second_score":	148671
		}, {
			"file":	"main/main.c",
			"line":	1655,
			"primary_score":	1999935,
			"second_score":	148670
		}, {
			"file":	"main/main.c",
			"line":	1656,
			"primary_score":	1999935,
			"second_score":	148528
		}, {
			"file":	"main/main.c",
			"line":	1657,
			"primary_score":	1999935,
			"second_score":	148527
		}, {
			"file":	"main/main.c",
			"line":	1660,
			"primary_score":	1999935,
			"second_score":	148493
		}, {
			"file":	"main/main.c",
			"line":	1663,
			"primary_score":	1999935,
			"second_score":	148491
		}, {
			"file":	"main/main.c",
			"line":	1667,
			"primary_score":	1999935,
			"second_score":	148490
		}, {
			"file":	"main/main.c",
			"line":	1673,
			"primary_score":	1999935,
			"second_score":	148489
		}, {
			"file":	"main/main.c",
			"line":	1676,
			"primary_score":	1999935,
			"second_score":	113449
		}, {
			"file":	"main/main.c",
			"line":	1677,
			"primary_score":	1999935,
			"second_score":	113443
		}, {
			"file":	"main/main.c",
			"line":	1678,
			"primary_score":	1999935,
			"second_score":	113439
		}, {
			"file":	"main/main.c",
			"line":	1681,
			"primary_score":	1999935,
			"second_score":	113437
		}, {
			"file":	"main/main.c",
			"line":	1682,
			"primary_score":	1999935,
			"second_score":	113431
		}, {
			"file":	"main/main.c",
			"line":	1683,
			"primary_score":	1999935,
			"second_score":	113384
		}, {
			"file":	"main/main.c",
			"line":	1686,
			"primary_score":	1999935,
			"second_score":	113382
		}, {
			"file":	"main/main.c",
			"line":	1687,
			"primary_score":	1999935,
			"second_score":	113376
		}, {
			"file":	"main/main.c",
			"line":	1688,
			"primary_score":	1999935,
			"second_score":	113373
		}, {
			"file":	"main/main.c",
			"line":	1691,
			"primary_score":	1999935,
			"second_score":	113371
		}, {
			"file":	"main/main.c",
			"line":	1692,
			"primary_score":	1999935,
			"second_score":	113365
		}, {
			"file":	"main/main.c",
			"line":	1693,
			"primary_score":	1999935,
			"second_score":	112946
		}, {
			"file":	"main/main.c",
			"line":	1694,
			"primary_score":	1999935,
			"second_score":	112944
		}, {
			"file":	"main/main.c",
			"line":	1697,
			"primary_score":	1999935,
			"second_score":	103544
		}, {
			"file":	"main/main.c",
			"line":	1698,
			"primary_score":	1999935,
			"second_score":	103538
		}, {
			"file":	"main/main.c",
			"line":	1699,
			"primary_score":	1999935,
			"second_score":	103536
		}, {
			"file":	"main/main.c",
			"line":	1732,
			"primary_score":	1999935,
			"second_score":	149733
		}, {
			"file":	"main/main.c",
			"line":	1733,
			"primary_score":	1999935,
			"second_score":	149732
		}, {
			"file":	"main/main.c",
			"line":	1753,
			"primary_score":	1999935,
			"second_score":	3150
		}, {
			"file":	"main/main.c",
			"line":	1756,
			"primary_score":	1999935,
			"second_score":	3149
		}, {
			"file":	"main/main.c",
			"line":	1759,
			"primary_score":	1999935,
			"second_score":	3148
		}, {
			"file":	"main/main.c",
			"line":	1762,
			"primary_score":	1999935,
			"second_score":	3147
		}, {
			"file":	"main/main.c",
			"line":	1766,
			"primary_score":	1999935,
			"second_score":	3146
		}, {
			"file":	"main/main.c",
			"line":	2198,
			"primary_score":	1999935,
			"second_score":	103527
		}, {
			"file":	"main/main.c",
			"line":	2200,
			"primary_score":	1999935,
			"second_score":	103526
		}, {
			"file":	"main/main.c",
			"line":	2202,
			"primary_score":	1999935,
			"second_score":	103525
		}, {
			"file":	"main/main.c",
			"line":	2215,
			"primary_score":	1999935,
			"second_score":	103524
		}, {
			"file":	"main/main.c",
			"line":	2217,
			"primary_score":	1999935,
			"second_score":	103519
		}, {
			"file":	"main/main.c",
			"line":	2220,
			"primary_score":	1999935,
			"second_score":	6121
		}, {
			"file":	"main/main.c",
			"line":	2222,
			"primary_score":	1999935,
			"second_score":	6055
		}, {
			"file":	"main/main.c",
			"line":	2223,
			"primary_score":	1999935,
			"second_score":	6026
		}, {
			"file":	"main/main.c",
			"line":	2226,
			"primary_score":	1999935,
			"second_score":	3567
		}, {
			"file":	"main/main.c",
			"line":	2229,
			"primary_score":	1999935,
			"second_score":	3244
		}, {
			"file":	"main/main.c",
			"line":	2230,
			"primary_score":	1999935,
			"second_score":	3214
		}, {
			"file":	"main/main.c",
			"line":	2235,
			"primary_score":	1999935,
			"second_score":	3191
		}, {
			"file":	"main/main.c",
			"line":	2236,
			"primary_score":	1999935,
			"second_score":	3154
		}, {
			"file":	"main/main.c",
			"line":	2238,
			"primary_score":	1999935,
			"second_score":	3152
		}, {
			"file":	"main/main.c",
			"line":	2241,
			"primary_score":	1999935,
			"second_score":	3151
		}, {
			"file":	"main/main.c",
			"line":	2242,
			"primary_score":	1999935,
			"second_score":	3141
		}, {
			"file":	"main/main.c",
			"line":	2259,
			"primary_score":	1999935,
			"second_score":	707867
		}, {
			"file":	"main/main.c",
			"line":	2260,
			"primary_score":	1999935,
			"second_score":	707866
		}, {
			"file":	"main/main.c",
			"line":	2264,
			"primary_score":	1999935,
			"second_score":	707865
		}, {
			"file":	"main/main.c",
			"line":	2265,
			"primary_score":	1999935,
			"second_score":	707864
		}, {
			"file":	"main/main.c",
			"line":	2267,
			"primary_score":	1999935,
			"second_score":	707863
		}, {
			"file":	"main/main.c",
			"line":	2269,
			"primary_score":	1999935,
			"second_score":	707862
		}, {
			"file":	"main/main.c",
			"line":	2270,
			"primary_score":	1999935,
			"second_score":	707861
		}, {
			"file":	"main/main.c",
			"line":	2276,
			"primary_score":	1999935,
			"second_score":	707858
		}, {
			"file":	"main/main.c",
			"line":	2277,
			"primary_score":	1999935,
			"second_score":	707857
		}, {
			"file":	"main/main.c",
			"line":	2280,
			"primary_score":	1999935,
			"second_score":	707856
		}, {
			"file":	"main/main.c",
			"line":	2281,
			"primary_score":	1999935,
			"second_score":	707850
		}, {
			"file":	"main/main.c",
			"line":	2289,
			"primary_score":	1999935,
			"second_score":	707849
		}, {
			"file":	"main/main.c",
			"line":	2291,
			"primary_score":	1999935,
			"second_score":	707848
		}, {
			"file":	"main/main.c",
			"line":	2304,
			"primary_score":	1999935,
			"second_score":	707847
		}, {
			"file":	"main/main.c",
			"line":	2309,
			"primary_score":	1999935,
			"second_score":	707846
		}, {
			"file":	"main/main.c",
			"line":	2310,
			"primary_score":	1999935,
			"second_score":	707845
		}, {
			"file":	"main/main.c",
			"line":	2312,
			"primary_score":	1999935,
			"second_score":	707844
		}, {
			"file":	"main/main.c",
			"line":	2313,
			"primary_score":	1999935,
			"second_score":	705084
		}, {
			"file":	"main/main.c",
			"line":	2314,
			"primary_score":	1999935,
			"second_score":	705083
		}, {
			"file":	"main/main.c",
			"line":	2315,
			"primary_score":	1999935,
			"second_score":	704605
		}, {
			"file":	"main/main.c",
			"line":	2319,
			"primary_score":	1999935,
			"second_score":	704577
		}, {
			"file":	"main/main.c",
			"line":	2326,
			"primary_score":	1999935,
			"second_score":	704576
		}, {
			"file":	"main/main.c",
			"line":	2329,
			"primary_score":	1999935,
			"second_score":	704575
		}, {
			"file":	"main/main.c",
			"line":	2336,
			"primary_score":	1999935,
			"second_score":	704574
		}, {
			"file":	"main/main.c",
			"line":	2338,
			"primary_score":	1999935,
			"second_score":	704573
		}, {
			"file":	"main/main.c",
			"line":	2344,
			"primary_score":	1999935,
			"second_score":	704572
		}, {
			"file":	"main/main.c",
			"line":	2346,
			"primary_score":	1999935,
			"second_score":	149458
		}, {
			"file":	"main/main.c",
			"line":	2354,
			"primary_score":	1999935,
			"second_score":	149456
		}, {
			"file":	"main/main.c",
			"line":	2357,
			"primary_score":	1999935,
			"second_score":	149455
		}, {
			"file":	"main/main.c",
			"line":	2359,
			"primary_score":	1999935,
			"second_score":	149453
		}, {
			"file":	"main/output.c",
			"line":	103,
			"primary_score":	1999935,
			"second_score":	3190
		}, {
			"file":	"main/output.c",
			"line":	104,
			"primary_score":	1999935,
			"second_score":	3176
		}, {
			"file":	"main/output.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	3162
		}, {
			"file":	"main/output.c",
			"line":	129,
			"primary_score":	1999935,
			"second_score":	149302
		}, {
			"file":	"main/output.c",
			"line":	131,
			"primary_score":	1999935,
			"second_score":	149301
		}, {
			"file":	"main/output.c",
			"line":	132,
			"primary_score":	1999935,
			"second_score":	149300
		}, {
			"file":	"main/output.c",
			"line":	135,
			"primary_score":	1999935,
			"second_score":	149299
		}, {
			"file":	"main/output.c",
			"line":	198,
			"primary_score":	1999935,
			"second_score":	149731
		}, {
			"file":	"main/output.c",
			"line":	201,
			"primary_score":	1999935,
			"second_score":	149730
		}, {
			"file":	"main/output.c",
			"line":	202,
			"primary_score":	1999935,
			"second_score":	149684
		}, {
			"file":	"main/output.c",
			"line":	281,
			"primary_score":	1999935,
			"second_score":	149304
		}, {
			"file":	"main/output.c",
			"line":	697,
			"primary_score":	1999935,
			"second_score":	149725
		}, {
			"file":	"main/output.c",
			"line":	703,
			"primary_score":	1999935,
			"second_score":	149724
		}, {
			"file":	"main/output.c",
			"line":	711,
			"primary_score":	1999935,
			"second_score":	149722
		}, {
			"file":	"main/output.c",
			"line":	715,
			"primary_score":	1999935,
			"second_score":	149721
		}, {
			"file":	"main/output.c",
			"line":	716,
			"primary_score":	1999935,
			"second_score":	149720
		}, {
			"file":	"main/output.c",
			"line":	717,
			"primary_score":	1999935,
			"second_score":	149719
		}, {
			"file":	"main/output.c",
			"line":	719,
			"primary_score":	1999935,
			"second_score":	149718
		}, {
			"file":	"main/output.c",
			"line":	785,
			"primary_score":	1999935,
			"second_score":	149686
		}, {
			"file":	"main/output.c",
			"line":	789,
			"primary_score":	1999935,
			"second_score":	149685
		}, {
			"file":	"main/output.c",
			"line":	975,
			"primary_score":	1999935,
			"second_score":	149729
		}, {
			"file":	"main/output.c",
			"line":	976,
			"primary_score":	1999935,
			"second_score":	149728
		}, {
			"file":	"main/output.c",
			"line":	977,
			"primary_score":	1999935,
			"second_score":	149727
		}, {
			"file":	"main/output.c",
			"line":	979,
			"primary_score":	1999935,
			"second_score":	149726
		}, {
			"file":	"main/output.c",
			"line":	983,
			"primary_score":	1999935,
			"second_score":	149723
		}, {
			"file":	"main/output.c",
			"line":	990,
			"primary_score":	1999935,
			"second_score":	149717
		}, {
			"file":	"main/output.c",
			"line":	1002,
			"primary_score":	1999935,
			"second_score":	149716
		}, {
			"file":	"main/output.c",
			"line":	1003,
			"primary_score":	1999935,
			"second_score":	149715
		}, {
			"file":	"main/output.c",
			"line":	1006,
			"primary_score":	1999935,
			"second_score":	149714
		}, {
			"file":	"main/output.c",
			"line":	1010,
			"primary_score":	1999935,
			"second_score":	149713
		}, {
			"file":	"main/output.c",
			"line":	1011,
			"primary_score":	1999935,
			"second_score":	689823
		}, {
			"file":	"main/output.c",
			"line":	1014,
			"primary_score":	1999935,
			"second_score":	689821
		}, {
			"file":	"main/output.c",
			"line":	1015,
			"primary_score":	1999935,
			"second_score":	689819
		}, {
			"file":	"main/output.c",
			"line":	1016,
			"primary_score":	1999935,
			"second_score":	689816
		}, {
			"file":	"main/output.c",
			"line":	1022,
			"primary_score":	1999935,
			"second_score":	149712
		}, {
			"file":	"main/output.c",
			"line":	1023,
			"primary_score":	1999935,
			"second_score":	149694
		}, {
			"file":	"main/output.c",
			"line":	1024,
			"primary_score":	1999935,
			"second_score":	149693
		}, {
			"file":	"main/output.c",
			"line":	1026,
			"primary_score":	1999935,
			"second_score":	149688
		}, {
			"file":	"main/output.c",
			"line":	1028,
			"primary_score":	1999935,
			"second_score":	149687
		}, {
			"file":	"main/php_ini.c",
			"line":	194,
			"primary_score":	1999935,
			"second_score":	3256
		}, {
			"file":	"main/php_ini.c",
			"line":	197,
			"primary_score":	1999935,
			"second_score":	3255
		}, {
			"file":	"main/php_ini.c",
			"line":	198,
			"primary_score":	1999935,
			"second_score":	3254
		}, {
			"file":	"main/php_ini.c",
			"line":	729,
			"primary_score":	1999935,
			"second_score":	3566
		}, {
			"file":	"main/php_ini.c",
			"line":	730,
			"primary_score":	1999935,
			"second_score":	3247
		}, {
			"file":	"main/php_ini.c",
			"line":	734,
			"primary_score":	1999935,
			"second_score":	3246
		}, {
			"file":	"main/php_ini.c",
			"line":	738,
			"primary_score":	1999935,
			"second_score":	3245
		}, {
			"file":	"main/php_logos.c",
			"line":	67,
			"primary_score":	1999935,
			"second_score":	6054
		}, {
			"file":	"main/php_logos.c",
			"line":	68,
			"primary_score":	1999935,
			"second_score":	6027
		}, {
			"file":	"main/php_open_temporary_file.c",
			"line":	183,
			"primary_score":	1999935,
			"second_score":	3153
		}, {
			"file":	"main/php_ticks.c",
			"line":	32,
			"primary_score":	1999935,
			"second_score":	149440
		}, {
			"file":	"main/php_ticks.c",
			"line":	37,
			"primary_score":	1999935,
			"second_score":	3145
		}, {
			"file":	"main/php_variables.c",
			"line":	62,
			"primary_score":	1999935,
			"second_score":	712371
		}, {
			"file":	"main/php_variables.c",
			"line":	63,
			"primary_score":	1999935,
			"second_score":	712370
		}, {
			"file":	"main/php_variables.c",
			"line":	64,
			"primary_score":	1999935,
			"second_score":	712369
		}, {
			"file":	"main/php_variables.c",
			"line":	65,
			"primary_score":	1999935,
			"second_score":	712368
		}, {
			"file":	"main/php_variables.c",
			"line":	66,
			"primary_score":	1999935,
			"second_score":	712367
		}, {
			"file":	"main/php_variables.c",
			"line":	67,
			"primary_score":	1999935,
			"second_score":	712366
		}, {
			"file":	"main/php_variables.c",
			"line":	68,
			"primary_score":	1999935,
			"second_score":	712365
		}, {
			"file":	"main/php_variables.c",
			"line":	69,
			"primary_score":	1999935,
			"second_score":	712364
		}, {
			"file":	"main/php_variables.c",
			"line":	70,
			"primary_score":	1999935,
			"second_score":	712363
		}, {
			"file":	"main/php_variables.c",
			"line":	72,
			"primary_score":	1999935,
			"second_score":	712362
		}, {
			"file":	"main/php_variables.c",
			"line":	74,
			"primary_score":	1999935,
			"second_score":	712361
		}, {
			"file":	"main/php_variables.c",
			"line":	75,
			"primary_score":	1999935,
			"second_score":	712360
		}, {
			"file":	"main/php_variables.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	712359
		}, {
			"file":	"main/php_variables.c",
			"line":	86,
			"primary_score":	1999935,
			"second_score":	712358
		}, {
			"file":	"main/php_variables.c",
			"line":	93,
			"primary_score":	1999935,
			"second_score":	712357
		}, {
			"file":	"main/php_variables.c",
			"line":	94,
			"primary_score":	1999935,
			"second_score":	712356
		}, {
			"file":	"main/php_variables.c",
			"line":	95,
			"primary_score":	1999935,
			"second_score":	712355
		}, {
			"file":	"main/php_variables.c",
			"line":	98,
			"primary_score":	1999935,
			"second_score":	712354
		}, {
			"file":	"main/php_variables.c",
			"line":	99,
			"primary_score":	1999935,
			"second_score":	712331
		}, {
			"file":	"main/php_variables.c",
			"line":	101,
			"primary_score":	1999935,
			"second_score":	712330
		}, {
			"file":	"main/php_variables.c",
			"line":	108,
			"primary_score":	1999935,
			"second_score":	712329
		}, {
			"file":	"main/php_variables.c",
			"line":	110,
			"primary_score":	1999935,
			"second_score":	712328
		}, {
			"file":	"main/php_variables.c",
			"line":	117,
			"primary_score":	1999935,
			"second_score":	712327
		}, {
			"file":	"main/php_variables.c",
			"line":	125,
			"primary_score":	1999935,
			"second_score":	712326
		}, {
			"file":	"main/php_variables.c",
			"line":	126,
			"primary_score":	1999935,
			"second_score":	712325
		}, {
			"file":	"main/php_variables.c",
			"line":	128,
			"primary_score":	1999935,
			"second_score":	712324
		}, {
			"file":	"main/php_variables.c",
			"line":	212,
			"primary_score":	1999935,
			"second_score":	712323
		}, {
			"file":	"main/php_variables.c",
			"line":	213,
			"primary_score":	1999935,
			"second_score":	712322
		}, {
			"file":	"main/php_variables.c",
			"line":	214,
			"primary_score":	1999935,
			"second_score":	712213
		}, {
			"file":	"main/php_variables.c",
			"line":	215,
			"primary_score":	1999935,
			"second_score":	712212
		}, {
			"file":	"main/php_variables.c",
			"line":	216,
			"primary_score":	1999935,
			"second_score":	712211
		}, {
			"file":	"main/php_variables.c",
			"line":	219,
			"primary_score":	1999935,
			"second_score":	712210
		}, {
			"file":	"main/php_variables.c",
			"line":	222,
			"primary_score":	1999935,
			"second_score":	712209
		}, {
			"file":	"main/php_variables.c",
			"line":	230,
			"primary_score":	1999935,
			"second_score":	712208
		}, {
			"file":	"main/php_variables.c",
			"line":	235,
			"primary_score":	1999935,
			"second_score":	712207
		}, {
			"file":	"main/php_variables.c",
			"line":	237,
			"primary_score":	1999935,
			"second_score":	712033
		}, {
			"file":	"main/php_variables.c",
			"line":	242,
			"primary_score":	1999935,
			"second_score":	712032
		}, {
			"file":	"main/php_variables.c",
			"line":	546,
			"primary_score":	1999935,
			"second_score":	707860
		}, {
			"file":	"main/php_variables.c",
			"line":	554,
			"primary_score":	1999935,
			"second_score":	707859
		}, {
			"file":	"main/php_variables.c",
			"line":	581,
			"primary_score":	1999935,
			"second_score":	712385
		}, {
			"file":	"main/php_variables.c",
			"line":	584,
			"primary_score":	1999935,
			"second_score":	712384
		}, {
			"file":	"main/php_variables.c",
			"line":	587,
			"primary_score":	1999935,
			"second_score":	712383
		}, {
			"file":	"main/php_variables.c",
			"line":	591,
			"primary_score":	1999935,
			"second_score":	712382
		}, {
			"file":	"main/php_variables.c",
			"line":	592,
			"primary_score":	1999935,
			"second_score":	712381
		}, {
			"file":	"main/php_variables.c",
			"line":	593,
			"primary_score":	1999935,
			"second_score":	712380
		}, {
			"file":	"main/php_variables.c",
			"line":	594,
			"primary_score":	1999935,
			"second_score":	712379
		}, {
			"file":	"main/php_variables.c",
			"line":	595,
			"primary_score":	1999935,
			"second_score":	712372
		}, {
			"file":	"main/php_variables.c",
			"line":	598,
			"primary_score":	1999935,
			"second_score":	712030
		}, {
			"file":	"main/php_variables.c",
			"line":	755,
			"primary_score":	1999935,
			"second_score":	712029
		}, {
			"file":	"main/php_variables.c",
			"line":	756,
			"primary_score":	1999935,
			"second_score":	712028
		}, {
			"file":	"main/php_variables.c",
			"line":	757,
			"primary_score":	1999935,
			"second_score":	712027
		}, {
			"file":	"main/php_variables.c",
			"line":	759,
			"primary_score":	1999935,
			"second_score":	712026
		}, {
			"file":	"main/php_variables.c",
			"line":	761,
			"primary_score":	1999935,
			"second_score":	711985
		}, {
			"file":	"main/php_variables.c",
			"line":	762,
			"primary_score":	1999935,
			"second_score":	711983
		}, {
			"file":	"main/php_variables.c",
			"line":	763,
			"primary_score":	1999935,
			"second_score":	711981
		}, {
			"file":	"main/php_variables.c",
			"line":	764,
			"primary_score":	1999935,
			"second_score":	711416
		}, {
			"file":	"main/php_variables.c",
			"line":	782,
			"primary_score":	1999935,
			"second_score":	711258
		}, {
			"file":	"main/php_variables.c",
			"line":	783,
			"primary_score":	1999935,
			"second_score":	711098
		}, {
			"file":	"main/php_variables.c",
			"line":	785,
			"primary_score":	1999935,
			"second_score":	711096
		}, {
			"file":	"main/snprintf.c",
			"line":	317,
			"primary_score":	1999958,
			"second_score":	150292
		}, {
			"file":	"main/snprintf.c",
			"line":	318,
			"primary_score":	1999958,
			"second_score":	150291
		}, {
			"file":	"main/snprintf.c",
			"line":	320,
			"primary_score":	1999958,
			"second_score":	150290
		}, {
			"file":	"main/snprintf.c",
			"line":	324,
			"primary_score":	1999958,
			"second_score":	150289
		}, {
			"file":	"main/snprintf.c",
			"line":	335,
			"primary_score":	1999958,
			"second_score":	150288
		}, {
			"file":	"main/snprintf.c",
			"line":	339,
			"primary_score":	1999958,
			"second_score":	150287
		}, {
			"file":	"main/snprintf.c",
			"line":	346,
			"primary_score":	1999958,
			"second_score":	150286
		}, {
			"file":	"main/snprintf.c",
			"line":	347,
			"primary_score":	1999958,
			"second_score":	150282
		}, {
			"file":	"main/snprintf.c",
			"line":	349,
			"primary_score":	1999958,
			"second_score":	150281
		}, {
			"file":	"main/snprintf.c",
			"line":	350,
			"primary_score":	1999958,
			"second_score":	150280
		}, {
			"file":	"main/snprintf.c",
			"line":	354,
			"primary_score":	1999958,
			"second_score":	150279
		}, {
			"file":	"main/snprintf.c",
			"line":	355,
			"primary_score":	1999958,
			"second_score":	150278
		}, {
			"file":	"main/spprintf.c",
			"line":	254,
			"primary_score":	1999977,
			"second_score":	150103
		}, {
			"file":	"main/spprintf.c",
			"line":	255,
			"primary_score":	1999977,
			"second_score":	150102
		}, {
			"file":	"main/spprintf.c",
			"line":	257,
			"primary_score":	1999977,
			"second_score":	150101
		}, {
			"file":	"main/spprintf.c",
			"line":	259,
			"primary_score":	1999977,
			"second_score":	150100
		}, {
			"file":	"main/spprintf.c",
			"line":	261,
			"primary_score":	1999977,
			"second_score":	150099
		}, {
			"file":	"main/spprintf.c",
			"line":	263,
			"primary_score":	1999977,
			"second_score":	150098
		}, {
			"file":	"main/spprintf.c",
			"line":	266,
			"primary_score":	1999977,
			"second_score":	150097
		}, {
			"file":	"main/spprintf.c",
			"line":	272,
			"primary_score":	1999977,
			"second_score":	150096
		}, {
			"file":	"main/spprintf.c",
			"line":	275,
			"primary_score":	1999977,
			"second_score":	150095
		}, {
			"file":	"main/spprintf.c",
			"line":	276,
			"primary_score":	1999979,
			"second_score":	150094
		}, {
			"file":	"main/spprintf.c",
			"line":	277,
			"primary_score":	1999979,
			"second_score":	150093
		}, {
			"file":	"main/spprintf.c",
			"line":	278,
			"primary_score":	1999979,
			"second_score":	150092
		}, {
			"file":	"main/spprintf.c",
			"line":	279,
			"primary_score":	1999979,
			"second_score":	150091
		}, {
			"file":	"main/spprintf.c",
			"line":	289,
			"primary_score":	1999977,
			"second_score":	150090
		}, {
			"file":	"main/spprintf.c",
			"line":	306,
			"primary_score":	1999979,
			"second_score":	150089
		}, {
			"file":	"main/spprintf.c",
			"line":	340,
			"primary_score":	1999975,
			"second_score":	150299
		}, {
			"file":	"main/spprintf.c",
			"line":	345,
			"primary_score":	1999975,
			"second_score":	150298
		}, {
			"file":	"main/spprintf.c",
			"line":	346,
			"primary_score":	1999975,
			"second_score":	150297
		}, {
			"file":	"main/spprintf.c",
			"line":	441,
			"primary_score":	1999958,
			"second_score":	150295
		}, {
			"file":	"main/spprintf.c",
			"line":	444,
			"primary_score":	1999958,
			"second_score":	151213
		}, {
			"file":	"main/spprintf.c",
			"line":	449,
			"primary_score":	1999975,
			"second_score":	150294
		}, {
			"file":	"main/spprintf.c",
			"line":	474,
			"primary_score":	1999958,
			"second_score":	150293
		}, {
			"file":	"main/spprintf.c",
			"line":	476,
			"primary_score":	1999958,
			"second_score":	150277
		}, {
			"file":	"main/spprintf.c",
			"line":	478,
			"primary_score":	1999958,
			"second_score":	150275
		}, {
			"file":	"main/spprintf.c",
			"line":	479,
			"primary_score":	1999958,
			"second_score":	150274
		}, {
			"file":	"main/spprintf.c",
			"line":	481,
			"primary_score":	1999958,
			"second_score":	150273
		}, {
			"file":	"main/spprintf.c",
			"line":	483,
			"primary_score":	1999958,
			"second_score":	150272
		}, {
			"file":	"main/spprintf.c",
			"line":	486,
			"primary_score":	1999958,
			"second_score":	150271
		}, {
			"file":	"main/spprintf.c",
			"line":	686,
			"primary_score":	1999979,
			"second_score":	150085
		}, {
			"file":	"main/spprintf.c",
			"line":	687,
			"primary_score":	1999979,
			"second_score":	150084
		}, {
			"file":	"main/spprintf.c",
			"line":	688,
			"primary_score":	1999979,
			"second_score":	150083
		}, {
			"file":	"main/spprintf.c",
			"line":	689,
			"primary_score":	1999979,
			"second_score":	150082
		}, {
			"file":	"main/spprintf.c",
			"line":	764,
			"primary_score":	1999979,
			"second_score":	150079
		}, {
			"file":	"main/spprintf.c",
			"line":	770,
			"primary_score":	1999979,
			"second_score":	150078
		}, {
			"file":	"main/spprintf.c",
			"line":	775,
			"primary_score":	1999956,
			"second_score":	150390
		}, {
			"file":	"main/streams/filter.c",
			"line":	37,
			"primary_score":	1999935,
			"second_score":	6095
		}, {
			"file":	"main/streams/filter.c",
			"line":	54,
			"primary_score":	1999935,
			"second_score":	62055
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	134,
			"primary_score":	1999935,
			"second_score":	708360
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	135,
			"primary_score":	1999935,
			"second_score":	708359
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	136,
			"primary_score":	1999935,
			"second_score":	708358
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	138,
			"primary_score":	1999935,
			"second_score":	708357
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	139,
			"primary_score":	1999935,
			"second_score":	708356
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	140,
			"primary_score":	1999935,
			"second_score":	708354
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	142,
			"primary_score":	1999935,
			"second_score":	708353
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	165,
			"primary_score":	1999935,
			"second_score":	708797
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	167,
			"primary_score":	1999935,
			"second_score":	708796
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	168,
			"primary_score":	1999935,
			"second_score":	708692
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	169,
			"primary_score":	1999935,
			"second_score":	708691
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	170,
			"primary_score":	1999935,
			"second_score":	708690
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	171,
			"primary_score":	1999935,
			"second_score":	708689
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	172,
			"primary_score":	1999935,
			"second_score":	708688
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	173,
			"primary_score":	1999935,
			"second_score":	708687
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	174,
			"primary_score":	1999935,
			"second_score":	708686
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	176,
			"primary_score":	1999935,
			"second_score":	708685
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	264,
			"primary_score":	1999935,
			"second_score":	708798
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	266,
			"primary_score":	1999935,
			"second_score":	708364
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	267,
			"primary_score":	1999935,
			"second_score":	708363
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	271,
			"primary_score":	1999935,
			"second_score":	708362
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	272,
			"primary_score":	1999935,
			"second_score":	708361
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	284,
			"primary_score":	1999935,
			"second_score":	708352
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	285,
			"primary_score":	1999935,
			"second_score":	708351
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	148280
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	291,
			"primary_score":	1999935,
			"second_score":	708350
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	371,
			"primary_score":	1999935,
			"second_score":	113996
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	372,
			"primary_score":	1999935,
			"second_score":	113995
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	374,
			"primary_score":	1999935,
			"second_score":	113994
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	377,
			"primary_score":	1999935,
			"second_score":	113993
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	392,
			"primary_score":	1999935,
			"second_score":	113992
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	393,
			"primary_score":	1999935,
			"second_score":	113991
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	394,
			"primary_score":	1999935,
			"second_score":	113990
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	404,
			"primary_score":	1999935,
			"second_score":	113989
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	405,
			"primary_score":	1999935,
			"second_score":	113988
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	413,
			"primary_score":	1999935,
			"second_score":	113987
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	425,
			"primary_score":	1999935,
			"second_score":	113986
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	427,
			"primary_score":	1999935,
			"second_score":	113967
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	432,
			"primary_score":	1999935,
			"second_score":	114006
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	434,
			"primary_score":	1999935,
			"second_score":	114005
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	441,
			"primary_score":	1999935,
			"second_score":	114004
		}, {
			"file":	"main/streams/plain_wrapper.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	114003
		}, {
			"file":	"main/streams/streams.c",
			"line":	104,
			"primary_score":	1999935,
			"second_score":	149226
		}, {
			"file":	"main/streams/streams.c",
			"line":	105,
			"primary_score":	1999935,
			"second_score":	149217
		}, {
			"file":	"main/streams/streams.c",
			"line":	196,
			"primary_score":	1999935,
			"second_score":	708226
		}, {
			"file":	"main/streams/streams.c",
			"line":	198,
			"primary_score":	1999935,
			"second_score":	708225
		}, {
			"file":	"main/streams/streams.c",
			"line":	200,
			"primary_score":	1999935,
			"second_score":	708224
		}, {
			"file":	"main/streams/streams.c",
			"line":	203,
			"primary_score":	1999935,
			"second_score":	708223
		}, {
			"file":	"main/streams/streams.c",
			"line":	206,
			"primary_score":	1999935,
			"second_score":	708222
		}, {
			"file":	"main/streams/streams.c",
			"line":	207,
			"primary_score":	1999935,
			"second_score":	708221
		}, {
			"file":	"main/streams/streams.c",
			"line":	238,
			"primary_score":	1999935,
			"second_score":	708684
		}, {
			"file":	"main/streams/streams.c",
			"line":	240,
			"primary_score":	1999935,
			"second_score":	708683
		}, {
			"file":	"main/streams/streams.c",
			"line":	242,
			"primary_score":	1999935,
			"second_score":	708579
		}, {
			"file":	"main/streams/streams.c",
			"line":	244,
			"primary_score":	1999935,
			"second_score":	708578
		}, {
			"file":	"main/streams/streams.c",
			"line":	245,
			"primary_score":	1999935,
			"second_score":	708577
		}, {
			"file":	"main/streams/streams.c",
			"line":	251,
			"primary_score":	1999935,
			"second_score":	708576
		}, {
			"file":	"main/streams/streams.c",
			"line":	252,
			"primary_score":	1999935,
			"second_score":	708575
		}, {
			"file":	"main/streams/streams.c",
			"line":	253,
			"primary_score":	1999935,
			"second_score":	708574
		}, {
			"file":	"main/streams/streams.c",
			"line":	254,
			"primary_score":	1999935,
			"second_score":	708573
		}, {
			"file":	"main/streams/streams.c",
			"line":	261,
			"primary_score":	1999935,
			"second_score":	708572
		}, {
			"file":	"main/streams/streams.c",
			"line":	265,
			"primary_score":	1999935,
			"second_score":	708571
		}, {
			"file":	"main/streams/streams.c",
			"line":	281,
			"primary_score":	1999935,
			"second_score":	708570
		}, {
			"file":	"main/streams/streams.c",
			"line":	282,
			"primary_score":	1999935,
			"second_score":	708385
		}, {
			"file":	"main/streams/streams.c",
			"line":	284,
			"primary_score":	1999935,
			"second_score":	708373
		}, {
			"file":	"main/streams/streams.c",
			"line":	285,
			"primary_score":	1999935,
			"second_score":	708372
		}, {
			"file":	"main/streams/streams.c",
			"line":	286,
			"primary_score":	1999935,
			"second_score":	708371
		}, {
			"file":	"main/streams/streams.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	708370
		}, {
			"file":	"main/streams/streams.c",
			"line":	288,
			"primary_score":	1999935,
			"second_score":	708369
		}, {
			"file":	"main/streams/streams.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	708368
		}, {
			"file":	"main/streams/streams.c",
			"line":	290,
			"primary_score":	1999935,
			"second_score":	708367
		}, {
			"file":	"main/streams/streams.c",
			"line":	291,
			"primary_score":	1999935,
			"second_score":	708366
		}, {
			"file":	"main/streams/streams.c",
			"line":	293,
			"primary_score":	1999935,
			"second_score":	708365
		}, {
			"file":	"main/streams/streams.c",
			"line":	333,
			"primary_score":	1999935,
			"second_score":	114021
		}, {
			"file":	"main/streams/streams.c",
			"line":	334,
			"primary_score":	1999935,
			"second_score":	114020
		}, {
			"file":	"main/streams/streams.c",
			"line":	335,
			"primary_score":	1999935,
			"second_score":	114019
		}, {
			"file":	"main/streams/streams.c",
			"line":	336,
			"primary_score":	1999935,
			"second_score":	114018
		}, {
			"file":	"main/streams/streams.c",
			"line":	337,
			"primary_score":	1999935,
			"second_score":	114017
		}, {
			"file":	"main/streams/streams.c",
			"line":	339,
			"primary_score":	1999935,
			"second_score":	114016
		}, {
			"file":	"main/streams/streams.c",
			"line":	352,
			"primary_score":	1999935,
			"second_score":	114015
		}, {
			"file":	"main/streams/streams.c",
			"line":	361,
			"primary_score":	1999935,
			"second_score":	114014
		}, {
			"file":	"main/streams/streams.c",
			"line":	365,
			"primary_score":	1999935,
			"second_score":	114013
		}, {
			"file":	"main/streams/streams.c",
			"line":	383,
			"primary_score":	1999935,
			"second_score":	114012
		}, {
			"file":	"main/streams/streams.c",
			"line":	402,
			"primary_score":	1999935,
			"second_score":	114011
		}, {
			"file":	"main/streams/streams.c",
			"line":	405,
			"primary_score":	1999935,
			"second_score":	114001
		}, {
			"file":	"main/streams/streams.c",
			"line":	410,
			"primary_score":	1999935,
			"second_score":	114000
		}, {
			"file":	"main/streams/streams.c",
			"line":	414,
			"primary_score":	1999935,
			"second_score":	113999
		}, {
			"file":	"main/streams/streams.c",
			"line":	415,
			"primary_score":	1999935,
			"second_score":	113998
		}, {
			"file":	"main/streams/streams.c",
			"line":	427,
			"primary_score":	1999935,
			"second_score":	113997
		}, {
			"file":	"main/streams/streams.c",
			"line":	428,
			"primary_score":	1999935,
			"second_score":	113966
		}, {
			"file":	"main/streams/streams.c",
			"line":	431,
			"primary_score":	1999935,
			"second_score":	113965
		}, {
			"file":	"main/streams/streams.c",
			"line":	438,
			"primary_score":	1999935,
			"second_score":	113964
		}, {
			"file":	"main/streams/streams.c",
			"line":	439,
			"primary_score":	1999935,
			"second_score":	113963
		}, {
			"file":	"main/streams/streams.c",
			"line":	442,
			"primary_score":	1999935,
			"second_score":	113962
		}, {
			"file":	"main/streams/streams.c",
			"line":	446,
			"primary_score":	1999935,
			"second_score":	113961
		}, {
			"file":	"main/streams/streams.c",
			"line":	451,
			"primary_score":	1999935,
			"second_score":	113960
		}, {
			"file":	"main/streams/streams.c",
			"line":	456,
			"primary_score":	1999935,
			"second_score":	113959
		}, {
			"file":	"main/streams/streams.c",
			"line":	461,
			"primary_score":	1999935,
			"second_score":	113958
		}, {
			"file":	"main/streams/streams.c",
			"line":	493,
			"primary_score":	1999935,
			"second_score":	113957
		}, {
			"file":	"main/streams/streams.c",
			"line":	494,
			"primary_score":	1999935,
			"second_score":	113956
		}, {
			"file":	"main/streams/streams.c",
			"line":	495,
			"primary_score":	1999935,
			"second_score":	113937
		}, {
			"file":	"main/streams/streams.c",
			"line":	498,
			"primary_score":	1999935,
			"second_score":	113936
		}, {
			"file":	"main/streams/streams.c",
			"line":	502,
			"primary_score":	1999935,
			"second_score":	113917
		}, {
			"file":	"main/streams/streams.c",
			"line":	506,
			"primary_score":	1999935,
			"second_score":	113916
		}, {
			"file":	"main/streams/streams.c",
			"line":	1118,
			"primary_score":	1999935,
			"second_score":	114010
		}, {
			"file":	"main/streams/streams.c",
			"line":	1120,
			"primary_score":	1999935,
			"second_score":	114009
		}, {
			"file":	"main/streams/streams.c",
			"line":	1124,
			"primary_score":	1999935,
			"second_score":	114008
		}, {
			"file":	"main/streams/streams.c",
			"line":	1125,
			"primary_score":	1999935,
			"second_score":	114007
		}, {
			"file":	"main/streams/streams.c",
			"line":	1128,
			"primary_score":	1999935,
			"second_score":	114002
		}, {
			"file":	"main/streams/streams.c",
			"line":	1502,
			"primary_score":	1999935,
			"second_score":	114023
		}, {
			"file":	"main/streams/streams.c",
			"line":	1504,
			"primary_score":	1999935,
			"second_score":	114022
		}, {
			"file":	"main/streams/streams.c",
			"line":	1515,
			"primary_score":	1999935,
			"second_score":	113375
		}, {
			"file":	"main/streams/streams.c",
			"line":	1521,
			"primary_score":	1999935,
			"second_score":	113374
		}, {
			"file":	"main/streams/streams.c",
			"line":	1557,
			"primary_score":	1999935,
			"second_score":	6120
		}, {
			"file":	"main/streams/streams.c",
			"line":	1558,
			"primary_score":	1999935,
			"second_score":	6096
		}, {
			"file":	"main/streams/streams.c",
			"line":	1559,
			"primary_score":	1999935,
			"second_score":	6086
		}, {
			"file":	"main/streams/streams.c",
			"line":	1560,
			"primary_score":	1999935,
			"second_score":	6056
		}, {
			"file":	"main/streams/streams.c",
			"line":	1596,
			"primary_score":	1999935,
			"second_score":	97654
		}, {
			"file":	"main/streams/streams.c",
			"line":	1637,
			"primary_score":	1999935,
			"second_score":	709012
		}, {
			"file":	"main/streams/streams.c",
			"line":	1638,
			"primary_score":	1999935,
			"second_score":	709011
		}, {
			"file":	"main/streams/streams.c",
			"line":	1639,
			"primary_score":	1999935,
			"second_score":	709010
		}, {
			"file":	"main/streams/streams.c",
			"line":	1640,
			"primary_score":	1999935,
			"second_score":	709009
		}, {
			"file":	"main/streams/streams.c",
			"line":	1642,
			"primary_score":	1999935,
			"second_score":	709008
		}, {
			"file":	"main/streams/streams.c",
			"line":	1643,
			"primary_score":	1999935,
			"second_score":	709007
		}, {
			"file":	"main/streams/streams.c",
			"line":	1646,
			"primary_score":	1999935,
			"second_score":	709006
		}, {
			"file":	"main/streams/streams.c",
			"line":	1650,
			"primary_score":	1999935,
			"second_score":	709005
		}, {
			"file":	"main/streams/streams.c",
			"line":	1651,
			"primary_score":	1999935,
			"second_score":	709002
		}, {
			"file":	"main/streams/streams.c",
			"line":	1654,
			"primary_score":	1999935,
			"second_score":	709001
		}, {
			"file":	"main/streams/streams.c",
			"line":	1655,
			"primary_score":	1999935,
			"second_score":	709000
		}, {
			"file":	"main/streams/streams.c",
			"line":	1663,
			"primary_score":	1999935,
			"second_score":	708999
		}, {
			"file":	"main/streams/streams.c",
			"line":	1664,
			"primary_score":	1999935,
			"second_score":	708998
		}, {
			"file":	"main/streams/streams.c",
			"line":	1665,
			"primary_score":	1999935,
			"second_score":	708888
		}, {
			"file":	"main/streams/streams.c",
			"line":	1681,
			"primary_score":	1999935,
			"second_score":	708864
		}, {
			"file":	"main/streams/streams.c",
			"line":	1684,
			"primary_score":	1999935,
			"second_score":	708845
		}, {
			"file":	"main/streams/streams.c",
			"line":	1746,
			"primary_score":	1999935,
			"second_score":	708844
		}, {
			"file":	"main/streams/streams.c",
			"line":	1764,
			"primary_score":	1999935,
			"second_score":	708843
		}, {
			"file":	"main/streams/streams.c",
			"line":	1896,
			"primary_score":	1999935,
			"second_score":	709023
		}, {
			"file":	"main/streams/streams.c",
			"line":	1897,
			"primary_score":	1999935,
			"second_score":	709022
		}, {
			"file":	"main/streams/streams.c",
			"line":	1898,
			"primary_score":	1999935,
			"second_score":	709021
		}, {
			"file":	"main/streams/streams.c",
			"line":	1899,
			"primary_score":	1999935,
			"second_score":	709020
		}, {
			"file":	"main/streams/streams.c",
			"line":	1900,
			"primary_score":	1999935,
			"second_score":	709019
		}, {
			"file":	"main/streams/streams.c",
			"line":	1901,
			"primary_score":	1999935,
			"second_score":	709018
		}, {
			"file":	"main/streams/streams.c",
			"line":	1903,
			"primary_score":	1999935,
			"second_score":	709017
		}, {
			"file":	"main/streams/streams.c",
			"line":	1907,
			"primary_score":	1999935,
			"second_score":	709016
		}, {
			"file":	"main/streams/streams.c",
			"line":	1912,
			"primary_score":	1999935,
			"second_score":	709015
		}, {
			"file":	"main/streams/streams.c",
			"line":	1922,
			"primary_score":	1999935,
			"second_score":	709014
		}, {
			"file":	"main/streams/streams.c",
			"line":	1924,
			"primary_score":	1999935,
			"second_score":	709013
		}, {
			"file":	"main/streams/streams.c",
			"line":	1925,
			"primary_score":	1999935,
			"second_score":	708842
		}, {
			"file":	"main/streams/streams.c",
			"line":	1933,
			"primary_score":	1999935,
			"second_score":	708841
		}, {
			"file":	"main/streams/streams.c",
			"line":	1934,
			"primary_score":	1999935,
			"second_score":	708840
		}, {
			"file":	"main/streams/streams.c",
			"line":	1938,
			"primary_score":	1999935,
			"second_score":	708839
		}, {
			"file":	"main/streams/streams.c",
			"line":	1945,
			"primary_score":	1999935,
			"second_score":	708348
		}, {
			"file":	"main/streams/streams.c",
			"line":	1952,
			"primary_score":	1999935,
			"second_score":	708347
		}, {
			"file":	"main/streams/streams.c",
			"line":	1953,
			"primary_score":	1999935,
			"second_score":	708346
		}, {
			"file":	"main/streams/streams.c",
			"line":	1957,
			"primary_score":	1999935,
			"second_score":	708345
		}, {
			"file":	"main/streams/streams.c",
			"line":	1958,
			"primary_score":	1999935,
			"second_score":	708344
		}, {
			"file":	"main/streams/streams.c",
			"line":	1962,
			"primary_score":	1999935,
			"second_score":	708343
		}, {
			"file":	"main/streams/streams.c",
			"line":	1965,
			"primary_score":	1999935,
			"second_score":	708342
		}, {
			"file":	"main/streams/streams.c",
			"line":	1966,
			"primary_score":	1999935,
			"second_score":	708231
		}, {
			"file":	"main/streams/streams.c",
			"line":	1973,
			"primary_score":	1999935,
			"second_score":	708230
		}, {
			"file":	"main/streams/streams.c",
			"line":	2008,
			"primary_score":	1999935,
			"second_score":	708229
		}, {
			"file":	"main/streams/streams.c",
			"line":	2017,
			"primary_score":	1999935,
			"second_score":	708228
		}, {
			"file":	"main/streams/streams.c",
			"line":	2024,
			"primary_score":	1999935,
			"second_score":	708227
		}, {
			"file":	"main/streams/streams.c",
			"line":	2030,
			"primary_score":	1999935,
			"second_score":	708220
		}, {
			"file":	"main/streams/streams.c",
			"line":	2033,
			"primary_score":	1999935,
			"second_score":	708219
		}, {
			"file":	"main/streams/transports.c",
			"line":	29,
			"primary_score":	1999935,
			"second_score":	6085
		}, {
			"file":	"main/strlcpy.c",
			"line":	71,
			"primary_score":	1999935,
			"second_score":	708384
		}, {
			"file":	"main/strlcpy.c",
			"line":	72,
			"primary_score":	1999935,
			"second_score":	708383
		}, {
			"file":	"main/strlcpy.c",
			"line":	73,
			"primary_score":	1999935,
			"second_score":	708382
		}, {
			"file":	"main/strlcpy.c",
			"line":	76,
			"primary_score":	1999935,
			"second_score":	708381
		}, {
			"file":	"main/strlcpy.c",
			"line":	77,
			"primary_score":	1999935,
			"second_score":	708380
		}, {
			"file":	"main/strlcpy.c",
			"line":	78,
			"primary_score":	1999935,
			"second_score":	708377
		}, {
			"file":	"main/strlcpy.c",
			"line":	79,
			"primary_score":	1999935,
			"second_score":	708376
		}, {
			"file":	"main/strlcpy.c",
			"line":	84,
			"primary_score":	1999935,
			"second_score":	708375
		}, {
			"file":	"main/strlcpy.c",
			"line":	91,
			"primary_score":	1999935,
			"second_score":	708374
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	255,
			"primary_score":	1999935,
			"second_score":	149704
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	260,
			"primary_score":	1999935,
			"second_score":	149703
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	269,
			"primary_score":	1999935,
			"second_score":	149702
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	270,
			"primary_score":	1999935,
			"second_score":	149701
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	273,
			"primary_score":	1999935,
			"second_score":	149700
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	277,
			"primary_score":	1999935,
			"second_score":	149699
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	287,
			"primary_score":	1999935,
			"second_score":	149711
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	288,
			"primary_score":	1999935,
			"second_score":	149710
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	289,
			"primary_score":	1999935,
			"second_score":	149709
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	291,
			"primary_score":	1999935,
			"second_score":	149708
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	295,
			"primary_score":	1999935,
			"second_score":	149707
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	303,
			"primary_score":	1999935,
			"second_score":	149706
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	305,
			"primary_score":	1999935,
			"second_score":	149705
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	306,
			"primary_score":	1999935,
			"second_score":	149698
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	312,
			"primary_score":	1999935,
			"second_score":	149697
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	313,
			"primary_score":	1999935,
			"second_score":	149696
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	316,
			"primary_score":	1999935,
			"second_score":	149695
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	325,
			"primary_score":	1999935,
			"second_score":	103521
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	351,
			"primary_score":	1999935,
			"second_score":	715754
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	355,
			"primary_score":	1999935,
			"second_score":	714830
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	356,
			"primary_score":	1999935,
			"second_score":	714829
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	359,
			"primary_score":	1999935,
			"second_score":	713948
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	363,
			"primary_score":	1999935,
			"second_score":	713238
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	364,
			"primary_score":	1999935,
			"second_score":	713237
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	378,
			"primary_score":	1999935,
			"second_score":	113415
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	379,
			"primary_score":	1999935,
			"second_score":	113414
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	383,
			"primary_score":	1999935,
			"second_score":	113413
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	395,
			"primary_score":	1999935,
			"second_score":	689856
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	403,
			"primary_score":	1999935,
			"second_score":	689830
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	550,
			"primary_score":	1999935,
			"second_score":	711085
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	551,
			"primary_score":	1999935,
			"second_score":	711084
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	552,
			"primary_score":	1999935,
			"second_score":	711083
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	553,
			"primary_score":	1999935,
			"second_score":	711082
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	555,
			"primary_score":	1999935,
			"second_score":	711081
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	556,
			"primary_score":	1999935,
			"second_score":	710971
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	557,
			"primary_score":	1999935,
			"second_score":	710861
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	559,
			"primary_score":	1999935,
			"second_score":	710751
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	560,
			"primary_score":	1999935,
			"second_score":	709829
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	561,
			"primary_score":	1999935,
			"second_score":	709024
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	563,
			"primary_score":	1999935,
			"second_score":	708218
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	579,
			"primary_score":	1999935,
			"second_score":	708217
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	581,
			"primary_score":	1999935,
			"second_score":	708216
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	582,
			"primary_score":	1999935,
			"second_score":	708210
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	583,
			"primary_score":	1999935,
			"second_score":	708204
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	585,
			"primary_score":	1999935,
			"second_score":	708198
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	586,
			"primary_score":	1999935,
			"second_score":	708197
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	587,
			"primary_score":	1999935,
			"second_score":	708196
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	588,
			"primary_score":	1999935,
			"second_score":	708188
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	589,
			"primary_score":	1999935,
			"second_score":	708187
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	590,
			"primary_score":	1999935,
			"second_score":	708186
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	592,
			"primary_score":	1999935,
			"second_score":	708109
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	593,
			"primary_score":	1999935,
			"second_score":	708108
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	594,
			"primary_score":	1999935,
			"second_score":	708107
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	595,
			"primary_score":	1999935,
			"second_score":	708099
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	596,
			"primary_score":	1999935,
			"second_score":	708098
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	597,
			"primary_score":	1999935,
			"second_score":	708097
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	599,
			"primary_score":	1999935,
			"second_score":	708022
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	600,
			"primary_score":	1999935,
			"second_score":	708021
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	601,
			"primary_score":	1999935,
			"second_score":	708020
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	602,
			"primary_score":	1999935,
			"second_score":	708012
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	603,
			"primary_score":	1999935,
			"second_score":	708011
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	604,
			"primary_score":	1999935,
			"second_score":	708010
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	606,
			"primary_score":	1999935,
			"second_score":	707935
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	607,
			"primary_score":	1999935,
			"second_score":	707913
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	608,
			"primary_score":	1999935,
			"second_score":	707891
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	950,
			"primary_score":	1999935,
			"second_score":	148233
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	954,
			"primary_score":	1999935,
			"second_score":	148232
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	955,
			"primary_score":	1999935,
			"second_score":	148231
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	956,
			"primary_score":	1999935,
			"second_score":	148230
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1075,
			"primary_score":	1999935,
			"second_score":	174206
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1077,
			"primary_score":	1999935,
			"second_score":	174200
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1078,
			"primary_score":	1999935,
			"second_score":	174199
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1090,
			"primary_score":	1999935,
			"second_score":	148219
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1091,
			"primary_score":	1999935,
			"second_score":	148218
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1126,
			"primary_score":	1999935,
			"second_score":	711094
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1127,
			"primary_score":	1999935,
			"second_score":	711093
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1129,
			"primary_score":	1999935,
			"second_score":	711092
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1130,
			"primary_score":	1999935,
			"second_score":	711086
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1133,
			"primary_score":	1999935,
			"second_score":	707869
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1136,
			"primary_score":	1999935,
			"second_score":	707868
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1137,
			"primary_score":	1999935,
			"second_score":	149452
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1140,
			"primary_score":	1999935,
			"second_score":	149451
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1177,
			"primary_score":	1999935,
			"second_score":	121838
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1180,
			"primary_score":	1999935,
			"second_score":	118806
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1319,
			"primary_score":	1999935,
			"second_score":	149450
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1321,
			"primary_score":	1999935,
			"second_score":	149448
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1323,
			"primary_score":	1999935,
			"second_score":	149447
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1325,
			"primary_score":	1999935,
			"second_score":	103534
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1326,
			"primary_score":	1999935,
			"second_score":	103533
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1328,
			"primary_score":	1999935,
			"second_score":	103532
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1332,
			"primary_score":	1999935,
			"second_score":	103531
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1333,
			"primary_score":	1999935,
			"second_score":	103530
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1336,
			"primary_score":	1999935,
			"second_score":	103529
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1337,
			"primary_score":	1999935,
			"second_score":	103528
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1339,
			"primary_score":	1999935,
			"second_score":	3136
		}, {
			"file":	"sapi/cli/php_cli.c",
			"line":	1344,
			"primary_score":	1999935,
			"second_score":	1
		}],
	"mutation_info":	[{
			"file":	"main/spprintf.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"main/spprintf.c",
			"lines":	[{
					"line":	276,
					"switches":	[{
							"switch":	2,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	277,
							"begin_column":	4,
							"end_line":	277,
							"end_column":	4,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L277\", 23, &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(fmt), sizeof (fmt), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(adjust_precision), sizeof (adjust_precision), &(alternate_form), sizeof (alternate_form), &(precision), sizeof (precision), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    break;\n", "if (__is_neg(\"\", \"L277\", 23, &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(fmt), sizeof (fmt), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(adjust_precision), sizeof (adjust_precision), &(alternate_form), sizeof (alternate_form), &(precision), sizeof (precision), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L277\", 23, &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(fmt), sizeof (fmt), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(adjust_precision), sizeof (adjust_precision), &(alternate_form), sizeof (alternate_form), &(precision), sizeof (precision), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L277\", 23, &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(fmt), sizeof (fmt), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(adjust_precision), sizeof (adjust_precision), &(alternate_form), sizeof (alternate_form), &(precision), sizeof (precision), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.78080744451591]
								}, {
									"case":	2,
									"scores":	[-6.78080744451591]
								}, {
									"case":	3,
									"scores":	[-6.78080744451591]
								}, {
									"case":	4,
									"scores":	[-6.78080744451591]
								}, {
									"case":	5,
									"scores":	[-6.78080744451591]
								}, {
									"case":	6,
									"scores":	[-6.78080744451591]
								}, {
									"case":	7,
									"scores":	[-6.78080744451591]
								}, {
									"case":	8,
									"scores":	[-6.78080744451591]
								}, {
									"case":	9,
									"scores":	[-6.78080744451591]
								}, {
									"case":	10,
									"scores":	[-6.78080744451591]
								}, {
									"case":	11,
									"scores":	[-6.78080744451591]
								}, {
									"case":	12,
									"scores":	[-6.78080744451591]
								}, {
									"case":	13,
									"scores":	[-6.78080744451591]
								}, {
									"case":	14,
									"scores":	[-6.78080744451591]
								}, {
									"case":	15,
									"scores":	[-6.78080744451591]
								}, {
									"case":	16,
									"scores":	[-6.78080744451591]
								}, {
									"case":	17,
									"scores":	[-6.78080744451591]
								}, {
									"case":	18,
									"scores":	[-6.78080744451591]
								}, {
									"case":	19,
									"scores":	[-6.78080744451591]
								}, {
									"case":	20,
									"scores":	[-6.78080744451591]
								}, {
									"case":	21,
									"scores":	[-6.78080744451591]
								}, {
									"case":	22,
									"scores":	[-6.78080744451591]
								}, {
									"case":	23,
									"scores":	[-6.78080744451591]
								}, {
									"case":	24,
									"scores":	[-6.78080744451591]
								}, {
									"case":	25,
									"scores":	[-6.78080744451591]
								}, {
									"case":	26,
									"scores":	[-6.78080744451591]
								}, {
									"case":	27,
									"scores":	[-6.78080744451591]
								}, {
									"case":	28,
									"scores":	[-6.78080744451591]
								}, {
									"case":	29,
									"scores":	[-6.78080744451591]
								}, {
									"case":	30,
									"scores":	[-6.78080744451591]
								}, {
									"case":	31,
									"scores":	[-6.78080744451591]
								}, {
									"case":	32,
									"scores":	[-6.78080744451591]
								}, {
									"case":	33,
									"scores":	[-6.78080744451591]
								}, {
									"case":	34,
									"scores":	[-6.78080744451591]
								}, {
									"case":	35,
									"scores":	[-6.78080744451591]
								}, {
									"case":	36,
									"scores":	[-6.78080744451591]
								}, {
									"case":	37,
									"scores":	[-6.78080744451591]
								}, {
									"case":	38,
									"scores":	[-6.78080744451591]
								}, {
									"case":	39,
									"scores":	[-6.78080744451591]
								}, {
									"case":	40,
									"scores":	[-6.78080744451591]
								}, {
									"case":	41,
									"scores":	[-6.78080744451591]
								}, {
									"case":	42,
									"scores":	[-6.78080744451591]
								}, {
									"case":	43,
									"scores":	[-6.78080744451591]
								}, {
									"case":	44,
									"scores":	[-6.78080744451591]
								}, {
									"case":	45,
									"scores":	[-6.78080744451591]
								}, {
									"case":	46,
									"scores":	[-6.78080744451591]
								}, {
									"case":	47,
									"scores":	[-6.78080744451591]
								}, {
									"case":	48,
									"scores":	[-6.78080744451591]
								}, {
									"case":	49,
									"scores":	[-6.78080744451591]
								}, {
									"case":	50,
									"scores":	[-6.78080744451591]
								}, {
									"case":	51,
									"scores":	[-6.78080744451591]
								}, {
									"case":	52,
									"scores":	[-6.78080744451591]
								}, {
									"case":	53,
									"scores":	[-6.78080744451591]
								}, {
									"case":	54,
									"scores":	[-6.78080744451591]
								}, {
									"case":	55,
									"scores":	[-6.78080744451591]
								}, {
									"case":	56,
									"scores":	[-6.78080744451591]
								}, {
									"case":	57,
									"scores":	[-6.78080744451591]
								}, {
									"case":	58,
									"scores":	[-6.78080744451591]
								}, {
									"case":	59,
									"scores":	[-6.78080744451591]
								}, {
									"case":	60,
									"scores":	[-6.78080744451591]
								}, {
									"case":	61,
									"scores":	[-6.78080744451591]
								}, {
									"case":	62,
									"scores":	[-6.78080744451591]
								}, {
									"case":	63,
									"scores":	[-6.78080744451591]
								}, {
									"case":	64,
									"scores":	[-6.78080744451591]
								}, {
									"case":	65,
									"scores":	[-6.78080744451591]
								}, {
									"case":	66,
									"scores":	[-6.78080744451591]
								}, {
									"case":	67,
									"scores":	[-6.78080744451591]
								}, {
									"case":	68,
									"scores":	[-6.78080744451591]
								}, {
									"case":	69,
									"scores":	[-6.78080744451591]
								}, {
									"case":	70,
									"scores":	[-6.78080744451591]
								}, {
									"case":	71,
									"scores":	[-6.78080744451591]
								}, {
									"case":	72,
									"scores":	[-6.78080744451591]
								}, {
									"case":	73,
									"scores":	[-6.78080744451591]
								}, {
									"case":	74,
									"scores":	[-6.78080744451591]
								}, {
									"case":	75,
									"scores":	[-6.78080744451591]
								}, {
									"case":	76,
									"scores":	[-6.78080744451591]
								}, {
									"case":	77,
									"scores":	[-6.78080744451591]
								}, {
									"case":	78,
									"scores":	[-6.78080744451591]
								}, {
									"case":	79,
									"scores":	[-6.78080744451591]
								}, {
									"case":	80,
									"scores":	[-6.78080744451591]
								}, {
									"case":	81,
									"scores":	[-6.78080744451591]
								}, {
									"case":	82,
									"scores":	[-6.78080744451591]
								}, {
									"case":	83,
									"scores":	[-6.78080744451591]
								}, {
									"case":	84,
									"scores":	[-6.78080744451591]
								}, {
									"case":	85,
									"scores":	[-6.78080744451591]
								}, {
									"case":	86,
									"scores":	[-6.78080744451591]
								}, {
									"case":	87,
									"scores":	[-6.78080744451591]
								}, {
									"case":	88,
									"scores":	[-6.78080744451591]
								}, {
									"case":	89,
									"scores":	[-6.78080744451591]
								}, {
									"case":	90,
									"scores":	[-6.78080744451591]
								}, {
									"case":	91,
									"scores":	[-6.78080744451591]
								}, {
									"case":	92,
									"scores":	[-6.78080744451591]
								}, {
									"case":	93,
									"scores":	[-6.78080744451591]
								}, {
									"case":	94,
									"scores":	[-6.78080744451591]
								}, {
									"case":	95,
									"scores":	[-6.78080744451591]
								}, {
									"case":	96,
									"scores":	[-6.78080744451591]
								}, {
									"case":	97,
									"scores":	[-6.78080744451591]
								}, {
									"case":	98,
									"scores":	[-6.78080744451591]
								}, {
									"case":	99,
									"scores":	[-6.78080744451591]
								}, {
									"case":	100,
									"scores":	[-6.78080744451591]
								}, {
									"case":	101,
									"scores":	[-6.78080744451591]
								}, {
									"case":	102,
									"scores":	[-6.78080744451591]
								}, {
									"case":	103,
									"scores":	[-6.78080744451591]
								}, {
									"case":	104,
									"scores":	[-6.78080744451591]
								}, {
									"case":	105,
									"scores":	[-6.78080744451591]
								}, {
									"case":	106,
									"scores":	[-6.78080744451591]
								}, {
									"case":	107,
									"scores":	[-6.78080744451591]
								}, {
									"case":	108,
									"scores":	[-6.78080744451591]
								}, {
									"case":	109,
									"scores":	[-6.78080744451591]
								}, {
									"case":	110,
									"scores":	[-6.78080744451591]
								}, {
									"case":	111,
									"scores":	[-6.78080744451591]
								}, {
									"case":	112,
									"scores":	[-6.78080744451591]
								}, {
									"case":	113,
									"scores":	[-6.78080744451591]
								}, {
									"case":	114,
									"scores":	[-6.78080744451591]
								}, {
									"case":	115,
									"scores":	[-6.78080744451591]
								}, {
									"case":	116,
									"scores":	[-6.78080744451591]
								}, {
									"case":	117,
									"scores":	[-6.78080744451591]
								}, {
									"case":	118,
									"scores":	[-6.78080744451591]
								}, {
									"case":	119,
									"scores":	[-6.78080744451591]
								}, {
									"case":	120,
									"scores":	[-6.78080744451591]
								}, {
									"case":	121,
									"scores":	[-6.78080744451591]
								}, {
									"case":	122,
									"scores":	[-6.78080744451591]
								}, {
									"case":	123,
									"scores":	[-6.78080744451591]
								}, {
									"case":	124,
									"scores":	[-6.78080744451591]
								}, {
									"case":	125,
									"scores":	[-6.78080744451591]
								}, {
									"case":	126,
									"scores":	[-6.78080744451591]
								}, {
									"case":	127,
									"scores":	[-6.78080744451591]
								}, {
									"case":	128,
									"scores":	[-6.78080744451591]
								}, {
									"case":	129,
									"scores":	[-6.78080744451591]
								}, {
									"case":	130,
									"scores":	[-6.78080744451591]
								}, {
									"case":	131,
									"scores":	[-6.78080744451591]
								}, {
									"case":	132,
									"scores":	[-6.78080744451591]
								}, {
									"case":	133,
									"scores":	[-6.78080744451591]
								}, {
									"case":	134,
									"scores":	[-6.78080744451591]
								}, {
									"case":	135,
									"scores":	[-6.78080744451591]
								}, {
									"case":	136,
									"scores":	[-6.78080744451591]
								}, {
									"case":	137,
									"scores":	[-6.78080744451591]
								}, {
									"case":	138,
									"scores":	[-6.78080744451591]
								}, {
									"case":	139,
									"scores":	[-6.78080744451591]
								}, {
									"case":	140,
									"scores":	[-6.78080744451591]
								}, {
									"case":	141,
									"scores":	[-6.78080744451591]
								}, {
									"case":	142,
									"scores":	[-6.78080744451591]
								}, {
									"case":	143,
									"scores":	[-6.78080744451591]
								}, {
									"case":	144,
									"scores":	[-6.78080744451591]
								}, {
									"case":	145,
									"scores":	[-6.78080744451591]
								}, {
									"case":	146,
									"scores":	[-6.78080744451591]
								}, {
									"case":	147,
									"scores":	[-6.78080744451591]
								}, {
									"case":	148,
									"scores":	[-6.78080744451591]
								}, {
									"case":	149,
									"scores":	[-6.78080744451591]
								}, {
									"case":	150,
									"scores":	[-6.78080744451591]
								}, {
									"case":	151,
									"scores":	[-6.78080744451591]
								}, {
									"case":	152,
									"scores":	[-6.78080744451591]
								}, {
									"case":	153,
									"scores":	[-6.78080744451591]
								}, {
									"case":	154,
									"scores":	[-6.78080744451591]
								}, {
									"case":	155,
									"scores":	[-6.78080744451591]
								}, {
									"case":	156,
									"scores":	[-6.78080744451591]
								}, {
									"case":	157,
									"scores":	[-6.78080744451591]
								}, {
									"case":	158,
									"scores":	[-6.78080744451591]
								}, {
									"case":	159,
									"scores":	[-6.78080744451591]
								}, {
									"case":	160,
									"scores":	[-6.78080744451591]
								}, {
									"case":	161,
									"scores":	[-6.78080744451591]
								}, {
									"case":	162,
									"scores":	[-6.78080744451591]
								}, {
									"case":	163,
									"scores":	[-6.78080744451591]
								}, {
									"case":	164,
									"scores":	[-6.78080744451591]
								}, {
									"case":	165,
									"scores":	[-6.78080744451591]
								}, {
									"case":	166,
									"scores":	[-6.78080744451591]
								}, {
									"case":	167,
									"scores":	[-6.78080744451591]
								}, {
									"case":	168,
									"scores":	[-6.78080744451591]
								}, {
									"case":	169,
									"scores":	[-6.78080744451591]
								}, {
									"case":	170,
									"scores":	[-6.78080744451591]
								}, {
									"case":	171,
									"scores":	[-6.78080744451591]
								}, {
									"case":	172,
									"scores":	[-6.78080744451591]
								}, {
									"case":	173,
									"scores":	[-6.78080744451591]
								}, {
									"case":	174,
									"scores":	[-6.78080744451591]
								}, {
									"case":	175,
									"scores":	[-6.78080744451591]
								}, {
									"case":	176,
									"scores":	[-6.78080744451591]
								}, {
									"case":	177,
									"scores":	[-6.78080744451591]
								}, {
									"case":	178,
									"scores":	[-6.78080744451591]
								}, {
									"case":	179,
									"scores":	[-6.78080744451591]
								}, {
									"case":	180,
									"scores":	[-6.78080744451591]
								}, {
									"case":	181,
									"scores":	[-6.78080744451591]
								}, {
									"case":	182,
									"scores":	[-6.78080744451591]
								}, {
									"case":	183,
									"scores":	[-6.78080744451591]
								}, {
									"case":	184,
									"scores":	[-6.78080744451591]
								}, {
									"case":	185,
									"scores":	[-6.78080744451591]
								}, {
									"case":	186,
									"scores":	[-6.78080744451591]
								}, {
									"case":	187,
									"scores":	[-6.78080744451591]
								}, {
									"case":	188,
									"scores":	[-6.78080744451591]
								}, {
									"case":	189,
									"scores":	[-6.78080744451591]
								}, {
									"case":	190,
									"scores":	[-6.78080744451591]
								}, {
									"case":	191,
									"scores":	[-6.78080744451591]
								}, {
									"case":	192,
									"scores":	[-6.78080744451591]
								}, {
									"case":	193,
									"scores":	[-6.78080744451591]
								}, {
									"case":	194,
									"scores":	[-6.78080744451591]
								}, {
									"case":	195,
									"scores":	[-6.78080744451591]
								}, {
									"case":	196,
									"scores":	[-6.78080744451591]
								}, {
									"case":	197,
									"scores":	[-6.78080744451591]
								}, {
									"case":	198,
									"scores":	[-6.78080744451591]
								}, {
									"case":	199,
									"scores":	[-6.78080744451591]
								}, {
									"case":	200,
									"scores":	[-6.78080744451591]
								}, {
									"case":	201,
									"scores":	[-6.78080744451591]
								}, {
									"case":	202,
									"scores":	[-6.78080744451591]
								}, {
									"case":	203,
									"scores":	[-6.78080744451591]
								}, {
									"case":	204,
									"scores":	[-6.78080744451591]
								}, {
									"case":	205,
									"scores":	[-6.78080744451591]
								}, {
									"case":	206,
									"scores":	[-6.78080744451591]
								}, {
									"case":	207,
									"scores":	[-6.78080744451591]
								}, {
									"case":	208,
									"scores":	[-6.78080744451591]
								}, {
									"case":	209,
									"scores":	[-6.78080744451591]
								}, {
									"case":	210,
									"scores":	[-6.78080744451591]
								}, {
									"case":	211,
									"scores":	[-6.78080744451591]
								}, {
									"case":	212,
									"scores":	[-6.78080744451591]
								}, {
									"case":	213,
									"scores":	[-6.78080744451591]
								}, {
									"case":	214,
									"scores":	[-6.78080744451591]
								}, {
									"case":	215,
									"scores":	[-6.78080744451591]
								}, {
									"case":	216,
									"scores":	[-6.78080744451591]
								}, {
									"case":	217,
									"scores":	[-6.78080744451591]
								}, {
									"case":	218,
									"scores":	[-6.78080744451591]
								}, {
									"case":	219,
									"scores":	[-6.78080744451591]
								}, {
									"case":	220,
									"scores":	[-6.78080744451591]
								}, {
									"case":	221,
									"scores":	[-6.78080744451591]
								}, {
									"case":	222,
									"scores":	[-6.78080744451591]
								}, {
									"case":	223,
									"scores":	[-6.78080744451591]
								}, {
									"case":	224,
									"scores":	[-6.78080744451591]
								}, {
									"case":	225,
									"scores":	[-6.78080744451591]
								}, {
									"case":	226,
									"scores":	[-6.78080744451591]
								}, {
									"case":	227,
									"scores":	[-6.78080744451591]
								}, {
									"case":	228,
									"scores":	[-6.78080744451591]
								}, {
									"case":	229,
									"scores":	[-6.78080744451591]
								}, {
									"case":	230,
									"scores":	[-6.78080744451591]
								}, {
									"case":	231,
									"scores":	[-6.78080744451591]
								}, {
									"case":	232,
									"scores":	[-6.78080744451591]
								}, {
									"case":	233,
									"scores":	[-6.78080744451591]
								}, {
									"case":	234,
									"scores":	[-6.78080744451591]
								}, {
									"case":	235,
									"scores":	[-6.78080744451591]
								}, {
									"case":	236,
									"scores":	[-6.78080744451591]
								}, {
									"case":	237,
									"scores":	[-6.78080744451591]
								}, {
									"case":	238,
									"scores":	[-6.78080744451591]
								}, {
									"case":	239,
									"scores":	[-6.78080744451591]
								}, {
									"case":	240,
									"scores":	[-6.78080744451591]
								}, {
									"case":	241,
									"scores":	[-6.78080744451591]
								}, {
									"case":	242,
									"scores":	[-6.78080744451591]
								}, {
									"case":	243,
									"scores":	[-6.78080744451591]
								}, {
									"case":	244,
									"scores":	[-6.78080744451591]
								}, {
									"case":	245,
									"scores":	[-6.78080744451591]
								}, {
									"case":	246,
									"scores":	[-6.78080744451591]
								}, {
									"case":	247,
									"scores":	[-6.78080744451591]
								}, {
									"case":	248,
									"scores":	[-6.78080744451591]
								}, {
									"case":	249,
									"scores":	[-6.78080744451591]
								}, {
									"case":	250,
									"scores":	[-6.78080744451591]
								}, {
									"case":	251,
									"scores":	[-6.78080744451591]
								}, {
									"case":	252,
									"scores":	[-6.78080744451591]
								}, {
									"case":	253,
									"scores":	[-6.78080744451591]
								}, {
									"case":	254,
									"scores":	[-6.78080744451591]
								}, {
									"case":	255,
									"scores":	[-6.78080744451591]
								}, {
									"case":	256,
									"scores":	[-6.78080744451591]
								}, {
									"case":	257,
									"scores":	[-6.78080744451591]
								}, {
									"case":	258,
									"scores":	[-6.78080744451591]
								}, {
									"case":	259,
									"scores":	[-6.78080744451591]
								}, {
									"case":	260,
									"scores":	[-6.78080744451591]
								}, {
									"case":	261,
									"scores":	[-6.78080744451591]
								}, {
									"case":	262,
									"scores":	[-6.78080744451591]
								}, {
									"case":	263,
									"scores":	[-6.78080744451591]
								}, {
									"case":	264,
									"scores":	[-6.78080744451591]
								}, {
									"case":	265,
									"scores":	[-6.78080744451591]
								}, {
									"case":	266,
									"scores":	[-6.78080744451591]
								}, {
									"case":	267,
									"scores":	[-6.78080744451591]
								}, {
									"case":	268,
									"scores":	[-6.78080744451591]
								}, {
									"case":	269,
									"scores":	[-6.78080744451591]
								}, {
									"case":	270,
									"scores":	[-6.78080744451591]
								}, {
									"case":	271,
									"scores":	[-6.78080744451591]
								}, {
									"case":	272,
									"scores":	[-6.78080744451591]
								}, {
									"case":	273,
									"scores":	[-6.78080744451591]
								}, {
									"case":	274,
									"scores":	[-6.78080744451591]
								}, {
									"case":	275,
									"scores":	[-6.78080744451591]
								}, {
									"case":	276,
									"scores":	[-6.78080744451591]
								}, {
									"case":	277,
									"scores":	[-6.78080744451591]
								}, {
									"case":	278,
									"scores":	[-6.78080744451591]
								}, {
									"case":	279,
									"scores":	[-6.78080744451591]
								}, {
									"case":	280,
									"scores":	[-6.78080744451591]
								}, {
									"case":	281,
									"scores":	[-6.78080744451591]
								}, {
									"case":	282,
									"scores":	[-6.78080744451591]
								}, {
									"case":	283,
									"scores":	[-6.78080744451591]
								}, {
									"case":	284,
									"scores":	[-6.78080744451591]
								}, {
									"case":	285,
									"scores":	[-6.78080744451591]
								}, {
									"case":	286,
									"scores":	[-6.78080744451591]
								}, {
									"case":	287,
									"scores":	[-6.78080744451591]
								}, {
									"case":	288,
									"scores":	[-6.78080744451591]
								}, {
									"case":	289,
									"scores":	[-6.78080744451591]
								}, {
									"case":	290,
									"scores":	[-6.78080744451591]
								}, {
									"case":	291,
									"scores":	[-6.78080744451591]
								}, {
									"case":	292,
									"scores":	[-6.78080744451591]
								}, {
									"case":	293,
									"scores":	[-6.78080744451591]
								}, {
									"case":	294,
									"scores":	[-6.78080744451591]
								}, {
									"case":	295,
									"scores":	[-6.78080744451591]
								}, {
									"case":	296,
									"scores":	[-6.78080744451591]
								}, {
									"case":	297,
									"scores":	[-6.78080744451591]
								}, {
									"case":	298,
									"scores":	[-6.78080744451591]
								}, {
									"case":	299,
									"scores":	[-6.78080744451591]
								}, {
									"case":	300,
									"scores":	[-6.78080744451591]
								}, {
									"case":	301,
									"scores":	[-6.78080744451591]
								}, {
									"case":	302,
									"scores":	[-6.78080744451591]
								}, {
									"case":	303,
									"scores":	[-6.78080744451591]
								}, {
									"case":	304,
									"scores":	[-6.78080744451591]
								}, {
									"case":	305,
									"scores":	[-6.78080744451591]
								}, {
									"case":	306,
									"scores":	[-6.78080744451591]
								}, {
									"case":	307,
									"scores":	[-6.78080744451591]
								}, {
									"case":	308,
									"scores":	[-6.78080744451591]
								}, {
									"case":	309,
									"scores":	[-6.78080744451591]
								}, {
									"case":	310,
									"scores":	[-6.78080744451591]
								}, {
									"case":	311,
									"scores":	[-6.78080744451591]
								}, {
									"case":	312,
									"scores":	[-6.78080744451591]
								}, {
									"case":	313,
									"scores":	[-6.78080744451591]
								}, {
									"case":	314,
									"scores":	[-6.78080744451591]
								}, {
									"case":	315,
									"scores":	[-6.78080744451591]
								}, {
									"case":	316,
									"scores":	[-6.78080744451591]
								}, {
									"case":	317,
									"scores":	[-6.78080744451591]
								}, {
									"case":	318,
									"scores":	[-6.78080744451591]
								}, {
									"case":	319,
									"scores":	[-6.78080744451591]
								}, {
									"case":	320,
									"scores":	[-6.78080744451591]
								}, {
									"case":	321,
									"scores":	[-6.78080744451591]
								}, {
									"case":	322,
									"scores":	[-6.78080744451591]
								}, {
									"case":	323,
									"scores":	[-6.78080744451591]
								}, {
									"case":	324,
									"scores":	[-6.78080744451591]
								}, {
									"case":	325,
									"scores":	[-6.78080744451591]
								}, {
									"case":	326,
									"scores":	[-6.78080744451591]
								}, {
									"case":	327,
									"scores":	[-6.78080744451591]
								}, {
									"case":	328,
									"scores":	[-6.78080744451591]
								}, {
									"case":	329,
									"scores":	[-6.78080744451591]
								}, {
									"case":	330,
									"scores":	[-6.78080744451591]
								}, {
									"case":	331,
									"scores":	[-6.78080744451591]
								}, {
									"case":	332,
									"scores":	[-6.78080744451591]
								}, {
									"case":	333,
									"scores":	[-6.78080744451591]
								}, {
									"case":	334,
									"scores":	[-6.78080744451591]
								}, {
									"case":	335,
									"scores":	[-6.78080744451591]
								}, {
									"case":	336,
									"scores":	[-6.78080744451591]
								}, {
									"case":	337,
									"scores":	[-6.78080744451591]
								}, {
									"case":	338,
									"scores":	[-6.78080744451591]
								}, {
									"case":	339,
									"scores":	[-6.78080744451591]
								}, {
									"case":	340,
									"scores":	[-6.78080744451591]
								}, {
									"case":	341,
									"scores":	[-6.78080744451591]
								}, {
									"case":	342,
									"scores":	[-6.78080744451591]
								}, {
									"case":	343,
									"scores":	[-6.78080744451591]
								}, {
									"case":	344,
									"scores":	[-6.78080744451591]
								}, {
									"case":	345,
									"scores":	[-6.78080744451591]
								}, {
									"case":	346,
									"scores":	[-6.78080744451591]
								}, {
									"case":	347,
									"scores":	[-6.78080744451591]
								}, {
									"case":	348,
									"scores":	[-6.78080744451591]
								}, {
									"case":	349,
									"scores":	[-6.78080744451591]
								}, {
									"case":	350,
									"scores":	[-6.78080744451591]
								}, {
									"case":	351,
									"scores":	[-6.78080744451591]
								}, {
									"case":	352,
									"scores":	[-6.78080744451591]
								}, {
									"case":	353,
									"scores":	[-6.78080744451591]
								}, {
									"case":	354,
									"scores":	[-6.78080744451591]
								}, {
									"case":	355,
									"scores":	[-6.78080744451591]
								}, {
									"case":	356,
									"scores":	[-6.78080744451591]
								}, {
									"case":	357,
									"scores":	[-6.78080744451591]
								}, {
									"case":	358,
									"scores":	[-6.78080744451591]
								}, {
									"case":	359,
									"scores":	[-6.78080744451591]
								}, {
									"case":	360,
									"scores":	[-6.78080744451591]
								}, {
									"case":	361,
									"scores":	[-6.78080744451591]
								}, {
									"case":	362,
									"scores":	[-6.78080744451591]
								}, {
									"case":	363,
									"scores":	[-6.78080744451591]
								}, {
									"case":	364,
									"scores":	[-6.78080744451591]
								}, {
									"case":	365,
									"scores":	[-6.78080744451591]
								}, {
									"case":	366,
									"scores":	[-6.78080744451591]
								}, {
									"case":	367,
									"scores":	[-6.78080744451591]
								}, {
									"case":	368,
									"scores":	[-6.78080744451591]
								}, {
									"case":	369,
									"scores":	[-6.78080744451591]
								}, {
									"case":	370,
									"scores":	[-6.78080744451591]
								}, {
									"case":	371,
									"scores":	[-6.78080744451591]
								}, {
									"case":	372,
									"scores":	[-6.78080744451591]
								}, {
									"case":	373,
									"scores":	[-6.78080744451591]
								}, {
									"case":	374,
									"scores":	[-6.78080744451591]
								}, {
									"case":	375,
									"scores":	[-6.78080744451591]
								}, {
									"case":	376,
									"scores":	[-6.78080744451591]
								}, {
									"case":	377,
									"scores":	[-6.78080744451591]
								}, {
									"case":	378,
									"scores":	[-6.78080744451591]
								}, {
									"case":	379,
									"scores":	[-6.78080744451591]
								}, {
									"case":	380,
									"scores":	[-6.78080744451591]
								}, {
									"case":	381,
									"scores":	[-6.78080744451591]
								}, {
									"case":	382,
									"scores":	[-6.78080744451591]
								}, {
									"case":	383,
									"scores":	[-6.78080744451591]
								}, {
									"case":	384,
									"scores":	[-6.78080744451591]
								}, {
									"case":	385,
									"scores":	[-6.78080744451591]
								}, {
									"case":	386,
									"scores":	[-6.78080744451591]
								}, {
									"case":	387,
									"scores":	[-6.78080744451591]
								}, {
									"case":	388,
									"scores":	[-6.78080744451591]
								}, {
									"case":	389,
									"scores":	[-6.78080744451591]
								}, {
									"case":	390,
									"scores":	[-6.78080744451591]
								}, {
									"case":	391,
									"scores":	[-6.78080744451591]
								}, {
									"case":	392,
									"scores":	[-6.78080744451591]
								}, {
									"case":	393,
									"scores":	[-6.78080744451591]
								}, {
									"case":	394,
									"scores":	[-6.78080744451591]
								}, {
									"case":	395,
									"scores":	[-6.78080744451591]
								}, {
									"case":	396,
									"scores":	[-6.78080744451591]
								}, {
									"case":	397,
									"scores":	[-6.78080744451591]
								}, {
									"case":	398,
									"scores":	[-6.78080744451591]
								}, {
									"case":	399,
									"scores":	[-6.78080744451591]
								}, {
									"case":	400,
									"scores":	[-6.78080744451591]
								}, {
									"case":	401,
									"scores":	[-6.78080744451591]
								}, {
									"case":	402,
									"scores":	[-6.78080744451591]
								}, {
									"case":	403,
									"scores":	[-6.78080744451591]
								}, {
									"case":	404,
									"scores":	[-6.78080744451591]
								}, {
									"case":	405,
									"scores":	[-6.78080744451591]
								}, {
									"case":	406,
									"scores":	[-6.78080744451591]
								}, {
									"case":	407,
									"scores":	[-6.78080744451591]
								}, {
									"case":	408,
									"scores":	[-6.78080744451591]
								}, {
									"case":	409,
									"scores":	[-6.78080744451591]
								}, {
									"case":	410,
									"scores":	[-6.78080744451591]
								}, {
									"case":	411,
									"scores":	[-6.78080744451591]
								}, {
									"case":	412,
									"scores":	[-6.78080744451591]
								}, {
									"case":	413,
									"scores":	[-6.78080744451591]
								}, {
									"case":	414,
									"scores":	[-6.78080744451591]
								}, {
									"case":	415,
									"scores":	[-6.78080744451591]
								}, {
									"case":	416,
									"scores":	[-6.78080744451591]
								}, {
									"case":	417,
									"scores":	[-6.78080744451591]
								}, {
									"case":	418,
									"scores":	[-6.78080744451591]
								}, {
									"case":	419,
									"scores":	[-6.78080744451591]
								}, {
									"case":	420,
									"scores":	[-6.78080744451591]
								}, {
									"case":	421,
									"scores":	[-6.78080744451591]
								}, {
									"case":	422,
									"scores":	[-6.78080744451591]
								}, {
									"case":	423,
									"scores":	[-6.78080744451591]
								}, {
									"case":	424,
									"scores":	[-6.78080744451591]
								}, {
									"case":	425,
									"scores":	[-6.78080744451591]
								}, {
									"case":	426,
									"scores":	[-6.78080744451591]
								}, {
									"case":	427,
									"scores":	[-6.78080744451591]
								}, {
									"case":	428,
									"scores":	[-6.78080744451591]
								}, {
									"case":	429,
									"scores":	[-6.78080744451591]
								}, {
									"case":	430,
									"scores":	[-6.78080744451591]
								}, {
									"case":	431,
									"scores":	[-8.16383425431591, -8.45378454851591, -10.13008714751591, -9.56576446051591, -9.56576446051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.88030225431591, -9.84320185431591, -9.09622794051591, -9.80805205751591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.84320185431591, -9.80805205751591]
								}, {
									"case":	432,
									"scores":	[-8.16283425431591, -8.45278454851591, -10.129087147515909, -9.56476446051591, -9.56476446051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.87930225431591, -9.84220185431591, -9.09522794051591, -9.80705205751591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.84220185431591, -9.80705205751591]
								}, {
									"case":	433,
									"scores":	[-8.16283425431591, -8.45278454851591, -10.129087147515909, -9.56476446051591, -9.56476446051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.87930225431591, -9.84220185431591, -9.09522794051591, -9.80705205751591, -9.59616294051591, -9.59616294051591, -9.59616294051591, -9.84220185431591, -9.80705205751591]
								}, {
									"case":	434,
									"scores":	[-8.16383425431591, -8.45378454851591, -10.13008714751591, -9.56576446051591, -9.56576446051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.88030225431591, -9.84320185431591, -9.09622794051591, -9.80805205751591, -9.59716294051591, -9.59716294051591, -9.59716294051591, -9.84320185431591, -9.80805205751591]
								}]
						}, {
							"switch":	3,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	277,
							"begin_column":	6,
							"end_line":	277,
							"end_column":	18,
							"patch_codes":	["if (!__is_neg(\"\", \"L277\", 23, &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(fmt), sizeof (fmt), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(adjust_precision), sizeof (adjust_precision), &(alternate_form), sizeof (alternate_form), &(precision), sizeof (precision), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    min_width = __builtin_va_arg(ap, int);\n", "{\n}\n", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "min_width = __builtin_va_arg(ap, int)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.49672471451591, -6.16735647351591, -7.80913671151591, -6.80628822451591, -6.80628822451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -7.99163370451591, -7.69728290451591, -6.61738377451591, -7.40865480451591, -6.93939480451591, -6.93939480451591, -6.93939480451591, -7.69728290451591, -7.40865480451591]
								}, {
									"case":	2,
									"scores":	[-6.78080744451591]
								}, {
									"case":	3,
									"scores":	[-6.78080744451591]
								}, {
									"case":	4,
									"scores":	[-6.78080744451591]
								}, {
									"case":	5,
									"scores":	[-6.78080744451591]
								}, {
									"case":	6,
									"scores":	[-6.78080744451591]
								}, {
									"case":	7,
									"scores":	[-6.78080744451591]
								}, {
									"case":	8,
									"scores":	[-6.78080744451591]
								}, {
									"case":	9,
									"scores":	[-6.78080744451591]
								}, {
									"case":	10,
									"scores":	[-6.78080744451591]
								}, {
									"case":	11,
									"scores":	[-6.78080744451591]
								}, {
									"case":	12,
									"scores":	[-6.78080744451591]
								}, {
									"case":	13,
									"scores":	[-6.78080744451591]
								}, {
									"case":	14,
									"scores":	[-6.78080744451591]
								}, {
									"case":	15,
									"scores":	[-6.78080744451591]
								}, {
									"case":	16,
									"scores":	[-6.78080744451591]
								}, {
									"case":	17,
									"scores":	[-6.78080744451591]
								}, {
									"case":	18,
									"scores":	[-6.78080744451591]
								}, {
									"case":	19,
									"scores":	[-6.78080744451591]
								}, {
									"case":	20,
									"scores":	[-6.78080744451591]
								}, {
									"case":	21,
									"scores":	[-6.78080744451591]
								}, {
									"case":	22,
									"scores":	[-6.78080744451591]
								}, {
									"case":	23,
									"scores":	[-6.78080744451591]
								}]
						}]
				}, {
					"line":	277,
					"switches":	[{
							"switch":	4,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	278,
							"begin_column":	4,
							"end_line":	278,
							"end_column":	4,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L278\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(adjust_precision), sizeof (adjust_precision), &(print_blank), sizeof (print_blank), &(precision), sizeof (precision), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    break;\n", "if (__is_neg(\"\", \"L278\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(adjust_precision), sizeof (adjust_precision), &(print_blank), sizeof (print_blank), &(precision), sizeof (precision), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L278\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(adjust_precision), sizeof (adjust_precision), &(print_blank), sizeof (print_blank), &(precision), sizeof (precision), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L278\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(adjust_precision), sizeof (adjust_precision), &(print_blank), sizeof (print_blank), &(precision), sizeof (precision), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.76060473719839]
								}, {
									"case":	2,
									"scores":	[-6.76060473719839]
								}, {
									"case":	3,
									"scores":	[-6.76060473719839]
								}, {
									"case":	4,
									"scores":	[-6.76060473719839]
								}, {
									"case":	5,
									"scores":	[-6.76060473719839]
								}, {
									"case":	6,
									"scores":	[-6.76060473719839]
								}, {
									"case":	7,
									"scores":	[-6.76060473719839]
								}, {
									"case":	8,
									"scores":	[-6.76060473719839]
								}, {
									"case":	9,
									"scores":	[-6.76060473719839]
								}, {
									"case":	10,
									"scores":	[-6.76060473719839]
								}, {
									"case":	11,
									"scores":	[-6.76060473719839]
								}, {
									"case":	12,
									"scores":	[-6.76060473719839]
								}, {
									"case":	13,
									"scores":	[-6.76060473719839]
								}, {
									"case":	14,
									"scores":	[-6.76060473719839]
								}, {
									"case":	15,
									"scores":	[-6.76060473719839]
								}, {
									"case":	16,
									"scores":	[-6.76060473719839]
								}, {
									"case":	17,
									"scores":	[-6.76060473719839]
								}, {
									"case":	18,
									"scores":	[-6.76060473719839]
								}, {
									"case":	19,
									"scores":	[-6.76060473719839]
								}, {
									"case":	20,
									"scores":	[-6.76060473719839]
								}, {
									"case":	21,
									"scores":	[-6.76060473719839]
								}, {
									"case":	22,
									"scores":	[-6.76060473719839]
								}, {
									"case":	23,
									"scores":	[-6.76060473719839]
								}, {
									"case":	24,
									"scores":	[-6.76060473719839]
								}, {
									"case":	25,
									"scores":	[-6.76060473719839]
								}, {
									"case":	26,
									"scores":	[-6.76060473719839]
								}, {
									"case":	27,
									"scores":	[-6.76060473719839]
								}, {
									"case":	28,
									"scores":	[-6.76060473719839]
								}, {
									"case":	29,
									"scores":	[-6.76060473719839]
								}, {
									"case":	30,
									"scores":	[-6.76060473719839]
								}, {
									"case":	31,
									"scores":	[-6.76060473719839]
								}, {
									"case":	32,
									"scores":	[-6.76060473719839]
								}, {
									"case":	33,
									"scores":	[-6.76060473719839]
								}, {
									"case":	34,
									"scores":	[-6.76060473719839]
								}, {
									"case":	35,
									"scores":	[-6.76060473719839]
								}, {
									"case":	36,
									"scores":	[-6.76060473719839]
								}, {
									"case":	37,
									"scores":	[-6.76060473719839]
								}, {
									"case":	38,
									"scores":	[-6.76060473719839]
								}, {
									"case":	39,
									"scores":	[-6.76060473719839]
								}, {
									"case":	40,
									"scores":	[-6.76060473719839]
								}, {
									"case":	41,
									"scores":	[-6.76060473719839]
								}, {
									"case":	42,
									"scores":	[-6.76060473719839]
								}, {
									"case":	43,
									"scores":	[-6.76060473719839]
								}, {
									"case":	44,
									"scores":	[-6.76060473719839]
								}, {
									"case":	45,
									"scores":	[-6.76060473719839]
								}, {
									"case":	46,
									"scores":	[-6.76060473719839]
								}, {
									"case":	47,
									"scores":	[-6.76060473719839]
								}, {
									"case":	48,
									"scores":	[-6.76060473719839]
								}, {
									"case":	49,
									"scores":	[-6.76060473719839]
								}, {
									"case":	50,
									"scores":	[-6.76060473719839]
								}, {
									"case":	51,
									"scores":	[-6.76060473719839]
								}, {
									"case":	52,
									"scores":	[-6.76060473719839]
								}, {
									"case":	53,
									"scores":	[-6.76060473719839]
								}, {
									"case":	54,
									"scores":	[-6.76060473719839]
								}, {
									"case":	55,
									"scores":	[-6.76060473719839]
								}, {
									"case":	56,
									"scores":	[-6.76060473719839]
								}, {
									"case":	57,
									"scores":	[-6.76060473719839]
								}, {
									"case":	58,
									"scores":	[-6.76060473719839]
								}, {
									"case":	59,
									"scores":	[-6.76060473719839]
								}, {
									"case":	60,
									"scores":	[-6.76060473719839]
								}, {
									"case":	61,
									"scores":	[-6.76060473719839]
								}, {
									"case":	62,
									"scores":	[-6.76060473719839]
								}, {
									"case":	63,
									"scores":	[-6.76060473719839]
								}, {
									"case":	64,
									"scores":	[-6.76060473719839]
								}, {
									"case":	65,
									"scores":	[-6.76060473719839]
								}, {
									"case":	66,
									"scores":	[-6.76060473719839]
								}, {
									"case":	67,
									"scores":	[-6.76060473719839]
								}, {
									"case":	68,
									"scores":	[-6.76060473719839]
								}, {
									"case":	69,
									"scores":	[-6.76060473719839]
								}, {
									"case":	70,
									"scores":	[-6.76060473719839]
								}, {
									"case":	71,
									"scores":	[-6.76060473719839]
								}, {
									"case":	72,
									"scores":	[-6.76060473719839]
								}, {
									"case":	73,
									"scores":	[-6.76060473719839]
								}, {
									"case":	74,
									"scores":	[-6.76060473719839]
								}, {
									"case":	75,
									"scores":	[-6.76060473719839]
								}, {
									"case":	76,
									"scores":	[-6.76060473719839]
								}, {
									"case":	77,
									"scores":	[-6.76060473719839]
								}, {
									"case":	78,
									"scores":	[-6.76060473719839]
								}, {
									"case":	79,
									"scores":	[-6.76060473719839]
								}, {
									"case":	80,
									"scores":	[-6.76060473719839]
								}, {
									"case":	81,
									"scores":	[-6.76060473719839]
								}, {
									"case":	82,
									"scores":	[-6.76060473719839]
								}, {
									"case":	83,
									"scores":	[-6.76060473719839]
								}, {
									"case":	84,
									"scores":	[-6.76060473719839]
								}, {
									"case":	85,
									"scores":	[-6.76060473719839]
								}, {
									"case":	86,
									"scores":	[-6.76060473719839]
								}, {
									"case":	87,
									"scores":	[-6.76060473719839]
								}, {
									"case":	88,
									"scores":	[-6.76060473719839]
								}, {
									"case":	89,
									"scores":	[-6.76060473719839]
								}, {
									"case":	90,
									"scores":	[-6.76060473719839]
								}, {
									"case":	91,
									"scores":	[-6.76060473719839]
								}, {
									"case":	92,
									"scores":	[-6.76060473719839]
								}, {
									"case":	93,
									"scores":	[-6.76060473719839]
								}, {
									"case":	94,
									"scores":	[-6.76060473719839]
								}, {
									"case":	95,
									"scores":	[-6.76060473719839]
								}, {
									"case":	96,
									"scores":	[-6.76060473719839]
								}, {
									"case":	97,
									"scores":	[-6.76060473719839]
								}, {
									"case":	98,
									"scores":	[-6.76060473719839]
								}, {
									"case":	99,
									"scores":	[-6.76060473719839]
								}, {
									"case":	100,
									"scores":	[-6.76060473719839]
								}, {
									"case":	101,
									"scores":	[-6.76060473719839]
								}, {
									"case":	102,
									"scores":	[-6.76060473719839]
								}, {
									"case":	103,
									"scores":	[-6.76060473719839]
								}, {
									"case":	104,
									"scores":	[-6.76060473719839]
								}, {
									"case":	105,
									"scores":	[-6.76060473719839]
								}, {
									"case":	106,
									"scores":	[-6.76060473719839]
								}, {
									"case":	107,
									"scores":	[-6.76060473719839]
								}, {
									"case":	108,
									"scores":	[-6.76060473719839]
								}, {
									"case":	109,
									"scores":	[-6.76060473719839]
								}, {
									"case":	110,
									"scores":	[-6.76060473719839]
								}, {
									"case":	111,
									"scores":	[-6.76060473719839]
								}, {
									"case":	112,
									"scores":	[-6.76060473719839]
								}, {
									"case":	113,
									"scores":	[-6.76060473719839]
								}, {
									"case":	114,
									"scores":	[-6.76060473719839]
								}, {
									"case":	115,
									"scores":	[-6.76060473719839]
								}, {
									"case":	116,
									"scores":	[-6.76060473719839]
								}, {
									"case":	117,
									"scores":	[-6.76060473719839]
								}, {
									"case":	118,
									"scores":	[-6.76060473719839]
								}, {
									"case":	119,
									"scores":	[-6.76060473719839]
								}, {
									"case":	120,
									"scores":	[-6.76060473719839]
								}, {
									"case":	121,
									"scores":	[-6.76060473719839]
								}, {
									"case":	122,
									"scores":	[-6.76060473719839]
								}, {
									"case":	123,
									"scores":	[-6.76060473719839]
								}, {
									"case":	124,
									"scores":	[-6.76060473719839]
								}, {
									"case":	125,
									"scores":	[-6.76060473719839]
								}, {
									"case":	126,
									"scores":	[-6.76060473719839]
								}, {
									"case":	127,
									"scores":	[-6.76060473719839]
								}, {
									"case":	128,
									"scores":	[-6.76060473719839]
								}, {
									"case":	129,
									"scores":	[-6.76060473719839]
								}, {
									"case":	130,
									"scores":	[-6.76060473719839]
								}, {
									"case":	131,
									"scores":	[-6.76060473719839]
								}, {
									"case":	132,
									"scores":	[-6.76060473719839]
								}, {
									"case":	133,
									"scores":	[-6.76060473719839]
								}, {
									"case":	134,
									"scores":	[-6.76060473719839]
								}, {
									"case":	135,
									"scores":	[-6.76060473719839]
								}, {
									"case":	136,
									"scores":	[-6.76060473719839]
								}, {
									"case":	137,
									"scores":	[-6.76060473719839]
								}, {
									"case":	138,
									"scores":	[-6.76060473719839]
								}, {
									"case":	139,
									"scores":	[-6.76060473719839]
								}, {
									"case":	140,
									"scores":	[-6.76060473719839]
								}, {
									"case":	141,
									"scores":	[-6.76060473719839]
								}, {
									"case":	142,
									"scores":	[-6.76060473719839]
								}, {
									"case":	143,
									"scores":	[-6.76060473719839]
								}, {
									"case":	144,
									"scores":	[-6.76060473719839]
								}, {
									"case":	145,
									"scores":	[-6.76060473719839]
								}, {
									"case":	146,
									"scores":	[-6.76060473719839]
								}, {
									"case":	147,
									"scores":	[-6.76060473719839]
								}, {
									"case":	148,
									"scores":	[-6.76060473719839]
								}, {
									"case":	149,
									"scores":	[-6.76060473719839]
								}, {
									"case":	150,
									"scores":	[-6.76060473719839]
								}, {
									"case":	151,
									"scores":	[-6.76060473719839]
								}, {
									"case":	152,
									"scores":	[-6.76060473719839]
								}, {
									"case":	153,
									"scores":	[-6.76060473719839]
								}, {
									"case":	154,
									"scores":	[-6.76060473719839]
								}, {
									"case":	155,
									"scores":	[-6.76060473719839]
								}, {
									"case":	156,
									"scores":	[-6.76060473719839]
								}, {
									"case":	157,
									"scores":	[-6.76060473719839]
								}, {
									"case":	158,
									"scores":	[-6.76060473719839]
								}, {
									"case":	159,
									"scores":	[-6.76060473719839]
								}, {
									"case":	160,
									"scores":	[-6.76060473719839]
								}, {
									"case":	161,
									"scores":	[-6.76060473719839]
								}, {
									"case":	162,
									"scores":	[-6.76060473719839]
								}, {
									"case":	163,
									"scores":	[-6.76060473719839]
								}, {
									"case":	164,
									"scores":	[-6.76060473719839]
								}, {
									"case":	165,
									"scores":	[-6.76060473719839]
								}, {
									"case":	166,
									"scores":	[-6.76060473719839]
								}, {
									"case":	167,
									"scores":	[-6.76060473719839]
								}, {
									"case":	168,
									"scores":	[-6.76060473719839]
								}, {
									"case":	169,
									"scores":	[-6.76060473719839]
								}, {
									"case":	170,
									"scores":	[-6.76060473719839]
								}, {
									"case":	171,
									"scores":	[-6.76060473719839]
								}, {
									"case":	172,
									"scores":	[-6.76060473719839]
								}, {
									"case":	173,
									"scores":	[-6.76060473719839]
								}, {
									"case":	174,
									"scores":	[-6.76060473719839]
								}, {
									"case":	175,
									"scores":	[-6.76060473719839]
								}, {
									"case":	176,
									"scores":	[-6.76060473719839]
								}, {
									"case":	177,
									"scores":	[-6.76060473719839]
								}, {
									"case":	178,
									"scores":	[-6.76060473719839]
								}, {
									"case":	179,
									"scores":	[-6.76060473719839]
								}, {
									"case":	180,
									"scores":	[-6.76060473719839]
								}, {
									"case":	181,
									"scores":	[-6.76060473719839]
								}, {
									"case":	182,
									"scores":	[-6.76060473719839]
								}, {
									"case":	183,
									"scores":	[-6.76060473719839]
								}, {
									"case":	184,
									"scores":	[-6.76060473719839]
								}, {
									"case":	185,
									"scores":	[-6.76060473719839]
								}, {
									"case":	186,
									"scores":	[-6.76060473719839]
								}, {
									"case":	187,
									"scores":	[-6.76060473719839]
								}, {
									"case":	188,
									"scores":	[-6.76060473719839]
								}, {
									"case":	189,
									"scores":	[-6.76060473719839]
								}, {
									"case":	190,
									"scores":	[-6.76060473719839]
								}, {
									"case":	191,
									"scores":	[-6.76060473719839]
								}, {
									"case":	192,
									"scores":	[-6.76060473719839]
								}, {
									"case":	193,
									"scores":	[-6.76060473719839]
								}, {
									"case":	194,
									"scores":	[-6.76060473719839]
								}, {
									"case":	195,
									"scores":	[-6.76060473719839]
								}, {
									"case":	196,
									"scores":	[-6.76060473719839]
								}, {
									"case":	197,
									"scores":	[-6.76060473719839]
								}, {
									"case":	198,
									"scores":	[-6.76060473719839]
								}, {
									"case":	199,
									"scores":	[-6.76060473719839]
								}, {
									"case":	200,
									"scores":	[-6.76060473719839]
								}, {
									"case":	201,
									"scores":	[-6.76060473719839]
								}, {
									"case":	202,
									"scores":	[-6.76060473719839]
								}, {
									"case":	203,
									"scores":	[-6.76060473719839]
								}, {
									"case":	204,
									"scores":	[-6.76060473719839]
								}, {
									"case":	205,
									"scores":	[-6.76060473719839]
								}, {
									"case":	206,
									"scores":	[-6.76060473719839]
								}, {
									"case":	207,
									"scores":	[-6.76060473719839]
								}, {
									"case":	208,
									"scores":	[-6.76060473719839]
								}, {
									"case":	209,
									"scores":	[-6.76060473719839]
								}, {
									"case":	210,
									"scores":	[-6.76060473719839]
								}, {
									"case":	211,
									"scores":	[-6.76060473719839]
								}, {
									"case":	212,
									"scores":	[-6.76060473719839]
								}, {
									"case":	213,
									"scores":	[-6.76060473719839]
								}, {
									"case":	214,
									"scores":	[-6.76060473719839]
								}, {
									"case":	215,
									"scores":	[-6.76060473719839]
								}, {
									"case":	216,
									"scores":	[-6.76060473719839]
								}, {
									"case":	217,
									"scores":	[-6.76060473719839]
								}, {
									"case":	218,
									"scores":	[-6.76060473719839]
								}, {
									"case":	219,
									"scores":	[-6.76060473719839]
								}, {
									"case":	220,
									"scores":	[-6.76060473719839]
								}, {
									"case":	221,
									"scores":	[-6.76060473719839]
								}, {
									"case":	222,
									"scores":	[-6.76060473719839]
								}, {
									"case":	223,
									"scores":	[-6.76060473719839]
								}, {
									"case":	224,
									"scores":	[-6.76060473719839]
								}, {
									"case":	225,
									"scores":	[-6.76060473719839]
								}, {
									"case":	226,
									"scores":	[-6.76060473719839]
								}, {
									"case":	227,
									"scores":	[-6.76060473719839]
								}, {
									"case":	228,
									"scores":	[-6.76060473719839]
								}, {
									"case":	229,
									"scores":	[-6.76060473719839]
								}, {
									"case":	230,
									"scores":	[-6.76060473719839]
								}, {
									"case":	231,
									"scores":	[-6.76060473719839]
								}, {
									"case":	232,
									"scores":	[-6.76060473719839]
								}, {
									"case":	233,
									"scores":	[-6.76060473719839]
								}, {
									"case":	234,
									"scores":	[-6.76060473719839]
								}, {
									"case":	235,
									"scores":	[-6.76060473719839]
								}, {
									"case":	236,
									"scores":	[-6.76060473719839]
								}, {
									"case":	237,
									"scores":	[-6.76060473719839]
								}, {
									"case":	238,
									"scores":	[-6.76060473719839]
								}, {
									"case":	239,
									"scores":	[-6.76060473719839]
								}, {
									"case":	240,
									"scores":	[-6.76060473719839]
								}, {
									"case":	241,
									"scores":	[-6.76060473719839]
								}, {
									"case":	242,
									"scores":	[-6.76060473719839]
								}, {
									"case":	243,
									"scores":	[-6.76060473719839]
								}, {
									"case":	244,
									"scores":	[-6.76060473719839]
								}, {
									"case":	245,
									"scores":	[-6.76060473719839]
								}, {
									"case":	246,
									"scores":	[-6.76060473719839]
								}, {
									"case":	247,
									"scores":	[-6.76060473719839]
								}, {
									"case":	248,
									"scores":	[-6.76060473719839]
								}, {
									"case":	249,
									"scores":	[-6.76060473719839]
								}, {
									"case":	250,
									"scores":	[-6.76060473719839]
								}, {
									"case":	251,
									"scores":	[-6.76060473719839]
								}, {
									"case":	252,
									"scores":	[-6.76060473719839]
								}, {
									"case":	253,
									"scores":	[-6.76060473719839]
								}, {
									"case":	254,
									"scores":	[-6.76060473719839]
								}, {
									"case":	255,
									"scores":	[-6.76060473719839]
								}, {
									"case":	256,
									"scores":	[-6.76060473719839]
								}, {
									"case":	257,
									"scores":	[-6.76060473719839]
								}, {
									"case":	258,
									"scores":	[-6.76060473719839]
								}, {
									"case":	259,
									"scores":	[-6.76060473719839]
								}, {
									"case":	260,
									"scores":	[-6.76060473719839]
								}, {
									"case":	261,
									"scores":	[-6.76060473719839]
								}, {
									"case":	262,
									"scores":	[-6.76060473719839]
								}, {
									"case":	263,
									"scores":	[-6.76060473719839]
								}, {
									"case":	264,
									"scores":	[-6.76060473719839]
								}, {
									"case":	265,
									"scores":	[-6.76060473719839]
								}, {
									"case":	266,
									"scores":	[-6.76060473719839]
								}, {
									"case":	267,
									"scores":	[-6.76060473719839]
								}, {
									"case":	268,
									"scores":	[-6.76060473719839]
								}, {
									"case":	269,
									"scores":	[-6.76060473719839]
								}, {
									"case":	270,
									"scores":	[-6.76060473719839]
								}, {
									"case":	271,
									"scores":	[-6.76060473719839]
								}, {
									"case":	272,
									"scores":	[-6.76060473719839]
								}, {
									"case":	273,
									"scores":	[-6.76060473719839]
								}, {
									"case":	274,
									"scores":	[-6.76060473719839]
								}, {
									"case":	275,
									"scores":	[-6.76060473719839]
								}, {
									"case":	276,
									"scores":	[-6.76060473719839]
								}, {
									"case":	277,
									"scores":	[-6.76060473719839]
								}, {
									"case":	278,
									"scores":	[-6.76060473719839]
								}, {
									"case":	279,
									"scores":	[-6.76060473719839]
								}, {
									"case":	280,
									"scores":	[-6.76060473719839]
								}, {
									"case":	281,
									"scores":	[-6.76060473719839]
								}, {
									"case":	282,
									"scores":	[-6.76060473719839]
								}, {
									"case":	283,
									"scores":	[-6.76060473719839]
								}, {
									"case":	284,
									"scores":	[-6.76060473719839]
								}, {
									"case":	285,
									"scores":	[-6.76060473719839]
								}, {
									"case":	286,
									"scores":	[-6.76060473719839]
								}, {
									"case":	287,
									"scores":	[-6.76060473719839]
								}, {
									"case":	288,
									"scores":	[-6.76060473719839]
								}, {
									"case":	289,
									"scores":	[-6.76060473719839]
								}, {
									"case":	290,
									"scores":	[-6.76060473719839]
								}, {
									"case":	291,
									"scores":	[-6.76060473719839]
								}, {
									"case":	292,
									"scores":	[-6.76060473719839]
								}, {
									"case":	293,
									"scores":	[-6.76060473719839]
								}, {
									"case":	294,
									"scores":	[-6.76060473719839]
								}, {
									"case":	295,
									"scores":	[-6.76060473719839]
								}, {
									"case":	296,
									"scores":	[-6.76060473719839]
								}, {
									"case":	297,
									"scores":	[-6.76060473719839]
								}, {
									"case":	298,
									"scores":	[-6.76060473719839]
								}, {
									"case":	299,
									"scores":	[-6.76060473719839]
								}, {
									"case":	300,
									"scores":	[-6.76060473719839]
								}, {
									"case":	301,
									"scores":	[-6.76060473719839]
								}, {
									"case":	302,
									"scores":	[-6.76060473719839]
								}, {
									"case":	303,
									"scores":	[-6.76060473719839]
								}, {
									"case":	304,
									"scores":	[-6.76060473719839]
								}, {
									"case":	305,
									"scores":	[-6.76060473719839]
								}, {
									"case":	306,
									"scores":	[-6.76060473719839]
								}, {
									"case":	307,
									"scores":	[-6.76060473719839]
								}, {
									"case":	308,
									"scores":	[-6.76060473719839]
								}, {
									"case":	309,
									"scores":	[-6.76060473719839]
								}, {
									"case":	310,
									"scores":	[-6.76060473719839]
								}, {
									"case":	311,
									"scores":	[-6.76060473719839]
								}, {
									"case":	312,
									"scores":	[-6.76060473719839]
								}, {
									"case":	313,
									"scores":	[-6.76060473719839]
								}, {
									"case":	314,
									"scores":	[-6.76060473719839]
								}, {
									"case":	315,
									"scores":	[-6.76060473719839]
								}, {
									"case":	316,
									"scores":	[-6.76060473719839]
								}, {
									"case":	317,
									"scores":	[-6.76060473719839]
								}, {
									"case":	318,
									"scores":	[-6.76060473719839]
								}, {
									"case":	319,
									"scores":	[-6.76060473719839]
								}, {
									"case":	320,
									"scores":	[-6.76060473719839]
								}, {
									"case":	321,
									"scores":	[-6.76060473719839]
								}, {
									"case":	322,
									"scores":	[-6.76060473719839]
								}, {
									"case":	323,
									"scores":	[-6.76060473719839]
								}, {
									"case":	324,
									"scores":	[-6.76060473719839]
								}, {
									"case":	325,
									"scores":	[-6.76060473719839]
								}, {
									"case":	326,
									"scores":	[-6.76060473719839]
								}, {
									"case":	327,
									"scores":	[-6.76060473719839]
								}, {
									"case":	328,
									"scores":	[-6.76060473719839]
								}, {
									"case":	329,
									"scores":	[-6.76060473719839]
								}, {
									"case":	330,
									"scores":	[-6.76060473719839]
								}, {
									"case":	331,
									"scores":	[-6.76060473719839]
								}, {
									"case":	332,
									"scores":	[-6.76060473719839]
								}, {
									"case":	333,
									"scores":	[-6.76060473719839]
								}, {
									"case":	334,
									"scores":	[-6.76060473719839]
								}, {
									"case":	335,
									"scores":	[-6.76060473719839]
								}, {
									"case":	336,
									"scores":	[-6.76060473719839]
								}, {
									"case":	337,
									"scores":	[-6.76060473719839]
								}, {
									"case":	338,
									"scores":	[-6.76060473719839]
								}, {
									"case":	339,
									"scores":	[-6.76060473719839]
								}, {
									"case":	340,
									"scores":	[-6.76060473719839]
								}, {
									"case":	341,
									"scores":	[-6.76060473719839]
								}, {
									"case":	342,
									"scores":	[-6.76060473719839]
								}, {
									"case":	343,
									"scores":	[-6.76060473719839]
								}, {
									"case":	344,
									"scores":	[-6.76060473719839]
								}, {
									"case":	345,
									"scores":	[-6.76060473719839]
								}, {
									"case":	346,
									"scores":	[-6.76060473719839]
								}, {
									"case":	347,
									"scores":	[-6.76060473719839]
								}, {
									"case":	348,
									"scores":	[-6.76060473719839]
								}, {
									"case":	349,
									"scores":	[-6.76060473719839]
								}, {
									"case":	350,
									"scores":	[-6.76060473719839]
								}, {
									"case":	351,
									"scores":	[-6.76060473719839]
								}, {
									"case":	352,
									"scores":	[-6.76060473719839]
								}, {
									"case":	353,
									"scores":	[-6.76060473719839]
								}, {
									"case":	354,
									"scores":	[-6.76060473719839]
								}, {
									"case":	355,
									"scores":	[-6.76060473719839]
								}, {
									"case":	356,
									"scores":	[-6.76060473719839]
								}, {
									"case":	357,
									"scores":	[-6.76060473719839]
								}, {
									"case":	358,
									"scores":	[-6.76060473719839]
								}, {
									"case":	359,
									"scores":	[-6.76060473719839]
								}, {
									"case":	360,
									"scores":	[-6.76060473719839]
								}, {
									"case":	361,
									"scores":	[-6.76060473719839]
								}, {
									"case":	362,
									"scores":	[-6.76060473719839]
								}, {
									"case":	363,
									"scores":	[-6.76060473719839]
								}, {
									"case":	364,
									"scores":	[-6.76060473719839]
								}, {
									"case":	365,
									"scores":	[-6.76060473719839]
								}, {
									"case":	366,
									"scores":	[-6.76060473719839]
								}, {
									"case":	367,
									"scores":	[-6.76060473719839]
								}, {
									"case":	368,
									"scores":	[-6.76060473719839]
								}, {
									"case":	369,
									"scores":	[-6.76060473719839]
								}, {
									"case":	370,
									"scores":	[-6.76060473719839]
								}, {
									"case":	371,
									"scores":	[-6.76060473719839]
								}, {
									"case":	372,
									"scores":	[-6.76060473719839]
								}, {
									"case":	373,
									"scores":	[-6.76060473719839]
								}, {
									"case":	374,
									"scores":	[-6.76060473719839]
								}, {
									"case":	375,
									"scores":	[-6.76060473719839]
								}, {
									"case":	376,
									"scores":	[-6.76060473719839]
								}, {
									"case":	377,
									"scores":	[-6.76060473719839]
								}, {
									"case":	378,
									"scores":	[-6.76060473719839]
								}, {
									"case":	379,
									"scores":	[-6.76060473719839]
								}, {
									"case":	380,
									"scores":	[-6.76060473719839]
								}, {
									"case":	381,
									"scores":	[-6.76060473719839]
								}, {
									"case":	382,
									"scores":	[-6.76060473719839]
								}, {
									"case":	383,
									"scores":	[-6.76060473719839]
								}, {
									"case":	384,
									"scores":	[-6.76060473719839]
								}, {
									"case":	385,
									"scores":	[-6.76060473719839]
								}, {
									"case":	386,
									"scores":	[-6.76060473719839]
								}, {
									"case":	387,
									"scores":	[-6.76060473719839]
								}, {
									"case":	388,
									"scores":	[-6.76060473719839]
								}, {
									"case":	389,
									"scores":	[-6.76060473719839]
								}, {
									"case":	390,
									"scores":	[-6.76060473719839]
								}, {
									"case":	391,
									"scores":	[-6.76060473719839]
								}, {
									"case":	392,
									"scores":	[-6.76060473719839]
								}, {
									"case":	393,
									"scores":	[-6.76060473719839]
								}, {
									"case":	394,
									"scores":	[-6.76060473719839]
								}, {
									"case":	395,
									"scores":	[-6.76060473719839]
								}, {
									"case":	396,
									"scores":	[-6.76060473719839]
								}, {
									"case":	397,
									"scores":	[-6.76060473719839]
								}, {
									"case":	398,
									"scores":	[-6.76060473719839]
								}, {
									"case":	399,
									"scores":	[-6.76060473719839]
								}, {
									"case":	400,
									"scores":	[-6.76060473719839]
								}, {
									"case":	401,
									"scores":	[-6.76060473719839]
								}, {
									"case":	402,
									"scores":	[-6.76060473719839]
								}, {
									"case":	403,
									"scores":	[-6.76060473719839]
								}, {
									"case":	404,
									"scores":	[-6.76060473719839]
								}, {
									"case":	405,
									"scores":	[-6.76060473719839]
								}, {
									"case":	406,
									"scores":	[-6.76060473719839]
								}, {
									"case":	407,
									"scores":	[-6.76060473719839]
								}, {
									"case":	408,
									"scores":	[-6.76060473719839]
								}, {
									"case":	409,
									"scores":	[-6.76060473719839]
								}, {
									"case":	410,
									"scores":	[-6.76060473719839]
								}, {
									"case":	411,
									"scores":	[-6.76060473719839]
								}, {
									"case":	412,
									"scores":	[-6.76060473719839]
								}, {
									"case":	413,
									"scores":	[-6.76060473719839]
								}, {
									"case":	414,
									"scores":	[-6.76060473719839]
								}, {
									"case":	415,
									"scores":	[-6.76060473719839]
								}, {
									"case":	416,
									"scores":	[-6.76060473719839]
								}, {
									"case":	417,
									"scores":	[-6.76060473719839]
								}, {
									"case":	418,
									"scores":	[-6.76060473719839]
								}, {
									"case":	419,
									"scores":	[-6.76060473719839]
								}, {
									"case":	420,
									"scores":	[-6.76060473719839]
								}, {
									"case":	421,
									"scores":	[-6.76060473719839]
								}, {
									"case":	422,
									"scores":	[-6.76060473719839]
								}, {
									"case":	423,
									"scores":	[-6.76060473719839]
								}, {
									"case":	424,
									"scores":	[-6.76060473719839]
								}, {
									"case":	425,
									"scores":	[-6.76060473719839]
								}, {
									"case":	426,
									"scores":	[-6.76060473719839]
								}, {
									"case":	427,
									"scores":	[-6.76060473719839]
								}, {
									"case":	428,
									"scores":	[-6.76060473719839]
								}, {
									"case":	429,
									"scores":	[-6.76060473719839]
								}, {
									"case":	430,
									"scores":	[-6.76060473719839]
								}, {
									"case":	431,
									"scores":	[-11.118734329198389, -10.49179726699839, -8.33315164019839, -10.39133475319839, -10.39133475319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.705872546998389, -10.668772146998389, -9.92179823319839, -10.63362235019839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.668772146998389, -10.63362235019839]
								}, {
									"case":	432,
									"scores":	[-11.117734329198388, -10.49079726699839, -8.33215164019839, -10.390334753198388, -10.390334753198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.70487254699839, -10.667772146998388, -9.92079823319839, -10.632622350198389, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.667772146998388, -10.632622350198389]
								}, {
									"case":	433,
									"scores":	[-11.117734329198388, -10.49079726699839, -8.33215164019839, -10.390334753198388, -10.390334753198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.70487254699839, -10.667772146998388, -9.92079823319839, -10.632622350198389, -10.421733233198388, -10.421733233198388, -10.421733233198388, -10.667772146998388, -10.632622350198389]
								}, {
									"case":	434,
									"scores":	[-11.118734329198389, -10.49179726699839, -8.33315164019839, -10.39133475319839, -10.39133475319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.705872546998389, -10.668772146998389, -9.92179823319839, -10.63362235019839, -10.42273323319839, -10.42273323319839, -10.42273323319839, -10.668772146998389, -10.63362235019839]
								}]
						}, {
							"switch":	5,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	278,
							"begin_column":	6,
							"end_line":	278,
							"end_column":	9,
							"patch_codes":	["if (!__is_neg(\"\", \"L278\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(adjust_precision), sizeof (adjust_precision), &(print_blank), sizeof (print_blank), &(precision), sizeof (precision), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    fmt++;\n", "{\n}\n", "(&adjust)++", "(&adjust_precision)++", "(&adjust_width)++", "(&alternate_form)++", "(&ap)++", "(&char_buf)++", "(&fmt)++", "(&fp_num)++", "(&free_zcopy)++", "(&i_num)++", "(&is_negative)++", "(&lconv)++", "(&min_width)++", "(&modifier)++", "(&num_buf)++", "(&pad_char)++", "(&precision)++", "(&prefix_char)++", "(&print_blank)++", "(&print_sign)++", "(&q)++", "(&s)++", "(&s_len)++", "(&ui_num)++", "(&xbuf)++", "(&zcopy)++", "(&zvp)++", "(fmt)++"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.28420240819839, -8.08208299719839, -5.88074938519839, -7.13424303819839, -7.26730051719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -8.45264599719839, -8.15829519719839, -7.07839606719839, -7.86966709719839, -7.40040709719839, -7.40040709719839, -7.40040709719839, -8.15829519719839, -7.86966709719839]
								}, {
									"case":	2,
									"scores":	[-6.76060473719839]
								}, {
									"case":	3,
									"scores":	[-6.76060473719839]
								}, {
									"case":	4,
									"scores":	[-6.76060473719839]
								}, {
									"case":	5,
									"scores":	[-6.76060473719839]
								}, {
									"case":	6,
									"scores":	[-6.76060473719839]
								}, {
									"case":	7,
									"scores":	[-6.76060473719839]
								}, {
									"case":	8,
									"scores":	[-6.76060473719839]
								}, {
									"case":	9,
									"scores":	[-6.76060473719839]
								}, {
									"case":	10,
									"scores":	[-6.76060473719839]
								}, {
									"case":	11,
									"scores":	[-6.76060473719839]
								}, {
									"case":	12,
									"scores":	[-6.76060473719839]
								}, {
									"case":	13,
									"scores":	[-6.76060473719839]
								}, {
									"case":	14,
									"scores":	[-6.76060473719839]
								}, {
									"case":	15,
									"scores":	[-6.76060473719839]
								}, {
									"case":	16,
									"scores":	[-6.76060473719839]
								}, {
									"case":	17,
									"scores":	[-6.76060473719839]
								}, {
									"case":	18,
									"scores":	[-6.76060473719839]
								}, {
									"case":	19,
									"scores":	[-6.76060473719839]
								}, {
									"case":	20,
									"scores":	[-6.76060473719839]
								}, {
									"case":	21,
									"scores":	[-6.76060473719839]
								}, {
									"case":	22,
									"scores":	[-6.76060473719839]
								}, {
									"case":	23,
									"scores":	[-6.76060473719839]
								}, {
									"case":	24,
									"scores":	[-6.76060473719839]
								}, {
									"case":	25,
									"scores":	[-6.76060473719839]
								}, {
									"case":	26,
									"scores":	[-6.76060473719839]
								}, {
									"case":	27,
									"scores":	[-6.76060473719839]
								}, {
									"case":	28,
									"scores":	[-6.76060473719839]
								}, {
									"case":	29,
									"scores":	[-6.76060473719839]
								}, {
									"case":	30,
									"scores":	[-6.76060473719839]
								}]
						}]
				}, {
					"line":	278,
					"switches":	[{
							"switch":	6,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	279,
							"begin_column":	4,
							"end_line":	279,
							"end_column":	4,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L279\", 23, &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(min_width), sizeof (min_width), &(ap), sizeof (ap), &(adjust), sizeof (adjust), &(adjust_precision), sizeof (adjust_precision), &(pad_char), sizeof (pad_char), &(precision), sizeof (precision), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    break;\n", "if (__is_neg(\"\", \"L279\", 23, &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(min_width), sizeof (min_width), &(ap), sizeof (ap), &(adjust), sizeof (adjust), &(adjust_precision), sizeof (adjust_precision), &(pad_char), sizeof (pad_char), &(precision), sizeof (precision), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L279\", 23, &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(min_width), sizeof (min_width), &(ap), sizeof (ap), &(adjust), sizeof (adjust), &(adjust_precision), sizeof (adjust_precision), &(pad_char), sizeof (pad_char), &(precision), sizeof (precision), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L279\", 23, &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(min_width), sizeof (min_width), &(ap), sizeof (ap), &(adjust), sizeof (adjust), &(adjust_precision), sizeof (adjust_precision), &(pad_char), sizeof (pad_char), &(precision), sizeof (precision), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.74040202988087]
								}, {
									"case":	2,
									"scores":	[-6.74040202988087]
								}, {
									"case":	3,
									"scores":	[-6.74040202988087]
								}, {
									"case":	4,
									"scores":	[-6.74040202988087]
								}, {
									"case":	5,
									"scores":	[-6.74040202988087]
								}, {
									"case":	6,
									"scores":	[-6.74040202988087]
								}, {
									"case":	7,
									"scores":	[-6.74040202988087]
								}, {
									"case":	8,
									"scores":	[-6.74040202988087]
								}, {
									"case":	9,
									"scores":	[-6.74040202988087]
								}, {
									"case":	10,
									"scores":	[-6.74040202988087]
								}, {
									"case":	11,
									"scores":	[-6.74040202988087]
								}, {
									"case":	12,
									"scores":	[-6.74040202988087]
								}, {
									"case":	13,
									"scores":	[-6.74040202988087]
								}, {
									"case":	14,
									"scores":	[-6.74040202988087]
								}, {
									"case":	15,
									"scores":	[-6.74040202988087]
								}, {
									"case":	16,
									"scores":	[-6.74040202988087]
								}, {
									"case":	17,
									"scores":	[-6.74040202988087]
								}, {
									"case":	18,
									"scores":	[-6.74040202988087]
								}, {
									"case":	19,
									"scores":	[-6.74040202988087]
								}, {
									"case":	20,
									"scores":	[-6.74040202988087]
								}, {
									"case":	21,
									"scores":	[-6.74040202988087]
								}, {
									"case":	22,
									"scores":	[-6.74040202988087]
								}, {
									"case":	23,
									"scores":	[-6.74040202988087]
								}, {
									"case":	24,
									"scores":	[-6.74040202988087]
								}, {
									"case":	25,
									"scores":	[-6.74040202988087]
								}, {
									"case":	26,
									"scores":	[-6.74040202988087]
								}, {
									"case":	27,
									"scores":	[-6.74040202988087]
								}, {
									"case":	28,
									"scores":	[-6.74040202988087]
								}, {
									"case":	29,
									"scores":	[-6.74040202988087]
								}, {
									"case":	30,
									"scores":	[-6.74040202988087]
								}, {
									"case":	31,
									"scores":	[-6.74040202988087]
								}, {
									"case":	32,
									"scores":	[-6.74040202988087]
								}, {
									"case":	33,
									"scores":	[-6.74040202988087]
								}, {
									"case":	34,
									"scores":	[-6.74040202988087]
								}, {
									"case":	35,
									"scores":	[-6.74040202988087]
								}, {
									"case":	36,
									"scores":	[-6.74040202988087]
								}, {
									"case":	37,
									"scores":	[-6.74040202988087]
								}, {
									"case":	38,
									"scores":	[-6.74040202988087]
								}, {
									"case":	39,
									"scores":	[-6.74040202988087]
								}, {
									"case":	40,
									"scores":	[-6.74040202988087]
								}, {
									"case":	41,
									"scores":	[-6.74040202988087]
								}, {
									"case":	42,
									"scores":	[-6.74040202988087]
								}, {
									"case":	43,
									"scores":	[-6.74040202988087]
								}, {
									"case":	44,
									"scores":	[-6.74040202988087]
								}, {
									"case":	45,
									"scores":	[-6.74040202988087]
								}, {
									"case":	46,
									"scores":	[-6.74040202988087]
								}, {
									"case":	47,
									"scores":	[-6.74040202988087]
								}, {
									"case":	48,
									"scores":	[-6.74040202988087]
								}, {
									"case":	49,
									"scores":	[-6.74040202988087]
								}, {
									"case":	50,
									"scores":	[-6.74040202988087]
								}, {
									"case":	51,
									"scores":	[-6.74040202988087]
								}, {
									"case":	52,
									"scores":	[-6.74040202988087]
								}, {
									"case":	53,
									"scores":	[-6.74040202988087]
								}, {
									"case":	54,
									"scores":	[-6.74040202988087]
								}, {
									"case":	55,
									"scores":	[-6.74040202988087]
								}, {
									"case":	56,
									"scores":	[-6.74040202988087]
								}, {
									"case":	57,
									"scores":	[-6.74040202988087]
								}, {
									"case":	58,
									"scores":	[-6.74040202988087]
								}, {
									"case":	59,
									"scores":	[-6.74040202988087]
								}, {
									"case":	60,
									"scores":	[-6.74040202988087]
								}, {
									"case":	61,
									"scores":	[-6.74040202988087]
								}, {
									"case":	62,
									"scores":	[-6.74040202988087]
								}, {
									"case":	63,
									"scores":	[-6.74040202988087]
								}, {
									"case":	64,
									"scores":	[-6.74040202988087]
								}, {
									"case":	65,
									"scores":	[-6.74040202988087]
								}, {
									"case":	66,
									"scores":	[-6.74040202988087]
								}, {
									"case":	67,
									"scores":	[-6.74040202988087]
								}, {
									"case":	68,
									"scores":	[-6.74040202988087]
								}, {
									"case":	69,
									"scores":	[-6.74040202988087]
								}, {
									"case":	70,
									"scores":	[-6.74040202988087]
								}, {
									"case":	71,
									"scores":	[-6.74040202988087]
								}, {
									"case":	72,
									"scores":	[-6.74040202988087]
								}, {
									"case":	73,
									"scores":	[-6.74040202988087]
								}, {
									"case":	74,
									"scores":	[-6.74040202988087]
								}, {
									"case":	75,
									"scores":	[-6.74040202988087]
								}, {
									"case":	76,
									"scores":	[-6.74040202988087]
								}, {
									"case":	77,
									"scores":	[-6.74040202988087]
								}, {
									"case":	78,
									"scores":	[-6.74040202988087]
								}, {
									"case":	79,
									"scores":	[-6.74040202988087]
								}, {
									"case":	80,
									"scores":	[-6.74040202988087]
								}, {
									"case":	81,
									"scores":	[-6.74040202988087]
								}, {
									"case":	82,
									"scores":	[-6.74040202988087]
								}, {
									"case":	83,
									"scores":	[-6.74040202988087]
								}, {
									"case":	84,
									"scores":	[-6.74040202988087]
								}, {
									"case":	85,
									"scores":	[-6.74040202988087]
								}, {
									"case":	86,
									"scores":	[-6.74040202988087]
								}, {
									"case":	87,
									"scores":	[-6.74040202988087]
								}, {
									"case":	88,
									"scores":	[-6.74040202988087]
								}, {
									"case":	89,
									"scores":	[-6.74040202988087]
								}, {
									"case":	90,
									"scores":	[-6.74040202988087]
								}, {
									"case":	91,
									"scores":	[-6.74040202988087]
								}, {
									"case":	92,
									"scores":	[-6.74040202988087]
								}, {
									"case":	93,
									"scores":	[-6.74040202988087]
								}, {
									"case":	94,
									"scores":	[-6.74040202988087]
								}, {
									"case":	95,
									"scores":	[-6.74040202988087]
								}, {
									"case":	96,
									"scores":	[-6.74040202988087]
								}, {
									"case":	97,
									"scores":	[-6.74040202988087]
								}, {
									"case":	98,
									"scores":	[-6.74040202988087]
								}, {
									"case":	99,
									"scores":	[-6.74040202988087]
								}, {
									"case":	100,
									"scores":	[-6.74040202988087]
								}, {
									"case":	101,
									"scores":	[-6.74040202988087]
								}, {
									"case":	102,
									"scores":	[-6.74040202988087]
								}, {
									"case":	103,
									"scores":	[-6.74040202988087]
								}, {
									"case":	104,
									"scores":	[-6.74040202988087]
								}, {
									"case":	105,
									"scores":	[-6.74040202988087]
								}, {
									"case":	106,
									"scores":	[-6.74040202988087]
								}, {
									"case":	107,
									"scores":	[-6.74040202988087]
								}, {
									"case":	108,
									"scores":	[-6.74040202988087]
								}, {
									"case":	109,
									"scores":	[-6.74040202988087]
								}, {
									"case":	110,
									"scores":	[-6.74040202988087]
								}, {
									"case":	111,
									"scores":	[-6.74040202988087]
								}, {
									"case":	112,
									"scores":	[-6.74040202988087]
								}, {
									"case":	113,
									"scores":	[-6.74040202988087]
								}, {
									"case":	114,
									"scores":	[-6.74040202988087]
								}, {
									"case":	115,
									"scores":	[-6.74040202988087]
								}, {
									"case":	116,
									"scores":	[-6.74040202988087]
								}, {
									"case":	117,
									"scores":	[-6.74040202988087]
								}, {
									"case":	118,
									"scores":	[-6.74040202988087]
								}, {
									"case":	119,
									"scores":	[-6.74040202988087]
								}, {
									"case":	120,
									"scores":	[-6.74040202988087]
								}, {
									"case":	121,
									"scores":	[-6.74040202988087]
								}, {
									"case":	122,
									"scores":	[-6.74040202988087]
								}, {
									"case":	123,
									"scores":	[-6.74040202988087]
								}, {
									"case":	124,
									"scores":	[-6.74040202988087]
								}, {
									"case":	125,
									"scores":	[-6.74040202988087]
								}, {
									"case":	126,
									"scores":	[-6.74040202988087]
								}, {
									"case":	127,
									"scores":	[-6.74040202988087]
								}, {
									"case":	128,
									"scores":	[-6.74040202988087]
								}, {
									"case":	129,
									"scores":	[-6.74040202988087]
								}, {
									"case":	130,
									"scores":	[-6.74040202988087]
								}, {
									"case":	131,
									"scores":	[-6.74040202988087]
								}, {
									"case":	132,
									"scores":	[-6.74040202988087]
								}, {
									"case":	133,
									"scores":	[-6.74040202988087]
								}, {
									"case":	134,
									"scores":	[-6.74040202988087]
								}, {
									"case":	135,
									"scores":	[-6.74040202988087]
								}, {
									"case":	136,
									"scores":	[-6.74040202988087]
								}, {
									"case":	137,
									"scores":	[-6.74040202988087]
								}, {
									"case":	138,
									"scores":	[-6.74040202988087]
								}, {
									"case":	139,
									"scores":	[-6.74040202988087]
								}, {
									"case":	140,
									"scores":	[-6.74040202988087]
								}, {
									"case":	141,
									"scores":	[-6.74040202988087]
								}, {
									"case":	142,
									"scores":	[-6.74040202988087]
								}, {
									"case":	143,
									"scores":	[-6.74040202988087]
								}, {
									"case":	144,
									"scores":	[-6.74040202988087]
								}, {
									"case":	145,
									"scores":	[-6.74040202988087]
								}, {
									"case":	146,
									"scores":	[-6.74040202988087]
								}, {
									"case":	147,
									"scores":	[-6.74040202988087]
								}, {
									"case":	148,
									"scores":	[-6.74040202988087]
								}, {
									"case":	149,
									"scores":	[-6.74040202988087]
								}, {
									"case":	150,
									"scores":	[-6.74040202988087]
								}, {
									"case":	151,
									"scores":	[-6.74040202988087]
								}, {
									"case":	152,
									"scores":	[-6.74040202988087]
								}, {
									"case":	153,
									"scores":	[-6.74040202988087]
								}, {
									"case":	154,
									"scores":	[-6.74040202988087]
								}, {
									"case":	155,
									"scores":	[-6.74040202988087]
								}, {
									"case":	156,
									"scores":	[-6.74040202988087]
								}, {
									"case":	157,
									"scores":	[-6.74040202988087]
								}, {
									"case":	158,
									"scores":	[-6.74040202988087]
								}, {
									"case":	159,
									"scores":	[-6.74040202988087]
								}, {
									"case":	160,
									"scores":	[-6.74040202988087]
								}, {
									"case":	161,
									"scores":	[-6.74040202988087]
								}, {
									"case":	162,
									"scores":	[-6.74040202988087]
								}, {
									"case":	163,
									"scores":	[-6.74040202988087]
								}, {
									"case":	164,
									"scores":	[-6.74040202988087]
								}, {
									"case":	165,
									"scores":	[-6.74040202988087]
								}, {
									"case":	166,
									"scores":	[-6.74040202988087]
								}, {
									"case":	167,
									"scores":	[-6.74040202988087]
								}, {
									"case":	168,
									"scores":	[-6.74040202988087]
								}, {
									"case":	169,
									"scores":	[-6.74040202988087]
								}, {
									"case":	170,
									"scores":	[-6.74040202988087]
								}, {
									"case":	171,
									"scores":	[-6.74040202988087]
								}, {
									"case":	172,
									"scores":	[-6.74040202988087]
								}, {
									"case":	173,
									"scores":	[-6.74040202988087]
								}, {
									"case":	174,
									"scores":	[-6.74040202988087]
								}, {
									"case":	175,
									"scores":	[-6.74040202988087]
								}, {
									"case":	176,
									"scores":	[-6.74040202988087]
								}, {
									"case":	177,
									"scores":	[-6.74040202988087]
								}, {
									"case":	178,
									"scores":	[-6.74040202988087]
								}, {
									"case":	179,
									"scores":	[-6.74040202988087]
								}, {
									"case":	180,
									"scores":	[-6.74040202988087]
								}, {
									"case":	181,
									"scores":	[-6.74040202988087]
								}, {
									"case":	182,
									"scores":	[-6.74040202988087]
								}, {
									"case":	183,
									"scores":	[-6.74040202988087]
								}, {
									"case":	184,
									"scores":	[-6.74040202988087]
								}, {
									"case":	185,
									"scores":	[-6.74040202988087]
								}, {
									"case":	186,
									"scores":	[-6.74040202988087]
								}, {
									"case":	187,
									"scores":	[-6.74040202988087]
								}, {
									"case":	188,
									"scores":	[-6.74040202988087]
								}, {
									"case":	189,
									"scores":	[-6.74040202988087]
								}, {
									"case":	190,
									"scores":	[-6.74040202988087]
								}, {
									"case":	191,
									"scores":	[-6.74040202988087]
								}, {
									"case":	192,
									"scores":	[-6.74040202988087]
								}, {
									"case":	193,
									"scores":	[-6.74040202988087]
								}, {
									"case":	194,
									"scores":	[-6.74040202988087]
								}, {
									"case":	195,
									"scores":	[-6.74040202988087]
								}, {
									"case":	196,
									"scores":	[-6.74040202988087]
								}, {
									"case":	197,
									"scores":	[-6.74040202988087]
								}, {
									"case":	198,
									"scores":	[-6.74040202988087]
								}, {
									"case":	199,
									"scores":	[-6.74040202988087]
								}, {
									"case":	200,
									"scores":	[-6.74040202988087]
								}, {
									"case":	201,
									"scores":	[-6.74040202988087]
								}, {
									"case":	202,
									"scores":	[-6.74040202988087]
								}, {
									"case":	203,
									"scores":	[-6.74040202988087]
								}, {
									"case":	204,
									"scores":	[-6.74040202988087]
								}, {
									"case":	205,
									"scores":	[-6.74040202988087]
								}, {
									"case":	206,
									"scores":	[-6.74040202988087]
								}, {
									"case":	207,
									"scores":	[-6.74040202988087]
								}, {
									"case":	208,
									"scores":	[-6.74040202988087]
								}, {
									"case":	209,
									"scores":	[-6.74040202988087]
								}, {
									"case":	210,
									"scores":	[-6.74040202988087]
								}, {
									"case":	211,
									"scores":	[-6.74040202988087]
								}, {
									"case":	212,
									"scores":	[-6.74040202988087]
								}, {
									"case":	213,
									"scores":	[-6.74040202988087]
								}, {
									"case":	214,
									"scores":	[-6.74040202988087]
								}, {
									"case":	215,
									"scores":	[-6.74040202988087]
								}, {
									"case":	216,
									"scores":	[-6.74040202988087]
								}, {
									"case":	217,
									"scores":	[-6.74040202988087]
								}, {
									"case":	218,
									"scores":	[-6.74040202988087]
								}, {
									"case":	219,
									"scores":	[-6.74040202988087]
								}, {
									"case":	220,
									"scores":	[-6.74040202988087]
								}, {
									"case":	221,
									"scores":	[-6.74040202988087]
								}, {
									"case":	222,
									"scores":	[-6.74040202988087]
								}, {
									"case":	223,
									"scores":	[-6.74040202988087]
								}, {
									"case":	224,
									"scores":	[-6.74040202988087]
								}, {
									"case":	225,
									"scores":	[-6.74040202988087]
								}, {
									"case":	226,
									"scores":	[-6.74040202988087]
								}, {
									"case":	227,
									"scores":	[-6.74040202988087]
								}, {
									"case":	228,
									"scores":	[-6.74040202988087]
								}, {
									"case":	229,
									"scores":	[-6.74040202988087]
								}, {
									"case":	230,
									"scores":	[-6.74040202988087]
								}, {
									"case":	231,
									"scores":	[-6.74040202988087]
								}, {
									"case":	232,
									"scores":	[-6.74040202988087]
								}, {
									"case":	233,
									"scores":	[-6.74040202988087]
								}, {
									"case":	234,
									"scores":	[-6.74040202988087]
								}, {
									"case":	235,
									"scores":	[-6.74040202988087]
								}, {
									"case":	236,
									"scores":	[-6.74040202988087]
								}, {
									"case":	237,
									"scores":	[-6.74040202988087]
								}, {
									"case":	238,
									"scores":	[-6.74040202988087]
								}, {
									"case":	239,
									"scores":	[-6.74040202988087]
								}, {
									"case":	240,
									"scores":	[-6.74040202988087]
								}, {
									"case":	241,
									"scores":	[-6.74040202988087]
								}, {
									"case":	242,
									"scores":	[-6.74040202988087]
								}, {
									"case":	243,
									"scores":	[-6.74040202988087]
								}, {
									"case":	244,
									"scores":	[-6.74040202988087]
								}, {
									"case":	245,
									"scores":	[-6.74040202988087]
								}, {
									"case":	246,
									"scores":	[-6.74040202988087]
								}, {
									"case":	247,
									"scores":	[-6.74040202988087]
								}, {
									"case":	248,
									"scores":	[-6.74040202988087]
								}, {
									"case":	249,
									"scores":	[-6.74040202988087]
								}, {
									"case":	250,
									"scores":	[-6.74040202988087]
								}, {
									"case":	251,
									"scores":	[-6.74040202988087]
								}, {
									"case":	252,
									"scores":	[-6.74040202988087]
								}, {
									"case":	253,
									"scores":	[-6.74040202988087]
								}, {
									"case":	254,
									"scores":	[-6.74040202988087]
								}, {
									"case":	255,
									"scores":	[-6.74040202988087]
								}, {
									"case":	256,
									"scores":	[-6.74040202988087]
								}, {
									"case":	257,
									"scores":	[-6.74040202988087]
								}, {
									"case":	258,
									"scores":	[-6.74040202988087]
								}, {
									"case":	259,
									"scores":	[-6.74040202988087]
								}, {
									"case":	260,
									"scores":	[-6.74040202988087]
								}, {
									"case":	261,
									"scores":	[-6.74040202988087]
								}, {
									"case":	262,
									"scores":	[-6.74040202988087]
								}, {
									"case":	263,
									"scores":	[-6.74040202988087]
								}, {
									"case":	264,
									"scores":	[-6.74040202988087]
								}, {
									"case":	265,
									"scores":	[-6.74040202988087]
								}, {
									"case":	266,
									"scores":	[-6.74040202988087]
								}, {
									"case":	267,
									"scores":	[-6.74040202988087]
								}, {
									"case":	268,
									"scores":	[-6.74040202988087]
								}, {
									"case":	269,
									"scores":	[-6.74040202988087]
								}, {
									"case":	270,
									"scores":	[-6.74040202988087]
								}, {
									"case":	271,
									"scores":	[-6.74040202988087]
								}, {
									"case":	272,
									"scores":	[-6.74040202988087]
								}, {
									"case":	273,
									"scores":	[-6.74040202988087]
								}, {
									"case":	274,
									"scores":	[-6.74040202988087]
								}, {
									"case":	275,
									"scores":	[-6.74040202988087]
								}, {
									"case":	276,
									"scores":	[-6.74040202988087]
								}, {
									"case":	277,
									"scores":	[-6.74040202988087]
								}, {
									"case":	278,
									"scores":	[-6.74040202988087]
								}, {
									"case":	279,
									"scores":	[-6.74040202988087]
								}, {
									"case":	280,
									"scores":	[-6.74040202988087]
								}, {
									"case":	281,
									"scores":	[-6.74040202988087]
								}, {
									"case":	282,
									"scores":	[-6.74040202988087]
								}, {
									"case":	283,
									"scores":	[-6.74040202988087]
								}, {
									"case":	284,
									"scores":	[-6.74040202988087]
								}, {
									"case":	285,
									"scores":	[-6.74040202988087]
								}, {
									"case":	286,
									"scores":	[-6.74040202988087]
								}, {
									"case":	287,
									"scores":	[-6.74040202988087]
								}, {
									"case":	288,
									"scores":	[-6.74040202988087]
								}, {
									"case":	289,
									"scores":	[-6.74040202988087]
								}, {
									"case":	290,
									"scores":	[-6.74040202988087]
								}, {
									"case":	291,
									"scores":	[-6.74040202988087]
								}, {
									"case":	292,
									"scores":	[-6.74040202988087]
								}, {
									"case":	293,
									"scores":	[-6.74040202988087]
								}, {
									"case":	294,
									"scores":	[-6.74040202988087]
								}, {
									"case":	295,
									"scores":	[-6.74040202988087]
								}, {
									"case":	296,
									"scores":	[-6.74040202988087]
								}, {
									"case":	297,
									"scores":	[-6.74040202988087]
								}, {
									"case":	298,
									"scores":	[-6.74040202988087]
								}, {
									"case":	299,
									"scores":	[-6.74040202988087]
								}, {
									"case":	300,
									"scores":	[-6.74040202988087]
								}, {
									"case":	301,
									"scores":	[-6.74040202988087]
								}, {
									"case":	302,
									"scores":	[-6.74040202988087]
								}, {
									"case":	303,
									"scores":	[-6.74040202988087]
								}, {
									"case":	304,
									"scores":	[-6.74040202988087]
								}, {
									"case":	305,
									"scores":	[-6.74040202988087]
								}, {
									"case":	306,
									"scores":	[-6.74040202988087]
								}, {
									"case":	307,
									"scores":	[-6.74040202988087]
								}, {
									"case":	308,
									"scores":	[-6.74040202988087]
								}, {
									"case":	309,
									"scores":	[-6.74040202988087]
								}, {
									"case":	310,
									"scores":	[-6.74040202988087]
								}, {
									"case":	311,
									"scores":	[-6.74040202988087]
								}, {
									"case":	312,
									"scores":	[-6.74040202988087]
								}, {
									"case":	313,
									"scores":	[-6.74040202988087]
								}, {
									"case":	314,
									"scores":	[-6.74040202988087]
								}, {
									"case":	315,
									"scores":	[-6.74040202988087]
								}, {
									"case":	316,
									"scores":	[-6.74040202988087]
								}, {
									"case":	317,
									"scores":	[-6.74040202988087]
								}, {
									"case":	318,
									"scores":	[-6.74040202988087]
								}, {
									"case":	319,
									"scores":	[-6.74040202988087]
								}, {
									"case":	320,
									"scores":	[-6.74040202988087]
								}, {
									"case":	321,
									"scores":	[-6.74040202988087]
								}, {
									"case":	322,
									"scores":	[-6.74040202988087]
								}, {
									"case":	323,
									"scores":	[-6.74040202988087]
								}, {
									"case":	324,
									"scores":	[-6.74040202988087]
								}, {
									"case":	325,
									"scores":	[-6.74040202988087]
								}, {
									"case":	326,
									"scores":	[-6.74040202988087]
								}, {
									"case":	327,
									"scores":	[-6.74040202988087]
								}, {
									"case":	328,
									"scores":	[-6.74040202988087]
								}, {
									"case":	329,
									"scores":	[-6.74040202988087]
								}, {
									"case":	330,
									"scores":	[-6.74040202988087]
								}, {
									"case":	331,
									"scores":	[-6.74040202988087]
								}, {
									"case":	332,
									"scores":	[-6.74040202988087]
								}, {
									"case":	333,
									"scores":	[-6.74040202988087]
								}, {
									"case":	334,
									"scores":	[-6.74040202988087]
								}, {
									"case":	335,
									"scores":	[-6.74040202988087]
								}, {
									"case":	336,
									"scores":	[-6.74040202988087]
								}, {
									"case":	337,
									"scores":	[-6.74040202988087]
								}, {
									"case":	338,
									"scores":	[-6.74040202988087]
								}, {
									"case":	339,
									"scores":	[-6.74040202988087]
								}, {
									"case":	340,
									"scores":	[-6.74040202988087]
								}, {
									"case":	341,
									"scores":	[-6.74040202988087]
								}, {
									"case":	342,
									"scores":	[-6.74040202988087]
								}, {
									"case":	343,
									"scores":	[-6.74040202988087]
								}, {
									"case":	344,
									"scores":	[-6.74040202988087]
								}, {
									"case":	345,
									"scores":	[-6.74040202988087]
								}, {
									"case":	346,
									"scores":	[-6.74040202988087]
								}, {
									"case":	347,
									"scores":	[-6.74040202988087]
								}, {
									"case":	348,
									"scores":	[-6.74040202988087]
								}, {
									"case":	349,
									"scores":	[-6.74040202988087]
								}, {
									"case":	350,
									"scores":	[-6.74040202988087]
								}, {
									"case":	351,
									"scores":	[-6.74040202988087]
								}, {
									"case":	352,
									"scores":	[-6.74040202988087]
								}, {
									"case":	353,
									"scores":	[-6.74040202988087]
								}, {
									"case":	354,
									"scores":	[-6.74040202988087]
								}, {
									"case":	355,
									"scores":	[-6.74040202988087]
								}, {
									"case":	356,
									"scores":	[-6.74040202988087]
								}, {
									"case":	357,
									"scores":	[-6.74040202988087]
								}, {
									"case":	358,
									"scores":	[-6.74040202988087]
								}, {
									"case":	359,
									"scores":	[-6.74040202988087]
								}, {
									"case":	360,
									"scores":	[-6.74040202988087]
								}, {
									"case":	361,
									"scores":	[-6.74040202988087]
								}, {
									"case":	362,
									"scores":	[-6.74040202988087]
								}, {
									"case":	363,
									"scores":	[-6.74040202988087]
								}, {
									"case":	364,
									"scores":	[-6.74040202988087]
								}, {
									"case":	365,
									"scores":	[-6.74040202988087]
								}, {
									"case":	366,
									"scores":	[-6.74040202988087]
								}, {
									"case":	367,
									"scores":	[-6.74040202988087]
								}, {
									"case":	368,
									"scores":	[-6.74040202988087]
								}, {
									"case":	369,
									"scores":	[-6.74040202988087]
								}, {
									"case":	370,
									"scores":	[-6.74040202988087]
								}, {
									"case":	371,
									"scores":	[-6.74040202988087]
								}, {
									"case":	372,
									"scores":	[-6.74040202988087]
								}, {
									"case":	373,
									"scores":	[-6.74040202988087]
								}, {
									"case":	374,
									"scores":	[-6.74040202988087]
								}, {
									"case":	375,
									"scores":	[-6.74040202988087]
								}, {
									"case":	376,
									"scores":	[-6.74040202988087]
								}, {
									"case":	377,
									"scores":	[-6.74040202988087]
								}, {
									"case":	378,
									"scores":	[-6.74040202988087]
								}, {
									"case":	379,
									"scores":	[-6.74040202988087]
								}, {
									"case":	380,
									"scores":	[-6.74040202988087]
								}, {
									"case":	381,
									"scores":	[-6.74040202988087]
								}, {
									"case":	382,
									"scores":	[-6.74040202988087]
								}, {
									"case":	383,
									"scores":	[-6.74040202988087]
								}, {
									"case":	384,
									"scores":	[-6.74040202988087]
								}, {
									"case":	385,
									"scores":	[-6.74040202988087]
								}, {
									"case":	386,
									"scores":	[-6.74040202988087]
								}, {
									"case":	387,
									"scores":	[-6.74040202988087]
								}, {
									"case":	388,
									"scores":	[-6.74040202988087]
								}, {
									"case":	389,
									"scores":	[-6.74040202988087]
								}, {
									"case":	390,
									"scores":	[-6.74040202988087]
								}, {
									"case":	391,
									"scores":	[-6.74040202988087]
								}, {
									"case":	392,
									"scores":	[-6.74040202988087]
								}, {
									"case":	393,
									"scores":	[-6.74040202988087]
								}, {
									"case":	394,
									"scores":	[-6.74040202988087]
								}, {
									"case":	395,
									"scores":	[-6.74040202988087]
								}, {
									"case":	396,
									"scores":	[-6.74040202988087]
								}, {
									"case":	397,
									"scores":	[-6.74040202988087]
								}, {
									"case":	398,
									"scores":	[-6.74040202988087]
								}, {
									"case":	399,
									"scores":	[-6.74040202988087]
								}, {
									"case":	400,
									"scores":	[-6.74040202988087]
								}, {
									"case":	401,
									"scores":	[-6.74040202988087]
								}, {
									"case":	402,
									"scores":	[-6.74040202988087]
								}, {
									"case":	403,
									"scores":	[-6.74040202988087]
								}, {
									"case":	404,
									"scores":	[-6.74040202988087]
								}, {
									"case":	405,
									"scores":	[-6.74040202988087]
								}, {
									"case":	406,
									"scores":	[-6.74040202988087]
								}, {
									"case":	407,
									"scores":	[-6.74040202988087]
								}, {
									"case":	408,
									"scores":	[-6.74040202988087]
								}, {
									"case":	409,
									"scores":	[-6.74040202988087]
								}, {
									"case":	410,
									"scores":	[-6.74040202988087]
								}, {
									"case":	411,
									"scores":	[-6.74040202988087]
								}, {
									"case":	412,
									"scores":	[-6.74040202988087]
								}, {
									"case":	413,
									"scores":	[-6.74040202988087]
								}, {
									"case":	414,
									"scores":	[-6.74040202988087]
								}, {
									"case":	415,
									"scores":	[-6.74040202988087]
								}, {
									"case":	416,
									"scores":	[-6.74040202988087]
								}, {
									"case":	417,
									"scores":	[-6.74040202988087]
								}, {
									"case":	418,
									"scores":	[-6.74040202988087]
								}, {
									"case":	419,
									"scores":	[-6.74040202988087]
								}, {
									"case":	420,
									"scores":	[-6.74040202988087]
								}, {
									"case":	421,
									"scores":	[-6.74040202988087]
								}, {
									"case":	422,
									"scores":	[-6.74040202988087]
								}, {
									"case":	423,
									"scores":	[-6.74040202988087]
								}, {
									"case":	424,
									"scores":	[-6.74040202988087]
								}, {
									"case":	425,
									"scores":	[-6.74040202988087]
								}, {
									"case":	426,
									"scores":	[-6.74040202988087]
								}, {
									"case":	427,
									"scores":	[-6.74040202988087]
								}, {
									"case":	428,
									"scores":	[-6.74040202988087]
								}, {
									"case":	429,
									"scores":	[-6.74040202988087]
								}, {
									"case":	430,
									"scores":	[-6.74040202988087]
								}, {
									"case":	431,
									"scores":	[-9.27398476688087, -10.05315179158087, -8.07442993288087, -10.23307555968087, -10.13261304588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.447150839680871, -10.41005043968087, -9.66307652588087, -10.374900642880871, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.41005043968087, -10.374900642880871]
								}, {
									"case":	432,
									"scores":	[-9.27298476688087, -10.05215179158087, -8.07342993288087, -10.232075559680871, -10.13161304588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.44615083968087, -10.40905043968087, -9.66207652588087, -10.373900642880869, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.40905043968087, -10.373900642880869]
								}, {
									"case":	433,
									"scores":	[-9.27298476688087, -10.05215179158087, -8.07342993288087, -10.232075559680871, -10.13161304588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.44615083968087, -10.40905043968087, -9.66207652588087, -10.373900642880869, -10.16301152588087, -10.16301152588087, -10.16301152588087, -10.40905043968087, -10.373900642880869]
								}, {
									"case":	434,
									"scores":	[-9.27398476688087, -10.05315179158087, -8.07442993288087, -10.23307555968087, -10.13261304588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.447150839680871, -10.41005043968087, -9.66307652588087, -10.374900642880871, -10.16401152588087, -10.16401152588087, -10.16401152588087, -10.41005043968087, -10.374900642880871]
								}]
						}, {
							"switch":	7,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	279,
							"begin_column":	6,
							"end_line":	279,
							"end_column":	21,
							"patch_codes":	["if (!__is_neg(\"\", \"L279\", 23, &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(min_width), sizeof (min_width), &(ap), sizeof (ap), &(adjust), sizeof (adjust), &(adjust_precision), sizeof (adjust_precision), &(pad_char), sizeof (pad_char), &(precision), sizeof (precision), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    adjust_width = YES;\n", "{\n}\n", "adjust_width = (-128)", "adjust_width = (0 * adjust)", "adjust_width = (0 * adjust_precision)", "adjust_width = (0 * adjust_width)", "adjust_width = (0 * alternate_form)", "adjust_width = (0 * free_zcopy)", "adjust_width = (0 * i_num)", "adjust_width = (0 * is_negative)", "adjust_width = (0 * min_width)", "adjust_width = (0 * modifier)", "adjust_width = (0 * pad_char)", "adjust_width = (0 * precision)", "adjust_width = (0 * prefix_char)", "adjust_width = (0 * print_blank)", "adjust_width = (0 * print_sign)", "adjust_width = (0 * s_len)", "adjust_width = (0 * ui_num)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust != 0)", "adjust_width = (adjust != adjust_precision)", "adjust_width = (adjust != adjust_width)", "adjust_width = (adjust != alternate_form)", "adjust_width = (adjust != i_num)", "adjust_width = (adjust != is_negative)", "adjust_width = (adjust != modifier)", "adjust_width = (adjust != pad_char)", "adjust_width = (adjust != prefix_char)", "adjust_width = (adjust != print_blank)", "adjust_width = (adjust != print_sign)", "adjust_width = (adjust != ui_num)", "adjust_width = (adjust * adjust_precision)", "adjust_width = (adjust * adjust_width)", "adjust_width = (adjust * alternate_form)", "adjust_width = (adjust * free_zcopy)", "adjust_width = (adjust * i_num)", "adjust_width = (adjust * is_negative)", "adjust_width = (adjust * min_width)", "adjust_width = (adjust * modifier)", "adjust_width = (adjust * pad_char)", "adjust_width = (adjust * precision)", "adjust_width = (adjust * prefix_char)", "adjust_width = (adjust * print_blank)", "adjust_width = (adjust * print_sign)", "adjust_width = (adjust * s_len)", "adjust_width = (adjust * ui_num)", "adjust_width = (adjust + 0)", "adjust_width = (adjust + adjust_precision)", "adjust_width = (adjust + adjust_width)", "adjust_width = (adjust + alternate_form)", "adjust_width = (adjust + i_num)", "adjust_width = (adjust + is_negative)", "adjust_width = (adjust + modifier)", "adjust_width = (adjust + pad_char)", "adjust_width = (adjust + prefix_char)", "adjust_width = (adjust + print_blank)", "adjust_width = (adjust + print_sign)", "adjust_width = (adjust + ui_num)", "adjust_width = (adjust - 0)", "adjust_width = (adjust - adjust_precision)", "adjust_width = (adjust - adjust_width)", "adjust_width = (adjust - alternate_form)", "adjust_width = (adjust - i_num)", "adjust_width = (adjust - is_negative)", "adjust_width = (adjust - modifier)", "adjust_width = (adjust - pad_char)", "adjust_width = (adjust - prefix_char)", "adjust_width = (adjust - print_blank)", "adjust_width = (adjust - print_sign)", "adjust_width = (adjust - ui_num)", "adjust_width = (adjust == 0)", "adjust_width = (adjust == adjust_precision)", "adjust_width = (adjust == adjust_width)", "adjust_width = (adjust == alternate_form)", "adjust_width = (adjust == i_num)", "adjust_width = (adjust == is_negative)", "adjust_width = (adjust == modifier)", "adjust_width = (adjust == pad_char)", "adjust_width = (adjust == prefix_char)", "adjust_width = (adjust == print_blank)", "adjust_width = (adjust == print_sign)", "adjust_width = (adjust == ui_num)", "adjust_width = (adjust_precision != 0)", "adjust_width = (adjust_precision != adjust_width)", "adjust_width = (adjust_precision != is_negative)", "adjust_width = (adjust_precision * adjust)", "adjust_width = (adjust_precision * adjust_width)", "adjust_width = (adjust_precision * alternate_form)", "adjust_width = (adjust_precision * free_zcopy)", "adjust_width = (adjust_precision * i_num)", "adjust_width = (adjust_precision * is_negative)", "adjust_width = (adjust_precision * min_width)", "adjust_width = (adjust_precision * modifier)", "adjust_width = (adjust_precision * pad_char)", "adjust_width = (adjust_precision * precision)", "adjust_width = (adjust_precision * prefix_char)", "adjust_width = (adjust_precision * print_blank)", "adjust_width = (adjust_precision * print_sign)", "adjust_width = (adjust_precision * s_len)", "adjust_width = (adjust_precision * ui_num)", "adjust_width = (adjust_precision + 0)", "adjust_width = (adjust_precision + adjust_width)", "adjust_width = (adjust_precision + is_negative)", "adjust_width = (adjust_precision - 0)", "adjust_width = (adjust_precision - adjust_width)", "adjust_width = (adjust_precision - is_negative)", "adjust_width = (adjust_precision == 0)", "adjust_width = (adjust_precision == adjust_width)", "adjust_width = (adjust_precision == is_negative)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width != 0)", "adjust_width = (adjust_width != is_negative)", "adjust_width = (adjust_width * adjust)", "adjust_width = (adjust_width * adjust_precision)", "adjust_width = (adjust_width * alternate_form)", "adjust_width = (adjust_width * free_zcopy)", "adjust_width = (adjust_width * i_num)", "adjust_width = (adjust_width * is_negative)", "adjust_width = (adjust_width * min_width)", "adjust_width = (adjust_width * modifier)", "adjust_width = (adjust_width * pad_char)", "adjust_width = (adjust_width * precision)", "adjust_width = (adjust_width * prefix_char)", "adjust_width = (adjust_width * print_blank)", "adjust_width = (adjust_width * print_sign)", "adjust_width = (adjust_width * s_len)", "adjust_width = (adjust_width * ui_num)", "adjust_width = (adjust_width + 0)", "adjust_width = (adjust_width + is_negative)", "adjust_width = (adjust_width - 0)", "adjust_width = (adjust_width - is_negative)", "adjust_width = (adjust_width == 0)", "adjust_width = (adjust_width == is_negative)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form != 0)", "adjust_width = (alternate_form != adjust_precision)", "adjust_width = (alternate_form != adjust_width)", "adjust_width = (alternate_form != is_negative)", "adjust_width = (alternate_form != print_blank)", "adjust_width = (alternate_form != print_sign)", "adjust_width = (alternate_form * adjust)", "adjust_width = (alternate_form * adjust_precision)", "adjust_width = (alternate_form * adjust_width)", "adjust_width = (alternate_form * free_zcopy)", "adjust_width = (alternate_form * i_num)", "adjust_width = (alternate_form * is_negative)", "adjust_width = (alternate_form * min_width)", "adjust_width = (alternate_form * modifier)", "adjust_width = (alternate_form * pad_char)", "adjust_width = (alternate_form * precision)", "adjust_width = (alternate_form * prefix_char)", "adjust_width = (alternate_form * print_blank)", "adjust_width = (alternate_form * print_sign)", "adjust_width = (alternate_form * s_len)", "adjust_width = (alternate_form * ui_num)", "adjust_width = (alternate_form + 0)", "adjust_width = (alternate_form + adjust_precision)", "adjust_width = (alternate_form + adjust_width)", "adjust_width = (alternate_form + is_negative)", "adjust_width = (alternate_form + print_blank)", "adjust_width = (alternate_form + print_sign)", "adjust_width = (alternate_form - 0)", "adjust_width = (alternate_form - adjust_precision)", "adjust_width = (alternate_form - adjust_width)", "adjust_width = (alternate_form - is_negative)", "adjust_width = (alternate_form - print_blank)", "adjust_width = (alternate_form - print_sign)", "adjust_width = (alternate_form == 0)", "adjust_width = (alternate_form == adjust_precision)", "adjust_width = (alternate_form == adjust_width)", "adjust_width = (alternate_form == is_negative)", "adjust_width = (alternate_form == print_blank)", "adjust_width = (alternate_form == print_sign)", "adjust_width = (alternate_form)", "adjust_width = (ap != 0)", "adjust_width = (ap == 0)", "adjust_width = (char_buf != 0)", "adjust_width = (char_buf == 0)", "adjust_width = (fmt != 0)", "adjust_width = (fmt == 0)", "adjust_width = (fp_num != 0)", "adjust_width = (fp_num == 0)", "adjust_width = (free_zcopy != 0)", "adjust_width = (free_zcopy != adjust)", "adjust_width = (free_zcopy != adjust_precision)", "adjust_width = (free_zcopy != adjust_width)", "adjust_width = (free_zcopy != alternate_form)", "adjust_width = (free_zcopy != i_num)", "adjust_width = (free_zcopy != is_negative)", "adjust_width = (free_zcopy != min_width)", "adjust_width = (free_zcopy != modifier)", "adjust_width = (free_zcopy != pad_char)", "adjust_width = (free_zcopy != precision)", "adjust_width = (free_zcopy != prefix_char)", "adjust_width = (free_zcopy != print_blank)", "adjust_width = (free_zcopy != print_sign)", "adjust_width = (free_zcopy != ui_num)", "adjust_width = (free_zcopy * adjust)", "adjust_width = (free_zcopy * adjust_precision)", "adjust_width = (free_zcopy * adjust_width)", "adjust_width = (free_zcopy * alternate_form)", "adjust_width = (free_zcopy * i_num)", "adjust_width = (free_zcopy * is_negative)", "adjust_width = (free_zcopy * min_width)", "adjust_width = (free_zcopy * modifier)", "adjust_width = (free_zcopy * pad_char)", "adjust_width = (free_zcopy * precision)", "adjust_width = (free_zcopy * prefix_char)", "adjust_width = (free_zcopy * print_blank)", "adjust_width = (free_zcopy * print_sign)", "adjust_width = (free_zcopy * s_len)", "adjust_width = (free_zcopy * ui_num)", "adjust_width = (free_zcopy + 0)", "adjust_width = (free_zcopy + adjust)", "adjust_width = (free_zcopy + adjust_precision)", "adjust_width = (free_zcopy + adjust_width)", "adjust_width = (free_zcopy + alternate_form)", "adjust_width = (free_zcopy + i_num)", "adjust_width = (free_zcopy + is_negative)", "adjust_width = (free_zcopy + min_width)", "adjust_width = (free_zcopy + modifier)", "adjust_width = (free_zcopy + pad_char)", "adjust_width = (free_zcopy + precision)", "adjust_width = (free_zcopy + prefix_char)", "adjust_width = (free_zcopy + print_blank)", "adjust_width = (free_zcopy + print_sign)", "adjust_width = (free_zcopy + ui_num)", "adjust_width = (free_zcopy - 0)", "adjust_width = (free_zcopy - adjust)", "adjust_width = (free_zcopy - adjust_precision)", "adjust_width = (free_zcopy - adjust_width)", "adjust_width = (free_zcopy - alternate_form)", "adjust_width = (free_zcopy - i_num)", "adjust_width = (free_zcopy - is_negative)", "adjust_width = (free_zcopy - min_width)", "adjust_width = (free_zcopy - modifier)", "adjust_width = (free_zcopy - pad_char)", "adjust_width = (free_zcopy - precision)", "adjust_width = (free_zcopy - prefix_char)", "adjust_width = (free_zcopy - print_blank)", "adjust_width = (free_zcopy - print_sign)", "adjust_width = (free_zcopy - ui_num)", "adjust_width = (free_zcopy == 0)", "adjust_width = (free_zcopy == adjust)", "adjust_width = (free_zcopy == adjust_precision)", "adjust_width = (free_zcopy == adjust_width)", "adjust_width = (free_zcopy == alternate_form)", "adjust_width = (free_zcopy == i_num)", "adjust_width = (free_zcopy == is_negative)", "adjust_width = (free_zcopy == min_width)", "adjust_width = (free_zcopy == modifier)", "adjust_width = (free_zcopy == pad_char)", "adjust_width = (free_zcopy == precision)", "adjust_width = (free_zcopy == prefix_char)", "adjust_width = (free_zcopy == print_blank)", "adjust_width = (free_zcopy == print_sign)", "adjust_width = (free_zcopy == ui_num)", "adjust_width = (i_num != 0)", "adjust_width = (i_num != adjust_precision)", "adjust_width = (i_num != adjust_width)", "adjust_width = (i_num != alternate_form)", "adjust_width = (i_num != is_negative)", "adjust_width = (i_num != modifier)", "adjust_width = (i_num != print_blank)", "adjust_width = (i_num != print_sign)", "adjust_width = (i_num != ui_num)", "adjust_width = (i_num * adjust)", "adjust_width = (i_num * adjust_precision)", "adjust_width = (i_num * adjust_width)", "adjust_width = (i_num * alternate_form)", "adjust_width = (i_num * free_zcopy)", "adjust_width = (i_num * is_negative)", "adjust_width = (i_num * min_width)", "adjust_width = (i_num * modifier)", "adjust_width = (i_num * pad_char)", "adjust_width = (i_num * precision)", "adjust_width = (i_num * prefix_char)", "adjust_width = (i_num * print_blank)", "adjust_width = (i_num * print_sign)", "adjust_width = (i_num * s_len)", "adjust_width = (i_num * ui_num)", "adjust_width = (i_num + 0)", "adjust_width = (i_num + adjust_precision)", "adjust_width = (i_num + adjust_width)", "adjust_width = (i_num + alternate_form)", "adjust_width = (i_num + is_negative)", "adjust_width = (i_num + modifier)", "adjust_width = (i_num + print_blank)", "adjust_width = (i_num + print_sign)", "adjust_width = (i_num + ui_num)", "adjust_width = (i_num - 0)", "adjust_width = (i_num - adjust_precision)", "adjust_width = (i_num - adjust_width)", "adjust_width = (i_num - alternate_form)", "adjust_width = (i_num - is_negative)", "adjust_width = (i_num - modifier)", "adjust_width = (i_num - print_blank)", "adjust_width = (i_num - print_sign)", "adjust_width = (i_num - ui_num)", "adjust_width = (i_num == 0)", "adjust_width = (i_num == adjust_precision)", "adjust_width = (i_num == adjust_width)", "adjust_width = (i_num == alternate_form)", "adjust_width = (i_num == is_negative)", "adjust_width = (i_num == modifier)", "adjust_width = (i_num == print_blank)", "adjust_width = (i_num == print_sign)", "adjust_width = (i_num == ui_num)", "adjust_width = (is_negative != 0)", "adjust_width = (is_negative * adjust)", "adjust_width = (is_negative * adjust_precision)", "adjust_width = (is_negative * adjust_width)", "adjust_width = (is_negative * alternate_form)", "adjust_width = (is_negative * free_zcopy)", "adjust_width = (is_negative * i_num)", "adjust_width = (is_negative * min_width)", "adjust_width = (is_negative * modifier)", "adjust_width = (is_negative * pad_char)", "adjust_width = (is_negative * precision)", "adjust_width = (is_negative * prefix_char)", "adjust_width = (is_negative * print_blank)", "adjust_width = (is_negative * print_sign)", "adjust_width = (is_negative * s_len)", "adjust_width = (is_negative * ui_num)", "adjust_width = (is_negative + 0)", "adjust_width = (is_negative - 0)", "adjust_width = (is_negative == 0)", "adjust_width = (lconv != 0)", "adjust_width = (lconv == 0)", "adjust_width = (min_width != 0)", "adjust_width = (min_width != adjust)", "adjust_width = (min_width != adjust_precision)", "adjust_width = (min_width != adjust_width)", "adjust_width = (min_width != alternate_form)", "adjust_width = (min_width != i_num)", "adjust_width = (min_width != is_negative)", "adjust_width = (min_width != modifier)", "adjust_width = (min_width != pad_char)", "adjust_width = (min_width != precision)", "adjust_width = (min_width != prefix_char)", "adjust_width = (min_width != print_blank)", "adjust_width = (min_width != print_sign)", "adjust_width = (min_width != ui_num)", "adjust_width = (min_width * adjust)", "adjust_width = (min_width * adjust_precision)", "adjust_width = (min_width * adjust_width)", "adjust_width = (min_width * alternate_form)", "adjust_width = (min_width * free_zcopy)", "adjust_width = (min_width * i_num)", "adjust_width = (min_width * is_negative)", "adjust_width = (min_width * modifier)", "adjust_width = (min_width * pad_char)", "adjust_width = (min_width * precision)", "adjust_width = (min_width * prefix_char)", "adjust_width = (min_width * print_blank)", "adjust_width = (min_width * print_sign)", "adjust_width = (min_width * s_len)", "adjust_width = (min_width * ui_num)", "adjust_width = (min_width + 0)", "adjust_width = (min_width + adjust)", "adjust_width = (min_width + adjust_precision)", "adjust_width = (min_width + adjust_width)", "adjust_width = (min_width + alternate_form)", "adjust_width = (min_width + i_num)", "adjust_width = (min_width + is_negative)", "adjust_width = (min_width + modifier)", "adjust_width = (min_width + pad_char)", "adjust_width = (min_width + precision)", "adjust_width = (min_width + prefix_char)", "adjust_width = (min_width + print_blank)", "adjust_width = (min_width + print_sign)", "adjust_width = (min_width + ui_num)", "adjust_width = (min_width - 0)", "adjust_width = (min_width - adjust)", "adjust_width = (min_width - adjust_precision)", "adjust_width = (min_width - adjust_width)", "adjust_width = (min_width - alternate_form)", "adjust_width = (min_width - i_num)", "adjust_width = (min_width - is_negative)", "adjust_width = (min_width - modifier)", "adjust_width = (min_width - pad_char)", "adjust_width = (min_width - precision)", "adjust_width = (min_width - prefix_char)", "adjust_width = (min_width - print_blank)", "adjust_width = (min_width - print_sign)", "adjust_width = (min_width - ui_num)", "adjust_width = (min_width == 0)", "adjust_width = (min_width == adjust)", "adjust_width = (min_width == adjust_precision)", "adjust_width = (min_width == adjust_width)", "adjust_width = (min_width == alternate_form)", "adjust_width = (min_width == i_num)", "adjust_width = (min_width == is_negative)", "adjust_width = (min_width == modifier)", "adjust_width = (min_width == pad_char)", "adjust_width = (min_width == precision)", "adjust_width = (min_width == prefix_char)", "adjust_width = (min_width == print_blank)", "adjust_width = (min_width == print_sign)", "adjust_width = (min_width == ui_num)", "adjust_width = (modifier != 0)", "adjust_width = (modifier != adjust_precision)", "adjust_width = (modifier != adjust_width)", "adjust_width = (modifier != alternate_form)", "adjust_width = (modifier != is_negative)", "adjust_width = (modifier != print_blank)", "adjust_width = (modifier != print_sign)", "adjust_width = (modifier * adjust)", "adjust_width = (modifier * adjust_precision)", "adjust_width = (modifier * adjust_width)", "adjust_width = (modifier * alternate_form)", "adjust_width = (modifier * free_zcopy)", "adjust_width = (modifier * i_num)", "adjust_width = (modifier * is_negative)", "adjust_width = (modifier * min_width)", "adjust_width = (modifier * pad_char)", "adjust_width = (modifier * precision)", "adjust_width = (modifier * prefix_char)", "adjust_width = (modifier * print_blank)", "adjust_width = (modifier * print_sign)", "adjust_width = (modifier * s_len)", "adjust_width = (modifier * ui_num)", "adjust_width = (modifier + 0)", "adjust_width = (modifier + adjust_precision)", "adjust_width = (modifier + adjust_width)", "adjust_width = (modifier + alternate_form)", "adjust_width = (modifier + is_negative)", "adjust_width = (modifier + print_blank)", "adjust_width = (modifier + print_sign)", "adjust_width = (modifier - 0)", "adjust_width = (modifier - adjust_precision)", "adjust_width = (modifier - adjust_width)", "adjust_width = (modifier - alternate_form)", "adjust_width = (modifier - is_negative)", "adjust_width = (modifier - print_blank)", "adjust_width = (modifier - print_sign)", "adjust_width = (modifier == 0)", "adjust_width = (modifier == adjust_precision)", "adjust_width = (modifier == adjust_width)", "adjust_width = (modifier == alternate_form)", "adjust_width = (modifier == is_negative)", "adjust_width = (modifier == print_blank)", "adjust_width = (modifier == print_sign)", "adjust_width = (num_buf != 0)", "adjust_width = (num_buf == 0)", "adjust_width = (pad_char != 0)", "adjust_width = (pad_char != adjust_precision)", "adjust_width = (pad_char != adjust_width)", "adjust_width = (pad_char != alternate_form)", "adjust_width = (pad_char != i_num)", "adjust_width = (pad_char != is_negative)", "adjust_width = (pad_char != modifier)", "adjust_width = (pad_char != prefix_char)", "adjust_width = (pad_char != print_blank)", "adjust_width = (pad_char != print_sign)", "adjust_width = (pad_char != ui_num)", "adjust_width = (pad_char * adjust)", "adjust_width = (pad_char * adjust_precision)", "adjust_width = (pad_char * adjust_width)", "adjust_width = (pad_char * alternate_form)", "adjust_width = (pad_char * free_zcopy)", "adjust_width = (pad_char * i_num)", "adjust_width = (pad_char * is_negative)", "adjust_width = (pad_char * min_width)", "adjust_width = (pad_char * modifier)", "adjust_width = (pad_char * precision)", "adjust_width = (pad_char * prefix_char)", "adjust_width = (pad_char * print_blank)", "adjust_width = (pad_char * print_sign)", "adjust_width = (pad_char * s_len)", "adjust_width = (pad_char * ui_num)", "adjust_width = (pad_char + 0)", "adjust_width = (pad_char + adjust_precision)", "adjust_width = (pad_char + adjust_width)", "adjust_width = (pad_char + alternate_form)", "adjust_width = (pad_char + i_num)", "adjust_width = (pad_char + is_negative)", "adjust_width = (pad_char + modifier)", "adjust_width = (pad_char + prefix_char)", "adjust_width = (pad_char + print_blank)", "adjust_width = (pad_char + print_sign)", "adjust_width = (pad_char + ui_num)", "adjust_width = (pad_char - 0)", "adjust_width = (pad_char - adjust_precision)", "adjust_width = (pad_char - adjust_width)", "adjust_width = (pad_char - alternate_form)", "adjust_width = (pad_char - i_num)", "adjust_width = (pad_char - is_negative)", "adjust_width = (pad_char - modifier)", "adjust_width = (pad_char - prefix_char)", "adjust_width = (pad_char - print_blank)", "adjust_width = (pad_char - print_sign)", "adjust_width = (pad_char - ui_num)", "adjust_width = (pad_char == 0)", "adjust_width = (pad_char == adjust_precision)", "adjust_width = (pad_char == adjust_width)", "adjust_width = (pad_char == alternate_form)", "adjust_width = (pad_char == i_num)", "adjust_width = (pad_char == is_negative)", "adjust_width = (pad_char == modifier)", "adjust_width = (pad_char == prefix_char)", "adjust_width = (pad_char == print_blank)", "adjust_width = (pad_char == print_sign)", "adjust_width = (pad_char == ui_num)", "adjust_width = (precision != 0)", "adjust_width = (precision != adjust)", "adjust_width = (precision != adjust_precision)", "adjust_width = (precision != adjust_width)", "adjust_width = (precision != alternate_form)", "adjust_width = (precision != i_num)", "adjust_width = (precision != is_negative)", "adjust_width = (precision != modifier)", "adjust_width = (precision != pad_char)", "adjust_width = (precision != prefix_char)", "adjust_width = (precision != print_blank)", "adjust_width = (precision != print_sign)", "adjust_width = (precision != ui_num)", "adjust_width = (precision * adjust)", "adjust_width = (precision * adjust_precision)", "adjust_width = (precision * adjust_width)", "adjust_width = (precision * alternate_form)", "adjust_width = (precision * free_zcopy)", "adjust_width = (precision * i_num)", "adjust_width = (precision * is_negative)", "adjust_width = (precision * min_width)", "adjust_width = (precision * modifier)", "adjust_width = (precision * pad_char)", "adjust_width = (precision * prefix_char)", "adjust_width = (precision * print_blank)", "adjust_width = (precision * print_sign)", "adjust_width = (precision * s_len)", "adjust_width = (precision * ui_num)", "adjust_width = (precision + 0)", "adjust_width = (precision + adjust)", "adjust_width = (precision + adjust_precision)", "adjust_width = (precision + adjust_width)", "adjust_width = (precision + alternate_form)", "adjust_width = (precision + i_num)", "adjust_width = (precision + is_negative)", "adjust_width = (precision + modifier)", "adjust_width = (precision + pad_char)", "adjust_width = (precision + prefix_char)", "adjust_width = (precision + print_blank)", "adjust_width = (precision + print_sign)", "adjust_width = (precision + ui_num)", "adjust_width = (precision - 0)", "adjust_width = (precision - adjust)", "adjust_width = (precision - adjust_precision)", "adjust_width = (precision - adjust_width)", "adjust_width = (precision - alternate_form)", "adjust_width = (precision - i_num)", "adjust_width = (precision - is_negative)", "adjust_width = (precision - modifier)", "adjust_width = (precision - pad_char)", "adjust_width = (precision - prefix_char)", "adjust_width = (precision - print_blank)", "adjust_width = (precision - print_sign)", "adjust_width = (precision - ui_num)", "adjust_width = (precision == 0)", "adjust_width = (precision == adjust)", "adjust_width = (precision == adjust_precision)", "adjust_width = (precision == adjust_width)", "adjust_width = (precision == alternate_form)", "adjust_width = (precision == i_num)", "adjust_width = (precision == is_negative)", "adjust_width = (precision == modifier)", "adjust_width = (precision == pad_char)", "adjust_width = (precision == prefix_char)", "adjust_width = (precision == print_blank)", "adjust_width = (precision == print_sign)", "adjust_width = (precision == ui_num)", "adjust_width = (prefix_char != 0)", "adjust_width = (prefix_char != adjust_precision)", "adjust_width = (prefix_char != adjust_width)", "adjust_width = (prefix_char != alternate_form)", "adjust_width = (prefix_char != i_num)", "adjust_width = (prefix_char != is_negative)", "adjust_width = (prefix_char != modifier)", "adjust_width = (prefix_char != print_blank)", "adjust_width = (prefix_char != print_sign)", "adjust_width = (prefix_char != ui_num)", "adjust_width = (prefix_char * adjust)", "adjust_width = (prefix_char * adjust_precision)", "adjust_width = (prefix_char * adjust_width)", "adjust_width = (prefix_char * alternate_form)", "adjust_width = (prefix_char * free_zcopy)", "adjust_width = (prefix_char * i_num)", "adjust_width = (prefix_char * is_negative)", "adjust_width = (prefix_char * min_width)", "adjust_width = (prefix_char * modifier)", "adjust_width = (prefix_char * pad_char)", "adjust_width = (prefix_char * precision)", "adjust_width = (prefix_char * print_blank)", "adjust_width = (prefix_char * print_sign)", "adjust_width = (prefix_char * s_len)", "adjust_width = (prefix_char * ui_num)", "adjust_width = (prefix_char + 0)", "adjust_width = (prefix_char + adjust_precision)", "adjust_width = (prefix_char + adjust_width)", "adjust_width = (prefix_char + alternate_form)", "adjust_width = (prefix_char + i_num)", "adjust_width = (prefix_char + is_negative)", "adjust_width = (prefix_char + modifier)", "adjust_width = (prefix_char + print_blank)", "adjust_width = (prefix_char + print_sign)", "adjust_width = (prefix_char + ui_num)", "adjust_width = (prefix_char - 0)", "adjust_width = (prefix_char - adjust_precision)", "adjust_width = (prefix_char - adjust_width)", "adjust_width = (prefix_char - alternate_form)", "adjust_width = (prefix_char - i_num)", "adjust_width = (prefix_char - is_negative)", "adjust_width = (prefix_char - modifier)", "adjust_width = (prefix_char - print_blank)", "adjust_width = (prefix_char - print_sign)", "adjust_width = (prefix_char - ui_num)", "adjust_width = (prefix_char == 0)", "adjust_width = (prefix_char == adjust_precision)", "adjust_width = (prefix_char == adjust_width)", "adjust_width = (prefix_char == alternate_form)", "adjust_width = (prefix_char == i_num)", "adjust_width = (prefix_char == is_negative)", "adjust_width = (prefix_char == modifier)", "adjust_width = (prefix_char == print_blank)", "adjust_width = (prefix_char == print_sign)", "adjust_width = (prefix_char == ui_num)", "adjust_width = (print_blank != 0)", "adjust_width = (print_blank != adjust_precision)", "adjust_width = (print_blank != adjust_width)", "adjust_width = (print_blank != is_negative)", "adjust_width = (print_blank * adjust)", "adjust_width = (print_blank * adjust_precision)", "adjust_width = (print_blank * adjust_width)", "adjust_width = (print_blank * alternate_form)", "adjust_width = (print_blank * free_zcopy)", "adjust_width = (print_blank * i_num)", "adjust_width = (print_blank * is_negative)", "adjust_width = (print_blank * min_width)", "adjust_width = (print_blank * modifier)", "adjust_width = (print_blank * pad_char)", "adjust_width = (print_blank * precision)", "adjust_width = (print_blank * prefix_char)", "adjust_width = (print_blank * print_sign)", "adjust_width = (print_blank * s_len)", "adjust_width = (print_blank * ui_num)", "adjust_width = (print_blank + 0)", "adjust_width = (print_blank + adjust_precision)", "adjust_width = (print_blank + adjust_width)", "adjust_width = (print_blank + is_negative)", "adjust_width = (print_blank - 0)", "adjust_width = (print_blank - adjust_precision)", "adjust_width = (print_blank - adjust_width)", "adjust_width = (print_blank - is_negative)", "adjust_width = (print_blank == 0)", "adjust_width = (print_blank == adjust_precision)", "adjust_width = (print_blank == adjust_width)", "adjust_width = (print_blank == is_negative)", "adjust_width = (print_blank)", "adjust_width = (print_sign != 0)", "adjust_width = (print_sign != adjust_precision)", "adjust_width = (print_sign != adjust_width)", "adjust_width = (print_sign != is_negative)", "adjust_width = (print_sign != print_blank)", "adjust_width = (print_sign * adjust)", "adjust_width = (print_sign * adjust_precision)", "adjust_width = (print_sign * adjust_width)", "adjust_width = (print_sign * alternate_form)", "adjust_width = (print_sign * free_zcopy)", "adjust_width = (print_sign * i_num)", "adjust_width = (print_sign * is_negative)", "adjust_width = (print_sign * min_width)", "adjust_width = (print_sign * modifier)", "adjust_width = (print_sign * pad_char)", "adjust_width = (print_sign * precision)", "adjust_width = (print_sign * prefix_char)", "adjust_width = (print_sign * print_blank)", "adjust_width = (print_sign * s_len)", "adjust_width = (print_sign * ui_num)", "adjust_width = (print_sign + 0)", "adjust_width = (print_sign + adjust_precision)", "adjust_width = (print_sign + adjust_width)", "adjust_width = (print_sign + is_negative)", "adjust_width = (print_sign + print_blank)", "adjust_width = (print_sign - 0)", "adjust_width = (print_sign - adjust_precision)", "adjust_width = (print_sign - adjust_width)", "adjust_width = (print_sign - is_negative)", "adjust_width = (print_sign - print_blank)", "adjust_width = (print_sign == 0)", "adjust_width = (print_sign == adjust_precision)", "adjust_width = (print_sign == adjust_width)", "adjust_width = (print_sign == is_negative)", "adjust_width = (print_sign == print_blank)", "adjust_width = (print_sign)", "adjust_width = (q != 0)", "adjust_width = (q == 0)", "adjust_width = (s != 0)", "adjust_width = (s != q)", "adjust_width = (s == 0)", "adjust_width = (s == q)", "adjust_width = (s_len != 0)", "adjust_width = (s_len != adjust)", "adjust_width = (s_len != adjust_precision)", "adjust_width = (s_len != adjust_width)", "adjust_width = (s_len != alternate_form)", "adjust_width = (s_len != free_zcopy)", "adjust_width = (s_len != i_num)", "adjust_width = (s_len != is_negative)", "adjust_width = (s_len != min_width)", "adjust_width = (s_len != modifier)", "adjust_width = (s_len != pad_char)", "adjust_width = (s_len != precision)", "adjust_width = (s_len != prefix_char)", "adjust_width = (s_len != print_blank)", "adjust_width = (s_len != print_sign)", "adjust_width = (s_len != ui_num)", "adjust_width = (s_len * adjust)", "adjust_width = (s_len * adjust_precision)", "adjust_width = (s_len * adjust_width)", "adjust_width = (s_len * alternate_form)", "adjust_width = (s_len * free_zcopy)", "adjust_width = (s_len * i_num)", "adjust_width = (s_len * is_negative)", "adjust_width = (s_len * min_width)", "adjust_width = (s_len * modifier)", "adjust_width = (s_len * pad_char)", "adjust_width = (s_len * precision)", "adjust_width = (s_len * prefix_char)", "adjust_width = (s_len * print_blank)", "adjust_width = (s_len * print_sign)", "adjust_width = (s_len * ui_num)", "adjust_width = (s_len + 0)", "adjust_width = (s_len + adjust)", "adjust_width = (s_len + adjust_precision)", "adjust_width = (s_len + adjust_width)", "adjust_width = (s_len + alternate_form)", "adjust_width = (s_len + free_zcopy)", "adjust_width = (s_len + i_num)", "adjust_width = (s_len + is_negative)", "adjust_width = (s_len + min_width)", "adjust_width = (s_len + modifier)", "adjust_width = (s_len + pad_char)", "adjust_width = (s_len + precision)", "adjust_width = (s_len + prefix_char)", "adjust_width = (s_len + print_blank)", "adjust_width = (s_len + print_sign)", "adjust_width = (s_len + ui_num)", "adjust_width = (s_len - 0)", "adjust_width = (s_len - adjust)", "adjust_width = (s_len - adjust_precision)", "adjust_width = (s_len - adjust_width)", "adjust_width = (s_len - alternate_form)", "adjust_width = (s_len - free_zcopy)", "adjust_width = (s_len - i_num)", "adjust_width = (s_len - is_negative)", "adjust_width = (s_len - min_width)", "adjust_width = (s_len - modifier)", "adjust_width = (s_len - pad_char)", "adjust_width = (s_len - precision)", "adjust_width = (s_len - prefix_char)", "adjust_width = (s_len - print_blank)", "adjust_width = (s_len - print_sign)", "adjust_width = (s_len - ui_num)", "adjust_width = (s_len == 0)", "adjust_width = (s_len == adjust)", "adjust_width = (s_len == adjust_precision)", "adjust_width = (s_len == adjust_width)", "adjust_width = (s_len == alternate_form)", "adjust_width = (s_len == free_zcopy)", "adjust_width = (s_len == i_num)", "adjust_width = (s_len == is_negative)", "adjust_width = (s_len == min_width)", "adjust_width = (s_len == modifier)", "adjust_width = (s_len == pad_char)", "adjust_width = (s_len == precision)", "adjust_width = (s_len == prefix_char)", "adjust_width = (s_len == print_blank)", "adjust_width = (s_len == print_sign)", "adjust_width = (s_len == ui_num)", "adjust_width = (ui_num != 0)", "adjust_width = (ui_num != adjust_precision)", "adjust_width = (ui_num != adjust_width)", "adjust_width = (ui_num != alternate_form)", "adjust_width = (ui_num != is_negative)", "adjust_width = (ui_num != modifier)", "adjust_width = (ui_num != print_blank)", "adjust_width = (ui_num != print_sign)", "adjust_width = (ui_num * adjust)", "adjust_width = (ui_num * adjust_precision)", "adjust_width = (ui_num * adjust_width)", "adjust_width = (ui_num * alternate_form)", "adjust_width = (ui_num * free_zcopy)", "adjust_width = (ui_num * i_num)", "adjust_width = (ui_num * is_negative)", "adjust_width = (ui_num * min_width)", "adjust_width = (ui_num * modifier)", "adjust_width = (ui_num * pad_char)", "adjust_width = (ui_num * precision)", "adjust_width = (ui_num * prefix_char)", "adjust_width = (ui_num * print_blank)", "adjust_width = (ui_num * print_sign)", "adjust_width = (ui_num * s_len)", "adjust_width = (ui_num + 0)", "adjust_width = (ui_num + adjust_precision)", "adjust_width = (ui_num + adjust_width)", "adjust_width = (ui_num + alternate_form)", "adjust_width = (ui_num + is_negative)", "adjust_width = (ui_num + modifier)", "adjust_width = (ui_num + print_blank)", "adjust_width = (ui_num + print_sign)", "adjust_width = (ui_num - 0)", "adjust_width = (ui_num - adjust_precision)", "adjust_width = (ui_num - adjust_width)", "adjust_width = (ui_num - alternate_form)", "adjust_width = (ui_num - is_negative)", "adjust_width = (ui_num - modifier)", "adjust_width = (ui_num - print_blank)", "adjust_width = (ui_num - print_sign)", "adjust_width = (ui_num == 0)", "adjust_width = (ui_num == adjust_precision)", "adjust_width = (ui_num == adjust_width)", "adjust_width = (ui_num == alternate_form)", "adjust_width = (ui_num == is_negative)", "adjust_width = (ui_num == modifier)", "adjust_width = (ui_num == print_blank)", "adjust_width = (ui_num == print_sign)", "adjust_width = (xbuf != 0)", "adjust_width = (xbuf == 0)", "adjust_width = (zcopy != 0)", "adjust_width = (zcopy == 0)", "adjust_width = (zvp != 0)", "adjust_width = (zvp == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.75702191088087, -9.80863814988087, -5.97969119888087, -9.57175528988087, -8.62391533088087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -9.94231828988087, -9.64796748988087, -8.56806835988087, -9.35933938988087, -8.89007938988087, -8.89007938988087, -8.89007938988087, -9.64796748988087, -9.35933938988087]
								}, {
									"case":	2,
									"scores":	[-6.74040202988087]
								}, {
									"case":	3,
									"scores":	[-6.74040202988087]
								}, {
									"case":	4,
									"scores":	[-6.74040202988087]
								}, {
									"case":	5,
									"scores":	[-6.74040202988087]
								}, {
									"case":	6,
									"scores":	[-6.74040202988087]
								}, {
									"case":	7,
									"scores":	[-6.74040202988087]
								}, {
									"case":	8,
									"scores":	[-6.74040202988087]
								}, {
									"case":	9,
									"scores":	[-6.74040202988087]
								}, {
									"case":	10,
									"scores":	[-6.74040202988087]
								}, {
									"case":	11,
									"scores":	[-6.74040202988087]
								}, {
									"case":	12,
									"scores":	[-6.74040202988087]
								}, {
									"case":	13,
									"scores":	[-6.74040202988087]
								}, {
									"case":	14,
									"scores":	[-6.74040202988087]
								}, {
									"case":	15,
									"scores":	[-6.74040202988087]
								}, {
									"case":	16,
									"scores":	[-6.74040202988087]
								}, {
									"case":	17,
									"scores":	[-6.74040202988087]
								}, {
									"case":	18,
									"scores":	[-6.74040202988087]
								}, {
									"case":	19,
									"scores":	[-6.74040202988087]
								}, {
									"case":	20,
									"scores":	[-6.74040202988087]
								}, {
									"case":	21,
									"scores":	[-6.74040202988087]
								}, {
									"case":	22,
									"scores":	[-6.74040202988087]
								}, {
									"case":	23,
									"scores":	[-6.74040202988087]
								}, {
									"case":	24,
									"scores":	[-6.74040202988087]
								}, {
									"case":	25,
									"scores":	[-6.74040202988087]
								}, {
									"case":	26,
									"scores":	[-6.74040202988087]
								}, {
									"case":	27,
									"scores":	[-6.74040202988087]
								}, {
									"case":	28,
									"scores":	[-6.74040202988087]
								}, {
									"case":	29,
									"scores":	[-6.74040202988087]
								}, {
									"case":	30,
									"scores":	[-6.74040202988087]
								}, {
									"case":	31,
									"scores":	[-6.74040202988087]
								}, {
									"case":	32,
									"scores":	[-6.74040202988087]
								}, {
									"case":	33,
									"scores":	[-6.74040202988087]
								}, {
									"case":	34,
									"scores":	[-6.74040202988087]
								}, {
									"case":	35,
									"scores":	[-6.74040202988087]
								}, {
									"case":	36,
									"scores":	[-6.74040202988087]
								}, {
									"case":	37,
									"scores":	[-6.74040202988087]
								}, {
									"case":	38,
									"scores":	[-6.74040202988087]
								}, {
									"case":	39,
									"scores":	[-6.74040202988087]
								}, {
									"case":	40,
									"scores":	[-6.74040202988087]
								}, {
									"case":	41,
									"scores":	[-6.74040202988087]
								}, {
									"case":	42,
									"scores":	[-6.74040202988087]
								}, {
									"case":	43,
									"scores":	[-6.74040202988087]
								}, {
									"case":	44,
									"scores":	[-6.74040202988087]
								}, {
									"case":	45,
									"scores":	[-6.74040202988087]
								}, {
									"case":	46,
									"scores":	[-6.74040202988087]
								}, {
									"case":	47,
									"scores":	[-6.74040202988087]
								}, {
									"case":	48,
									"scores":	[-6.74040202988087]
								}, {
									"case":	49,
									"scores":	[-6.74040202988087]
								}, {
									"case":	50,
									"scores":	[-6.74040202988087]
								}, {
									"case":	51,
									"scores":	[-6.74040202988087]
								}, {
									"case":	52,
									"scores":	[-6.74040202988087]
								}, {
									"case":	53,
									"scores":	[-6.74040202988087]
								}, {
									"case":	54,
									"scores":	[-6.74040202988087]
								}, {
									"case":	55,
									"scores":	[-6.74040202988087]
								}, {
									"case":	56,
									"scores":	[-6.74040202988087]
								}, {
									"case":	57,
									"scores":	[-6.74040202988087]
								}, {
									"case":	58,
									"scores":	[-6.74040202988087]
								}, {
									"case":	59,
									"scores":	[-6.74040202988087]
								}, {
									"case":	60,
									"scores":	[-6.74040202988087]
								}, {
									"case":	61,
									"scores":	[-6.74040202988087]
								}, {
									"case":	62,
									"scores":	[-6.74040202988087]
								}, {
									"case":	63,
									"scores":	[-6.74040202988087]
								}, {
									"case":	64,
									"scores":	[-6.74040202988087]
								}, {
									"case":	65,
									"scores":	[-6.74040202988087]
								}, {
									"case":	66,
									"scores":	[-6.74040202988087]
								}, {
									"case":	67,
									"scores":	[-6.74040202988087]
								}, {
									"case":	68,
									"scores":	[-6.74040202988087]
								}, {
									"case":	69,
									"scores":	[-6.74040202988087]
								}, {
									"case":	70,
									"scores":	[-6.74040202988087]
								}, {
									"case":	71,
									"scores":	[-6.74040202988087]
								}, {
									"case":	72,
									"scores":	[-6.74040202988087]
								}, {
									"case":	73,
									"scores":	[-6.74040202988087]
								}, {
									"case":	74,
									"scores":	[-6.74040202988087]
								}, {
									"case":	75,
									"scores":	[-6.74040202988087]
								}, {
									"case":	76,
									"scores":	[-6.74040202988087]
								}, {
									"case":	77,
									"scores":	[-6.74040202988087]
								}, {
									"case":	78,
									"scores":	[-6.74040202988087]
								}, {
									"case":	79,
									"scores":	[-6.74040202988087]
								}, {
									"case":	80,
									"scores":	[-6.74040202988087]
								}, {
									"case":	81,
									"scores":	[-6.74040202988087]
								}, {
									"case":	82,
									"scores":	[-6.74040202988087]
								}, {
									"case":	83,
									"scores":	[-6.74040202988087]
								}, {
									"case":	84,
									"scores":	[-6.74040202988087]
								}, {
									"case":	85,
									"scores":	[-6.74040202988087]
								}, {
									"case":	86,
									"scores":	[-6.74040202988087]
								}, {
									"case":	87,
									"scores":	[-6.74040202988087]
								}, {
									"case":	88,
									"scores":	[-6.74040202988087]
								}, {
									"case":	89,
									"scores":	[-6.74040202988087]
								}, {
									"case":	90,
									"scores":	[-6.74040202988087]
								}, {
									"case":	91,
									"scores":	[-6.74040202988087]
								}, {
									"case":	92,
									"scores":	[-6.74040202988087]
								}, {
									"case":	93,
									"scores":	[-6.74040202988087]
								}, {
									"case":	94,
									"scores":	[-6.74040202988087]
								}, {
									"case":	95,
									"scores":	[-6.74040202988087]
								}, {
									"case":	96,
									"scores":	[-6.74040202988087]
								}, {
									"case":	97,
									"scores":	[-6.74040202988087]
								}, {
									"case":	98,
									"scores":	[-6.74040202988087]
								}, {
									"case":	99,
									"scores":	[-6.74040202988087]
								}, {
									"case":	100,
									"scores":	[-6.74040202988087]
								}, {
									"case":	101,
									"scores":	[-6.74040202988087]
								}, {
									"case":	102,
									"scores":	[-6.74040202988087]
								}, {
									"case":	103,
									"scores":	[-6.74040202988087]
								}, {
									"case":	104,
									"scores":	[-6.74040202988087]
								}, {
									"case":	105,
									"scores":	[-6.74040202988087]
								}, {
									"case":	106,
									"scores":	[-6.74040202988087]
								}, {
									"case":	107,
									"scores":	[-6.74040202988087]
								}, {
									"case":	108,
									"scores":	[-6.74040202988087]
								}, {
									"case":	109,
									"scores":	[-6.74040202988087]
								}, {
									"case":	110,
									"scores":	[-6.74040202988087]
								}, {
									"case":	111,
									"scores":	[-6.74040202988087]
								}, {
									"case":	112,
									"scores":	[-6.74040202988087]
								}, {
									"case":	113,
									"scores":	[-6.74040202988087]
								}, {
									"case":	114,
									"scores":	[-6.74040202988087]
								}, {
									"case":	115,
									"scores":	[-6.74040202988087]
								}, {
									"case":	116,
									"scores":	[-6.74040202988087]
								}, {
									"case":	117,
									"scores":	[-6.74040202988087]
								}, {
									"case":	118,
									"scores":	[-6.74040202988087]
								}, {
									"case":	119,
									"scores":	[-6.74040202988087]
								}, {
									"case":	120,
									"scores":	[-6.74040202988087]
								}, {
									"case":	121,
									"scores":	[-6.74040202988087]
								}, {
									"case":	122,
									"scores":	[-6.74040202988087]
								}, {
									"case":	123,
									"scores":	[-6.74040202988087]
								}, {
									"case":	124,
									"scores":	[-6.74040202988087]
								}, {
									"case":	125,
									"scores":	[-6.74040202988087]
								}, {
									"case":	126,
									"scores":	[-6.74040202988087]
								}, {
									"case":	127,
									"scores":	[-6.74040202988087]
								}, {
									"case":	128,
									"scores":	[-6.74040202988087]
								}, {
									"case":	129,
									"scores":	[-6.74040202988087]
								}, {
									"case":	130,
									"scores":	[-6.74040202988087]
								}, {
									"case":	131,
									"scores":	[-6.74040202988087]
								}, {
									"case":	132,
									"scores":	[-6.74040202988087]
								}, {
									"case":	133,
									"scores":	[-6.74040202988087]
								}, {
									"case":	134,
									"scores":	[-6.74040202988087]
								}, {
									"case":	135,
									"scores":	[-6.74040202988087]
								}, {
									"case":	136,
									"scores":	[-6.74040202988087]
								}, {
									"case":	137,
									"scores":	[-6.74040202988087]
								}, {
									"case":	138,
									"scores":	[-6.74040202988087]
								}, {
									"case":	139,
									"scores":	[-6.74040202988087]
								}, {
									"case":	140,
									"scores":	[-6.74040202988087]
								}, {
									"case":	141,
									"scores":	[-6.74040202988087]
								}, {
									"case":	142,
									"scores":	[-6.74040202988087]
								}, {
									"case":	143,
									"scores":	[-6.74040202988087]
								}, {
									"case":	144,
									"scores":	[-6.74040202988087]
								}, {
									"case":	145,
									"scores":	[-6.74040202988087]
								}, {
									"case":	146,
									"scores":	[-6.74040202988087]
								}, {
									"case":	147,
									"scores":	[-6.74040202988087]
								}, {
									"case":	148,
									"scores":	[-6.74040202988087]
								}, {
									"case":	149,
									"scores":	[-6.74040202988087]
								}, {
									"case":	150,
									"scores":	[-6.74040202988087]
								}, {
									"case":	151,
									"scores":	[-6.74040202988087]
								}, {
									"case":	152,
									"scores":	[-6.74040202988087]
								}, {
									"case":	153,
									"scores":	[-6.74040202988087]
								}, {
									"case":	154,
									"scores":	[-6.74040202988087]
								}, {
									"case":	155,
									"scores":	[-6.74040202988087]
								}, {
									"case":	156,
									"scores":	[-6.74040202988087]
								}, {
									"case":	157,
									"scores":	[-6.74040202988087]
								}, {
									"case":	158,
									"scores":	[-6.74040202988087]
								}, {
									"case":	159,
									"scores":	[-6.74040202988087]
								}, {
									"case":	160,
									"scores":	[-6.74040202988087]
								}, {
									"case":	161,
									"scores":	[-6.74040202988087]
								}, {
									"case":	162,
									"scores":	[-6.74040202988087]
								}, {
									"case":	163,
									"scores":	[-6.74040202988087]
								}, {
									"case":	164,
									"scores":	[-6.74040202988087]
								}, {
									"case":	165,
									"scores":	[-6.74040202988087]
								}, {
									"case":	166,
									"scores":	[-6.74040202988087]
								}, {
									"case":	167,
									"scores":	[-6.74040202988087]
								}, {
									"case":	168,
									"scores":	[-6.74040202988087]
								}, {
									"case":	169,
									"scores":	[-6.74040202988087]
								}, {
									"case":	170,
									"scores":	[-6.74040202988087]
								}, {
									"case":	171,
									"scores":	[-6.74040202988087]
								}, {
									"case":	172,
									"scores":	[-6.74040202988087]
								}, {
									"case":	173,
									"scores":	[-6.74040202988087]
								}, {
									"case":	174,
									"scores":	[-6.74040202988087]
								}, {
									"case":	175,
									"scores":	[-6.74040202988087]
								}, {
									"case":	176,
									"scores":	[-6.74040202988087]
								}, {
									"case":	177,
									"scores":	[-6.74040202988087]
								}, {
									"case":	178,
									"scores":	[-6.74040202988087]
								}, {
									"case":	179,
									"scores":	[-6.74040202988087]
								}, {
									"case":	180,
									"scores":	[-6.74040202988087]
								}, {
									"case":	181,
									"scores":	[-6.74040202988087]
								}, {
									"case":	182,
									"scores":	[-6.74040202988087]
								}, {
									"case":	183,
									"scores":	[-6.74040202988087]
								}, {
									"case":	184,
									"scores":	[-6.74040202988087]
								}, {
									"case":	185,
									"scores":	[-6.74040202988087]
								}, {
									"case":	186,
									"scores":	[-6.74040202988087]
								}, {
									"case":	187,
									"scores":	[-6.74040202988087]
								}, {
									"case":	188,
									"scores":	[-6.74040202988087]
								}, {
									"case":	189,
									"scores":	[-6.74040202988087]
								}, {
									"case":	190,
									"scores":	[-6.74040202988087]
								}, {
									"case":	191,
									"scores":	[-6.74040202988087]
								}, {
									"case":	192,
									"scores":	[-6.74040202988087]
								}, {
									"case":	193,
									"scores":	[-6.74040202988087]
								}, {
									"case":	194,
									"scores":	[-6.74040202988087]
								}, {
									"case":	195,
									"scores":	[-6.74040202988087]
								}, {
									"case":	196,
									"scores":	[-6.74040202988087]
								}, {
									"case":	197,
									"scores":	[-6.74040202988087]
								}, {
									"case":	198,
									"scores":	[-6.74040202988087]
								}, {
									"case":	199,
									"scores":	[-6.74040202988087]
								}, {
									"case":	200,
									"scores":	[-6.74040202988087]
								}, {
									"case":	201,
									"scores":	[-6.74040202988087]
								}, {
									"case":	202,
									"scores":	[-6.74040202988087]
								}, {
									"case":	203,
									"scores":	[-6.74040202988087]
								}, {
									"case":	204,
									"scores":	[-6.74040202988087]
								}, {
									"case":	205,
									"scores":	[-6.74040202988087]
								}, {
									"case":	206,
									"scores":	[-6.74040202988087]
								}, {
									"case":	207,
									"scores":	[-6.74040202988087]
								}, {
									"case":	208,
									"scores":	[-6.74040202988087]
								}, {
									"case":	209,
									"scores":	[-6.74040202988087]
								}, {
									"case":	210,
									"scores":	[-6.74040202988087]
								}, {
									"case":	211,
									"scores":	[-6.74040202988087]
								}, {
									"case":	212,
									"scores":	[-6.74040202988087]
								}, {
									"case":	213,
									"scores":	[-6.74040202988087]
								}, {
									"case":	214,
									"scores":	[-6.74040202988087]
								}, {
									"case":	215,
									"scores":	[-6.74040202988087]
								}, {
									"case":	216,
									"scores":	[-6.74040202988087]
								}, {
									"case":	217,
									"scores":	[-6.74040202988087]
								}, {
									"case":	218,
									"scores":	[-6.74040202988087]
								}, {
									"case":	219,
									"scores":	[-6.74040202988087]
								}, {
									"case":	220,
									"scores":	[-6.74040202988087]
								}, {
									"case":	221,
									"scores":	[-6.74040202988087]
								}, {
									"case":	222,
									"scores":	[-6.74040202988087]
								}, {
									"case":	223,
									"scores":	[-6.74040202988087]
								}, {
									"case":	224,
									"scores":	[-6.74040202988087]
								}, {
									"case":	225,
									"scores":	[-6.74040202988087]
								}, {
									"case":	226,
									"scores":	[-6.74040202988087]
								}, {
									"case":	227,
									"scores":	[-6.74040202988087]
								}, {
									"case":	228,
									"scores":	[-6.74040202988087]
								}, {
									"case":	229,
									"scores":	[-6.74040202988087]
								}, {
									"case":	230,
									"scores":	[-6.74040202988087]
								}, {
									"case":	231,
									"scores":	[-6.74040202988087]
								}, {
									"case":	232,
									"scores":	[-6.74040202988087]
								}, {
									"case":	233,
									"scores":	[-6.74040202988087]
								}, {
									"case":	234,
									"scores":	[-6.74040202988087]
								}, {
									"case":	235,
									"scores":	[-6.74040202988087]
								}, {
									"case":	236,
									"scores":	[-6.74040202988087]
								}, {
									"case":	237,
									"scores":	[-6.74040202988087]
								}, {
									"case":	238,
									"scores":	[-6.74040202988087]
								}, {
									"case":	239,
									"scores":	[-6.74040202988087]
								}, {
									"case":	240,
									"scores":	[-6.74040202988087]
								}, {
									"case":	241,
									"scores":	[-6.74040202988087]
								}, {
									"case":	242,
									"scores":	[-6.74040202988087]
								}, {
									"case":	243,
									"scores":	[-6.74040202988087]
								}, {
									"case":	244,
									"scores":	[-6.74040202988087]
								}, {
									"case":	245,
									"scores":	[-6.74040202988087]
								}, {
									"case":	246,
									"scores":	[-6.74040202988087]
								}, {
									"case":	247,
									"scores":	[-6.74040202988087]
								}, {
									"case":	248,
									"scores":	[-6.74040202988087]
								}, {
									"case":	249,
									"scores":	[-6.74040202988087]
								}, {
									"case":	250,
									"scores":	[-6.74040202988087]
								}, {
									"case":	251,
									"scores":	[-6.74040202988087]
								}, {
									"case":	252,
									"scores":	[-6.74040202988087]
								}, {
									"case":	253,
									"scores":	[-6.74040202988087]
								}, {
									"case":	254,
									"scores":	[-6.74040202988087]
								}, {
									"case":	255,
									"scores":	[-6.74040202988087]
								}, {
									"case":	256,
									"scores":	[-6.74040202988087]
								}, {
									"case":	257,
									"scores":	[-6.74040202988087]
								}, {
									"case":	258,
									"scores":	[-6.74040202988087]
								}, {
									"case":	259,
									"scores":	[-6.74040202988087]
								}, {
									"case":	260,
									"scores":	[-6.74040202988087]
								}, {
									"case":	261,
									"scores":	[-6.74040202988087]
								}, {
									"case":	262,
									"scores":	[-6.74040202988087]
								}, {
									"case":	263,
									"scores":	[-6.74040202988087]
								}, {
									"case":	264,
									"scores":	[-6.74040202988087]
								}, {
									"case":	265,
									"scores":	[-6.74040202988087]
								}, {
									"case":	266,
									"scores":	[-6.74040202988087]
								}, {
									"case":	267,
									"scores":	[-6.74040202988087]
								}, {
									"case":	268,
									"scores":	[-6.74040202988087]
								}, {
									"case":	269,
									"scores":	[-6.74040202988087]
								}, {
									"case":	270,
									"scores":	[-6.74040202988087]
								}, {
									"case":	271,
									"scores":	[-6.74040202988087]
								}, {
									"case":	272,
									"scores":	[-6.74040202988087]
								}, {
									"case":	273,
									"scores":	[-6.74040202988087]
								}, {
									"case":	274,
									"scores":	[-6.74040202988087]
								}, {
									"case":	275,
									"scores":	[-6.74040202988087]
								}, {
									"case":	276,
									"scores":	[-6.74040202988087]
								}, {
									"case":	277,
									"scores":	[-6.74040202988087]
								}, {
									"case":	278,
									"scores":	[-6.74040202988087]
								}, {
									"case":	279,
									"scores":	[-6.74040202988087]
								}, {
									"case":	280,
									"scores":	[-6.74040202988087]
								}, {
									"case":	281,
									"scores":	[-6.74040202988087]
								}, {
									"case":	282,
									"scores":	[-6.74040202988087]
								}, {
									"case":	283,
									"scores":	[-6.74040202988087]
								}, {
									"case":	284,
									"scores":	[-6.74040202988087]
								}, {
									"case":	285,
									"scores":	[-6.74040202988087]
								}, {
									"case":	286,
									"scores":	[-6.74040202988087]
								}, {
									"case":	287,
									"scores":	[-6.74040202988087]
								}, {
									"case":	288,
									"scores":	[-6.74040202988087]
								}, {
									"case":	289,
									"scores":	[-6.74040202988087]
								}, {
									"case":	290,
									"scores":	[-6.74040202988087]
								}, {
									"case":	291,
									"scores":	[-6.74040202988087]
								}, {
									"case":	292,
									"scores":	[-6.74040202988087]
								}, {
									"case":	293,
									"scores":	[-6.74040202988087]
								}, {
									"case":	294,
									"scores":	[-6.74040202988087]
								}, {
									"case":	295,
									"scores":	[-6.74040202988087]
								}, {
									"case":	296,
									"scores":	[-6.74040202988087]
								}, {
									"case":	297,
									"scores":	[-6.74040202988087]
								}, {
									"case":	298,
									"scores":	[-6.74040202988087]
								}, {
									"case":	299,
									"scores":	[-6.74040202988087]
								}, {
									"case":	300,
									"scores":	[-6.74040202988087]
								}, {
									"case":	301,
									"scores":	[-6.74040202988087]
								}, {
									"case":	302,
									"scores":	[-6.74040202988087]
								}, {
									"case":	303,
									"scores":	[-6.74040202988087]
								}, {
									"case":	304,
									"scores":	[-6.74040202988087]
								}, {
									"case":	305,
									"scores":	[-6.74040202988087]
								}, {
									"case":	306,
									"scores":	[-6.74040202988087]
								}, {
									"case":	307,
									"scores":	[-6.74040202988087]
								}, {
									"case":	308,
									"scores":	[-6.74040202988087]
								}, {
									"case":	309,
									"scores":	[-6.74040202988087]
								}, {
									"case":	310,
									"scores":	[-6.74040202988087]
								}, {
									"case":	311,
									"scores":	[-6.74040202988087]
								}, {
									"case":	312,
									"scores":	[-6.74040202988087]
								}, {
									"case":	313,
									"scores":	[-6.74040202988087]
								}, {
									"case":	314,
									"scores":	[-6.74040202988087]
								}, {
									"case":	315,
									"scores":	[-6.74040202988087]
								}, {
									"case":	316,
									"scores":	[-6.74040202988087]
								}, {
									"case":	317,
									"scores":	[-6.74040202988087]
								}, {
									"case":	318,
									"scores":	[-6.74040202988087]
								}, {
									"case":	319,
									"scores":	[-6.74040202988087]
								}, {
									"case":	320,
									"scores":	[-6.74040202988087]
								}, {
									"case":	321,
									"scores":	[-6.74040202988087]
								}, {
									"case":	322,
									"scores":	[-6.74040202988087]
								}, {
									"case":	323,
									"scores":	[-6.74040202988087]
								}, {
									"case":	324,
									"scores":	[-6.74040202988087]
								}, {
									"case":	325,
									"scores":	[-6.74040202988087]
								}, {
									"case":	326,
									"scores":	[-6.74040202988087]
								}, {
									"case":	327,
									"scores":	[-6.74040202988087]
								}, {
									"case":	328,
									"scores":	[-6.74040202988087]
								}, {
									"case":	329,
									"scores":	[-6.74040202988087]
								}, {
									"case":	330,
									"scores":	[-6.74040202988087]
								}, {
									"case":	331,
									"scores":	[-6.74040202988087]
								}, {
									"case":	332,
									"scores":	[-6.74040202988087]
								}, {
									"case":	333,
									"scores":	[-6.74040202988087]
								}, {
									"case":	334,
									"scores":	[-6.74040202988087]
								}, {
									"case":	335,
									"scores":	[-6.74040202988087]
								}, {
									"case":	336,
									"scores":	[-6.74040202988087]
								}, {
									"case":	337,
									"scores":	[-6.74040202988087]
								}, {
									"case":	338,
									"scores":	[-6.74040202988087]
								}, {
									"case":	339,
									"scores":	[-6.74040202988087]
								}, {
									"case":	340,
									"scores":	[-6.74040202988087]
								}, {
									"case":	341,
									"scores":	[-6.74040202988087]
								}, {
									"case":	342,
									"scores":	[-6.74040202988087]
								}, {
									"case":	343,
									"scores":	[-6.74040202988087]
								}, {
									"case":	344,
									"scores":	[-6.74040202988087]
								}, {
									"case":	345,
									"scores":	[-6.74040202988087]
								}, {
									"case":	346,
									"scores":	[-6.74040202988087]
								}, {
									"case":	347,
									"scores":	[-6.74040202988087]
								}, {
									"case":	348,
									"scores":	[-6.74040202988087]
								}, {
									"case":	349,
									"scores":	[-6.74040202988087]
								}, {
									"case":	350,
									"scores":	[-6.74040202988087]
								}, {
									"case":	351,
									"scores":	[-6.74040202988087]
								}, {
									"case":	352,
									"scores":	[-6.74040202988087]
								}, {
									"case":	353,
									"scores":	[-6.74040202988087]
								}, {
									"case":	354,
									"scores":	[-6.74040202988087]
								}, {
									"case":	355,
									"scores":	[-6.74040202988087]
								}, {
									"case":	356,
									"scores":	[-6.74040202988087]
								}, {
									"case":	357,
									"scores":	[-6.74040202988087]
								}, {
									"case":	358,
									"scores":	[-6.74040202988087]
								}, {
									"case":	359,
									"scores":	[-6.74040202988087]
								}, {
									"case":	360,
									"scores":	[-6.74040202988087]
								}, {
									"case":	361,
									"scores":	[-6.74040202988087]
								}, {
									"case":	362,
									"scores":	[-6.74040202988087]
								}, {
									"case":	363,
									"scores":	[-6.74040202988087]
								}, {
									"case":	364,
									"scores":	[-6.74040202988087]
								}, {
									"case":	365,
									"scores":	[-6.74040202988087]
								}, {
									"case":	366,
									"scores":	[-6.74040202988087]
								}, {
									"case":	367,
									"scores":	[-6.74040202988087]
								}, {
									"case":	368,
									"scores":	[-6.74040202988087]
								}, {
									"case":	369,
									"scores":	[-6.74040202988087]
								}, {
									"case":	370,
									"scores":	[-6.74040202988087]
								}, {
									"case":	371,
									"scores":	[-6.74040202988087]
								}, {
									"case":	372,
									"scores":	[-6.74040202988087]
								}, {
									"case":	373,
									"scores":	[-6.74040202988087]
								}, {
									"case":	374,
									"scores":	[-6.74040202988087]
								}, {
									"case":	375,
									"scores":	[-6.74040202988087]
								}, {
									"case":	376,
									"scores":	[-6.74040202988087]
								}, {
									"case":	377,
									"scores":	[-6.74040202988087]
								}, {
									"case":	378,
									"scores":	[-6.74040202988087]
								}, {
									"case":	379,
									"scores":	[-6.74040202988087]
								}, {
									"case":	380,
									"scores":	[-6.74040202988087]
								}, {
									"case":	381,
									"scores":	[-6.74040202988087]
								}, {
									"case":	382,
									"scores":	[-6.74040202988087]
								}, {
									"case":	383,
									"scores":	[-6.74040202988087]
								}, {
									"case":	384,
									"scores":	[-6.74040202988087]
								}, {
									"case":	385,
									"scores":	[-6.74040202988087]
								}, {
									"case":	386,
									"scores":	[-6.74040202988087]
								}, {
									"case":	387,
									"scores":	[-6.74040202988087]
								}, {
									"case":	388,
									"scores":	[-6.74040202988087]
								}, {
									"case":	389,
									"scores":	[-6.74040202988087]
								}, {
									"case":	390,
									"scores":	[-6.74040202988087]
								}, {
									"case":	391,
									"scores":	[-6.74040202988087]
								}, {
									"case":	392,
									"scores":	[-6.74040202988087]
								}, {
									"case":	393,
									"scores":	[-6.74040202988087]
								}, {
									"case":	394,
									"scores":	[-6.74040202988087]
								}, {
									"case":	395,
									"scores":	[-6.74040202988087]
								}, {
									"case":	396,
									"scores":	[-6.74040202988087]
								}, {
									"case":	397,
									"scores":	[-6.74040202988087]
								}, {
									"case":	398,
									"scores":	[-6.74040202988087]
								}, {
									"case":	399,
									"scores":	[-6.74040202988087]
								}, {
									"case":	400,
									"scores":	[-6.74040202988087]
								}, {
									"case":	401,
									"scores":	[-6.74040202988087]
								}, {
									"case":	402,
									"scores":	[-6.74040202988087]
								}, {
									"case":	403,
									"scores":	[-6.74040202988087]
								}, {
									"case":	404,
									"scores":	[-6.74040202988087]
								}, {
									"case":	405,
									"scores":	[-6.74040202988087]
								}, {
									"case":	406,
									"scores":	[-6.74040202988087]
								}, {
									"case":	407,
									"scores":	[-6.74040202988087]
								}, {
									"case":	408,
									"scores":	[-6.74040202988087]
								}, {
									"case":	409,
									"scores":	[-6.74040202988087]
								}, {
									"case":	410,
									"scores":	[-6.74040202988087]
								}, {
									"case":	411,
									"scores":	[-6.74040202988087]
								}, {
									"case":	412,
									"scores":	[-6.74040202988087]
								}, {
									"case":	413,
									"scores":	[-6.74040202988087]
								}, {
									"case":	414,
									"scores":	[-6.74040202988087]
								}, {
									"case":	415,
									"scores":	[-6.74040202988087]
								}, {
									"case":	416,
									"scores":	[-6.74040202988087]
								}, {
									"case":	417,
									"scores":	[-6.74040202988087]
								}, {
									"case":	418,
									"scores":	[-6.74040202988087]
								}, {
									"case":	419,
									"scores":	[-6.74040202988087]
								}, {
									"case":	420,
									"scores":	[-6.74040202988087]
								}, {
									"case":	421,
									"scores":	[-6.74040202988087]
								}, {
									"case":	422,
									"scores":	[-6.74040202988087]
								}, {
									"case":	423,
									"scores":	[-6.74040202988087]
								}, {
									"case":	424,
									"scores":	[-6.74040202988087]
								}, {
									"case":	425,
									"scores":	[-6.74040202988087]
								}, {
									"case":	426,
									"scores":	[-6.74040202988087]
								}, {
									"case":	427,
									"scores":	[-6.74040202988087]
								}, {
									"case":	428,
									"scores":	[-6.74040202988087]
								}, {
									"case":	429,
									"scores":	[-6.74040202988087]
								}, {
									"case":	430,
									"scores":	[-6.74040202988087]
								}, {
									"case":	431,
									"scores":	[-6.74040202988087]
								}, {
									"case":	432,
									"scores":	[-6.74040202988087]
								}, {
									"case":	433,
									"scores":	[-6.74040202988087]
								}, {
									"case":	434,
									"scores":	[-6.74040202988087]
								}, {
									"case":	435,
									"scores":	[-6.74040202988087]
								}, {
									"case":	436,
									"scores":	[-6.74040202988087]
								}, {
									"case":	437,
									"scores":	[-6.74040202988087]
								}, {
									"case":	438,
									"scores":	[-6.74040202988087]
								}, {
									"case":	439,
									"scores":	[-6.74040202988087]
								}, {
									"case":	440,
									"scores":	[-6.74040202988087]
								}, {
									"case":	441,
									"scores":	[-6.74040202988087]
								}, {
									"case":	442,
									"scores":	[-6.74040202988087]
								}, {
									"case":	443,
									"scores":	[-6.74040202988087]
								}, {
									"case":	444,
									"scores":	[-6.74040202988087]
								}, {
									"case":	445,
									"scores":	[-6.74040202988087]
								}, {
									"case":	446,
									"scores":	[-6.74040202988087]
								}, {
									"case":	447,
									"scores":	[-6.74040202988087]
								}, {
									"case":	448,
									"scores":	[-6.74040202988087]
								}, {
									"case":	449,
									"scores":	[-6.74040202988087]
								}, {
									"case":	450,
									"scores":	[-6.74040202988087]
								}, {
									"case":	451,
									"scores":	[-6.74040202988087]
								}, {
									"case":	452,
									"scores":	[-6.74040202988087]
								}, {
									"case":	453,
									"scores":	[-6.74040202988087]
								}, {
									"case":	454,
									"scores":	[-6.74040202988087]
								}, {
									"case":	455,
									"scores":	[-6.74040202988087]
								}, {
									"case":	456,
									"scores":	[-6.74040202988087]
								}, {
									"case":	457,
									"scores":	[-6.74040202988087]
								}, {
									"case":	458,
									"scores":	[-6.74040202988087]
								}, {
									"case":	459,
									"scores":	[-6.74040202988087]
								}, {
									"case":	460,
									"scores":	[-6.74040202988087]
								}, {
									"case":	461,
									"scores":	[-6.74040202988087]
								}, {
									"case":	462,
									"scores":	[-6.74040202988087]
								}, {
									"case":	463,
									"scores":	[-6.74040202988087]
								}, {
									"case":	464,
									"scores":	[-6.74040202988087]
								}, {
									"case":	465,
									"scores":	[-6.74040202988087]
								}, {
									"case":	466,
									"scores":	[-6.74040202988087]
								}, {
									"case":	467,
									"scores":	[-6.74040202988087]
								}, {
									"case":	468,
									"scores":	[-6.74040202988087]
								}, {
									"case":	469,
									"scores":	[-6.74040202988087]
								}, {
									"case":	470,
									"scores":	[-6.74040202988087]
								}, {
									"case":	471,
									"scores":	[-6.74040202988087]
								}, {
									"case":	472,
									"scores":	[-6.74040202988087]
								}, {
									"case":	473,
									"scores":	[-6.74040202988087]
								}, {
									"case":	474,
									"scores":	[-6.74040202988087]
								}, {
									"case":	475,
									"scores":	[-6.74040202988087]
								}, {
									"case":	476,
									"scores":	[-6.74040202988087]
								}, {
									"case":	477,
									"scores":	[-6.74040202988087]
								}, {
									"case":	478,
									"scores":	[-6.74040202988087]
								}, {
									"case":	479,
									"scores":	[-6.74040202988087]
								}, {
									"case":	480,
									"scores":	[-6.74040202988087]
								}, {
									"case":	481,
									"scores":	[-6.74040202988087]
								}, {
									"case":	482,
									"scores":	[-6.74040202988087]
								}, {
									"case":	483,
									"scores":	[-6.74040202988087]
								}, {
									"case":	484,
									"scores":	[-6.74040202988087]
								}, {
									"case":	485,
									"scores":	[-6.74040202988087]
								}, {
									"case":	486,
									"scores":	[-6.74040202988087]
								}, {
									"case":	487,
									"scores":	[-6.74040202988087]
								}, {
									"case":	488,
									"scores":	[-6.74040202988087]
								}, {
									"case":	489,
									"scores":	[-6.74040202988087]
								}, {
									"case":	490,
									"scores":	[-6.74040202988087]
								}, {
									"case":	491,
									"scores":	[-6.74040202988087]
								}, {
									"case":	492,
									"scores":	[-6.74040202988087]
								}, {
									"case":	493,
									"scores":	[-6.74040202988087]
								}, {
									"case":	494,
									"scores":	[-6.74040202988087]
								}, {
									"case":	495,
									"scores":	[-6.74040202988087]
								}, {
									"case":	496,
									"scores":	[-6.74040202988087]
								}, {
									"case":	497,
									"scores":	[-6.74040202988087]
								}, {
									"case":	498,
									"scores":	[-6.74040202988087]
								}, {
									"case":	499,
									"scores":	[-6.74040202988087]
								}, {
									"case":	500,
									"scores":	[-6.74040202988087]
								}, {
									"case":	501,
									"scores":	[-6.74040202988087]
								}, {
									"case":	502,
									"scores":	[-6.74040202988087]
								}, {
									"case":	503,
									"scores":	[-6.74040202988087]
								}, {
									"case":	504,
									"scores":	[-6.74040202988087]
								}, {
									"case":	505,
									"scores":	[-6.74040202988087]
								}, {
									"case":	506,
									"scores":	[-6.74040202988087]
								}, {
									"case":	507,
									"scores":	[-6.74040202988087]
								}, {
									"case":	508,
									"scores":	[-6.74040202988087]
								}, {
									"case":	509,
									"scores":	[-6.74040202988087]
								}, {
									"case":	510,
									"scores":	[-6.74040202988087]
								}, {
									"case":	511,
									"scores":	[-6.74040202988087]
								}, {
									"case":	512,
									"scores":	[-6.74040202988087]
								}, {
									"case":	513,
									"scores":	[-6.74040202988087]
								}, {
									"case":	514,
									"scores":	[-6.74040202988087]
								}, {
									"case":	515,
									"scores":	[-6.74040202988087]
								}, {
									"case":	516,
									"scores":	[-6.74040202988087]
								}, {
									"case":	517,
									"scores":	[-6.74040202988087]
								}, {
									"case":	518,
									"scores":	[-6.74040202988087]
								}, {
									"case":	519,
									"scores":	[-6.74040202988087]
								}, {
									"case":	520,
									"scores":	[-6.74040202988087]
								}, {
									"case":	521,
									"scores":	[-6.74040202988087]
								}, {
									"case":	522,
									"scores":	[-6.74040202988087]
								}, {
									"case":	523,
									"scores":	[-6.74040202988087]
								}, {
									"case":	524,
									"scores":	[-6.74040202988087]
								}, {
									"case":	525,
									"scores":	[-6.74040202988087]
								}, {
									"case":	526,
									"scores":	[-6.74040202988087]
								}, {
									"case":	527,
									"scores":	[-6.74040202988087]
								}, {
									"case":	528,
									"scores":	[-6.74040202988087]
								}, {
									"case":	529,
									"scores":	[-6.74040202988087]
								}, {
									"case":	530,
									"scores":	[-6.74040202988087]
								}, {
									"case":	531,
									"scores":	[-6.74040202988087]
								}, {
									"case":	532,
									"scores":	[-6.74040202988087]
								}, {
									"case":	533,
									"scores":	[-6.74040202988087]
								}, {
									"case":	534,
									"scores":	[-6.74040202988087]
								}, {
									"case":	535,
									"scores":	[-6.74040202988087]
								}, {
									"case":	536,
									"scores":	[-6.74040202988087]
								}, {
									"case":	537,
									"scores":	[-6.74040202988087]
								}, {
									"case":	538,
									"scores":	[-6.74040202988087]
								}, {
									"case":	539,
									"scores":	[-6.74040202988087]
								}, {
									"case":	540,
									"scores":	[-6.74040202988087]
								}, {
									"case":	541,
									"scores":	[-6.74040202988087]
								}, {
									"case":	542,
									"scores":	[-6.74040202988087]
								}, {
									"case":	543,
									"scores":	[-6.74040202988087]
								}, {
									"case":	544,
									"scores":	[-6.74040202988087]
								}, {
									"case":	545,
									"scores":	[-6.74040202988087]
								}, {
									"case":	546,
									"scores":	[-6.74040202988087]
								}, {
									"case":	547,
									"scores":	[-6.74040202988087]
								}, {
									"case":	548,
									"scores":	[-6.74040202988087]
								}, {
									"case":	549,
									"scores":	[-6.74040202988087]
								}, {
									"case":	550,
									"scores":	[-6.74040202988087]
								}, {
									"case":	551,
									"scores":	[-6.74040202988087]
								}, {
									"case":	552,
									"scores":	[-6.74040202988087]
								}, {
									"case":	553,
									"scores":	[-6.74040202988087]
								}, {
									"case":	554,
									"scores":	[-6.74040202988087]
								}, {
									"case":	555,
									"scores":	[-6.74040202988087]
								}, {
									"case":	556,
									"scores":	[-6.74040202988087]
								}, {
									"case":	557,
									"scores":	[-6.74040202988087]
								}, {
									"case":	558,
									"scores":	[-6.74040202988087]
								}, {
									"case":	559,
									"scores":	[-6.74040202988087]
								}, {
									"case":	560,
									"scores":	[-6.74040202988087]
								}, {
									"case":	561,
									"scores":	[-6.74040202988087]
								}, {
									"case":	562,
									"scores":	[-6.74040202988087]
								}, {
									"case":	563,
									"scores":	[-6.74040202988087]
								}, {
									"case":	564,
									"scores":	[-6.74040202988087]
								}, {
									"case":	565,
									"scores":	[-6.74040202988087]
								}, {
									"case":	566,
									"scores":	[-6.74040202988087]
								}, {
									"case":	567,
									"scores":	[-6.74040202988087]
								}, {
									"case":	568,
									"scores":	[-6.74040202988087]
								}, {
									"case":	569,
									"scores":	[-6.74040202988087]
								}, {
									"case":	570,
									"scores":	[-6.74040202988087]
								}, {
									"case":	571,
									"scores":	[-6.74040202988087]
								}, {
									"case":	572,
									"scores":	[-6.74040202988087]
								}, {
									"case":	573,
									"scores":	[-6.74040202988087]
								}, {
									"case":	574,
									"scores":	[-6.74040202988087]
								}, {
									"case":	575,
									"scores":	[-6.74040202988087]
								}, {
									"case":	576,
									"scores":	[-6.74040202988087]
								}, {
									"case":	577,
									"scores":	[-6.74040202988087]
								}, {
									"case":	578,
									"scores":	[-6.74040202988087]
								}, {
									"case":	579,
									"scores":	[-6.74040202988087]
								}, {
									"case":	580,
									"scores":	[-6.74040202988087]
								}, {
									"case":	581,
									"scores":	[-6.74040202988087]
								}, {
									"case":	582,
									"scores":	[-6.74040202988087]
								}, {
									"case":	583,
									"scores":	[-6.74040202988087]
								}, {
									"case":	584,
									"scores":	[-6.74040202988087]
								}, {
									"case":	585,
									"scores":	[-6.74040202988087]
								}, {
									"case":	586,
									"scores":	[-6.74040202988087]
								}, {
									"case":	587,
									"scores":	[-6.74040202988087]
								}, {
									"case":	588,
									"scores":	[-6.74040202988087]
								}, {
									"case":	589,
									"scores":	[-6.74040202988087]
								}, {
									"case":	590,
									"scores":	[-6.74040202988087]
								}, {
									"case":	591,
									"scores":	[-6.74040202988087]
								}, {
									"case":	592,
									"scores":	[-6.74040202988087]
								}, {
									"case":	593,
									"scores":	[-6.74040202988087]
								}, {
									"case":	594,
									"scores":	[-6.74040202988087]
								}, {
									"case":	595,
									"scores":	[-6.74040202988087]
								}, {
									"case":	596,
									"scores":	[-6.74040202988087]
								}, {
									"case":	597,
									"scores":	[-6.74040202988087]
								}, {
									"case":	598,
									"scores":	[-6.74040202988087]
								}, {
									"case":	599,
									"scores":	[-6.74040202988087]
								}, {
									"case":	600,
									"scores":	[-6.74040202988087]
								}, {
									"case":	601,
									"scores":	[-6.74040202988087]
								}, {
									"case":	602,
									"scores":	[-6.74040202988087]
								}, {
									"case":	603,
									"scores":	[-6.74040202988087]
								}, {
									"case":	604,
									"scores":	[-6.74040202988087]
								}, {
									"case":	605,
									"scores":	[-6.74040202988087]
								}, {
									"case":	606,
									"scores":	[-6.74040202988087]
								}, {
									"case":	607,
									"scores":	[-6.74040202988087]
								}, {
									"case":	608,
									"scores":	[-6.74040202988087]
								}, {
									"case":	609,
									"scores":	[-6.74040202988087]
								}, {
									"case":	610,
									"scores":	[-6.74040202988087]
								}, {
									"case":	611,
									"scores":	[-6.74040202988087]
								}, {
									"case":	612,
									"scores":	[-6.74040202988087]
								}, {
									"case":	613,
									"scores":	[-6.74040202988087]
								}, {
									"case":	614,
									"scores":	[-6.74040202988087]
								}, {
									"case":	615,
									"scores":	[-6.74040202988087]
								}, {
									"case":	616,
									"scores":	[-6.74040202988087]
								}, {
									"case":	617,
									"scores":	[-6.74040202988087]
								}, {
									"case":	618,
									"scores":	[-6.74040202988087]
								}, {
									"case":	619,
									"scores":	[-6.74040202988087]
								}, {
									"case":	620,
									"scores":	[-6.74040202988087]
								}, {
									"case":	621,
									"scores":	[-6.74040202988087]
								}, {
									"case":	622,
									"scores":	[-6.74040202988087]
								}, {
									"case":	623,
									"scores":	[-6.74040202988087]
								}, {
									"case":	624,
									"scores":	[-6.74040202988087]
								}, {
									"case":	625,
									"scores":	[-6.74040202988087]
								}, {
									"case":	626,
									"scores":	[-6.74040202988087]
								}, {
									"case":	627,
									"scores":	[-6.74040202988087]
								}, {
									"case":	628,
									"scores":	[-6.74040202988087]
								}, {
									"case":	629,
									"scores":	[-6.74040202988087]
								}, {
									"case":	630,
									"scores":	[-6.74040202988087]
								}, {
									"case":	631,
									"scores":	[-6.74040202988087]
								}, {
									"case":	632,
									"scores":	[-6.74040202988087]
								}, {
									"case":	633,
									"scores":	[-6.74040202988087]
								}, {
									"case":	634,
									"scores":	[-6.74040202988087]
								}, {
									"case":	635,
									"scores":	[-6.74040202988087]
								}, {
									"case":	636,
									"scores":	[-6.74040202988087]
								}, {
									"case":	637,
									"scores":	[-6.74040202988087]
								}, {
									"case":	638,
									"scores":	[-6.74040202988087]
								}, {
									"case":	639,
									"scores":	[-6.74040202988087]
								}, {
									"case":	640,
									"scores":	[-6.74040202988087]
								}, {
									"case":	641,
									"scores":	[-6.74040202988087]
								}, {
									"case":	642,
									"scores":	[-6.74040202988087]
								}, {
									"case":	643,
									"scores":	[-6.74040202988087]
								}, {
									"case":	644,
									"scores":	[-6.74040202988087]
								}, {
									"case":	645,
									"scores":	[-6.74040202988087]
								}, {
									"case":	646,
									"scores":	[-6.74040202988087]
								}, {
									"case":	647,
									"scores":	[-6.74040202988087]
								}, {
									"case":	648,
									"scores":	[-6.74040202988087]
								}, {
									"case":	649,
									"scores":	[-6.74040202988087]
								}, {
									"case":	650,
									"scores":	[-6.74040202988087]
								}, {
									"case":	651,
									"scores":	[-6.74040202988087]
								}, {
									"case":	652,
									"scores":	[-6.74040202988087]
								}, {
									"case":	653,
									"scores":	[-6.74040202988087]
								}, {
									"case":	654,
									"scores":	[-6.74040202988087]
								}, {
									"case":	655,
									"scores":	[-6.74040202988087]
								}, {
									"case":	656,
									"scores":	[-6.74040202988087]
								}, {
									"case":	657,
									"scores":	[-6.74040202988087]
								}, {
									"case":	658,
									"scores":	[-6.74040202988087]
								}, {
									"case":	659,
									"scores":	[-6.74040202988087]
								}, {
									"case":	660,
									"scores":	[-6.74040202988087]
								}, {
									"case":	661,
									"scores":	[-6.74040202988087]
								}, {
									"case":	662,
									"scores":	[-6.74040202988087]
								}, {
									"case":	663,
									"scores":	[-6.74040202988087]
								}, {
									"case":	664,
									"scores":	[-6.74040202988087]
								}, {
									"case":	665,
									"scores":	[-6.74040202988087]
								}, {
									"case":	666,
									"scores":	[-6.74040202988087]
								}, {
									"case":	667,
									"scores":	[-6.74040202988087]
								}, {
									"case":	668,
									"scores":	[-6.74040202988087]
								}, {
									"case":	669,
									"scores":	[-6.74040202988087]
								}, {
									"case":	670,
									"scores":	[-6.74040202988087]
								}, {
									"case":	671,
									"scores":	[-6.74040202988087]
								}, {
									"case":	672,
									"scores":	[-6.74040202988087]
								}, {
									"case":	673,
									"scores":	[-6.74040202988087]
								}, {
									"case":	674,
									"scores":	[-6.74040202988087]
								}, {
									"case":	675,
									"scores":	[-6.74040202988087]
								}, {
									"case":	676,
									"scores":	[-6.74040202988087]
								}, {
									"case":	677,
									"scores":	[-6.74040202988087]
								}, {
									"case":	678,
									"scores":	[-6.74040202988087]
								}, {
									"case":	679,
									"scores":	[-6.74040202988087]
								}, {
									"case":	680,
									"scores":	[-6.74040202988087]
								}, {
									"case":	681,
									"scores":	[-6.74040202988087]
								}, {
									"case":	682,
									"scores":	[-6.74040202988087]
								}, {
									"case":	683,
									"scores":	[-6.74040202988087]
								}, {
									"case":	684,
									"scores":	[-6.74040202988087]
								}, {
									"case":	685,
									"scores":	[-6.74040202988087]
								}, {
									"case":	686,
									"scores":	[-6.74040202988087]
								}, {
									"case":	687,
									"scores":	[-6.74040202988087]
								}, {
									"case":	688,
									"scores":	[-6.74040202988087]
								}, {
									"case":	689,
									"scores":	[-6.74040202988087]
								}, {
									"case":	690,
									"scores":	[-6.74040202988087]
								}, {
									"case":	691,
									"scores":	[-6.74040202988087]
								}, {
									"case":	692,
									"scores":	[-6.74040202988087]
								}, {
									"case":	693,
									"scores":	[-6.74040202988087]
								}, {
									"case":	694,
									"scores":	[-6.74040202988087]
								}, {
									"case":	695,
									"scores":	[-6.74040202988087]
								}, {
									"case":	696,
									"scores":	[-6.74040202988087]
								}, {
									"case":	697,
									"scores":	[-6.74040202988087]
								}, {
									"case":	698,
									"scores":	[-6.74040202988087]
								}, {
									"case":	699,
									"scores":	[-6.74040202988087]
								}, {
									"case":	700,
									"scores":	[-6.74040202988087]
								}, {
									"case":	701,
									"scores":	[-6.74040202988087]
								}, {
									"case":	702,
									"scores":	[-6.74040202988087]
								}, {
									"case":	703,
									"scores":	[-6.74040202988087]
								}, {
									"case":	704,
									"scores":	[-6.74040202988087]
								}, {
									"case":	705,
									"scores":	[-6.74040202988087]
								}, {
									"case":	706,
									"scores":	[-6.74040202988087]
								}, {
									"case":	707,
									"scores":	[-6.74040202988087]
								}, {
									"case":	708,
									"scores":	[-6.74040202988087]
								}, {
									"case":	709,
									"scores":	[-6.74040202988087]
								}, {
									"case":	710,
									"scores":	[-6.74040202988087]
								}, {
									"case":	711,
									"scores":	[-6.74040202988087]
								}, {
									"case":	712,
									"scores":	[-6.74040202988087]
								}, {
									"case":	713,
									"scores":	[-6.74040202988087]
								}, {
									"case":	714,
									"scores":	[-6.74040202988087]
								}, {
									"case":	715,
									"scores":	[-6.74040202988087]
								}, {
									"case":	716,
									"scores":	[-6.74040202988087]
								}, {
									"case":	717,
									"scores":	[-6.74040202988087]
								}, {
									"case":	718,
									"scores":	[-6.74040202988087]
								}, {
									"case":	719,
									"scores":	[-6.74040202988087]
								}, {
									"case":	720,
									"scores":	[-6.74040202988087]
								}, {
									"case":	721,
									"scores":	[-6.74040202988087]
								}, {
									"case":	722,
									"scores":	[-6.74040202988087]
								}, {
									"case":	723,
									"scores":	[-6.74040202988087]
								}, {
									"case":	724,
									"scores":	[-6.74040202988087]
								}, {
									"case":	725,
									"scores":	[-6.74040202988087]
								}, {
									"case":	726,
									"scores":	[-6.74040202988087]
								}, {
									"case":	727,
									"scores":	[-6.74040202988087]
								}, {
									"case":	728,
									"scores":	[-6.74040202988087]
								}, {
									"case":	729,
									"scores":	[-6.74040202988087]
								}, {
									"case":	730,
									"scores":	[-6.74040202988087]
								}, {
									"case":	731,
									"scores":	[-6.74040202988087]
								}, {
									"case":	732,
									"scores":	[-6.74040202988087]
								}, {
									"case":	733,
									"scores":	[-6.74040202988087]
								}, {
									"case":	734,
									"scores":	[-6.74040202988087]
								}, {
									"case":	735,
									"scores":	[-6.74040202988087]
								}, {
									"case":	736,
									"scores":	[-6.74040202988087]
								}, {
									"case":	737,
									"scores":	[-6.74040202988087]
								}, {
									"case":	738,
									"scores":	[-6.74040202988087]
								}, {
									"case":	739,
									"scores":	[-6.74040202988087]
								}, {
									"case":	740,
									"scores":	[-6.74040202988087]
								}, {
									"case":	741,
									"scores":	[-6.74040202988087]
								}, {
									"case":	742,
									"scores":	[-6.74040202988087]
								}, {
									"case":	743,
									"scores":	[-6.74040202988087]
								}, {
									"case":	744,
									"scores":	[-6.74040202988087]
								}, {
									"case":	745,
									"scores":	[-6.74040202988087]
								}, {
									"case":	746,
									"scores":	[-6.74040202988087]
								}, {
									"case":	747,
									"scores":	[-6.74040202988087]
								}, {
									"case":	748,
									"scores":	[-6.74040202988087]
								}, {
									"case":	749,
									"scores":	[-6.74040202988087]
								}, {
									"case":	750,
									"scores":	[-6.74040202988087]
								}, {
									"case":	751,
									"scores":	[-6.74040202988087]
								}, {
									"case":	752,
									"scores":	[-6.74040202988087]
								}, {
									"case":	753,
									"scores":	[-6.74040202988087]
								}, {
									"case":	754,
									"scores":	[-6.74040202988087]
								}, {
									"case":	755,
									"scores":	[-6.74040202988087]
								}, {
									"case":	756,
									"scores":	[-6.74040202988087]
								}, {
									"case":	757,
									"scores":	[-6.74040202988087]
								}, {
									"case":	758,
									"scores":	[-6.74040202988087]
								}, {
									"case":	759,
									"scores":	[-6.74040202988087]
								}, {
									"case":	760,
									"scores":	[-6.74040202988087]
								}, {
									"case":	761,
									"scores":	[-6.74040202988087]
								}, {
									"case":	762,
									"scores":	[-6.74040202988087]
								}, {
									"case":	763,
									"scores":	[-6.74040202988087]
								}, {
									"case":	764,
									"scores":	[-6.74040202988087]
								}, {
									"case":	765,
									"scores":	[-6.74040202988087]
								}, {
									"case":	766,
									"scores":	[-6.74040202988087]
								}, {
									"case":	767,
									"scores":	[-6.74040202988087]
								}, {
									"case":	768,
									"scores":	[-6.74040202988087]
								}, {
									"case":	769,
									"scores":	[-6.74040202988087]
								}, {
									"case":	770,
									"scores":	[-6.74040202988087]
								}, {
									"case":	771,
									"scores":	[-6.74040202988087]
								}, {
									"case":	772,
									"scores":	[-6.74040202988087]
								}, {
									"case":	773,
									"scores":	[-6.74040202988087]
								}, {
									"case":	774,
									"scores":	[-6.74040202988087]
								}, {
									"case":	775,
									"scores":	[-6.74040202988087]
								}, {
									"case":	776,
									"scores":	[-6.74040202988087]
								}, {
									"case":	777,
									"scores":	[-6.74040202988087]
								}, {
									"case":	778,
									"scores":	[-6.74040202988087]
								}, {
									"case":	779,
									"scores":	[-6.74040202988087]
								}, {
									"case":	780,
									"scores":	[-6.74040202988087]
								}, {
									"case":	781,
									"scores":	[-6.74040202988087]
								}, {
									"case":	782,
									"scores":	[-6.74040202988087]
								}, {
									"case":	783,
									"scores":	[-6.74040202988087]
								}, {
									"case":	784,
									"scores":	[-6.74040202988087]
								}, {
									"case":	785,
									"scores":	[-6.74040202988087]
								}, {
									"case":	786,
									"scores":	[-6.74040202988087]
								}, {
									"case":	787,
									"scores":	[-6.74040202988087]
								}, {
									"case":	788,
									"scores":	[-6.74040202988087]
								}, {
									"case":	789,
									"scores":	[-6.74040202988087]
								}, {
									"case":	790,
									"scores":	[-6.74040202988087]
								}, {
									"case":	791,
									"scores":	[-6.74040202988087]
								}, {
									"case":	792,
									"scores":	[-6.74040202988087]
								}, {
									"case":	793,
									"scores":	[-6.74040202988087]
								}, {
									"case":	794,
									"scores":	[-6.74040202988087]
								}, {
									"case":	795,
									"scores":	[-6.74040202988087]
								}, {
									"case":	796,
									"scores":	[-6.74040202988087]
								}, {
									"case":	797,
									"scores":	[-6.74040202988087]
								}, {
									"case":	798,
									"scores":	[-6.74040202988087]
								}, {
									"case":	799,
									"scores":	[-6.74040202988087]
								}, {
									"case":	800,
									"scores":	[-6.74040202988087]
								}, {
									"case":	801,
									"scores":	[-6.74040202988087]
								}, {
									"case":	802,
									"scores":	[-6.74040202988087]
								}, {
									"case":	803,
									"scores":	[-6.74040202988087]
								}, {
									"case":	804,
									"scores":	[-6.74040202988087]
								}, {
									"case":	805,
									"scores":	[-6.74040202988087]
								}, {
									"case":	806,
									"scores":	[-6.74040202988087]
								}, {
									"case":	807,
									"scores":	[-6.74040202988087]
								}, {
									"case":	808,
									"scores":	[-6.74040202988087]
								}, {
									"case":	809,
									"scores":	[-6.74040202988087]
								}, {
									"case":	810,
									"scores":	[-6.74040202988087]
								}, {
									"case":	811,
									"scores":	[-6.74040202988087]
								}, {
									"case":	812,
									"scores":	[-6.74040202988087]
								}, {
									"case":	813,
									"scores":	[-6.74040202988087]
								}, {
									"case":	814,
									"scores":	[-6.74040202988087]
								}, {
									"case":	815,
									"scores":	[-6.74040202988087]
								}, {
									"case":	816,
									"scores":	[-6.74040202988087]
								}, {
									"case":	817,
									"scores":	[-6.74040202988087]
								}, {
									"case":	818,
									"scores":	[-6.74040202988087]
								}, {
									"case":	819,
									"scores":	[-6.74040202988087]
								}, {
									"case":	820,
									"scores":	[-6.74040202988087]
								}, {
									"case":	821,
									"scores":	[-6.74040202988087]
								}, {
									"case":	822,
									"scores":	[-6.74040202988087]
								}, {
									"case":	823,
									"scores":	[-6.74040202988087]
								}, {
									"case":	824,
									"scores":	[-6.74040202988087]
								}, {
									"case":	825,
									"scores":	[-6.74040202988087]
								}, {
									"case":	826,
									"scores":	[-6.74040202988087]
								}, {
									"case":	827,
									"scores":	[-6.74040202988087]
								}, {
									"case":	828,
									"scores":	[-6.74040202988087]
								}, {
									"case":	829,
									"scores":	[-6.74040202988087]
								}, {
									"case":	830,
									"scores":	[-6.74040202988087]
								}, {
									"case":	831,
									"scores":	[-6.74040202988087]
								}, {
									"case":	832,
									"scores":	[-6.74040202988087]
								}, {
									"case":	833,
									"scores":	[-6.74040202988087]
								}, {
									"case":	834,
									"scores":	[-6.74040202988087]
								}, {
									"case":	835,
									"scores":	[-6.74040202988087]
								}, {
									"case":	836,
									"scores":	[-6.74040202988087]
								}, {
									"case":	837,
									"scores":	[-6.74040202988087]
								}, {
									"case":	838,
									"scores":	[-6.74040202988087]
								}, {
									"case":	839,
									"scores":	[-6.74040202988087]
								}, {
									"case":	840,
									"scores":	[-6.74040202988087]
								}, {
									"case":	841,
									"scores":	[-6.74040202988087]
								}, {
									"case":	842,
									"scores":	[-6.74040202988087]
								}, {
									"case":	843,
									"scores":	[-6.74040202988087]
								}, {
									"case":	844,
									"scores":	[-6.74040202988087]
								}, {
									"case":	845,
									"scores":	[-6.74040202988087]
								}, {
									"case":	846,
									"scores":	[-6.74040202988087]
								}, {
									"case":	847,
									"scores":	[-6.74040202988087]
								}, {
									"case":	848,
									"scores":	[-6.74040202988087]
								}]
						}]
				}, {
					"line":	279,
					"switches":	[{
							"switch":	8,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	280,
							"begin_column":	4,
							"end_line":	280,
							"end_column":	4,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    break;\n", "if (__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.72019932256335]
								}, {
									"case":	2,
									"scores":	[-6.72019932256335]
								}, {
									"case":	3,
									"scores":	[-6.72019932256335]
								}, {
									"case":	4,
									"scores":	[-6.72019932256335]
								}, {
									"case":	5,
									"scores":	[-6.72019932256335]
								}, {
									"case":	6,
									"scores":	[-6.72019932256335]
								}, {
									"case":	7,
									"scores":	[-6.72019932256335]
								}, {
									"case":	8,
									"scores":	[-6.72019932256335]
								}, {
									"case":	9,
									"scores":	[-6.72019932256335]
								}, {
									"case":	10,
									"scores":	[-6.72019932256335]
								}, {
									"case":	11,
									"scores":	[-6.72019932256335]
								}, {
									"case":	12,
									"scores":	[-6.72019932256335]
								}, {
									"case":	13,
									"scores":	[-6.72019932256335]
								}, {
									"case":	14,
									"scores":	[-6.72019932256335]
								}, {
									"case":	15,
									"scores":	[-6.72019932256335]
								}, {
									"case":	16,
									"scores":	[-6.72019932256335]
								}, {
									"case":	17,
									"scores":	[-6.72019932256335]
								}, {
									"case":	18,
									"scores":	[-6.72019932256335]
								}, {
									"case":	19,
									"scores":	[-6.72019932256335]
								}, {
									"case":	20,
									"scores":	[-6.72019932256335]
								}, {
									"case":	21,
									"scores":	[-6.72019932256335]
								}, {
									"case":	22,
									"scores":	[-6.72019932256335]
								}, {
									"case":	23,
									"scores":	[-6.72019932256335]
								}, {
									"case":	24,
									"scores":	[-6.72019932256335]
								}, {
									"case":	25,
									"scores":	[-6.72019932256335]
								}, {
									"case":	26,
									"scores":	[-6.72019932256335]
								}, {
									"case":	27,
									"scores":	[-6.72019932256335]
								}, {
									"case":	28,
									"scores":	[-6.72019932256335]
								}, {
									"case":	29,
									"scores":	[-6.72019932256335]
								}, {
									"case":	30,
									"scores":	[-6.72019932256335]
								}, {
									"case":	31,
									"scores":	[-6.72019932256335]
								}, {
									"case":	32,
									"scores":	[-6.72019932256335]
								}, {
									"case":	33,
									"scores":	[-6.72019932256335]
								}, {
									"case":	34,
									"scores":	[-6.72019932256335]
								}, {
									"case":	35,
									"scores":	[-6.72019932256335]
								}, {
									"case":	36,
									"scores":	[-6.72019932256335]
								}, {
									"case":	37,
									"scores":	[-6.72019932256335]
								}, {
									"case":	38,
									"scores":	[-6.72019932256335]
								}, {
									"case":	39,
									"scores":	[-6.72019932256335]
								}, {
									"case":	40,
									"scores":	[-6.72019932256335]
								}, {
									"case":	41,
									"scores":	[-6.72019932256335]
								}, {
									"case":	42,
									"scores":	[-6.72019932256335]
								}, {
									"case":	43,
									"scores":	[-6.72019932256335]
								}, {
									"case":	44,
									"scores":	[-6.72019932256335]
								}, {
									"case":	45,
									"scores":	[-6.72019932256335]
								}, {
									"case":	46,
									"scores":	[-6.72019932256335]
								}, {
									"case":	47,
									"scores":	[-6.72019932256335]
								}, {
									"case":	48,
									"scores":	[-6.72019932256335]
								}, {
									"case":	49,
									"scores":	[-6.72019932256335]
								}, {
									"case":	50,
									"scores":	[-6.72019932256335]
								}, {
									"case":	51,
									"scores":	[-6.72019932256335]
								}, {
									"case":	52,
									"scores":	[-6.72019932256335]
								}, {
									"case":	53,
									"scores":	[-6.72019932256335]
								}, {
									"case":	54,
									"scores":	[-6.72019932256335]
								}, {
									"case":	55,
									"scores":	[-6.72019932256335]
								}, {
									"case":	56,
									"scores":	[-6.72019932256335]
								}, {
									"case":	57,
									"scores":	[-6.72019932256335]
								}, {
									"case":	58,
									"scores":	[-6.72019932256335]
								}, {
									"case":	59,
									"scores":	[-6.72019932256335]
								}, {
									"case":	60,
									"scores":	[-6.72019932256335]
								}, {
									"case":	61,
									"scores":	[-6.72019932256335]
								}, {
									"case":	62,
									"scores":	[-6.72019932256335]
								}, {
									"case":	63,
									"scores":	[-6.72019932256335]
								}, {
									"case":	64,
									"scores":	[-6.72019932256335]
								}, {
									"case":	65,
									"scores":	[-6.72019932256335]
								}, {
									"case":	66,
									"scores":	[-6.72019932256335]
								}, {
									"case":	67,
									"scores":	[-6.72019932256335]
								}, {
									"case":	68,
									"scores":	[-6.72019932256335]
								}, {
									"case":	69,
									"scores":	[-6.72019932256335]
								}, {
									"case":	70,
									"scores":	[-6.72019932256335]
								}, {
									"case":	71,
									"scores":	[-6.72019932256335]
								}, {
									"case":	72,
									"scores":	[-6.72019932256335]
								}, {
									"case":	73,
									"scores":	[-6.72019932256335]
								}, {
									"case":	74,
									"scores":	[-6.72019932256335]
								}, {
									"case":	75,
									"scores":	[-6.72019932256335]
								}, {
									"case":	76,
									"scores":	[-6.72019932256335]
								}, {
									"case":	77,
									"scores":	[-6.72019932256335]
								}, {
									"case":	78,
									"scores":	[-6.72019932256335]
								}, {
									"case":	79,
									"scores":	[-6.72019932256335]
								}, {
									"case":	80,
									"scores":	[-6.72019932256335]
								}, {
									"case":	81,
									"scores":	[-6.72019932256335]
								}, {
									"case":	82,
									"scores":	[-6.72019932256335]
								}, {
									"case":	83,
									"scores":	[-6.72019932256335]
								}, {
									"case":	84,
									"scores":	[-6.72019932256335]
								}, {
									"case":	85,
									"scores":	[-6.72019932256335]
								}, {
									"case":	86,
									"scores":	[-6.72019932256335]
								}, {
									"case":	87,
									"scores":	[-6.72019932256335]
								}, {
									"case":	88,
									"scores":	[-6.72019932256335]
								}, {
									"case":	89,
									"scores":	[-6.72019932256335]
								}, {
									"case":	90,
									"scores":	[-6.72019932256335]
								}, {
									"case":	91,
									"scores":	[-6.72019932256335]
								}, {
									"case":	92,
									"scores":	[-6.72019932256335]
								}, {
									"case":	93,
									"scores":	[-6.72019932256335]
								}, {
									"case":	94,
									"scores":	[-6.72019932256335]
								}, {
									"case":	95,
									"scores":	[-6.72019932256335]
								}, {
									"case":	96,
									"scores":	[-6.72019932256335]
								}, {
									"case":	97,
									"scores":	[-6.72019932256335]
								}, {
									"case":	98,
									"scores":	[-6.72019932256335]
								}, {
									"case":	99,
									"scores":	[-6.72019932256335]
								}, {
									"case":	100,
									"scores":	[-6.72019932256335]
								}, {
									"case":	101,
									"scores":	[-6.72019932256335]
								}, {
									"case":	102,
									"scores":	[-6.72019932256335]
								}, {
									"case":	103,
									"scores":	[-6.72019932256335]
								}, {
									"case":	104,
									"scores":	[-6.72019932256335]
								}, {
									"case":	105,
									"scores":	[-6.72019932256335]
								}, {
									"case":	106,
									"scores":	[-6.72019932256335]
								}, {
									"case":	107,
									"scores":	[-6.72019932256335]
								}, {
									"case":	108,
									"scores":	[-6.72019932256335]
								}, {
									"case":	109,
									"scores":	[-6.72019932256335]
								}, {
									"case":	110,
									"scores":	[-6.72019932256335]
								}, {
									"case":	111,
									"scores":	[-6.72019932256335]
								}, {
									"case":	112,
									"scores":	[-6.72019932256335]
								}, {
									"case":	113,
									"scores":	[-6.72019932256335]
								}, {
									"case":	114,
									"scores":	[-6.72019932256335]
								}, {
									"case":	115,
									"scores":	[-6.72019932256335]
								}, {
									"case":	116,
									"scores":	[-6.72019932256335]
								}, {
									"case":	117,
									"scores":	[-6.72019932256335]
								}, {
									"case":	118,
									"scores":	[-6.72019932256335]
								}, {
									"case":	119,
									"scores":	[-6.72019932256335]
								}, {
									"case":	120,
									"scores":	[-6.72019932256335]
								}, {
									"case":	121,
									"scores":	[-6.72019932256335]
								}, {
									"case":	122,
									"scores":	[-6.72019932256335]
								}, {
									"case":	123,
									"scores":	[-6.72019932256335]
								}, {
									"case":	124,
									"scores":	[-6.72019932256335]
								}, {
									"case":	125,
									"scores":	[-6.72019932256335]
								}, {
									"case":	126,
									"scores":	[-6.72019932256335]
								}, {
									"case":	127,
									"scores":	[-6.72019932256335]
								}, {
									"case":	128,
									"scores":	[-6.72019932256335]
								}, {
									"case":	129,
									"scores":	[-6.72019932256335]
								}, {
									"case":	130,
									"scores":	[-6.72019932256335]
								}, {
									"case":	131,
									"scores":	[-6.72019932256335]
								}, {
									"case":	132,
									"scores":	[-6.72019932256335]
								}, {
									"case":	133,
									"scores":	[-6.72019932256335]
								}, {
									"case":	134,
									"scores":	[-6.72019932256335]
								}, {
									"case":	135,
									"scores":	[-6.72019932256335]
								}, {
									"case":	136,
									"scores":	[-6.72019932256335]
								}, {
									"case":	137,
									"scores":	[-6.72019932256335]
								}, {
									"case":	138,
									"scores":	[-6.72019932256335]
								}, {
									"case":	139,
									"scores":	[-6.72019932256335]
								}, {
									"case":	140,
									"scores":	[-6.72019932256335]
								}, {
									"case":	141,
									"scores":	[-6.72019932256335]
								}, {
									"case":	142,
									"scores":	[-6.72019932256335]
								}, {
									"case":	143,
									"scores":	[-6.72019932256335]
								}, {
									"case":	144,
									"scores":	[-6.72019932256335]
								}, {
									"case":	145,
									"scores":	[-6.72019932256335]
								}, {
									"case":	146,
									"scores":	[-6.72019932256335]
								}, {
									"case":	147,
									"scores":	[-6.72019932256335]
								}, {
									"case":	148,
									"scores":	[-6.72019932256335]
								}, {
									"case":	149,
									"scores":	[-6.72019932256335]
								}, {
									"case":	150,
									"scores":	[-6.72019932256335]
								}, {
									"case":	151,
									"scores":	[-6.72019932256335]
								}, {
									"case":	152,
									"scores":	[-6.72019932256335]
								}, {
									"case":	153,
									"scores":	[-6.72019932256335]
								}, {
									"case":	154,
									"scores":	[-6.72019932256335]
								}, {
									"case":	155,
									"scores":	[-6.72019932256335]
								}, {
									"case":	156,
									"scores":	[-6.72019932256335]
								}, {
									"case":	157,
									"scores":	[-6.72019932256335]
								}, {
									"case":	158,
									"scores":	[-6.72019932256335]
								}, {
									"case":	159,
									"scores":	[-6.72019932256335]
								}, {
									"case":	160,
									"scores":	[-6.72019932256335]
								}, {
									"case":	161,
									"scores":	[-6.72019932256335]
								}, {
									"case":	162,
									"scores":	[-6.72019932256335]
								}, {
									"case":	163,
									"scores":	[-6.72019932256335]
								}, {
									"case":	164,
									"scores":	[-6.72019932256335]
								}, {
									"case":	165,
									"scores":	[-6.72019932256335]
								}, {
									"case":	166,
									"scores":	[-6.72019932256335]
								}, {
									"case":	167,
									"scores":	[-6.72019932256335]
								}, {
									"case":	168,
									"scores":	[-6.72019932256335]
								}, {
									"case":	169,
									"scores":	[-6.72019932256335]
								}, {
									"case":	170,
									"scores":	[-6.72019932256335]
								}, {
									"case":	171,
									"scores":	[-6.72019932256335]
								}, {
									"case":	172,
									"scores":	[-6.72019932256335]
								}, {
									"case":	173,
									"scores":	[-6.72019932256335]
								}, {
									"case":	174,
									"scores":	[-6.72019932256335]
								}, {
									"case":	175,
									"scores":	[-6.72019932256335]
								}, {
									"case":	176,
									"scores":	[-6.72019932256335]
								}, {
									"case":	177,
									"scores":	[-6.72019932256335]
								}, {
									"case":	178,
									"scores":	[-6.72019932256335]
								}, {
									"case":	179,
									"scores":	[-6.72019932256335]
								}, {
									"case":	180,
									"scores":	[-6.72019932256335]
								}, {
									"case":	181,
									"scores":	[-6.72019932256335]
								}, {
									"case":	182,
									"scores":	[-6.72019932256335]
								}, {
									"case":	183,
									"scores":	[-6.72019932256335]
								}, {
									"case":	184,
									"scores":	[-6.72019932256335]
								}, {
									"case":	185,
									"scores":	[-6.72019932256335]
								}, {
									"case":	186,
									"scores":	[-6.72019932256335]
								}, {
									"case":	187,
									"scores":	[-6.72019932256335]
								}, {
									"case":	188,
									"scores":	[-6.72019932256335]
								}, {
									"case":	189,
									"scores":	[-6.72019932256335]
								}, {
									"case":	190,
									"scores":	[-6.72019932256335]
								}, {
									"case":	191,
									"scores":	[-6.72019932256335]
								}, {
									"case":	192,
									"scores":	[-6.72019932256335]
								}, {
									"case":	193,
									"scores":	[-6.72019932256335]
								}, {
									"case":	194,
									"scores":	[-6.72019932256335]
								}, {
									"case":	195,
									"scores":	[-6.72019932256335]
								}, {
									"case":	196,
									"scores":	[-6.72019932256335]
								}, {
									"case":	197,
									"scores":	[-6.72019932256335]
								}, {
									"case":	198,
									"scores":	[-6.72019932256335]
								}, {
									"case":	199,
									"scores":	[-6.72019932256335]
								}, {
									"case":	200,
									"scores":	[-6.72019932256335]
								}, {
									"case":	201,
									"scores":	[-6.72019932256335]
								}, {
									"case":	202,
									"scores":	[-6.72019932256335]
								}, {
									"case":	203,
									"scores":	[-6.72019932256335]
								}, {
									"case":	204,
									"scores":	[-6.72019932256335]
								}, {
									"case":	205,
									"scores":	[-6.72019932256335]
								}, {
									"case":	206,
									"scores":	[-6.72019932256335]
								}, {
									"case":	207,
									"scores":	[-6.72019932256335]
								}, {
									"case":	208,
									"scores":	[-6.72019932256335]
								}, {
									"case":	209,
									"scores":	[-6.72019932256335]
								}, {
									"case":	210,
									"scores":	[-6.72019932256335]
								}, {
									"case":	211,
									"scores":	[-6.72019932256335]
								}, {
									"case":	212,
									"scores":	[-6.72019932256335]
								}, {
									"case":	213,
									"scores":	[-6.72019932256335]
								}, {
									"case":	214,
									"scores":	[-6.72019932256335]
								}, {
									"case":	215,
									"scores":	[-6.72019932256335]
								}, {
									"case":	216,
									"scores":	[-6.72019932256335]
								}, {
									"case":	217,
									"scores":	[-6.72019932256335]
								}, {
									"case":	218,
									"scores":	[-6.72019932256335]
								}, {
									"case":	219,
									"scores":	[-6.72019932256335]
								}, {
									"case":	220,
									"scores":	[-6.72019932256335]
								}, {
									"case":	221,
									"scores":	[-6.72019932256335]
								}, {
									"case":	222,
									"scores":	[-6.72019932256335]
								}, {
									"case":	223,
									"scores":	[-6.72019932256335]
								}, {
									"case":	224,
									"scores":	[-6.72019932256335]
								}, {
									"case":	225,
									"scores":	[-6.72019932256335]
								}, {
									"case":	226,
									"scores":	[-6.72019932256335]
								}, {
									"case":	227,
									"scores":	[-6.72019932256335]
								}, {
									"case":	228,
									"scores":	[-6.72019932256335]
								}, {
									"case":	229,
									"scores":	[-6.72019932256335]
								}, {
									"case":	230,
									"scores":	[-6.72019932256335]
								}, {
									"case":	231,
									"scores":	[-6.72019932256335]
								}, {
									"case":	232,
									"scores":	[-6.72019932256335]
								}, {
									"case":	233,
									"scores":	[-6.72019932256335]
								}, {
									"case":	234,
									"scores":	[-6.72019932256335]
								}, {
									"case":	235,
									"scores":	[-6.72019932256335]
								}, {
									"case":	236,
									"scores":	[-6.72019932256335]
								}, {
									"case":	237,
									"scores":	[-6.72019932256335]
								}, {
									"case":	238,
									"scores":	[-6.72019932256335]
								}, {
									"case":	239,
									"scores":	[-6.72019932256335]
								}, {
									"case":	240,
									"scores":	[-6.72019932256335]
								}, {
									"case":	241,
									"scores":	[-6.72019932256335]
								}, {
									"case":	242,
									"scores":	[-6.72019932256335]
								}, {
									"case":	243,
									"scores":	[-6.72019932256335]
								}, {
									"case":	244,
									"scores":	[-6.72019932256335]
								}, {
									"case":	245,
									"scores":	[-6.72019932256335]
								}, {
									"case":	246,
									"scores":	[-6.72019932256335]
								}, {
									"case":	247,
									"scores":	[-6.72019932256335]
								}, {
									"case":	248,
									"scores":	[-6.72019932256335]
								}, {
									"case":	249,
									"scores":	[-6.72019932256335]
								}, {
									"case":	250,
									"scores":	[-6.72019932256335]
								}, {
									"case":	251,
									"scores":	[-6.72019932256335]
								}, {
									"case":	252,
									"scores":	[-6.72019932256335]
								}, {
									"case":	253,
									"scores":	[-6.72019932256335]
								}, {
									"case":	254,
									"scores":	[-6.72019932256335]
								}, {
									"case":	255,
									"scores":	[-6.72019932256335]
								}, {
									"case":	256,
									"scores":	[-6.72019932256335]
								}, {
									"case":	257,
									"scores":	[-6.72019932256335]
								}, {
									"case":	258,
									"scores":	[-6.72019932256335]
								}, {
									"case":	259,
									"scores":	[-6.72019932256335]
								}, {
									"case":	260,
									"scores":	[-6.72019932256335]
								}, {
									"case":	261,
									"scores":	[-6.72019932256335]
								}, {
									"case":	262,
									"scores":	[-6.72019932256335]
								}, {
									"case":	263,
									"scores":	[-6.72019932256335]
								}, {
									"case":	264,
									"scores":	[-6.72019932256335]
								}, {
									"case":	265,
									"scores":	[-6.72019932256335]
								}, {
									"case":	266,
									"scores":	[-6.72019932256335]
								}, {
									"case":	267,
									"scores":	[-6.72019932256335]
								}, {
									"case":	268,
									"scores":	[-6.72019932256335]
								}, {
									"case":	269,
									"scores":	[-6.72019932256335]
								}, {
									"case":	270,
									"scores":	[-6.72019932256335]
								}, {
									"case":	271,
									"scores":	[-6.72019932256335]
								}, {
									"case":	272,
									"scores":	[-6.72019932256335]
								}, {
									"case":	273,
									"scores":	[-6.72019932256335]
								}, {
									"case":	274,
									"scores":	[-6.72019932256335]
								}, {
									"case":	275,
									"scores":	[-6.72019932256335]
								}, {
									"case":	276,
									"scores":	[-6.72019932256335]
								}, {
									"case":	277,
									"scores":	[-6.72019932256335]
								}, {
									"case":	278,
									"scores":	[-6.72019932256335]
								}, {
									"case":	279,
									"scores":	[-6.72019932256335]
								}, {
									"case":	280,
									"scores":	[-6.72019932256335]
								}, {
									"case":	281,
									"scores":	[-6.72019932256335]
								}, {
									"case":	282,
									"scores":	[-6.72019932256335]
								}, {
									"case":	283,
									"scores":	[-6.72019932256335]
								}, {
									"case":	284,
									"scores":	[-6.72019932256335]
								}, {
									"case":	285,
									"scores":	[-6.72019932256335]
								}, {
									"case":	286,
									"scores":	[-6.72019932256335]
								}, {
									"case":	287,
									"scores":	[-6.72019932256335]
								}, {
									"case":	288,
									"scores":	[-6.72019932256335]
								}, {
									"case":	289,
									"scores":	[-6.72019932256335]
								}, {
									"case":	290,
									"scores":	[-6.72019932256335]
								}, {
									"case":	291,
									"scores":	[-6.72019932256335]
								}, {
									"case":	292,
									"scores":	[-6.72019932256335]
								}, {
									"case":	293,
									"scores":	[-6.72019932256335]
								}, {
									"case":	294,
									"scores":	[-6.72019932256335]
								}, {
									"case":	295,
									"scores":	[-6.72019932256335]
								}, {
									"case":	296,
									"scores":	[-6.72019932256335]
								}, {
									"case":	297,
									"scores":	[-6.72019932256335]
								}, {
									"case":	298,
									"scores":	[-6.72019932256335]
								}, {
									"case":	299,
									"scores":	[-6.72019932256335]
								}, {
									"case":	300,
									"scores":	[-6.72019932256335]
								}, {
									"case":	301,
									"scores":	[-6.72019932256335]
								}, {
									"case":	302,
									"scores":	[-6.72019932256335]
								}, {
									"case":	303,
									"scores":	[-6.72019932256335]
								}, {
									"case":	304,
									"scores":	[-6.72019932256335]
								}, {
									"case":	305,
									"scores":	[-6.72019932256335]
								}, {
									"case":	306,
									"scores":	[-6.72019932256335]
								}, {
									"case":	307,
									"scores":	[-6.72019932256335]
								}, {
									"case":	308,
									"scores":	[-6.72019932256335]
								}, {
									"case":	309,
									"scores":	[-6.72019932256335]
								}, {
									"case":	310,
									"scores":	[-6.72019932256335]
								}, {
									"case":	311,
									"scores":	[-6.72019932256335]
								}, {
									"case":	312,
									"scores":	[-6.72019932256335]
								}, {
									"case":	313,
									"scores":	[-6.72019932256335]
								}, {
									"case":	314,
									"scores":	[-6.72019932256335]
								}, {
									"case":	315,
									"scores":	[-6.72019932256335]
								}, {
									"case":	316,
									"scores":	[-6.72019932256335]
								}, {
									"case":	317,
									"scores":	[-6.72019932256335]
								}, {
									"case":	318,
									"scores":	[-6.72019932256335]
								}, {
									"case":	319,
									"scores":	[-6.72019932256335]
								}, {
									"case":	320,
									"scores":	[-6.72019932256335]
								}, {
									"case":	321,
									"scores":	[-6.72019932256335]
								}, {
									"case":	322,
									"scores":	[-6.72019932256335]
								}, {
									"case":	323,
									"scores":	[-6.72019932256335]
								}, {
									"case":	324,
									"scores":	[-6.72019932256335]
								}, {
									"case":	325,
									"scores":	[-6.72019932256335]
								}, {
									"case":	326,
									"scores":	[-6.72019932256335]
								}, {
									"case":	327,
									"scores":	[-6.72019932256335]
								}, {
									"case":	328,
									"scores":	[-6.72019932256335]
								}, {
									"case":	329,
									"scores":	[-6.72019932256335]
								}, {
									"case":	330,
									"scores":	[-6.72019932256335]
								}, {
									"case":	331,
									"scores":	[-6.72019932256335]
								}, {
									"case":	332,
									"scores":	[-6.72019932256335]
								}, {
									"case":	333,
									"scores":	[-6.72019932256335]
								}, {
									"case":	334,
									"scores":	[-6.72019932256335]
								}, {
									"case":	335,
									"scores":	[-6.72019932256335]
								}, {
									"case":	336,
									"scores":	[-6.72019932256335]
								}, {
									"case":	337,
									"scores":	[-6.72019932256335]
								}, {
									"case":	338,
									"scores":	[-6.72019932256335]
								}, {
									"case":	339,
									"scores":	[-6.72019932256335]
								}, {
									"case":	340,
									"scores":	[-6.72019932256335]
								}, {
									"case":	341,
									"scores":	[-6.72019932256335]
								}, {
									"case":	342,
									"scores":	[-6.72019932256335]
								}, {
									"case":	343,
									"scores":	[-6.72019932256335]
								}, {
									"case":	344,
									"scores":	[-6.72019932256335]
								}, {
									"case":	345,
									"scores":	[-6.72019932256335]
								}, {
									"case":	346,
									"scores":	[-6.72019932256335]
								}, {
									"case":	347,
									"scores":	[-6.72019932256335]
								}, {
									"case":	348,
									"scores":	[-6.72019932256335]
								}, {
									"case":	349,
									"scores":	[-6.72019932256335]
								}, {
									"case":	350,
									"scores":	[-6.72019932256335]
								}, {
									"case":	351,
									"scores":	[-6.72019932256335]
								}, {
									"case":	352,
									"scores":	[-6.72019932256335]
								}, {
									"case":	353,
									"scores":	[-6.72019932256335]
								}, {
									"case":	354,
									"scores":	[-6.72019932256335]
								}, {
									"case":	355,
									"scores":	[-6.72019932256335]
								}, {
									"case":	356,
									"scores":	[-6.72019932256335]
								}, {
									"case":	357,
									"scores":	[-6.72019932256335]
								}, {
									"case":	358,
									"scores":	[-6.72019932256335]
								}, {
									"case":	359,
									"scores":	[-6.72019932256335]
								}, {
									"case":	360,
									"scores":	[-6.72019932256335]
								}, {
									"case":	361,
									"scores":	[-6.72019932256335]
								}, {
									"case":	362,
									"scores":	[-6.72019932256335]
								}, {
									"case":	363,
									"scores":	[-6.72019932256335]
								}, {
									"case":	364,
									"scores":	[-6.72019932256335]
								}, {
									"case":	365,
									"scores":	[-6.72019932256335]
								}, {
									"case":	366,
									"scores":	[-6.72019932256335]
								}, {
									"case":	367,
									"scores":	[-6.72019932256335]
								}, {
									"case":	368,
									"scores":	[-6.72019932256335]
								}, {
									"case":	369,
									"scores":	[-6.72019932256335]
								}, {
									"case":	370,
									"scores":	[-6.72019932256335]
								}, {
									"case":	371,
									"scores":	[-6.72019932256335]
								}, {
									"case":	372,
									"scores":	[-6.72019932256335]
								}, {
									"case":	373,
									"scores":	[-6.72019932256335]
								}, {
									"case":	374,
									"scores":	[-6.72019932256335]
								}, {
									"case":	375,
									"scores":	[-6.72019932256335]
								}, {
									"case":	376,
									"scores":	[-6.72019932256335]
								}, {
									"case":	377,
									"scores":	[-6.72019932256335]
								}, {
									"case":	378,
									"scores":	[-6.72019932256335]
								}, {
									"case":	379,
									"scores":	[-6.72019932256335]
								}, {
									"case":	380,
									"scores":	[-6.72019932256335]
								}, {
									"case":	381,
									"scores":	[-6.72019932256335]
								}, {
									"case":	382,
									"scores":	[-6.72019932256335]
								}, {
									"case":	383,
									"scores":	[-6.72019932256335]
								}, {
									"case":	384,
									"scores":	[-6.72019932256335]
								}, {
									"case":	385,
									"scores":	[-6.72019932256335]
								}, {
									"case":	386,
									"scores":	[-6.72019932256335]
								}, {
									"case":	387,
									"scores":	[-6.72019932256335]
								}, {
									"case":	388,
									"scores":	[-6.72019932256335]
								}, {
									"case":	389,
									"scores":	[-6.72019932256335]
								}, {
									"case":	390,
									"scores":	[-6.72019932256335]
								}, {
									"case":	391,
									"scores":	[-6.72019932256335]
								}, {
									"case":	392,
									"scores":	[-6.72019932256335]
								}, {
									"case":	393,
									"scores":	[-6.72019932256335]
								}, {
									"case":	394,
									"scores":	[-6.72019932256335]
								}, {
									"case":	395,
									"scores":	[-6.72019932256335]
								}, {
									"case":	396,
									"scores":	[-6.72019932256335]
								}, {
									"case":	397,
									"scores":	[-6.72019932256335]
								}, {
									"case":	398,
									"scores":	[-6.72019932256335]
								}, {
									"case":	399,
									"scores":	[-6.72019932256335]
								}, {
									"case":	400,
									"scores":	[-6.72019932256335]
								}, {
									"case":	401,
									"scores":	[-6.72019932256335]
								}, {
									"case":	402,
									"scores":	[-6.72019932256335]
								}, {
									"case":	403,
									"scores":	[-6.72019932256335]
								}, {
									"case":	404,
									"scores":	[-6.72019932256335]
								}, {
									"case":	405,
									"scores":	[-6.72019932256335]
								}, {
									"case":	406,
									"scores":	[-6.72019932256335]
								}, {
									"case":	407,
									"scores":	[-6.72019932256335]
								}, {
									"case":	408,
									"scores":	[-6.72019932256335]
								}, {
									"case":	409,
									"scores":	[-6.72019932256335]
								}, {
									"case":	410,
									"scores":	[-6.72019932256335]
								}, {
									"case":	411,
									"scores":	[-6.72019932256335]
								}, {
									"case":	412,
									"scores":	[-6.72019932256335]
								}, {
									"case":	413,
									"scores":	[-6.72019932256335]
								}, {
									"case":	414,
									"scores":	[-6.72019932256335]
								}, {
									"case":	415,
									"scores":	[-6.72019932256335]
								}, {
									"case":	416,
									"scores":	[-6.72019932256335]
								}, {
									"case":	417,
									"scores":	[-6.72019932256335]
								}, {
									"case":	418,
									"scores":	[-6.72019932256335]
								}, {
									"case":	419,
									"scores":	[-6.72019932256335]
								}, {
									"case":	420,
									"scores":	[-6.72019932256335]
								}, {
									"case":	421,
									"scores":	[-6.72019932256335]
								}, {
									"case":	422,
									"scores":	[-6.72019932256335]
								}, {
									"case":	423,
									"scores":	[-6.72019932256335]
								}, {
									"case":	424,
									"scores":	[-6.72019932256335]
								}, {
									"case":	425,
									"scores":	[-6.72019932256335]
								}, {
									"case":	426,
									"scores":	[-6.72019932256335]
								}, {
									"case":	427,
									"scores":	[-6.72019932256335]
								}, {
									"case":	428,
									"scores":	[-6.72019932256335]
								}, {
									"case":	429,
									"scores":	[-6.72019932256335]
								}, {
									"case":	430,
									"scores":	[-6.72019932256335]
								}, {
									"case":	431,
									"scores":	[-6.66331429556335, -9.47339305956335, -8.55858833856335, -10.252560084263351, -10.432483852363351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.64655913236335, -10.60945873236335, -9.86248481856335, -10.574308935563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.60945873236335, -10.574308935563351]
								}, {
									"case":	432,
									"scores":	[-6.66231429556335, -9.47239305956335, -8.55758833856335, -10.251560084263351, -10.431483852363352, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.645559132363351, -10.608458732363349, -9.86148481856335, -10.57330893556335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.608458732363349, -10.57330893556335]
								}, {
									"case":	433,
									"scores":	[-6.66231429556335, -9.47239305956335, -8.55758833856335, -10.251560084263351, -10.431483852363352, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.645559132363351, -10.608458732363349, -9.86148481856335, -10.57330893556335, -10.36241981856335, -10.36241981856335, -10.36241981856335, -10.608458732363349, -10.57330893556335]
								}, {
									"case":	434,
									"scores":	[-6.66331429556335, -9.47339305956335, -8.55858833856335, -10.252560084263351, -10.432483852363351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.64655913236335, -10.60945873236335, -9.86248481856335, -10.574308935563351, -10.363419818563351, -10.363419818563351, -10.363419818563351, -10.60945873236335, -10.574308935563351]
								}]
						}, {
							"switch":	9,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	280,
							"begin_column":	6,
							"end_line":	283,
							"end_column":	6,
							"patch_codes":	["if (__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    adjust = LEFT;\n    min_width = -min_width;\n}\n", "if ((min_width < 0) || __is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    adjust = LEFT;\n    min_width = -min_width;\n}\n", "if ((min_width < 0) && !__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    adjust = LEFT;\n    min_width = -min_width;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.5746490324281459, -5.7129988924281454, -4.9653795114281456, -6.7646151314281457, -6.527732271428146, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -6.8982952714281458, -6.6039444714281457, -5.5240453414281454, -6.3153163714281462, -5.8460563714281459, -5.8460563714281459, -5.8460563714281459, -6.6039444714281457, -6.3153163714281462]
								}, {
									"case":	2,
									"scores":	[-2.5565817214281461, -4.694931581428146, -3.9473122004281458, -5.7465478204281464, -5.5096649604281458, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -5.8802279604281464, -5.5858771604281463, -4.505978030428146, -5.2972490604281459, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -5.5858771604281463, -5.2972490604281459]
								}, {
									"case":	3,
									"scores":	[-2.5565817214281461, -4.694931581428146, -3.9473122004281458, -5.7465478204281464, -5.5096649604281458, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -5.8802279604281464, -5.5858771604281463, -4.505978030428146, -5.2972490604281459, -4.8279890604281457, -4.8279890604281457, -4.8279890604281457, -5.5858771604281463, -5.2972490604281459]
								}]
						}, {
							"switch":	10,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	280,
							"begin_column":	6,
							"end_line":	283,
							"end_column":	6,
							"patch_codes":	["if (!__is_neg(\"\", \"L280\", 23, &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(modifier), sizeof (modifier), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    if (min_width < 0) {\n        adjust = LEFT;\n        min_width = -min_width;\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.78919495356335, -8.92754481356335, -8.17992543256335, -9.97916105256335, -9.74227819256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -10.112841192563351, -9.81849039256335, -8.73859126256335, -9.52986229256335, -9.06060229256335, -9.06060229256335, -9.06060229256335, -9.81849039256335, -9.52986229256335]
								}]
						}]
				}, {
					"line":	275,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	276,
							"begin_column":	10,
							"end_line":	276,
							"end_column":	10,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.78080744451591]
								}, {
									"case":	2,
									"scores":	[-6.78080744451591]
								}, {
									"case":	3,
									"scores":	[-6.78080744451591]
								}, {
									"case":	4,
									"scores":	[-6.78080744451591]
								}, {
									"case":	5,
									"scores":	[-6.78080744451591]
								}, {
									"case":	6,
									"scores":	[-6.78080744451591]
								}, {
									"case":	7,
									"scores":	[-6.78080744451591]
								}, {
									"case":	8,
									"scores":	[-6.78080744451591]
								}, {
									"case":	9,
									"scores":	[-6.78080744451591]
								}, {
									"case":	10,
									"scores":	[-6.78080744451591]
								}, {
									"case":	11,
									"scores":	[-6.78080744451591]
								}, {
									"case":	12,
									"scores":	[-6.78080744451591]
								}, {
									"case":	13,
									"scores":	[-6.78080744451591]
								}, {
									"case":	14,
									"scores":	[-6.78080744451591]
								}, {
									"case":	15,
									"scores":	[-6.78080744451591]
								}, {
									"case":	16,
									"scores":	[-6.78080744451591]
								}, {
									"case":	17,
									"scores":	[-6.78080744451591]
								}, {
									"case":	18,
									"scores":	[-6.78080744451591]
								}, {
									"case":	19,
									"scores":	[-6.78080744451591]
								}, {
									"case":	20,
									"scores":	[-6.78080744451591]
								}, {
									"case":	21,
									"scores":	[-6.78080744451591]
								}, {
									"case":	22,
									"scores":	[-6.78080744451591]
								}, {
									"case":	23,
									"scores":	[-6.78080744451591]
								}, {
									"case":	24,
									"scores":	[-6.78080744451591]
								}, {
									"case":	25,
									"scores":	[-6.78080744451591]
								}, {
									"case":	26,
									"scores":	[-6.78080744451591]
								}, {
									"case":	27,
									"scores":	[-6.78080744451591]
								}, {
									"case":	28,
									"scores":	[-6.78080744451591]
								}, {
									"case":	29,
									"scores":	[-6.78080744451591]
								}, {
									"case":	30,
									"scores":	[-6.78080744451591]
								}, {
									"case":	31,
									"scores":	[-6.78080744451591]
								}, {
									"case":	32,
									"scores":	[-6.78080744451591]
								}, {
									"case":	33,
									"scores":	[-6.78080744451591]
								}, {
									"case":	34,
									"scores":	[-6.78080744451591]
								}, {
									"case":	35,
									"scores":	[-6.78080744451591]
								}, {
									"case":	36,
									"scores":	[-6.78080744451591]
								}, {
									"case":	37,
									"scores":	[-6.78080744451591]
								}, {
									"case":	38,
									"scores":	[-6.78080744451591]
								}, {
									"case":	39,
									"scores":	[-6.78080744451591]
								}, {
									"case":	40,
									"scores":	[-6.78080744451591]
								}, {
									"case":	41,
									"scores":	[-6.78080744451591]
								}, {
									"case":	42,
									"scores":	[-6.78080744451591]
								}, {
									"case":	43,
									"scores":	[-6.78080744451591]
								}, {
									"case":	44,
									"scores":	[-6.78080744451591]
								}, {
									"case":	45,
									"scores":	[-6.78080744451591]
								}, {
									"case":	46,
									"scores":	[-6.78080744451591]
								}, {
									"case":	47,
									"scores":	[-6.78080744451591]
								}, {
									"case":	48,
									"scores":	[-6.78080744451591]
								}, {
									"case":	49,
									"scores":	[-6.78080744451591]
								}, {
									"case":	50,
									"scores":	[-6.78080744451591]
								}, {
									"case":	51,
									"scores":	[-6.78080744451591]
								}, {
									"case":	52,
									"scores":	[-6.78080744451591]
								}, {
									"case":	53,
									"scores":	[-6.78080744451591]
								}, {
									"case":	54,
									"scores":	[-6.78080744451591]
								}, {
									"case":	55,
									"scores":	[-6.78080744451591]
								}, {
									"case":	56,
									"scores":	[-6.78080744451591]
								}, {
									"case":	57,
									"scores":	[-6.78080744451591]
								}, {
									"case":	58,
									"scores":	[-6.78080744451591]
								}, {
									"case":	59,
									"scores":	[-6.78080744451591]
								}, {
									"case":	60,
									"scores":	[-6.78080744451591]
								}, {
									"case":	61,
									"scores":	[-6.78080744451591]
								}, {
									"case":	62,
									"scores":	[-6.78080744451591]
								}, {
									"case":	63,
									"scores":	[-6.78080744451591]
								}, {
									"case":	64,
									"scores":	[-6.78080744451591]
								}, {
									"case":	65,
									"scores":	[-6.78080744451591]
								}, {
									"case":	66,
									"scores":	[-6.78080744451591]
								}, {
									"case":	67,
									"scores":	[-6.78080744451591]
								}, {
									"case":	68,
									"scores":	[-6.78080744451591]
								}, {
									"case":	69,
									"scores":	[-6.78080744451591]
								}, {
									"case":	70,
									"scores":	[-6.78080744451591]
								}, {
									"case":	71,
									"scores":	[-6.78080744451591]
								}, {
									"case":	72,
									"scores":	[-6.78080744451591]
								}, {
									"case":	73,
									"scores":	[-6.78080744451591]
								}, {
									"case":	74,
									"scores":	[-6.78080744451591]
								}, {
									"case":	75,
									"scores":	[-6.78080744451591]
								}, {
									"case":	76,
									"scores":	[-6.78080744451591]
								}, {
									"case":	77,
									"scores":	[-6.78080744451591]
								}, {
									"case":	78,
									"scores":	[-6.78080744451591]
								}, {
									"case":	79,
									"scores":	[-6.78080744451591]
								}, {
									"case":	80,
									"scores":	[-6.78080744451591]
								}, {
									"case":	81,
									"scores":	[-6.78080744451591]
								}, {
									"case":	82,
									"scores":	[-6.78080744451591]
								}, {
									"case":	83,
									"scores":	[-6.78080744451591]
								}, {
									"case":	84,
									"scores":	[-6.78080744451591]
								}, {
									"case":	85,
									"scores":	[-6.78080744451591]
								}, {
									"case":	86,
									"scores":	[-6.78080744451591]
								}, {
									"case":	87,
									"scores":	[-6.78080744451591]
								}, {
									"case":	88,
									"scores":	[-6.78080744451591]
								}, {
									"case":	89,
									"scores":	[-6.78080744451591]
								}, {
									"case":	90,
									"scores":	[-6.78080744451591]
								}, {
									"case":	91,
									"scores":	[-6.78080744451591]
								}, {
									"case":	92,
									"scores":	[-6.78080744451591]
								}, {
									"case":	93,
									"scores":	[-6.78080744451591]
								}, {
									"case":	94,
									"scores":	[-6.78080744451591]
								}, {
									"case":	95,
									"scores":	[-6.78080744451591]
								}, {
									"case":	96,
									"scores":	[-6.78080744451591]
								}, {
									"case":	97,
									"scores":	[-6.78080744451591]
								}, {
									"case":	98,
									"scores":	[-6.78080744451591]
								}, {
									"case":	99,
									"scores":	[-6.78080744451591]
								}, {
									"case":	100,
									"scores":	[-6.78080744451591]
								}, {
									"case":	101,
									"scores":	[-6.78080744451591]
								}, {
									"case":	102,
									"scores":	[-6.78080744451591]
								}, {
									"case":	103,
									"scores":	[-6.78080744451591]
								}, {
									"case":	104,
									"scores":	[-6.78080744451591]
								}, {
									"case":	105,
									"scores":	[-6.78080744451591]
								}, {
									"case":	106,
									"scores":	[-6.78080744451591]
								}, {
									"case":	107,
									"scores":	[-6.78080744451591]
								}, {
									"case":	108,
									"scores":	[-6.78080744451591]
								}, {
									"case":	109,
									"scores":	[-6.78080744451591]
								}, {
									"case":	110,
									"scores":	[-6.78080744451591]
								}, {
									"case":	111,
									"scores":	[-6.78080744451591]
								}, {
									"case":	112,
									"scores":	[-6.78080744451591]
								}, {
									"case":	113,
									"scores":	[-6.78080744451591]
								}, {
									"case":	114,
									"scores":	[-6.78080744451591]
								}, {
									"case":	115,
									"scores":	[-6.78080744451591]
								}, {
									"case":	116,
									"scores":	[-6.78080744451591]
								}, {
									"case":	117,
									"scores":	[-6.78080744451591]
								}, {
									"case":	118,
									"scores":	[-6.78080744451591]
								}, {
									"case":	119,
									"scores":	[-6.78080744451591]
								}, {
									"case":	120,
									"scores":	[-6.78080744451591]
								}, {
									"case":	121,
									"scores":	[-6.78080744451591]
								}, {
									"case":	122,
									"scores":	[-6.78080744451591]
								}, {
									"case":	123,
									"scores":	[-6.78080744451591]
								}, {
									"case":	124,
									"scores":	[-6.78080744451591]
								}, {
									"case":	125,
									"scores":	[-6.78080744451591]
								}, {
									"case":	126,
									"scores":	[-6.78080744451591]
								}, {
									"case":	127,
									"scores":	[-6.78080744451591]
								}, {
									"case":	128,
									"scores":	[-6.78080744451591]
								}, {
									"case":	129,
									"scores":	[-6.78080744451591]
								}, {
									"case":	130,
									"scores":	[-6.78080744451591]
								}, {
									"case":	131,
									"scores":	[-6.78080744451591]
								}, {
									"case":	132,
									"scores":	[-6.78080744451591]
								}, {
									"case":	133,
									"scores":	[-6.78080744451591]
								}, {
									"case":	134,
									"scores":	[-6.78080744451591]
								}, {
									"case":	135,
									"scores":	[-6.78080744451591]
								}, {
									"case":	136,
									"scores":	[-6.78080744451591]
								}, {
									"case":	137,
									"scores":	[-6.78080744451591]
								}, {
									"case":	138,
									"scores":	[-6.78080744451591]
								}, {
									"case":	139,
									"scores":	[-6.78080744451591]
								}, {
									"case":	140,
									"scores":	[-6.78080744451591]
								}, {
									"case":	141,
									"scores":	[-6.78080744451591]
								}, {
									"case":	142,
									"scores":	[-6.78080744451591]
								}, {
									"case":	143,
									"scores":	[-6.78080744451591]
								}, {
									"case":	144,
									"scores":	[-6.78080744451591]
								}, {
									"case":	145,
									"scores":	[-6.78080744451591]
								}, {
									"case":	146,
									"scores":	[-6.78080744451591]
								}, {
									"case":	147,
									"scores":	[-6.78080744451591]
								}, {
									"case":	148,
									"scores":	[-6.78080744451591]
								}, {
									"case":	149,
									"scores":	[-6.78080744451591]
								}, {
									"case":	150,
									"scores":	[-6.78080744451591]
								}, {
									"case":	151,
									"scores":	[-6.78080744451591]
								}, {
									"case":	152,
									"scores":	[-6.78080744451591]
								}, {
									"case":	153,
									"scores":	[-6.78080744451591]
								}, {
									"case":	154,
									"scores":	[-6.78080744451591]
								}, {
									"case":	155,
									"scores":	[-6.78080744451591]
								}, {
									"case":	156,
									"scores":	[-6.78080744451591]
								}, {
									"case":	157,
									"scores":	[-6.78080744451591]
								}, {
									"case":	158,
									"scores":	[-6.78080744451591]
								}, {
									"case":	159,
									"scores":	[-6.78080744451591]
								}, {
									"case":	160,
									"scores":	[-6.78080744451591]
								}, {
									"case":	161,
									"scores":	[-6.78080744451591]
								}, {
									"case":	162,
									"scores":	[-6.78080744451591]
								}, {
									"case":	163,
									"scores":	[-6.78080744451591]
								}, {
									"case":	164,
									"scores":	[-6.78080744451591]
								}, {
									"case":	165,
									"scores":	[-6.78080744451591]
								}, {
									"case":	166,
									"scores":	[-6.78080744451591]
								}, {
									"case":	167,
									"scores":	[-6.78080744451591]
								}, {
									"case":	168,
									"scores":	[-6.78080744451591]
								}, {
									"case":	169,
									"scores":	[-6.78080744451591]
								}, {
									"case":	170,
									"scores":	[-6.78080744451591]
								}, {
									"case":	171,
									"scores":	[-6.78080744451591]
								}, {
									"case":	172,
									"scores":	[-6.78080744451591]
								}, {
									"case":	173,
									"scores":	[-6.78080744451591]
								}, {
									"case":	174,
									"scores":	[-6.78080744451591]
								}, {
									"case":	175,
									"scores":	[-6.78080744451591]
								}, {
									"case":	176,
									"scores":	[-6.78080744451591]
								}, {
									"case":	177,
									"scores":	[-6.78080744451591]
								}, {
									"case":	178,
									"scores":	[-6.78080744451591]
								}, {
									"case":	179,
									"scores":	[-6.78080744451591]
								}, {
									"case":	180,
									"scores":	[-6.78080744451591]
								}, {
									"case":	181,
									"scores":	[-6.78080744451591]
								}, {
									"case":	182,
									"scores":	[-6.78080744451591]
								}, {
									"case":	183,
									"scores":	[-6.78080744451591]
								}, {
									"case":	184,
									"scores":	[-6.78080744451591]
								}, {
									"case":	185,
									"scores":	[-6.78080744451591]
								}, {
									"case":	186,
									"scores":	[-6.78080744451591]
								}, {
									"case":	187,
									"scores":	[-6.78080744451591]
								}, {
									"case":	188,
									"scores":	[-6.78080744451591]
								}, {
									"case":	189,
									"scores":	[-6.78080744451591]
								}, {
									"case":	190,
									"scores":	[-6.78080744451591]
								}, {
									"case":	191,
									"scores":	[-6.78080744451591]
								}, {
									"case":	192,
									"scores":	[-6.78080744451591]
								}, {
									"case":	193,
									"scores":	[-6.78080744451591]
								}, {
									"case":	194,
									"scores":	[-6.78080744451591]
								}, {
									"case":	195,
									"scores":	[-6.78080744451591]
								}, {
									"case":	196,
									"scores":	[-6.78080744451591]
								}, {
									"case":	197,
									"scores":	[-6.78080744451591]
								}, {
									"case":	198,
									"scores":	[-6.78080744451591]
								}, {
									"case":	199,
									"scores":	[-6.78080744451591]
								}, {
									"case":	200,
									"scores":	[-6.78080744451591]
								}, {
									"case":	201,
									"scores":	[-6.78080744451591]
								}, {
									"case":	202,
									"scores":	[-6.78080744451591]
								}, {
									"case":	203,
									"scores":	[-6.78080744451591]
								}, {
									"case":	204,
									"scores":	[-6.78080744451591]
								}, {
									"case":	205,
									"scores":	[-6.78080744451591]
								}, {
									"case":	206,
									"scores":	[-6.78080744451591]
								}, {
									"case":	207,
									"scores":	[-6.78080744451591]
								}, {
									"case":	208,
									"scores":	[-6.78080744451591]
								}, {
									"case":	209,
									"scores":	[-6.78080744451591]
								}, {
									"case":	210,
									"scores":	[-6.78080744451591]
								}, {
									"case":	211,
									"scores":	[-6.78080744451591]
								}, {
									"case":	212,
									"scores":	[-6.78080744451591]
								}, {
									"case":	213,
									"scores":	[-6.78080744451591]
								}, {
									"case":	214,
									"scores":	[-6.78080744451591]
								}, {
									"case":	215,
									"scores":	[-6.78080744451591]
								}, {
									"case":	216,
									"scores":	[-6.78080744451591]
								}, {
									"case":	217,
									"scores":	[-6.78080744451591]
								}, {
									"case":	218,
									"scores":	[-6.78080744451591]
								}, {
									"case":	219,
									"scores":	[-6.78080744451591]
								}, {
									"case":	220,
									"scores":	[-6.78080744451591]
								}, {
									"case":	221,
									"scores":	[-6.78080744451591]
								}, {
									"case":	222,
									"scores":	[-6.78080744451591]
								}, {
									"case":	223,
									"scores":	[-6.78080744451591]
								}, {
									"case":	224,
									"scores":	[-6.78080744451591]
								}, {
									"case":	225,
									"scores":	[-6.78080744451591]
								}, {
									"case":	226,
									"scores":	[-6.78080744451591]
								}, {
									"case":	227,
									"scores":	[-6.78080744451591]
								}, {
									"case":	228,
									"scores":	[-6.78080744451591]
								}, {
									"case":	229,
									"scores":	[-6.78080744451591]
								}, {
									"case":	230,
									"scores":	[-6.78080744451591]
								}, {
									"case":	231,
									"scores":	[-6.78080744451591]
								}, {
									"case":	232,
									"scores":	[-6.78080744451591]
								}, {
									"case":	233,
									"scores":	[-6.78080744451591]
								}, {
									"case":	234,
									"scores":	[-6.78080744451591]
								}, {
									"case":	235,
									"scores":	[-6.78080744451591]
								}, {
									"case":	236,
									"scores":	[-6.78080744451591]
								}, {
									"case":	237,
									"scores":	[-6.78080744451591]
								}, {
									"case":	238,
									"scores":	[-6.78080744451591]
								}, {
									"case":	239,
									"scores":	[-6.78080744451591]
								}, {
									"case":	240,
									"scores":	[-6.78080744451591]
								}, {
									"case":	241,
									"scores":	[-6.78080744451591]
								}, {
									"case":	242,
									"scores":	[-6.78080744451591]
								}, {
									"case":	243,
									"scores":	[-6.78080744451591]
								}, {
									"case":	244,
									"scores":	[-6.78080744451591]
								}, {
									"case":	245,
									"scores":	[-6.78080744451591]
								}, {
									"case":	246,
									"scores":	[-6.78080744451591]
								}, {
									"case":	247,
									"scores":	[-6.78080744451591]
								}, {
									"case":	248,
									"scores":	[-6.78080744451591]
								}, {
									"case":	249,
									"scores":	[-6.78080744451591]
								}, {
									"case":	250,
									"scores":	[-6.78080744451591]
								}, {
									"case":	251,
									"scores":	[-6.78080744451591]
								}, {
									"case":	252,
									"scores":	[-6.78080744451591]
								}, {
									"case":	253,
									"scores":	[-6.78080744451591]
								}, {
									"case":	254,
									"scores":	[-6.78080744451591]
								}, {
									"case":	255,
									"scores":	[-6.78080744451591]
								}, {
									"case":	256,
									"scores":	[-6.78080744451591]
								}, {
									"case":	257,
									"scores":	[-6.78080744451591]
								}, {
									"case":	258,
									"scores":	[-6.78080744451591]
								}, {
									"case":	259,
									"scores":	[-6.78080744451591]
								}, {
									"case":	260,
									"scores":	[-6.78080744451591]
								}, {
									"case":	261,
									"scores":	[-6.78080744451591]
								}, {
									"case":	262,
									"scores":	[-6.78080744451591]
								}, {
									"case":	263,
									"scores":	[-6.78080744451591]
								}, {
									"case":	264,
									"scores":	[-6.78080744451591]
								}, {
									"case":	265,
									"scores":	[-6.78080744451591]
								}, {
									"case":	266,
									"scores":	[-6.78080744451591]
								}, {
									"case":	267,
									"scores":	[-6.78080744451591]
								}, {
									"case":	268,
									"scores":	[-6.78080744451591]
								}, {
									"case":	269,
									"scores":	[-6.78080744451591]
								}, {
									"case":	270,
									"scores":	[-6.78080744451591]
								}, {
									"case":	271,
									"scores":	[-6.78080744451591]
								}, {
									"case":	272,
									"scores":	[-6.78080744451591]
								}, {
									"case":	273,
									"scores":	[-6.78080744451591]
								}, {
									"case":	274,
									"scores":	[-6.78080744451591]
								}, {
									"case":	275,
									"scores":	[-6.78080744451591]
								}, {
									"case":	276,
									"scores":	[-6.78080744451591]
								}, {
									"case":	277,
									"scores":	[-6.78080744451591]
								}, {
									"case":	278,
									"scores":	[-6.78080744451591]
								}, {
									"case":	279,
									"scores":	[-6.78080744451591]
								}, {
									"case":	280,
									"scores":	[-6.78080744451591]
								}, {
									"case":	281,
									"scores":	[-6.78080744451591]
								}, {
									"case":	282,
									"scores":	[-6.78080744451591]
								}, {
									"case":	283,
									"scores":	[-6.78080744451591]
								}, {
									"case":	284,
									"scores":	[-6.78080744451591]
								}, {
									"case":	285,
									"scores":	[-6.78080744451591]
								}, {
									"case":	286,
									"scores":	[-6.78080744451591]
								}, {
									"case":	287,
									"scores":	[-6.78080744451591]
								}, {
									"case":	288,
									"scores":	[-6.78080744451591]
								}, {
									"case":	289,
									"scores":	[-6.78080744451591]
								}, {
									"case":	290,
									"scores":	[-6.78080744451591]
								}, {
									"case":	291,
									"scores":	[-6.78080744451591]
								}, {
									"case":	292,
									"scores":	[-6.78080744451591]
								}, {
									"case":	293,
									"scores":	[-6.78080744451591]
								}, {
									"case":	294,
									"scores":	[-6.78080744451591]
								}, {
									"case":	295,
									"scores":	[-6.78080744451591]
								}, {
									"case":	296,
									"scores":	[-6.78080744451591]
								}, {
									"case":	297,
									"scores":	[-6.78080744451591]
								}, {
									"case":	298,
									"scores":	[-6.78080744451591]
								}, {
									"case":	299,
									"scores":	[-6.78080744451591]
								}, {
									"case":	300,
									"scores":	[-6.78080744451591]
								}, {
									"case":	301,
									"scores":	[-6.78080744451591]
								}, {
									"case":	302,
									"scores":	[-6.78080744451591]
								}, {
									"case":	303,
									"scores":	[-6.78080744451591]
								}, {
									"case":	304,
									"scores":	[-6.78080744451591]
								}, {
									"case":	305,
									"scores":	[-6.78080744451591]
								}, {
									"case":	306,
									"scores":	[-6.78080744451591]
								}, {
									"case":	307,
									"scores":	[-6.78080744451591]
								}, {
									"case":	308,
									"scores":	[-6.78080744451591]
								}, {
									"case":	309,
									"scores":	[-6.78080744451591]
								}, {
									"case":	310,
									"scores":	[-6.78080744451591]
								}, {
									"case":	311,
									"scores":	[-6.78080744451591]
								}, {
									"case":	312,
									"scores":	[-6.78080744451591]
								}, {
									"case":	313,
									"scores":	[-6.78080744451591]
								}, {
									"case":	314,
									"scores":	[-6.78080744451591]
								}, {
									"case":	315,
									"scores":	[-6.78080744451591]
								}, {
									"case":	316,
									"scores":	[-6.78080744451591]
								}, {
									"case":	317,
									"scores":	[-6.78080744451591]
								}, {
									"case":	318,
									"scores":	[-6.78080744451591]
								}, {
									"case":	319,
									"scores":	[-6.78080744451591]
								}, {
									"case":	320,
									"scores":	[-6.78080744451591]
								}, {
									"case":	321,
									"scores":	[-6.78080744451591]
								}, {
									"case":	322,
									"scores":	[-6.78080744451591]
								}, {
									"case":	323,
									"scores":	[-6.78080744451591]
								}, {
									"case":	324,
									"scores":	[-6.78080744451591]
								}, {
									"case":	325,
									"scores":	[-6.78080744451591]
								}, {
									"case":	326,
									"scores":	[-6.78080744451591]
								}, {
									"case":	327,
									"scores":	[-6.78080744451591]
								}, {
									"case":	328,
									"scores":	[-6.78080744451591]
								}, {
									"case":	329,
									"scores":	[-6.78080744451591]
								}, {
									"case":	330,
									"scores":	[-6.78080744451591]
								}, {
									"case":	331,
									"scores":	[-6.78080744451591]
								}, {
									"case":	332,
									"scores":	[-6.78080744451591]
								}, {
									"case":	333,
									"scores":	[-6.78080744451591]
								}, {
									"case":	334,
									"scores":	[-6.78080744451591]
								}, {
									"case":	335,
									"scores":	[-6.78080744451591]
								}, {
									"case":	336,
									"scores":	[-6.78080744451591]
								}, {
									"case":	337,
									"scores":	[-6.78080744451591]
								}, {
									"case":	338,
									"scores":	[-6.78080744451591]
								}, {
									"case":	339,
									"scores":	[-6.78080744451591]
								}, {
									"case":	340,
									"scores":	[-6.78080744451591]
								}, {
									"case":	341,
									"scores":	[-6.78080744451591]
								}, {
									"case":	342,
									"scores":	[-6.78080744451591]
								}, {
									"case":	343,
									"scores":	[-6.78080744451591]
								}, {
									"case":	344,
									"scores":	[-6.78080744451591]
								}, {
									"case":	345,
									"scores":	[-6.78080744451591]
								}, {
									"case":	346,
									"scores":	[-6.78080744451591]
								}, {
									"case":	347,
									"scores":	[-6.78080744451591]
								}, {
									"case":	348,
									"scores":	[-6.78080744451591]
								}, {
									"case":	349,
									"scores":	[-6.78080744451591]
								}, {
									"case":	350,
									"scores":	[-6.78080744451591]
								}, {
									"case":	351,
									"scores":	[-6.78080744451591]
								}, {
									"case":	352,
									"scores":	[-6.78080744451591]
								}, {
									"case":	353,
									"scores":	[-6.78080744451591]
								}, {
									"case":	354,
									"scores":	[-6.78080744451591]
								}, {
									"case":	355,
									"scores":	[-6.78080744451591]
								}, {
									"case":	356,
									"scores":	[-6.78080744451591]
								}, {
									"case":	357,
									"scores":	[-6.78080744451591]
								}, {
									"case":	358,
									"scores":	[-6.78080744451591]
								}, {
									"case":	359,
									"scores":	[-6.78080744451591]
								}, {
									"case":	360,
									"scores":	[-6.78080744451591]
								}, {
									"case":	361,
									"scores":	[-6.78080744451591]
								}, {
									"case":	362,
									"scores":	[-6.78080744451591]
								}, {
									"case":	363,
									"scores":	[-6.78080744451591]
								}, {
									"case":	364,
									"scores":	[-6.78080744451591]
								}, {
									"case":	365,
									"scores":	[-6.78080744451591]
								}, {
									"case":	366,
									"scores":	[-6.78080744451591]
								}, {
									"case":	367,
									"scores":	[-6.78080744451591]
								}, {
									"case":	368,
									"scores":	[-6.78080744451591]
								}, {
									"case":	369,
									"scores":	[-6.78080744451591]
								}, {
									"case":	370,
									"scores":	[-6.78080744451591]
								}, {
									"case":	371,
									"scores":	[-6.78080744451591]
								}, {
									"case":	372,
									"scores":	[-6.78080744451591]
								}, {
									"case":	373,
									"scores":	[-6.78080744451591]
								}, {
									"case":	374,
									"scores":	[-6.78080744451591]
								}, {
									"case":	375,
									"scores":	[-6.78080744451591]
								}, {
									"case":	376,
									"scores":	[-6.78080744451591]
								}, {
									"case":	377,
									"scores":	[-6.78080744451591]
								}, {
									"case":	378,
									"scores":	[-6.78080744451591]
								}, {
									"case":	379,
									"scores":	[-6.78080744451591]
								}, {
									"case":	380,
									"scores":	[-6.78080744451591]
								}, {
									"case":	381,
									"scores":	[-6.78080744451591]
								}, {
									"case":	382,
									"scores":	[-6.78080744451591]
								}, {
									"case":	383,
									"scores":	[-6.78080744451591]
								}, {
									"case":	384,
									"scores":	[-6.78080744451591]
								}, {
									"case":	385,
									"scores":	[-6.78080744451591]
								}, {
									"case":	386,
									"scores":	[-6.78080744451591]
								}, {
									"case":	387,
									"scores":	[-6.78080744451591]
								}, {
									"case":	388,
									"scores":	[-6.78080744451591]
								}, {
									"case":	389,
									"scores":	[-6.78080744451591]
								}, {
									"case":	390,
									"scores":	[-6.78080744451591]
								}, {
									"case":	391,
									"scores":	[-6.78080744451591]
								}, {
									"case":	392,
									"scores":	[-6.78080744451591]
								}, {
									"case":	393,
									"scores":	[-6.78080744451591]
								}, {
									"case":	394,
									"scores":	[-6.78080744451591]
								}, {
									"case":	395,
									"scores":	[-6.78080744451591]
								}, {
									"case":	396,
									"scores":	[-6.78080744451591]
								}, {
									"case":	397,
									"scores":	[-6.78080744451591]
								}, {
									"case":	398,
									"scores":	[-6.78080744451591]
								}, {
									"case":	399,
									"scores":	[-6.78080744451591]
								}, {
									"case":	400,
									"scores":	[-6.78080744451591]
								}, {
									"case":	401,
									"scores":	[-6.78080744451591]
								}, {
									"case":	402,
									"scores":	[-6.78080744451591]
								}, {
									"case":	403,
									"scores":	[-6.78080744451591]
								}, {
									"case":	404,
									"scores":	[-6.78080744451591]
								}, {
									"case":	405,
									"scores":	[-6.78080744451591]
								}, {
									"case":	406,
									"scores":	[-6.78080744451591]
								}, {
									"case":	407,
									"scores":	[-6.78080744451591]
								}, {
									"case":	408,
									"scores":	[-6.78080744451591]
								}, {
									"case":	409,
									"scores":	[-6.78080744451591]
								}, {
									"case":	410,
									"scores":	[-6.78080744451591]
								}, {
									"case":	411,
									"scores":	[-6.78080744451591]
								}, {
									"case":	412,
									"scores":	[-6.78080744451591]
								}, {
									"case":	413,
									"scores":	[-6.78080744451591]
								}, {
									"case":	414,
									"scores":	[-6.78080744451591]
								}, {
									"case":	415,
									"scores":	[-6.78080744451591]
								}, {
									"case":	416,
									"scores":	[-6.78080744451591]
								}, {
									"case":	417,
									"scores":	[-6.78080744451591]
								}, {
									"case":	418,
									"scores":	[-6.78080744451591]
								}, {
									"case":	419,
									"scores":	[-6.78080744451591]
								}, {
									"case":	420,
									"scores":	[-6.78080744451591]
								}, {
									"case":	421,
									"scores":	[-6.78080744451591]
								}, {
									"case":	422,
									"scores":	[-6.78080744451591]
								}, {
									"case":	423,
									"scores":	[-6.78080744451591]
								}, {
									"case":	424,
									"scores":	[-6.78080744451591]
								}, {
									"case":	425,
									"scores":	[-6.78080744451591]
								}, {
									"case":	426,
									"scores":	[-6.78080744451591]
								}, {
									"case":	427,
									"scores":	[-6.78080744451591]
								}, {
									"case":	428,
									"scores":	[-6.78080744451591]
								}, {
									"case":	429,
									"scores":	[-6.78080744451591]
								}, {
									"case":	430,
									"scores":	[-6.78080744451591]
								}]
						}, {
							"switch":	1,
							"types":	[[2], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	276,
							"begin_column":	12,
							"end_line":	285,
							"end_column":	21,
							"patch_codes":	["if (__is_neg(\"\", \"L276\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(adjust_precision), sizeof (adjust_precision), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(modifier), sizeof (modifier), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    min_width = __builtin_va_arg(ap, int);\n    fmt++;\n    adjust_width = YES;\n    if (min_width < 0) {\n        adjust = LEFT;\n        min_width = -min_width;\n    }\n} else\n    adjust_width = NO;\n", "if ((*fmt == '*') && !__is_neg(\"\", \"L276\", 23, &(fmt), sizeof (fmt), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust_width), sizeof (adjust_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(adjust_precision), sizeof (adjust_precision), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(modifier), sizeof (modifier), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    min_width = __builtin_va_arg(ap, int);\n    fmt++;\n    adjust_width = YES;\n    if (min_width < 0) {\n        adjust = LEFT;\n        min_width = -min_width;\n    }\n} else\n    adjust_width = NO;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9864251981281469, -4.8583457971281474, -2.9102854081281468, -4.167958408128146, -4.167958408128146, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -5.3532547871281464, -4.3010158871281456, -5.0589039871281463, -3.979004857128146, -4.7702758871281459, -4.3010158871281456, -4.3010158871281456, -4.3010158871281456, -5.0589039871281463, -4.7702758871281459]
								}, {
									"case":	2,
									"scores":	[-2.2356169864281457, -3.1075375854281457, -1.1594771964281452, -2.4171501964281461, -2.4171501964281461, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -3.6024465754281456, -2.5502076754281457, -3.3080957754281464, -2.2281966454281461, -3.019467675428146, -2.5502076754281457, -2.5502076754281457, -2.5502076754281457, -3.3080957754281464, -3.019467675428146]
								}]
						}]
				}, {
					"line":	306,
					"switches":	[{
							"switch":	12,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	307,
							"begin_column":	4,
							"end_line":	307,
							"end_column":	4,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L307\", 23, &(adjust_precision), sizeof (adjust_precision), &(adjust_width), sizeof (adjust_width), &(precision), sizeof (precision), &(fmt), sizeof (fmt), &(modifier), sizeof (modifier), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    break;\n", "if (__is_neg(\"\", \"L307\", 23, &(adjust_precision), sizeof (adjust_precision), &(adjust_width), sizeof (adjust_width), &(precision), sizeof (precision), &(fmt), sizeof (fmt), &(modifier), sizeof (modifier), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L307\", 23, &(adjust_precision), sizeof (adjust_precision), &(adjust_width), sizeof (adjust_width), &(precision), sizeof (precision), &(fmt), sizeof (fmt), &(modifier), sizeof (modifier), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L307\", 23, &(adjust_precision), sizeof (adjust_precision), &(adjust_width), sizeof (adjust_width), &(precision), sizeof (precision), &(fmt), sizeof (fmt), &(modifier), sizeof (modifier), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	2,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	3,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	4,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	5,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	6,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	7,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	8,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	9,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	10,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	11,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	12,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	13,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	14,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	15,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	16,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	17,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	18,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	19,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	20,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	21,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	22,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	23,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	24,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	25,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	26,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	27,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	28,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	29,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	30,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	31,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	32,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	33,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	34,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	35,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	36,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	37,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	38,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	39,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	40,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	41,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	42,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	43,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	44,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	45,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	46,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	47,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	48,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	49,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	50,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	51,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	52,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	53,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	54,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	55,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	56,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	57,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	58,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	59,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	60,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	61,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	62,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	63,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	64,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	65,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	66,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	67,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	68,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	69,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	70,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	71,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	72,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	73,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	74,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	75,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	76,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	77,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	78,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	79,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	80,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	81,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	82,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	83,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	84,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	85,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	86,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	87,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	88,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	89,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	90,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	91,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	92,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	93,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	94,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	95,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	96,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	97,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	98,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	99,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	100,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	101,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	102,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	103,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	104,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	105,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	106,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	107,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	108,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	109,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	110,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	111,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	112,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	113,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	114,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	115,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	116,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	117,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	118,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	119,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	120,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	121,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	122,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	123,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	124,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	125,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	126,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	127,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	128,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	129,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	130,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	131,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	132,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	133,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	134,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	135,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	136,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	137,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	138,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	139,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	140,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	141,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	142,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	143,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	144,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	145,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	146,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	147,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	148,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	149,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	150,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	151,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	152,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	153,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	154,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	155,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	156,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	157,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	158,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	159,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	160,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	161,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	162,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	163,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	164,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	165,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	166,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	167,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	168,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	169,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	170,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	171,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	172,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	173,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	174,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	175,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	176,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	177,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	178,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	179,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	180,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	181,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	182,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	183,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	184,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	185,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	186,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	187,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	188,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	189,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	190,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	191,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	192,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	193,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	194,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	195,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	196,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	197,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	198,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	199,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	200,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	201,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	202,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	203,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	204,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	205,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	206,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	207,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	208,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	209,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	210,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	211,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	212,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	213,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	214,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	215,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	216,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	217,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	218,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	219,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	220,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	221,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	222,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	223,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	224,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	225,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	226,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	227,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	228,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	229,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	230,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	231,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	232,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	233,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	234,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	235,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	236,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	237,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	238,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	239,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	240,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	241,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	242,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	243,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	244,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	245,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	246,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	247,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	248,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	249,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	250,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	251,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	252,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	253,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	254,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	255,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	256,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	257,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	258,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	259,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	260,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	261,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	262,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	263,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	264,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	265,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	266,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	267,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	268,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	269,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	270,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	271,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	272,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	273,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	274,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	275,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	276,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	277,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	278,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	279,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	280,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	281,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	282,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	283,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	284,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	285,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	286,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	287,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	288,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	289,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	290,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	291,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	292,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	293,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	294,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	295,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	296,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	297,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	298,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	299,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	300,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	301,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	302,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	303,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	304,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	305,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	306,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	307,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	308,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	309,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	310,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	311,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	312,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	313,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	314,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	315,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	316,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	317,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	318,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	319,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	320,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	321,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	322,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	323,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	324,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	325,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	326,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	327,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	328,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	329,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	330,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	331,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	332,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	333,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	334,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	335,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	336,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	337,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	338,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	339,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	340,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	341,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	342,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	343,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	344,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	345,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	346,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	347,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	348,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	349,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	350,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	351,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	352,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	353,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	354,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	355,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	356,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	357,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	358,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	359,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	360,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	361,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	362,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	363,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	364,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	365,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	366,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	367,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	368,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	369,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	370,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	371,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	372,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	373,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	374,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	375,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	376,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	377,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	378,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	379,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	380,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	381,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	382,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	383,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	384,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	385,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	386,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	387,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	388,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	389,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	390,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	391,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	392,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	393,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	394,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	395,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	396,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	397,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	398,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	399,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	400,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	401,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	402,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	403,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	404,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	405,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	406,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	407,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	408,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	409,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	410,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	411,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	412,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	413,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	414,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	415,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	416,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	417,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	418,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	419,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	420,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	421,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	422,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	423,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	424,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	425,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	426,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	427,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	428,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	429,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	430,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	431,
									"scores":	[-7.59631535224583, -8.48634211124583, -8.48634211124583, -8.73433162824583, -8.48634211124583, -8.76948142504583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.76948142504583, -8.73238102504583, -7.9854071112458316, -8.69723122824583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.73238102504583, -8.69723122824583]
								}, {
									"case":	432,
									"scores":	[-7.5953153522458319, -8.48534211124583, -8.48534211124583, -8.73333162824583, -8.48534211124583, -8.76848142504583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.76848142504583, -8.73138102504583, -7.98440711124583, -8.69623122824583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.73138102504583, -8.69623122824583]
								}, {
									"case":	433,
									"scores":	[-7.5953153522458319, -8.48534211124583, -8.48534211124583, -8.73333162824583, -8.48534211124583, -8.76848142504583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.76848142504583, -8.73138102504583, -7.98440711124583, -8.69623122824583, -8.48534211124583, -8.48534211124583, -8.48534211124583, -8.73138102504583, -8.69623122824583]
								}, {
									"case":	434,
									"scores":	[-7.59631535224583, -8.48634211124583, -8.48634211124583, -8.73433162824583, -8.48634211124583, -8.76948142504583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.76948142504583, -8.73238102504583, -7.9854071112458316, -8.69723122824583, -8.48634211124583, -8.48634211124583, -8.48634211124583, -8.73238102504583, -8.69723122824583]
								}]
						}, {
							"switch":	13,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	307,
							"begin_column":	6,
							"end_line":	307,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L307\", 23, &(adjust_precision), sizeof (adjust_precision), &(adjust_width), sizeof (adjust_width), &(precision), sizeof (precision), &(fmt), sizeof (fmt), &(modifier), sizeof (modifier), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q)))\n    adjust_precision = NO;\n", "{\n}\n", "adjust_precision = (-128)", "adjust_precision = (0 * adjust)", "adjust_precision = (0 * adjust_precision)", "adjust_precision = (0 * adjust_width)", "adjust_precision = (0 * alternate_form)", "adjust_precision = (0 * free_zcopy)", "adjust_precision = (0 * i_num)", "adjust_precision = (0 * is_negative)", "adjust_precision = (0 * min_width)", "adjust_precision = (0 * modifier)", "adjust_precision = (0 * pad_char)", "adjust_precision = (0 * precision)", "adjust_precision = (0 * prefix_char)", "adjust_precision = (0 * print_blank)", "adjust_precision = (0 * print_sign)", "adjust_precision = (0 * s_len)", "adjust_precision = (0 * ui_num)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust != 0)", "adjust_precision = (adjust != adjust_precision)", "adjust_precision = (adjust != adjust_width)", "adjust_precision = (adjust != alternate_form)", "adjust_precision = (adjust != i_num)", "adjust_precision = (adjust != is_negative)", "adjust_precision = (adjust != modifier)", "adjust_precision = (adjust != pad_char)", "adjust_precision = (adjust != prefix_char)", "adjust_precision = (adjust != print_blank)", "adjust_precision = (adjust != print_sign)", "adjust_precision = (adjust != ui_num)", "adjust_precision = (adjust * adjust_precision)", "adjust_precision = (adjust * adjust_width)", "adjust_precision = (adjust * alternate_form)", "adjust_precision = (adjust * free_zcopy)", "adjust_precision = (adjust * i_num)", "adjust_precision = (adjust * is_negative)", "adjust_precision = (adjust * min_width)", "adjust_precision = (adjust * modifier)", "adjust_precision = (adjust * pad_char)", "adjust_precision = (adjust * precision)", "adjust_precision = (adjust * prefix_char)", "adjust_precision = (adjust * print_blank)", "adjust_precision = (adjust * print_sign)", "adjust_precision = (adjust * s_len)", "adjust_precision = (adjust * ui_num)", "adjust_precision = (adjust + 0)", "adjust_precision = (adjust + adjust_precision)", "adjust_precision = (adjust + adjust_width)", "adjust_precision = (adjust + alternate_form)", "adjust_precision = (adjust + i_num)", "adjust_precision = (adjust + is_negative)", "adjust_precision = (adjust + modifier)", "adjust_precision = (adjust + pad_char)", "adjust_precision = (adjust + prefix_char)", "adjust_precision = (adjust + print_blank)", "adjust_precision = (adjust + print_sign)", "adjust_precision = (adjust + ui_num)", "adjust_precision = (adjust - 0)", "adjust_precision = (adjust - adjust_precision)", "adjust_precision = (adjust - adjust_width)", "adjust_precision = (adjust - alternate_form)", "adjust_precision = (adjust - i_num)", "adjust_precision = (adjust - is_negative)", "adjust_precision = (adjust - modifier)", "adjust_precision = (adjust - pad_char)", "adjust_precision = (adjust - prefix_char)", "adjust_precision = (adjust - print_blank)", "adjust_precision = (adjust - print_sign)", "adjust_precision = (adjust - ui_num)", "adjust_precision = (adjust == 0)", "adjust_precision = (adjust == adjust_precision)", "adjust_precision = (adjust == adjust_width)", "adjust_precision = (adjust == alternate_form)", "adjust_precision = (adjust == i_num)", "adjust_precision = (adjust == is_negative)", "adjust_precision = (adjust == modifier)", "adjust_precision = (adjust == pad_char)", "adjust_precision = (adjust == prefix_char)", "adjust_precision = (adjust == print_blank)", "adjust_precision = (adjust == print_sign)", "adjust_precision = (adjust == ui_num)", "adjust_precision = (adjust_precision != 0)", "adjust_precision = (adjust_precision != adjust_width)", "adjust_precision = (adjust_precision != is_negative)", "adjust_precision = (adjust_precision * adjust)", "adjust_precision = (adjust_precision * adjust_width)", "adjust_precision = (adjust_precision * alternate_form)", "adjust_precision = (adjust_precision * free_zcopy)", "adjust_precision = (adjust_precision * i_num)", "adjust_precision = (adjust_precision * is_negative)", "adjust_precision = (adjust_precision * min_width)", "adjust_precision = (adjust_precision * modifier)", "adjust_precision = (adjust_precision * pad_char)", "adjust_precision = (adjust_precision * precision)", "adjust_precision = (adjust_precision * prefix_char)", "adjust_precision = (adjust_precision * print_blank)", "adjust_precision = (adjust_precision * print_sign)", "adjust_precision = (adjust_precision * s_len)", "adjust_precision = (adjust_precision * ui_num)", "adjust_precision = (adjust_precision + 0)", "adjust_precision = (adjust_precision + adjust_width)", "adjust_precision = (adjust_precision + is_negative)", "adjust_precision = (adjust_precision - 0)", "adjust_precision = (adjust_precision - adjust_width)", "adjust_precision = (adjust_precision - is_negative)", "adjust_precision = (adjust_precision == 0)", "adjust_precision = (adjust_precision == adjust_width)", "adjust_precision = (adjust_precision == is_negative)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width != 0)", "adjust_precision = (adjust_width != is_negative)", "adjust_precision = (adjust_width * adjust)", "adjust_precision = (adjust_width * adjust_precision)", "adjust_precision = (adjust_width * alternate_form)", "adjust_precision = (adjust_width * free_zcopy)", "adjust_precision = (adjust_width * i_num)", "adjust_precision = (adjust_width * is_negative)", "adjust_precision = (adjust_width * min_width)", "adjust_precision = (adjust_width * modifier)", "adjust_precision = (adjust_width * pad_char)", "adjust_precision = (adjust_width * precision)", "adjust_precision = (adjust_width * prefix_char)", "adjust_precision = (adjust_width * print_blank)", "adjust_precision = (adjust_width * print_sign)", "adjust_precision = (adjust_width * s_len)", "adjust_precision = (adjust_width * ui_num)", "adjust_precision = (adjust_width + 0)", "adjust_precision = (adjust_width + is_negative)", "adjust_precision = (adjust_width - 0)", "adjust_precision = (adjust_width - is_negative)", "adjust_precision = (adjust_width == 0)", "adjust_precision = (adjust_width == is_negative)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form != 0)", "adjust_precision = (alternate_form != adjust_precision)", "adjust_precision = (alternate_form != adjust_width)", "adjust_precision = (alternate_form != is_negative)", "adjust_precision = (alternate_form != print_blank)", "adjust_precision = (alternate_form != print_sign)", "adjust_precision = (alternate_form * adjust)", "adjust_precision = (alternate_form * adjust_precision)", "adjust_precision = (alternate_form * adjust_width)", "adjust_precision = (alternate_form * free_zcopy)", "adjust_precision = (alternate_form * i_num)", "adjust_precision = (alternate_form * is_negative)", "adjust_precision = (alternate_form * min_width)", "adjust_precision = (alternate_form * modifier)", "adjust_precision = (alternate_form * pad_char)", "adjust_precision = (alternate_form * precision)", "adjust_precision = (alternate_form * prefix_char)", "adjust_precision = (alternate_form * print_blank)", "adjust_precision = (alternate_form * print_sign)", "adjust_precision = (alternate_form * s_len)", "adjust_precision = (alternate_form * ui_num)", "adjust_precision = (alternate_form + 0)", "adjust_precision = (alternate_form + adjust_precision)", "adjust_precision = (alternate_form + adjust_width)", "adjust_precision = (alternate_form + is_negative)", "adjust_precision = (alternate_form + print_blank)", "adjust_precision = (alternate_form + print_sign)", "adjust_precision = (alternate_form - 0)", "adjust_precision = (alternate_form - adjust_precision)", "adjust_precision = (alternate_form - adjust_width)", "adjust_precision = (alternate_form - is_negative)", "adjust_precision = (alternate_form - print_blank)", "adjust_precision = (alternate_form - print_sign)", "adjust_precision = (alternate_form == 0)", "adjust_precision = (alternate_form == adjust_precision)", "adjust_precision = (alternate_form == adjust_width)", "adjust_precision = (alternate_form == is_negative)", "adjust_precision = (alternate_form == print_blank)", "adjust_precision = (alternate_form == print_sign)", "adjust_precision = (alternate_form)", "adjust_precision = (ap != 0)", "adjust_precision = (ap == 0)", "adjust_precision = (char_buf != 0)", "adjust_precision = (char_buf == 0)", "adjust_precision = (fmt != 0)", "adjust_precision = (fmt == 0)", "adjust_precision = (fp_num != 0)", "adjust_precision = (fp_num == 0)", "adjust_precision = (free_zcopy != 0)", "adjust_precision = (free_zcopy != adjust)", "adjust_precision = (free_zcopy != adjust_precision)", "adjust_precision = (free_zcopy != adjust_width)", "adjust_precision = (free_zcopy != alternate_form)", "adjust_precision = (free_zcopy != i_num)", "adjust_precision = (free_zcopy != is_negative)", "adjust_precision = (free_zcopy != min_width)", "adjust_precision = (free_zcopy != modifier)", "adjust_precision = (free_zcopy != pad_char)", "adjust_precision = (free_zcopy != precision)", "adjust_precision = (free_zcopy != prefix_char)", "adjust_precision = (free_zcopy != print_blank)", "adjust_precision = (free_zcopy != print_sign)", "adjust_precision = (free_zcopy != ui_num)", "adjust_precision = (free_zcopy * adjust)", "adjust_precision = (free_zcopy * adjust_precision)", "adjust_precision = (free_zcopy * adjust_width)", "adjust_precision = (free_zcopy * alternate_form)", "adjust_precision = (free_zcopy * i_num)", "adjust_precision = (free_zcopy * is_negative)", "adjust_precision = (free_zcopy * min_width)", "adjust_precision = (free_zcopy * modifier)", "adjust_precision = (free_zcopy * pad_char)", "adjust_precision = (free_zcopy * precision)", "adjust_precision = (free_zcopy * prefix_char)", "adjust_precision = (free_zcopy * print_blank)", "adjust_precision = (free_zcopy * print_sign)", "adjust_precision = (free_zcopy * s_len)", "adjust_precision = (free_zcopy * ui_num)", "adjust_precision = (free_zcopy + 0)", "adjust_precision = (free_zcopy + adjust)", "adjust_precision = (free_zcopy + adjust_precision)", "adjust_precision = (free_zcopy + adjust_width)", "adjust_precision = (free_zcopy + alternate_form)", "adjust_precision = (free_zcopy + i_num)", "adjust_precision = (free_zcopy + is_negative)", "adjust_precision = (free_zcopy + min_width)", "adjust_precision = (free_zcopy + modifier)", "adjust_precision = (free_zcopy + pad_char)", "adjust_precision = (free_zcopy + precision)", "adjust_precision = (free_zcopy + prefix_char)", "adjust_precision = (free_zcopy + print_blank)", "adjust_precision = (free_zcopy + print_sign)", "adjust_precision = (free_zcopy + ui_num)", "adjust_precision = (free_zcopy - 0)", "adjust_precision = (free_zcopy - adjust)", "adjust_precision = (free_zcopy - adjust_precision)", "adjust_precision = (free_zcopy - adjust_width)", "adjust_precision = (free_zcopy - alternate_form)", "adjust_precision = (free_zcopy - i_num)", "adjust_precision = (free_zcopy - is_negative)", "adjust_precision = (free_zcopy - min_width)", "adjust_precision = (free_zcopy - modifier)", "adjust_precision = (free_zcopy - pad_char)", "adjust_precision = (free_zcopy - precision)", "adjust_precision = (free_zcopy - prefix_char)", "adjust_precision = (free_zcopy - print_blank)", "adjust_precision = (free_zcopy - print_sign)", "adjust_precision = (free_zcopy - ui_num)", "adjust_precision = (free_zcopy == 0)", "adjust_precision = (free_zcopy == adjust)", "adjust_precision = (free_zcopy == adjust_precision)", "adjust_precision = (free_zcopy == adjust_width)", "adjust_precision = (free_zcopy == alternate_form)", "adjust_precision = (free_zcopy == i_num)", "adjust_precision = (free_zcopy == is_negative)", "adjust_precision = (free_zcopy == min_width)", "adjust_precision = (free_zcopy == modifier)", "adjust_precision = (free_zcopy == pad_char)", "adjust_precision = (free_zcopy == precision)", "adjust_precision = (free_zcopy == prefix_char)", "adjust_precision = (free_zcopy == print_blank)", "adjust_precision = (free_zcopy == print_sign)", "adjust_precision = (free_zcopy == ui_num)", "adjust_precision = (i_num != 0)", "adjust_precision = (i_num != adjust_precision)", "adjust_precision = (i_num != adjust_width)", "adjust_precision = (i_num != alternate_form)", "adjust_precision = (i_num != is_negative)", "adjust_precision = (i_num != modifier)", "adjust_precision = (i_num != print_blank)", "adjust_precision = (i_num != print_sign)", "adjust_precision = (i_num != ui_num)", "adjust_precision = (i_num * adjust)", "adjust_precision = (i_num * adjust_precision)", "adjust_precision = (i_num * adjust_width)", "adjust_precision = (i_num * alternate_form)", "adjust_precision = (i_num * free_zcopy)", "adjust_precision = (i_num * is_negative)", "adjust_precision = (i_num * min_width)", "adjust_precision = (i_num * modifier)", "adjust_precision = (i_num * pad_char)", "adjust_precision = (i_num * precision)", "adjust_precision = (i_num * prefix_char)", "adjust_precision = (i_num * print_blank)", "adjust_precision = (i_num * print_sign)", "adjust_precision = (i_num * s_len)", "adjust_precision = (i_num * ui_num)", "adjust_precision = (i_num + 0)", "adjust_precision = (i_num + adjust_precision)", "adjust_precision = (i_num + adjust_width)", "adjust_precision = (i_num + alternate_form)", "adjust_precision = (i_num + is_negative)", "adjust_precision = (i_num + modifier)", "adjust_precision = (i_num + print_blank)", "adjust_precision = (i_num + print_sign)", "adjust_precision = (i_num + ui_num)", "adjust_precision = (i_num - 0)", "adjust_precision = (i_num - adjust_precision)", "adjust_precision = (i_num - adjust_width)", "adjust_precision = (i_num - alternate_form)", "adjust_precision = (i_num - is_negative)", "adjust_precision = (i_num - modifier)", "adjust_precision = (i_num - print_blank)", "adjust_precision = (i_num - print_sign)", "adjust_precision = (i_num - ui_num)", "adjust_precision = (i_num == 0)", "adjust_precision = (i_num == adjust_precision)", "adjust_precision = (i_num == adjust_width)", "adjust_precision = (i_num == alternate_form)", "adjust_precision = (i_num == is_negative)", "adjust_precision = (i_num == modifier)", "adjust_precision = (i_num == print_blank)", "adjust_precision = (i_num == print_sign)", "adjust_precision = (i_num == ui_num)", "adjust_precision = (is_negative != 0)", "adjust_precision = (is_negative * adjust)", "adjust_precision = (is_negative * adjust_precision)", "adjust_precision = (is_negative * adjust_width)", "adjust_precision = (is_negative * alternate_form)", "adjust_precision = (is_negative * free_zcopy)", "adjust_precision = (is_negative * i_num)", "adjust_precision = (is_negative * min_width)", "adjust_precision = (is_negative * modifier)", "adjust_precision = (is_negative * pad_char)", "adjust_precision = (is_negative * precision)", "adjust_precision = (is_negative * prefix_char)", "adjust_precision = (is_negative * print_blank)", "adjust_precision = (is_negative * print_sign)", "adjust_precision = (is_negative * s_len)", "adjust_precision = (is_negative * ui_num)", "adjust_precision = (is_negative + 0)", "adjust_precision = (is_negative - 0)", "adjust_precision = (is_negative == 0)", "adjust_precision = (lconv != 0)", "adjust_precision = (lconv == 0)", "adjust_precision = (min_width != 0)", "adjust_precision = (min_width != adjust)", "adjust_precision = (min_width != adjust_precision)", "adjust_precision = (min_width != adjust_width)", "adjust_precision = (min_width != alternate_form)", "adjust_precision = (min_width != i_num)", "adjust_precision = (min_width != is_negative)", "adjust_precision = (min_width != modifier)", "adjust_precision = (min_width != pad_char)", "adjust_precision = (min_width != precision)", "adjust_precision = (min_width != prefix_char)", "adjust_precision = (min_width != print_blank)", "adjust_precision = (min_width != print_sign)", "adjust_precision = (min_width != ui_num)", "adjust_precision = (min_width * adjust)", "adjust_precision = (min_width * adjust_precision)", "adjust_precision = (min_width * adjust_width)", "adjust_precision = (min_width * alternate_form)", "adjust_precision = (min_width * free_zcopy)", "adjust_precision = (min_width * i_num)", "adjust_precision = (min_width * is_negative)", "adjust_precision = (min_width * modifier)", "adjust_precision = (min_width * pad_char)", "adjust_precision = (min_width * precision)", "adjust_precision = (min_width * prefix_char)", "adjust_precision = (min_width * print_blank)", "adjust_precision = (min_width * print_sign)", "adjust_precision = (min_width * s_len)", "adjust_precision = (min_width * ui_num)", "adjust_precision = (min_width + 0)", "adjust_precision = (min_width + adjust)", "adjust_precision = (min_width + adjust_precision)", "adjust_precision = (min_width + adjust_width)", "adjust_precision = (min_width + alternate_form)", "adjust_precision = (min_width + i_num)", "adjust_precision = (min_width + is_negative)", "adjust_precision = (min_width + modifier)", "adjust_precision = (min_width + pad_char)", "adjust_precision = (min_width + precision)", "adjust_precision = (min_width + prefix_char)", "adjust_precision = (min_width + print_blank)", "adjust_precision = (min_width + print_sign)", "adjust_precision = (min_width + ui_num)", "adjust_precision = (min_width - 0)", "adjust_precision = (min_width - adjust)", "adjust_precision = (min_width - adjust_precision)", "adjust_precision = (min_width - adjust_width)", "adjust_precision = (min_width - alternate_form)", "adjust_precision = (min_width - i_num)", "adjust_precision = (min_width - is_negative)", "adjust_precision = (min_width - modifier)", "adjust_precision = (min_width - pad_char)", "adjust_precision = (min_width - precision)", "adjust_precision = (min_width - prefix_char)", "adjust_precision = (min_width - print_blank)", "adjust_precision = (min_width - print_sign)", "adjust_precision = (min_width - ui_num)", "adjust_precision = (min_width == 0)", "adjust_precision = (min_width == adjust)", "adjust_precision = (min_width == adjust_precision)", "adjust_precision = (min_width == adjust_width)", "adjust_precision = (min_width == alternate_form)", "adjust_precision = (min_width == i_num)", "adjust_precision = (min_width == is_negative)", "adjust_precision = (min_width == modifier)", "adjust_precision = (min_width == pad_char)", "adjust_precision = (min_width == precision)", "adjust_precision = (min_width == prefix_char)", "adjust_precision = (min_width == print_blank)", "adjust_precision = (min_width == print_sign)", "adjust_precision = (min_width == ui_num)", "adjust_precision = (modifier != 0)", "adjust_precision = (modifier != adjust_precision)", "adjust_precision = (modifier != adjust_width)", "adjust_precision = (modifier != alternate_form)", "adjust_precision = (modifier != is_negative)", "adjust_precision = (modifier != print_blank)", "adjust_precision = (modifier != print_sign)", "adjust_precision = (modifier * adjust)", "adjust_precision = (modifier * adjust_precision)", "adjust_precision = (modifier * adjust_width)", "adjust_precision = (modifier * alternate_form)", "adjust_precision = (modifier * free_zcopy)", "adjust_precision = (modifier * i_num)", "adjust_precision = (modifier * is_negative)", "adjust_precision = (modifier * min_width)", "adjust_precision = (modifier * pad_char)", "adjust_precision = (modifier * precision)", "adjust_precision = (modifier * prefix_char)", "adjust_precision = (modifier * print_blank)", "adjust_precision = (modifier * print_sign)", "adjust_precision = (modifier * s_len)", "adjust_precision = (modifier * ui_num)", "adjust_precision = (modifier + 0)", "adjust_precision = (modifier + adjust_precision)", "adjust_precision = (modifier + adjust_width)", "adjust_precision = (modifier + alternate_form)", "adjust_precision = (modifier + is_negative)", "adjust_precision = (modifier + print_blank)", "adjust_precision = (modifier + print_sign)", "adjust_precision = (modifier - 0)", "adjust_precision = (modifier - adjust_precision)", "adjust_precision = (modifier - adjust_width)", "adjust_precision = (modifier - alternate_form)", "adjust_precision = (modifier - is_negative)", "adjust_precision = (modifier - print_blank)", "adjust_precision = (modifier - print_sign)", "adjust_precision = (modifier == 0)", "adjust_precision = (modifier == adjust_precision)", "adjust_precision = (modifier == adjust_width)", "adjust_precision = (modifier == alternate_form)", "adjust_precision = (modifier == is_negative)", "adjust_precision = (modifier == print_blank)", "adjust_precision = (modifier == print_sign)", "adjust_precision = (num_buf != 0)", "adjust_precision = (num_buf == 0)", "adjust_precision = (pad_char != 0)", "adjust_precision = (pad_char != adjust_precision)", "adjust_precision = (pad_char != adjust_width)", "adjust_precision = (pad_char != alternate_form)", "adjust_precision = (pad_char != i_num)", "adjust_precision = (pad_char != is_negative)", "adjust_precision = (pad_char != modifier)", "adjust_precision = (pad_char != prefix_char)", "adjust_precision = (pad_char != print_blank)", "adjust_precision = (pad_char != print_sign)", "adjust_precision = (pad_char != ui_num)", "adjust_precision = (pad_char * adjust)", "adjust_precision = (pad_char * adjust_precision)", "adjust_precision = (pad_char * adjust_width)", "adjust_precision = (pad_char * alternate_form)", "adjust_precision = (pad_char * free_zcopy)", "adjust_precision = (pad_char * i_num)", "adjust_precision = (pad_char * is_negative)", "adjust_precision = (pad_char * min_width)", "adjust_precision = (pad_char * modifier)", "adjust_precision = (pad_char * precision)", "adjust_precision = (pad_char * prefix_char)", "adjust_precision = (pad_char * print_blank)", "adjust_precision = (pad_char * print_sign)", "adjust_precision = (pad_char * s_len)", "adjust_precision = (pad_char * ui_num)", "adjust_precision = (pad_char + 0)", "adjust_precision = (pad_char + adjust_precision)", "adjust_precision = (pad_char + adjust_width)", "adjust_precision = (pad_char + alternate_form)", "adjust_precision = (pad_char + i_num)", "adjust_precision = (pad_char + is_negative)", "adjust_precision = (pad_char + modifier)", "adjust_precision = (pad_char + prefix_char)", "adjust_precision = (pad_char + print_blank)", "adjust_precision = (pad_char + print_sign)", "adjust_precision = (pad_char + ui_num)", "adjust_precision = (pad_char - 0)", "adjust_precision = (pad_char - adjust_precision)", "adjust_precision = (pad_char - adjust_width)", "adjust_precision = (pad_char - alternate_form)", "adjust_precision = (pad_char - i_num)", "adjust_precision = (pad_char - is_negative)", "adjust_precision = (pad_char - modifier)", "adjust_precision = (pad_char - prefix_char)", "adjust_precision = (pad_char - print_blank)", "adjust_precision = (pad_char - print_sign)", "adjust_precision = (pad_char - ui_num)", "adjust_precision = (pad_char == 0)", "adjust_precision = (pad_char == adjust_precision)", "adjust_precision = (pad_char == adjust_width)", "adjust_precision = (pad_char == alternate_form)", "adjust_precision = (pad_char == i_num)", "adjust_precision = (pad_char == is_negative)", "adjust_precision = (pad_char == modifier)", "adjust_precision = (pad_char == prefix_char)", "adjust_precision = (pad_char == print_blank)", "adjust_precision = (pad_char == print_sign)", "adjust_precision = (pad_char == ui_num)", "adjust_precision = (precision != 0)", "adjust_precision = (precision != adjust)", "adjust_precision = (precision != adjust_precision)", "adjust_precision = (precision != adjust_width)", "adjust_precision = (precision != alternate_form)", "adjust_precision = (precision != i_num)", "adjust_precision = (precision != is_negative)", "adjust_precision = (precision != modifier)", "adjust_precision = (precision != pad_char)", "adjust_precision = (precision != prefix_char)", "adjust_precision = (precision != print_blank)", "adjust_precision = (precision != print_sign)", "adjust_precision = (precision != ui_num)", "adjust_precision = (precision * adjust)", "adjust_precision = (precision * adjust_precision)", "adjust_precision = (precision * adjust_width)", "adjust_precision = (precision * alternate_form)", "adjust_precision = (precision * free_zcopy)", "adjust_precision = (precision * i_num)", "adjust_precision = (precision * is_negative)", "adjust_precision = (precision * min_width)", "adjust_precision = (precision * modifier)", "adjust_precision = (precision * pad_char)", "adjust_precision = (precision * prefix_char)", "adjust_precision = (precision * print_blank)", "adjust_precision = (precision * print_sign)", "adjust_precision = (precision * s_len)", "adjust_precision = (precision * ui_num)", "adjust_precision = (precision + 0)", "adjust_precision = (precision + adjust)", "adjust_precision = (precision + adjust_precision)", "adjust_precision = (precision + adjust_width)", "adjust_precision = (precision + alternate_form)", "adjust_precision = (precision + i_num)", "adjust_precision = (precision + is_negative)", "adjust_precision = (precision + modifier)", "adjust_precision = (precision + pad_char)", "adjust_precision = (precision + prefix_char)", "adjust_precision = (precision + print_blank)", "adjust_precision = (precision + print_sign)", "adjust_precision = (precision + ui_num)", "adjust_precision = (precision - 0)", "adjust_precision = (precision - adjust)", "adjust_precision = (precision - adjust_precision)", "adjust_precision = (precision - adjust_width)", "adjust_precision = (precision - alternate_form)", "adjust_precision = (precision - i_num)", "adjust_precision = (precision - is_negative)", "adjust_precision = (precision - modifier)", "adjust_precision = (precision - pad_char)", "adjust_precision = (precision - prefix_char)", "adjust_precision = (precision - print_blank)", "adjust_precision = (precision - print_sign)", "adjust_precision = (precision - ui_num)", "adjust_precision = (precision == 0)", "adjust_precision = (precision == adjust)", "adjust_precision = (precision == adjust_precision)", "adjust_precision = (precision == adjust_width)", "adjust_precision = (precision == alternate_form)", "adjust_precision = (precision == i_num)", "adjust_precision = (precision == is_negative)", "adjust_precision = (precision == modifier)", "adjust_precision = (precision == pad_char)", "adjust_precision = (precision == prefix_char)", "adjust_precision = (precision == print_blank)", "adjust_precision = (precision == print_sign)", "adjust_precision = (precision == ui_num)", "adjust_precision = (prefix_char != 0)", "adjust_precision = (prefix_char != adjust_precision)", "adjust_precision = (prefix_char != adjust_width)", "adjust_precision = (prefix_char != alternate_form)", "adjust_precision = (prefix_char != i_num)", "adjust_precision = (prefix_char != is_negative)", "adjust_precision = (prefix_char != modifier)", "adjust_precision = (prefix_char != print_blank)", "adjust_precision = (prefix_char != print_sign)", "adjust_precision = (prefix_char != ui_num)", "adjust_precision = (prefix_char * adjust)", "adjust_precision = (prefix_char * adjust_precision)", "adjust_precision = (prefix_char * adjust_width)", "adjust_precision = (prefix_char * alternate_form)", "adjust_precision = (prefix_char * free_zcopy)", "adjust_precision = (prefix_char * i_num)", "adjust_precision = (prefix_char * is_negative)", "adjust_precision = (prefix_char * min_width)", "adjust_precision = (prefix_char * modifier)", "adjust_precision = (prefix_char * pad_char)", "adjust_precision = (prefix_char * precision)", "adjust_precision = (prefix_char * print_blank)", "adjust_precision = (prefix_char * print_sign)", "adjust_precision = (prefix_char * s_len)", "adjust_precision = (prefix_char * ui_num)", "adjust_precision = (prefix_char + 0)", "adjust_precision = (prefix_char + adjust_precision)", "adjust_precision = (prefix_char + adjust_width)", "adjust_precision = (prefix_char + alternate_form)", "adjust_precision = (prefix_char + i_num)", "adjust_precision = (prefix_char + is_negative)", "adjust_precision = (prefix_char + modifier)", "adjust_precision = (prefix_char + print_blank)", "adjust_precision = (prefix_char + print_sign)", "adjust_precision = (prefix_char + ui_num)", "adjust_precision = (prefix_char - 0)", "adjust_precision = (prefix_char - adjust_precision)", "adjust_precision = (prefix_char - adjust_width)", "adjust_precision = (prefix_char - alternate_form)", "adjust_precision = (prefix_char - i_num)", "adjust_precision = (prefix_char - is_negative)", "adjust_precision = (prefix_char - modifier)", "adjust_precision = (prefix_char - print_blank)", "adjust_precision = (prefix_char - print_sign)", "adjust_precision = (prefix_char - ui_num)", "adjust_precision = (prefix_char == 0)", "adjust_precision = (prefix_char == adjust_precision)", "adjust_precision = (prefix_char == adjust_width)", "adjust_precision = (prefix_char == alternate_form)", "adjust_precision = (prefix_char == i_num)", "adjust_precision = (prefix_char == is_negative)", "adjust_precision = (prefix_char == modifier)", "adjust_precision = (prefix_char == print_blank)", "adjust_precision = (prefix_char == print_sign)", "adjust_precision = (prefix_char == ui_num)", "adjust_precision = (print_blank != 0)", "adjust_precision = (print_blank != adjust_precision)", "adjust_precision = (print_blank != adjust_width)", "adjust_precision = (print_blank != is_negative)", "adjust_precision = (print_blank * adjust)", "adjust_precision = (print_blank * adjust_precision)", "adjust_precision = (print_blank * adjust_width)", "adjust_precision = (print_blank * alternate_form)", "adjust_precision = (print_blank * free_zcopy)", "adjust_precision = (print_blank * i_num)", "adjust_precision = (print_blank * is_negative)", "adjust_precision = (print_blank * min_width)", "adjust_precision = (print_blank * modifier)", "adjust_precision = (print_blank * pad_char)", "adjust_precision = (print_blank * precision)", "adjust_precision = (print_blank * prefix_char)", "adjust_precision = (print_blank * print_sign)", "adjust_precision = (print_blank * s_len)", "adjust_precision = (print_blank * ui_num)", "adjust_precision = (print_blank + 0)", "adjust_precision = (print_blank + adjust_precision)", "adjust_precision = (print_blank + adjust_width)", "adjust_precision = (print_blank + is_negative)", "adjust_precision = (print_blank - 0)", "adjust_precision = (print_blank - adjust_precision)", "adjust_precision = (print_blank - adjust_width)", "adjust_precision = (print_blank - is_negative)", "adjust_precision = (print_blank == 0)", "adjust_precision = (print_blank == adjust_precision)", "adjust_precision = (print_blank == adjust_width)", "adjust_precision = (print_blank == is_negative)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign != 0)", "adjust_precision = (print_sign != adjust_precision)", "adjust_precision = (print_sign != adjust_width)", "adjust_precision = (print_sign != is_negative)", "adjust_precision = (print_sign != print_blank)", "adjust_precision = (print_sign * adjust)", "adjust_precision = (print_sign * adjust_precision)", "adjust_precision = (print_sign * adjust_width)", "adjust_precision = (print_sign * alternate_form)", "adjust_precision = (print_sign * free_zcopy)", "adjust_precision = (print_sign * i_num)", "adjust_precision = (print_sign * is_negative)", "adjust_precision = (print_sign * min_width)", "adjust_precision = (print_sign * modifier)", "adjust_precision = (print_sign * pad_char)", "adjust_precision = (print_sign * precision)", "adjust_precision = (print_sign * prefix_char)", "adjust_precision = (print_sign * print_blank)", "adjust_precision = (print_sign * s_len)", "adjust_precision = (print_sign * ui_num)", "adjust_precision = (print_sign + 0)", "adjust_precision = (print_sign + adjust_precision)", "adjust_precision = (print_sign + adjust_width)", "adjust_precision = (print_sign + is_negative)", "adjust_precision = (print_sign + print_blank)", "adjust_precision = (print_sign - 0)", "adjust_precision = (print_sign - adjust_precision)", "adjust_precision = (print_sign - adjust_width)", "adjust_precision = (print_sign - is_negative)", "adjust_precision = (print_sign - print_blank)", "adjust_precision = (print_sign == 0)", "adjust_precision = (print_sign == adjust_precision)", "adjust_precision = (print_sign == adjust_width)", "adjust_precision = (print_sign == is_negative)", "adjust_precision = (print_sign == print_blank)", "adjust_precision = (print_sign)", "adjust_precision = (q != 0)", "adjust_precision = (q == 0)", "adjust_precision = (s != 0)", "adjust_precision = (s != q)", "adjust_precision = (s == 0)", "adjust_precision = (s == q)", "adjust_precision = (s_len != 0)", "adjust_precision = (s_len != adjust)", "adjust_precision = (s_len != adjust_precision)", "adjust_precision = (s_len != adjust_width)", "adjust_precision = (s_len != alternate_form)", "adjust_precision = (s_len != free_zcopy)", "adjust_precision = (s_len != i_num)", "adjust_precision = (s_len != is_negative)", "adjust_precision = (s_len != min_width)", "adjust_precision = (s_len != modifier)", "adjust_precision = (s_len != pad_char)", "adjust_precision = (s_len != precision)", "adjust_precision = (s_len != prefix_char)", "adjust_precision = (s_len != print_blank)", "adjust_precision = (s_len != print_sign)", "adjust_precision = (s_len != ui_num)", "adjust_precision = (s_len * adjust)", "adjust_precision = (s_len * adjust_precision)", "adjust_precision = (s_len * adjust_width)", "adjust_precision = (s_len * alternate_form)", "adjust_precision = (s_len * free_zcopy)", "adjust_precision = (s_len * i_num)", "adjust_precision = (s_len * is_negative)", "adjust_precision = (s_len * min_width)", "adjust_precision = (s_len * modifier)", "adjust_precision = (s_len * pad_char)", "adjust_precision = (s_len * precision)", "adjust_precision = (s_len * prefix_char)", "adjust_precision = (s_len * print_blank)", "adjust_precision = (s_len * print_sign)", "adjust_precision = (s_len * ui_num)", "adjust_precision = (s_len + 0)", "adjust_precision = (s_len + adjust)", "adjust_precision = (s_len + adjust_precision)", "adjust_precision = (s_len + adjust_width)", "adjust_precision = (s_len + alternate_form)", "adjust_precision = (s_len + free_zcopy)", "adjust_precision = (s_len + i_num)", "adjust_precision = (s_len + is_negative)", "adjust_precision = (s_len + min_width)", "adjust_precision = (s_len + modifier)", "adjust_precision = (s_len + pad_char)", "adjust_precision = (s_len + precision)", "adjust_precision = (s_len + prefix_char)", "adjust_precision = (s_len + print_blank)", "adjust_precision = (s_len + print_sign)", "adjust_precision = (s_len + ui_num)", "adjust_precision = (s_len - 0)", "adjust_precision = (s_len - adjust)", "adjust_precision = (s_len - adjust_precision)", "adjust_precision = (s_len - adjust_width)", "adjust_precision = (s_len - alternate_form)", "adjust_precision = (s_len - free_zcopy)", "adjust_precision = (s_len - i_num)", "adjust_precision = (s_len - is_negative)", "adjust_precision = (s_len - min_width)", "adjust_precision = (s_len - modifier)", "adjust_precision = (s_len - pad_char)", "adjust_precision = (s_len - precision)", "adjust_precision = (s_len - prefix_char)", "adjust_precision = (s_len - print_blank)", "adjust_precision = (s_len - print_sign)", "adjust_precision = (s_len - ui_num)", "adjust_precision = (s_len == 0)", "adjust_precision = (s_len == adjust)", "adjust_precision = (s_len == adjust_precision)", "adjust_precision = (s_len == adjust_width)", "adjust_precision = (s_len == alternate_form)", "adjust_precision = (s_len == free_zcopy)", "adjust_precision = (s_len == i_num)", "adjust_precision = (s_len == is_negative)", "adjust_precision = (s_len == min_width)", "adjust_precision = (s_len == modifier)", "adjust_precision = (s_len == pad_char)", "adjust_precision = (s_len == precision)", "adjust_precision = (s_len == prefix_char)", "adjust_precision = (s_len == print_blank)", "adjust_precision = (s_len == print_sign)", "adjust_precision = (s_len == ui_num)", "adjust_precision = (ui_num != 0)", "adjust_precision = (ui_num != adjust_precision)", "adjust_precision = (ui_num != adjust_width)", "adjust_precision = (ui_num != alternate_form)", "adjust_precision = (ui_num != is_negative)", "adjust_precision = (ui_num != modifier)", "adjust_precision = (ui_num != print_blank)", "adjust_precision = (ui_num != print_sign)", "adjust_precision = (ui_num * adjust)", "adjust_precision = (ui_num * adjust_precision)", "adjust_precision = (ui_num * adjust_width)", "adjust_precision = (ui_num * alternate_form)", "adjust_precision = (ui_num * free_zcopy)", "adjust_precision = (ui_num * i_num)", "adjust_precision = (ui_num * is_negative)", "adjust_precision = (ui_num * min_width)", "adjust_precision = (ui_num * modifier)", "adjust_precision = (ui_num * pad_char)", "adjust_precision = (ui_num * precision)", "adjust_precision = (ui_num * prefix_char)", "adjust_precision = (ui_num * print_blank)", "adjust_precision = (ui_num * print_sign)", "adjust_precision = (ui_num * s_len)", "adjust_precision = (ui_num + 0)", "adjust_precision = (ui_num + adjust_precision)", "adjust_precision = (ui_num + adjust_width)", "adjust_precision = (ui_num + alternate_form)", "adjust_precision = (ui_num + is_negative)", "adjust_precision = (ui_num + modifier)", "adjust_precision = (ui_num + print_blank)", "adjust_precision = (ui_num + print_sign)", "adjust_precision = (ui_num - 0)", "adjust_precision = (ui_num - adjust_precision)", "adjust_precision = (ui_num - adjust_width)", "adjust_precision = (ui_num - alternate_form)", "adjust_precision = (ui_num - is_negative)", "adjust_precision = (ui_num - modifier)", "adjust_precision = (ui_num - print_blank)", "adjust_precision = (ui_num - print_sign)", "adjust_precision = (ui_num == 0)", "adjust_precision = (ui_num == adjust_precision)", "adjust_precision = (ui_num == adjust_width)", "adjust_precision = (ui_num == alternate_form)", "adjust_precision = (ui_num == is_negative)", "adjust_precision = (ui_num == modifier)", "adjust_precision = (ui_num == print_blank)", "adjust_precision = (ui_num == print_sign)", "adjust_precision = (xbuf != 0)", "adjust_precision = (xbuf == 0)", "adjust_precision = (zcopy != 0)", "adjust_precision = (zcopy == 0)", "adjust_precision = (zvp != 0)", "adjust_precision = (zvp == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.977648106245832, -7.1107055852458316, -7.1107055852458316, -7.874316385245832, -7.1107055852458316, -8.16294448524583, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -8.16294448524583, -7.8685936852458322, -6.788694555245832, -7.5799655852458319, -7.1107055852458316, -7.1107055852458316, -7.1107055852458316, -7.8685936852458322, -7.5799655852458319]
								}, {
									"case":	2,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	3,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	4,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	5,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	6,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	7,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	8,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	9,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	10,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	11,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	12,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	13,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	14,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	15,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	16,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	17,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	18,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	19,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	20,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	21,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	22,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	23,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	24,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	25,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	26,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	27,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	28,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	29,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	30,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	31,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	32,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	33,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	34,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	35,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	36,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	37,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	38,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	39,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	40,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	41,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	42,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	43,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	44,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	45,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	46,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	47,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	48,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	49,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	50,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	51,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	52,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	53,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	54,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	55,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	56,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	57,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	58,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	59,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	60,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	61,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	62,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	63,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	64,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	65,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	66,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	67,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	68,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	69,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	70,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	71,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	72,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	73,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	74,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	75,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	76,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	77,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	78,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	79,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	80,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	81,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	82,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	83,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	84,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	85,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	86,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	87,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	88,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	89,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	90,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	91,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	92,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	93,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	94,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	95,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	96,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	97,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	98,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	99,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	100,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	101,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	102,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	103,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	104,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	105,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	106,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	107,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	108,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	109,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	110,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	111,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	112,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	113,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	114,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	115,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	116,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	117,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	118,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	119,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	120,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	121,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	122,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	123,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	124,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	125,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	126,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	127,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	128,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	129,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	130,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	131,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	132,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	133,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	134,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	135,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	136,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	137,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	138,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	139,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	140,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	141,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	142,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	143,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	144,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	145,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	146,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	147,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	148,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	149,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	150,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	151,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	152,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	153,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	154,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	155,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	156,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	157,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	158,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	159,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	160,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	161,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	162,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	163,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	164,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	165,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	166,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	167,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	168,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	169,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	170,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	171,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	172,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	173,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	174,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	175,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	176,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	177,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	178,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	179,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	180,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	181,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	182,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	183,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	184,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	185,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	186,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	187,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	188,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	189,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	190,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	191,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	192,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	193,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	194,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	195,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	196,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	197,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	198,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	199,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	200,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	201,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	202,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	203,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	204,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	205,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	206,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	207,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	208,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	209,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	210,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	211,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	212,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	213,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	214,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	215,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	216,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	217,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	218,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	219,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	220,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	221,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	222,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	223,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	224,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	225,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	226,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	227,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	228,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	229,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	230,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	231,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	232,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	233,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	234,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	235,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	236,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	237,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	238,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	239,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	240,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	241,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	242,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	243,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	244,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	245,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	246,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	247,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	248,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	249,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	250,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	251,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	252,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	253,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	254,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	255,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	256,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	257,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	258,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	259,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	260,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	261,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	262,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	263,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	264,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	265,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	266,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	267,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	268,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	269,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	270,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	271,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	272,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	273,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	274,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	275,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	276,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	277,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	278,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	279,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	280,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	281,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	282,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	283,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	284,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	285,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	286,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	287,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	288,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	289,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	290,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	291,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	292,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	293,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	294,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	295,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	296,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	297,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	298,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	299,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	300,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	301,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	302,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	303,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	304,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	305,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	306,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	307,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	308,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	309,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	310,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	311,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	312,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	313,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	314,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	315,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	316,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	317,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	318,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	319,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	320,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	321,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	322,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	323,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	324,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	325,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	326,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	327,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	328,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	329,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	330,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	331,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	332,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	333,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	334,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	335,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	336,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	337,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	338,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	339,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	340,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	341,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	342,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	343,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	344,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	345,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	346,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	347,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	348,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	349,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	350,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	351,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	352,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	353,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	354,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	355,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	356,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	357,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	358,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	359,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	360,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	361,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	362,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	363,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	364,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	365,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	366,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	367,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	368,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	369,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	370,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	371,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	372,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	373,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	374,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	375,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	376,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	377,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	378,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	379,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	380,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	381,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	382,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	383,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	384,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	385,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	386,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	387,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	388,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	389,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	390,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	391,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	392,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	393,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	394,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	395,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	396,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	397,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	398,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	399,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	400,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	401,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	402,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	403,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	404,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	405,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	406,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	407,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	408,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	409,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	410,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	411,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	412,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	413,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	414,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	415,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	416,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	417,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	418,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	419,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	420,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	421,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	422,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	423,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	424,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	425,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	426,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	427,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	428,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	429,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	430,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	431,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	432,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	433,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	434,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	435,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	436,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	437,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	438,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	439,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	440,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	441,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	442,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	443,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	444,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	445,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	446,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	447,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	448,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	449,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	450,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	451,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	452,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	453,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	454,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	455,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	456,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	457,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	458,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	459,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	460,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	461,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	462,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	463,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	464,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	465,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	466,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	467,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	468,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	469,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	470,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	471,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	472,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	473,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	474,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	475,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	476,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	477,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	478,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	479,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	480,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	481,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	482,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	483,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	484,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	485,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	486,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	487,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	488,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	489,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	490,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	491,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	492,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	493,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	494,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	495,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	496,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	497,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	498,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	499,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	500,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	501,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	502,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	503,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	504,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	505,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	506,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	507,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	508,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	509,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	510,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	511,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	512,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	513,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	514,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	515,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	516,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	517,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	518,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	519,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	520,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	521,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	522,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	523,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	524,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	525,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	526,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	527,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	528,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	529,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	530,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	531,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	532,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	533,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	534,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	535,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	536,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	537,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	538,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	539,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	540,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	541,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	542,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	543,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	544,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	545,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	546,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	547,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	548,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	549,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	550,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	551,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	552,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	553,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	554,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	555,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	556,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	557,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	558,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	559,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	560,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	561,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	562,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	563,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	564,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	565,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	566,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	567,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	568,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	569,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	570,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	571,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	572,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	573,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	574,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	575,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	576,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	577,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	578,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	579,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	580,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	581,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	582,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	583,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	584,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	585,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	586,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	587,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	588,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	589,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	590,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	591,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	592,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	593,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	594,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	595,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	596,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	597,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	598,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	599,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	600,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	601,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	602,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	603,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	604,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	605,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	606,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	607,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	608,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	609,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	610,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	611,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	612,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	613,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	614,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	615,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	616,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	617,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	618,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	619,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	620,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	621,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	622,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	623,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	624,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	625,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	626,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	627,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	628,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	629,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	630,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	631,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	632,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	633,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	634,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	635,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	636,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	637,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	638,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	639,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	640,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	641,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	642,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	643,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	644,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	645,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	646,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	647,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	648,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	649,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	650,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	651,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	652,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	653,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	654,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	655,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	656,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	657,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	658,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	659,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	660,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	661,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	662,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	663,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	664,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	665,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	666,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	667,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	668,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	669,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	670,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	671,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	672,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	673,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	674,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	675,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	676,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	677,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	678,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	679,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	680,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	681,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	682,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	683,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	684,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	685,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	686,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	687,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	688,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	689,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	690,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	691,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	692,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	693,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	694,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	695,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	696,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	697,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	698,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	699,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	700,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	701,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	702,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	703,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	704,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	705,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	706,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	707,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	708,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	709,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	710,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	711,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	712,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	713,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	714,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	715,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	716,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	717,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	718,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	719,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	720,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	721,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	722,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	723,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	724,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	725,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	726,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	727,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	728,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	729,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	730,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	731,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	732,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	733,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	734,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	735,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	736,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	737,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	738,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	739,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	740,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	741,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	742,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	743,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	744,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	745,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	746,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	747,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	748,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	749,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	750,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	751,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	752,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	753,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	754,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	755,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	756,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	757,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	758,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	759,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	760,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	761,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	762,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	763,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	764,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	765,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	766,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	767,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	768,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	769,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	770,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	771,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	772,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	773,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	774,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	775,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	776,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	777,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	778,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	779,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	780,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	781,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	782,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	783,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	784,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	785,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	786,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	787,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	788,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	789,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	790,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	791,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	792,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	793,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	794,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	795,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	796,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	797,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	798,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	799,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	800,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	801,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	802,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	803,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	804,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	805,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	806,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	807,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	808,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	809,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	810,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	811,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	812,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	813,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	814,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	815,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	816,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	817,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	818,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	819,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	820,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	821,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	822,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	823,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	824,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	825,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	826,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	827,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	828,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	829,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	830,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	831,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	832,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	833,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	834,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	835,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	836,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	837,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	838,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	839,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	840,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	841,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	842,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	843,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	844,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	845,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	846,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	847,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	848,
									"scores":	[-6.6999966152458317]
								}]
						}]
				}, {
					"line":	289,
					"switches":	[{
							"switch":	11,
							"types":	[[], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	290,
							"begin_column":	5,
							"end_line":	307,
							"end_column":	25,
							"patch_codes":	["if (__is_neg(\"\", \"L290\", 23, &(fmt), sizeof (fmt), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(adjust_width), sizeof (adjust_width), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(modifier), sizeof (modifier), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    adjust_precision = YES;\n    fmt++;\n    if (((*__ctype_b_loc())[(int)(((int)*fmt))] & (unsigned short)_ISdigit)) {\n        do {\n            precision = (*fmt++ - '0');\n            while (((*__ctype_b_loc())[(int)(((int)*fmt))] & (unsigned short)_ISdigit))\n                {\n                    precision *= 10;\n                    precision += (*fmt++ - '0');\n                    if (precision >= 2147483647 / 10) {\n                        while (((*__ctype_b_loc())[(int)(((int)*fmt++))] & (unsigned short)_ISdigit))\n                            ;\n                        break;\n                    }\n                }\n        } while (0);\n    } else if (*fmt == '*') {\n        precision = __builtin_va_arg(ap, int);\n        fmt++;\n        if (precision < 0)\n            precision = 0;\n    } else\n        precision = 0;\n    if (precision > 500) {\n        precision = 500;\n    }\n} else\n    adjust_precision = NO;\n", "if ((*fmt == '.') || __is_neg(\"\", \"L290\", 23, &(fmt), sizeof (fmt), &(adjust_precision), sizeof (adjust_precision), &(precision), sizeof (precision), &(adjust_width), sizeof (adjust_width), &(ap), sizeof (ap), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(pad_char), sizeof (pad_char), &(modifier), sizeof (modifier), &(print_blank), sizeof (print_blank), &(alternate_form), sizeof (alternate_form), &(print_sign), sizeof (print_sign), &(free_zcopy), sizeof (free_zcopy), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(zvp), sizeof (zvp), &(s_len), sizeof (s_len), &(s), sizeof (s), &(i_num), sizeof (i_num), &(is_negative), sizeof (is_negative), &(ui_num), sizeof (ui_num), &(lconv), sizeof (lconv), &(q), sizeof (q))) {\n    adjust_precision = YES;\n    fmt++;\n    if (((*__ctype_b_loc())[(int)(((int)*fmt))] & (unsigned short)_ISdigit)) {\n        do {\n            precision = (*fmt++ - '0');\n            while (((*__ctype_b_loc())[(int)(((int)*fmt))] & (unsigned short)_ISdigit))\n                {\n                    precision *= 10;\n                    precision += (*fmt++ - '0');\n                    if (precision >= 2147483647 / 10) {\n                        while (((*__ctype_b_loc())[(int)(((int)*fmt++))] & (unsigned short)_ISdigit))\n                            ;\n                        break;\n                    }\n                }\n        } while (0);\n    } else if (*fmt == '*') {\n        precision = __builtin_va_arg(ap, int);\n        fmt++;\n        if (precision < 0)\n            precision = 0;\n    } else\n        precision = 0;\n    if (precision > 500) {\n        precision = 500;\n    }\n} else\n    adjust_precision = NO;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.2868634030458326, -6.8545460610458324, -4.72095732404583, -6.10692668004583, -7.1743704500458323, -6.5397315630458319, -6.10692668004583, -6.10692668004583, -6.9876035400458321, -6.10692668004583, -6.10692668004583, -6.10692668004583, -6.9876035400458321, -6.9876035400458321, -8.03984244004583, -7.7454916400458327, -6.6655925100458315, -7.4568635400458323, -6.9876035400458321, -6.9876035400458321, -6.9876035400458321, -7.7454916400458327, -7.4568635400458323]
								}, {
									"case":	2,
									"scores":	[-6.66879552814583, -6.23647818614583, -4.10288944914583, -5.4888588051458314, -6.5563025751458319, -5.9216636881458316, -5.4888588051458314, -5.4888588051458314, -6.3695356651458317, -5.4888588051458314, -5.4888588051458314, -5.4888588051458314, -6.3695356651458317, -6.3695356651458317, -7.4217745651458316, -7.1274237651458314, -6.04752463514583, -6.8387956651458319, -6.3695356651458317, -6.3695356651458317, -6.3695356651458317, -7.1274237651458314, -6.8387956651458319]
								}]
						}]
				}, {
					"line":	686,
					"switches":	[{
							"switch":	14,
							"types":	[[], [], [], [], [482, 483, 484, 485], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [], [], [], [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], [], [], [], [], [], []],
							"begin_line":	687,
							"begin_column":	4,
							"end_line":	687,
							"end_column":	4,
							"patch_codes":	["memset(&(*zvp).is_ref__gc, 0, sizeof (*(&(*zvp).is_ref__gc)))", "memset(&(*zvp).refcount__gc, 0, sizeof (*(&(*zvp).refcount__gc)))", "memset(&(*zvp).type, 0, sizeof (*(&(*zvp).type)))", "memset(&(*zvp).value, 0, sizeof (*(&(*zvp).value)))", "memset(&(*zvp).value.dval, 0, sizeof (*(&(*zvp).value.dval)))", "memset(&(*zvp).value.ht, 0, sizeof (*(&(*zvp).value.ht)))", "memset(&(*zvp).value.lval, 0, sizeof (*(&(*zvp).value.lval)))", "memset(&(*zvp).value.obj, 0, sizeof (*(&(*zvp).value.obj)))", "memset(&(*zvp).value.str, 0, sizeof (*(&(*zvp).value.str)))", "memset(&(*zvp).value.str.len, 0, sizeof (*(&(*zvp).value.str.len)))", "memset(&(*zvp).value.str.val, 0, sizeof (*(&(*zvp).value.str.val)))", "memset(&lconv->currency_symbol, 0, sizeof (*(&lconv->currency_symbol)))", "memset(&lconv->decimal_point, 0, sizeof (*(&lconv->decimal_point)))", "memset(&lconv->frac_digits, 0, sizeof (*(&lconv->frac_digits)))", "memset(&lconv->grouping, 0, sizeof (*(&lconv->grouping)))", "memset(&lconv->int_curr_symbol, 0, sizeof (*(&lconv->int_curr_symbol)))", "memset(&lconv->int_frac_digits, 0, sizeof (*(&lconv->int_frac_digits)))", "memset(&lconv->int_n_cs_precedes, 0, sizeof (*(&lconv->int_n_cs_precedes)))", "memset(&lconv->int_n_sep_by_space, 0, sizeof (*(&lconv->int_n_sep_by_space)))", "memset(&lconv->int_n_sign_posn, 0, sizeof (*(&lconv->int_n_sign_posn)))", "memset(&lconv->int_p_cs_precedes, 0, sizeof (*(&lconv->int_p_cs_precedes)))", "memset(&lconv->int_p_sep_by_space, 0, sizeof (*(&lconv->int_p_sep_by_space)))", "memset(&lconv->int_p_sign_posn, 0, sizeof (*(&lconv->int_p_sign_posn)))", "memset(&lconv->mon_decimal_point, 0, sizeof (*(&lconv->mon_decimal_point)))", "memset(&lconv->mon_grouping, 0, sizeof (*(&lconv->mon_grouping)))", "memset(&lconv->mon_thousands_sep, 0, sizeof (*(&lconv->mon_thousands_sep)))", "memset(&lconv->n_cs_precedes, 0, sizeof (*(&lconv->n_cs_precedes)))", "memset(&lconv->n_sep_by_space, 0, sizeof (*(&lconv->n_sep_by_space)))", "memset(&lconv->n_sign_posn, 0, sizeof (*(&lconv->n_sign_posn)))", "memset(&lconv->negative_sign, 0, sizeof (*(&lconv->negative_sign)))", "memset(&lconv->p_cs_precedes, 0, sizeof (*(&lconv->p_cs_precedes)))", "memset(&lconv->p_sep_by_space, 0, sizeof (*(&lconv->p_sep_by_space)))", "memset(&lconv->p_sign_posn, 0, sizeof (*(&lconv->p_sign_posn)))", "memset(&lconv->positive_sign, 0, sizeof (*(&lconv->positive_sign)))", "memset(&lconv->thousands_sep, 0, sizeof (*(&lconv->thousands_sep)))", "memset(&xbuf->a, 0, sizeof (*(&xbuf->a)))", "memset(&xbuf->c, 0, sizeof (*(&xbuf->c)))", "memset(&xbuf->len, 0, sizeof (*(&xbuf->len)))", "memset((*zvp).value.ht, 0, sizeof (*((*zvp).value.ht)))", "memset((*zvp).value.str.val, 0, sizeof (*((*zvp).value.str.val)))", "memset(lconv->currency_symbol, 0, sizeof (*(lconv->currency_symbol)))", "memset(lconv->decimal_point, 0, sizeof (*(lconv->decimal_point)))", "memset(lconv->grouping, 0, sizeof (*(lconv->grouping)))", "memset(lconv->int_curr_symbol, 0, sizeof (*(lconv->int_curr_symbol)))", "memset(lconv->mon_decimal_point, 0, sizeof (*(lconv->mon_decimal_point)))", "memset(lconv->mon_grouping, 0, sizeof (*(lconv->mon_grouping)))", "memset(lconv->mon_thousands_sep, 0, sizeof (*(lconv->mon_thousands_sep)))", "memset(lconv->negative_sign, 0, sizeof (*(lconv->negative_sign)))", "memset(lconv->positive_sign, 0, sizeof (*(lconv->positive_sign)))", "memset(lconv->thousands_sep, 0, sizeof (*(lconv->thousands_sep)))", "memset(xbuf->c, 0, sizeof (*(xbuf->c)))", "(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L687\", 23, &(s), sizeof (s), &(ap), sizeof (ap), &(s_len), sizeof (s_len), &(pad_char), sizeof (pad_char), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(xbuf), sizeof (xbuf), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L687\", 23, &(s), sizeof (s), &(ap), sizeof (ap), &(s_len), sizeof (s_len), &(pad_char), sizeof (pad_char), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(xbuf), sizeof (xbuf), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L687\", 23, &(s), sizeof (s), &(ap), sizeof (ap), &(s_len), sizeof (s_len), &(pad_char), sizeof (pad_char), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(xbuf), sizeof (xbuf), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L687\", 23, &(s), sizeof (s), &(ap), sizeof (ap), &(s_len), sizeof (s_len), &(pad_char), sizeof (pad_char), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(xbuf), sizeof (xbuf), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	2,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	3,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	4,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	5,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	6,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	7,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	8,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	9,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	10,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	11,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	12,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	13,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	14,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	15,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	16,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	17,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	18,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	19,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	20,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	21,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	22,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	23,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	24,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	25,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	26,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	27,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	28,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	29,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	30,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	31,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	32,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	33,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	34,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	35,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	36,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	37,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	38,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	39,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	40,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	41,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	42,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	43,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	44,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	45,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	46,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	47,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	48,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	49,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	50,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	51,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	52,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	53,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	54,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	55,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	56,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	57,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	58,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	59,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	60,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	61,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	62,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	63,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	64,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	65,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	66,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	67,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	68,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	69,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	70,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	71,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	72,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	73,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	74,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	75,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	76,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	77,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	78,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	79,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	80,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	81,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	82,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	83,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	84,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	85,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	86,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	87,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	88,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	89,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	90,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	91,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	92,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	93,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	94,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	95,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	96,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	97,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	98,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	99,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	100,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	101,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	102,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	103,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	104,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	105,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	106,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	107,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	108,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	109,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	110,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	111,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	112,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	113,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	114,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	115,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	116,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	117,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	118,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	119,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	120,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	121,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	122,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	123,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	124,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	125,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	126,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	127,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	128,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	129,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	130,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	131,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	132,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	133,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	134,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	135,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	136,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	137,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	138,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	139,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	140,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	141,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	142,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	143,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	144,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	145,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	146,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	147,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	148,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	149,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	150,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	151,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	152,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	153,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	154,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	155,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	156,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	157,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	158,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	159,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	160,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	161,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	162,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	163,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	164,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	165,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	166,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	167,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	168,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	169,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	170,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	171,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	172,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	173,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	174,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	175,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	176,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	177,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	178,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	179,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	180,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	181,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	182,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	183,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	184,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	185,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	186,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	187,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	188,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	189,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	190,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	191,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	192,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	193,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	194,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	195,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	196,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	197,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	198,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	199,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	200,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	201,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	202,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	203,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	204,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	205,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	206,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	207,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	208,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	209,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	210,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	211,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	212,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	213,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	214,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	215,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	216,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	217,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	218,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	219,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	220,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	221,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	222,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	223,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	224,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	225,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	226,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	227,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	228,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	229,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	230,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	231,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	232,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	233,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	234,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	235,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	236,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	237,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	238,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	239,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	240,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	241,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	242,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	243,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	244,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	245,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	246,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	247,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	248,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	249,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	250,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	251,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	252,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	253,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	254,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	255,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	256,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	257,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	258,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	259,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	260,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	261,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	262,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	263,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	264,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	265,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	266,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	267,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	268,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	269,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	270,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	271,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	272,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	273,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	274,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	275,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	276,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	277,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	278,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	279,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	280,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	281,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	282,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	283,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	284,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	285,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	286,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	287,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	288,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	289,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	290,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	291,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	292,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	293,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	294,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	295,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	296,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	297,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	298,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	299,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	300,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	301,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	302,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	303,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	304,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	305,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	306,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	307,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	308,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	309,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	310,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	311,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	312,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	313,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	314,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	315,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	316,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	317,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	318,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	319,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	320,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	321,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	322,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	323,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	324,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	325,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	326,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	327,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	328,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	329,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	330,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	331,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	332,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	333,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	334,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	335,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	336,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	337,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	338,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	339,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	340,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	341,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	342,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	343,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	344,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	345,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	346,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	347,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	348,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	349,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	350,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	351,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	352,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	353,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	354,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	355,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	356,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	357,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	358,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	359,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	360,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	361,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	362,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	363,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	364,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	365,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	366,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	367,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	368,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	369,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	370,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	371,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	372,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	373,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	374,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	375,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	376,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	377,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	378,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	379,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	380,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	381,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	382,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	383,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	384,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	385,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	386,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	387,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	388,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	389,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	390,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	391,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	392,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	393,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	394,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	395,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	396,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	397,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	398,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	399,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	400,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	401,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	402,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	403,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	404,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	405,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	406,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	407,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	408,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	409,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	410,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	411,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	412,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	413,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	414,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	415,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	416,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	417,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	418,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	419,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	420,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	421,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	422,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	423,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	424,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	425,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	426,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	427,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	428,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	429,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	430,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	431,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	432,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	433,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	434,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	435,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	436,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	437,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	438,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	439,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	440,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	441,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	442,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	443,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	444,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	445,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	446,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	447,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	448,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	449,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	450,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	451,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	452,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	453,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	454,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	455,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	456,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	457,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	458,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	459,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	460,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	461,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	462,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	463,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	464,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	465,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	466,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	467,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	468,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	469,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	470,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	471,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	472,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	473,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	474,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	475,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	476,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	477,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	478,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	479,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	480,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	481,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	482,
									"scores":	[-8.741593961928313, -9.37470343772831, -8.32975986562831, -9.27424092392831, -7.7116970409283123, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.58877871772831, -9.553628920928313, -9.30563940392831, -9.55167831772831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.55167831772831]
								}, {
									"case":	483,
									"scores":	[-8.74059396192831, -9.37370343772831, -8.32875986562831, -9.27324092392831, -7.710697040928312, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.58777871772831, -9.55262892092831, -9.30463940392831, -9.55067831772831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.55067831772831]
								}, {
									"case":	484,
									"scores":	[-8.74059396192831, -9.37370343772831, -8.32875986562831, -9.27324092392831, -7.710697040928312, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.58777871772831, -9.55262892092831, -9.30463940392831, -9.55067831772831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.30463940392831, -9.55067831772831]
								}, {
									"case":	485,
									"scores":	[-8.741593961928313, -9.37470343772831, -8.32975986562831, -9.27424092392831, -7.7116970409283123, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.58877871772831, -9.553628920928313, -9.30563940392831, -9.55167831772831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.30563940392831, -9.55167831772831]
								}]
						}, {
							"switch":	15,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	687,
							"begin_column":	6,
							"end_line":	687,
							"end_column":	21,
							"patch_codes":	["if (!__is_neg(\"\", \"L687\", 23, &(s), sizeof (s), &(ap), sizeof (ap), &(s_len), sizeof (s_len), &(pad_char), sizeof (pad_char), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(xbuf), sizeof (xbuf), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    s = &char_buf[0];\n", "{\n}\n", "s = &(&adjust)[0]", "s = &(&adjust_precision)[0]", "s = &(&adjust_width)[0]", "s = &(&alternate_form)[0]", "s = &(&ap)[0]", "s = &(&char_buf)[0]", "s = &(&fmt)[0]", "s = &(&fp_num)[0]", "s = &(&free_zcopy)[0]", "s = &(&i_num)[0]", "s = &(&is_negative)[0]", "s = &(&lconv)[0]", "s = &(&min_width)[0]", "s = &(&modifier)[0]", "s = &(&num_buf)[0]", "s = &(&pad_char)[0]", "s = &(&precision)[0]", "s = &(&prefix_char)[0]", "s = &(&print_blank)[0]", "s = &(&print_sign)[0]", "s = &(&q)[0]", "s = &(&s)[0]", "s = &(&s_len)[0]", "s = &(&ui_num)[0]", "s = &(&xbuf)[0]", "s = &(&zcopy)[0]", "s = &(&zvp)[0]", "s = &(char_buf)[0]", "s = &char_buf[(0 * adjust)]", "s = &char_buf[(0 * adjust_precision)]", "s = &char_buf[(0 * adjust_width)]", "s = &char_buf[(0 * alternate_form)]", "s = &char_buf[(0 * free_zcopy)]", "s = &char_buf[(0 * i_num)]", "s = &char_buf[(0 * is_negative)]", "s = &char_buf[(0 * min_width)]", "s = &char_buf[(0 * modifier)]", "s = &char_buf[(0 * pad_char)]", "s = &char_buf[(0 * precision)]", "s = &char_buf[(0 * prefix_char)]", "s = &char_buf[(0 * print_blank)]", "s = &char_buf[(0 * print_sign)]", "s = &char_buf[(0 * s_len)]", "s = &char_buf[(0 * ui_num)]", "s = &char_buf[(0)]", "s = &char_buf[(adjust != 0)]", "s = &char_buf[(adjust != adjust_precision)]", "s = &char_buf[(adjust != adjust_width)]", "s = &char_buf[(adjust != alternate_form)]", "s = &char_buf[(adjust != i_num)]", "s = &char_buf[(adjust != is_negative)]", "s = &char_buf[(adjust != modifier)]", "s = &char_buf[(adjust != pad_char)]", "s = &char_buf[(adjust != prefix_char)]", "s = &char_buf[(adjust != print_blank)]", "s = &char_buf[(adjust != print_sign)]", "s = &char_buf[(adjust != ui_num)]", "s = &char_buf[(adjust * adjust_precision)]", "s = &char_buf[(adjust * adjust_width)]", "s = &char_buf[(adjust * alternate_form)]", "s = &char_buf[(adjust * free_zcopy)]", "s = &char_buf[(adjust * i_num)]", "s = &char_buf[(adjust * is_negative)]", "s = &char_buf[(adjust * min_width)]", "s = &char_buf[(adjust * modifier)]", "s = &char_buf[(adjust * pad_char)]", "s = &char_buf[(adjust * precision)]", "s = &char_buf[(adjust * prefix_char)]", "s = &char_buf[(adjust * print_blank)]", "s = &char_buf[(adjust * print_sign)]", "s = &char_buf[(adjust * s_len)]", "s = &char_buf[(adjust * ui_num)]", "s = &char_buf[(adjust + 0)]", "s = &char_buf[(adjust + adjust_precision)]", "s = &char_buf[(adjust + adjust_width)]", "s = &char_buf[(adjust + alternate_form)]", "s = &char_buf[(adjust + i_num)]", "s = &char_buf[(adjust + is_negative)]", "s = &char_buf[(adjust + modifier)]", "s = &char_buf[(adjust + pad_char)]", "s = &char_buf[(adjust + prefix_char)]", "s = &char_buf[(adjust + print_blank)]", "s = &char_buf[(adjust + print_sign)]", "s = &char_buf[(adjust + ui_num)]", "s = &char_buf[(adjust - 0)]", "s = &char_buf[(adjust - adjust_precision)]", "s = &char_buf[(adjust - adjust_width)]", "s = &char_buf[(adjust - alternate_form)]", "s = &char_buf[(adjust - i_num)]", "s = &char_buf[(adjust - is_negative)]", "s = &char_buf[(adjust - modifier)]", "s = &char_buf[(adjust - pad_char)]", "s = &char_buf[(adjust - prefix_char)]", "s = &char_buf[(adjust - print_blank)]", "s = &char_buf[(adjust - print_sign)]", "s = &char_buf[(adjust - ui_num)]", "s = &char_buf[(adjust == 0)]", "s = &char_buf[(adjust == adjust_precision)]", "s = &char_buf[(adjust == adjust_width)]", "s = &char_buf[(adjust == alternate_form)]", "s = &char_buf[(adjust == i_num)]", "s = &char_buf[(adjust == is_negative)]", "s = &char_buf[(adjust == modifier)]", "s = &char_buf[(adjust == pad_char)]", "s = &char_buf[(adjust == prefix_char)]", "s = &char_buf[(adjust == print_blank)]", "s = &char_buf[(adjust == print_sign)]", "s = &char_buf[(adjust == ui_num)]", "s = &char_buf[(adjust_precision != 0)]", "s = &char_buf[(adjust_precision != adjust_width)]", "s = &char_buf[(adjust_precision != is_negative)]", "s = &char_buf[(adjust_precision * adjust)]", "s = &char_buf[(adjust_precision * adjust_width)]", "s = &char_buf[(adjust_precision * alternate_form)]", "s = &char_buf[(adjust_precision * free_zcopy)]", "s = &char_buf[(adjust_precision * i_num)]", "s = &char_buf[(adjust_precision * is_negative)]", "s = &char_buf[(adjust_precision * min_width)]", "s = &char_buf[(adjust_precision * modifier)]", "s = &char_buf[(adjust_precision * pad_char)]", "s = &char_buf[(adjust_precision * precision)]", "s = &char_buf[(adjust_precision * prefix_char)]", "s = &char_buf[(adjust_precision * print_blank)]", "s = &char_buf[(adjust_precision * print_sign)]", "s = &char_buf[(adjust_precision * s_len)]", "s = &char_buf[(adjust_precision * ui_num)]", "s = &char_buf[(adjust_precision + 0)]", "s = &char_buf[(adjust_precision + adjust_width)]", "s = &char_buf[(adjust_precision + is_negative)]", "s = &char_buf[(adjust_precision - 0)]", "s = &char_buf[(adjust_precision - adjust_width)]", "s = &char_buf[(adjust_precision - is_negative)]", "s = &char_buf[(adjust_precision == 0)]", "s = &char_buf[(adjust_precision == adjust_width)]", "s = &char_buf[(adjust_precision == is_negative)]", "s = &char_buf[(adjust_width != 0)]", "s = &char_buf[(adjust_width != is_negative)]", "s = &char_buf[(adjust_width * adjust)]", "s = &char_buf[(adjust_width * adjust_precision)]", "s = &char_buf[(adjust_width * alternate_form)]", "s = &char_buf[(adjust_width * free_zcopy)]", "s = &char_buf[(adjust_width * i_num)]", "s = &char_buf[(adjust_width * is_negative)]", "s = &char_buf[(adjust_width * min_width)]", "s = &char_buf[(adjust_width * modifier)]", "s = &char_buf[(adjust_width * pad_char)]", "s = &char_buf[(adjust_width * precision)]", "s = &char_buf[(adjust_width * prefix_char)]", "s = &char_buf[(adjust_width * print_blank)]", "s = &char_buf[(adjust_width * print_sign)]", "s = &char_buf[(adjust_width * s_len)]", "s = &char_buf[(adjust_width * ui_num)]", "s = &char_buf[(adjust_width + 0)]", "s = &char_buf[(adjust_width + is_negative)]", "s = &char_buf[(adjust_width - 0)]", "s = &char_buf[(adjust_width - is_negative)]", "s = &char_buf[(adjust_width == 0)]", "s = &char_buf[(adjust_width == is_negative)]", "s = &char_buf[(alternate_form != 0)]", "s = &char_buf[(alternate_form != adjust_precision)]", "s = &char_buf[(alternate_form != adjust_width)]", "s = &char_buf[(alternate_form != is_negative)]", "s = &char_buf[(alternate_form != print_blank)]", "s = &char_buf[(alternate_form != print_sign)]", "s = &char_buf[(alternate_form * adjust)]", "s = &char_buf[(alternate_form * adjust_precision)]", "s = &char_buf[(alternate_form * adjust_width)]", "s = &char_buf[(alternate_form * free_zcopy)]", "s = &char_buf[(alternate_form * i_num)]", "s = &char_buf[(alternate_form * is_negative)]", "s = &char_buf[(alternate_form * min_width)]", "s = &char_buf[(alternate_form * modifier)]", "s = &char_buf[(alternate_form * pad_char)]", "s = &char_buf[(alternate_form * precision)]", "s = &char_buf[(alternate_form * prefix_char)]", "s = &char_buf[(alternate_form * print_blank)]", "s = &char_buf[(alternate_form * print_sign)]", "s = &char_buf[(alternate_form * s_len)]", "s = &char_buf[(alternate_form * ui_num)]", "s = &char_buf[(alternate_form + 0)]", "s = &char_buf[(alternate_form + adjust_precision)]", "s = &char_buf[(alternate_form + adjust_width)]", "s = &char_buf[(alternate_form + is_negative)]", "s = &char_buf[(alternate_form + print_blank)]", "s = &char_buf[(alternate_form + print_sign)]", "s = &char_buf[(alternate_form - 0)]", "s = &char_buf[(alternate_form - adjust_precision)]", "s = &char_buf[(alternate_form - adjust_width)]", "s = &char_buf[(alternate_form - is_negative)]", "s = &char_buf[(alternate_form - print_blank)]", "s = &char_buf[(alternate_form - print_sign)]", "s = &char_buf[(alternate_form == 0)]", "s = &char_buf[(alternate_form == adjust_precision)]", "s = &char_buf[(alternate_form == adjust_width)]", "s = &char_buf[(alternate_form == is_negative)]", "s = &char_buf[(alternate_form == print_blank)]", "s = &char_buf[(alternate_form == print_sign)]", "s = &char_buf[(ap != 0)]", "s = &char_buf[(ap == 0)]", "s = &char_buf[(char_buf != 0)]", "s = &char_buf[(char_buf == 0)]", "s = &char_buf[(fmt != 0)]", "s = &char_buf[(fmt == 0)]", "s = &char_buf[(fp_num != 0)]", "s = &char_buf[(fp_num == 0)]", "s = &char_buf[(free_zcopy != 0)]", "s = &char_buf[(free_zcopy != adjust)]", "s = &char_buf[(free_zcopy != adjust_precision)]", "s = &char_buf[(free_zcopy != adjust_width)]", "s = &char_buf[(free_zcopy != alternate_form)]", "s = &char_buf[(free_zcopy != i_num)]", "s = &char_buf[(free_zcopy != is_negative)]", "s = &char_buf[(free_zcopy != min_width)]", "s = &char_buf[(free_zcopy != modifier)]", "s = &char_buf[(free_zcopy != pad_char)]", "s = &char_buf[(free_zcopy != precision)]", "s = &char_buf[(free_zcopy != prefix_char)]", "s = &char_buf[(free_zcopy != print_blank)]", "s = &char_buf[(free_zcopy != print_sign)]", "s = &char_buf[(free_zcopy != ui_num)]", "s = &char_buf[(free_zcopy * adjust)]", "s = &char_buf[(free_zcopy * adjust_precision)]", "s = &char_buf[(free_zcopy * adjust_width)]", "s = &char_buf[(free_zcopy * alternate_form)]", "s = &char_buf[(free_zcopy * i_num)]", "s = &char_buf[(free_zcopy * is_negative)]", "s = &char_buf[(free_zcopy * min_width)]", "s = &char_buf[(free_zcopy * modifier)]", "s = &char_buf[(free_zcopy * pad_char)]", "s = &char_buf[(free_zcopy * precision)]", "s = &char_buf[(free_zcopy * prefix_char)]", "s = &char_buf[(free_zcopy * print_blank)]", "s = &char_buf[(free_zcopy * print_sign)]", "s = &char_buf[(free_zcopy * s_len)]", "s = &char_buf[(free_zcopy * ui_num)]", "s = &char_buf[(free_zcopy + 0)]", "s = &char_buf[(free_zcopy + adjust)]", "s = &char_buf[(free_zcopy + adjust_precision)]", "s = &char_buf[(free_zcopy + adjust_width)]", "s = &char_buf[(free_zcopy + alternate_form)]", "s = &char_buf[(free_zcopy + i_num)]", "s = &char_buf[(free_zcopy + is_negative)]", "s = &char_buf[(free_zcopy + min_width)]", "s = &char_buf[(free_zcopy + modifier)]", "s = &char_buf[(free_zcopy + pad_char)]", "s = &char_buf[(free_zcopy + precision)]", "s = &char_buf[(free_zcopy + prefix_char)]", "s = &char_buf[(free_zcopy + print_blank)]", "s = &char_buf[(free_zcopy + print_sign)]", "s = &char_buf[(free_zcopy + ui_num)]", "s = &char_buf[(free_zcopy - 0)]", "s = &char_buf[(free_zcopy - adjust)]", "s = &char_buf[(free_zcopy - adjust_precision)]", "s = &char_buf[(free_zcopy - adjust_width)]", "s = &char_buf[(free_zcopy - alternate_form)]", "s = &char_buf[(free_zcopy - i_num)]", "s = &char_buf[(free_zcopy - is_negative)]", "s = &char_buf[(free_zcopy - min_width)]", "s = &char_buf[(free_zcopy - modifier)]", "s = &char_buf[(free_zcopy - pad_char)]", "s = &char_buf[(free_zcopy - precision)]", "s = &char_buf[(free_zcopy - prefix_char)]", "s = &char_buf[(free_zcopy - print_blank)]", "s = &char_buf[(free_zcopy - print_sign)]", "s = &char_buf[(free_zcopy - ui_num)]", "s = &char_buf[(free_zcopy == 0)]", "s = &char_buf[(free_zcopy == adjust)]", "s = &char_buf[(free_zcopy == adjust_precision)]", "s = &char_buf[(free_zcopy == adjust_width)]", "s = &char_buf[(free_zcopy == alternate_form)]", "s = &char_buf[(free_zcopy == i_num)]", "s = &char_buf[(free_zcopy == is_negative)]", "s = &char_buf[(free_zcopy == min_width)]", "s = &char_buf[(free_zcopy == modifier)]", "s = &char_buf[(free_zcopy == pad_char)]", "s = &char_buf[(free_zcopy == precision)]", "s = &char_buf[(free_zcopy == prefix_char)]", "s = &char_buf[(free_zcopy == print_blank)]", "s = &char_buf[(free_zcopy == print_sign)]", "s = &char_buf[(free_zcopy == ui_num)]", "s = &char_buf[(i_num != 0)]", "s = &char_buf[(i_num != adjust_precision)]", "s = &char_buf[(i_num != adjust_width)]", "s = &char_buf[(i_num != alternate_form)]", "s = &char_buf[(i_num != is_negative)]", "s = &char_buf[(i_num != modifier)]", "s = &char_buf[(i_num != print_blank)]", "s = &char_buf[(i_num != print_sign)]", "s = &char_buf[(i_num != ui_num)]", "s = &char_buf[(i_num * adjust)]", "s = &char_buf[(i_num * adjust_precision)]", "s = &char_buf[(i_num * adjust_width)]", "s = &char_buf[(i_num * alternate_form)]", "s = &char_buf[(i_num * free_zcopy)]", "s = &char_buf[(i_num * is_negative)]", "s = &char_buf[(i_num * min_width)]", "s = &char_buf[(i_num * modifier)]", "s = &char_buf[(i_num * pad_char)]", "s = &char_buf[(i_num * precision)]", "s = &char_buf[(i_num * prefix_char)]", "s = &char_buf[(i_num * print_blank)]", "s = &char_buf[(i_num * print_sign)]", "s = &char_buf[(i_num * s_len)]", "s = &char_buf[(i_num * ui_num)]", "s = &char_buf[(i_num + 0)]", "s = &char_buf[(i_num + adjust_precision)]", "s = &char_buf[(i_num + adjust_width)]", "s = &char_buf[(i_num + alternate_form)]", "s = &char_buf[(i_num + is_negative)]", "s = &char_buf[(i_num + modifier)]", "s = &char_buf[(i_num + print_blank)]", "s = &char_buf[(i_num + print_sign)]", "s = &char_buf[(i_num + ui_num)]", "s = &char_buf[(i_num - 0)]", "s = &char_buf[(i_num - adjust_precision)]", "s = &char_buf[(i_num - adjust_width)]", "s = &char_buf[(i_num - alternate_form)]", "s = &char_buf[(i_num - is_negative)]", "s = &char_buf[(i_num - modifier)]", "s = &char_buf[(i_num - print_blank)]", "s = &char_buf[(i_num - print_sign)]", "s = &char_buf[(i_num - ui_num)]", "s = &char_buf[(i_num == 0)]", "s = &char_buf[(i_num == adjust_precision)]", "s = &char_buf[(i_num == adjust_width)]", "s = &char_buf[(i_num == alternate_form)]", "s = &char_buf[(i_num == is_negative)]", "s = &char_buf[(i_num == modifier)]", "s = &char_buf[(i_num == print_blank)]", "s = &char_buf[(i_num == print_sign)]", "s = &char_buf[(i_num == ui_num)]", "s = &char_buf[(is_negative != 0)]", "s = &char_buf[(is_negative * adjust)]", "s = &char_buf[(is_negative * adjust_precision)]", "s = &char_buf[(is_negative * adjust_width)]", "s = &char_buf[(is_negative * alternate_form)]", "s = &char_buf[(is_negative * free_zcopy)]", "s = &char_buf[(is_negative * i_num)]", "s = &char_buf[(is_negative * min_width)]", "s = &char_buf[(is_negative * modifier)]", "s = &char_buf[(is_negative * pad_char)]", "s = &char_buf[(is_negative * precision)]", "s = &char_buf[(is_negative * prefix_char)]", "s = &char_buf[(is_negative * print_blank)]", "s = &char_buf[(is_negative * print_sign)]", "s = &char_buf[(is_negative * s_len)]", "s = &char_buf[(is_negative * ui_num)]", "s = &char_buf[(is_negative + 0)]", "s = &char_buf[(is_negative - 0)]", "s = &char_buf[(is_negative == 0)]", "s = &char_buf[(lconv != 0)]", "s = &char_buf[(lconv == 0)]", "s = &char_buf[(min_width != 0)]", "s = &char_buf[(min_width != adjust)]", "s = &char_buf[(min_width != adjust_precision)]", "s = &char_buf[(min_width != adjust_width)]", "s = &char_buf[(min_width != alternate_form)]", "s = &char_buf[(min_width != i_num)]", "s = &char_buf[(min_width != is_negative)]", "s = &char_buf[(min_width != modifier)]", "s = &char_buf[(min_width != pad_char)]", "s = &char_buf[(min_width != precision)]", "s = &char_buf[(min_width != prefix_char)]", "s = &char_buf[(min_width != print_blank)]", "s = &char_buf[(min_width != print_sign)]", "s = &char_buf[(min_width != ui_num)]", "s = &char_buf[(min_width * adjust)]", "s = &char_buf[(min_width * adjust_precision)]", "s = &char_buf[(min_width * adjust_width)]", "s = &char_buf[(min_width * alternate_form)]", "s = &char_buf[(min_width * free_zcopy)]", "s = &char_buf[(min_width * i_num)]", "s = &char_buf[(min_width * is_negative)]", "s = &char_buf[(min_width * modifier)]", "s = &char_buf[(min_width * pad_char)]", "s = &char_buf[(min_width * precision)]", "s = &char_buf[(min_width * prefix_char)]", "s = &char_buf[(min_width * print_blank)]", "s = &char_buf[(min_width * print_sign)]", "s = &char_buf[(min_width * s_len)]", "s = &char_buf[(min_width * ui_num)]", "s = &char_buf[(min_width + 0)]", "s = &char_buf[(min_width + adjust)]", "s = &char_buf[(min_width + adjust_precision)]", "s = &char_buf[(min_width + adjust_width)]", "s = &char_buf[(min_width + alternate_form)]", "s = &char_buf[(min_width + i_num)]", "s = &char_buf[(min_width + is_negative)]", "s = &char_buf[(min_width + modifier)]", "s = &char_buf[(min_width + pad_char)]", "s = &char_buf[(min_width + precision)]", "s = &char_buf[(min_width + prefix_char)]", "s = &char_buf[(min_width + print_blank)]", "s = &char_buf[(min_width + print_sign)]", "s = &char_buf[(min_width + ui_num)]", "s = &char_buf[(min_width - 0)]", "s = &char_buf[(min_width - adjust)]", "s = &char_buf[(min_width - adjust_precision)]", "s = &char_buf[(min_width - adjust_width)]", "s = &char_buf[(min_width - alternate_form)]", "s = &char_buf[(min_width - i_num)]", "s = &char_buf[(min_width - is_negative)]", "s = &char_buf[(min_width - modifier)]", "s = &char_buf[(min_width - pad_char)]", "s = &char_buf[(min_width - precision)]", "s = &char_buf[(min_width - prefix_char)]", "s = &char_buf[(min_width - print_blank)]", "s = &char_buf[(min_width - print_sign)]", "s = &char_buf[(min_width - ui_num)]", "s = &char_buf[(min_width == 0)]", "s = &char_buf[(min_width == adjust)]", "s = &char_buf[(min_width == adjust_precision)]", "s = &char_buf[(min_width == adjust_width)]", "s = &char_buf[(min_width == alternate_form)]", "s = &char_buf[(min_width == i_num)]", "s = &char_buf[(min_width == is_negative)]", "s = &char_buf[(min_width == modifier)]", "s = &char_buf[(min_width == pad_char)]", "s = &char_buf[(min_width == precision)]", "s = &char_buf[(min_width == prefix_char)]", "s = &char_buf[(min_width == print_blank)]", "s = &char_buf[(min_width == print_sign)]", "s = &char_buf[(min_width == ui_num)]", "s = &char_buf[(modifier != 0)]", "s = &char_buf[(modifier != adjust_precision)]", "s = &char_buf[(modifier != adjust_width)]", "s = &char_buf[(modifier != alternate_form)]", "s = &char_buf[(modifier != is_negative)]", "s = &char_buf[(modifier != print_blank)]", "s = &char_buf[(modifier != print_sign)]", "s = &char_buf[(modifier * adjust)]", "s = &char_buf[(modifier * adjust_precision)]", "s = &char_buf[(modifier * adjust_width)]", "s = &char_buf[(modifier * alternate_form)]", "s = &char_buf[(modifier * free_zcopy)]", "s = &char_buf[(modifier * i_num)]", "s = &char_buf[(modifier * is_negative)]", "s = &char_buf[(modifier * min_width)]", "s = &char_buf[(modifier * pad_char)]", "s = &char_buf[(modifier * precision)]", "s = &char_buf[(modifier * prefix_char)]", "s = &char_buf[(modifier * print_blank)]", "s = &char_buf[(modifier * print_sign)]", "s = &char_buf[(modifier * s_len)]", "s = &char_buf[(modifier * ui_num)]", "s = &char_buf[(modifier + 0)]", "s = &char_buf[(modifier + adjust_precision)]", "s = &char_buf[(modifier + adjust_width)]", "s = &char_buf[(modifier + alternate_form)]", "s = &char_buf[(modifier + is_negative)]", "s = &char_buf[(modifier + print_blank)]", "s = &char_buf[(modifier + print_sign)]", "s = &char_buf[(modifier - 0)]", "s = &char_buf[(modifier - adjust_precision)]", "s = &char_buf[(modifier - adjust_width)]", "s = &char_buf[(modifier - alternate_form)]", "s = &char_buf[(modifier - is_negative)]", "s = &char_buf[(modifier - print_blank)]", "s = &char_buf[(modifier - print_sign)]", "s = &char_buf[(modifier == 0)]", "s = &char_buf[(modifier == adjust_precision)]", "s = &char_buf[(modifier == adjust_width)]", "s = &char_buf[(modifier == alternate_form)]", "s = &char_buf[(modifier == is_negative)]", "s = &char_buf[(modifier == print_blank)]", "s = &char_buf[(modifier == print_sign)]", "s = &char_buf[(num_buf != 0)]", "s = &char_buf[(num_buf == 0)]", "s = &char_buf[(pad_char != 0)]", "s = &char_buf[(pad_char != adjust_precision)]", "s = &char_buf[(pad_char != adjust_width)]", "s = &char_buf[(pad_char != alternate_form)]", "s = &char_buf[(pad_char != i_num)]", "s = &char_buf[(pad_char != is_negative)]", "s = &char_buf[(pad_char != modifier)]", "s = &char_buf[(pad_char != prefix_char)]", "s = &char_buf[(pad_char != print_blank)]", "s = &char_buf[(pad_char != print_sign)]", "s = &char_buf[(pad_char != ui_num)]", "s = &char_buf[(pad_char * adjust)]", "s = &char_buf[(pad_char * adjust_precision)]", "s = &char_buf[(pad_char * adjust_width)]", "s = &char_buf[(pad_char * alternate_form)]", "s = &char_buf[(pad_char * free_zcopy)]", "s = &char_buf[(pad_char * i_num)]", "s = &char_buf[(pad_char * is_negative)]", "s = &char_buf[(pad_char * min_width)]", "s = &char_buf[(pad_char * modifier)]", "s = &char_buf[(pad_char * precision)]", "s = &char_buf[(pad_char * prefix_char)]", "s = &char_buf[(pad_char * print_blank)]", "s = &char_buf[(pad_char * print_sign)]", "s = &char_buf[(pad_char * s_len)]", "s = &char_buf[(pad_char * ui_num)]", "s = &char_buf[(pad_char + 0)]", "s = &char_buf[(pad_char + adjust_precision)]", "s = &char_buf[(pad_char + adjust_width)]", "s = &char_buf[(pad_char + alternate_form)]", "s = &char_buf[(pad_char + i_num)]", "s = &char_buf[(pad_char + is_negative)]", "s = &char_buf[(pad_char + modifier)]", "s = &char_buf[(pad_char + prefix_char)]", "s = &char_buf[(pad_char + print_blank)]", "s = &char_buf[(pad_char + print_sign)]", "s = &char_buf[(pad_char + ui_num)]", "s = &char_buf[(pad_char - 0)]", "s = &char_buf[(pad_char - adjust_precision)]", "s = &char_buf[(pad_char - adjust_width)]", "s = &char_buf[(pad_char - alternate_form)]", "s = &char_buf[(pad_char - i_num)]", "s = &char_buf[(pad_char - is_negative)]", "s = &char_buf[(pad_char - modifier)]", "s = &char_buf[(pad_char - prefix_char)]", "s = &char_buf[(pad_char - print_blank)]", "s = &char_buf[(pad_char - print_sign)]", "s = &char_buf[(pad_char - ui_num)]", "s = &char_buf[(pad_char == 0)]", "s = &char_buf[(pad_char == adjust_precision)]", "s = &char_buf[(pad_char == adjust_width)]", "s = &char_buf[(pad_char == alternate_form)]", "s = &char_buf[(pad_char == i_num)]", "s = &char_buf[(pad_char == is_negative)]", "s = &char_buf[(pad_char == modifier)]", "s = &char_buf[(pad_char == prefix_char)]", "s = &char_buf[(pad_char == print_blank)]", "s = &char_buf[(pad_char == print_sign)]", "s = &char_buf[(pad_char == ui_num)]", "s = &char_buf[(precision != 0)]", "s = &char_buf[(precision != adjust)]", "s = &char_buf[(precision != adjust_precision)]", "s = &char_buf[(precision != adjust_width)]", "s = &char_buf[(precision != alternate_form)]", "s = &char_buf[(precision != i_num)]", "s = &char_buf[(precision != is_negative)]", "s = &char_buf[(precision != modifier)]", "s = &char_buf[(precision != pad_char)]", "s = &char_buf[(precision != prefix_char)]", "s = &char_buf[(precision != print_blank)]", "s = &char_buf[(precision != print_sign)]", "s = &char_buf[(precision != ui_num)]", "s = &char_buf[(precision * adjust)]", "s = &char_buf[(precision * adjust_precision)]", "s = &char_buf[(precision * adjust_width)]", "s = &char_buf[(precision * alternate_form)]", "s = &char_buf[(precision * free_zcopy)]", "s = &char_buf[(precision * i_num)]", "s = &char_buf[(precision * is_negative)]", "s = &char_buf[(precision * min_width)]", "s = &char_buf[(precision * modifier)]", "s = &char_buf[(precision * pad_char)]", "s = &char_buf[(precision * prefix_char)]", "s = &char_buf[(precision * print_blank)]", "s = &char_buf[(precision * print_sign)]", "s = &char_buf[(precision * s_len)]", "s = &char_buf[(precision * ui_num)]", "s = &char_buf[(precision + 0)]", "s = &char_buf[(precision + adjust)]", "s = &char_buf[(precision + adjust_precision)]", "s = &char_buf[(precision + adjust_width)]", "s = &char_buf[(precision + alternate_form)]", "s = &char_buf[(precision + i_num)]", "s = &char_buf[(precision + is_negative)]", "s = &char_buf[(precision + modifier)]", "s = &char_buf[(precision + pad_char)]", "s = &char_buf[(precision + prefix_char)]", "s = &char_buf[(precision + print_blank)]", "s = &char_buf[(precision + print_sign)]", "s = &char_buf[(precision + ui_num)]", "s = &char_buf[(precision - 0)]", "s = &char_buf[(precision - adjust)]", "s = &char_buf[(precision - adjust_precision)]", "s = &char_buf[(precision - adjust_width)]", "s = &char_buf[(precision - alternate_form)]", "s = &char_buf[(precision - i_num)]", "s = &char_buf[(precision - is_negative)]", "s = &char_buf[(precision - modifier)]", "s = &char_buf[(precision - pad_char)]", "s = &char_buf[(precision - prefix_char)]", "s = &char_buf[(precision - print_blank)]", "s = &char_buf[(precision - print_sign)]", "s = &char_buf[(precision - ui_num)]", "s = &char_buf[(precision == 0)]", "s = &char_buf[(precision == adjust)]", "s = &char_buf[(precision == adjust_precision)]", "s = &char_buf[(precision == adjust_width)]", "s = &char_buf[(precision == alternate_form)]", "s = &char_buf[(precision == i_num)]", "s = &char_buf[(precision == is_negative)]", "s = &char_buf[(precision == modifier)]", "s = &char_buf[(precision == pad_char)]", "s = &char_buf[(precision == prefix_char)]", "s = &char_buf[(precision == print_blank)]", "s = &char_buf[(precision == print_sign)]", "s = &char_buf[(precision == ui_num)]", "s = &char_buf[(prefix_char != 0)]", "s = &char_buf[(prefix_char != adjust_precision)]", "s = &char_buf[(prefix_char != adjust_width)]", "s = &char_buf[(prefix_char != alternate_form)]", "s = &char_buf[(prefix_char != i_num)]", "s = &char_buf[(prefix_char != is_negative)]", "s = &char_buf[(prefix_char != modifier)]", "s = &char_buf[(prefix_char != print_blank)]", "s = &char_buf[(prefix_char != print_sign)]", "s = &char_buf[(prefix_char != ui_num)]", "s = &char_buf[(prefix_char * adjust)]", "s = &char_buf[(prefix_char * adjust_precision)]", "s = &char_buf[(prefix_char * adjust_width)]", "s = &char_buf[(prefix_char * alternate_form)]", "s = &char_buf[(prefix_char * free_zcopy)]", "s = &char_buf[(prefix_char * i_num)]", "s = &char_buf[(prefix_char * is_negative)]", "s = &char_buf[(prefix_char * min_width)]", "s = &char_buf[(prefix_char * modifier)]", "s = &char_buf[(prefix_char * pad_char)]", "s = &char_buf[(prefix_char * precision)]", "s = &char_buf[(prefix_char * print_blank)]", "s = &char_buf[(prefix_char * print_sign)]", "s = &char_buf[(prefix_char * s_len)]", "s = &char_buf[(prefix_char * ui_num)]", "s = &char_buf[(prefix_char + 0)]", "s = &char_buf[(prefix_char + adjust_precision)]", "s = &char_buf[(prefix_char + adjust_width)]", "s = &char_buf[(prefix_char + alternate_form)]", "s = &char_buf[(prefix_char + i_num)]", "s = &char_buf[(prefix_char + is_negative)]", "s = &char_buf[(prefix_char + modifier)]", "s = &char_buf[(prefix_char + print_blank)]", "s = &char_buf[(prefix_char + print_sign)]", "s = &char_buf[(prefix_char + ui_num)]", "s = &char_buf[(prefix_char - 0)]", "s = &char_buf[(prefix_char - adjust_precision)]", "s = &char_buf[(prefix_char - adjust_width)]", "s = &char_buf[(prefix_char - alternate_form)]", "s = &char_buf[(prefix_char - i_num)]", "s = &char_buf[(prefix_char - is_negative)]", "s = &char_buf[(prefix_char - modifier)]", "s = &char_buf[(prefix_char - print_blank)]", "s = &char_buf[(prefix_char - print_sign)]", "s = &char_buf[(prefix_char - ui_num)]", "s = &char_buf[(prefix_char == 0)]", "s = &char_buf[(prefix_char == adjust_precision)]", "s = &char_buf[(prefix_char == adjust_width)]", "s = &char_buf[(prefix_char == alternate_form)]", "s = &char_buf[(prefix_char == i_num)]", "s = &char_buf[(prefix_char == is_negative)]", "s = &char_buf[(prefix_char == modifier)]", "s = &char_buf[(prefix_char == print_blank)]", "s = &char_buf[(prefix_char == print_sign)]", "s = &char_buf[(prefix_char == ui_num)]", "s = &char_buf[(print_blank != 0)]", "s = &char_buf[(print_blank != adjust_precision)]", "s = &char_buf[(print_blank != adjust_width)]", "s = &char_buf[(print_blank != is_negative)]", "s = &char_buf[(print_blank * adjust)]", "s = &char_buf[(print_blank * adjust_precision)]", "s = &char_buf[(print_blank * adjust_width)]", "s = &char_buf[(print_blank * alternate_form)]", "s = &char_buf[(print_blank * free_zcopy)]", "s = &char_buf[(print_blank * i_num)]", "s = &char_buf[(print_blank * is_negative)]", "s = &char_buf[(print_blank * min_width)]", "s = &char_buf[(print_blank * modifier)]", "s = &char_buf[(print_blank * pad_char)]", "s = &char_buf[(print_blank * precision)]", "s = &char_buf[(print_blank * prefix_char)]", "s = &char_buf[(print_blank * print_sign)]", "s = &char_buf[(print_blank * s_len)]", "s = &char_buf[(print_blank * ui_num)]", "s = &char_buf[(print_blank + 0)]", "s = &char_buf[(print_blank + adjust_precision)]", "s = &char_buf[(print_blank + adjust_width)]", "s = &char_buf[(print_blank + is_negative)]", "s = &char_buf[(print_blank - 0)]", "s = &char_buf[(print_blank - adjust_precision)]", "s = &char_buf[(print_blank - adjust_width)]", "s = &char_buf[(print_blank - is_negative)]", "s = &char_buf[(print_blank == 0)]", "s = &char_buf[(print_blank == adjust_precision)]", "s = &char_buf[(print_blank == adjust_width)]", "s = &char_buf[(print_blank == is_negative)]", "s = &char_buf[(print_sign != 0)]", "s = &char_buf[(print_sign != adjust_precision)]", "s = &char_buf[(print_sign != adjust_width)]", "s = &char_buf[(print_sign != is_negative)]", "s = &char_buf[(print_sign != print_blank)]", "s = &char_buf[(print_sign * adjust)]", "s = &char_buf[(print_sign * adjust_precision)]", "s = &char_buf[(print_sign * adjust_width)]", "s = &char_buf[(print_sign * alternate_form)]", "s = &char_buf[(print_sign * free_zcopy)]", "s = &char_buf[(print_sign * i_num)]", "s = &char_buf[(print_sign * is_negative)]", "s = &char_buf[(print_sign * min_width)]", "s = &char_buf[(print_sign * modifier)]", "s = &char_buf[(print_sign * pad_char)]", "s = &char_buf[(print_sign * precision)]", "s = &char_buf[(print_sign * prefix_char)]", "s = &char_buf[(print_sign * print_blank)]", "s = &char_buf[(print_sign * s_len)]", "s = &char_buf[(print_sign * ui_num)]", "s = &char_buf[(print_sign + 0)]", "s = &char_buf[(print_sign + adjust_precision)]", "s = &char_buf[(print_sign + adjust_width)]", "s = &char_buf[(print_sign + is_negative)]", "s = &char_buf[(print_sign + print_blank)]", "s = &char_buf[(print_sign - 0)]", "s = &char_buf[(print_sign - adjust_precision)]", "s = &char_buf[(print_sign - adjust_width)]", "s = &char_buf[(print_sign - is_negative)]", "s = &char_buf[(print_sign - print_blank)]", "s = &char_buf[(print_sign == 0)]", "s = &char_buf[(print_sign == adjust_precision)]", "s = &char_buf[(print_sign == adjust_width)]", "s = &char_buf[(print_sign == is_negative)]", "s = &char_buf[(print_sign == print_blank)]", "s = &char_buf[(q != 0)]", "s = &char_buf[(q == 0)]", "s = &char_buf[(s != 0)]", "s = &char_buf[(s != q)]", "s = &char_buf[(s == 0)]", "s = &char_buf[(s == q)]", "s = &char_buf[(s_len != 0)]", "s = &char_buf[(s_len != adjust)]", "s = &char_buf[(s_len != adjust_precision)]", "s = &char_buf[(s_len != adjust_width)]", "s = &char_buf[(s_len != alternate_form)]", "s = &char_buf[(s_len != free_zcopy)]", "s = &char_buf[(s_len != i_num)]", "s = &char_buf[(s_len != is_negative)]", "s = &char_buf[(s_len != min_width)]", "s = &char_buf[(s_len != modifier)]", "s = &char_buf[(s_len != pad_char)]", "s = &char_buf[(s_len != precision)]", "s = &char_buf[(s_len != prefix_char)]", "s = &char_buf[(s_len != print_blank)]", "s = &char_buf[(s_len != print_sign)]", "s = &char_buf[(s_len != ui_num)]", "s = &char_buf[(s_len * adjust)]", "s = &char_buf[(s_len * adjust_precision)]", "s = &char_buf[(s_len * adjust_width)]", "s = &char_buf[(s_len * alternate_form)]", "s = &char_buf[(s_len * free_zcopy)]", "s = &char_buf[(s_len * i_num)]", "s = &char_buf[(s_len * is_negative)]", "s = &char_buf[(s_len * min_width)]", "s = &char_buf[(s_len * modifier)]", "s = &char_buf[(s_len * pad_char)]", "s = &char_buf[(s_len * precision)]", "s = &char_buf[(s_len * prefix_char)]", "s = &char_buf[(s_len * print_blank)]", "s = &char_buf[(s_len * print_sign)]", "s = &char_buf[(s_len * ui_num)]", "s = &char_buf[(s_len + 0)]", "s = &char_buf[(s_len + adjust)]", "s = &char_buf[(s_len + adjust_precision)]", "s = &char_buf[(s_len + adjust_width)]", "s = &char_buf[(s_len + alternate_form)]", "s = &char_buf[(s_len + free_zcopy)]", "s = &char_buf[(s_len + i_num)]", "s = &char_buf[(s_len + is_negative)]", "s = &char_buf[(s_len + min_width)]", "s = &char_buf[(s_len + modifier)]", "s = &char_buf[(s_len + pad_char)]", "s = &char_buf[(s_len + precision)]", "s = &char_buf[(s_len + prefix_char)]", "s = &char_buf[(s_len + print_blank)]", "s = &char_buf[(s_len + print_sign)]", "s = &char_buf[(s_len + ui_num)]", "s = &char_buf[(s_len - 0)]", "s = &char_buf[(s_len - adjust)]", "s = &char_buf[(s_len - adjust_precision)]", "s = &char_buf[(s_len - adjust_width)]", "s = &char_buf[(s_len - alternate_form)]", "s = &char_buf[(s_len - free_zcopy)]", "s = &char_buf[(s_len - i_num)]", "s = &char_buf[(s_len - is_negative)]", "s = &char_buf[(s_len - min_width)]", "s = &char_buf[(s_len - modifier)]", "s = &char_buf[(s_len - pad_char)]", "s = &char_buf[(s_len - precision)]", "s = &char_buf[(s_len - prefix_char)]", "s = &char_buf[(s_len - print_blank)]", "s = &char_buf[(s_len - print_sign)]", "s = &char_buf[(s_len - ui_num)]", "s = &char_buf[(s_len == 0)]", "s = &char_buf[(s_len == adjust)]", "s = &char_buf[(s_len == adjust_precision)]", "s = &char_buf[(s_len == adjust_width)]", "s = &char_buf[(s_len == alternate_form)]", "s = &char_buf[(s_len == free_zcopy)]", "s = &char_buf[(s_len == i_num)]", "s = &char_buf[(s_len == is_negative)]", "s = &char_buf[(s_len == min_width)]", "s = &char_buf[(s_len == modifier)]", "s = &char_buf[(s_len == pad_char)]", "s = &char_buf[(s_len == precision)]", "s = &char_buf[(s_len == prefix_char)]", "s = &char_buf[(s_len == print_blank)]", "s = &char_buf[(s_len == print_sign)]", "s = &char_buf[(s_len == ui_num)]", "s = &char_buf[(ui_num != 0)]", "s = &char_buf[(ui_num != adjust_precision)]", "s = &char_buf[(ui_num != adjust_width)]", "s = &char_buf[(ui_num != alternate_form)]", "s = &char_buf[(ui_num != is_negative)]", "s = &char_buf[(ui_num != modifier)]", "s = &char_buf[(ui_num != print_blank)]", "s = &char_buf[(ui_num != print_sign)]", "s = &char_buf[(ui_num * adjust)]", "s = &char_buf[(ui_num * adjust_precision)]", "s = &char_buf[(ui_num * adjust_width)]", "s = &char_buf[(ui_num * alternate_form)]", "s = &char_buf[(ui_num * free_zcopy)]", "s = &char_buf[(ui_num * i_num)]", "s = &char_buf[(ui_num * is_negative)]", "s = &char_buf[(ui_num * min_width)]", "s = &char_buf[(ui_num * modifier)]", "s = &char_buf[(ui_num * pad_char)]", "s = &char_buf[(ui_num * precision)]", "s = &char_buf[(ui_num * prefix_char)]", "s = &char_buf[(ui_num * print_blank)]", "s = &char_buf[(ui_num * print_sign)]", "s = &char_buf[(ui_num * s_len)]", "s = &char_buf[(ui_num + 0)]", "s = &char_buf[(ui_num + adjust_precision)]", "s = &char_buf[(ui_num + adjust_width)]", "s = &char_buf[(ui_num + alternate_form)]", "s = &char_buf[(ui_num + is_negative)]", "s = &char_buf[(ui_num + modifier)]", "s = &char_buf[(ui_num + print_blank)]", "s = &char_buf[(ui_num + print_sign)]", "s = &char_buf[(ui_num - 0)]", "s = &char_buf[(ui_num - adjust_precision)]", "s = &char_buf[(ui_num - adjust_width)]", "s = &char_buf[(ui_num - alternate_form)]", "s = &char_buf[(ui_num - is_negative)]", "s = &char_buf[(ui_num - modifier)]", "s = &char_buf[(ui_num - print_blank)]", "s = &char_buf[(ui_num - print_sign)]", "s = &char_buf[(ui_num == 0)]", "s = &char_buf[(ui_num == adjust_precision)]", "s = &char_buf[(ui_num == adjust_width)]", "s = &char_buf[(ui_num == alternate_form)]", "s = &char_buf[(ui_num == is_negative)]", "s = &char_buf[(ui_num == modifier)]", "s = &char_buf[(ui_num == print_blank)]", "s = &char_buf[(ui_num == print_sign)]", "s = &char_buf[(xbuf != 0)]", "s = &char_buf[(xbuf == 0)]", "s = &char_buf[(zcopy != 0)]", "s = &char_buf[(zcopy == 0)]", "s = &char_buf[(zvp != 0)]", "s = &char_buf[(zvp == 0)]", "s = (q)", "s = (s)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.431060955428312, -7.9816107779283119, -7.535556072928312, -7.166828297928312, -6.8885180179283125, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -8.35217377792831, -8.06354567792831, -7.2999348779283117, -8.05782297792831, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -7.2999348779283117, -8.05782297792831]
								}, {
									"case":	2,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	3,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	4,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	5,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	6,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	7,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	8,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	9,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	10,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	11,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	12,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	13,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	14,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	15,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	16,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	17,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	18,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	19,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	20,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	21,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	22,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	23,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	24,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	25,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	26,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	27,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	28,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	29,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	30,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	31,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	32,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	33,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	34,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	35,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	36,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	37,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	38,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	39,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	40,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	41,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	42,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	43,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	44,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	45,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	46,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	47,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	48,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	49,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	50,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	51,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	52,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	53,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	54,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	55,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	56,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	57,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	58,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	59,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	60,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	61,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	62,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	63,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	64,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	65,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	66,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	67,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	68,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	69,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	70,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	71,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	72,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	73,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	74,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	75,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	76,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	77,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	78,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	79,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	80,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	81,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	82,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	83,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	84,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	85,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	86,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	87,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	88,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	89,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	90,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	91,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	92,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	93,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	94,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	95,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	96,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	97,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	98,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	99,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	100,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	101,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	102,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	103,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	104,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	105,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	106,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	107,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	108,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	109,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	110,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	111,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	112,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	113,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	114,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	115,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	116,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	117,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	118,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	119,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	120,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	121,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	122,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	123,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	124,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	125,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	126,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	127,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	128,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	129,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	130,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	131,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	132,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	133,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	134,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	135,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	136,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	137,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	138,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	139,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	140,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	141,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	142,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	143,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	144,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	145,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	146,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	147,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	148,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	149,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	150,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	151,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	152,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	153,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	154,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	155,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	156,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	157,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	158,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	159,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	160,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	161,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	162,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	163,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	164,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	165,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	166,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	167,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	168,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	169,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	170,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	171,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	172,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	173,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	174,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	175,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	176,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	177,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	178,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	179,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	180,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	181,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	182,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	183,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	184,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	185,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	186,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	187,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	188,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	189,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	190,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	191,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	192,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	193,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	194,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	195,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	196,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	197,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	198,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	199,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	200,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	201,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	202,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	203,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	204,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	205,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	206,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	207,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	208,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	209,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	210,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	211,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	212,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	213,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	214,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	215,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	216,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	217,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	218,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	219,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	220,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	221,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	222,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	223,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	224,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	225,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	226,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	227,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	228,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	229,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	230,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	231,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	232,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	233,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	234,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	235,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	236,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	237,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	238,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	239,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	240,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	241,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	242,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	243,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	244,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	245,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	246,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	247,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	248,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	249,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	250,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	251,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	252,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	253,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	254,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	255,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	256,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	257,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	258,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	259,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	260,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	261,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	262,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	263,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	264,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	265,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	266,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	267,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	268,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	269,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	270,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	271,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	272,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	273,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	274,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	275,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	276,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	277,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	278,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	279,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	280,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	281,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	282,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	283,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	284,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	285,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	286,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	287,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	288,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	289,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	290,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	291,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	292,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	293,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	294,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	295,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	296,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	297,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	298,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	299,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	300,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	301,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	302,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	303,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	304,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	305,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	306,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	307,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	308,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	309,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	310,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	311,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	312,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	313,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	314,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	315,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	316,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	317,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	318,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	319,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	320,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	321,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	322,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	323,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	324,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	325,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	326,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	327,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	328,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	329,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	330,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	331,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	332,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	333,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	334,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	335,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	336,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	337,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	338,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	339,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	340,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	341,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	342,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	343,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	344,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	345,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	346,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	347,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	348,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	349,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	350,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	351,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	352,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	353,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	354,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	355,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	356,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	357,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	358,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	359,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	360,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	361,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	362,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	363,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	364,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	365,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	366,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	367,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	368,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	369,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	370,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	371,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	372,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	373,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	374,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	375,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	376,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	377,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	378,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	379,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	380,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	381,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	382,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	383,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	384,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	385,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	386,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	387,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	388,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	389,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	390,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	391,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	392,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	393,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	394,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	395,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	396,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	397,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	398,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	399,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	400,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	401,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	402,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	403,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	404,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	405,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	406,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	407,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	408,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	409,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	410,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	411,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	412,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	413,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	414,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	415,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	416,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	417,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	418,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	419,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	420,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	421,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	422,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	423,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	424,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	425,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	426,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	427,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	428,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	429,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	430,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	431,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	432,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	433,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	434,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	435,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	436,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	437,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	438,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	439,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	440,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	441,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	442,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	443,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	444,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	445,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	446,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	447,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	448,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	449,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	450,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	451,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	452,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	453,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	454,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	455,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	456,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	457,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	458,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	459,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	460,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	461,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	462,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	463,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	464,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	465,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	466,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	467,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	468,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	469,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	470,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	471,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	472,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	473,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	474,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	475,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	476,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	477,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	478,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	479,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	480,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	481,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	482,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	483,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	484,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	485,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	486,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	487,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	488,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	489,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	490,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	491,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	492,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	493,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	494,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	495,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	496,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	497,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	498,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	499,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	500,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	501,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	502,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	503,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	504,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	505,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	506,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	507,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	508,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	509,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	510,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	511,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	512,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	513,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	514,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	515,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	516,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	517,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	518,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	519,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	520,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	521,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	522,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	523,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	524,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	525,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	526,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	527,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	528,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	529,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	530,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	531,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	532,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	533,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	534,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	535,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	536,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	537,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	538,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	539,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	540,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	541,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	542,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	543,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	544,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	545,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	546,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	547,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	548,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	549,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	550,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	551,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	552,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	553,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	554,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	555,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	556,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	557,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	558,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	559,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	560,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	561,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	562,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	563,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	564,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	565,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	566,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	567,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	568,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	569,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	570,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	571,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	572,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	573,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	574,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	575,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	576,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	577,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	578,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	579,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	580,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	581,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	582,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	583,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	584,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	585,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	586,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	587,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	588,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	589,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	590,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	591,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	592,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	593,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	594,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	595,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	596,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	597,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	598,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	599,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	600,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	601,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	602,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	603,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	604,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	605,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	606,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	607,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	608,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	609,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	610,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	611,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	612,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	613,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	614,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	615,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	616,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	617,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	618,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	619,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	620,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	621,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	622,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	623,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	624,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	625,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	626,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	627,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	628,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	629,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	630,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	631,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	632,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	633,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	634,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	635,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	636,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	637,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	638,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	639,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	640,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	641,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	642,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	643,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	644,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	645,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	646,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	647,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	648,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	649,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	650,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	651,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	652,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	653,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	654,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	655,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	656,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	657,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	658,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	659,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	660,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	661,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	662,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	663,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	664,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	665,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	666,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	667,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	668,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	669,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	670,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	671,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	672,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	673,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	674,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	675,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	676,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	677,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	678,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	679,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	680,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	681,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	682,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	683,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	684,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	685,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	686,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	687,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	688,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	689,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	690,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	691,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	692,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	693,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	694,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	695,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	696,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	697,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	698,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	699,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	700,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	701,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	702,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	703,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	704,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	705,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	706,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	707,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	708,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	709,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	710,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	711,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	712,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	713,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	714,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	715,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	716,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	717,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	718,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	719,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	720,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	721,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	722,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	723,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	724,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	725,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	726,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	727,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	728,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	729,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	730,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	731,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	732,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	733,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	734,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	735,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	736,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	737,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	738,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	739,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	740,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	741,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	742,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	743,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	744,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	745,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	746,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	747,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	748,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	749,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	750,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	751,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	752,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	753,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	754,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	755,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	756,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	757,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	758,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	759,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	760,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	761,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	762,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	763,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	764,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	765,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	766,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	767,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	768,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	769,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	770,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	771,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	772,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	773,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	774,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	775,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	776,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	777,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	778,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	779,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	780,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	781,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	782,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	783,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	784,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	785,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	786,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	787,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	788,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	789,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	790,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	791,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	792,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	793,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	794,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	795,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	796,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	797,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	798,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	799,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	800,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	801,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	802,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	803,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	804,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	805,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	806,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	807,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	808,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	809,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	810,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	811,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	812,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	813,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	814,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	815,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	816,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	817,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	818,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	819,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	820,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	821,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	822,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	823,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	824,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	825,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	826,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	827,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	828,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	829,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	830,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	831,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	832,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	833,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	834,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	835,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	836,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	837,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	838,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	839,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	840,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	841,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	842,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	843,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	844,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	845,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	846,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	847,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	848,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	849,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	850,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	851,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	852,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	853,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	854,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	855,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	856,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	857,
									"scores":	[-6.6797939079283122]
								}]
						}]
				}, {
					"line":	687,
					"switches":	[{
							"switch":	16,
							"types":	[[], [], [], [], [482, 483, 484, 485], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [], [], [], [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], [], [], [], [], [], []],
							"begin_line":	688,
							"begin_column":	4,
							"end_line":	688,
							"end_column":	4,
							"patch_codes":	["memset(&(*zvp).is_ref__gc, 0, sizeof (*(&(*zvp).is_ref__gc)))", "memset(&(*zvp).refcount__gc, 0, sizeof (*(&(*zvp).refcount__gc)))", "memset(&(*zvp).type, 0, sizeof (*(&(*zvp).type)))", "memset(&(*zvp).value, 0, sizeof (*(&(*zvp).value)))", "memset(&(*zvp).value.dval, 0, sizeof (*(&(*zvp).value.dval)))", "memset(&(*zvp).value.ht, 0, sizeof (*(&(*zvp).value.ht)))", "memset(&(*zvp).value.lval, 0, sizeof (*(&(*zvp).value.lval)))", "memset(&(*zvp).value.obj, 0, sizeof (*(&(*zvp).value.obj)))", "memset(&(*zvp).value.str, 0, sizeof (*(&(*zvp).value.str)))", "memset(&(*zvp).value.str.len, 0, sizeof (*(&(*zvp).value.str.len)))", "memset(&(*zvp).value.str.val, 0, sizeof (*(&(*zvp).value.str.val)))", "memset(&lconv->currency_symbol, 0, sizeof (*(&lconv->currency_symbol)))", "memset(&lconv->decimal_point, 0, sizeof (*(&lconv->decimal_point)))", "memset(&lconv->frac_digits, 0, sizeof (*(&lconv->frac_digits)))", "memset(&lconv->grouping, 0, sizeof (*(&lconv->grouping)))", "memset(&lconv->int_curr_symbol, 0, sizeof (*(&lconv->int_curr_symbol)))", "memset(&lconv->int_frac_digits, 0, sizeof (*(&lconv->int_frac_digits)))", "memset(&lconv->int_n_cs_precedes, 0, sizeof (*(&lconv->int_n_cs_precedes)))", "memset(&lconv->int_n_sep_by_space, 0, sizeof (*(&lconv->int_n_sep_by_space)))", "memset(&lconv->int_n_sign_posn, 0, sizeof (*(&lconv->int_n_sign_posn)))", "memset(&lconv->int_p_cs_precedes, 0, sizeof (*(&lconv->int_p_cs_precedes)))", "memset(&lconv->int_p_sep_by_space, 0, sizeof (*(&lconv->int_p_sep_by_space)))", "memset(&lconv->int_p_sign_posn, 0, sizeof (*(&lconv->int_p_sign_posn)))", "memset(&lconv->mon_decimal_point, 0, sizeof (*(&lconv->mon_decimal_point)))", "memset(&lconv->mon_grouping, 0, sizeof (*(&lconv->mon_grouping)))", "memset(&lconv->mon_thousands_sep, 0, sizeof (*(&lconv->mon_thousands_sep)))", "memset(&lconv->n_cs_precedes, 0, sizeof (*(&lconv->n_cs_precedes)))", "memset(&lconv->n_sep_by_space, 0, sizeof (*(&lconv->n_sep_by_space)))", "memset(&lconv->n_sign_posn, 0, sizeof (*(&lconv->n_sign_posn)))", "memset(&lconv->negative_sign, 0, sizeof (*(&lconv->negative_sign)))", "memset(&lconv->p_cs_precedes, 0, sizeof (*(&lconv->p_cs_precedes)))", "memset(&lconv->p_sep_by_space, 0, sizeof (*(&lconv->p_sep_by_space)))", "memset(&lconv->p_sign_posn, 0, sizeof (*(&lconv->p_sign_posn)))", "memset(&lconv->positive_sign, 0, sizeof (*(&lconv->positive_sign)))", "memset(&lconv->thousands_sep, 0, sizeof (*(&lconv->thousands_sep)))", "memset(&xbuf->a, 0, sizeof (*(&xbuf->a)))", "memset(&xbuf->c, 0, sizeof (*(&xbuf->c)))", "memset(&xbuf->len, 0, sizeof (*(&xbuf->len)))", "memset((*zvp).value.ht, 0, sizeof (*((*zvp).value.ht)))", "memset((*zvp).value.str.val, 0, sizeof (*((*zvp).value.str.val)))", "memset(lconv->currency_symbol, 0, sizeof (*(lconv->currency_symbol)))", "memset(lconv->decimal_point, 0, sizeof (*(lconv->decimal_point)))", "memset(lconv->grouping, 0, sizeof (*(lconv->grouping)))", "memset(lconv->int_curr_symbol, 0, sizeof (*(lconv->int_curr_symbol)))", "memset(lconv->mon_decimal_point, 0, sizeof (*(lconv->mon_decimal_point)))", "memset(lconv->mon_grouping, 0, sizeof (*(lconv->mon_grouping)))", "memset(lconv->mon_thousands_sep, 0, sizeof (*(lconv->mon_thousands_sep)))", "memset(lconv->negative_sign, 0, sizeof (*(lconv->negative_sign)))", "memset(lconv->positive_sign, 0, sizeof (*(lconv->positive_sign)))", "memset(lconv->thousands_sep, 0, sizeof (*(lconv->thousands_sep)))", "memset(xbuf->c, 0, sizeof (*(xbuf->c)))", "(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L688\", 23, &(s_len), sizeof (s_len), &(s), sizeof (s), &(pad_char), sizeof (pad_char), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(xbuf), sizeof (xbuf), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L688\", 23, &(s_len), sizeof (s_len), &(s), sizeof (s), &(pad_char), sizeof (pad_char), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(xbuf), sizeof (xbuf), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L688\", 23, &(s_len), sizeof (s_len), &(s), sizeof (s), &(pad_char), sizeof (pad_char), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(xbuf), sizeof (xbuf), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L688\", 23, &(s_len), sizeof (s_len), &(s), sizeof (s), &(pad_char), sizeof (pad_char), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(xbuf), sizeof (xbuf), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	2,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	3,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	4,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	5,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	6,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	7,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	8,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	9,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	10,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	11,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	12,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	13,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	14,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	15,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	16,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	17,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	18,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	19,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	20,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	21,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	22,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	23,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	24,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	25,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	26,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	27,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	28,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	29,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	30,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	31,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	32,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	33,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	34,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	35,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	36,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	37,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	38,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	39,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	40,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	41,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	42,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	43,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	44,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	45,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	46,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	47,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	48,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	49,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	50,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	51,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	52,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	53,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	54,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	55,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	56,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	57,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	58,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	59,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	60,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	61,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	62,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	63,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	64,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	65,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	66,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	67,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	68,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	69,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	70,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	71,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	72,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	73,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	74,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	75,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	76,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	77,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	78,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	79,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	80,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	81,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	82,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	83,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	84,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	85,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	86,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	87,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	88,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	89,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	90,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	91,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	92,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	93,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	94,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	95,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	96,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	97,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	98,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	99,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	100,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	101,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	102,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	103,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	104,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	105,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	106,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	107,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	108,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	109,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	110,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	111,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	112,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	113,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	114,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	115,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	116,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	117,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	118,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	119,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	120,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	121,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	122,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	123,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	124,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	125,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	126,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	127,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	128,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	129,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	130,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	131,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	132,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	133,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	134,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	135,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	136,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	137,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	138,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	139,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	140,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	141,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	142,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	143,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	144,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	145,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	146,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	147,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	148,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	149,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	150,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	151,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	152,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	153,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	154,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	155,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	156,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	157,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	158,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	159,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	160,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	161,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	162,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	163,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	164,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	165,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	166,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	167,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	168,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	169,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	170,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	171,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	172,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	173,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	174,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	175,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	176,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	177,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	178,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	179,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	180,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	181,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	182,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	183,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	184,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	185,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	186,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	187,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	188,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	189,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	190,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	191,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	192,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	193,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	194,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	195,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	196,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	197,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	198,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	199,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	200,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	201,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	202,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	203,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	204,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	205,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	206,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	207,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	208,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	209,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	210,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	211,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	212,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	213,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	214,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	215,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	216,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	217,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	218,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	219,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	220,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	221,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	222,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	223,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	224,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	225,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	226,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	227,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	228,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	229,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	230,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	231,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	232,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	233,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	234,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	235,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	236,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	237,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	238,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	239,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	240,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	241,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	242,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	243,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	244,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	245,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	246,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	247,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	248,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	249,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	250,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	251,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	252,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	253,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	254,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	255,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	256,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	257,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	258,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	259,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	260,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	261,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	262,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	263,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	264,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	265,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	266,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	267,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	268,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	269,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	270,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	271,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	272,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	273,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	274,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	275,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	276,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	277,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	278,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	279,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	280,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	281,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	282,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	283,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	284,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	285,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	286,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	287,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	288,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	289,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	290,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	291,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	292,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	293,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	294,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	295,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	296,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	297,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	298,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	299,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	300,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	301,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	302,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	303,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	304,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	305,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	306,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	307,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	308,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	309,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	310,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	311,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	312,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	313,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	314,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	315,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	316,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	317,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	318,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	319,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	320,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	321,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	322,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	323,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	324,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	325,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	326,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	327,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	328,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	329,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	330,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	331,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	332,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	333,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	334,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	335,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	336,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	337,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	338,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	339,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	340,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	341,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	342,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	343,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	344,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	345,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	346,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	347,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	348,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	349,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	350,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	351,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	352,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	353,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	354,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	355,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	356,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	357,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	358,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	359,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	360,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	361,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	362,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	363,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	364,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	365,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	366,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	367,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	368,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	369,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	370,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	371,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	372,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	373,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	374,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	375,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	376,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	377,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	378,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	379,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	380,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	381,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	382,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	383,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	384,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	385,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	386,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	387,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	388,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	389,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	390,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	391,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	392,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	393,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	394,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	395,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	396,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	397,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	398,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	399,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	400,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	401,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	402,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	403,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	404,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	405,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	406,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	407,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	408,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	409,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	410,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	411,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	412,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	413,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	414,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	415,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	416,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	417,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	418,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	419,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	420,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	421,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	422,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	423,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	424,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	425,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	426,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	427,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	428,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	429,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	430,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	431,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	432,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	433,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	434,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	435,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	436,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	437,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	438,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	439,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	440,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	441,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	442,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	443,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	444,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	445,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	446,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	447,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	448,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	449,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	450,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	451,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	452,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	453,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	454,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	455,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	456,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	457,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	458,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	459,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	460,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	461,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	462,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	463,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	464,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	465,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	466,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	467,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	468,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	469,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	470,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	471,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	472,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	473,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	474,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	475,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	476,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	477,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	478,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	479,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	480,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	481,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	482,
									"scores":	[-8.0199505136107927, -7.1906923336107926, -8.75323621661079, -8.8536987304107928, -8.99552381361079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -9.06777401041079, -8.78463469661079, -9.0326242136107933, -8.78463469661079, -9.03067361041079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -9.03067361041079]
								}, {
									"case":	483,
									"scores":	[-8.01895051361079, -7.1896923336107923, -8.75223621661079, -8.85269873041079, -8.99452381361079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -9.0667740104107928, -8.78363469661079, -9.03162421361079, -8.78363469661079, -9.0296736104107929, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -9.0296736104107929]
								}, {
									"case":	484,
									"scores":	[-8.01895051361079, -7.1896923336107923, -8.75223621661079, -8.85269873041079, -8.99452381361079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -9.0667740104107928, -8.78363469661079, -9.03162421361079, -8.78363469661079, -9.0296736104107929, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -8.78363469661079, -9.0296736104107929]
								}, {
									"case":	485,
									"scores":	[-8.0199505136107927, -7.1906923336107926, -8.75323621661079, -8.8536987304107928, -8.99552381361079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -9.06777401041079, -8.78463469661079, -9.0326242136107933, -8.78463469661079, -9.03067361041079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -8.78463469661079, -9.03067361041079]
								}]
						}, {
							"switch":	17,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	688,
							"begin_column":	6,
							"end_line":	688,
							"end_column":	14,
							"patch_codes":	["if (!__is_neg(\"\", \"L688\", 23, &(s_len), sizeof (s_len), &(s), sizeof (s), &(pad_char), sizeof (pad_char), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(xbuf), sizeof (xbuf), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    s_len = 1;\n", "{\n}\n", "s_len = (-128)", "s_len = (0 * adjust)", "s_len = (0 * adjust_precision)", "s_len = (0 * adjust_width)", "s_len = (0 * alternate_form)", "s_len = (0 * free_zcopy)", "s_len = (0 * i_num)", "s_len = (0 * is_negative)", "s_len = (0 * min_width)", "s_len = (0 * modifier)", "s_len = (0 * pad_char)", "s_len = (0 * precision)", "s_len = (0 * prefix_char)", "s_len = (0 * print_blank)", "s_len = (0 * print_sign)", "s_len = (0 * s_len)", "s_len = (0 * ui_num)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (adjust != 0)", "s_len = (adjust != adjust_precision)", "s_len = (adjust != adjust_width)", "s_len = (adjust != alternate_form)", "s_len = (adjust != i_num)", "s_len = (adjust != is_negative)", "s_len = (adjust != modifier)", "s_len = (adjust != pad_char)", "s_len = (adjust != prefix_char)", "s_len = (adjust != print_blank)", "s_len = (adjust != print_sign)", "s_len = (adjust != ui_num)", "s_len = (adjust * adjust_precision)", "s_len = (adjust * adjust_width)", "s_len = (adjust * alternate_form)", "s_len = (adjust * free_zcopy)", "s_len = (adjust * i_num)", "s_len = (adjust * is_negative)", "s_len = (adjust * min_width)", "s_len = (adjust * modifier)", "s_len = (adjust * pad_char)", "s_len = (adjust * precision)", "s_len = (adjust * prefix_char)", "s_len = (adjust * print_blank)", "s_len = (adjust * print_sign)", "s_len = (adjust * s_len)", "s_len = (adjust * ui_num)", "s_len = (adjust + 0)", "s_len = (adjust + adjust_precision)", "s_len = (adjust + adjust_width)", "s_len = (adjust + alternate_form)", "s_len = (adjust + i_num)", "s_len = (adjust + is_negative)", "s_len = (adjust + modifier)", "s_len = (adjust + pad_char)", "s_len = (adjust + prefix_char)", "s_len = (adjust + print_blank)", "s_len = (adjust + print_sign)", "s_len = (adjust + ui_num)", "s_len = (adjust - 0)", "s_len = (adjust - adjust_precision)", "s_len = (adjust - adjust_width)", "s_len = (adjust - alternate_form)", "s_len = (adjust - i_num)", "s_len = (adjust - is_negative)", "s_len = (adjust - modifier)", "s_len = (adjust - pad_char)", "s_len = (adjust - prefix_char)", "s_len = (adjust - print_blank)", "s_len = (adjust - print_sign)", "s_len = (adjust - ui_num)", "s_len = (adjust == 0)", "s_len = (adjust == adjust_precision)", "s_len = (adjust == adjust_width)", "s_len = (adjust == alternate_form)", "s_len = (adjust == i_num)", "s_len = (adjust == is_negative)", "s_len = (adjust == modifier)", "s_len = (adjust == pad_char)", "s_len = (adjust == prefix_char)", "s_len = (adjust == print_blank)", "s_len = (adjust == print_sign)", "s_len = (adjust == ui_num)", "s_len = (adjust_precision != 0)", "s_len = (adjust_precision != adjust_width)", "s_len = (adjust_precision != is_negative)", "s_len = (adjust_precision * adjust)", "s_len = (adjust_precision * adjust_width)", "s_len = (adjust_precision * alternate_form)", "s_len = (adjust_precision * free_zcopy)", "s_len = (adjust_precision * i_num)", "s_len = (adjust_precision * is_negative)", "s_len = (adjust_precision * min_width)", "s_len = (adjust_precision * modifier)", "s_len = (adjust_precision * pad_char)", "s_len = (adjust_precision * precision)", "s_len = (adjust_precision * prefix_char)", "s_len = (adjust_precision * print_blank)", "s_len = (adjust_precision * print_sign)", "s_len = (adjust_precision * s_len)", "s_len = (adjust_precision * ui_num)", "s_len = (adjust_precision + 0)", "s_len = (adjust_precision + adjust_width)", "s_len = (adjust_precision + is_negative)", "s_len = (adjust_precision - 0)", "s_len = (adjust_precision - adjust_width)", "s_len = (adjust_precision - is_negative)", "s_len = (adjust_precision == 0)", "s_len = (adjust_precision == adjust_width)", "s_len = (adjust_precision == is_negative)", "s_len = (adjust_width != 0)", "s_len = (adjust_width != is_negative)", "s_len = (adjust_width * adjust)", "s_len = (adjust_width * adjust_precision)", "s_len = (adjust_width * alternate_form)", "s_len = (adjust_width * free_zcopy)", "s_len = (adjust_width * i_num)", "s_len = (adjust_width * is_negative)", "s_len = (adjust_width * min_width)", "s_len = (adjust_width * modifier)", "s_len = (adjust_width * pad_char)", "s_len = (adjust_width * precision)", "s_len = (adjust_width * prefix_char)", "s_len = (adjust_width * print_blank)", "s_len = (adjust_width * print_sign)", "s_len = (adjust_width * s_len)", "s_len = (adjust_width * ui_num)", "s_len = (adjust_width + 0)", "s_len = (adjust_width + is_negative)", "s_len = (adjust_width - 0)", "s_len = (adjust_width - is_negative)", "s_len = (adjust_width == 0)", "s_len = (adjust_width == is_negative)", "s_len = (alternate_form != 0)", "s_len = (alternate_form != adjust_precision)", "s_len = (alternate_form != adjust_width)", "s_len = (alternate_form != is_negative)", "s_len = (alternate_form != print_blank)", "s_len = (alternate_form != print_sign)", "s_len = (alternate_form * adjust)", "s_len = (alternate_form * adjust_precision)", "s_len = (alternate_form * adjust_width)", "s_len = (alternate_form * free_zcopy)", "s_len = (alternate_form * i_num)", "s_len = (alternate_form * is_negative)", "s_len = (alternate_form * min_width)", "s_len = (alternate_form * modifier)", "s_len = (alternate_form * pad_char)", "s_len = (alternate_form * precision)", "s_len = (alternate_form * prefix_char)", "s_len = (alternate_form * print_blank)", "s_len = (alternate_form * print_sign)", "s_len = (alternate_form * s_len)", "s_len = (alternate_form * ui_num)", "s_len = (alternate_form + 0)", "s_len = (alternate_form + adjust_precision)", "s_len = (alternate_form + adjust_width)", "s_len = (alternate_form + is_negative)", "s_len = (alternate_form + print_blank)", "s_len = (alternate_form + print_sign)", "s_len = (alternate_form - 0)", "s_len = (alternate_form - adjust_precision)", "s_len = (alternate_form - adjust_width)", "s_len = (alternate_form - is_negative)", "s_len = (alternate_form - print_blank)", "s_len = (alternate_form - print_sign)", "s_len = (alternate_form == 0)", "s_len = (alternate_form == adjust_precision)", "s_len = (alternate_form == adjust_width)", "s_len = (alternate_form == is_negative)", "s_len = (alternate_form == print_blank)", "s_len = (alternate_form == print_sign)", "s_len = (ap != 0)", "s_len = (ap == 0)", "s_len = (char_buf != 0)", "s_len = (char_buf == 0)", "s_len = (fmt != 0)", "s_len = (fmt == 0)", "s_len = (fp_num != 0)", "s_len = (fp_num == 0)", "s_len = (free_zcopy != 0)", "s_len = (free_zcopy != adjust)", "s_len = (free_zcopy != adjust_precision)", "s_len = (free_zcopy != adjust_width)", "s_len = (free_zcopy != alternate_form)", "s_len = (free_zcopy != i_num)", "s_len = (free_zcopy != is_negative)", "s_len = (free_zcopy != min_width)", "s_len = (free_zcopy != modifier)", "s_len = (free_zcopy != pad_char)", "s_len = (free_zcopy != precision)", "s_len = (free_zcopy != prefix_char)", "s_len = (free_zcopy != print_blank)", "s_len = (free_zcopy != print_sign)", "s_len = (free_zcopy != ui_num)", "s_len = (free_zcopy * adjust)", "s_len = (free_zcopy * adjust_precision)", "s_len = (free_zcopy * adjust_width)", "s_len = (free_zcopy * alternate_form)", "s_len = (free_zcopy * i_num)", "s_len = (free_zcopy * is_negative)", "s_len = (free_zcopy * min_width)", "s_len = (free_zcopy * modifier)", "s_len = (free_zcopy * pad_char)", "s_len = (free_zcopy * precision)", "s_len = (free_zcopy * prefix_char)", "s_len = (free_zcopy * print_blank)", "s_len = (free_zcopy * print_sign)", "s_len = (free_zcopy * s_len)", "s_len = (free_zcopy * ui_num)", "s_len = (free_zcopy + 0)", "s_len = (free_zcopy + adjust)", "s_len = (free_zcopy + adjust_precision)", "s_len = (free_zcopy + adjust_width)", "s_len = (free_zcopy + alternate_form)", "s_len = (free_zcopy + i_num)", "s_len = (free_zcopy + is_negative)", "s_len = (free_zcopy + min_width)", "s_len = (free_zcopy + modifier)", "s_len = (free_zcopy + pad_char)", "s_len = (free_zcopy + precision)", "s_len = (free_zcopy + prefix_char)", "s_len = (free_zcopy + print_blank)", "s_len = (free_zcopy + print_sign)", "s_len = (free_zcopy + ui_num)", "s_len = (free_zcopy - 0)", "s_len = (free_zcopy - adjust)", "s_len = (free_zcopy - adjust_precision)", "s_len = (free_zcopy - adjust_width)", "s_len = (free_zcopy - alternate_form)", "s_len = (free_zcopy - i_num)", "s_len = (free_zcopy - is_negative)", "s_len = (free_zcopy - min_width)", "s_len = (free_zcopy - modifier)", "s_len = (free_zcopy - pad_char)", "s_len = (free_zcopy - precision)", "s_len = (free_zcopy - prefix_char)", "s_len = (free_zcopy - print_blank)", "s_len = (free_zcopy - print_sign)", "s_len = (free_zcopy - ui_num)", "s_len = (free_zcopy == 0)", "s_len = (free_zcopy == adjust)", "s_len = (free_zcopy == adjust_precision)", "s_len = (free_zcopy == adjust_width)", "s_len = (free_zcopy == alternate_form)", "s_len = (free_zcopy == i_num)", "s_len = (free_zcopy == is_negative)", "s_len = (free_zcopy == min_width)", "s_len = (free_zcopy == modifier)", "s_len = (free_zcopy == pad_char)", "s_len = (free_zcopy == precision)", "s_len = (free_zcopy == prefix_char)", "s_len = (free_zcopy == print_blank)", "s_len = (free_zcopy == print_sign)", "s_len = (free_zcopy == ui_num)", "s_len = (free_zcopy)", "s_len = (i_num != 0)", "s_len = (i_num != adjust_precision)", "s_len = (i_num != adjust_width)", "s_len = (i_num != alternate_form)", "s_len = (i_num != is_negative)", "s_len = (i_num != modifier)", "s_len = (i_num != print_blank)", "s_len = (i_num != print_sign)", "s_len = (i_num != ui_num)", "s_len = (i_num * adjust)", "s_len = (i_num * adjust_precision)", "s_len = (i_num * adjust_width)", "s_len = (i_num * alternate_form)", "s_len = (i_num * free_zcopy)", "s_len = (i_num * is_negative)", "s_len = (i_num * min_width)", "s_len = (i_num * modifier)", "s_len = (i_num * pad_char)", "s_len = (i_num * precision)", "s_len = (i_num * prefix_char)", "s_len = (i_num * print_blank)", "s_len = (i_num * print_sign)", "s_len = (i_num * s_len)", "s_len = (i_num * ui_num)", "s_len = (i_num + 0)", "s_len = (i_num + adjust_precision)", "s_len = (i_num + adjust_width)", "s_len = (i_num + alternate_form)", "s_len = (i_num + is_negative)", "s_len = (i_num + modifier)", "s_len = (i_num + print_blank)", "s_len = (i_num + print_sign)", "s_len = (i_num + ui_num)", "s_len = (i_num - 0)", "s_len = (i_num - adjust_precision)", "s_len = (i_num - adjust_width)", "s_len = (i_num - alternate_form)", "s_len = (i_num - is_negative)", "s_len = (i_num - modifier)", "s_len = (i_num - print_blank)", "s_len = (i_num - print_sign)", "s_len = (i_num - ui_num)", "s_len = (i_num == 0)", "s_len = (i_num == adjust_precision)", "s_len = (i_num == adjust_width)", "s_len = (i_num == alternate_form)", "s_len = (i_num == is_negative)", "s_len = (i_num == modifier)", "s_len = (i_num == print_blank)", "s_len = (i_num == print_sign)", "s_len = (i_num == ui_num)", "s_len = (is_negative != 0)", "s_len = (is_negative * adjust)", "s_len = (is_negative * adjust_precision)", "s_len = (is_negative * adjust_width)", "s_len = (is_negative * alternate_form)", "s_len = (is_negative * free_zcopy)", "s_len = (is_negative * i_num)", "s_len = (is_negative * min_width)", "s_len = (is_negative * modifier)", "s_len = (is_negative * pad_char)", "s_len = (is_negative * precision)", "s_len = (is_negative * prefix_char)", "s_len = (is_negative * print_blank)", "s_len = (is_negative * print_sign)", "s_len = (is_negative * s_len)", "s_len = (is_negative * ui_num)", "s_len = (is_negative + 0)", "s_len = (is_negative - 0)", "s_len = (is_negative == 0)", "s_len = (is_negative)", "s_len = (lconv != 0)", "s_len = (lconv == 0)", "s_len = (min_width != 0)", "s_len = (min_width != adjust)", "s_len = (min_width != adjust_precision)", "s_len = (min_width != adjust_width)", "s_len = (min_width != alternate_form)", "s_len = (min_width != i_num)", "s_len = (min_width != is_negative)", "s_len = (min_width != modifier)", "s_len = (min_width != pad_char)", "s_len = (min_width != precision)", "s_len = (min_width != prefix_char)", "s_len = (min_width != print_blank)", "s_len = (min_width != print_sign)", "s_len = (min_width != ui_num)", "s_len = (min_width * adjust)", "s_len = (min_width * adjust_precision)", "s_len = (min_width * adjust_width)", "s_len = (min_width * alternate_form)", "s_len = (min_width * free_zcopy)", "s_len = (min_width * i_num)", "s_len = (min_width * is_negative)", "s_len = (min_width * modifier)", "s_len = (min_width * pad_char)", "s_len = (min_width * precision)", "s_len = (min_width * prefix_char)", "s_len = (min_width * print_blank)", "s_len = (min_width * print_sign)", "s_len = (min_width * s_len)", "s_len = (min_width * ui_num)", "s_len = (min_width + 0)", "s_len = (min_width + adjust)", "s_len = (min_width + adjust_precision)", "s_len = (min_width + adjust_width)", "s_len = (min_width + alternate_form)", "s_len = (min_width + i_num)", "s_len = (min_width + is_negative)", "s_len = (min_width + modifier)", "s_len = (min_width + pad_char)", "s_len = (min_width + precision)", "s_len = (min_width + prefix_char)", "s_len = (min_width + print_blank)", "s_len = (min_width + print_sign)", "s_len = (min_width + ui_num)", "s_len = (min_width - 0)", "s_len = (min_width - adjust)", "s_len = (min_width - adjust_precision)", "s_len = (min_width - adjust_width)", "s_len = (min_width - alternate_form)", "s_len = (min_width - i_num)", "s_len = (min_width - is_negative)", "s_len = (min_width - modifier)", "s_len = (min_width - pad_char)", "s_len = (min_width - precision)", "s_len = (min_width - prefix_char)", "s_len = (min_width - print_blank)", "s_len = (min_width - print_sign)", "s_len = (min_width - ui_num)", "s_len = (min_width == 0)", "s_len = (min_width == adjust)", "s_len = (min_width == adjust_precision)", "s_len = (min_width == adjust_width)", "s_len = (min_width == alternate_form)", "s_len = (min_width == i_num)", "s_len = (min_width == is_negative)", "s_len = (min_width == modifier)", "s_len = (min_width == pad_char)", "s_len = (min_width == precision)", "s_len = (min_width == prefix_char)", "s_len = (min_width == print_blank)", "s_len = (min_width == print_sign)", "s_len = (min_width == ui_num)", "s_len = (min_width)", "s_len = (modifier != 0)", "s_len = (modifier != adjust_precision)", "s_len = (modifier != adjust_width)", "s_len = (modifier != alternate_form)", "s_len = (modifier != is_negative)", "s_len = (modifier != print_blank)", "s_len = (modifier != print_sign)", "s_len = (modifier * adjust)", "s_len = (modifier * adjust_precision)", "s_len = (modifier * adjust_width)", "s_len = (modifier * alternate_form)", "s_len = (modifier * free_zcopy)", "s_len = (modifier * i_num)", "s_len = (modifier * is_negative)", "s_len = (modifier * min_width)", "s_len = (modifier * pad_char)", "s_len = (modifier * precision)", "s_len = (modifier * prefix_char)", "s_len = (modifier * print_blank)", "s_len = (modifier * print_sign)", "s_len = (modifier * s_len)", "s_len = (modifier * ui_num)", "s_len = (modifier + 0)", "s_len = (modifier + adjust_precision)", "s_len = (modifier + adjust_width)", "s_len = (modifier + alternate_form)", "s_len = (modifier + is_negative)", "s_len = (modifier + print_blank)", "s_len = (modifier + print_sign)", "s_len = (modifier - 0)", "s_len = (modifier - adjust_precision)", "s_len = (modifier - adjust_width)", "s_len = (modifier - alternate_form)", "s_len = (modifier - is_negative)", "s_len = (modifier - print_blank)", "s_len = (modifier - print_sign)", "s_len = (modifier == 0)", "s_len = (modifier == adjust_precision)", "s_len = (modifier == adjust_width)", "s_len = (modifier == alternate_form)", "s_len = (modifier == is_negative)", "s_len = (modifier == print_blank)", "s_len = (modifier == print_sign)", "s_len = (num_buf != 0)", "s_len = (num_buf == 0)", "s_len = (pad_char != 0)", "s_len = (pad_char != adjust_precision)", "s_len = (pad_char != adjust_width)", "s_len = (pad_char != alternate_form)", "s_len = (pad_char != i_num)", "s_len = (pad_char != is_negative)", "s_len = (pad_char != modifier)", "s_len = (pad_char != prefix_char)", "s_len = (pad_char != print_blank)", "s_len = (pad_char != print_sign)", "s_len = (pad_char != ui_num)", "s_len = (pad_char * adjust)", "s_len = (pad_char * adjust_precision)", "s_len = (pad_char * adjust_width)", "s_len = (pad_char * alternate_form)", "s_len = (pad_char * free_zcopy)", "s_len = (pad_char * i_num)", "s_len = (pad_char * is_negative)", "s_len = (pad_char * min_width)", "s_len = (pad_char * modifier)", "s_len = (pad_char * precision)", "s_len = (pad_char * prefix_char)", "s_len = (pad_char * print_blank)", "s_len = (pad_char * print_sign)", "s_len = (pad_char * s_len)", "s_len = (pad_char * ui_num)", "s_len = (pad_char + 0)", "s_len = (pad_char + adjust_precision)", "s_len = (pad_char + adjust_width)", "s_len = (pad_char + alternate_form)", "s_len = (pad_char + i_num)", "s_len = (pad_char + is_negative)", "s_len = (pad_char + modifier)", "s_len = (pad_char + prefix_char)", "s_len = (pad_char + print_blank)", "s_len = (pad_char + print_sign)", "s_len = (pad_char + ui_num)", "s_len = (pad_char - 0)", "s_len = (pad_char - adjust_precision)", "s_len = (pad_char - adjust_width)", "s_len = (pad_char - alternate_form)", "s_len = (pad_char - i_num)", "s_len = (pad_char - is_negative)", "s_len = (pad_char - modifier)", "s_len = (pad_char - prefix_char)", "s_len = (pad_char - print_blank)", "s_len = (pad_char - print_sign)", "s_len = (pad_char - ui_num)", "s_len = (pad_char == 0)", "s_len = (pad_char == adjust_precision)", "s_len = (pad_char == adjust_width)", "s_len = (pad_char == alternate_form)", "s_len = (pad_char == i_num)", "s_len = (pad_char == is_negative)", "s_len = (pad_char == modifier)", "s_len = (pad_char == prefix_char)", "s_len = (pad_char == print_blank)", "s_len = (pad_char == print_sign)", "s_len = (pad_char == ui_num)", "s_len = (precision != 0)", "s_len = (precision != adjust)", "s_len = (precision != adjust_precision)", "s_len = (precision != adjust_width)", "s_len = (precision != alternate_form)", "s_len = (precision != i_num)", "s_len = (precision != is_negative)", "s_len = (precision != modifier)", "s_len = (precision != pad_char)", "s_len = (precision != prefix_char)", "s_len = (precision != print_blank)", "s_len = (precision != print_sign)", "s_len = (precision != ui_num)", "s_len = (precision * adjust)", "s_len = (precision * adjust_precision)", "s_len = (precision * adjust_width)", "s_len = (precision * alternate_form)", "s_len = (precision * free_zcopy)", "s_len = (precision * i_num)", "s_len = (precision * is_negative)", "s_len = (precision * min_width)", "s_len = (precision * modifier)", "s_len = (precision * pad_char)", "s_len = (precision * prefix_char)", "s_len = (precision * print_blank)", "s_len = (precision * print_sign)", "s_len = (precision * s_len)", "s_len = (precision * ui_num)", "s_len = (precision + 0)", "s_len = (precision + adjust)", "s_len = (precision + adjust_precision)", "s_len = (precision + adjust_width)", "s_len = (precision + alternate_form)", "s_len = (precision + i_num)", "s_len = (precision + is_negative)", "s_len = (precision + modifier)", "s_len = (precision + pad_char)", "s_len = (precision + prefix_char)", "s_len = (precision + print_blank)", "s_len = (precision + print_sign)", "s_len = (precision + ui_num)", "s_len = (precision - 0)", "s_len = (precision - adjust)", "s_len = (precision - adjust_precision)", "s_len = (precision - adjust_width)", "s_len = (precision - alternate_form)", "s_len = (precision - i_num)", "s_len = (precision - is_negative)", "s_len = (precision - modifier)", "s_len = (precision - pad_char)", "s_len = (precision - prefix_char)", "s_len = (precision - print_blank)", "s_len = (precision - print_sign)", "s_len = (precision - ui_num)", "s_len = (precision == 0)", "s_len = (precision == adjust)", "s_len = (precision == adjust_precision)", "s_len = (precision == adjust_width)", "s_len = (precision == alternate_form)", "s_len = (precision == i_num)", "s_len = (precision == is_negative)", "s_len = (precision == modifier)", "s_len = (precision == pad_char)", "s_len = (precision == prefix_char)", "s_len = (precision == print_blank)", "s_len = (precision == print_sign)", "s_len = (precision == ui_num)", "s_len = (precision)", "s_len = (prefix_char != 0)", "s_len = (prefix_char != adjust_precision)", "s_len = (prefix_char != adjust_width)", "s_len = (prefix_char != alternate_form)", "s_len = (prefix_char != i_num)", "s_len = (prefix_char != is_negative)", "s_len = (prefix_char != modifier)", "s_len = (prefix_char != print_blank)", "s_len = (prefix_char != print_sign)", "s_len = (prefix_char != ui_num)", "s_len = (prefix_char * adjust)", "s_len = (prefix_char * adjust_precision)", "s_len = (prefix_char * adjust_width)", "s_len = (prefix_char * alternate_form)", "s_len = (prefix_char * free_zcopy)", "s_len = (prefix_char * i_num)", "s_len = (prefix_char * is_negative)", "s_len = (prefix_char * min_width)", "s_len = (prefix_char * modifier)", "s_len = (prefix_char * pad_char)", "s_len = (prefix_char * precision)", "s_len = (prefix_char * print_blank)", "s_len = (prefix_char * print_sign)", "s_len = (prefix_char * s_len)", "s_len = (prefix_char * ui_num)", "s_len = (prefix_char + 0)", "s_len = (prefix_char + adjust_precision)", "s_len = (prefix_char + adjust_width)", "s_len = (prefix_char + alternate_form)", "s_len = (prefix_char + i_num)", "s_len = (prefix_char + is_negative)", "s_len = (prefix_char + modifier)", "s_len = (prefix_char + print_blank)", "s_len = (prefix_char + print_sign)", "s_len = (prefix_char + ui_num)", "s_len = (prefix_char - 0)", "s_len = (prefix_char - adjust_precision)", "s_len = (prefix_char - adjust_width)", "s_len = (prefix_char - alternate_form)", "s_len = (prefix_char - i_num)", "s_len = (prefix_char - is_negative)", "s_len = (prefix_char - modifier)", "s_len = (prefix_char - print_blank)", "s_len = (prefix_char - print_sign)", "s_len = (prefix_char - ui_num)", "s_len = (prefix_char == 0)", "s_len = (prefix_char == adjust_precision)", "s_len = (prefix_char == adjust_width)", "s_len = (prefix_char == alternate_form)", "s_len = (prefix_char == i_num)", "s_len = (prefix_char == is_negative)", "s_len = (prefix_char == modifier)", "s_len = (prefix_char == print_blank)", "s_len = (prefix_char == print_sign)", "s_len = (prefix_char == ui_num)", "s_len = (print_blank != 0)", "s_len = (print_blank != adjust_precision)", "s_len = (print_blank != adjust_width)", "s_len = (print_blank != is_negative)", "s_len = (print_blank * adjust)", "s_len = (print_blank * adjust_precision)", "s_len = (print_blank * adjust_width)", "s_len = (print_blank * alternate_form)", "s_len = (print_blank * free_zcopy)", "s_len = (print_blank * i_num)", "s_len = (print_blank * is_negative)", "s_len = (print_blank * min_width)", "s_len = (print_blank * modifier)", "s_len = (print_blank * pad_char)", "s_len = (print_blank * precision)", "s_len = (print_blank * prefix_char)", "s_len = (print_blank * print_sign)", "s_len = (print_blank * s_len)", "s_len = (print_blank * ui_num)", "s_len = (print_blank + 0)", "s_len = (print_blank + adjust_precision)", "s_len = (print_blank + adjust_width)", "s_len = (print_blank + is_negative)", "s_len = (print_blank - 0)", "s_len = (print_blank - adjust_precision)", "s_len = (print_blank - adjust_width)", "s_len = (print_blank - is_negative)", "s_len = (print_blank == 0)", "s_len = (print_blank == adjust_precision)", "s_len = (print_blank == adjust_width)", "s_len = (print_blank == is_negative)", "s_len = (print_sign != 0)", "s_len = (print_sign != adjust_precision)", "s_len = (print_sign != adjust_width)", "s_len = (print_sign != is_negative)", "s_len = (print_sign != print_blank)", "s_len = (print_sign * adjust)", "s_len = (print_sign * adjust_precision)", "s_len = (print_sign * adjust_width)", "s_len = (print_sign * alternate_form)", "s_len = (print_sign * free_zcopy)", "s_len = (print_sign * i_num)", "s_len = (print_sign * is_negative)", "s_len = (print_sign * min_width)", "s_len = (print_sign * modifier)", "s_len = (print_sign * pad_char)", "s_len = (print_sign * precision)", "s_len = (print_sign * prefix_char)", "s_len = (print_sign * print_blank)", "s_len = (print_sign * s_len)", "s_len = (print_sign * ui_num)", "s_len = (print_sign + 0)", "s_len = (print_sign + adjust_precision)", "s_len = (print_sign + adjust_width)", "s_len = (print_sign + is_negative)", "s_len = (print_sign + print_blank)", "s_len = (print_sign - 0)", "s_len = (print_sign - adjust_precision)", "s_len = (print_sign - adjust_width)", "s_len = (print_sign - is_negative)", "s_len = (print_sign - print_blank)", "s_len = (print_sign == 0)", "s_len = (print_sign == adjust_precision)", "s_len = (print_sign == adjust_width)", "s_len = (print_sign == is_negative)", "s_len = (print_sign == print_blank)", "s_len = (q != 0)", "s_len = (q == 0)", "s_len = (s != 0)", "s_len = (s != q)", "s_len = (s == 0)", "s_len = (s == q)", "s_len = (s_len != 0)", "s_len = (s_len != adjust)", "s_len = (s_len != adjust_precision)", "s_len = (s_len != adjust_width)", "s_len = (s_len != alternate_form)", "s_len = (s_len != free_zcopy)", "s_len = (s_len != i_num)", "s_len = (s_len != is_negative)", "s_len = (s_len != min_width)", "s_len = (s_len != modifier)", "s_len = (s_len != pad_char)", "s_len = (s_len != precision)", "s_len = (s_len != prefix_char)", "s_len = (s_len != print_blank)", "s_len = (s_len != print_sign)", "s_len = (s_len != ui_num)", "s_len = (s_len * adjust)", "s_len = (s_len * adjust_precision)", "s_len = (s_len * adjust_width)", "s_len = (s_len * alternate_form)", "s_len = (s_len * free_zcopy)", "s_len = (s_len * i_num)", "s_len = (s_len * is_negative)", "s_len = (s_len * min_width)", "s_len = (s_len * modifier)", "s_len = (s_len * pad_char)", "s_len = (s_len * precision)", "s_len = (s_len * prefix_char)", "s_len = (s_len * print_blank)", "s_len = (s_len * print_sign)", "s_len = (s_len * ui_num)", "s_len = (s_len + 0)", "s_len = (s_len + adjust)", "s_len = (s_len + adjust_precision)", "s_len = (s_len + adjust_width)", "s_len = (s_len + alternate_form)", "s_len = (s_len + free_zcopy)", "s_len = (s_len + i_num)", "s_len = (s_len + is_negative)", "s_len = (s_len + min_width)", "s_len = (s_len + modifier)", "s_len = (s_len + pad_char)", "s_len = (s_len + precision)", "s_len = (s_len + prefix_char)", "s_len = (s_len + print_blank)", "s_len = (s_len + print_sign)", "s_len = (s_len + ui_num)", "s_len = (s_len - 0)", "s_len = (s_len - adjust)", "s_len = (s_len - adjust_precision)", "s_len = (s_len - adjust_width)", "s_len = (s_len - alternate_form)", "s_len = (s_len - free_zcopy)", "s_len = (s_len - i_num)", "s_len = (s_len - is_negative)", "s_len = (s_len - min_width)", "s_len = (s_len - modifier)", "s_len = (s_len - pad_char)", "s_len = (s_len - precision)", "s_len = (s_len - prefix_char)", "s_len = (s_len - print_blank)", "s_len = (s_len - print_sign)", "s_len = (s_len - ui_num)", "s_len = (s_len == 0)", "s_len = (s_len == adjust)", "s_len = (s_len == adjust_precision)", "s_len = (s_len == adjust_width)", "s_len = (s_len == alternate_form)", "s_len = (s_len == free_zcopy)", "s_len = (s_len == i_num)", "s_len = (s_len == is_negative)", "s_len = (s_len == min_width)", "s_len = (s_len == modifier)", "s_len = (s_len == pad_char)", "s_len = (s_len == precision)", "s_len = (s_len == prefix_char)", "s_len = (s_len == print_blank)", "s_len = (s_len == print_sign)", "s_len = (s_len == ui_num)", "s_len = (s_len)", "s_len = (ui_num != 0)", "s_len = (ui_num != adjust_precision)", "s_len = (ui_num != adjust_width)", "s_len = (ui_num != alternate_form)", "s_len = (ui_num != is_negative)", "s_len = (ui_num != modifier)", "s_len = (ui_num != print_blank)", "s_len = (ui_num != print_sign)", "s_len = (ui_num * adjust)", "s_len = (ui_num * adjust_precision)", "s_len = (ui_num * adjust_width)", "s_len = (ui_num * alternate_form)", "s_len = (ui_num * free_zcopy)", "s_len = (ui_num * i_num)", "s_len = (ui_num * is_negative)", "s_len = (ui_num * min_width)", "s_len = (ui_num * modifier)", "s_len = (ui_num * pad_char)", "s_len = (ui_num * precision)", "s_len = (ui_num * prefix_char)", "s_len = (ui_num * print_blank)", "s_len = (ui_num * print_sign)", "s_len = (ui_num * s_len)", "s_len = (ui_num + 0)", "s_len = (ui_num + adjust_precision)", "s_len = (ui_num + adjust_width)", "s_len = (ui_num + alternate_form)", "s_len = (ui_num + is_negative)", "s_len = (ui_num + modifier)", "s_len = (ui_num + print_blank)", "s_len = (ui_num + print_sign)", "s_len = (ui_num - 0)", "s_len = (ui_num - adjust_precision)", "s_len = (ui_num - adjust_width)", "s_len = (ui_num - alternate_form)", "s_len = (ui_num - is_negative)", "s_len = (ui_num - modifier)", "s_len = (ui_num - print_blank)", "s_len = (ui_num - print_sign)", "s_len = (ui_num == 0)", "s_len = (ui_num == adjust_precision)", "s_len = (ui_num == adjust_width)", "s_len = (ui_num == alternate_form)", "s_len = (ui_num == is_negative)", "s_len = (ui_num == modifier)", "s_len = (ui_num == print_blank)", "s_len = (ui_num == print_sign)", "s_len = (xbuf != 0)", "s_len = (xbuf == 0)", "s_len = (zcopy != 0)", "s_len = (zcopy == 0)", "s_len = (zvp != 0)", "s_len = (zvp == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4787826616107926, -6.6126483106107923, -6.7579011116107921, -7.7057410706107925, -7.4933251706107926, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -8.07630407061079, -7.0240651706107924, -7.7876759706107928, -7.0240651706107924, -7.781953270610793, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.0240651706107924, -7.781953270610793]
								}, {
									"case":	2,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	3,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	4,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	5,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	6,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	7,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	8,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	9,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	10,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	11,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	12,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	13,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	14,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	15,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	16,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	17,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	18,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	19,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	20,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	21,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	22,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	23,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	24,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	25,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	26,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	27,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	28,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	29,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	30,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	31,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	32,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	33,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	34,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	35,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	36,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	37,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	38,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	39,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	40,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	41,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	42,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	43,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	44,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	45,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	46,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	47,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	48,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	49,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	50,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	51,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	52,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	53,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	54,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	55,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	56,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	57,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	58,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	59,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	60,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	61,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	62,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	63,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	64,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	65,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	66,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	67,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	68,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	69,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	70,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	71,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	72,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	73,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	74,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	75,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	76,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	77,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	78,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	79,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	80,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	81,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	82,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	83,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	84,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	85,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	86,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	87,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	88,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	89,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	90,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	91,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	92,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	93,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	94,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	95,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	96,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	97,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	98,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	99,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	100,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	101,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	102,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	103,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	104,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	105,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	106,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	107,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	108,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	109,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	110,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	111,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	112,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	113,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	114,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	115,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	116,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	117,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	118,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	119,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	120,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	121,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	122,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	123,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	124,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	125,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	126,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	127,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	128,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	129,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	130,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	131,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	132,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	133,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	134,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	135,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	136,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	137,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	138,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	139,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	140,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	141,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	142,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	143,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	144,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	145,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	146,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	147,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	148,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	149,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	150,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	151,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	152,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	153,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	154,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	155,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	156,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	157,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	158,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	159,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	160,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	161,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	162,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	163,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	164,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	165,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	166,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	167,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	168,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	169,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	170,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	171,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	172,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	173,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	174,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	175,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	176,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	177,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	178,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	179,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	180,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	181,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	182,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	183,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	184,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	185,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	186,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	187,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	188,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	189,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	190,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	191,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	192,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	193,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	194,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	195,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	196,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	197,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	198,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	199,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	200,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	201,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	202,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	203,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	204,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	205,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	206,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	207,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	208,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	209,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	210,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	211,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	212,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	213,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	214,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	215,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	216,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	217,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	218,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	219,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	220,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	221,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	222,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	223,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	224,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	225,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	226,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	227,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	228,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	229,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	230,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	231,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	232,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	233,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	234,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	235,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	236,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	237,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	238,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	239,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	240,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	241,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	242,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	243,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	244,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	245,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	246,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	247,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	248,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	249,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	250,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	251,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	252,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	253,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	254,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	255,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	256,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	257,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	258,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	259,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	260,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	261,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	262,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	263,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	264,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	265,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	266,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	267,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	268,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	269,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	270,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	271,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	272,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	273,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	274,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	275,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	276,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	277,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	278,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	279,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	280,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	281,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	282,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	283,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	284,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	285,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	286,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	287,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	288,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	289,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	290,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	291,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	292,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	293,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	294,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	295,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	296,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	297,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	298,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	299,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	300,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	301,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	302,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	303,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	304,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	305,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	306,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	307,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	308,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	309,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	310,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	311,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	312,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	313,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	314,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	315,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	316,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	317,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	318,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	319,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	320,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	321,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	322,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	323,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	324,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	325,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	326,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	327,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	328,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	329,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	330,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	331,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	332,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	333,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	334,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	335,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	336,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	337,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	338,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	339,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	340,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	341,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	342,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	343,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	344,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	345,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	346,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	347,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	348,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	349,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	350,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	351,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	352,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	353,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	354,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	355,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	356,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	357,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	358,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	359,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	360,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	361,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	362,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	363,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	364,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	365,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	366,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	367,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	368,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	369,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	370,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	371,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	372,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	373,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	374,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	375,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	376,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	377,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	378,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	379,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	380,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	381,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	382,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	383,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	384,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	385,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	386,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	387,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	388,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	389,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	390,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	391,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	392,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	393,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	394,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	395,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	396,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	397,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	398,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	399,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	400,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	401,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	402,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	403,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	404,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	405,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	406,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	407,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	408,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	409,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	410,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	411,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	412,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	413,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	414,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	415,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	416,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	417,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	418,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	419,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	420,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	421,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	422,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	423,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	424,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	425,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	426,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	427,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	428,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	429,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	430,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	431,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	432,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	433,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	434,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	435,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	436,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	437,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	438,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	439,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	440,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	441,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	442,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	443,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	444,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	445,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	446,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	447,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	448,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	449,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	450,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	451,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	452,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	453,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	454,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	455,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	456,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	457,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	458,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	459,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	460,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	461,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	462,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	463,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	464,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	465,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	466,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	467,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	468,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	469,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	470,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	471,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	472,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	473,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	474,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	475,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	476,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	477,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	478,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	479,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	480,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	481,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	482,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	483,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	484,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	485,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	486,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	487,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	488,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	489,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	490,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	491,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	492,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	493,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	494,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	495,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	496,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	497,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	498,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	499,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	500,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	501,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	502,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	503,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	504,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	505,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	506,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	507,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	508,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	509,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	510,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	511,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	512,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	513,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	514,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	515,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	516,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	517,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	518,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	519,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	520,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	521,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	522,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	523,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	524,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	525,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	526,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	527,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	528,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	529,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	530,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	531,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	532,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	533,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	534,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	535,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	536,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	537,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	538,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	539,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	540,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	541,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	542,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	543,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	544,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	545,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	546,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	547,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	548,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	549,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	550,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	551,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	552,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	553,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	554,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	555,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	556,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	557,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	558,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	559,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	560,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	561,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	562,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	563,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	564,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	565,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	566,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	567,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	568,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	569,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	570,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	571,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	572,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	573,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	574,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	575,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	576,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	577,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	578,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	579,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	580,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	581,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	582,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	583,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	584,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	585,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	586,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	587,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	588,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	589,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	590,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	591,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	592,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	593,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	594,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	595,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	596,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	597,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	598,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	599,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	600,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	601,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	602,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	603,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	604,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	605,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	606,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	607,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	608,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	609,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	610,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	611,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	612,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	613,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	614,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	615,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	616,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	617,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	618,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	619,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	620,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	621,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	622,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	623,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	624,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	625,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	626,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	627,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	628,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	629,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	630,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	631,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	632,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	633,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	634,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	635,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	636,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	637,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	638,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	639,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	640,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	641,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	642,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	643,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	644,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	645,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	646,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	647,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	648,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	649,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	650,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	651,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	652,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	653,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	654,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	655,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	656,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	657,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	658,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	659,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	660,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	661,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	662,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	663,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	664,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	665,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	666,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	667,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	668,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	669,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	670,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	671,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	672,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	673,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	674,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	675,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	676,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	677,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	678,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	679,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	680,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	681,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	682,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	683,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	684,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	685,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	686,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	687,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	688,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	689,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	690,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	691,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	692,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	693,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	694,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	695,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	696,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	697,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	698,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	699,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	700,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	701,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	702,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	703,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	704,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	705,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	706,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	707,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	708,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	709,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	710,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	711,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	712,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	713,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	714,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	715,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	716,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	717,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	718,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	719,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	720,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	721,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	722,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	723,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	724,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	725,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	726,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	727,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	728,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	729,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	730,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	731,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	732,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	733,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	734,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	735,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	736,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	737,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	738,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	739,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	740,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	741,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	742,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	743,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	744,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	745,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	746,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	747,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	748,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	749,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	750,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	751,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	752,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	753,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	754,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	755,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	756,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	757,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	758,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	759,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	760,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	761,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	762,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	763,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	764,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	765,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	766,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	767,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	768,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	769,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	770,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	771,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	772,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	773,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	774,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	775,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	776,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	777,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	778,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	779,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	780,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	781,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	782,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	783,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	784,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	785,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	786,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	787,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	788,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	789,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	790,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	791,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	792,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	793,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	794,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	795,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	796,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	797,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	798,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	799,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	800,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	801,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	802,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	803,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	804,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	805,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	806,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	807,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	808,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	809,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	810,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	811,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	812,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	813,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	814,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	815,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	816,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	817,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	818,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	819,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	820,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	821,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	822,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	823,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	824,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	825,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	826,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	827,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	828,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	829,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	830,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	831,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	832,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	833,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	834,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	835,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	836,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	837,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	838,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	839,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	840,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	841,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	842,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	843,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	844,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	845,
									"scores":	[-6.6595912006107927]
								}, {
									"case":	846,
									"scores":	[-6.6595912006107927]
								}]
						}]
				}, {
					"line":	688,
					"switches":	[{
							"switch":	18,
							"types":	[[], [], [], [], [482, 483, 484, 485], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [], [], [], [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], [], [], [], [], [], []],
							"begin_line":	689,
							"begin_column":	4,
							"end_line":	689,
							"end_column":	4,
							"patch_codes":	["memset(&(*zvp).is_ref__gc, 0, sizeof (*(&(*zvp).is_ref__gc)))", "memset(&(*zvp).refcount__gc, 0, sizeof (*(&(*zvp).refcount__gc)))", "memset(&(*zvp).type, 0, sizeof (*(&(*zvp).type)))", "memset(&(*zvp).value, 0, sizeof (*(&(*zvp).value)))", "memset(&(*zvp).value.dval, 0, sizeof (*(&(*zvp).value.dval)))", "memset(&(*zvp).value.ht, 0, sizeof (*(&(*zvp).value.ht)))", "memset(&(*zvp).value.lval, 0, sizeof (*(&(*zvp).value.lval)))", "memset(&(*zvp).value.obj, 0, sizeof (*(&(*zvp).value.obj)))", "memset(&(*zvp).value.str, 0, sizeof (*(&(*zvp).value.str)))", "memset(&(*zvp).value.str.len, 0, sizeof (*(&(*zvp).value.str.len)))", "memset(&(*zvp).value.str.val, 0, sizeof (*(&(*zvp).value.str.val)))", "memset(&lconv->currency_symbol, 0, sizeof (*(&lconv->currency_symbol)))", "memset(&lconv->decimal_point, 0, sizeof (*(&lconv->decimal_point)))", "memset(&lconv->frac_digits, 0, sizeof (*(&lconv->frac_digits)))", "memset(&lconv->grouping, 0, sizeof (*(&lconv->grouping)))", "memset(&lconv->int_curr_symbol, 0, sizeof (*(&lconv->int_curr_symbol)))", "memset(&lconv->int_frac_digits, 0, sizeof (*(&lconv->int_frac_digits)))", "memset(&lconv->int_n_cs_precedes, 0, sizeof (*(&lconv->int_n_cs_precedes)))", "memset(&lconv->int_n_sep_by_space, 0, sizeof (*(&lconv->int_n_sep_by_space)))", "memset(&lconv->int_n_sign_posn, 0, sizeof (*(&lconv->int_n_sign_posn)))", "memset(&lconv->int_p_cs_precedes, 0, sizeof (*(&lconv->int_p_cs_precedes)))", "memset(&lconv->int_p_sep_by_space, 0, sizeof (*(&lconv->int_p_sep_by_space)))", "memset(&lconv->int_p_sign_posn, 0, sizeof (*(&lconv->int_p_sign_posn)))", "memset(&lconv->mon_decimal_point, 0, sizeof (*(&lconv->mon_decimal_point)))", "memset(&lconv->mon_grouping, 0, sizeof (*(&lconv->mon_grouping)))", "memset(&lconv->mon_thousands_sep, 0, sizeof (*(&lconv->mon_thousands_sep)))", "memset(&lconv->n_cs_precedes, 0, sizeof (*(&lconv->n_cs_precedes)))", "memset(&lconv->n_sep_by_space, 0, sizeof (*(&lconv->n_sep_by_space)))", "memset(&lconv->n_sign_posn, 0, sizeof (*(&lconv->n_sign_posn)))", "memset(&lconv->negative_sign, 0, sizeof (*(&lconv->negative_sign)))", "memset(&lconv->p_cs_precedes, 0, sizeof (*(&lconv->p_cs_precedes)))", "memset(&lconv->p_sep_by_space, 0, sizeof (*(&lconv->p_sep_by_space)))", "memset(&lconv->p_sign_posn, 0, sizeof (*(&lconv->p_sign_posn)))", "memset(&lconv->positive_sign, 0, sizeof (*(&lconv->positive_sign)))", "memset(&lconv->thousands_sep, 0, sizeof (*(&lconv->thousands_sep)))", "memset(&xbuf->a, 0, sizeof (*(&xbuf->a)))", "memset(&xbuf->c, 0, sizeof (*(&xbuf->c)))", "memset(&xbuf->len, 0, sizeof (*(&xbuf->len)))", "memset((*zvp).value.ht, 0, sizeof (*((*zvp).value.ht)))", "memset((*zvp).value.str.val, 0, sizeof (*((*zvp).value.str.val)))", "memset(lconv->currency_symbol, 0, sizeof (*(lconv->currency_symbol)))", "memset(lconv->decimal_point, 0, sizeof (*(lconv->decimal_point)))", "memset(lconv->grouping, 0, sizeof (*(lconv->grouping)))", "memset(lconv->int_curr_symbol, 0, sizeof (*(lconv->int_curr_symbol)))", "memset(lconv->mon_decimal_point, 0, sizeof (*(lconv->mon_decimal_point)))", "memset(lconv->mon_grouping, 0, sizeof (*(lconv->mon_grouping)))", "memset(lconv->mon_thousands_sep, 0, sizeof (*(lconv->mon_thousands_sep)))", "memset(lconv->negative_sign, 0, sizeof (*(lconv->negative_sign)))", "memset(lconv->positive_sign, 0, sizeof (*(lconv->positive_sign)))", "memset(lconv->thousands_sep, 0, sizeof (*(lconv->thousands_sep)))", "memset(xbuf->c, 0, sizeof (*(xbuf->c)))", "(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L689\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L689\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L689\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L689\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	2,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	3,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	4,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	5,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	6,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	7,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	8,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	9,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	10,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	11,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	12,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	13,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	14,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	15,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	16,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	17,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	18,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	19,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	20,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	21,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	22,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	23,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	24,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	25,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	26,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	27,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	28,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	29,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	30,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	31,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	32,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	33,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	34,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	35,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	36,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	37,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	38,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	39,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	40,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	41,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	42,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	43,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	44,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	45,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	46,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	47,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	48,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	49,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	50,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	51,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	52,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	53,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	54,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	55,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	56,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	57,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	58,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	59,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	60,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	61,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	62,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	63,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	64,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	65,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	66,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	67,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	68,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	69,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	70,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	71,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	72,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	73,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	74,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	75,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	76,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	77,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	78,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	79,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	80,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	81,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	82,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	83,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	84,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	85,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	86,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	87,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	88,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	89,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	90,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	91,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	92,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	93,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	94,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	95,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	96,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	97,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	98,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	99,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	100,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	101,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	102,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	103,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	104,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	105,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	106,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	107,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	108,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	109,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	110,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	111,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	112,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	113,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	114,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	115,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	116,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	117,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	118,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	119,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	120,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	121,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	122,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	123,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	124,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	125,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	126,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	127,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	128,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	129,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	130,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	131,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	132,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	133,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	134,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	135,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	136,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	137,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	138,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	139,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	140,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	141,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	142,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	143,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	144,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	145,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	146,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	147,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	148,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	149,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	150,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	151,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	152,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	153,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	154,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	155,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	156,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	157,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	158,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	159,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	160,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	161,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	162,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	163,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	164,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	165,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	166,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	167,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	168,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	169,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	170,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	171,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	172,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	173,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	174,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	175,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	176,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	177,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	178,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	179,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	180,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	181,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	182,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	183,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	184,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	185,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	186,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	187,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	188,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	189,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	190,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	191,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	192,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	193,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	194,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	195,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	196,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	197,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	198,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	199,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	200,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	201,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	202,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	203,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	204,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	205,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	206,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	207,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	208,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	209,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	210,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	211,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	212,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	213,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	214,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	215,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	216,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	217,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	218,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	219,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	220,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	221,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	222,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	223,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	224,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	225,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	226,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	227,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	228,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	229,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	230,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	231,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	232,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	233,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	234,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	235,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	236,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	237,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	238,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	239,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	240,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	241,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	242,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	243,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	244,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	245,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	246,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	247,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	248,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	249,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	250,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	251,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	252,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	253,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	254,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	255,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	256,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	257,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	258,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	259,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	260,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	261,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	262,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	263,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	264,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	265,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	266,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	267,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	268,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	269,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	270,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	271,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	272,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	273,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	274,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	275,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	276,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	277,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	278,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	279,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	280,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	281,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	282,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	283,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	284,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	285,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	286,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	287,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	288,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	289,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	290,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	291,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	292,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	293,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	294,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	295,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	296,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	297,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	298,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	299,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	300,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	301,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	302,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	303,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	304,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	305,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	306,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	307,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	308,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	309,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	310,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	311,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	312,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	313,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	314,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	315,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	316,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	317,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	318,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	319,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	320,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	321,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	322,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	323,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	324,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	325,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	326,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	327,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	328,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	329,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	330,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	331,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	332,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	333,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	334,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	335,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	336,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	337,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	338,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	339,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	340,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	341,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	342,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	343,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	344,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	345,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	346,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	347,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	348,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	349,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	350,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	351,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	352,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	353,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	354,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	355,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	356,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	357,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	358,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	359,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	360,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	361,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	362,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	363,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	364,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	365,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	366,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	367,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	368,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	369,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	370,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	371,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	372,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	373,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	374,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	375,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	376,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	377,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	378,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	379,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	380,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	381,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	382,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	383,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	384,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	385,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	386,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	387,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	388,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	389,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	390,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	391,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	392,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	393,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	394,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	395,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	396,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	397,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	398,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	399,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	400,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	401,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	402,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	403,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	404,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	405,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	406,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	407,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	408,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	409,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	410,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	411,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	412,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	413,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	414,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	415,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	416,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	417,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	418,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	419,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	420,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	421,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	422,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	423,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	424,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	425,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	426,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	427,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	428,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	429,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	430,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	431,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	432,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	433,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	434,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	435,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	436,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	437,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	438,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	439,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	440,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	441,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	442,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	443,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	444,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	445,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	446,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	447,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	448,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	449,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	450,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	451,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	452,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	453,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	454,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	455,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	456,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	457,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	458,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	459,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	460,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	461,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	462,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	463,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	464,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	465,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	466,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	467,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	468,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	469,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	470,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	471,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	472,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	473,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	474,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	475,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	476,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	477,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	478,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	479,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	480,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	481,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	482,
									"scores":	[-8.4228052302932745, -7.561238824293274, -7.687491146293274, -9.3818960230932742, -9.523721106293273, -9.312831989293274, -9.5959713030932736, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.5608215062932747, -9.312831989293274, -9.5588709030932737, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.5588709030932737]
								}, {
									"case":	483,
									"scores":	[-8.4218052302932733, -7.5602388242932737, -7.6864911462932737, -9.380896023093273, -9.5227211062932735, -9.3118319892932728, -9.5949713030932742, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.5598215062932734, -9.3118319892932728, -9.5578709030932743, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.5578709030932743]
								}, {
									"case":	484,
									"scores":	[-8.4218052302932733, -7.5602388242932737, -7.6864911462932737, -9.380896023093273, -9.5227211062932735, -9.3118319892932728, -9.5949713030932742, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.5598215062932734, -9.3118319892932728, -9.5578709030932743, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.3118319892932728, -9.5578709030932743]
								}, {
									"case":	485,
									"scores":	[-8.4228052302932745, -7.561238824293274, -7.687491146293274, -9.3818960230932742, -9.523721106293273, -9.312831989293274, -9.5959713030932736, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.5608215062932747, -9.312831989293274, -9.5588709030932737, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.312831989293274, -9.5588709030932737]
								}]
						}, {
							"switch":	19,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	689,
							"begin_column":	6,
							"end_line":	689,
							"end_column":	17,
							"patch_codes":	["if (!__is_neg(\"\", \"L689\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    pad_char = ' ';\n", "{\n}\n", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8073525842932741, -6.6531511732932742, -6.3958866232932738, -7.6220859632932738, -7.4096700632932739, -6.9404100632932746, -7.9926489632932736, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -7.7040208632932741, -6.9404100632932746, -7.6982981632932743, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -6.9404100632932746, -7.6982981632932743]
								}, {
									"case":	2,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	3,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	4,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	5,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	6,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	7,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	8,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	9,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	10,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	11,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	12,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	13,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	14,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	15,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	16,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	17,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	18,
									"scores":	[-6.6393884932932741]
								}, {
									"case":	19,
									"scores":	[-6.6393884932932741]
								}]
						}]
				}, {
					"line":	689,
					"switches":	[{
							"switch":	20,
							"types":	[[], [], [], [], [482, 483, 484, 485], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [], [], [], [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], [], [], [], [], [], []],
							"begin_line":	690,
							"begin_column":	4,
							"end_line":	690,
							"end_column":	4,
							"patch_codes":	["memset(&(*zvp).is_ref__gc, 0, sizeof (*(&(*zvp).is_ref__gc)))", "memset(&(*zvp).refcount__gc, 0, sizeof (*(&(*zvp).refcount__gc)))", "memset(&(*zvp).type, 0, sizeof (*(&(*zvp).type)))", "memset(&(*zvp).value, 0, sizeof (*(&(*zvp).value)))", "memset(&(*zvp).value.dval, 0, sizeof (*(&(*zvp).value.dval)))", "memset(&(*zvp).value.ht, 0, sizeof (*(&(*zvp).value.ht)))", "memset(&(*zvp).value.lval, 0, sizeof (*(&(*zvp).value.lval)))", "memset(&(*zvp).value.obj, 0, sizeof (*(&(*zvp).value.obj)))", "memset(&(*zvp).value.str, 0, sizeof (*(&(*zvp).value.str)))", "memset(&(*zvp).value.str.len, 0, sizeof (*(&(*zvp).value.str.len)))", "memset(&(*zvp).value.str.val, 0, sizeof (*(&(*zvp).value.str.val)))", "memset(&lconv->currency_symbol, 0, sizeof (*(&lconv->currency_symbol)))", "memset(&lconv->decimal_point, 0, sizeof (*(&lconv->decimal_point)))", "memset(&lconv->frac_digits, 0, sizeof (*(&lconv->frac_digits)))", "memset(&lconv->grouping, 0, sizeof (*(&lconv->grouping)))", "memset(&lconv->int_curr_symbol, 0, sizeof (*(&lconv->int_curr_symbol)))", "memset(&lconv->int_frac_digits, 0, sizeof (*(&lconv->int_frac_digits)))", "memset(&lconv->int_n_cs_precedes, 0, sizeof (*(&lconv->int_n_cs_precedes)))", "memset(&lconv->int_n_sep_by_space, 0, sizeof (*(&lconv->int_n_sep_by_space)))", "memset(&lconv->int_n_sign_posn, 0, sizeof (*(&lconv->int_n_sign_posn)))", "memset(&lconv->int_p_cs_precedes, 0, sizeof (*(&lconv->int_p_cs_precedes)))", "memset(&lconv->int_p_sep_by_space, 0, sizeof (*(&lconv->int_p_sep_by_space)))", "memset(&lconv->int_p_sign_posn, 0, sizeof (*(&lconv->int_p_sign_posn)))", "memset(&lconv->mon_decimal_point, 0, sizeof (*(&lconv->mon_decimal_point)))", "memset(&lconv->mon_grouping, 0, sizeof (*(&lconv->mon_grouping)))", "memset(&lconv->mon_thousands_sep, 0, sizeof (*(&lconv->mon_thousands_sep)))", "memset(&lconv->n_cs_precedes, 0, sizeof (*(&lconv->n_cs_precedes)))", "memset(&lconv->n_sep_by_space, 0, sizeof (*(&lconv->n_sep_by_space)))", "memset(&lconv->n_sign_posn, 0, sizeof (*(&lconv->n_sign_posn)))", "memset(&lconv->negative_sign, 0, sizeof (*(&lconv->negative_sign)))", "memset(&lconv->p_cs_precedes, 0, sizeof (*(&lconv->p_cs_precedes)))", "memset(&lconv->p_sep_by_space, 0, sizeof (*(&lconv->p_sep_by_space)))", "memset(&lconv->p_sign_posn, 0, sizeof (*(&lconv->p_sign_posn)))", "memset(&lconv->positive_sign, 0, sizeof (*(&lconv->positive_sign)))", "memset(&lconv->thousands_sep, 0, sizeof (*(&lconv->thousands_sep)))", "memset(&xbuf->a, 0, sizeof (*(&xbuf->a)))", "memset(&xbuf->c, 0, sizeof (*(&xbuf->c)))", "memset(&xbuf->len, 0, sizeof (*(&xbuf->len)))", "memset((*zvp).value.ht, 0, sizeof (*((*zvp).value.ht)))", "memset((*zvp).value.str.val, 0, sizeof (*((*zvp).value.str.val)))", "memset(lconv->currency_symbol, 0, sizeof (*(lconv->currency_symbol)))", "memset(lconv->decimal_point, 0, sizeof (*(lconv->decimal_point)))", "memset(lconv->grouping, 0, sizeof (*(lconv->grouping)))", "memset(lconv->int_curr_symbol, 0, sizeof (*(lconv->int_curr_symbol)))", "memset(lconv->mon_decimal_point, 0, sizeof (*(lconv->mon_decimal_point)))", "memset(lconv->mon_grouping, 0, sizeof (*(lconv->mon_grouping)))", "memset(lconv->mon_thousands_sep, 0, sizeof (*(lconv->mon_thousands_sep)))", "memset(lconv->negative_sign, 0, sizeof (*(lconv->negative_sign)))", "memset(lconv->positive_sign, 0, sizeof (*(lconv->positive_sign)))", "memset(lconv->thousands_sep, 0, sizeof (*(lconv->thousands_sep)))", "memset(xbuf->c, 0, sizeof (*(xbuf->c)))", "(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L690\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L690\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L690\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L690\", 23, &(pad_char), sizeof (pad_char), &(s_len), sizeof (s_len), &(s), sizeof (s), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(xbuf), sizeof (xbuf), &(prefix_char), sizeof (prefix_char), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(fmt), sizeof (fmt), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(ui_num), sizeof (ui_num), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	2,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	3,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	4,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	5,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	6,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	7,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	8,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	9,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	10,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	11,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	12,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	13,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	14,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	15,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	16,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	17,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	18,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	19,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	20,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	21,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	22,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	23,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	24,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	25,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	26,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	27,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	28,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	29,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	30,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	31,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	32,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	33,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	34,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	35,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	36,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	37,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	38,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	39,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	40,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	41,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	42,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	43,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	44,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	45,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	46,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	47,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	48,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	49,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	50,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	51,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	52,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	53,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	54,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	55,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	56,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	57,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	58,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	59,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	60,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	61,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	62,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	63,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	64,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	65,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	66,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	67,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	68,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	69,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	70,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	71,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	72,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	73,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	74,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	75,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	76,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	77,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	78,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	79,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	80,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	81,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	82,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	83,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	84,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	85,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	86,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	87,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	88,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	89,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	90,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	91,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	92,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	93,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	94,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	95,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	96,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	97,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	98,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	99,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	100,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	101,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	102,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	103,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	104,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	105,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	106,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	107,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	108,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	109,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	110,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	111,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	112,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	113,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	114,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	115,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	116,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	117,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	118,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	119,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	120,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	121,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	122,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	123,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	124,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	125,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	126,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	127,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	128,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	129,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	130,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	131,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	132,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	133,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	134,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	135,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	136,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	137,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	138,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	139,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	140,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	141,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	142,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	143,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	144,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	145,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	146,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	147,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	148,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	149,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	150,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	151,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	152,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	153,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	154,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	155,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	156,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	157,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	158,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	159,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	160,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	161,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	162,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	163,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	164,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	165,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	166,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	167,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	168,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	169,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	170,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	171,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	172,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	173,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	174,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	175,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	176,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	177,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	178,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	179,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	180,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	181,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	182,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	183,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	184,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	185,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	186,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	187,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	188,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	189,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	190,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	191,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	192,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	193,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	194,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	195,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	196,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	197,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	198,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	199,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	200,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	201,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	202,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	203,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	204,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	205,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	206,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	207,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	208,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	209,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	210,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	211,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	212,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	213,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	214,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	215,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	216,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	217,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	218,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	219,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	220,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	221,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	222,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	223,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	224,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	225,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	226,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	227,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	228,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	229,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	230,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	231,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	232,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	233,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	234,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	235,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	236,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	237,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	238,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	239,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	240,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	241,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	242,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	243,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	244,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	245,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	246,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	247,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	248,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	249,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	250,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	251,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	252,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	253,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	254,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	255,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	256,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	257,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	258,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	259,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	260,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	261,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	262,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	263,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	264,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	265,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	266,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	267,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	268,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	269,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	270,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	271,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	272,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	273,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	274,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	275,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	276,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	277,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	278,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	279,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	280,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	281,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	282,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	283,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	284,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	285,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	286,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	287,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	288,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	289,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	290,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	291,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	292,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	293,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	294,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	295,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	296,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	297,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	298,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	299,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	300,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	301,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	302,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	303,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	304,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	305,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	306,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	307,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	308,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	309,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	310,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	311,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	312,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	313,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	314,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	315,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	316,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	317,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	318,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	319,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	320,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	321,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	322,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	323,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	324,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	325,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	326,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	327,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	328,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	329,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	330,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	331,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	332,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	333,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	334,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	335,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	336,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	337,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	338,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	339,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	340,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	341,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	342,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	343,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	344,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	345,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	346,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	347,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	348,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	349,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	350,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	351,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	352,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	353,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	354,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	355,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	356,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	357,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	358,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	359,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	360,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	361,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	362,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	363,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	364,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	365,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	366,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	367,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	368,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	369,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	370,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	371,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	372,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	373,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	374,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	375,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	376,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	377,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	378,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	379,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	380,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	381,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	382,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	383,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	384,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	385,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	386,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	387,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	388,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	389,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	390,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	391,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	392,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	393,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	394,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	395,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	396,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	397,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	398,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	399,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	400,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	401,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	402,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	403,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	404,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	405,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	406,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	407,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	408,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	409,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	410,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	411,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	412,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	413,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	414,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	415,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	416,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	417,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	418,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	419,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	420,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	421,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	422,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	423,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	424,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	425,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	426,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	427,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	428,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	429,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	430,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	431,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	432,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	433,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	434,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	435,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	436,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	437,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	438,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	439,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	440,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	441,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	442,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	443,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	444,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	445,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	446,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	447,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	448,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	449,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	450,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	451,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	452,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	453,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	454,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	455,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	456,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	457,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	458,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	459,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	460,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	461,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	462,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	463,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	464,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	465,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	466,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	467,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	468,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	469,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	470,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	471,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	472,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	473,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	474,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	475,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	476,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	477,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	478,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	479,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	480,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	481,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	482,
									"scores":	[-7.4213168019757543, -7.5725351099757541, -7.6008074389757541, -9.5092875957757546, -9.4370373989757539, -9.2261482819757532, -9.5092875957757546, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.4741377989757538, -9.2261482819757532, -9.4721871957757529, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.4721871957757529]
								}, {
									"case":	483,
									"scores":	[-7.4203168019757539, -7.5715351099757537, -7.5998074389757537, -9.5082875957757533, -9.4360373989757527, -9.2251482819757538, -9.5082875957757533, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.4731377989757544, -9.2251482819757538, -9.4711871957757534, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.4711871957757534]
								}, {
									"case":	484,
									"scores":	[-7.4203168019757539, -7.5715351099757537, -7.5998074389757537, -9.5082875957757533, -9.4360373989757527, -9.2251482819757538, -9.5082875957757533, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.4731377989757544, -9.2251482819757538, -9.4711871957757534, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.2251482819757538, -9.4711871957757534]
								}, {
									"case":	485,
									"scores":	[-7.4213168019757543, -7.5725351099757541, -7.6008074389757541, -9.5092875957757546, -9.4370373989757539, -9.2261482819757532, -9.5092875957757546, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.4741377989757538, -9.2261482819757532, -9.4721871957757529, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.2261482819757532, -9.4721871957757529]
								}]
						}]
				}, {
					"line":	764,
					"switches":	[{
							"switch":	23,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	765,
							"begin_column":	3,
							"end_line":	765,
							"end_column":	3,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	2,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	3,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	4,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	5,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	6,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	7,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	8,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	9,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	10,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	11,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	12,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	13,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	14,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	15,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	16,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	17,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	18,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	19,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	20,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	21,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	22,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	23,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	24,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	25,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	26,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	27,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	28,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	29,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	30,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	31,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	32,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	33,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	34,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	35,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	36,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	37,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	38,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	39,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	40,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	41,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	42,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	43,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	44,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	45,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	46,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	47,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	48,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	49,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	50,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	51,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	52,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	53,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	54,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	55,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	56,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	57,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	58,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	59,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	60,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	61,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	62,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	63,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	64,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	65,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	66,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	67,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	68,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	69,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	70,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	71,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	72,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	73,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	74,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	75,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	76,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	77,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	78,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	79,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	80,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	81,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	82,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	83,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	84,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	85,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	86,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	87,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	88,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	89,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	90,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	91,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	92,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	93,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	94,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	95,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	96,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	97,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	98,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	99,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	100,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	101,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	102,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	103,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	104,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	105,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	106,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	107,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	108,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	109,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	110,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	111,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	112,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	113,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	114,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	115,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	116,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	117,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	118,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	119,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	120,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	121,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	122,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	123,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	124,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	125,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	126,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	127,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	128,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	129,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	130,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	131,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	132,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	133,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	134,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	135,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	136,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	137,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	138,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	139,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	140,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	141,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	142,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	143,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	144,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	145,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	146,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	147,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	148,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	149,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	150,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	151,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	152,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	153,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	154,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	155,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	156,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	157,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	158,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	159,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	160,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	161,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	162,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	163,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	164,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	165,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	166,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	167,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	168,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	169,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	170,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	171,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	172,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	173,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	174,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	175,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	176,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	177,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	178,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	179,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	180,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	181,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	182,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	183,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	184,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	185,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	186,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	187,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	188,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	189,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	190,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	191,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	192,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	193,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	194,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	195,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	196,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	197,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	198,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	199,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	200,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	201,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	202,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	203,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	204,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	205,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	206,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	207,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	208,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	209,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	210,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	211,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	212,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	213,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	214,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	215,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	216,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	217,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	218,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	219,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	220,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	221,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	222,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	223,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	224,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	225,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	226,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	227,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	228,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	229,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	230,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	231,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	232,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	233,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	234,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	235,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	236,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	237,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	238,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	239,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	240,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	241,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	242,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	243,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	244,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	245,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	246,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	247,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	248,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	249,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	250,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	251,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	252,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	253,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	254,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	255,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	256,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	257,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	258,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	259,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	260,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	261,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	262,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	263,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	264,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	265,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	266,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	267,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	268,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	269,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	270,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	271,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	272,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	273,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	274,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	275,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	276,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	277,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	278,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	279,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	280,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	281,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	282,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	283,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	284,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	285,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	286,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	287,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	288,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	289,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	290,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	291,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	292,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	293,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	294,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	295,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	296,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	297,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	298,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	299,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	300,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	301,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	302,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	303,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	304,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	305,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	306,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	307,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	308,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	309,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	310,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	311,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	312,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	313,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	314,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	315,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	316,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	317,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	318,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	319,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	320,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	321,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	322,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	323,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	324,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	325,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	326,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	327,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	328,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	329,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	330,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	331,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	332,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	333,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	334,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	335,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	336,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	337,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	338,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	339,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	340,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	341,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	342,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	343,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	344,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	345,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	346,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	347,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	348,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	349,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	350,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	351,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	352,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	353,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	354,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	355,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	356,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	357,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	358,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	359,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	360,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	361,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	362,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	363,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	364,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	365,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	366,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	367,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	368,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	369,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	370,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	371,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	372,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	373,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	374,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	375,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	376,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	377,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	378,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	379,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	380,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	381,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	382,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	383,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	384,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	385,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	386,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	387,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	388,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	389,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	390,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	391,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	392,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	393,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	394,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	395,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	396,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	397,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	398,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	399,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	400,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	401,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	402,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	403,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	404,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	405,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	406,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	407,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	408,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	409,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	410,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	411,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	412,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	413,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	414,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	415,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	416,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	417,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	418,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	419,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	420,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	421,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	422,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	423,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	424,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	425,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	426,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	427,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	428,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	429,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	430,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	431,
									"scores":	[-9.7474718476582343, -9.6017891946582345, -9.3376120573582355, -9.0995860706582352, -8.8999454496582349, -9.400880449658235, -9.6349495746582345, -9.6349495746582345, -9.8829390916582351, -9.6349495746582345, -9.6349495746582345, -9.9180888884582359, -9.8458386916582352, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.880988488458236, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.880988488458236]
								}, {
									"case":	432,
									"scores":	[-9.7464718476582348, -9.6007891946582351, -9.3366120573582361, -9.0985860706582358, -8.8989454496582336, -9.3998804496582338, -9.6339495746582351, -9.6339495746582351, -9.8819390916582357, -9.6339495746582351, -9.6339495746582351, -9.9170888884582347, -9.8448386916582358, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.8799884884582347, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.8799884884582347]
								}, {
									"case":	433,
									"scores":	[-9.7464718476582348, -9.6007891946582351, -9.3366120573582361, -9.0985860706582358, -8.8989454496582336, -9.3998804496582338, -9.6339495746582351, -9.6339495746582351, -9.8819390916582357, -9.6339495746582351, -9.6339495746582351, -9.9170888884582347, -9.8448386916582358, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.8799884884582347, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.6339495746582351, -9.8799884884582347]
								}, {
									"case":	434,
									"scores":	[-9.7474718476582343, -9.6017891946582345, -9.3376120573582355, -9.0995860706582352, -8.8999454496582349, -9.400880449658235, -9.6349495746582345, -9.6349495746582345, -9.8829390916582351, -9.6349495746582345, -9.6349495746582345, -9.9180888884582359, -9.8458386916582352, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.880988488458236, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.6349495746582345, -9.880988488458236]
								}]
						}, {
							"switch":	24,
							"types":	[[5], [2, 3], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], [], [4]],
							"begin_line":	765,
							"begin_column":	5,
							"end_line":	770,
							"end_column":	5,
							"patch_codes":	["if (__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n", "if (((pad_char == '0') || __is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) && prefix_char != '\\x00') {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n", "if ((pad_char == '0' && prefix_char != '\\x00') || __is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n", "if (pad_char == '0') {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n", "if ((pad_char == '0' && prefix_char != '\\x00') && !__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[0.34777486767185861, -0.332484923328142, -3.0878424312281414, -1.35262444432814, 0.065080819671861079, -0.25693021032813945, -2.4564749233281447, -2.4564749233281447, -3.2200857233281441, -2.4564749233281447, -2.4564749233281447, -3.5087138233281445, -2.9257349233281444, -2.4564749233281447, -2.4564749233281447, -2.4564749233281447, -2.4564749233281447, -3.2143630233281444, -2.4564749233281447, -2.4564749233281447, -2.4564749233281447, -2.4564749233281447, -3.2143630233281444]
								}, {
									"case":	2,
									"scores":	[-1.7251480044281449, -2.4054077954281459, -5.1607653033281462, -3.4255473164281458, -2.0078420524281464, -2.329853082428146, -4.5293977954281459, -4.5293977954281459, -5.2930085954281463, -4.5293977954281459, -4.5293977954281459, -5.5816366954281458, -4.9986577954281461, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456]
								}, {
									"case":	3,
									"scores":	[-1.7251480044281449, -2.4054077954281459, -5.1607653033281462, -3.4255473164281458, -2.0078420524281464, -2.329853082428146, -4.5293977954281459, -4.5293977954281459, -5.2930085954281463, -4.5293977954281459, -4.5293977954281459, -5.5816366954281458, -4.9986577954281461, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-1.7251480044281449, -2.4054077954281459, -5.1607653033281462, -3.4255473164281458, -2.0078420524281464, -2.329853082428146, -4.5293977954281459, -4.5293977954281459, -5.2930085954281463, -4.5293977954281459, -4.5293977954281459, -5.5816366954281458, -4.9986577954281461, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -4.5293977954281459, -5.2872858954281456]
								}]
						}, {
							"switch":	25,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	765,
							"begin_column":	5,
							"end_line":	770,
							"end_column":	5,
							"patch_codes":	["if (!__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n", "if (!__is_neg(\"\", \"L765\", 23, &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)) && (pad_char == '0' && prefix_char != '\\x00')) {\n    do {\n        do {\n            register size_t __nl;\n            do {\n                if (!(((xbuf)))->c) {\n                    (((xbuf)))->len = 0;\n                    __nl = (1);\n                    (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                    (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                } else {\n                    __nl = (((xbuf)))->len + (1);\n                    if (__nl >= (((xbuf)))->a) {\n                        (((xbuf)))->a = __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            ((xbuf))->len = __nl;\n            ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n        } while (0);\n    } while (0);\n    s++;\n    s_len--;\n    min_width--;\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.6601146476582347, -6.3403744386582348, -9.0957319465582351, -7.3605139596582347, -5.9428086956582353, -6.264819725658235, -8.4643644386582348, -8.4643644386582348, -9.2279752386582352, -8.4643644386582348, -8.4643644386582348, -9.5166033386582356, -8.9336244386582351, -8.4643644386582348, -8.4643644386582348, -8.4643644386582348, -8.4643644386582348, -9.2222525386582355, -8.4643644386582348, -8.4643644386582348, -8.4643644386582348, -8.4643644386582348, -9.2222525386582355]
								}, {
									"case":	2,
									"scores":	[-5.7121837676582343, -6.3924435586582353, -9.1478010665582339, -7.4125830796582353, -5.994877815658235, -6.3168888456582355, -8.5164335586582354, -8.5164335586582354, -9.280044358658234, -8.5164335586582354, -8.5164335586582354, -9.5686724586582343, -8.9856935586582338, -8.5164335586582354, -8.5164335586582354, -8.5164335586582354, -8.5164335586582354, -9.2743216586582342, -8.5164335586582354, -8.5164335586582354, -8.5164335586582354, -8.5164335586582354, -9.2743216586582342]
								}]
						}]
				}, {
					"line":	770,
					"switches":	[{
							"switch":	26,
							"types":	[[], [], [], [], [431, 432, 433, 434], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	771,
							"begin_column":	3,
							"end_line":	771,
							"end_column":	3,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy", "if (__is_neg(\"\", \"L771\", 23, &(xbuf), sizeof (xbuf), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(pad_char), sizeof (pad_char), &(s), sizeof (s), &(prefix_char), sizeof (prefix_char), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(fmt), sizeof (fmt), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    break;\n", "if (__is_neg(\"\", \"L771\", 23, &(xbuf), sizeof (xbuf), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(pad_char), sizeof (pad_char), &(s), sizeof (s), &(prefix_char), sizeof (prefix_char), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(fmt), sizeof (fmt), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto fmt_error;\n", "if (__is_neg(\"\", \"L771\", 23, &(xbuf), sizeof (xbuf), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(pad_char), sizeof (pad_char), &(s), sizeof (s), &(prefix_char), sizeof (prefix_char), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(fmt), sizeof (fmt), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    goto skip_output;\n", "if (__is_neg(\"\", \"L771\", 23, &(xbuf), sizeof (xbuf), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(pad_char), sizeof (pad_char), &(s), sizeof (s), &(prefix_char), sizeof (prefix_char), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(fmt), sizeof (fmt), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.41715871280056]
								}, {
									"case":	2,
									"scores":	[-6.41715871280056]
								}, {
									"case":	3,
									"scores":	[-6.41715871280056]
								}, {
									"case":	4,
									"scores":	[-6.41715871280056]
								}, {
									"case":	5,
									"scores":	[-6.41715871280056]
								}, {
									"case":	6,
									"scores":	[-6.41715871280056]
								}, {
									"case":	7,
									"scores":	[-6.41715871280056]
								}, {
									"case":	8,
									"scores":	[-6.41715871280056]
								}, {
									"case":	9,
									"scores":	[-6.41715871280056]
								}, {
									"case":	10,
									"scores":	[-6.41715871280056]
								}, {
									"case":	11,
									"scores":	[-6.41715871280056]
								}, {
									"case":	12,
									"scores":	[-6.41715871280056]
								}, {
									"case":	13,
									"scores":	[-6.41715871280056]
								}, {
									"case":	14,
									"scores":	[-6.41715871280056]
								}, {
									"case":	15,
									"scores":	[-6.41715871280056]
								}, {
									"case":	16,
									"scores":	[-6.41715871280056]
								}, {
									"case":	17,
									"scores":	[-6.41715871280056]
								}, {
									"case":	18,
									"scores":	[-6.41715871280056]
								}, {
									"case":	19,
									"scores":	[-6.41715871280056]
								}, {
									"case":	20,
									"scores":	[-6.41715871280056]
								}, {
									"case":	21,
									"scores":	[-6.41715871280056]
								}, {
									"case":	22,
									"scores":	[-6.41715871280056]
								}, {
									"case":	23,
									"scores":	[-6.41715871280056]
								}, {
									"case":	24,
									"scores":	[-6.41715871280056]
								}, {
									"case":	25,
									"scores":	[-6.41715871280056]
								}, {
									"case":	26,
									"scores":	[-6.41715871280056]
								}, {
									"case":	27,
									"scores":	[-6.41715871280056]
								}, {
									"case":	28,
									"scores":	[-6.41715871280056]
								}, {
									"case":	29,
									"scores":	[-6.41715871280056]
								}, {
									"case":	30,
									"scores":	[-6.41715871280056]
								}, {
									"case":	31,
									"scores":	[-6.41715871280056]
								}, {
									"case":	32,
									"scores":	[-6.41715871280056]
								}, {
									"case":	33,
									"scores":	[-6.41715871280056]
								}, {
									"case":	34,
									"scores":	[-6.41715871280056]
								}, {
									"case":	35,
									"scores":	[-6.41715871280056]
								}, {
									"case":	36,
									"scores":	[-6.41715871280056]
								}, {
									"case":	37,
									"scores":	[-6.41715871280056]
								}, {
									"case":	38,
									"scores":	[-6.41715871280056]
								}, {
									"case":	39,
									"scores":	[-6.41715871280056]
								}, {
									"case":	40,
									"scores":	[-6.41715871280056]
								}, {
									"case":	41,
									"scores":	[-6.41715871280056]
								}, {
									"case":	42,
									"scores":	[-6.41715871280056]
								}, {
									"case":	43,
									"scores":	[-6.41715871280056]
								}, {
									"case":	44,
									"scores":	[-6.41715871280056]
								}, {
									"case":	45,
									"scores":	[-6.41715871280056]
								}, {
									"case":	46,
									"scores":	[-6.41715871280056]
								}, {
									"case":	47,
									"scores":	[-6.41715871280056]
								}, {
									"case":	48,
									"scores":	[-6.41715871280056]
								}, {
									"case":	49,
									"scores":	[-6.41715871280056]
								}, {
									"case":	50,
									"scores":	[-6.41715871280056]
								}, {
									"case":	51,
									"scores":	[-6.41715871280056]
								}, {
									"case":	52,
									"scores":	[-6.41715871280056]
								}, {
									"case":	53,
									"scores":	[-6.41715871280056]
								}, {
									"case":	54,
									"scores":	[-6.41715871280056]
								}, {
									"case":	55,
									"scores":	[-6.41715871280056]
								}, {
									"case":	56,
									"scores":	[-6.41715871280056]
								}, {
									"case":	57,
									"scores":	[-6.41715871280056]
								}, {
									"case":	58,
									"scores":	[-6.41715871280056]
								}, {
									"case":	59,
									"scores":	[-6.41715871280056]
								}, {
									"case":	60,
									"scores":	[-6.41715871280056]
								}, {
									"case":	61,
									"scores":	[-6.41715871280056]
								}, {
									"case":	62,
									"scores":	[-6.41715871280056]
								}, {
									"case":	63,
									"scores":	[-6.41715871280056]
								}, {
									"case":	64,
									"scores":	[-6.41715871280056]
								}, {
									"case":	65,
									"scores":	[-6.41715871280056]
								}, {
									"case":	66,
									"scores":	[-6.41715871280056]
								}, {
									"case":	67,
									"scores":	[-6.41715871280056]
								}, {
									"case":	68,
									"scores":	[-6.41715871280056]
								}, {
									"case":	69,
									"scores":	[-6.41715871280056]
								}, {
									"case":	70,
									"scores":	[-6.41715871280056]
								}, {
									"case":	71,
									"scores":	[-6.41715871280056]
								}, {
									"case":	72,
									"scores":	[-6.41715871280056]
								}, {
									"case":	73,
									"scores":	[-6.41715871280056]
								}, {
									"case":	74,
									"scores":	[-6.41715871280056]
								}, {
									"case":	75,
									"scores":	[-6.41715871280056]
								}, {
									"case":	76,
									"scores":	[-6.41715871280056]
								}, {
									"case":	77,
									"scores":	[-6.41715871280056]
								}, {
									"case":	78,
									"scores":	[-6.41715871280056]
								}, {
									"case":	79,
									"scores":	[-6.41715871280056]
								}, {
									"case":	80,
									"scores":	[-6.41715871280056]
								}, {
									"case":	81,
									"scores":	[-6.41715871280056]
								}, {
									"case":	82,
									"scores":	[-6.41715871280056]
								}, {
									"case":	83,
									"scores":	[-6.41715871280056]
								}, {
									"case":	84,
									"scores":	[-6.41715871280056]
								}, {
									"case":	85,
									"scores":	[-6.41715871280056]
								}, {
									"case":	86,
									"scores":	[-6.41715871280056]
								}, {
									"case":	87,
									"scores":	[-6.41715871280056]
								}, {
									"case":	88,
									"scores":	[-6.41715871280056]
								}, {
									"case":	89,
									"scores":	[-6.41715871280056]
								}, {
									"case":	90,
									"scores":	[-6.41715871280056]
								}, {
									"case":	91,
									"scores":	[-6.41715871280056]
								}, {
									"case":	92,
									"scores":	[-6.41715871280056]
								}, {
									"case":	93,
									"scores":	[-6.41715871280056]
								}, {
									"case":	94,
									"scores":	[-6.41715871280056]
								}, {
									"case":	95,
									"scores":	[-6.41715871280056]
								}, {
									"case":	96,
									"scores":	[-6.41715871280056]
								}, {
									"case":	97,
									"scores":	[-6.41715871280056]
								}, {
									"case":	98,
									"scores":	[-6.41715871280056]
								}, {
									"case":	99,
									"scores":	[-6.41715871280056]
								}, {
									"case":	100,
									"scores":	[-6.41715871280056]
								}, {
									"case":	101,
									"scores":	[-6.41715871280056]
								}, {
									"case":	102,
									"scores":	[-6.41715871280056]
								}, {
									"case":	103,
									"scores":	[-6.41715871280056]
								}, {
									"case":	104,
									"scores":	[-6.41715871280056]
								}, {
									"case":	105,
									"scores":	[-6.41715871280056]
								}, {
									"case":	106,
									"scores":	[-6.41715871280056]
								}, {
									"case":	107,
									"scores":	[-6.41715871280056]
								}, {
									"case":	108,
									"scores":	[-6.41715871280056]
								}, {
									"case":	109,
									"scores":	[-6.41715871280056]
								}, {
									"case":	110,
									"scores":	[-6.41715871280056]
								}, {
									"case":	111,
									"scores":	[-6.41715871280056]
								}, {
									"case":	112,
									"scores":	[-6.41715871280056]
								}, {
									"case":	113,
									"scores":	[-6.41715871280056]
								}, {
									"case":	114,
									"scores":	[-6.41715871280056]
								}, {
									"case":	115,
									"scores":	[-6.41715871280056]
								}, {
									"case":	116,
									"scores":	[-6.41715871280056]
								}, {
									"case":	117,
									"scores":	[-6.41715871280056]
								}, {
									"case":	118,
									"scores":	[-6.41715871280056]
								}, {
									"case":	119,
									"scores":	[-6.41715871280056]
								}, {
									"case":	120,
									"scores":	[-6.41715871280056]
								}, {
									"case":	121,
									"scores":	[-6.41715871280056]
								}, {
									"case":	122,
									"scores":	[-6.41715871280056]
								}, {
									"case":	123,
									"scores":	[-6.41715871280056]
								}, {
									"case":	124,
									"scores":	[-6.41715871280056]
								}, {
									"case":	125,
									"scores":	[-6.41715871280056]
								}, {
									"case":	126,
									"scores":	[-6.41715871280056]
								}, {
									"case":	127,
									"scores":	[-6.41715871280056]
								}, {
									"case":	128,
									"scores":	[-6.41715871280056]
								}, {
									"case":	129,
									"scores":	[-6.41715871280056]
								}, {
									"case":	130,
									"scores":	[-6.41715871280056]
								}, {
									"case":	131,
									"scores":	[-6.41715871280056]
								}, {
									"case":	132,
									"scores":	[-6.41715871280056]
								}, {
									"case":	133,
									"scores":	[-6.41715871280056]
								}, {
									"case":	134,
									"scores":	[-6.41715871280056]
								}, {
									"case":	135,
									"scores":	[-6.41715871280056]
								}, {
									"case":	136,
									"scores":	[-6.41715871280056]
								}, {
									"case":	137,
									"scores":	[-6.41715871280056]
								}, {
									"case":	138,
									"scores":	[-6.41715871280056]
								}, {
									"case":	139,
									"scores":	[-6.41715871280056]
								}, {
									"case":	140,
									"scores":	[-6.41715871280056]
								}, {
									"case":	141,
									"scores":	[-6.41715871280056]
								}, {
									"case":	142,
									"scores":	[-6.41715871280056]
								}, {
									"case":	143,
									"scores":	[-6.41715871280056]
								}, {
									"case":	144,
									"scores":	[-6.41715871280056]
								}, {
									"case":	145,
									"scores":	[-6.41715871280056]
								}, {
									"case":	146,
									"scores":	[-6.41715871280056]
								}, {
									"case":	147,
									"scores":	[-6.41715871280056]
								}, {
									"case":	148,
									"scores":	[-6.41715871280056]
								}, {
									"case":	149,
									"scores":	[-6.41715871280056]
								}, {
									"case":	150,
									"scores":	[-6.41715871280056]
								}, {
									"case":	151,
									"scores":	[-6.41715871280056]
								}, {
									"case":	152,
									"scores":	[-6.41715871280056]
								}, {
									"case":	153,
									"scores":	[-6.41715871280056]
								}, {
									"case":	154,
									"scores":	[-6.41715871280056]
								}, {
									"case":	155,
									"scores":	[-6.41715871280056]
								}, {
									"case":	156,
									"scores":	[-6.41715871280056]
								}, {
									"case":	157,
									"scores":	[-6.41715871280056]
								}, {
									"case":	158,
									"scores":	[-6.41715871280056]
								}, {
									"case":	159,
									"scores":	[-6.41715871280056]
								}, {
									"case":	160,
									"scores":	[-6.41715871280056]
								}, {
									"case":	161,
									"scores":	[-6.41715871280056]
								}, {
									"case":	162,
									"scores":	[-6.41715871280056]
								}, {
									"case":	163,
									"scores":	[-6.41715871280056]
								}, {
									"case":	164,
									"scores":	[-6.41715871280056]
								}, {
									"case":	165,
									"scores":	[-6.41715871280056]
								}, {
									"case":	166,
									"scores":	[-6.41715871280056]
								}, {
									"case":	167,
									"scores":	[-6.41715871280056]
								}, {
									"case":	168,
									"scores":	[-6.41715871280056]
								}, {
									"case":	169,
									"scores":	[-6.41715871280056]
								}, {
									"case":	170,
									"scores":	[-6.41715871280056]
								}, {
									"case":	171,
									"scores":	[-6.41715871280056]
								}, {
									"case":	172,
									"scores":	[-6.41715871280056]
								}, {
									"case":	173,
									"scores":	[-6.41715871280056]
								}, {
									"case":	174,
									"scores":	[-6.41715871280056]
								}, {
									"case":	175,
									"scores":	[-6.41715871280056]
								}, {
									"case":	176,
									"scores":	[-6.41715871280056]
								}, {
									"case":	177,
									"scores":	[-6.41715871280056]
								}, {
									"case":	178,
									"scores":	[-6.41715871280056]
								}, {
									"case":	179,
									"scores":	[-6.41715871280056]
								}, {
									"case":	180,
									"scores":	[-6.41715871280056]
								}, {
									"case":	181,
									"scores":	[-6.41715871280056]
								}, {
									"case":	182,
									"scores":	[-6.41715871280056]
								}, {
									"case":	183,
									"scores":	[-6.41715871280056]
								}, {
									"case":	184,
									"scores":	[-6.41715871280056]
								}, {
									"case":	185,
									"scores":	[-6.41715871280056]
								}, {
									"case":	186,
									"scores":	[-6.41715871280056]
								}, {
									"case":	187,
									"scores":	[-6.41715871280056]
								}, {
									"case":	188,
									"scores":	[-6.41715871280056]
								}, {
									"case":	189,
									"scores":	[-6.41715871280056]
								}, {
									"case":	190,
									"scores":	[-6.41715871280056]
								}, {
									"case":	191,
									"scores":	[-6.41715871280056]
								}, {
									"case":	192,
									"scores":	[-6.41715871280056]
								}, {
									"case":	193,
									"scores":	[-6.41715871280056]
								}, {
									"case":	194,
									"scores":	[-6.41715871280056]
								}, {
									"case":	195,
									"scores":	[-6.41715871280056]
								}, {
									"case":	196,
									"scores":	[-6.41715871280056]
								}, {
									"case":	197,
									"scores":	[-6.41715871280056]
								}, {
									"case":	198,
									"scores":	[-6.41715871280056]
								}, {
									"case":	199,
									"scores":	[-6.41715871280056]
								}, {
									"case":	200,
									"scores":	[-6.41715871280056]
								}, {
									"case":	201,
									"scores":	[-6.41715871280056]
								}, {
									"case":	202,
									"scores":	[-6.41715871280056]
								}, {
									"case":	203,
									"scores":	[-6.41715871280056]
								}, {
									"case":	204,
									"scores":	[-6.41715871280056]
								}, {
									"case":	205,
									"scores":	[-6.41715871280056]
								}, {
									"case":	206,
									"scores":	[-6.41715871280056]
								}, {
									"case":	207,
									"scores":	[-6.41715871280056]
								}, {
									"case":	208,
									"scores":	[-6.41715871280056]
								}, {
									"case":	209,
									"scores":	[-6.41715871280056]
								}, {
									"case":	210,
									"scores":	[-6.41715871280056]
								}, {
									"case":	211,
									"scores":	[-6.41715871280056]
								}, {
									"case":	212,
									"scores":	[-6.41715871280056]
								}, {
									"case":	213,
									"scores":	[-6.41715871280056]
								}, {
									"case":	214,
									"scores":	[-6.41715871280056]
								}, {
									"case":	215,
									"scores":	[-6.41715871280056]
								}, {
									"case":	216,
									"scores":	[-6.41715871280056]
								}, {
									"case":	217,
									"scores":	[-6.41715871280056]
								}, {
									"case":	218,
									"scores":	[-6.41715871280056]
								}, {
									"case":	219,
									"scores":	[-6.41715871280056]
								}, {
									"case":	220,
									"scores":	[-6.41715871280056]
								}, {
									"case":	221,
									"scores":	[-6.41715871280056]
								}, {
									"case":	222,
									"scores":	[-6.41715871280056]
								}, {
									"case":	223,
									"scores":	[-6.41715871280056]
								}, {
									"case":	224,
									"scores":	[-6.41715871280056]
								}, {
									"case":	225,
									"scores":	[-6.41715871280056]
								}, {
									"case":	226,
									"scores":	[-6.41715871280056]
								}, {
									"case":	227,
									"scores":	[-6.41715871280056]
								}, {
									"case":	228,
									"scores":	[-6.41715871280056]
								}, {
									"case":	229,
									"scores":	[-6.41715871280056]
								}, {
									"case":	230,
									"scores":	[-6.41715871280056]
								}, {
									"case":	231,
									"scores":	[-6.41715871280056]
								}, {
									"case":	232,
									"scores":	[-6.41715871280056]
								}, {
									"case":	233,
									"scores":	[-6.41715871280056]
								}, {
									"case":	234,
									"scores":	[-6.41715871280056]
								}, {
									"case":	235,
									"scores":	[-6.41715871280056]
								}, {
									"case":	236,
									"scores":	[-6.41715871280056]
								}, {
									"case":	237,
									"scores":	[-6.41715871280056]
								}, {
									"case":	238,
									"scores":	[-6.41715871280056]
								}, {
									"case":	239,
									"scores":	[-6.41715871280056]
								}, {
									"case":	240,
									"scores":	[-6.41715871280056]
								}, {
									"case":	241,
									"scores":	[-6.41715871280056]
								}, {
									"case":	242,
									"scores":	[-6.41715871280056]
								}, {
									"case":	243,
									"scores":	[-6.41715871280056]
								}, {
									"case":	244,
									"scores":	[-6.41715871280056]
								}, {
									"case":	245,
									"scores":	[-6.41715871280056]
								}, {
									"case":	246,
									"scores":	[-6.41715871280056]
								}, {
									"case":	247,
									"scores":	[-6.41715871280056]
								}, {
									"case":	248,
									"scores":	[-6.41715871280056]
								}, {
									"case":	249,
									"scores":	[-6.41715871280056]
								}, {
									"case":	250,
									"scores":	[-6.41715871280056]
								}, {
									"case":	251,
									"scores":	[-6.41715871280056]
								}, {
									"case":	252,
									"scores":	[-6.41715871280056]
								}, {
									"case":	253,
									"scores":	[-6.41715871280056]
								}, {
									"case":	254,
									"scores":	[-6.41715871280056]
								}, {
									"case":	255,
									"scores":	[-6.41715871280056]
								}, {
									"case":	256,
									"scores":	[-6.41715871280056]
								}, {
									"case":	257,
									"scores":	[-6.41715871280056]
								}, {
									"case":	258,
									"scores":	[-6.41715871280056]
								}, {
									"case":	259,
									"scores":	[-6.41715871280056]
								}, {
									"case":	260,
									"scores":	[-6.41715871280056]
								}, {
									"case":	261,
									"scores":	[-6.41715871280056]
								}, {
									"case":	262,
									"scores":	[-6.41715871280056]
								}, {
									"case":	263,
									"scores":	[-6.41715871280056]
								}, {
									"case":	264,
									"scores":	[-6.41715871280056]
								}, {
									"case":	265,
									"scores":	[-6.41715871280056]
								}, {
									"case":	266,
									"scores":	[-6.41715871280056]
								}, {
									"case":	267,
									"scores":	[-6.41715871280056]
								}, {
									"case":	268,
									"scores":	[-6.41715871280056]
								}, {
									"case":	269,
									"scores":	[-6.41715871280056]
								}, {
									"case":	270,
									"scores":	[-6.41715871280056]
								}, {
									"case":	271,
									"scores":	[-6.41715871280056]
								}, {
									"case":	272,
									"scores":	[-6.41715871280056]
								}, {
									"case":	273,
									"scores":	[-6.41715871280056]
								}, {
									"case":	274,
									"scores":	[-6.41715871280056]
								}, {
									"case":	275,
									"scores":	[-6.41715871280056]
								}, {
									"case":	276,
									"scores":	[-6.41715871280056]
								}, {
									"case":	277,
									"scores":	[-6.41715871280056]
								}, {
									"case":	278,
									"scores":	[-6.41715871280056]
								}, {
									"case":	279,
									"scores":	[-6.41715871280056]
								}, {
									"case":	280,
									"scores":	[-6.41715871280056]
								}, {
									"case":	281,
									"scores":	[-6.41715871280056]
								}, {
									"case":	282,
									"scores":	[-6.41715871280056]
								}, {
									"case":	283,
									"scores":	[-6.41715871280056]
								}, {
									"case":	284,
									"scores":	[-6.41715871280056]
								}, {
									"case":	285,
									"scores":	[-6.41715871280056]
								}, {
									"case":	286,
									"scores":	[-6.41715871280056]
								}, {
									"case":	287,
									"scores":	[-6.41715871280056]
								}, {
									"case":	288,
									"scores":	[-6.41715871280056]
								}, {
									"case":	289,
									"scores":	[-6.41715871280056]
								}, {
									"case":	290,
									"scores":	[-6.41715871280056]
								}, {
									"case":	291,
									"scores":	[-6.41715871280056]
								}, {
									"case":	292,
									"scores":	[-6.41715871280056]
								}, {
									"case":	293,
									"scores":	[-6.41715871280056]
								}, {
									"case":	294,
									"scores":	[-6.41715871280056]
								}, {
									"case":	295,
									"scores":	[-6.41715871280056]
								}, {
									"case":	296,
									"scores":	[-6.41715871280056]
								}, {
									"case":	297,
									"scores":	[-6.41715871280056]
								}, {
									"case":	298,
									"scores":	[-6.41715871280056]
								}, {
									"case":	299,
									"scores":	[-6.41715871280056]
								}, {
									"case":	300,
									"scores":	[-6.41715871280056]
								}, {
									"case":	301,
									"scores":	[-6.41715871280056]
								}, {
									"case":	302,
									"scores":	[-6.41715871280056]
								}, {
									"case":	303,
									"scores":	[-6.41715871280056]
								}, {
									"case":	304,
									"scores":	[-6.41715871280056]
								}, {
									"case":	305,
									"scores":	[-6.41715871280056]
								}, {
									"case":	306,
									"scores":	[-6.41715871280056]
								}, {
									"case":	307,
									"scores":	[-6.41715871280056]
								}, {
									"case":	308,
									"scores":	[-6.41715871280056]
								}, {
									"case":	309,
									"scores":	[-6.41715871280056]
								}, {
									"case":	310,
									"scores":	[-6.41715871280056]
								}, {
									"case":	311,
									"scores":	[-6.41715871280056]
								}, {
									"case":	312,
									"scores":	[-6.41715871280056]
								}, {
									"case":	313,
									"scores":	[-6.41715871280056]
								}, {
									"case":	314,
									"scores":	[-6.41715871280056]
								}, {
									"case":	315,
									"scores":	[-6.41715871280056]
								}, {
									"case":	316,
									"scores":	[-6.41715871280056]
								}, {
									"case":	317,
									"scores":	[-6.41715871280056]
								}, {
									"case":	318,
									"scores":	[-6.41715871280056]
								}, {
									"case":	319,
									"scores":	[-6.41715871280056]
								}, {
									"case":	320,
									"scores":	[-6.41715871280056]
								}, {
									"case":	321,
									"scores":	[-6.41715871280056]
								}, {
									"case":	322,
									"scores":	[-6.41715871280056]
								}, {
									"case":	323,
									"scores":	[-6.41715871280056]
								}, {
									"case":	324,
									"scores":	[-6.41715871280056]
								}, {
									"case":	325,
									"scores":	[-6.41715871280056]
								}, {
									"case":	326,
									"scores":	[-6.41715871280056]
								}, {
									"case":	327,
									"scores":	[-6.41715871280056]
								}, {
									"case":	328,
									"scores":	[-6.41715871280056]
								}, {
									"case":	329,
									"scores":	[-6.41715871280056]
								}, {
									"case":	330,
									"scores":	[-6.41715871280056]
								}, {
									"case":	331,
									"scores":	[-6.41715871280056]
								}, {
									"case":	332,
									"scores":	[-6.41715871280056]
								}, {
									"case":	333,
									"scores":	[-6.41715871280056]
								}, {
									"case":	334,
									"scores":	[-6.41715871280056]
								}, {
									"case":	335,
									"scores":	[-6.41715871280056]
								}, {
									"case":	336,
									"scores":	[-6.41715871280056]
								}, {
									"case":	337,
									"scores":	[-6.41715871280056]
								}, {
									"case":	338,
									"scores":	[-6.41715871280056]
								}, {
									"case":	339,
									"scores":	[-6.41715871280056]
								}, {
									"case":	340,
									"scores":	[-6.41715871280056]
								}, {
									"case":	341,
									"scores":	[-6.41715871280056]
								}, {
									"case":	342,
									"scores":	[-6.41715871280056]
								}, {
									"case":	343,
									"scores":	[-6.41715871280056]
								}, {
									"case":	344,
									"scores":	[-6.41715871280056]
								}, {
									"case":	345,
									"scores":	[-6.41715871280056]
								}, {
									"case":	346,
									"scores":	[-6.41715871280056]
								}, {
									"case":	347,
									"scores":	[-6.41715871280056]
								}, {
									"case":	348,
									"scores":	[-6.41715871280056]
								}, {
									"case":	349,
									"scores":	[-6.41715871280056]
								}, {
									"case":	350,
									"scores":	[-6.41715871280056]
								}, {
									"case":	351,
									"scores":	[-6.41715871280056]
								}, {
									"case":	352,
									"scores":	[-6.41715871280056]
								}, {
									"case":	353,
									"scores":	[-6.41715871280056]
								}, {
									"case":	354,
									"scores":	[-6.41715871280056]
								}, {
									"case":	355,
									"scores":	[-6.41715871280056]
								}, {
									"case":	356,
									"scores":	[-6.41715871280056]
								}, {
									"case":	357,
									"scores":	[-6.41715871280056]
								}, {
									"case":	358,
									"scores":	[-6.41715871280056]
								}, {
									"case":	359,
									"scores":	[-6.41715871280056]
								}, {
									"case":	360,
									"scores":	[-6.41715871280056]
								}, {
									"case":	361,
									"scores":	[-6.41715871280056]
								}, {
									"case":	362,
									"scores":	[-6.41715871280056]
								}, {
									"case":	363,
									"scores":	[-6.41715871280056]
								}, {
									"case":	364,
									"scores":	[-6.41715871280056]
								}, {
									"case":	365,
									"scores":	[-6.41715871280056]
								}, {
									"case":	366,
									"scores":	[-6.41715871280056]
								}, {
									"case":	367,
									"scores":	[-6.41715871280056]
								}, {
									"case":	368,
									"scores":	[-6.41715871280056]
								}, {
									"case":	369,
									"scores":	[-6.41715871280056]
								}, {
									"case":	370,
									"scores":	[-6.41715871280056]
								}, {
									"case":	371,
									"scores":	[-6.41715871280056]
								}, {
									"case":	372,
									"scores":	[-6.41715871280056]
								}, {
									"case":	373,
									"scores":	[-6.41715871280056]
								}, {
									"case":	374,
									"scores":	[-6.41715871280056]
								}, {
									"case":	375,
									"scores":	[-6.41715871280056]
								}, {
									"case":	376,
									"scores":	[-6.41715871280056]
								}, {
									"case":	377,
									"scores":	[-6.41715871280056]
								}, {
									"case":	378,
									"scores":	[-6.41715871280056]
								}, {
									"case":	379,
									"scores":	[-6.41715871280056]
								}, {
									"case":	380,
									"scores":	[-6.41715871280056]
								}, {
									"case":	381,
									"scores":	[-6.41715871280056]
								}, {
									"case":	382,
									"scores":	[-6.41715871280056]
								}, {
									"case":	383,
									"scores":	[-6.41715871280056]
								}, {
									"case":	384,
									"scores":	[-6.41715871280056]
								}, {
									"case":	385,
									"scores":	[-6.41715871280056]
								}, {
									"case":	386,
									"scores":	[-6.41715871280056]
								}, {
									"case":	387,
									"scores":	[-6.41715871280056]
								}, {
									"case":	388,
									"scores":	[-6.41715871280056]
								}, {
									"case":	389,
									"scores":	[-6.41715871280056]
								}, {
									"case":	390,
									"scores":	[-6.41715871280056]
								}, {
									"case":	391,
									"scores":	[-6.41715871280056]
								}, {
									"case":	392,
									"scores":	[-6.41715871280056]
								}, {
									"case":	393,
									"scores":	[-6.41715871280056]
								}, {
									"case":	394,
									"scores":	[-6.41715871280056]
								}, {
									"case":	395,
									"scores":	[-6.41715871280056]
								}, {
									"case":	396,
									"scores":	[-6.41715871280056]
								}, {
									"case":	397,
									"scores":	[-6.41715871280056]
								}, {
									"case":	398,
									"scores":	[-6.41715871280056]
								}, {
									"case":	399,
									"scores":	[-6.41715871280056]
								}, {
									"case":	400,
									"scores":	[-6.41715871280056]
								}, {
									"case":	401,
									"scores":	[-6.41715871280056]
								}, {
									"case":	402,
									"scores":	[-6.41715871280056]
								}, {
									"case":	403,
									"scores":	[-6.41715871280056]
								}, {
									"case":	404,
									"scores":	[-6.41715871280056]
								}, {
									"case":	405,
									"scores":	[-6.41715871280056]
								}, {
									"case":	406,
									"scores":	[-6.41715871280056]
								}, {
									"case":	407,
									"scores":	[-6.41715871280056]
								}, {
									"case":	408,
									"scores":	[-6.41715871280056]
								}, {
									"case":	409,
									"scores":	[-6.41715871280056]
								}, {
									"case":	410,
									"scores":	[-6.41715871280056]
								}, {
									"case":	411,
									"scores":	[-6.41715871280056]
								}, {
									"case":	412,
									"scores":	[-6.41715871280056]
								}, {
									"case":	413,
									"scores":	[-6.41715871280056]
								}, {
									"case":	414,
									"scores":	[-6.41715871280056]
								}, {
									"case":	415,
									"scores":	[-6.41715871280056]
								}, {
									"case":	416,
									"scores":	[-6.41715871280056]
								}, {
									"case":	417,
									"scores":	[-6.41715871280056]
								}, {
									"case":	418,
									"scores":	[-6.41715871280056]
								}, {
									"case":	419,
									"scores":	[-6.41715871280056]
								}, {
									"case":	420,
									"scores":	[-6.41715871280056]
								}, {
									"case":	421,
									"scores":	[-6.41715871280056]
								}, {
									"case":	422,
									"scores":	[-6.41715871280056]
								}, {
									"case":	423,
									"scores":	[-6.41715871280056]
								}, {
									"case":	424,
									"scores":	[-6.41715871280056]
								}, {
									"case":	425,
									"scores":	[-6.41715871280056]
								}, {
									"case":	426,
									"scores":	[-6.41715871280056]
								}, {
									"case":	427,
									"scores":	[-6.41715871280056]
								}, {
									"case":	428,
									"scores":	[-6.41715871280056]
								}, {
									"case":	429,
									"scores":	[-6.41715871280056]
								}, {
									"case":	430,
									"scores":	[-6.41715871280056]
								}, {
									"case":	431,
									"scores":	[-9.99344435150056, -6.41249476180056, -6.91342976180056, -8.60681523980056, -9.90094519450056, -9.46212320880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.20191672580056, -9.95392720880056, -10.237066522600559, -10.164816325800558, -9.95392720880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.199966122600559, -9.95392720880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.199966122600559]
								}, {
									"case":	432,
									"scores":	[-9.99244435150056, -6.41149476180056, -6.91242976180056, -8.60581523980056, -9.89994519450056, -9.46112320880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.200916725800559, -9.95292720880056, -10.236066522600559, -10.163816325800559, -9.95292720880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.198966122600559, -9.95292720880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.198966122600559]
								}, {
									"case":	433,
									"scores":	[-9.99244435150056, -6.41149476180056, -6.91242976180056, -8.60581523980056, -9.89994519450056, -9.46112320880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.200916725800559, -9.95292720880056, -10.236066522600559, -10.163816325800559, -9.95292720880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.198966122600559, -9.95292720880056, -9.95292720880056, -9.95292720880056, -9.95292720880056, -10.198966122600559]
								}, {
									"case":	434,
									"scores":	[-9.99344435150056, -6.41249476180056, -6.91342976180056, -8.60681523980056, -9.90094519450056, -9.46212320880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.20191672580056, -9.95392720880056, -10.237066522600559, -10.164816325800558, -9.95392720880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.199966122600559, -9.95392720880056, -9.95392720880056, -9.95392720880056, -9.95392720880056, -10.199966122600559]
								}]
						}, {
							"switch":	27,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	771,
							"begin_column":	5,
							"end_line":	771,
							"end_column":	42,
							"patch_codes":	["if (!__is_neg(\"\", \"L771\", 23, &(xbuf), sizeof (xbuf), &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(pad_char), sizeof (pad_char), &(s), sizeof (s), &(prefix_char), sizeof (prefix_char), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(free_zcopy), sizeof (free_zcopy), &(fmt), sizeof (fmt), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp)))\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.53610488330056, -6.57023502480056, -6.89224605480056, -7.43182254280056, -8.86216235330056, -8.14525784280056, -8.53201368280056, -8.53201368280056, -8.53201368280056, -9.29562448280056, -8.53201368280056, -9.58425258280056, -9.00127368280056, -8.53201368280056, -8.53201368280056, -8.53201368280056, -8.53201368280056, -9.28990178280056, -8.53201368280056, -8.53201368280056, -8.53201368280056, -8.53201368280056, -9.28990178280056]
								}]
						}]
				}, {
					"line":	763,
					"switches":	[{
							"switch":	21,
							"types":	[[], [], [], [], [], [], [], [], [], [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], [], [], [], [], [], []],
							"begin_line":	764,
							"begin_column":	2,
							"end_line":	764,
							"end_column":	2,
							"patch_codes":	["(fmt)++", "(q)++", "(s)++", "_efree(((zvp)))", "_zval_copy_ctor_func((zvp))", "_zval_dtor(((zvp)))", "_zval_dtor_func((zvp))", "_zval_ptr_dtor((&(zvp)))", "adjust = (-128)", "adjust = (0)", "adjust = (1)", "adjust = (10)", "adjust = (127)", "adjust = (128)", "adjust = (2)", "adjust = (214748364)", "adjust = (2147483647)", "adjust = (3)", "adjust = (4)", "adjust = (500)", "adjust = (512)", "adjust = (6)", "adjust = (78)", "adjust = (LEFT)", "adjust = (RIGHT)", "adjust = (adjust)", "adjust_precision = (-128)", "adjust_precision = (0)", "adjust_precision = (1)", "adjust_precision = (10)", "adjust_precision = (127)", "adjust_precision = (128)", "adjust_precision = (2)", "adjust_precision = (214748364)", "adjust_precision = (2147483647)", "adjust_precision = (3)", "adjust_precision = (4)", "adjust_precision = (500)", "adjust_precision = (512)", "adjust_precision = (6)", "adjust_precision = (78)", "adjust_precision = (NO)", "adjust_precision = (YES)", "adjust_precision = (adjust_precision)", "adjust_precision = (adjust_width)", "adjust_precision = (alternate_form)", "adjust_precision = (print_blank)", "adjust_precision = (print_sign)", "adjust_width = (-128)", "adjust_width = (0)", "adjust_width = (1)", "adjust_width = (10)", "adjust_width = (127)", "adjust_width = (128)", "adjust_width = (2)", "adjust_width = (214748364)", "adjust_width = (2147483647)", "adjust_width = (3)", "adjust_width = (4)", "adjust_width = (500)", "adjust_width = (512)", "adjust_width = (6)", "adjust_width = (78)", "adjust_width = (NO)", "adjust_width = (YES)", "adjust_width = (adjust_precision)", "adjust_width = (adjust_width)", "adjust_width = (alternate_form)", "adjust_width = (print_blank)", "adjust_width = (print_sign)", "alternate_form = (-128)", "alternate_form = (0)", "alternate_form = (1)", "alternate_form = (10)", "alternate_form = (127)", "alternate_form = (128)", "alternate_form = (2)", "alternate_form = (214748364)", "alternate_form = (2147483647)", "alternate_form = (3)", "alternate_form = (4)", "alternate_form = (500)", "alternate_form = (512)", "alternate_form = (6)", "alternate_form = (78)", "alternate_form = (NO)", "alternate_form = (YES)", "alternate_form = (adjust_precision)", "alternate_form = (adjust_width)", "alternate_form = (alternate_form)", "alternate_form = (print_blank)", "alternate_form = (print_sign)", "char_buf[1] = (-128)", "char_buf[1] = (0)", "char_buf[1] = (1)", "char_buf[1] = (10)", "char_buf[1] = (127)", "char_buf[1] = (128)", "char_buf[1] = (2)", "char_buf[1] = (214748364)", "char_buf[1] = (2147483647)", "char_buf[1] = (3)", "char_buf[1] = (4)", "char_buf[1] = (500)", "char_buf[1] = (512)", "char_buf[1] = (6)", "char_buf[1] = (78)", "char_buf[1] = (pad_char)", "char_buf[1] = (prefix_char)", "char_buf[1] = *(fmt)", "convert_to_boolean((zvp))", "free_zcopy = (-128)", "free_zcopy = (0)", "free_zcopy = (1)", "free_zcopy = (10)", "free_zcopy = (127)", "free_zcopy = (128)", "free_zcopy = (2)", "free_zcopy = (214748364)", "free_zcopy = (2147483647)", "free_zcopy = (3)", "free_zcopy = (4)", "free_zcopy = (500)", "free_zcopy = (512)", "free_zcopy = (6)", "free_zcopy = (78)", "free_zcopy = (free_zcopy)", "free_zcopy = (is_negative)", "free_zcopy = (min_width)", "free_zcopy = (precision)", "free_zcopy = (s_len)", "gc_remove_zval_from_buffer((zvp))", "gc_zval_check_possible_root(((zvp)))", "gc_zval_possible_root((zvp))", "i_zval_ptr_dtor((zvp))", "lconv = (lconv)", "min_width = (-128)", "min_width = (0)", "min_width = (1)", "min_width = (10)", "min_width = (127)", "min_width = (128)", "min_width = (2)", "min_width = (214748364)", "min_width = (2147483647)", "min_width = (3)", "min_width = (4)", "min_width = (500)", "min_width = (512)", "min_width = (6)", "min_width = (78)", "min_width = (free_zcopy)", "min_width = (is_negative)", "min_width = (min_width)", "min_width = (precision)", "min_width = (s_len)", "modifier = (-128)", "modifier = (0)", "modifier = (1)", "modifier = (10)", "modifier = (127)", "modifier = (128)", "modifier = (2)", "modifier = (214748364)", "modifier = (2147483647)", "modifier = (3)", "modifier = (4)", "modifier = (500)", "modifier = (512)", "modifier = (6)", "modifier = (78)", "modifier = (LM_INTMAX_T)", "modifier = (LM_LONG)", "modifier = (LM_LONG_DOUBLE)", "modifier = (LM_LONG_LONG)", "modifier = (LM_PTRDIFF_T)", "modifier = (LM_SIZE_T)", "modifier = (LM_STD)", "modifier = (modifier)", "pad_char = (-128)", "pad_char = (0)", "pad_char = (1)", "pad_char = (10)", "pad_char = (127)", "pad_char = (128)", "pad_char = (2)", "pad_char = (214748364)", "pad_char = (2147483647)", "pad_char = (3)", "pad_char = (4)", "pad_char = (500)", "pad_char = (512)", "pad_char = (6)", "pad_char = (78)", "pad_char = (pad_char)", "pad_char = (prefix_char)", "precision = (-128)", "precision = (0)", "precision = (1)", "precision = (10)", "precision = (127)", "precision = (128)", "precision = (2)", "precision = (214748364)", "precision = (2147483647)", "precision = (3)", "precision = (4)", "precision = (500)", "precision = (512)", "precision = (6)", "precision = (78)", "precision = (free_zcopy)", "precision = (is_negative)", "precision = (min_width)", "precision = (precision)", "precision = (s_len)", "prefix_char = (-128)", "prefix_char = (0)", "prefix_char = (1)", "prefix_char = (10)", "prefix_char = (127)", "prefix_char = (128)", "prefix_char = (2)", "prefix_char = (214748364)", "prefix_char = (2147483647)", "prefix_char = (3)", "prefix_char = (4)", "prefix_char = (500)", "prefix_char = (512)", "prefix_char = (6)", "prefix_char = (78)", "prefix_char = (pad_char)", "prefix_char = (prefix_char)", "prefix_char = *(q)++", "prefix_char = *(s)++", "print_blank = (-128)", "print_blank = (0)", "print_blank = (1)", "print_blank = (10)", "print_blank = (127)", "print_blank = (128)", "print_blank = (2)", "print_blank = (214748364)", "print_blank = (2147483647)", "print_blank = (3)", "print_blank = (4)", "print_blank = (500)", "print_blank = (512)", "print_blank = (6)", "print_blank = (78)", "print_blank = (NO)", "print_blank = (YES)", "print_blank = (adjust_precision)", "print_blank = (adjust_width)", "print_blank = (alternate_form)", "print_blank = (print_blank)", "print_blank = (print_sign)", "print_sign = (-128)", "print_sign = (0)", "print_sign = (1)", "print_sign = (10)", "print_sign = (127)", "print_sign = (128)", "print_sign = (2)", "print_sign = (214748364)", "print_sign = (2147483647)", "print_sign = (3)", "print_sign = (4)", "print_sign = (500)", "print_sign = (512)", "print_sign = (6)", "print_sign = (78)", "print_sign = (NO)", "print_sign = (YES)", "print_sign = (adjust_precision)", "print_sign = (adjust_width)", "print_sign = (alternate_form)", "print_sign = (print_blank)", "print_sign = (print_sign)", "s = (*(zvp)).value.str.val", "s = (q)", "s = (s)", "s = ap_php_conv_10(i_num, (*(fmt)) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *(fmt), &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *(fmt), &num_buf[512], &s_len)", "s = php_conv_fp((*(fmt) == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *(fmt), fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (NO)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == (YES)) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*(fmt) == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*(lconv)->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*(fmt) == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *(fmt) == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*(lconv)->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*(fmt) == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *(fmt) == 'H') ? 'E' : 'e', &num_buf[1])", "s[s_len++] = (-128)", "s[s_len++] = (0)", "s[s_len++] = (1)", "s[s_len++] = (10)", "s[s_len++] = (127)", "s[s_len++] = (128)", "s[s_len++] = (2)", "s[s_len++] = (214748364)", "s[s_len++] = (2147483647)", "s[s_len++] = (3)", "s[s_len++] = (4)", "s[s_len++] = (500)", "s[s_len++] = (512)", "s[s_len++] = (6)", "s[s_len++] = (78)", "s[s_len++] = (pad_char)", "s[s_len++] = (prefix_char)", "s_len = (*(zvp)).value.str.len", "s_len = (-128)", "s_len = (0)", "s_len = (1)", "s_len = (10)", "s_len = (127)", "s_len = (128)", "s_len = (2)", "s_len = (214748364)", "s_len = (2147483647)", "s_len = (3)", "s_len = (4)", "s_len = (500)", "s_len = (512)", "s_len = (6)", "s_len = (78)", "s_len = (free_zcopy)", "s_len = (is_negative)", "s_len = (min_width)", "s_len = (precision)", "s_len = (s_len)", "s_len = strlen((q))", "s_len = strlen((s))", "s_len = strnlen((q), precision)", "s_len = strnlen((s), precision)", "ui_num = (-128)", "ui_num = (0)", "ui_num = (1)", "ui_num = (10)", "ui_num = (127)", "ui_num = (128)", "ui_num = (2)", "ui_num = (214748364)", "ui_num = (2147483647)", "ui_num = (3)", "ui_num = (4)", "ui_num = (500)", "ui_num = (512)", "ui_num = (6)", "ui_num = (78)", "ui_num = (ui_num)", "zend_make_printable_zval((zvp), &zcopy, &free_zcopy)", "zval_unset_isref_p((zvp))", "zvp = (zvp)", "(executor_globals.argument_stack) = zend_vm_stack_new_page(((16 * 1024) - 16))", "_zval_dtor((&zcopy))", "adjust = LEFT", "adjust = RIGHT", "adjust_precision = NO", "adjust_precision = YES", "adjust_width = NO", "adjust_width = YES", "alternate_form = NO", "alternate_form = YES", "char_buf[1] = *fmt", "exit(1)", "fmt++", "free_zcopy = 0", "lconv = localeconv()", "min_width = -min_width", "min_width = __builtin_va_arg(ap, int)", "min_width--", "modifier = LM_INTMAX_T", "modifier = LM_LONG", "modifier = LM_LONG_DOUBLE", "modifier = LM_LONG_LONG", "modifier = LM_PTRDIFF_T", "modifier = LM_SIZE_T", "pad_char = ' '", "pad_char = '0'", "precision = 0", "precision = 1", "precision = 500", "precision = 6", "precision = __builtin_va_arg(ap, int)", "prefix_char = ' '", "prefix_char = '+'", "prefix_char = '-'", "prefix_char = '\\x00'", "prefix_char = *s++", "print_blank = NO", "print_blank = YES", "print_sign = NO", "print_sign = YES", "s = \"%p\"", "s = \"(null)\"", "s = \"-INF\"", "s = \"INF\"", "s = \"NAN\"", "s = \"inf\"", "s = \"nan\"", "s = &char_buf[0]", "s = (*zvp).value.str.val", "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 3, *fmt, &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, 'x', &num_buf[512], &s_len)", "s = ap_php_conv_p2(ui_num, 4, *fmt, &num_buf[512], &s_len)", "s = char_buf", "s = php_conv_fp((*fmt == 'f') ? 'F' : *fmt, fp_num, alternate_form, (adjust_precision == NO) ? 6 : precision, (*fmt == 'f') ? (*lconv->decimal_point) : '.', &is_negative, &num_buf[1], &s_len)", "s = php_gcvt(fp_num, precision, (*fmt == 'H' || *fmt == 'k') ? '.' : (*lconv->decimal_point), (*fmt == 'G' || *fmt == 'H') ? 'E' : 'e', &num_buf[1])", "s++", "s[s_len++] = '.'", "s_len = (*zvp).value.str.len", "s_len = 1", "s_len = 2", "s_len = 3", "s_len = 4", "s_len = 6", "s_len = precision", "s_len = strlen(s)", "s_len = strnlen(s, precision)", "s_len++", "s_len--", "ui_num = (u_wide_int)((size_t)__builtin_va_arg(ap, char *))", "zend_error((1 << 3L), \"A non well formed numeric value encountered\")", "zend_make_printable_zval(zvp, &zcopy, &free_zcopy)", "zvp = &zcopy"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	2,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	3,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	4,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	5,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	6,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	7,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	8,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	9,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	10,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	11,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	12,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	13,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	14,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	15,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	16,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	17,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	18,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	19,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	20,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	21,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	22,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	23,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	24,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	25,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	26,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	27,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	28,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	29,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	30,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	31,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	32,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	33,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	34,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	35,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	36,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	37,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	38,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	39,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	40,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	41,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	42,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	43,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	44,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	45,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	46,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	47,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	48,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	49,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	50,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	51,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	52,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	53,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	54,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	55,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	56,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	57,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	58,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	59,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	60,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	61,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	62,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	63,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	64,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	65,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	66,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	67,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	68,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	69,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	70,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	71,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	72,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	73,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	74,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	75,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	76,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	77,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	78,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	79,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	80,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	81,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	82,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	83,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	84,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	85,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	86,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	87,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	88,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	89,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	90,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	91,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	92,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	93,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	94,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	95,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	96,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	97,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	98,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	99,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	100,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	101,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	102,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	103,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	104,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	105,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	106,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	107,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	108,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	109,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	110,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	111,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	112,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	113,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	114,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	115,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	116,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	117,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	118,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	119,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	120,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	121,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	122,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	123,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	124,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	125,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	126,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	127,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	128,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	129,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	130,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	131,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	132,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	133,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	134,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	135,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	136,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	137,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	138,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	139,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	140,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	141,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	142,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	143,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	144,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	145,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	146,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	147,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	148,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	149,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	150,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	151,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	152,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	153,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	154,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	155,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	156,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	157,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	158,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	159,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	160,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	161,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	162,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	163,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	164,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	165,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	166,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	167,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	168,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	169,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	170,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	171,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	172,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	173,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	174,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	175,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	176,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	177,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	178,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	179,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	180,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	181,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	182,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	183,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	184,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	185,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	186,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	187,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	188,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	189,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	190,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	191,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	192,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	193,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	194,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	195,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	196,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	197,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	198,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	199,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	200,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	201,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	202,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	203,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	204,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	205,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	206,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	207,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	208,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	209,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	210,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	211,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	212,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	213,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	214,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	215,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	216,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	217,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	218,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	219,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	220,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	221,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	222,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	223,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	224,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	225,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	226,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	227,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	228,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	229,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	230,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	231,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	232,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	233,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	234,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	235,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	236,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	237,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	238,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	239,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	240,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	241,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	242,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	243,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	244,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	245,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	246,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	247,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	248,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	249,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	250,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	251,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	252,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	253,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	254,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	255,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	256,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	257,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	258,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	259,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	260,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	261,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	262,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	263,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	264,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	265,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	266,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	267,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	268,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	269,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	270,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	271,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	272,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	273,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	274,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	275,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	276,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	277,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	278,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	279,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	280,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	281,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	282,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	283,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	284,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	285,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	286,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	287,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	288,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	289,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	290,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	291,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	292,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	293,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	294,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	295,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	296,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	297,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	298,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	299,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	300,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	301,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	302,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	303,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	304,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	305,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	306,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	307,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	308,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	309,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	310,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	311,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	312,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	313,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	314,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	315,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	316,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	317,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	318,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	319,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	320,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	321,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	322,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	323,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	324,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	325,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	326,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	327,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	328,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	329,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	330,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	331,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	332,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	333,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	334,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	335,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	336,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	337,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	338,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	339,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	340,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	341,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	342,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	343,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	344,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	345,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	346,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	347,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	348,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	349,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	350,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	351,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	352,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	353,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	354,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	355,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	356,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	357,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	358,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	359,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	360,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	361,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	362,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	363,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	364,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	365,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	366,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	367,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	368,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	369,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	370,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	371,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	372,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	373,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	374,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	375,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	376,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	377,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	378,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	379,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	380,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	381,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	382,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	383,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	384,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	385,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	386,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	387,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	388,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	389,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	390,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	391,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	392,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	393,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	394,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	395,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	396,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	397,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	398,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	399,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	400,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	401,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	402,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	403,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	404,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	405,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	406,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	407,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	408,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	409,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	410,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	411,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	412,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	413,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	414,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	415,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	416,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	417,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	418,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	419,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	420,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	421,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	422,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	423,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	424,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	425,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	426,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	427,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	428,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	429,
									"scores":	[-6.5989830786582351]
								}, {
									"case":	430,
									"scores":	[-6.5989830786582351]
								}]
						}, {
							"switch":	22,
							"types":	[[5], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], [], [2, 3, 4]],
							"begin_line":	764,
							"begin_column":	4,
							"end_line":	772,
							"end_column":	4,
							"patch_codes":	["if (__is_neg(\"\", \"L764\", 23, &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) {\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n}\n", "if (adjust == RIGHT && min_width > s_len) {\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n}\n", "if (adjust_width && adjust == RIGHT) {\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n}\n", "if (adjust_width && min_width > s_len) {\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n}\n", "if ((adjust_width && adjust == RIGHT && min_width > s_len) && !__is_neg(\"\", \"L764\", 23, &(s_len), sizeof (s_len), &(min_width), sizeof (min_width), &(adjust), sizeof (adjust), &(adjust_width), sizeof (adjust_width), &(pad_char), sizeof (pad_char), &(prefix_char), sizeof (prefix_char), &(xbuf), sizeof (xbuf), &(s), sizeof (s), &(fmt), sizeof (fmt), &(free_zcopy), sizeof (free_zcopy), &(ui_num), sizeof (ui_num), &(ap), sizeof (ap), &(q), sizeof (q), &(alternate_form), sizeof (alternate_form), &(print_blank), sizeof (print_blank), &(print_sign), sizeof (print_sign), &(precision), sizeof (precision), &(lconv), sizeof (lconv), &(adjust_precision), sizeof (adjust_precision), &(modifier), sizeof (modifier), &(is_negative), sizeof (is_negative), &(i_num), sizeof (i_num), &(zvp), sizeof (zvp))) {\n    if (pad_char == '0' && prefix_char != '\\x00') {\n        do {\n            do {\n                register size_t __nl;\n                do {\n                    if (!(((xbuf)))->c) {\n                        (((xbuf)))->len = 0;\n                        __nl = (1);\n                        (((xbuf)))->a = __nl < 78 ? 78 : __nl + 128;\n                        (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                    } else {\n                        __nl = (((xbuf)))->len + (1);\n                        if (__nl >= (((xbuf)))->a) {\n                            (((xbuf)))->a = __nl + 128;\n                            (((xbuf)))->c = (((((0)))) ? __zend_realloc((((((xbuf)))->c)), (((((xbuf)))->a + 1))) : _erealloc(((((((xbuf)))->c))), ((((((xbuf)))->a + 1))), 0));\n                        }\n                    }\n                } while (0);\n                ((xbuf))->len = __nl;\n                ((unsigned char *)((xbuf))->c)[((xbuf))->len - 1] = ((*s));\n            } while (0);\n        } while (0);\n        s++;\n        s_len--;\n        min_width--;\n    }\n    do {\n        if ((min_width - s_len) > 0) {\n            size_t newlen;\n            do {\n                if (!((xbuf))->c) {\n                    ((xbuf))->len = 0;\n                    newlen = (((min_width - s_len)));\n                    ((xbuf))->a = newlen < 78 ? 78 : newlen + 128;\n                    ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                } else {\n                    newlen = ((xbuf))->len + (((min_width - s_len)));\n                    if (newlen >= ((xbuf))->a) {\n                        ((xbuf))->a = newlen + 128;\n                        ((xbuf))->c = (((((0)))) ? __zend_realloc(((((xbuf))->c)), ((((xbuf))->a + 1))) : _erealloc((((((xbuf))->c))), (((((xbuf))->a + 1))), 0));\n                    }\n                }\n            } while (0);\n            memset(xbuf->c + xbuf->len, pad_char, (min_width - s_len));\n            xbuf->len += (min_width - s_len);\n        }\n    } while (0);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.7267104830781363, -3.6184251221781465, -5.3502668351781519, -6.50804383517815, -2.8231171841781464, -3.1166211351781477, -7.0106358335781485, -3.699756143678143, -7.5049630376781487, -6.3120710591781473, -5.32959398117815, -7.18971973517815, -6.09662697517815, -6.2264636811781475, -6.50804383517815, -6.50804383517815, -6.39872766767815, -6.71131636567815, -5.83499879517815, -5.62736697517815, -5.94150805917815, -5.32959398117815, -6.55074163167815]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[1.0716551256718581, 0.17994048657185546, -1.5519012264281451, -2.7096782264281476, 0.97524842457185423, 0.6817444735718543, -3.2122702248281474, 0.098609465071855862, -3.7065974289281467, -2.5137054504281471, -1.5312283724281461, -3.3913541264281468, -2.2982613664281466, -2.4280980724281473, -2.7096782264281476, -2.7096782264281476, -2.6003620589281473, -2.9129507569281481, -2.0366331864281477, -1.8290013664281464, -2.1431424504281473, -1.5312283724281461, -2.7523760229281482]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	1,
			"case":	1,
			"size":	23
		}, {
			"switch":	1,
			"case":	2,
			"size":	23
		}, {
			"switch":	2,
			"case":	431,
			"size":	23
		}, {
			"switch":	2,
			"case":	432,
			"size":	23
		}, {
			"switch":	2,
			"case":	433,
			"size":	23
		}, {
			"switch":	2,
			"case":	434,
			"size":	23
		}, {
			"switch":	3,
			"case":	1,
			"size":	23
		}, {
			"switch":	4,
			"case":	431,
			"size":	23
		}, {
			"switch":	4,
			"case":	432,
			"size":	23
		}, {
			"switch":	4,
			"case":	433,
			"size":	23
		}, {
			"switch":	4,
			"case":	434,
			"size":	23
		}, {
			"switch":	5,
			"case":	1,
			"size":	23
		}, {
			"switch":	6,
			"case":	431,
			"size":	23
		}, {
			"switch":	6,
			"case":	432,
			"size":	23
		}, {
			"switch":	6,
			"case":	433,
			"size":	23
		}, {
			"switch":	6,
			"case":	434,
			"size":	23
		}, {
			"switch":	7,
			"case":	1,
			"size":	23
		}, {
			"switch":	8,
			"case":	431,
			"size":	23
		}, {
			"switch":	8,
			"case":	432,
			"size":	23
		}, {
			"switch":	8,
			"case":	433,
			"size":	23
		}, {
			"switch":	8,
			"case":	434,
			"size":	23
		}, {
			"switch":	9,
			"case":	1,
			"size":	23
		}, {
			"switch":	9,
			"case":	2,
			"size":	23
		}, {
			"switch":	9,
			"case":	3,
			"size":	23
		}, {
			"switch":	10,
			"case":	1,
			"size":	23
		}, {
			"switch":	11,
			"case":	1,
			"size":	23
		}, {
			"switch":	11,
			"case":	2,
			"size":	23
		}, {
			"switch":	12,
			"case":	431,
			"size":	23
		}, {
			"switch":	12,
			"case":	432,
			"size":	23
		}, {
			"switch":	12,
			"case":	433,
			"size":	23
		}, {
			"switch":	12,
			"case":	434,
			"size":	23
		}, {
			"switch":	13,
			"case":	1,
			"size":	23
		}, {
			"switch":	14,
			"case":	482,
			"size":	23
		}, {
			"switch":	14,
			"case":	483,
			"size":	23
		}, {
			"switch":	14,
			"case":	484,
			"size":	23
		}, {
			"switch":	14,
			"case":	485,
			"size":	23
		}, {
			"switch":	15,
			"case":	1,
			"size":	23
		}, {
			"switch":	16,
			"case":	482,
			"size":	23
		}, {
			"switch":	16,
			"case":	483,
			"size":	23
		}, {
			"switch":	16,
			"case":	484,
			"size":	23
		}, {
			"switch":	16,
			"case":	485,
			"size":	23
		}, {
			"switch":	17,
			"case":	1,
			"size":	23
		}, {
			"switch":	18,
			"case":	482,
			"size":	23
		}, {
			"switch":	18,
			"case":	483,
			"size":	23
		}, {
			"switch":	18,
			"case":	484,
			"size":	23
		}, {
			"switch":	18,
			"case":	485,
			"size":	23
		}, {
			"switch":	19,
			"case":	1,
			"size":	23
		}, {
			"switch":	20,
			"case":	482,
			"size":	23
		}, {
			"switch":	20,
			"case":	483,
			"size":	23
		}, {
			"switch":	20,
			"case":	484,
			"size":	23
		}, {
			"switch":	20,
			"case":	485,
			"size":	23
		}, {
			"switch":	22,
			"case":	1,
			"size":	23
		}, {
			"switch":	22,
			"case":	5,
			"size":	23
		}, {
			"switch":	23,
			"case":	431,
			"size":	23
		}, {
			"switch":	23,
			"case":	432,
			"size":	23
		}, {
			"switch":	23,
			"case":	433,
			"size":	23
		}, {
			"switch":	23,
			"case":	434,
			"size":	23
		}, {
			"switch":	24,
			"case":	1,
			"size":	23
		}, {
			"switch":	24,
			"case":	2,
			"size":	23
		}, {
			"switch":	24,
			"case":	3,
			"size":	23
		}, {
			"switch":	24,
			"case":	5,
			"size":	23
		}, {
			"switch":	25,
			"case":	1,
			"size":	23
		}, {
			"switch":	25,
			"case":	2,
			"size":	23
		}, {
			"switch":	26,
			"case":	431,
			"size":	23
		}, {
			"switch":	26,
			"case":	432,
			"size":	23
		}, {
			"switch":	26,
			"case":	433,
			"size":	23
		}, {
			"switch":	26,
			"case":	434,
			"size":	23
		}, {
			"switch":	27,
			"case":	1,
			"size":	23
		}],
	"func_locations":	[{
			"file":	"main/spprintf.c",
			"functions":	[{
					"function":	"__cmsg_nxthdr",
					"begin":	308,
					"end":	324
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"__zend_calloc",
					"begin":	103,
					"end":	108
				}, {
					"function":	"__zend_malloc",
					"begin":	93,
					"end":	101
				}, {
					"function":	"__zend_realloc",
					"begin":	110,
					"end":	118
				}, {
					"function":	"_zval_copy_ctor",
					"begin":	40,
					"end":	46
				}, {
					"function":	"_zval_dtor",
					"begin":	30,
					"end":	36
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"fstat",
					"begin":	462,
					"end":	466
				}, {
					"function":	"fstat64",
					"begin":	511,
					"end":	515
				}, {
					"function":	"fstatat",
					"begin":	469,
					"end":	474
				}, {
					"function":	"fstatat64",
					"begin":	518,
					"end":	523
				}, {
					"function":	"gc_remove_from_buffer",
					"begin":	187,
					"end":	194
				}, {
					"function":	"gc_zval_check_possible_root",
					"begin":	180,
					"end":	185
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"getline",
					"begin":	114,
					"end":	118
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"i_zend_is_true",
					"begin":	101,
					"end":	156
				}, {
					"function":	"i_zval_ptr_dtor",
					"begin":	80,
					"end":	99
				}, {
					"function":	"is_numeric_string",
					"begin":	102,
					"end":	224
				}, {
					"function":	"lstat",
					"begin":	455,
					"end":	459
				}, {
					"function":	"lstat64",
					"begin":	504,
					"end":	508
				}, {
					"function":	"mknod",
					"begin":	478,
					"end":	482
				}, {
					"function":	"mknodat",
					"begin":	486,
					"end":	491
				}, {
					"function":	"php_set_error_handling",
					"begin":	292,
					"end":	295
				}, {
					"function":	"php_std_error_handling",
					"begin":	296,
					"end":	296
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"safe_free_zval_ptr_rel",
					"begin":	62,
					"end":	69
				}, {
					"function":	"smart_str_print_long",
					"begin":	153,
					"end":	157
				}, {
					"function":	"smart_str_print_unsigned",
					"begin":	159,
					"end":	163
				}, {
					"function":	"spprintf",
					"begin":	811,
					"end":	820
				}, {
					"function":	"stat",
					"begin":	448,
					"end":	452
				}, {
					"function":	"stat64",
					"begin":	497,
					"end":	501
				}, {
					"function":	"strtoimax",
					"begin":	323,
					"end":	328
				}, {
					"function":	"strtoumax",
					"begin":	335,
					"end":	340
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"vspprintf",
					"begin":	794,
					"end":	808
				}, {
					"function":	"wcstoimax",
					"begin":	347,
					"end":	352
				}, {
					"function":	"wcstoumax",
					"begin":	361,
					"end":	366
				}, {
					"function":	"xbuf_format_converter",
					"begin":	196,
					"end":	788
				}, {
					"function":	"zend_arg_types_stack_2_pop",
					"begin":	355,
					"end":	363
				}, {
					"function":	"zend_arg_types_stack_3_pop",
					"begin":	365,
					"end":	374
				}, {
					"function":	"zend_dval_to_lval",
					"begin":	77,
					"end":	83
				}, {
					"function":	"zend_inline_hash_func",
					"begin":	261,
					"end":	288
				}, {
					"function":	"zend_memnstr",
					"begin":	226,
					"end":	257
				}, {
					"function":	"zend_memrchr",
					"begin":	259,
					"end":	274
				}, {
					"function":	"zend_objects_store_del_ref_by_handle",
					"begin":	71,
					"end":	73
				}, {
					"function":	"zend_ptr_stack_2_pop",
					"begin":	93,
					"end":	98
				}, {
					"function":	"zend_ptr_stack_2_push",
					"begin":	72,
					"end":	83
				}, {
					"function":	"zend_ptr_stack_3_pop",
					"begin":	85,
					"end":	91
				}, {
					"function":	"zend_ptr_stack_3_push",
					"begin":	58,
					"end":	70
				}, {
					"function":	"zend_ptr_stack_pop",
					"begin":	108,
					"end":	112
				}, {
					"function":	"zend_ptr_stack_push",
					"begin":	100,
					"end":	106
				}, {
					"function":	"zend_symtable_del",
					"begin":	355,
					"end":	359
				}, {
					"function":	"zend_symtable_exists",
					"begin":	369,
					"end":	373
				}, {
					"function":	"zend_symtable_find",
					"begin":	362,
					"end":	366
				}, {
					"function":	"zend_symtable_update",
					"begin":	348,
					"end":	352
				}, {
					"function":	"zend_symtable_update_current_key_ex",
					"begin":	375,
					"end":	379
				}, {
					"function":	"zend_vm_stack_alloc",
					"begin":	243,
					"end":	270
				}, {
					"function":	"zend_vm_stack_clear_multiple",
					"begin":	331,
					"end":	342
				}, {
					"function":	"zend_vm_stack_destroy",
					"begin":	197,
					"end":	206
				}, {
					"function":	"zend_vm_stack_extend",
					"begin":	208,
					"end":	213
				}, {
					"function":	"zend_vm_stack_free",
					"begin":	284,
					"end":	300
				}, {
					"function":	"zend_vm_stack_free_int",
					"begin":	272,
					"end":	282
				}, {
					"function":	"zend_vm_stack_get_arg",
					"begin":	344,
					"end":	353
				}, {
					"function":	"zend_vm_stack_init",
					"begin":	192,
					"end":	195
				}, {
					"function":	"zend_vm_stack_new_page",
					"begin":	183,
					"end":	190
				}, {
					"function":	"zend_vm_stack_pop",
					"begin":	231,
					"end":	241
				}, {
					"function":	"zend_vm_stack_push",
					"begin":	220,
					"end":	224
				}, {
					"function":	"zend_vm_stack_push_args",
					"begin":	302,
					"end":	329
				}, {
					"function":	"zend_vm_stack_push_nocheck",
					"begin":	226,
					"end":	229
				}, {
					"function":	"zend_vm_stack_top",
					"begin":	215,
					"end":	218
				}, {
					"function":	"zval_addref_p",
					"begin":	386,
					"end":	388
				}, {
					"function":	"zval_delref_p",
					"begin":	390,
					"end":	392
				}, {
					"function":	"zval_isref_p",
					"begin":	394,
					"end":	396
				}, {
					"function":	"zval_refcount_p",
					"begin":	378,
					"end":	380
				}, {
					"function":	"zval_set_isref_p",
					"begin":	398,
					"end":	400
				}, {
					"function":	"zval_set_isref_to_p",
					"begin":	406,
					"end":	408
				}, {
					"function":	"zval_set_refcount_p",
					"begin":	382,
					"end":	384
				}, {
					"function":	"zval_unset_isref_p",
					"begin":	402,
					"end":	404
				}]
		}]
}
