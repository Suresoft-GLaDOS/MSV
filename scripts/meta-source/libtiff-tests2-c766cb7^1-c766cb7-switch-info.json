{
	"switch_num":	30,
	"case_num":	[223, 3, 2, 223, 235, 223, 232, 223, 3, 2, 223, 1, 223, 5, 2, 224, 3, 2, 223, 3, 223, 242, 10, 2, 1, 223, 22, 2, 223, 21],
	"switch_cluster":	[[2, 4, 6, 9, 11, 14, 17, 23, 24, 26, 27, 29], [1, 8, 13, 16, 19, 22], [0, 3, 5, 7, 10, 12, 15, 18, 20, 21, 25, 28], []],
	"priority":	[{
			"file":	"libtiff/tif_aux.c",
			"line":	40,
			"primary_score":	55999999,
			"second_score":	2875
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	41,
			"primary_score":	55999999,
			"second_score":	2874
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	46,
			"primary_score":	55999999,
			"second_score":	2873
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	47,
			"primary_score":	55999999,
			"second_score":	2872
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	49,
			"primary_score":	55999999,
			"second_score":	2870
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	53,
			"primary_score":	55999999,
			"second_score":	2869
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	59,
			"primary_score":	55999999,
			"second_score":	2876
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	48,
			"primary_score":	55999999,
			"second_score":	381
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	52,
			"primary_score":	17000000,
			"second_score":	353
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	53,
			"primary_score":	55999999,
			"second_score":	380
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	54,
			"primary_score":	55999999,
			"second_score":	378
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	56,
			"primary_score":	55999999,
			"second_score":	333
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	57,
			"primary_score":	48999999,
			"second_score":	646
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	60,
			"primary_score":	55999999,
			"second_score":	330
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	69,
			"primary_score":	55999999,
			"second_score":	329
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	71,
			"primary_score":	55999999,
			"second_score":	328
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	72,
			"primary_score":	48999999,
			"second_score":	641
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	75,
			"primary_score":	55999999,
			"second_score":	324
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	77,
			"primary_score":	55999999,
			"second_score":	323
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	79,
			"primary_score":	55999999,
			"second_score":	322
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	81,
			"primary_score":	55999999,
			"second_score":	47
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	82,
			"primary_score":	55999999,
			"second_score":	46
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	90,
			"primary_score":	55999999,
			"second_score":	45
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	93,
			"primary_score":	55999999,
			"second_score":	43
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	113,
			"primary_score":	17000000,
			"second_score":	357
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	114,
			"primary_score":	17000000,
			"second_score":	356
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	116,
			"primary_score":	17000000,
			"second_score":	355
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	117,
			"primary_score":	17000000,
			"second_score":	13
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	133,
			"primary_score":	55999999,
			"second_score":	379
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	138,
			"primary_score":	55999999,
			"second_score":	7824
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	139,
			"primary_score":	55999999,
			"second_score":	7823
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	140,
			"primary_score":	55999999,
			"second_score":	7822
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	141,
			"primary_score":	55999999,
			"second_score":	7821
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	142,
			"primary_score":	55999999,
			"second_score":	7820
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	143,
			"primary_score":	55999999,
			"second_score":	7819
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	144,
			"primary_score":	55999999,
			"second_score":	7818
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	145,
			"primary_score":	55999999,
			"second_score":	7817
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	146,
			"primary_score":	55999999,
			"second_score":	7816
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	147,
			"primary_score":	55999999,
			"second_score":	7815
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	148,
			"primary_score":	55999999,
			"second_score":	7814
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	149,
			"primary_score":	55999999,
			"second_score":	7813
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	150,
			"primary_score":	55999999,
			"second_score":	7812
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	151,
			"primary_score":	55999999,
			"second_score":	7811
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	152,
			"primary_score":	55999999,
			"second_score":	7810
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	153,
			"primary_score":	55999999,
			"second_score":	7809
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	154,
			"primary_score":	55999999,
			"second_score":	7808
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	155,
			"primary_score":	55999999,
			"second_score":	7807
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	156,
			"primary_score":	55999999,
			"second_score":	7806
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	157,
			"primary_score":	55999999,
			"second_score":	7805
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	646,
			"primary_score":	55999999,
			"second_score":	720
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	647,
			"primary_score":	55999999,
			"second_score":	718
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	648,
			"primary_score":	55999999,
			"second_score":	717
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	650,
			"primary_score":	55999999,
			"second_score":	706
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	678,
			"primary_score":	55999999,
			"second_score":	725
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	679,
			"primary_score":	55999999,
			"second_score":	724
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	681,
			"primary_score":	55999999,
			"second_score":	723
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	682,
			"primary_score":	55999999,
			"second_score":	722
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	683,
			"primary_score":	55999999,
			"second_score":	705
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	684,
			"primary_score":	55999999,
			"second_score":	704
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	696,
			"primary_score":	55999999,
			"second_score":	721
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1024,
			"primary_score":	55999999,
			"second_score":	377
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1025,
			"primary_score":	55999999,
			"second_score":	376
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1027,
			"primary_score":	55999999,
			"second_score":	375
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1028,
			"primary_score":	55999999,
			"second_score":	373
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1029,
			"primary_score":	55999999,
			"second_score":	370
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1030,
			"primary_score":	55999999,
			"second_score":	367
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1031,
			"primary_score":	55999999,
			"second_score":	364
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1032,
			"primary_score":	55999999,
			"second_score":	361
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1033,
			"primary_score":	55999999,
			"second_score":	358
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1034,
			"primary_score":	55999999,
			"second_score":	355
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1035,
			"primary_score":	55999999,
			"second_score":	352
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1036,
			"primary_score":	55999999,
			"second_score":	349
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1037,
			"primary_score":	55999999,
			"second_score":	346
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1038,
			"primary_score":	55999999,
			"second_score":	343
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1039,
			"primary_score":	55999999,
			"second_score":	340
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1040,
			"primary_score":	55999999,
			"second_score":	339
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1043,
			"primary_score":	55999999,
			"second_score":	338
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1048,
			"primary_score":	55999999,
			"second_score":	337
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1049,
			"primary_score":	55999999,
			"second_score":	336
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1076,
			"primary_score":	2000000,
			"second_score":	3122
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1077,
			"primary_score":	2000000,
			"second_score":	372
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1078,
			"primary_score":	2000000,
			"second_score":	371
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1079,
			"primary_score":	2000000,
			"second_score":	370
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1080,
			"primary_score":	2000000,
			"second_score":	369
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1081,
			"primary_score":	2000000,
			"second_score":	368
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1083,
			"primary_score":	2000000,
			"second_score":	367
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1092,
			"primary_score":	55999999,
			"second_score":	3305
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1093,
			"primary_score":	55999999,
			"second_score":	3304
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1095,
			"primary_score":	55999999,
			"second_score":	3303
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1096,
			"primary_score":	55999999,
			"second_score":	3301
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1098,
			"primary_score":	55999999,
			"second_score":	887
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1099,
			"primary_score":	55999999,
			"second_score":	885
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1100,
			"primary_score":	55999999,
			"second_score":	884
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1101,
			"primary_score":	55999999,
			"second_score":	883
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1102,
			"primary_score":	55999999,
			"second_score":	882
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1103,
			"primary_score":	55999999,
			"second_score":	881
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1104,
			"primary_score":	55999999,
			"second_score":	880
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1105,
			"primary_score":	55999999,
			"second_score":	879
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1106,
			"primary_score":	55999999,
			"second_score":	878
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1107,
			"primary_score":	55999999,
			"second_score":	877
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1108,
			"primary_score":	55999999,
			"second_score":	876
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1109,
			"primary_score":	55999999,
			"second_score":	875
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1110,
			"primary_score":	55999999,
			"second_score":	874
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1111,
			"primary_score":	55999999,
			"second_score":	873
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1112,
			"primary_score":	55999999,
			"second_score":	872
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1113,
			"primary_score":	55999999,
			"second_score":	871
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1114,
			"primary_score":	55999999,
			"second_score":	870
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1115,
			"primary_score":	55999999,
			"second_score":	869
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1116,
			"primary_score":	55999999,
			"second_score":	868
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1117,
			"primary_score":	55999999,
			"second_score":	867
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1118,
			"primary_score":	55999999,
			"second_score":	866
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1119,
			"primary_score":	55999999,
			"second_score":	865
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1124,
			"primary_score":	55999999,
			"second_score":	864
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1126,
			"primary_score":	55999999,
			"second_score":	863
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1135,
			"primary_score":	55999999,
			"second_score":	840
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1142,
			"primary_score":	55999999,
			"second_score":	839
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1144,
			"primary_score":	55999999,
			"second_score":	838
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	262,
			"primary_score":	55999999,
			"second_score":	3302
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	274,
			"primary_score":	55999999,
			"second_score":	3300
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	275,
			"primary_score":	2000000,
			"second_score":	3115
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	277,
			"primary_score":	2000000,
			"second_score":	3114
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	279,
			"primary_score":	2000000,
			"second_score":	2839
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	280,
			"primary_score":	2000000,
			"second_score":	2838
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	287,
			"primary_score":	2000000,
			"second_score":	2837
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	288,
			"primary_score":	2000000,
			"second_score":	2835
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	290,
			"primary_score":	55999999,
			"second_score":	3299
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	300,
			"primary_score":	55999999,
			"second_score":	892
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	301,
			"primary_score":	55999999,
			"second_score":	891
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	303,
			"primary_score":	55999999,
			"second_score":	890
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	304,
			"primary_score":	55999999,
			"second_score":	889
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	306,
			"primary_score":	55999999,
			"second_score":	2261
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	375,
			"primary_score":	55999999,
			"second_score":	3298
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	376,
			"primary_score":	55999999,
			"second_score":	3297
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	377,
			"primary_score":	55999999,
			"second_score":	3296
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	378,
			"primary_score":	55999999,
			"second_score":	3295
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	380,
			"primary_score":	55999999,
			"second_score":	3294
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	381,
			"primary_score":	55999999,
			"second_score":	2882
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	383,
			"primary_score":	55999999,
			"second_score":	2880
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	392,
			"primary_score":	55999999,
			"second_score":	2879
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	394,
			"primary_score":	55999999,
			"second_score":	2878
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	400,
			"primary_score":	55999999,
			"second_score":	2877
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	404,
			"primary_score":	55999999,
			"second_score":	2868
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	409,
			"primary_score":	55999999,
			"second_score":	2867
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	410,
			"primary_score":	55999999,
			"second_score":	2866
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	414,
			"primary_score":	55999999,
			"second_score":	2865
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	417,
			"primary_score":	55999999,
			"second_score":	888
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	629,
			"primary_score":	55999999,
			"second_score":	719
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	256,
			"primary_score":	48999999,
			"second_score":	740
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	257,
			"primary_score":	48999999,
			"second_score":	739
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	259,
			"primary_score":	48999999,
			"second_score":	738
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	280,
			"primary_score":	48999999,
			"second_score":	728
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2730,
			"primary_score":	48999999,
			"second_score":	737
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2731,
			"primary_score":	48999999,
			"second_score":	736
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2732,
			"primary_score":	43999999,
			"second_score":	735
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3278,
			"primary_score":	48999999,
			"second_score":	4060
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3279,
			"primary_score":	48999999,
			"second_score":	4059
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3280,
			"primary_score":	48999999,
			"second_score":	4058
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3281,
			"primary_score":	48999999,
			"second_score":	4057
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3282,
			"primary_score":	48999999,
			"second_score":	4056
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3283,
			"primary_score":	48999999,
			"second_score":	4055
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3284,
			"primary_score":	48999999,
			"second_score":	4054
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3285,
			"primary_score":	48999999,
			"second_score":	4053
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3286,
			"primary_score":	48999999,
			"second_score":	4052
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3288,
			"primary_score":	48999999,
			"second_score":	4032
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3289,
			"primary_score":	48999999,
			"second_score":	4030
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3290,
			"primary_score":	48999999,
			"second_score":	4029
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3291,
			"primary_score":	48999999,
			"second_score":	3391
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3297,
			"primary_score":	48999999,
			"second_score":	3390
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3298,
			"primary_score":	48999999,
			"second_score":	3352
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3300,
			"primary_score":	48999999,
			"second_score":	3351
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3301,
			"primary_score":	48999999,
			"second_score":	3306
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3308,
			"primary_score":	48999999,
			"second_score":	837
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3326,
			"primary_score":	48999999,
			"second_score":	814
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3327,
			"primary_score":	48999999,
			"second_score":	800
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3329,
			"primary_score":	48999999,
			"second_score":	799
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3330,
			"primary_score":	48999999,
			"second_score":	702
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3844,
			"primary_score":	48999999,
			"second_score":	701
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3845,
			"primary_score":	48999999,
			"second_score":	699
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3851,
			"primary_score":	48999999,
			"second_score":	3389
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3852,
			"primary_score":	48999999,
			"second_score":	3388
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3853,
			"primary_score":	48999999,
			"second_score":	3387
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3854,
			"primary_score":	48999999,
			"second_score":	3386
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3855,
			"primary_score":	48999999,
			"second_score":	3385
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3856,
			"primary_score":	48999999,
			"second_score":	3384
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3858,
			"primary_score":	48999999,
			"second_score":	3354
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3864,
			"primary_score":	48999999,
			"second_score":	3353
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3871,
			"primary_score":	48999999,
			"second_score":	813
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3872,
			"primary_score":	48999999,
			"second_score":	812
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3873,
			"primary_score":	48999999,
			"second_score":	811
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3874,
			"primary_score":	48999999,
			"second_score":	810
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3876,
			"primary_score":	48999999,
			"second_score":	802
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3877,
			"primary_score":	48999999,
			"second_score":	801
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3885,
			"primary_score":	48999999,
			"second_score":	793
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3886,
			"primary_score":	48999999,
			"second_score":	792
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3887,
			"primary_score":	48999999,
			"second_score":	791
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3888,
			"primary_score":	48999999,
			"second_score":	790
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3890,
			"primary_score":	48999999,
			"second_score":	759
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3895,
			"primary_score":	48999999,
			"second_score":	758
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3896,
			"primary_score":	48999999,
			"second_score":	757
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3897,
			"primary_score":	48999999,
			"second_score":	756
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3898,
			"primary_score":	48999999,
			"second_score":	761
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3899,
			"primary_score":	48999999,
			"second_score":	775
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3901,
			"primary_score":	48999999,
			"second_score":	760
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3903,
			"primary_score":	48999999,
			"second_score":	755
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3905,
			"primary_score":	48999999,
			"second_score":	754
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3907,
			"primary_score":	48999999,
			"second_score":	753
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3908,
			"primary_score":	48999999,
			"second_score":	752
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3911,
			"primary_score":	48999999,
			"second_score":	751
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4128,
			"primary_score":	48999999,
			"second_score":	4051
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4130,
			"primary_score":	48999999,
			"second_score":	4050
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4133,
			"primary_score":	48999999,
			"second_score":	4049
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4138,
			"primary_score":	48999999,
			"second_score":	4048
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4140,
			"primary_score":	48999999,
			"second_score":	4047
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4141,
			"primary_score":	48999999,
			"second_score":	4046
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4147,
			"primary_score":	48999999,
			"second_score":	4045
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4149,
			"primary_score":	48999999,
			"second_score":	4037
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4151,
			"primary_score":	48999999,
			"second_score":	4036
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4152,
			"primary_score":	48999999,
			"second_score":	4035
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4155,
			"primary_score":	48999999,
			"second_score":	4034
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4157,
			"primary_score":	48999999,
			"second_score":	4033
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4192,
			"primary_score":	48999999,
			"second_score":	4028
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4194,
			"primary_score":	48999999,
			"second_score":	4027
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4195,
			"primary_score":	48999999,
			"second_score":	4026
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4196,
			"primary_score":	48999999,
			"second_score":	4025
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4197,
			"primary_score":	48999999,
			"second_score":	4024
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4198,
			"primary_score":	48999999,
			"second_score":	4023
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4199,
			"primary_score":	48999999,
			"second_score":	4022
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4200,
			"primary_score":	48999999,
			"second_score":	4021
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4202,
			"primary_score":	48999999,
			"second_score":	4020
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4204,
			"primary_score":	48999999,
			"second_score":	4019
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4205,
			"primary_score":	48999999,
			"second_score":	4018
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4206,
			"primary_score":	48999999,
			"second_score":	4017
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4207,
			"primary_score":	48999999,
			"second_score":	4016
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4283,
			"primary_score":	48999999,
			"second_score":	4015
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4284,
			"primary_score":	48999999,
			"second_score":	4014
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4285,
			"primary_score":	48999999,
			"second_score":	4013
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4300,
			"primary_score":	48999999,
			"second_score":	4012
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4302,
			"primary_score":	48999999,
			"second_score":	4011
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4303,
			"primary_score":	48999999,
			"second_score":	4010
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4308,
			"primary_score":	48999999,
			"second_score":	4009
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4311,
			"primary_score":	48999999,
			"second_score":	4007
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4312,
			"primary_score":	48999999,
			"second_score":	4006
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4313,
			"primary_score":	43999999,
			"second_score":	4005
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4314,
			"primary_score":	48999999,
			"second_score":	3998
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4320,
			"primary_score":	48999999,
			"second_score":	3997
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4347,
			"primary_score":	48999999,
			"second_score":	3996
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4350,
			"primary_score":	48999999,
			"second_score":	3987
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4352,
			"primary_score":	48999999,
			"second_score":	3986
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4353,
			"primary_score":	48999999,
			"second_score":	3985
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4359,
			"primary_score":	48999999,
			"second_score":	3984
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4362,
			"primary_score":	48999999,
			"second_score":	3982
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4363,
			"primary_score":	48999999,
			"second_score":	3981
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4364,
			"primary_score":	48999999,
			"second_score":	3980
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4366,
			"primary_score":	48999999,
			"second_score":	3979
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4367,
			"primary_score":	48999999,
			"second_score":	3978
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4368,
			"primary_score":	48999999,
			"second_score":	3977
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4371,
			"primary_score":	48999999,
			"second_score":	3976
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4373,
			"primary_score":	48999999,
			"second_score":	3974
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4374,
			"primary_score":	43999999,
			"second_score":	3973
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4375,
			"primary_score":	48999999,
			"second_score":	3963
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4390,
			"primary_score":	48999999,
			"second_score":	3962
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4393,
			"primary_score":	48999999,
			"second_score":	3953
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4398,
			"primary_score":	48999999,
			"second_score":	3952
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4399,
			"primary_score":	48999999,
			"second_score":	3951
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4400,
			"primary_score":	48999999,
			"second_score":	3950
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4402,
			"primary_score":	48999999,
			"second_score":	3431
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4403,
			"primary_score":	43999999,
			"second_score":	3430
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4404,
			"primary_score":	48999999,
			"second_score":	3423
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4405,
			"primary_score":	48999999,
			"second_score":	3422
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4406,
			"primary_score":	48999999,
			"second_score":	3421
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4407,
			"primary_score":	43999999,
			"second_score":	3420
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4408,
			"primary_score":	48999999,
			"second_score":	3413
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4409,
			"primary_score":	48999999,
			"second_score":	3412
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4410,
			"primary_score":	48999999,
			"second_score":	3411
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4412,
			"primary_score":	48999999,
			"second_score":	3410
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4413,
			"primary_score":	43999999,
			"second_score":	3409
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4414,
			"primary_score":	48999999,
			"second_score":	3400
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4415,
			"primary_score":	48999999,
			"second_score":	3399
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4416,
			"primary_score":	48999999,
			"second_score":	3398
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4417,
			"primary_score":	48999999,
			"second_score":	3397
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4428,
			"primary_score":	48999999,
			"second_score":	3396
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4430,
			"primary_score":	48999999,
			"second_score":	3395
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4431,
			"primary_score":	48999999,
			"second_score":	3393
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4432,
			"primary_score":	48999999,
			"second_score":	3392
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4441,
			"primary_score":	48999999,
			"second_score":	798
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4442,
			"primary_score":	48999999,
			"second_score":	797
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4443,
			"primary_score":	48999999,
			"second_score":	796
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4444,
			"primary_score":	48999999,
			"second_score":	795
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4445,
			"primary_score":	48999999,
			"second_score":	794
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4446,
			"primary_score":	48999999,
			"second_score":	750
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4447,
			"primary_score":	48999999,
			"second_score":	749
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4448,
			"primary_score":	48999999,
			"second_score":	748
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4449,
			"primary_score":	48999999,
			"second_score":	747
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4450,
			"primary_score":	48999999,
			"second_score":	746
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4451,
			"primary_score":	48999999,
			"second_score":	745
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4519,
			"primary_score":	48999999,
			"second_score":	744
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4520,
			"primary_score":	48999999,
			"second_score":	743
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4521,
			"primary_score":	48999999,
			"second_score":	742
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4522,
			"primary_score":	48999999,
			"second_score":	741
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4523,
			"primary_score":	48999999,
			"second_score":	727
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4525,
			"primary_score":	48999999,
			"second_score":	726
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4526,
			"primary_score":	48999999,
			"second_score":	703
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	129,
			"primary_score":	2000000,
			"second_score":	4165
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	311,
			"primary_score":	2000000,
			"second_score":	4164
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	312,
			"primary_score":	2000000,
			"second_score":	4163
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	313,
			"primary_score":	2000000,
			"second_score":	4162
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	314,
			"primary_score":	2000000,
			"second_score":	4161
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	315,
			"primary_score":	2000000,
			"second_score":	4160
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	316,
			"primary_score":	2000000,
			"second_score":	4159
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	317,
			"primary_score":	2000000,
			"second_score":	4158
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	324,
			"primary_score":	2000000,
			"second_score":	4157
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	326,
			"primary_score":	2000000,
			"second_score":	4156
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	336,
			"primary_score":	2000000,
			"second_score":	4155
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	341,
			"primary_score":	2000000,
			"second_score":	4153
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	349,
			"primary_score":	2000000,
			"second_score":	4152
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	356,
			"primary_score":	2000000,
			"second_score":	4151
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	358,
			"primary_score":	2000000,
			"second_score":	4150
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	359,
			"primary_score":	2000000,
			"second_score":	4149
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	360,
			"primary_score":	2000000,
			"second_score":	4148
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	361,
			"primary_score":	2000000,
			"second_score":	4147
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	363,
			"primary_score":	2000000,
			"second_score":	3655
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	364,
			"primary_score":	2000000,
			"second_score":	3654
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	366,
			"primary_score":	2000000,
			"second_score":	3653
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	373,
			"primary_score":	2000000,
			"second_score":	3652
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	380,
			"primary_score":	2000000,
			"second_score":	3651
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	387,
			"primary_score":	2000000,
			"second_score":	3650
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	394,
			"primary_score":	2000000,
			"second_score":	3649
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	399,
			"primary_score":	2000000,
			"second_score":	3648
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	404,
			"primary_score":	2000000,
			"second_score":	3647
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	409,
			"primary_score":	2000000,
			"second_score":	3646
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	414,
			"primary_score":	2000000,
			"second_score":	3645
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	419,
			"primary_score":	2000000,
			"second_score":	3644
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	424,
			"primary_score":	2000000,
			"second_score":	3643
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	429,
			"primary_score":	2000000,
			"second_score":	3642
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	434,
			"primary_score":	2000000,
			"second_score":	3641
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	439,
			"primary_score":	2000000,
			"second_score":	3640
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	444,
			"primary_score":	2000000,
			"second_score":	3639
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	449,
			"primary_score":	2000000,
			"second_score":	3638
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	454,
			"primary_score":	2000000,
			"second_score":	3637
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	459,
			"primary_score":	2000000,
			"second_score":	3636
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	464,
			"primary_score":	2000000,
			"second_score":	3635
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	477,
			"primary_score":	2000000,
			"second_score":	3634
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	490,
			"primary_score":	2000000,
			"second_score":	3633
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	495,
			"primary_score":	2000000,
			"second_score":	3632
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	506,
			"primary_score":	2000000,
			"second_score":	3631
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	511,
			"primary_score":	2000000,
			"second_score":	3630
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	516,
			"primary_score":	2000000,
			"second_score":	3629
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	521,
			"primary_score":	2000000,
			"second_score":	3628
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	526,
			"primary_score":	2000000,
			"second_score":	3627
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	531,
			"primary_score":	2000000,
			"second_score":	3626
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	536,
			"primary_score":	2000000,
			"second_score":	3625
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	541,
			"primary_score":	2000000,
			"second_score":	3624
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	546,
			"primary_score":	2000000,
			"second_score":	3623
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	551,
			"primary_score":	2000000,
			"second_score":	3622
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	556,
			"primary_score":	2000000,
			"second_score":	3621
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	561,
			"primary_score":	2000000,
			"second_score":	3620
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	562,
			"primary_score":	2000000,
			"second_score":	3619
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	563,
			"primary_score":	2000000,
			"second_score":	3618
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	564,
			"primary_score":	2000000,
			"second_score":	3206
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	565,
			"primary_score":	2000000,
			"second_score":	3205
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	566,
			"primary_score":	2000000,
			"second_score":	3204
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	625,
			"primary_score":	2000000,
			"second_score":	3203
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	698,
			"primary_score":	2000000,
			"second_score":	3202
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	699,
			"primary_score":	2000000,
			"second_score":	3201
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	700,
			"primary_score":	2000000,
			"second_score":	3692
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	701,
			"primary_score":	2000000,
			"second_score":	3690
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	706,
			"primary_score":	2000000,
			"second_score":	3689
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	708,
			"primary_score":	2000000,
			"second_score":	3688
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	713,
			"primary_score":	2000000,
			"second_score":	3665
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	715,
			"primary_score":	2000000,
			"second_score":	3664
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	716,
			"primary_score":	2000000,
			"second_score":	3663
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	719,
			"primary_score":	2000000,
			"second_score":	3662
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	720,
			"primary_score":	2000000,
			"second_score":	3661
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	721,
			"primary_score":	2000000,
			"second_score":	3660
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	722,
			"primary_score":	2000000,
			"second_score":	3659
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	727,
			"primary_score":	2000000,
			"second_score":	3658
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	729,
			"primary_score":	2000000,
			"second_score":	3657
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	730,
			"primary_score":	2000000,
			"second_score":	3656
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	732,
			"primary_score":	2000000,
			"second_score":	3200
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	734,
			"primary_score":	2000000,
			"second_score":	3199
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	750,
			"primary_score":	2000000,
			"second_score":	3198
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	751,
			"primary_score":	2000000,
			"second_score":	3196
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	756,
			"primary_score":	2000000,
			"second_score":	3195
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	758,
			"primary_score":	2000000,
			"second_score":	3194
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	759,
			"primary_score":	2000000,
			"second_score":	3193
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	760,
			"primary_score":	2000000,
			"second_score":	3192
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	761,
			"primary_score":	2000000,
			"second_score":	3191
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	762,
			"primary_score":	2000000,
			"second_score":	3190
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	764,
			"primary_score":	2000000,
			"second_score":	3189
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	765,
			"primary_score":	2000000,
			"second_score":	3188
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	766,
			"primary_score":	2000000,
			"second_score":	3187
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	784,
			"primary_score":	2000000,
			"second_score":	3186
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	816,
			"primary_score":	2000000,
			"second_score":	3185
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	817,
			"primary_score":	2000000,
			"second_score":	3183
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	818,
			"primary_score":	2000000,
			"second_score":	3182
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	823,
			"primary_score":	2000000,
			"second_score":	3178
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	828,
			"primary_score":	2000000,
			"second_score":	3174
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	829,
			"primary_score":	2000000,
			"second_score":	3172
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	831,
			"primary_score":	2000000,
			"second_score":	3171
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	832,
			"primary_score":	2000000,
			"second_score":	3126
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	833,
			"primary_score":	2000000,
			"second_score":	3125
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	838,
			"primary_score":	2000000,
			"second_score":	3123
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	840,
			"primary_score":	2000000,
			"second_score":	366
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2090,
			"primary_score":	2000000,
			"second_score":	3687
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2092,
			"primary_score":	2000000,
			"second_score":	3686
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2097,
			"primary_score":	2000000,
			"second_score":	3682
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2147,
			"primary_score":	2000000,
			"second_score":	3681
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2149,
			"primary_score":	2000000,
			"second_score":	3680
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2150,
			"primary_score":	2000000,
			"second_score":	3679
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2151,
			"primary_score":	2000000,
			"second_score":	3678
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2152,
			"primary_score":	2000000,
			"second_score":	3677
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2154,
			"primary_score":	2000000,
			"second_score":	3676
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2158,
			"primary_score":	2000000,
			"second_score":	3675
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2159,
			"primary_score":	2000000,
			"second_score":	3674
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2160,
			"primary_score":	2000000,
			"second_score":	3670
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2165,
			"primary_score":	2000000,
			"second_score":	3666
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	53,
			"primary_score":	3000000,
			"second_score":	4179
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	54,
			"primary_score":	3000000,
			"second_score":	4178
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	55,
			"primary_score":	3000000,
			"second_score":	4177
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	56,
			"primary_score":	3000000,
			"second_score":	4176
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	57,
			"primary_score":	3000000,
			"second_score":	4171
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	59,
			"primary_score":	3000000,
			"second_score":	4170
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	65,
			"primary_score":	55999999,
			"second_score":	716
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	66,
			"primary_score":	55999999,
			"second_score":	715
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	67,
			"primary_score":	55999999,
			"second_score":	714
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	68,
			"primary_score":	55999999,
			"second_score":	713
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	69,
			"primary_score":	55999999,
			"second_score":	708
		}, {
			"file":	"libtiff/tif_error.c",
			"line":	71,
			"primary_score":	55999999,
			"second_score":	707
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	36,
			"primary_score":	17000000,
			"second_score":	352
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	37,
			"primary_score":	17000000,
			"second_score":	351
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	38,
			"primary_score":	17000000,
			"second_score":	348
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	58,
			"primary_score":	17000000,
			"second_score":	350
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	59,
			"primary_score":	17000000,
			"second_score":	349
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	51,
			"primary_score":	55999999,
			"second_score":	7855
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	53,
			"primary_score":	55999999,
			"second_score":	7854
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	56,
			"primary_score":	48999999,
			"second_score":	4162
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	58,
			"primary_score":	48999999,
			"second_score":	4161
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	62,
			"primary_score":	51000000,
			"second_score":	7853
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	63,
			"primary_score":	51000000,
			"second_score":	7852
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	64,
			"primary_score":	51000000,
			"second_score":	7851
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	69,
			"primary_score":	55999999,
			"second_score":	7850
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	85,
			"primary_score":	55999999,
			"second_score":	7874
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	86,
			"primary_score":	55999999,
			"second_score":	7873
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	87,
			"primary_score":	55999999,
			"second_score":	7872
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	88,
			"primary_score":	55999999,
			"second_score":	7871
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	93,
			"primary_score":	55999999,
			"second_score":	7870
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	94,
			"primary_score":	55999999,
			"second_score":	7869
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	95,
			"primary_score":	55999999,
			"second_score":	7868
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	96,
			"primary_score":	55999999,
			"second_score":	7867
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	97,
			"primary_score":	55999999,
			"second_score":	7866
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	98,
			"primary_score":	55999999,
			"second_score":	7865
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	99,
			"primary_score":	55999999,
			"second_score":	7864
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	100,
			"primary_score":	55999999,
			"second_score":	7863
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	101,
			"primary_score":	55999999,
			"second_score":	7862
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	102,
			"primary_score":	55999999,
			"second_score":	7861
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	103,
			"primary_score":	55999999,
			"second_score":	7860
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	107,
			"primary_score":	55999999,
			"second_score":	7859
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	108,
			"primary_score":	55999999,
			"second_score":	7858
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	112,
			"primary_score":	55999999,
			"second_score":	7857
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	116,
			"primary_score":	55999999,
			"second_score":	7856
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	117,
			"primary_score":	55999999,
			"second_score":	7849
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	119,
			"primary_score":	55999999,
			"second_score":	7848
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	120,
			"primary_score":	55999999,
			"second_score":	7846
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	124,
			"primary_score":	55999999,
			"second_score":	7845
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	125,
			"primary_score":	55999999,
			"second_score":	7843
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	126,
			"primary_score":	55999999,
			"second_score":	7842
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	127,
			"primary_score":	55999999,
			"second_score":	7841
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	128,
			"primary_score":	55999999,
			"second_score":	7840
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	129,
			"primary_score":	55999999,
			"second_score":	7839
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	130,
			"primary_score":	55999999,
			"second_score":	7838
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	131,
			"primary_score":	55999999,
			"second_score":	7837
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	132,
			"primary_score":	55999999,
			"second_score":	7836
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	133,
			"primary_score":	55999999,
			"second_score":	7835
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	138,
			"primary_score":	55999999,
			"second_score":	7834
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	139,
			"primary_score":	55999999,
			"second_score":	7833
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	140,
			"primary_score":	55999999,
			"second_score":	7832
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	141,
			"primary_score":	55999999,
			"second_score":	7831
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	142,
			"primary_score":	55999999,
			"second_score":	7830
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	143,
			"primary_score":	55999999,
			"second_score":	7829
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	144,
			"primary_score":	55999999,
			"second_score":	7828
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	147,
			"primary_score":	55999999,
			"second_score":	7827
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	148,
			"primary_score":	55999999,
			"second_score":	7826
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	151,
			"primary_score":	55999999,
			"second_score":	7825
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	157,
			"primary_score":	55999999,
			"second_score":	7804
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	158,
			"primary_score":	55999999,
			"second_score":	7803
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	159,
			"primary_score":	48999999,
			"second_score":	4112
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	162,
			"primary_score":	55999999,
			"second_score":	7802
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	163,
			"primary_score":	48999999,
			"second_score":	4110
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	218,
			"primary_score":	55999999,
			"second_score":	7801
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	271,
			"primary_score":	55999999,
			"second_score":	7800
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	273,
			"primary_score":	51000000,
			"second_score":	7796
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	285,
			"primary_score":	51000000,
			"second_score":	7795
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	288,
			"primary_score":	51000000,
			"second_score":	7794
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	290,
			"primary_score":	51000000,
			"second_score":	7793
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	291,
			"primary_score":	51000000,
			"second_score":	7792
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	292,
			"primary_score":	51000000,
			"second_score":	7791
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	294,
			"primary_score":	51000000,
			"second_score":	7790
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	316,
			"primary_score":	51000000,
			"second_score":	7789
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	317,
			"primary_score":	51000000,
			"second_score":	7785
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	325,
			"primary_score":	51000000,
			"second_score":	7781
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	337,
			"primary_score":	51000000,
			"second_score":	7780
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	339,
			"primary_score":	51000000,
			"second_score":	5311
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	340,
			"primary_score":	51000000,
			"second_score":	5310
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	341,
			"primary_score":	51000000,
			"second_score":	5309
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	342,
			"primary_score":	51000000,
			"second_score":	5308
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	343,
			"primary_score":	51000000,
			"second_score":	5307
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	348,
			"primary_score":	48999999,
			"second_score":	4104
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	369,
			"primary_score":	48999999,
			"second_score":	4103
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	371,
			"primary_score":	43999999,
			"second_score":	4102
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	378,
			"primary_score":	48999999,
			"second_score":	4101
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	379,
			"primary_score":	43999999,
			"second_score":	4100
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	380,
			"primary_score":	48999999,
			"second_score":	4093
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	388,
			"primary_score":	48999999,
			"second_score":	4092
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	390,
			"primary_score":	48999999,
			"second_score":	4091
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	391,
			"primary_score":	43999999,
			"second_score":	4090
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	392,
			"primary_score":	48999999,
			"second_score":	4080
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	426,
			"primary_score":	48999999,
			"second_score":	4079
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	427,
			"primary_score":	48999999,
			"second_score":	4078
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	428,
			"primary_score":	48999999,
			"second_score":	4077
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	436,
			"primary_score":	48999999,
			"second_score":	4076
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	442,
			"primary_score":	48999999,
			"second_score":	4075
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	445,
			"primary_score":	48999999,
			"second_score":	4074
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	453,
			"primary_score":	48999999,
			"second_score":	4073
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	456,
			"primary_score":	48999999,
			"second_score":	4061
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	461,
			"primary_score":	48999999,
			"second_score":	698
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	472,
			"primary_score":	48999999,
			"second_score":	697
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	474,
			"primary_score":	48999999,
			"second_score":	696
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	475,
			"primary_score":	48999999,
			"second_score":	355
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	50,
			"primary_score":	5000000,
			"second_score":	4743
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	52,
			"primary_score":	5000000,
			"second_score":	4742
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	57,
			"primary_score":	5000000,
			"second_score":	4741
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	106,
			"primary_score":	1000000,
			"second_score":	401
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	107,
			"primary_score":	1000000,
			"second_score":	400
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	108,
			"primary_score":	1000000,
			"second_score":	399
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	110,
			"primary_score":	1000000,
			"second_score":	398
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	147,
			"primary_score":	1000000,
			"second_score":	397
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	217,
			"primary_score":	1000000,
			"second_score":	406
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	218,
			"primary_score":	1000000,
			"second_score":	405
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	219,
			"primary_score":	1000000,
			"second_score":	404
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	220,
			"primary_score":	1000000,
			"second_score":	403
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	221,
			"primary_score":	1000000,
			"second_score":	402
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	226,
			"primary_score":	1000000,
			"second_score":	410
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	227,
			"primary_score":	1000000,
			"second_score":	409
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	228,
			"primary_score":	1000000,
			"second_score":	408
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	229,
			"primary_score":	1000000,
			"second_score":	407
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	230,
			"primary_score":	1000000,
			"second_score":	384
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	231,
			"primary_score":	1000000,
			"second_score":	383
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	236,
			"primary_score":	1000000,
			"second_score":	382
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	248,
			"primary_score":	4000000,
			"second_score":	4753
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	254,
			"primary_score":	4000000,
			"second_score":	4752
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	260,
			"primary_score":	4000000,
			"second_score":	4751
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	261,
			"primary_score":	4000000,
			"second_score":	4750
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	262,
			"primary_score":	4000000,
			"second_score":	4749
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	263,
			"primary_score":	4000000,
			"second_score":	4739
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	264,
			"primary_score":	4000000,
			"second_score":	4738
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	265,
			"primary_score":	4000000,
			"second_score":	4737
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	266,
			"primary_score":	4000000,
			"second_score":	4736
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	268,
			"primary_score":	4000000,
			"second_score":	4735
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	270,
			"primary_score":	4000000,
			"second_score":	4734
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	272,
			"primary_score":	4000000,
			"second_score":	4733
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	288,
			"primary_score":	5000000,
			"second_score":	4748
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	289,
			"primary_score":	5000000,
			"second_score":	4747
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	290,
			"primary_score":	5000000,
			"second_score":	4746
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	291,
			"primary_score":	5000000,
			"second_score":	4745
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	328,
			"primary_score":	5000000,
			"second_score":	4744
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	329,
			"primary_score":	5000000,
			"second_score":	4740
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	334,
			"primary_score":	2000000,
			"second_score":	394
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	335,
			"primary_score":	2000000,
			"second_score":	393
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	336,
			"primary_score":	2000000,
			"second_score":	392
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	337,
			"primary_score":	2000000,
			"second_score":	391
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	338,
			"primary_score":	2000000,
			"second_score":	381
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	339,
			"primary_score":	2000000,
			"second_score":	380
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	344,
			"primary_score":	2000000,
			"second_score":	379
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	38,
			"primary_score":	43999998,
			"second_score":	734
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	39,
			"primary_score":	43999998,
			"second_score":	733
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	40,
			"primary_score":	43999998,
			"second_score":	732
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	41,
			"primary_score":	43999998,
			"second_score":	731
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	49,
			"primary_score":	43999998,
			"second_score":	3408
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	50,
			"primary_score":	43999998,
			"second_score":	3407
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	51,
			"primary_score":	43999998,
			"second_score":	3406
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	52,
			"primary_score":	43999998,
			"second_score":	3405
		}, {
			"file":	"libtiff/tif_swab.c",
			"line":	53,
			"primary_score":	43999998,
			"second_score":	3402
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	61,
			"primary_score":	55999999,
			"second_score":	7799
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	62,
			"primary_score":	55999999,
			"second_score":	7798
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	67,
			"primary_score":	55999999,
			"second_score":	7797
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	73,
			"primary_score":	51000000,
			"second_score":	6684
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	74,
			"primary_score":	51000000,
			"second_score":	6683
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	79,
			"primary_score":	51000000,
			"second_score":	6682
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	85,
			"primary_score":	51000000,
			"second_score":	6688
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	86,
			"primary_score":	51000000,
			"second_score":	6687
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	91,
			"primary_score":	51000000,
			"second_score":	6686
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	97,
			"primary_score":	17000000,
			"second_score":	12
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	103,
			"primary_score":	48999999,
			"second_score":	4071
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	104,
			"primary_score":	48999999,
			"second_score":	4070
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	107,
			"primary_score":	48999999,
			"second_score":	4068
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	116,
			"primary_score":	48999999,
			"second_score":	4072
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	117,
			"primary_score":	48999999,
			"second_score":	4067
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	118,
			"primary_score":	48999999,
			"second_score":	4066
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	119,
			"primary_score":	48999999,
			"second_score":	4065
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	121,
			"primary_score":	48999999,
			"second_score":	4064
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	122,
			"primary_score":	48999999,
			"second_score":	4063
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	123,
			"primary_score":	48999999,
			"second_score":	4062
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	132,
			"primary_score":	48999999,
			"second_score":	640
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	133,
			"primary_score":	48999999,
			"second_score":	639
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	156,
			"primary_score":	55999999,
			"second_score":	7876
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	158,
			"primary_score":	55999999,
			"second_score":	7875
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	163,
			"primary_score":	55999999,
			"second_score":	5306
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	164,
			"primary_score":	51000000,
			"second_score":	5305
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	165,
			"primary_score":	55999999,
			"second_score":	5304
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	174,
			"primary_score":	55999999,
			"second_score":	7890
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	175,
			"primary_score":	55999999,
			"second_score":	7889
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	176,
			"primary_score":	55999999,
			"second_score":	7888
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	178,
			"primary_score":	55999999,
			"second_score":	7887
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	179,
			"primary_score":	55999999,
			"second_score":	7880
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	187,
			"primary_score":	55999999,
			"second_score":	7879
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	188,
			"primary_score":	55999999,
			"second_score":	7878
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	193,
			"primary_score":	55999999,
			"second_score":	7877
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	194,
			"primary_score":	55999999,
			"second_score":	5303
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	195,
			"primary_score":	48999999,
			"second_score":	351
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	196,
			"primary_score":	55999999,
			"second_score":	5302
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	259,
			"primary_score":	55999998,
			"second_score":	4157
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	265,
			"primary_score":	55999998,
			"second_score":	17
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	271,
			"primary_score":	55999999,
			"second_score":	2871
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	277,
			"primary_score":	55999999,
			"second_score":	374
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	283,
			"primary_score":	49999999,
			"second_score":	3975
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	306,
			"primary_score":	55999999,
			"second_score":	712
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	307,
			"primary_score":	55999999,
			"second_score":	711
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	308,
			"primary_score":	55999999,
			"second_score":	710
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	309,
			"primary_score":	55999999,
			"second_score":	709
		}, {
			"file":	"libtiff/tif_version.c",
			"line":	32,
			"primary_score":	4000000,
			"second_score":	3
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	51,
			"primary_score":	4000000,
			"second_score":	4201
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	52,
			"primary_score":	4000000,
			"second_score":	4200
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	53,
			"primary_score":	4000000,
			"second_score":	4199
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	54,
			"primary_score":	4000000,
			"second_score":	4198
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	56,
			"primary_score":	4000000,
			"second_score":	4197
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	57,
			"primary_score":	4000000,
			"second_score":	4181
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	184,
			"primary_score":	1000000,
			"second_score":	379
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	185,
			"primary_score":	1000000,
			"second_score":	378
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	186,
			"primary_score":	1000000,
			"second_score":	377
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	188,
			"primary_score":	1000000,
			"second_score":	376
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	189,
			"primary_score":	1000000,
			"second_score":	360
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	488,
			"primary_score":	5000000,
			"second_score":	4196
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	492,
			"primary_score":	5000000,
			"second_score":	4195
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	509,
			"primary_score":	5000000,
			"second_score":	4194
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	510,
			"primary_score":	5000000,
			"second_score":	4193
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	512,
			"primary_score":	5000000,
			"second_score":	4182
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	226,
			"primary_score":	2000000,
			"second_score":	7914
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	227,
			"primary_score":	2000000,
			"second_score":	7913
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	228,
			"primary_score":	2000000,
			"second_score":	7912
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	229,
			"primary_score":	2000000,
			"second_score":	7911
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	230,
			"primary_score":	2000000,
			"second_score":	7910
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	231,
			"primary_score":	2000000,
			"second_score":	7909
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	232,
			"primary_score":	2000000,
			"second_score":	7908
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	233,
			"primary_score":	2000000,
			"second_score":	7907
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	234,
			"primary_score":	2000000,
			"second_score":	7906
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	236,
			"primary_score":	2000000,
			"second_score":	7905
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	237,
			"primary_score":	2000000,
			"second_score":	7904
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	238,
			"primary_score":	2000000,
			"second_score":	7903
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	239,
			"primary_score":	2000000,
			"second_score":	7902
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	240,
			"primary_score":	2000000,
			"second_score":	7901
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	241,
			"primary_score":	2000000,
			"second_score":	7900
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	242,
			"primary_score":	2000000,
			"second_score":	7899
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	244,
			"primary_score":	2000000,
			"second_score":	7898
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	245,
			"primary_score":	2000000,
			"second_score":	7897
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	246,
			"primary_score":	2000000,
			"second_score":	7896
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	248,
			"primary_score":	2000000,
			"second_score":	7895
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	267,
			"primary_score":	2000000,
			"second_score":	7894
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	270,
			"primary_score":	2000000,
			"second_score":	7893
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	271,
			"primary_score":	2000000,
			"second_score":	7892
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	272,
			"primary_score":	2000000,
			"second_score":	7891
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	273,
			"primary_score":	2000000,
			"second_score":	5301
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	280,
			"primary_score":	2000000,
			"second_score":	5300
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	281,
			"primary_score":	2000000,
			"second_score":	5299
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	282,
			"primary_score":	2000000,
			"second_score":	5298
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	284,
			"primary_score":	2000000,
			"second_score":	5297
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	285,
			"primary_score":	2000000,
			"second_score":	5296
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	290,
			"primary_score":	2000000,
			"second_score":	5295
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	291,
			"primary_score":	2000000,
			"second_score":	5294
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	299,
			"primary_score":	2000000,
			"second_score":	5293
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	300,
			"primary_score":	2000000,
			"second_score":	5292
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	304,
			"primary_score":	2000000,
			"second_score":	5291
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	305,
			"primary_score":	2000000,
			"second_score":	5289
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	311,
			"primary_score":	2000000,
			"second_score":	5288
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	312,
			"primary_score":	2000000,
			"second_score":	5287
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	317,
			"primary_score":	2000000,
			"second_score":	5286
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	319,
			"primary_score":	2000000,
			"second_score":	5285
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	320,
			"primary_score":	2000000,
			"second_score":	5284
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	327,
			"primary_score":	2000000,
			"second_score":	5283
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	355,
			"primary_score":	2000000,
			"second_score":	5282
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	363,
			"primary_score":	2000000,
			"second_score":	5281
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	364,
			"primary_score":	2000000,
			"second_score":	5280
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	366,
			"primary_score":	2000000,
			"second_score":	5279
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	370,
			"primary_score":	2000000,
			"second_score":	5278
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	371,
			"primary_score":	2000000,
			"second_score":	5277
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	375,
			"primary_score":	2000000,
			"second_score":	5276
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	376,
			"primary_score":	2000000,
			"second_score":	5275
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	380,
			"primary_score":	2000000,
			"second_score":	5274
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	381,
			"primary_score":	2000000,
			"second_score":	5273
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	385,
			"primary_score":	2000000,
			"second_score":	5272
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	386,
			"primary_score":	2000000,
			"second_score":	5271
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	387,
			"primary_score":	2000000,
			"second_score":	5270
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	390,
			"primary_score":	2000000,
			"second_score":	5269
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	400,
			"primary_score":	2000000,
			"second_score":	5268
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	401,
			"primary_score":	2000000,
			"second_score":	5267
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	403,
			"primary_score":	2000000,
			"second_score":	5266
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	409,
			"primary_score":	1000000,
			"second_score":	5265
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	410,
			"primary_score":	1000000,
			"second_score":	5264
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	412,
			"primary_score":	1000000,
			"second_score":	5263
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	413,
			"primary_score":	1000000,
			"second_score":	5262
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	419,
			"primary_score":	1000000,
			"second_score":	5261
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	421,
			"primary_score":	1000000,
			"second_score":	5259
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	427,
			"primary_score":	1000000,
			"second_score":	5258
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	428,
			"primary_score":	1000000,
			"second_score":	5257
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	430,
			"primary_score":	1000000,
			"second_score":	5256
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	432,
			"primary_score":	1000000,
			"second_score":	5254
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	438,
			"primary_score":	1000000,
			"second_score":	5253
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	440,
			"primary_score":	1000000,
			"second_score":	5251
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	446,
			"primary_score":	1000000,
			"second_score":	5250
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	448,
			"primary_score":	1000000,
			"second_score":	5248
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	455,
			"primary_score":	1000000,
			"second_score":	5247
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	456,
			"primary_score":	1000000,
			"second_score":	4481
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	457,
			"primary_score":	1000000,
			"second_score":	4480
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	458,
			"primary_score":	1000000,
			"second_score":	4479
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	461,
			"primary_score":	1000000,
			"second_score":	4478
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	462,
			"primary_score":	1000000,
			"second_score":	4476
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	466,
			"primary_score":	1000000,
			"second_score":	4918
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	467,
			"primary_score":	1000000,
			"second_score":	4917
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	468,
			"primary_score":	1000000,
			"second_score":	4916
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	482,
			"primary_score":	2000000,
			"second_score":	4915
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	483,
			"primary_score":	2000000,
			"second_score":	4892
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	484,
			"primary_score":	2000000,
			"second_score":	4869
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	485,
			"primary_score":	2000000,
			"second_score":	4846
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	486,
			"primary_score":	2000000,
			"second_score":	4823
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	487,
			"primary_score":	2000000,
			"second_score":	4800
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	488,
			"primary_score":	2000000,
			"second_score":	4777
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	489,
			"primary_score":	2000000,
			"second_score":	4754
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	492,
			"primary_score":	2000000,
			"second_score":	4710
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	493,
			"primary_score":	1000000,
			"second_score":	4269
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	497,
			"primary_score":	2000000,
			"second_score":	4709
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	498,
			"primary_score":	2000000,
			"second_score":	4708
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	499,
			"primary_score":	2000000,
			"second_score":	4707
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	500,
			"primary_score":	2000000,
			"second_score":	4684
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	519,
			"primary_score":	2000000,
			"second_score":	4683
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	520,
			"primary_score":	2000000,
			"second_score":	4682
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	521,
			"primary_score":	2000000,
			"second_score":	4681
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	531,
			"primary_score":	2000000,
			"second_score":	4680
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	532,
			"primary_score":	2000000,
			"second_score":	4679
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	539,
			"primary_score":	2000000,
			"second_score":	4678
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	541,
			"primary_score":	2000000,
			"second_score":	4677
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	542,
			"primary_score":	2000000,
			"second_score":	4675
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	548,
			"primary_score":	2000000,
			"second_score":	4674
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	549,
			"primary_score":	2000000,
			"second_score":	4673
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	550,
			"primary_score":	2000000,
			"second_score":	4672
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	553,
			"primary_score":	2000000,
			"second_score":	4671
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	560,
			"primary_score":	2000000,
			"second_score":	4670
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	567,
			"primary_score":	2000000,
			"second_score":	4669
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	569,
			"primary_score":	2000000,
			"second_score":	4202
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	570,
			"primary_score":	2000000,
			"second_score":	4180
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	573,
			"primary_score":	2000000,
			"second_score":	4169
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	577,
			"primary_score":	2000000,
			"second_score":	4168
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	699,
			"primary_score":	2000000,
			"second_score":	4166
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	700,
			"primary_score":	2000000,
			"second_score":	365
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	701,
			"primary_score":	1000000,
			"second_score":	364
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	702,
			"primary_score":	1000000,
			"second_score":	362
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	704,
			"primary_score":	2000000,
			"second_score":	361
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	705,
			"primary_score":	1000000,
			"second_score":	360
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	706,
			"primary_score":	1000000,
			"second_score":	358
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	708,
			"primary_score":	2000000,
			"second_score":	357
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	709,
			"primary_score":	1000000,
			"second_score":	356
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	710,
			"primary_score":	1000000,
			"second_score":	354
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	714,
			"primary_score":	2000000,
			"second_score":	353
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	717,
			"primary_score":	2000000,
			"second_score":	352
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	720,
			"primary_score":	2000000,
			"second_score":	351
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	723,
			"primary_score":	2000000,
			"second_score":	350
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	726,
			"primary_score":	2000000,
			"second_score":	349
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	727,
			"primary_score":	2000000,
			"second_score":	348
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	728,
			"primary_score":	2000000,
			"second_score":	1
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	738,
			"primary_score":	2000000,
			"second_score":	4668
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	739,
			"primary_score":	2000000,
			"second_score":	4667
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	741,
			"primary_score":	2000000,
			"second_score":	4666
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	746,
			"primary_score":	1000000,
			"second_score":	4197
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	747,
			"primary_score":	1000000,
			"second_score":	4196
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	748,
			"primary_score":	1000000,
			"second_score":	4195
		}, {
			"file":	"tools/bmp2tiff.c",
			"line":	750,
			"primary_score":	1000000,
			"second_score":	4194
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	61,
			"primary_score":	1000000,
			"second_score":	419085
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	63,
			"primary_score":	1000000,
			"second_score":	419084
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	135,
			"primary_score":	1000000,
			"second_score":	419091
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	136,
			"primary_score":	1000000,
			"second_score":	419090
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	137,
			"primary_score":	1000000,
			"second_score":	419089
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	139,
			"primary_score":	1000000,
			"second_score":	419088
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	152,
			"primary_score":	1000000,
			"second_score":	419087
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	155,
			"primary_score":	1000000,
			"second_score":	419086
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	156,
			"primary_score":	1000000,
			"second_score":	419083
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	157,
			"primary_score":	1000000,
			"second_score":	419082
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	158,
			"primary_score":	1000000,
			"second_score":	419081
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	166,
			"primary_score":	1000000,
			"second_score":	419080
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	170,
			"primary_score":	1000000,
			"second_score":	419079
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	171,
			"primary_score":	1000000,
			"second_score":	2
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	172,
			"primary_score":	1000000,
			"second_score":	1
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	200,
			"primary_score":	1000000,
			"second_score":	419078
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	201,
			"primary_score":	1000000,
			"second_score":	419077
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	203,
			"primary_score":	1000000,
			"second_score":	419076
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	205,
			"primary_score":	1000000,
			"second_score":	419070
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	206,
			"primary_score":	1000000,
			"second_score":	419063
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	207,
			"primary_score":	1000000,
			"second_score":	4
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	211,
			"primary_score":	1000000,
			"second_score":	6
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	212,
			"primary_score":	1000000,
			"second_score":	5
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	219,
			"primary_score":	1000000,
			"second_score":	3
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	225,
			"primary_score":	1000000,
			"second_score":	419075
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	227,
			"primary_score":	1000000,
			"second_score":	419074
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	228,
			"primary_score":	1000000,
			"second_score":	419073
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	232,
			"primary_score":	1000000,
			"second_score":	419072
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	236,
			"primary_score":	1000000,
			"second_score":	419071
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	247,
			"primary_score":	1000000,
			"second_score":	419069
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	249,
			"primary_score":	1000000,
			"second_score":	419068
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	250,
			"primary_score":	1000000,
			"second_score":	419067
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	251,
			"primary_score":	1000000,
			"second_score":	419066
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	252,
			"primary_score":	1000000,
			"second_score":	419065
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	253,
			"primary_score":	1000000,
			"second_score":	419064
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	260,
			"primary_score":	1000000,
			"second_score":	419061
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	261,
			"primary_score":	1000000,
			"second_score":	419060
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	262,
			"primary_score":	1000000,
			"second_score":	419059
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	263,
			"primary_score":	1000000,
			"second_score":	419058
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	264,
			"primary_score":	1000000,
			"second_score":	419057
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	266,
			"primary_score":	1000000,
			"second_score":	419056
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	270,
			"primary_score":	1000000,
			"second_score":	419055
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	271,
			"primary_score":	1000000,
			"second_score":	419054
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	272,
			"primary_score":	1000000,
			"second_score":	419053
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	273,
			"primary_score":	1000000,
			"second_score":	419052
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	275,
			"primary_score":	1000000,
			"second_score":	419051
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	279,
			"primary_score":	1000000,
			"second_score":	419050
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	283,
			"primary_score":	1000000,
			"second_score":	419048
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	290,
			"primary_score":	1000000,
			"second_score":	419047
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	291,
			"primary_score":	1000000,
			"second_score":	419046
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	293,
			"primary_score":	1000000,
			"second_score":	418275
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	294,
			"primary_score":	1000000,
			"second_score":	3721
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	295,
			"primary_score":	1000000,
			"second_score":	9
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	296,
			"primary_score":	1000000,
			"second_score":	7
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	323,
			"primary_score":	1000000,
			"second_score":	418274
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	324,
			"primary_score":	1000000,
			"second_score":	418273
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	325,
			"primary_score":	1000000,
			"second_score":	418272
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	326,
			"primary_score":	1000000,
			"second_score":	418271
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	327,
			"primary_score":	1000000,
			"second_score":	418270
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	328,
			"primary_score":	1000000,
			"second_score":	418269
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	329,
			"primary_score":	1000000,
			"second_score":	418268
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	331,
			"primary_score":	1000000,
			"second_score":	418267
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	332,
			"primary_score":	1000000,
			"second_score":	418266
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	333,
			"primary_score":	1000000,
			"second_score":	418265
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	334,
			"primary_score":	1000000,
			"second_score":	418264
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	335,
			"primary_score":	1000000,
			"second_score":	418263
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	336,
			"primary_score":	1000000,
			"second_score":	418262
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	337,
			"primary_score":	1000000,
			"second_score":	418261
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	338,
			"primary_score":	1000000,
			"second_score":	418260
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	339,
			"primary_score":	1000000,
			"second_score":	417749
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	340,
			"primary_score":	1000000,
			"second_score":	417748
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	342,
			"primary_score":	1000000,
			"second_score":	417747
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	343,
			"primary_score":	1000000,
			"second_score":	417746
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	344,
			"primary_score":	1000000,
			"second_score":	6898
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	345,
			"primary_score":	1000000,
			"second_score":	6897
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	346,
			"primary_score":	1000000,
			"second_score":	3730
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	347,
			"primary_score":	1000000,
			"second_score":	3729
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	348,
			"primary_score":	1000000,
			"second_score":	3728
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	349,
			"primary_score":	1000000,
			"second_score":	3727
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	350,
			"primary_score":	1000000,
			"second_score":	3726
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	351,
			"primary_score":	1000000,
			"second_score":	3725
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	352,
			"primary_score":	1000000,
			"second_score":	3724
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	353,
			"primary_score":	1000000,
			"second_score":	3723
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	355,
			"primary_score":	1000000,
			"second_score":	3751
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	361,
			"primary_score":	1000000,
			"second_score":	6899
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	373,
			"primary_score":	1000000,
			"second_score":	3722
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	385,
			"primary_score":	1000000,
			"second_score":	3750
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	386,
			"primary_score":	1000000,
			"second_score":	3749
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	388,
			"primary_score":	1000000,
			"second_score":	3748
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	389,
			"primary_score":	1000000,
			"second_score":	95565
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	390,
			"primary_score":	1000000,
			"second_score":	95564
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	391,
			"primary_score":	1000000,
			"second_score":	95563
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	392,
			"primary_score":	1000000,
			"second_score":	95562
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	393,
			"primary_score":	1000000,
			"second_score":	95561
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	396,
			"primary_score":	1000000,
			"second_score":	3747
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	397,
			"primary_score":	1000000,
			"second_score":	95548
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	398,
			"primary_score":	1000000,
			"second_score":	95547
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	399,
			"primary_score":	1000000,
			"second_score":	95546
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	401,
			"primary_score":	1000000,
			"second_score":	3746
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	406,
			"primary_score":	1000000,
			"second_score":	3745
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	407,
			"primary_score":	1000000,
			"second_score":	3744
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	408,
			"primary_score":	1000000,
			"second_score":	9922
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	409,
			"primary_score":	1000000,
			"second_score":	9921
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	411,
			"primary_score":	1000000,
			"second_score":	3743
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	412,
			"primary_score":	1000000,
			"second_score":	3742
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	413,
			"primary_score":	1000000,
			"second_score":	3741
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	416,
			"primary_score":	1000000,
			"second_score":	3740
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	417,
			"primary_score":	1000000,
			"second_score":	3739
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	418,
			"primary_score":	1000000,
			"second_score":	3738
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	419,
			"primary_score":	1000000,
			"second_score":	3737
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	421,
			"primary_score":	1000000,
			"second_score":	3736
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	422,
			"primary_score":	1000000,
			"second_score":	45700
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	423,
			"primary_score":	1000000,
			"second_score":	45699
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	425,
			"primary_score":	1000000,
			"second_score":	3735
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	426,
			"primary_score":	1000000,
			"second_score":	3734
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	427,
			"primary_score":	1000000,
			"second_score":	3732
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	429,
			"primary_score":	1000000,
			"second_score":	3731
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	441,
			"primary_score":	1000000,
			"second_score":	419045
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	443,
			"primary_score":	1000000,
			"second_score":	419044
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	444,
			"primary_score":	1000000,
			"second_score":	418278
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	445,
			"primary_score":	1000000,
			"second_score":	418277
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	446,
			"primary_score":	1000000,
			"second_score":	418276
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	453,
			"primary_score":	1000000,
			"second_score":	3720
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	454,
			"primary_score":	1000000,
			"second_score":	3719
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	455,
			"primary_score":	1000000,
			"second_score":	3718
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	456,
			"primary_score":	1000000,
			"second_score":	3717
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	457,
			"primary_score":	1000000,
			"second_score":	3716
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	458,
			"primary_score":	1000000,
			"second_score":	3715
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	460,
			"primary_score":	1000000,
			"second_score":	3714
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	470,
			"primary_score":	1000000,
			"second_score":	3712
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	471,
			"primary_score":	1000000,
			"second_score":	3711
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	477,
			"primary_score":	1000000,
			"second_score":	3710
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	480,
			"primary_score":	1000000,
			"second_score":	3255
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	481,
			"primary_score":	1000000,
			"second_score":	665
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	485,
			"primary_score":	1000000,
			"second_score":	664
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	486,
			"primary_score":	1000000,
			"second_score":	641
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	487,
			"primary_score":	1000000,
			"second_score":	618
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	488,
			"primary_score":	1000000,
			"second_score":	595
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	489,
			"primary_score":	1000000,
			"second_score":	572
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	490,
			"primary_score":	1000000,
			"second_score":	549
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	491,
			"primary_score":	1000000,
			"second_score":	526
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	493,
			"primary_score":	1000000,
			"second_score":	482
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	494,
			"primary_score":	1000000,
			"second_score":	459
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	501,
			"primary_score":	1000000,
			"second_score":	458
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	502,
			"primary_score":	1000000,
			"second_score":	435
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	503,
			"primary_score":	1000000,
			"second_score":	412
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	504,
			"primary_score":	1000000,
			"second_score":	411
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	505,
			"primary_score":	1000000,
			"second_score":	381
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	506,
			"primary_score":	1000000,
			"second_score":	380
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	507,
			"primary_score":	1000000,
			"second_score":	359
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	510,
			"primary_score":	1000000,
			"second_score":	358
		}, {
			"file":	"tools/gif2tiff.c",
			"line":	512,
			"primary_score":	1000000,
			"second_score":	11
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	74,
			"primary_score":	2000000,
			"second_score":	3273
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	75,
			"primary_score":	2000000,
			"second_score":	3272
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	76,
			"primary_score":	2000000,
			"second_score":	3271
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	77,
			"primary_score":	2000000,
			"second_score":	3270
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	78,
			"primary_score":	2000000,
			"second_score":	3269
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	79,
			"primary_score":	2000000,
			"second_score":	3268
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	80,
			"primary_score":	2000000,
			"second_score":	3267
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	81,
			"primary_score":	2000000,
			"second_score":	3266
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	82,
			"primary_score":	2000000,
			"second_score":	3265
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	83,
			"primary_score":	2000000,
			"second_score":	3264
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	84,
			"primary_score":	2000000,
			"second_score":	3263
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	85,
			"primary_score":	2000000,
			"second_score":	3262
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	86,
			"primary_score":	2000000,
			"second_score":	3261
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	87,
			"primary_score":	2000000,
			"second_score":	3260
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	89,
			"primary_score":	2000000,
			"second_score":	3259
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	93,
			"primary_score":	2000000,
			"second_score":	3258
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	110,
			"primary_score":	2000000,
			"second_score":	3257
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	119,
			"primary_score":	2000000,
			"second_score":	3256
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	120,
			"primary_score":	2000000,
			"second_score":	3255
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	121,
			"primary_score":	2000000,
			"second_score":	3254
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	122,
			"primary_score":	2000000,
			"second_score":	3253
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	134,
			"primary_score":	2000000,
			"second_score":	3252
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	136,
			"primary_score":	2000000,
			"second_score":	3251
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	139,
			"primary_score":	1000000,
			"second_score":	3231
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	140,
			"primary_score":	1000000,
			"second_score":	3230
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	141,
			"primary_score":	1000000,
			"second_score":	3229
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	144,
			"primary_score":	1000000,
			"second_score":	3250
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	145,
			"primary_score":	1000000,
			"second_score":	3249
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	146,
			"primary_score":	1000000,
			"second_score":	3248
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	160,
			"primary_score":	2000000,
			"second_score":	3247
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	161,
			"primary_score":	2000000,
			"second_score":	3242
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	163,
			"primary_score":	2000000,
			"second_score":	3241
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	165,
			"primary_score":	2000000,
			"second_score":	3240
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	166,
			"primary_score":	2000000,
			"second_score":	3243
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	169,
			"primary_score":	2000000,
			"second_score":	3239
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	176,
			"primary_score":	2000000,
			"second_score":	3238
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	177,
			"primary_score":	2000000,
			"second_score":	3237
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	179,
			"primary_score":	2000000,
			"second_score":	3236
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	183,
			"primary_score":	1000000,
			"second_score":	3216
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	185,
			"primary_score":	1000000,
			"second_score":	3215
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	189,
			"primary_score":	1000000,
			"second_score":	3235
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	191,
			"primary_score":	1000000,
			"second_score":	3234
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	193,
			"primary_score":	2000000,
			"second_score":	3233
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	194,
			"primary_score":	2000000,
			"second_score":	643
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	196,
			"primary_score":	2000000,
			"second_score":	642
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	197,
			"primary_score":	2000000,
			"second_score":	619
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	198,
			"primary_score":	2000000,
			"second_score":	596
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	199,
			"primary_score":	2000000,
			"second_score":	573
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	200,
			"primary_score":	2000000,
			"second_score":	550
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	201,
			"primary_score":	2000000,
			"second_score":	527
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	202,
			"primary_score":	2000000,
			"second_score":	504
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	203,
			"primary_score":	2000000,
			"second_score":	481
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	204,
			"primary_score":	2000000,
			"second_score":	458
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	218,
			"primary_score":	2000000,
			"second_score":	457
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	221,
			"primary_score":	1000000,
			"second_score":	437
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	222,
			"primary_score":	1000000,
			"second_score":	436
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	227,
			"primary_score":	1000000,
			"second_score":	413
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	230,
			"primary_score":	1000000,
			"second_score":	456
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	232,
			"primary_score":	1000000,
			"second_score":	412
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	234,
			"primary_score":	2000000,
			"second_score":	412
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	237,
			"primary_score":	2000000,
			"second_score":	395
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	238,
			"primary_score":	2000000,
			"second_score":	377
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	243,
			"primary_score":	2000000,
			"second_score":	376
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	244,
			"primary_score":	2000000,
			"second_score":	375
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	249,
			"primary_score":	2000000,
			"second_score":	374
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	250,
			"primary_score":	2000000,
			"second_score":	352
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	252,
			"primary_score":	2000000,
			"second_score":	351
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	253,
			"primary_score":	2000000,
			"second_score":	4
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	254,
			"primary_score":	2000000,
			"second_score":	3
		}, {
			"file":	"tools/ppm2tiff.c",
			"line":	255,
			"primary_score":	1000000,
			"second_score":	1
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	539,
			"primary_score":	1000000,
			"second_score":	3869
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	540,
			"primary_score":	1000000,
			"second_score":	3868
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	541,
			"primary_score":	1000000,
			"second_score":	3867
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	542,
			"primary_score":	1000000,
			"second_score":	3866
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	543,
			"primary_score":	1000000,
			"second_score":	3865
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	544,
			"primary_score":	1000000,
			"second_score":	3864
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	546,
			"primary_score":	1000000,
			"second_score":	3863
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	548,
			"primary_score":	1000000,
			"second_score":	3849
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	553,
			"primary_score":	1000000,
			"second_score":	3848
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	736,
			"primary_score":	1000000,
			"second_score":	3847
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	737,
			"primary_score":	1000000,
			"second_score":	3846
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	738,
			"primary_score":	1000000,
			"second_score":	35
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	739,
			"primary_score":	1000000,
			"second_score":	34
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	742,
			"primary_score":	1000000,
			"second_score":	23
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	810,
			"primary_score":	1000000,
			"second_score":	22
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	812,
			"primary_score":	1000000,
			"second_score":	21
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	813,
			"primary_score":	1000000,
			"second_score":	20
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	814,
			"primary_score":	1000000,
			"second_score":	1
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	928,
			"primary_score":	1000000,
			"second_score":	3862
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	929,
			"primary_score":	1000000,
			"second_score":	3860
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	936,
			"primary_score":	1000000,
			"second_score":	3859
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	937,
			"primary_score":	1000000,
			"second_score":	3857
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	938,
			"primary_score":	1000000,
			"second_score":	3856
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	939,
			"primary_score":	1000000,
			"second_score":	3855
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	940,
			"primary_score":	1000000,
			"second_score":	3854
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	941,
			"primary_score":	1000000,
			"second_score":	3853
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	942,
			"primary_score":	1000000,
			"second_score":	3852
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	943,
			"primary_score":	1000000,
			"second_score":	3851
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	945,
			"primary_score":	1000000,
			"second_score":	3850
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	954,
			"primary_score":	1000000,
			"second_score":	19
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	956,
			"primary_score":	1000000,
			"second_score":	18
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	957,
			"primary_score":	1000000,
			"second_score":	17
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	960,
			"primary_score":	1000000,
			"second_score":	16
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	963,
			"primary_score":	1000000,
			"second_score":	15
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	968,
			"primary_score":	1000000,
			"second_score":	14
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	971,
			"primary_score":	1000000,
			"second_score":	13
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	974,
			"primary_score":	1000000,
			"second_score":	12
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	977,
			"primary_score":	1000000,
			"second_score":	11
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	980,
			"primary_score":	1000000,
			"second_score":	10
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	983,
			"primary_score":	1000000,
			"second_score":	9
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	986,
			"primary_score":	1000000,
			"second_score":	8
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	989,
			"primary_score":	1000000,
			"second_score":	7
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	992,
			"primary_score":	1000000,
			"second_score":	6
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	996,
			"primary_score":	1000000,
			"second_score":	5
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	1000,
			"primary_score":	1000000,
			"second_score":	4
		}, {
			"file":	"tools/tiff2pdf.c",
			"line":	1003,
			"primary_score":	1000000,
			"second_score":	2
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	156,
			"primary_score":	4000000,
			"second_score":	3839
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	157,
			"primary_score":	4000000,
			"second_score":	3838
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	158,
			"primary_score":	4000000,
			"second_score":	3837
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	159,
			"primary_score":	4000000,
			"second_score":	3836
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	160,
			"primary_score":	4000000,
			"second_score":	3835
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	161,
			"primary_score":	4000000,
			"second_score":	3834
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	162,
			"primary_score":	4000000,
			"second_score":	3833
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	163,
			"primary_score":	4000000,
			"second_score":	3832
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	164,
			"primary_score":	4000000,
			"second_score":	3831
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	165,
			"primary_score":	4000000,
			"second_score":	3830
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	167,
			"primary_score":	4000000,
			"second_score":	3829
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	189,
			"primary_score":	1000000,
			"second_score":	3827
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	190,
			"primary_score":	1000000,
			"second_score":	3826
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	222,
			"primary_score":	3000000,
			"second_score":	3828
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	224,
			"primary_score":	3000000,
			"second_score":	3826
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	239,
			"primary_score":	2000000,
			"second_score":	3825
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	240,
			"primary_score":	2000000,
			"second_score":	3824
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	241,
			"primary_score":	2000000,
			"second_score":	3823
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	244,
			"primary_score":	1000000,
			"second_score":	3824
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	245,
			"primary_score":	1000000,
			"second_score":	3823
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	248,
			"primary_score":	1000000,
			"second_score":	3824
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	249,
			"primary_score":	1000000,
			"second_score":	3823
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	262,
			"primary_score":	4000000,
			"second_score":	3822
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	263,
			"primary_score":	4000000,
			"second_score":	3821
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	264,
			"primary_score":	4000000,
			"second_score":	10
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	276,
			"primary_score":	4000000,
			"second_score":	9
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	279,
			"primary_score":	4000000,
			"second_score":	8
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2136,
			"primary_score":	4000000,
			"second_score":	7
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2137,
			"primary_score":	4000000,
			"second_score":	6
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2139,
			"primary_score":	4000000,
			"second_score":	5
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2140,
			"primary_score":	4000000,
			"second_score":	4
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2141,
			"primary_score":	4000000,
			"second_score":	2
		}, {
			"file":	"tools/tiff2ps.c",
			"line":	2143,
			"primary_score":	4000000,
			"second_score":	1
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	61,
			"primary_score":	10000000,
			"second_score":	6797
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	62,
			"primary_score":	10000000,
			"second_score":	6796
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	63,
			"primary_score":	10000000,
			"second_score":	6795
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	64,
			"primary_score":	10000000,
			"second_score":	6794
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	66,
			"primary_score":	10000000,
			"second_score":	6793
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	108,
			"primary_score":	10000000,
			"second_score":	6792
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	111,
			"primary_score":	10000000,
			"second_score":	6791
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	112,
			"primary_score":	10000000,
			"second_score":	4201
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	115,
			"primary_score":	10000000,
			"second_score":	4200
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	116,
			"primary_score":	10000000,
			"second_score":	4199
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	117,
			"primary_score":	10000000,
			"second_score":	349
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	128,
			"primary_score":	10000000,
			"second_score":	348
		}, {
			"file":	"tools/tiff2rgba.c",
			"line":	129,
			"primary_score":	10000000,
			"second_score":	1
		}, {
			"file":	"tools/tiffcp.c",
			"line":	134,
			"primary_score":	7000000,
			"second_score":	3818
		}, {
			"file":	"tools/tiffcp.c",
			"line":	135,
			"primary_score":	7000000,
			"second_score":	3817
		}, {
			"file":	"tools/tiffcp.c",
			"line":	136,
			"primary_score":	7000000,
			"second_score":	3816
		}, {
			"file":	"tools/tiffcp.c",
			"line":	137,
			"primary_score":	7000000,
			"second_score":	3815
		}, {
			"file":	"tools/tiffcp.c",
			"line":	150,
			"primary_score":	7000000,
			"second_score":	3814
		}, {
			"file":	"tools/tiffcp.c",
			"line":	151,
			"primary_score":	7000000,
			"second_score":	3
		}, {
			"file":	"tools/tiffcp.c",
			"line":	157,
			"primary_score":	7000000,
			"second_score":	6456
		}, {
			"file":	"tools/tiffcp.c",
			"line":	158,
			"primary_score":	7000000,
			"second_score":	6455
		}, {
			"file":	"tools/tiffcp.c",
			"line":	159,
			"primary_score":	7000000,
			"second_score":	6454
		}, {
			"file":	"tools/tiffcp.c",
			"line":	160,
			"primary_score":	7000000,
			"second_score":	6453
		}, {
			"file":	"tools/tiffcp.c",
			"line":	161,
			"primary_score":	7000000,
			"second_score":	6452
		}, {
			"file":	"tools/tiffcp.c",
			"line":	162,
			"primary_score":	7000000,
			"second_score":	6451
		}, {
			"file":	"tools/tiffcp.c",
			"line":	163,
			"primary_score":	7000000,
			"second_score":	6450
		}, {
			"file":	"tools/tiffcp.c",
			"line":	164,
			"primary_score":	7000000,
			"second_score":	6449
		}, {
			"file":	"tools/tiffcp.c",
			"line":	165,
			"primary_score":	7000000,
			"second_score":	6448
		}, {
			"file":	"tools/tiffcp.c",
			"line":	166,
			"primary_score":	7000000,
			"second_score":	6447
		}, {
			"file":	"tools/tiffcp.c",
			"line":	167,
			"primary_score":	7000000,
			"second_score":	6446
		}, {
			"file":	"tools/tiffcp.c",
			"line":	168,
			"primary_score":	7000000,
			"second_score":	6445
		}, {
			"file":	"tools/tiffcp.c",
			"line":	169,
			"primary_score":	7000000,
			"second_score":	6444
		}, {
			"file":	"tools/tiffcp.c",
			"line":	171,
			"primary_score":	7000000,
			"second_score":	6443
		}, {
			"file":	"tools/tiffcp.c",
			"line":	172,
			"primary_score":	7000000,
			"second_score":	6442
		}, {
			"file":	"tools/tiffcp.c",
			"line":	173,
			"primary_score":	7000000,
			"second_score":	6441
		}, {
			"file":	"tools/tiffcp.c",
			"line":	206,
			"primary_score":	6000000,
			"second_score":	6416
		}, {
			"file":	"tools/tiffcp.c",
			"line":	265,
			"primary_score":	7000000,
			"second_score":	6415
		}, {
			"file":	"tools/tiffcp.c",
			"line":	267,
			"primary_score":	7000000,
			"second_score":	6414
		}, {
			"file":	"tools/tiffcp.c",
			"line":	268,
			"primary_score":	7000000,
			"second_score":	3824
		}, {
			"file":	"tools/tiffcp.c",
			"line":	270,
			"primary_score":	7000000,
			"second_score":	3823
		}, {
			"file":	"tools/tiffcp.c",
			"line":	271,
			"primary_score":	6000000,
			"second_score":	3822
		}, {
			"file":	"tools/tiffcp.c",
			"line":	272,
			"primary_score":	7000000,
			"second_score":	3821
		}, {
			"file":	"tools/tiffcp.c",
			"line":	273,
			"primary_score":	7000000,
			"second_score":	3820
		}, {
			"file":	"tools/tiffcp.c",
			"line":	274,
			"primary_score":	7000000,
			"second_score":	3819
		}, {
			"file":	"tools/tiffcp.c",
			"line":	275,
			"primary_score":	7000000,
			"second_score":	2
		}, {
			"file":	"tools/tiffcp.c",
			"line":	276,
			"primary_score":	7000000,
			"second_score":	1
		}, {
			"file":	"tools/tiffcp.c",
			"line":	312,
			"primary_score":	5000000,
			"second_score":	6431
		}, {
			"file":	"tools/tiffcp.c",
			"line":	313,
			"primary_score":	4000000,
			"second_score":	6430
		}, {
			"file":	"tools/tiffcp.c",
			"line":	314,
			"primary_score":	4000000,
			"second_score":	6429
		}, {
			"file":	"tools/tiffcp.c",
			"line":	315,
			"primary_score":	4000000,
			"second_score":	6428
		}, {
			"file":	"tools/tiffcp.c",
			"line":	316,
			"primary_score":	4000000,
			"second_score":	6423
		}, {
			"file":	"tools/tiffcp.c",
			"line":	317,
			"primary_score":	4000000,
			"second_score":	6422
		}, {
			"file":	"tools/tiffcp.c",
			"line":	318,
			"primary_score":	2000000,
			"second_score":	6424
		}, {
			"file":	"tools/tiffcp.c",
			"line":	319,
			"primary_score":	3000000,
			"second_score":	6421
		}, {
			"file":	"tools/tiffcp.c",
			"line":	320,
			"primary_score":	2000000,
			"second_score":	6424
		}, {
			"file":	"tools/tiffcp.c",
			"line":	321,
			"primary_score":	2000000,
			"second_score":	6420
		}, {
			"file":	"tools/tiffcp.c",
			"line":	322,
			"primary_score":	2000000,
			"second_score":	6419
		}, {
			"file":	"tools/tiffcp.c",
			"line":	332,
			"primary_score":	6000000,
			"second_score":	6440
		}, {
			"file":	"tools/tiffcp.c",
			"line":	334,
			"primary_score":	6000000,
			"second_score":	6437
		}, {
			"file":	"tools/tiffcp.c",
			"line":	336,
			"primary_score":	6000000,
			"second_score":	6434
		}, {
			"file":	"tools/tiffcp.c",
			"line":	351,
			"primary_score":	6000000,
			"second_score":	6433
		}, {
			"file":	"tools/tiffcp.c",
			"line":	352,
			"primary_score":	5000000,
			"second_score":	6432
		}, {
			"file":	"tools/tiffcp.c",
			"line":	353,
			"primary_score":	5000000,
			"second_score":	6418
		}, {
			"file":	"tools/tiffcp.c",
			"line":	354,
			"primary_score":	1000000,
			"second_score":	6429
		}, {
			"file":	"tools/tiffcp.c",
			"line":	355,
			"primary_score":	1000000,
			"second_score":	6418
		}, {
			"file":	"tools/tiffcp.c",
			"line":	370,
			"primary_score":	6000000,
			"second_score":	6417
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	349,
			"primary_score":	27000000,
			"second_score":	7198
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	350,
			"primary_score":	27000000,
			"second_score":	7197
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	351,
			"primary_score":	27000000,
			"second_score":	7196
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	352,
			"primary_score":	27000000,
			"second_score":	7195
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	353,
			"primary_score":	27000000,
			"second_score":	7194
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	354,
			"primary_score":	27000000,
			"second_score":	7193
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	356,
			"primary_score":	27000000,
			"second_score":	7192
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	357,
			"primary_score":	27000000,
			"second_score":	7191
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	358,
			"primary_score":	27000000,
			"second_score":	7190
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	359,
			"primary_score":	27000000,
			"second_score":	7189
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	360,
			"primary_score":	27000000,
			"second_score":	7188
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	363,
			"primary_score":	27000000,
			"second_score":	7187
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	364,
			"primary_score":	27000000,
			"second_score":	7186
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	365,
			"primary_score":	27000000,
			"second_score":	7185
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	366,
			"primary_score":	27000000,
			"second_score":	7184
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	367,
			"primary_score":	27000000,
			"second_score":	7183
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	368,
			"primary_score":	27000000,
			"second_score":	7182
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	369,
			"primary_score":	27000000,
			"second_score":	7181
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	370,
			"primary_score":	27000000,
			"second_score":	7180
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	371,
			"primary_score":	27000000,
			"second_score":	7179
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	372,
			"primary_score":	27000000,
			"second_score":	7178
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	373,
			"primary_score":	27000000,
			"second_score":	7177
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	374,
			"primary_score":	27000000,
			"second_score":	7176
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	375,
			"primary_score":	27000000,
			"second_score":	7175
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	376,
			"primary_score":	27000000,
			"second_score":	7174
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	377,
			"primary_score":	27000000,
			"second_score":	7173
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	379,
			"primary_score":	27000000,
			"second_score":	7172
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	380,
			"primary_score":	27000000,
			"second_score":	7171
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	382,
			"primary_score":	27000000,
			"second_score":	7170
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	383,
			"primary_score":	27000000,
			"second_score":	7160
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	384,
			"primary_score":	27000000,
			"second_score":	6952
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	386,
			"primary_score":	27000000,
			"second_score":	6489
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	387,
			"primary_score":	27000000,
			"second_score":	6488
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	388,
			"primary_score":	27000000,
			"second_score":	6487
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	454,
			"primary_score":	18000000,
			"second_score":	6470
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	457,
			"primary_score":	9000000,
			"second_score":	6455
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	461,
			"primary_score":	9000000,
			"second_score":	6466
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	467,
			"primary_score":	18000000,
			"second_score":	6465
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	587,
			"primary_score":	9000000,
			"second_score":	6450
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	590,
			"primary_score":	9000000,
			"second_score":	6449
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	599,
			"primary_score":	9000000,
			"second_score":	6448
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	622,
			"primary_score":	9000000,
			"second_score":	6486
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	627,
			"primary_score":	9000000,
			"second_score":	6480
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	632,
			"primary_score":	9000000,
			"second_score":	6473
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	634,
			"primary_score":	9000000,
			"second_score":	6462
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	635,
			"primary_score":	9000000,
			"second_score":	6461
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	642,
			"primary_score":	9000000,
			"second_score":	6460
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	649,
			"primary_score":	9000000,
			"second_score":	6453
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	650,
			"primary_score":	9000000,
			"second_score":	6451
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	653,
			"primary_score":	9000000,
			"second_score":	6450
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	654,
			"primary_score":	9000000,
			"second_score":	6448
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	657,
			"primary_score":	9000000,
			"second_score":	6464
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	661,
			"primary_score":	9000000,
			"second_score":	6456
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	662,
			"primary_score":	9000000,
			"second_score":	6455
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	663,
			"primary_score":	9000000,
			"second_score":	6454
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	664,
			"primary_score":	9000000,
			"second_score":	6453
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	665,
			"primary_score":	9000000,
			"second_score":	6451
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	668,
			"primary_score":	9000000,
			"second_score":	6449
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	673,
			"primary_score":	9000000,
			"second_score":	6448
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	678,
			"primary_score":	27000000,
			"second_score":	6447
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	681,
			"primary_score":	27000000,
			"second_score":	6446
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	682,
			"primary_score":	27000000,
			"second_score":	3856
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	685,
			"primary_score":	27000000,
			"second_score":	3855
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	686,
			"primary_score":	27000000,
			"second_score":	3854
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	688,
			"primary_score":	27000000,
			"second_score":	3853
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	690,
			"primary_score":	27000000,
			"second_score":	3852
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	691,
			"primary_score":	27000000,
			"second_score":	2
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	692,
			"primary_score":	27000000,
			"second_score":	1
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1524,
			"primary_score":	27000000,
			"second_score":	6951
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1526,
			"primary_score":	27000000,
			"second_score":	6950
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1527,
			"primary_score":	27000000,
			"second_score":	6949
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1528,
			"primary_score":	27000000,
			"second_score":	6948
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1529,
			"primary_score":	27000000,
			"second_score":	6947
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1530,
			"primary_score":	27000000,
			"second_score":	6946
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1531,
			"primary_score":	27000000,
			"second_score":	6945
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1532,
			"primary_score":	27000000,
			"second_score":	6944
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1533,
			"primary_score":	27000000,
			"second_score":	6943
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1534,
			"primary_score":	27000000,
			"second_score":	6942
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1535,
			"primary_score":	27000000,
			"second_score":	6941
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1536,
			"primary_score":	27000000,
			"second_score":	6940
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1537,
			"primary_score":	27000000,
			"second_score":	6939
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1539,
			"primary_score":	27000000,
			"second_score":	6938
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1541,
			"primary_score":	27000000,
			"second_score":	6496
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1542,
			"primary_score":	27000000,
			"second_score":	6495
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1543,
			"primary_score":	27000000,
			"second_score":	6494
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1544,
			"primary_score":	27000000,
			"second_score":	6493
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1545,
			"primary_score":	27000000,
			"second_score":	6492
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1546,
			"primary_score":	27000000,
			"second_score":	6491
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1547,
			"primary_score":	27000000,
			"second_score":	6490
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1554,
			"primary_score":	27000000,
			"second_score":	7169
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1555,
			"primary_score":	27000000,
			"second_score":	7168
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1556,
			"primary_score":	27000000,
			"second_score":	7167
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1557,
			"primary_score":	27000000,
			"second_score":	7166
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1558,
			"primary_score":	27000000,
			"second_score":	7165
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1559,
			"primary_score":	27000000,
			"second_score":	7164
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1560,
			"primary_score":	27000000,
			"second_score":	7163
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1561,
			"primary_score":	27000000,
			"second_score":	7162
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1562,
			"primary_score":	27000000,
			"second_score":	7161
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1568,
			"primary_score":	27000000,
			"second_score":	7159
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1570,
			"primary_score":	27000000,
			"second_score":	7158
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1571,
			"primary_score":	27000000,
			"second_score":	7157
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1572,
			"primary_score":	27000000,
			"second_score":	7156
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1573,
			"primary_score":	27000000,
			"second_score":	7155
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1574,
			"primary_score":	27000000,
			"second_score":	7154
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1575,
			"primary_score":	27000000,
			"second_score":	7153
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1577,
			"primary_score":	27000000,
			"second_score":	7152
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1578,
			"primary_score":	27000000,
			"second_score":	7151
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1579,
			"primary_score":	27000000,
			"second_score":	7150
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1580,
			"primary_score":	27000000,
			"second_score":	7149
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1581,
			"primary_score":	27000000,
			"second_score":	7148
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1582,
			"primary_score":	27000000,
			"second_score":	7147
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1583,
			"primary_score":	27000000,
			"second_score":	7146
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1584,
			"primary_score":	27000000,
			"second_score":	7145
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1586,
			"primary_score":	27000000,
			"second_score":	6958
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1587,
			"primary_score":	27000000,
			"second_score":	6957
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1588,
			"primary_score":	27000000,
			"second_score":	6956
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1589,
			"primary_score":	27000000,
			"second_score":	6955
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1590,
			"primary_score":	27000000,
			"second_score":	6954
		}, {
			"file":	"tools/tiffcrop.c",
			"line":	1591,
			"primary_score":	27000000,
			"second_score":	6953
		}],
	"mutation_info":	[{
			"file":	"libtiff/tif_close.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"libtiff/tif_close.c",
			"lines":	[{
					"line":	48,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	49,
							"begin_column":	0,
							"end_line":	49,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L49\", 62, &(tif), sizeof (tif), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	2,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	3,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	4,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	5,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	6,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	7,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	8,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	9,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	10,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	11,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	12,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	13,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	14,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	15,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	16,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	17,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	18,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	19,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	20,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	21,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	22,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	23,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	24,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	25,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	26,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	27,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	28,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	29,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	30,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	31,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	32,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	33,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	34,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	35,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	36,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	37,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	38,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	39,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	40,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	41,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	42,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	43,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	44,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	45,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	46,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	47,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	48,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	49,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	50,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	51,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	52,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	53,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	54,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	55,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	56,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	57,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	58,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	59,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	60,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	61,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	62,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	63,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	64,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	65,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	66,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	67,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	68,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	69,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	70,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	71,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	72,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	73,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	74,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	75,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	76,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	77,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	78,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	79,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	80,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	81,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	82,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	83,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	84,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	85,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	86,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	87,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	88,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	89,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	90,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	91,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	92,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	93,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	94,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	95,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	96,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	97,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	98,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	99,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	100,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	101,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	102,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	103,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	104,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	105,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	106,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	107,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	108,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	109,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	110,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	111,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	112,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	113,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	114,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	115,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	116,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	117,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	118,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	119,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	120,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	121,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	122,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	123,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	124,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	125,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	126,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	127,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	128,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	129,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	130,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	131,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	132,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	133,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	134,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	135,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	136,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	137,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	138,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	139,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	140,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	141,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	142,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	143,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	144,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	145,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	146,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	147,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	148,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	149,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	150,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	151,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	152,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	153,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	154,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	155,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	156,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	157,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	158,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	159,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	160,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	161,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	162,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	163,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	164,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	165,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	166,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	167,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	168,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	169,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	170,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	171,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	172,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	173,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	174,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	175,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	176,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	177,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	178,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	179,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	180,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	181,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	182,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	183,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	184,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	185,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	186,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	187,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	188,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	189,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	190,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	191,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	192,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	193,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	194,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	195,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	196,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	197,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	198,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	199,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	200,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	201,
									"scores":	[-5.0837800298442755]
								}, {
									"case":	202,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	203,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	204,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	205,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	206,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	207,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	208,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	209,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	210,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	211,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	212,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	213,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	214,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	215,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	216,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	217,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	218,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	219,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	220,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	221,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	222,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	223,
									"scores":	[-5.2094989641442755, -8.3617994498442769, -8.853226149844275, -8.237732449844275, -8.3264243498442756, -8.3638487498442764, -8.3705504498442753, -8.3705504498442753, -8.3638487498442764, -8.3638487498442764, -8.3705504498442753, -8.3705504498442753, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3705504498442753, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3705504498442753, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3705504498442753, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3638487498442764, -8.3264243498442756]
								}]
						}, {
							"switch":	1,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	49,
							"begin_column":	2,
							"end_line":	53,
							"end_column":	16,
							"patch_codes":	["if (__is_neg(\"\", \"L49\", 62, &(tif), sizeof (tif), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    TIFFFlush(tif);\n", "if ((tif->tif_mode != 0) || __is_neg(\"\", \"L49\", 62, &(tif), sizeof (tif), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    TIFFFlush(tif);\n", "if ((tif->tif_mode != 0) && !__is_neg(\"\", \"L49\", 62, &(tif), sizeof (tif), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    TIFFFlush(tif);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.5281182475281456, -3.6238555322281458, -5.0968929322281458, -6.0820880322281461, -6.4627586322281463, -5.6598065322281457, -6.0085957322281462, -6.0085957322281462, -5.6598065322281457, -5.6598065322281457, -6.0085957322281462, -6.0085957322281462, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -6.0085957322281462, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -6.0085957322281462, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -6.0085957322281462, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -5.6598065322281457, -6.4627586322281463]
								}, {
									"case":	2,
									"scores":	[-5.1328083597281458, -3.2285456444281468, -4.7015830444281459, -5.6867781444281462, -6.0674487444281464, -5.2644966444281458, -5.6132858444281464, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -6.0674487444281464]
								}, {
									"case":	3,
									"scores":	[-5.1328083597281458, -3.2285456444281468, -4.7015830444281459, -5.6867781444281462, -6.0674487444281464, -5.2644966444281458, -5.6132858444281464, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.6132858444281464, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -5.2644966444281458, -6.0674487444281464]
								}]
						}, {
							"switch":	2,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	49,
							"begin_column":	2,
							"end_line":	53,
							"end_column":	16,
							"patch_codes":	["if (!__is_neg(\"\", \"L49\", 62, &(tif->tif_mode), sizeof (tif->tif_mode), &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    if (tif->tif_mode != 0)\n        TIFFFlush(tif);\n", "if (!__is_neg(\"\", \"L49\", 62, &(tif->tif_mode), sizeof (tif->tif_mode), &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)) && (tif->tif_mode != 0))\n    TIFFFlush(tif);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.178639469844275, -7.0829021851442757, -6.651676869844275, -7.6368719698442753, -8.0175425698442755, -7.2145904698442758, -7.5633796698442755, -7.5633796698442755, -7.2145904698442758, -7.2145904698442758, -7.5633796698442755, -7.5633796698442755, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.5633796698442755, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.5633796698442755, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.5633796698442755, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -7.2145904698442758, -8.0175425698442755]
								}, {
									"case":	2,
									"scores":	[-7.0975930041442759, -5.1933302888442752, -6.6663676888442751, -7.6515627888442754, -8.0322333888442756, -7.2292812888442768, -7.5780704888442765, -7.5780704888442765, -7.2292812888442768, -7.2292812888442768, -7.5780704888442765, -7.5780704888442765, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.5780704888442765, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.5780704888442765, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.5780704888442765, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -7.2292812888442768, -8.0322333888442756]
								}]
						}]
				}, {
					"line":	53,
					"switches":	[{
							"switch":	3,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	54,
							"begin_column":	0,
							"end_line":	54,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L54\", 62, &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.063577322526756]
								}, {
									"case":	2,
									"scores":	[-5.063577322526756]
								}, {
									"case":	3,
									"scores":	[-5.063577322526756]
								}, {
									"case":	4,
									"scores":	[-5.063577322526756]
								}, {
									"case":	5,
									"scores":	[-5.063577322526756]
								}, {
									"case":	6,
									"scores":	[-5.063577322526756]
								}, {
									"case":	7,
									"scores":	[-5.063577322526756]
								}, {
									"case":	8,
									"scores":	[-5.063577322526756]
								}, {
									"case":	9,
									"scores":	[-5.063577322526756]
								}, {
									"case":	10,
									"scores":	[-5.063577322526756]
								}, {
									"case":	11,
									"scores":	[-5.063577322526756]
								}, {
									"case":	12,
									"scores":	[-5.063577322526756]
								}, {
									"case":	13,
									"scores":	[-5.063577322526756]
								}, {
									"case":	14,
									"scores":	[-5.063577322526756]
								}, {
									"case":	15,
									"scores":	[-5.063577322526756]
								}, {
									"case":	16,
									"scores":	[-5.063577322526756]
								}, {
									"case":	17,
									"scores":	[-5.063577322526756]
								}, {
									"case":	18,
									"scores":	[-5.063577322526756]
								}, {
									"case":	19,
									"scores":	[-5.063577322526756]
								}, {
									"case":	20,
									"scores":	[-5.063577322526756]
								}, {
									"case":	21,
									"scores":	[-5.063577322526756]
								}, {
									"case":	22,
									"scores":	[-5.063577322526756]
								}, {
									"case":	23,
									"scores":	[-5.063577322526756]
								}, {
									"case":	24,
									"scores":	[-5.063577322526756]
								}, {
									"case":	25,
									"scores":	[-5.063577322526756]
								}, {
									"case":	26,
									"scores":	[-5.063577322526756]
								}, {
									"case":	27,
									"scores":	[-5.063577322526756]
								}, {
									"case":	28,
									"scores":	[-5.063577322526756]
								}, {
									"case":	29,
									"scores":	[-5.063577322526756]
								}, {
									"case":	30,
									"scores":	[-5.063577322526756]
								}, {
									"case":	31,
									"scores":	[-5.063577322526756]
								}, {
									"case":	32,
									"scores":	[-5.063577322526756]
								}, {
									"case":	33,
									"scores":	[-5.063577322526756]
								}, {
									"case":	34,
									"scores":	[-5.063577322526756]
								}, {
									"case":	35,
									"scores":	[-5.063577322526756]
								}, {
									"case":	36,
									"scores":	[-5.063577322526756]
								}, {
									"case":	37,
									"scores":	[-5.063577322526756]
								}, {
									"case":	38,
									"scores":	[-5.063577322526756]
								}, {
									"case":	39,
									"scores":	[-5.063577322526756]
								}, {
									"case":	40,
									"scores":	[-5.063577322526756]
								}, {
									"case":	41,
									"scores":	[-5.063577322526756]
								}, {
									"case":	42,
									"scores":	[-5.063577322526756]
								}, {
									"case":	43,
									"scores":	[-5.063577322526756]
								}, {
									"case":	44,
									"scores":	[-5.063577322526756]
								}, {
									"case":	45,
									"scores":	[-5.063577322526756]
								}, {
									"case":	46,
									"scores":	[-5.063577322526756]
								}, {
									"case":	47,
									"scores":	[-5.063577322526756]
								}, {
									"case":	48,
									"scores":	[-5.063577322526756]
								}, {
									"case":	49,
									"scores":	[-5.063577322526756]
								}, {
									"case":	50,
									"scores":	[-5.063577322526756]
								}, {
									"case":	51,
									"scores":	[-5.063577322526756]
								}, {
									"case":	52,
									"scores":	[-5.063577322526756]
								}, {
									"case":	53,
									"scores":	[-5.063577322526756]
								}, {
									"case":	54,
									"scores":	[-5.063577322526756]
								}, {
									"case":	55,
									"scores":	[-5.063577322526756]
								}, {
									"case":	56,
									"scores":	[-5.063577322526756]
								}, {
									"case":	57,
									"scores":	[-5.063577322526756]
								}, {
									"case":	58,
									"scores":	[-5.063577322526756]
								}, {
									"case":	59,
									"scores":	[-5.063577322526756]
								}, {
									"case":	60,
									"scores":	[-5.063577322526756]
								}, {
									"case":	61,
									"scores":	[-5.063577322526756]
								}, {
									"case":	62,
									"scores":	[-5.063577322526756]
								}, {
									"case":	63,
									"scores":	[-5.063577322526756]
								}, {
									"case":	64,
									"scores":	[-5.063577322526756]
								}, {
									"case":	65,
									"scores":	[-5.063577322526756]
								}, {
									"case":	66,
									"scores":	[-5.063577322526756]
								}, {
									"case":	67,
									"scores":	[-5.063577322526756]
								}, {
									"case":	68,
									"scores":	[-5.063577322526756]
								}, {
									"case":	69,
									"scores":	[-5.063577322526756]
								}, {
									"case":	70,
									"scores":	[-5.063577322526756]
								}, {
									"case":	71,
									"scores":	[-5.063577322526756]
								}, {
									"case":	72,
									"scores":	[-5.063577322526756]
								}, {
									"case":	73,
									"scores":	[-5.063577322526756]
								}, {
									"case":	74,
									"scores":	[-5.063577322526756]
								}, {
									"case":	75,
									"scores":	[-5.063577322526756]
								}, {
									"case":	76,
									"scores":	[-5.063577322526756]
								}, {
									"case":	77,
									"scores":	[-5.063577322526756]
								}, {
									"case":	78,
									"scores":	[-5.063577322526756]
								}, {
									"case":	79,
									"scores":	[-5.063577322526756]
								}, {
									"case":	80,
									"scores":	[-5.063577322526756]
								}, {
									"case":	81,
									"scores":	[-5.063577322526756]
								}, {
									"case":	82,
									"scores":	[-5.063577322526756]
								}, {
									"case":	83,
									"scores":	[-5.063577322526756]
								}, {
									"case":	84,
									"scores":	[-5.063577322526756]
								}, {
									"case":	85,
									"scores":	[-5.063577322526756]
								}, {
									"case":	86,
									"scores":	[-5.063577322526756]
								}, {
									"case":	87,
									"scores":	[-5.063577322526756]
								}, {
									"case":	88,
									"scores":	[-5.063577322526756]
								}, {
									"case":	89,
									"scores":	[-5.063577322526756]
								}, {
									"case":	90,
									"scores":	[-5.063577322526756]
								}, {
									"case":	91,
									"scores":	[-5.063577322526756]
								}, {
									"case":	92,
									"scores":	[-5.063577322526756]
								}, {
									"case":	93,
									"scores":	[-5.063577322526756]
								}, {
									"case":	94,
									"scores":	[-5.063577322526756]
								}, {
									"case":	95,
									"scores":	[-5.063577322526756]
								}, {
									"case":	96,
									"scores":	[-5.063577322526756]
								}, {
									"case":	97,
									"scores":	[-5.063577322526756]
								}, {
									"case":	98,
									"scores":	[-5.063577322526756]
								}, {
									"case":	99,
									"scores":	[-5.063577322526756]
								}, {
									"case":	100,
									"scores":	[-5.063577322526756]
								}, {
									"case":	101,
									"scores":	[-5.063577322526756]
								}, {
									"case":	102,
									"scores":	[-5.063577322526756]
								}, {
									"case":	103,
									"scores":	[-5.063577322526756]
								}, {
									"case":	104,
									"scores":	[-5.063577322526756]
								}, {
									"case":	105,
									"scores":	[-5.063577322526756]
								}, {
									"case":	106,
									"scores":	[-5.063577322526756]
								}, {
									"case":	107,
									"scores":	[-5.063577322526756]
								}, {
									"case":	108,
									"scores":	[-5.063577322526756]
								}, {
									"case":	109,
									"scores":	[-5.063577322526756]
								}, {
									"case":	110,
									"scores":	[-5.063577322526756]
								}, {
									"case":	111,
									"scores":	[-5.063577322526756]
								}, {
									"case":	112,
									"scores":	[-5.063577322526756]
								}, {
									"case":	113,
									"scores":	[-5.063577322526756]
								}, {
									"case":	114,
									"scores":	[-5.063577322526756]
								}, {
									"case":	115,
									"scores":	[-5.063577322526756]
								}, {
									"case":	116,
									"scores":	[-5.063577322526756]
								}, {
									"case":	117,
									"scores":	[-5.063577322526756]
								}, {
									"case":	118,
									"scores":	[-5.063577322526756]
								}, {
									"case":	119,
									"scores":	[-5.063577322526756]
								}, {
									"case":	120,
									"scores":	[-5.063577322526756]
								}, {
									"case":	121,
									"scores":	[-5.063577322526756]
								}, {
									"case":	122,
									"scores":	[-5.063577322526756]
								}, {
									"case":	123,
									"scores":	[-5.063577322526756]
								}, {
									"case":	124,
									"scores":	[-5.063577322526756]
								}, {
									"case":	125,
									"scores":	[-5.063577322526756]
								}, {
									"case":	126,
									"scores":	[-5.063577322526756]
								}, {
									"case":	127,
									"scores":	[-5.063577322526756]
								}, {
									"case":	128,
									"scores":	[-5.063577322526756]
								}, {
									"case":	129,
									"scores":	[-5.063577322526756]
								}, {
									"case":	130,
									"scores":	[-5.063577322526756]
								}, {
									"case":	131,
									"scores":	[-5.063577322526756]
								}, {
									"case":	132,
									"scores":	[-5.063577322526756]
								}, {
									"case":	133,
									"scores":	[-5.063577322526756]
								}, {
									"case":	134,
									"scores":	[-5.063577322526756]
								}, {
									"case":	135,
									"scores":	[-5.063577322526756]
								}, {
									"case":	136,
									"scores":	[-5.063577322526756]
								}, {
									"case":	137,
									"scores":	[-5.063577322526756]
								}, {
									"case":	138,
									"scores":	[-5.063577322526756]
								}, {
									"case":	139,
									"scores":	[-5.063577322526756]
								}, {
									"case":	140,
									"scores":	[-5.063577322526756]
								}, {
									"case":	141,
									"scores":	[-5.063577322526756]
								}, {
									"case":	142,
									"scores":	[-5.063577322526756]
								}, {
									"case":	143,
									"scores":	[-5.063577322526756]
								}, {
									"case":	144,
									"scores":	[-5.063577322526756]
								}, {
									"case":	145,
									"scores":	[-5.063577322526756]
								}, {
									"case":	146,
									"scores":	[-5.063577322526756]
								}, {
									"case":	147,
									"scores":	[-5.063577322526756]
								}, {
									"case":	148,
									"scores":	[-5.063577322526756]
								}, {
									"case":	149,
									"scores":	[-5.063577322526756]
								}, {
									"case":	150,
									"scores":	[-5.063577322526756]
								}, {
									"case":	151,
									"scores":	[-5.063577322526756]
								}, {
									"case":	152,
									"scores":	[-5.063577322526756]
								}, {
									"case":	153,
									"scores":	[-5.063577322526756]
								}, {
									"case":	154,
									"scores":	[-5.063577322526756]
								}, {
									"case":	155,
									"scores":	[-5.063577322526756]
								}, {
									"case":	156,
									"scores":	[-5.063577322526756]
								}, {
									"case":	157,
									"scores":	[-5.063577322526756]
								}, {
									"case":	158,
									"scores":	[-5.063577322526756]
								}, {
									"case":	159,
									"scores":	[-5.063577322526756]
								}, {
									"case":	160,
									"scores":	[-5.063577322526756]
								}, {
									"case":	161,
									"scores":	[-5.063577322526756]
								}, {
									"case":	162,
									"scores":	[-5.063577322526756]
								}, {
									"case":	163,
									"scores":	[-5.063577322526756]
								}, {
									"case":	164,
									"scores":	[-5.063577322526756]
								}, {
									"case":	165,
									"scores":	[-5.063577322526756]
								}, {
									"case":	166,
									"scores":	[-5.063577322526756]
								}, {
									"case":	167,
									"scores":	[-5.063577322526756]
								}, {
									"case":	168,
									"scores":	[-5.063577322526756]
								}, {
									"case":	169,
									"scores":	[-5.063577322526756]
								}, {
									"case":	170,
									"scores":	[-5.063577322526756]
								}, {
									"case":	171,
									"scores":	[-5.063577322526756]
								}, {
									"case":	172,
									"scores":	[-5.063577322526756]
								}, {
									"case":	173,
									"scores":	[-5.063577322526756]
								}, {
									"case":	174,
									"scores":	[-5.063577322526756]
								}, {
									"case":	175,
									"scores":	[-5.063577322526756]
								}, {
									"case":	176,
									"scores":	[-5.063577322526756]
								}, {
									"case":	177,
									"scores":	[-5.063577322526756]
								}, {
									"case":	178,
									"scores":	[-5.063577322526756]
								}, {
									"case":	179,
									"scores":	[-5.063577322526756]
								}, {
									"case":	180,
									"scores":	[-5.063577322526756]
								}, {
									"case":	181,
									"scores":	[-5.063577322526756]
								}, {
									"case":	182,
									"scores":	[-5.063577322526756]
								}, {
									"case":	183,
									"scores":	[-5.063577322526756]
								}, {
									"case":	184,
									"scores":	[-5.063577322526756]
								}, {
									"case":	185,
									"scores":	[-5.063577322526756]
								}, {
									"case":	186,
									"scores":	[-5.063577322526756]
								}, {
									"case":	187,
									"scores":	[-5.063577322526756]
								}, {
									"case":	188,
									"scores":	[-5.063577322526756]
								}, {
									"case":	189,
									"scores":	[-5.063577322526756]
								}, {
									"case":	190,
									"scores":	[-5.063577322526756]
								}, {
									"case":	191,
									"scores":	[-5.063577322526756]
								}, {
									"case":	192,
									"scores":	[-5.063577322526756]
								}, {
									"case":	193,
									"scores":	[-5.063577322526756]
								}, {
									"case":	194,
									"scores":	[-5.063577322526756]
								}, {
									"case":	195,
									"scores":	[-5.063577322526756]
								}, {
									"case":	196,
									"scores":	[-5.063577322526756]
								}, {
									"case":	197,
									"scores":	[-5.063577322526756]
								}, {
									"case":	198,
									"scores":	[-5.063577322526756]
								}, {
									"case":	199,
									"scores":	[-5.063577322526756]
								}, {
									"case":	200,
									"scores":	[-5.063577322526756]
								}, {
									"case":	201,
									"scores":	[-5.063577322526756]
								}, {
									"case":	202,
									"scores":	[-5.063577322526756]
								}, {
									"case":	203,
									"scores":	[-5.063577322526756]
								}, {
									"case":	204,
									"scores":	[-5.063577322526756]
								}, {
									"case":	205,
									"scores":	[-5.063577322526756]
								}, {
									"case":	206,
									"scores":	[-5.063577322526756]
								}, {
									"case":	207,
									"scores":	[-5.063577322526756]
								}, {
									"case":	208,
									"scores":	[-5.063577322526756]
								}, {
									"case":	209,
									"scores":	[-5.063577322526756]
								}, {
									"case":	210,
									"scores":	[-5.063577322526756]
								}, {
									"case":	211,
									"scores":	[-5.063577322526756]
								}, {
									"case":	212,
									"scores":	[-5.063577322526756]
								}, {
									"case":	213,
									"scores":	[-5.063577322526756]
								}, {
									"case":	214,
									"scores":	[-5.063577322526756]
								}, {
									"case":	215,
									"scores":	[-5.063577322526756]
								}, {
									"case":	216,
									"scores":	[-5.063577322526756]
								}, {
									"case":	217,
									"scores":	[-5.063577322526756]
								}, {
									"case":	218,
									"scores":	[-5.063577322526756]
								}, {
									"case":	219,
									"scores":	[-5.063577322526756]
								}, {
									"case":	220,
									"scores":	[-5.063577322526756]
								}, {
									"case":	221,
									"scores":	[-5.063577322526756]
								}, {
									"case":	222,
									"scores":	[-5.063577322526756]
								}, {
									"case":	223,
									"scores":	[-6.5963069058267561, -7.5998209315267555, -8.5689165315267566, -8.6685540195267556, -8.8281040785267564, -8.6950328315267562, -8.7017345315267569, -8.7017345315267569, -8.6950328315267562, -8.6950328315267562, -8.7017345315267569, -8.7017345315267569, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.7017345315267569, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.7017345315267569, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.7017345315267569, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6950328315267562, -8.6576084315267572]
								}]
						}, {
							"switch":	4,
							"types":	[[], [], [1], [], [], [], [232, 233, 234, 235], [], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], [], [], [179]],
							"begin_line":	54,
							"begin_column":	2,
							"end_line":	54,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L54\", 62, &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    (*tif->tif_cleanup)(tif);\n", "TIFFDefaultStripSize(tif, 0)", "TIFFDefaultStripSize(tif, 2048)", "TIFFDefaultStripSize(tif, 4)", "TIFFDefaultStripSize(tif, 512)", "TIFFDefaultStripSize(tif, 65)", "TIFFFieldWithName(tif, 0)", "TIFFFieldWithTag(tif, 0)", "TIFFFieldWithTag(tif, 2048)", "TIFFFieldWithTag(tif, 4)", "TIFFFieldWithTag(tif, 512)", "TIFFFieldWithTag(tif, 65)", "TIFFGetClientInfo(tif, 0)", "TIFFGetTagListEntry(tif, 0)", "TIFFGetTagListEntry(tif, 2048)", "TIFFGetTagListEntry(tif, 4)", "TIFFGetTagListEntry(tif, 512)", "TIFFGetTagListEntry(tif, 65)", "TIFFInitCCITTFax3(tif, 0)", "TIFFInitCCITTFax3(tif, 2048)", "TIFFInitCCITTFax3(tif, 4)", "TIFFInitCCITTFax3(tif, 512)", "TIFFInitCCITTFax3(tif, 65)", "TIFFInitCCITTFax4(tif, 0)", "TIFFInitCCITTFax4(tif, 2048)", "TIFFInitCCITTFax4(tif, 4)", "TIFFInitCCITTFax4(tif, 512)", "TIFFInitCCITTFax4(tif, 65)", "TIFFInitCCITTRLE(tif, 0)", "TIFFInitCCITTRLE(tif, 2048)", "TIFFInitCCITTRLE(tif, 4)", "TIFFInitCCITTRLE(tif, 512)", "TIFFInitCCITTRLE(tif, 65)", "TIFFInitCCITTRLEW(tif, 0)", "TIFFInitCCITTRLEW(tif, 2048)", "TIFFInitCCITTRLEW(tif, 4)", "TIFFInitCCITTRLEW(tif, 512)", "TIFFInitCCITTRLEW(tif, 65)", "TIFFInitDumpMode(tif, 0)", "TIFFInitDumpMode(tif, 2048)", "TIFFInitDumpMode(tif, 4)", "TIFFInitDumpMode(tif, 512)", "TIFFInitDumpMode(tif, 65)", "TIFFInitJPEG(tif, 0)", "TIFFInitJPEG(tif, 2048)", "TIFFInitJPEG(tif, 4)", "TIFFInitJPEG(tif, 512)", "TIFFInitJPEG(tif, 65)", "TIFFInitLZW(tif, 0)", "TIFFInitLZW(tif, 2048)", "TIFFInitLZW(tif, 4)", "TIFFInitLZW(tif, 512)", "TIFFInitLZW(tif, 65)", "TIFFInitNeXT(tif, 0)", "TIFFInitNeXT(tif, 2048)", "TIFFInitNeXT(tif, 4)", "TIFFInitNeXT(tif, 512)", "TIFFInitNeXT(tif, 65)", "TIFFInitOJPEG(tif, 0)", "TIFFInitOJPEG(tif, 2048)", "TIFFInitOJPEG(tif, 4)", "TIFFInitOJPEG(tif, 512)", "TIFFInitOJPEG(tif, 65)", "TIFFInitPackBits(tif, 0)", "TIFFInitPackBits(tif, 2048)", "TIFFInitPackBits(tif, 4)", "TIFFInitPackBits(tif, 512)", "TIFFInitPackBits(tif, 65)", "TIFFInitPixarLog(tif, 0)", "TIFFInitPixarLog(tif, 2048)", "TIFFInitPixarLog(tif, 4)", "TIFFInitPixarLog(tif, 512)", "TIFFInitPixarLog(tif, 65)", "TIFFInitSGILog(tif, 0)", "TIFFInitSGILog(tif, 2048)", "TIFFInitSGILog(tif, 4)", "TIFFInitSGILog(tif, 512)", "TIFFInitSGILog(tif, 65)", "TIFFInitThunderScan(tif, 0)", "TIFFInitThunderScan(tif, 2048)", "TIFFInitThunderScan(tif, 4)", "TIFFInitThunderScan(tif, 512)", "TIFFInitThunderScan(tif, 65)", "TIFFInitZIP(tif, 0)", "TIFFInitZIP(tif, 2048)", "TIFFInitZIP(tif, 4)", "TIFFInitZIP(tif, 512)", "TIFFInitZIP(tif, 65)", "TIFFRGBAImageOK(tif, 0)", "TIFFRawStripSize(tif, 0)", "TIFFRawStripSize(tif, 2048)", "TIFFRawStripSize(tif, 4)", "TIFFRawStripSize(tif, 512)", "TIFFRawStripSize(tif, 65)", "TIFFRawStripSize64(tif, 0)", "TIFFRawStripSize64(tif, 2048)", "TIFFRawStripSize64(tif, 4)", "TIFFRawStripSize64(tif, 512)", "TIFFRawStripSize64(tif, 65)", "TIFFReadEXIFDirectory(tif, 0)", "TIFFReadEXIFDirectory(tif, 2048)", "TIFFReadEXIFDirectory(tif, 4)", "TIFFReadEXIFDirectory(tif, 512)", "TIFFReadEXIFDirectory(tif, 65)", "TIFFSetClientdata(tif, 0)", "TIFFSetCompressionScheme(tif, 0)", "TIFFSetCompressionScheme(tif, 2048)", "TIFFSetCompressionScheme(tif, 4)", "TIFFSetCompressionScheme(tif, 512)", "TIFFSetCompressionScheme(tif, 65)", "TIFFSetDirectory(tif, 0)", "TIFFSetDirectory(tif, 2048)", "TIFFSetDirectory(tif, 4)", "TIFFSetDirectory(tif, 512)", "TIFFSetDirectory(tif, 65)", "TIFFSetFileName(tif, 0)", "TIFFSetFileno(tif, 0)", "TIFFSetFileno(tif, 2048)", "TIFFSetFileno(tif, 4)", "TIFFSetFileno(tif, 512)", "TIFFSetFileno(tif, 65)", "TIFFSetMode(tif, 0)", "TIFFSetMode(tif, 2048)", "TIFFSetMode(tif, 4)", "TIFFSetMode(tif, 512)", "TIFFSetMode(tif, 65)", "TIFFSetSubDirectory(tif, 0)", "TIFFSetSubDirectory(tif, 2048)", "TIFFSetSubDirectory(tif, 4)", "TIFFSetSubDirectory(tif, 512)", "TIFFSetSubDirectory(tif, 65)", "TIFFSetWriteOffset(tif, 0)", "TIFFSetWriteOffset(tif, 2048)", "TIFFSetWriteOffset(tif, 4)", "TIFFSetWriteOffset(tif, 512)", "TIFFSetWriteOffset(tif, 65)", "TIFFUnlinkDirectory(tif, 0)", "TIFFUnlinkDirectory(tif, 2048)", "TIFFUnlinkDirectory(tif, 4)", "TIFFUnlinkDirectory(tif, 512)", "TIFFUnlinkDirectory(tif, 65)", "TIFFVStripSize(tif, 0)", "TIFFVStripSize(tif, 2048)", "TIFFVStripSize(tif, 4)", "TIFFVStripSize(tif, 512)", "TIFFVStripSize(tif, 65)", "TIFFVStripSize64(tif, 0)", "TIFFVStripSize64(tif, 2048)", "TIFFVStripSize64(tif, 4)", "TIFFVStripSize64(tif, 512)", "TIFFVStripSize64(tif, 65)", "TIFFVTileSize(tif, 0)", "TIFFVTileSize(tif, 2048)", "TIFFVTileSize(tif, 4)", "TIFFVTileSize(tif, 512)", "TIFFVTileSize(tif, 65)", "TIFFVTileSize64(tif, 0)", "TIFFVTileSize64(tif, 2048)", "TIFFVTileSize64(tif, 4)", "TIFFVTileSize64(tif, 512)", "TIFFVTileSize64(tif, 65)", "_TIFFDefaultStripSize(tif, 0)", "_TIFFDefaultStripSize(tif, 2048)", "_TIFFDefaultStripSize(tif, 4)", "_TIFFDefaultStripSize(tif, 512)", "_TIFFDefaultStripSize(tif, 65)", "_TIFFNoPreCode(tif, 0)", "_TIFFNoPreCode(tif, 2048)", "_TIFFNoPreCode(tif, 4)", "_TIFFNoPreCode(tif, 512)", "_TIFFNoPreCode(tif, 65)", "_TIFFNoSeek(tif, 0)", "_TIFFNoSeek(tif, 2048)", "_TIFFNoSeek(tif, 4)", "_TIFFNoSeek(tif, 512)", "_TIFFNoSeek(tif, 65)", "_TIFFPrintFieldInfo(tif, 0)", "_TIFFSetupFieldInfo(tif, 0)", "{\n}\n", "TIFFAccessTagMethods(tif)", "TIFFCheckpointDirectory(tif)", "TIFFCleanup(tif)", "TIFFClientdata(tif)", "TIFFClose(tif)", "TIFFCreateDirectory(tif)", "TIFFCurrentDirOffset(tif)", "TIFFCurrentDirectory(tif)", "TIFFCurrentRow(tif)", "TIFFCurrentStrip(tif)", "TIFFCurrentTile(tif)", "TIFFDefaultDirectory(tif)", "TIFFFileName(tif)", "TIFFFileno(tif)", "TIFFFlush(tif)", "TIFFFlushData(tif)", "TIFFFlushData1(tif)", "TIFFFreeDirectory(tif)", "TIFFGetCloseProc(tif)", "TIFFGetMapFileProc(tif)", "TIFFGetMode(tif)", "TIFFGetReadProc(tif)", "TIFFGetSeekProc(tif)", "TIFFGetSizeProc(tif)", "TIFFGetTagListCount(tif)", "TIFFGetUnmapFileProc(tif)", "TIFFGetWriteProc(tif)", "TIFFIsBigEndian(tif)", "TIFFIsByteSwapped(tif)", "TIFFIsMSB2LSB(tif)", "TIFFIsTiled(tif)", "TIFFIsUpSampled(tif)", "TIFFLastDirectory(tif)", "TIFFNumberOfDirectories(tif)", "TIFFNumberOfStrips(tif)", "TIFFNumberOfTiles(tif)", "TIFFRasterScanlineSize(tif)", "TIFFRasterScanlineSize64(tif)", "TIFFReadDirectory(tif)", "TIFFRewriteDirectory(tif)", "TIFFScanlineSize(tif)", "TIFFScanlineSize64(tif)", "TIFFSetDefaultCompressionState(tif)", "TIFFSetupStrips(tif)", "TIFFStripSize(tif)", "TIFFStripSize64(tif)", "TIFFTileRowSize(tif)", "TIFFTileRowSize64(tif)", "TIFFTileSize(tif)", "TIFFTileSize64(tif)", "TIFFWriteDirectory(tif)", "_TIFFSetDefaultCompressionState(tif)", "(*(&tif)->tif_cleanup)(tif)", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((&tif))", "(*tif->tif_cleanup)((tif))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.2138311828267563, -4.7514867625267554, -6.6635642625267559, -6.2416229505267555, -6.7884629345267555, -6.2412827625267564, -6.5900719625267561, -6.5900719625267561, -6.2412827625267564, -6.2412827625267564, -6.5900719625267561, -6.5900719625267561, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.5900719625267561, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.5900719625267561, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.5900719625267561, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -6.2412827625267564, -7.0442348625267561]
								}, {
									"case":	2,
									"scores":	[-5.063577322526756]
								}, {
									"case":	3,
									"scores":	[-5.063577322526756]
								}, {
									"case":	4,
									"scores":	[-5.063577322526756]
								}, {
									"case":	5,
									"scores":	[-5.063577322526756]
								}, {
									"case":	6,
									"scores":	[-5.063577322526756]
								}, {
									"case":	7,
									"scores":	[-5.063577322526756]
								}, {
									"case":	8,
									"scores":	[-5.063577322526756]
								}, {
									"case":	9,
									"scores":	[-5.063577322526756]
								}, {
									"case":	10,
									"scores":	[-5.063577322526756]
								}, {
									"case":	11,
									"scores":	[-5.063577322526756]
								}, {
									"case":	12,
									"scores":	[-5.063577322526756]
								}, {
									"case":	13,
									"scores":	[-5.063577322526756]
								}, {
									"case":	14,
									"scores":	[-5.063577322526756]
								}, {
									"case":	15,
									"scores":	[-5.063577322526756]
								}, {
									"case":	16,
									"scores":	[-5.063577322526756]
								}, {
									"case":	17,
									"scores":	[-5.063577322526756]
								}, {
									"case":	18,
									"scores":	[-5.063577322526756]
								}, {
									"case":	19,
									"scores":	[-5.063577322526756]
								}, {
									"case":	20,
									"scores":	[-5.063577322526756]
								}, {
									"case":	21,
									"scores":	[-5.063577322526756]
								}, {
									"case":	22,
									"scores":	[-5.063577322526756]
								}, {
									"case":	23,
									"scores":	[-5.063577322526756]
								}, {
									"case":	24,
									"scores":	[-5.063577322526756]
								}, {
									"case":	25,
									"scores":	[-5.063577322526756]
								}, {
									"case":	26,
									"scores":	[-5.063577322526756]
								}, {
									"case":	27,
									"scores":	[-5.063577322526756]
								}, {
									"case":	28,
									"scores":	[-5.063577322526756]
								}, {
									"case":	29,
									"scores":	[-5.063577322526756]
								}, {
									"case":	30,
									"scores":	[-5.063577322526756]
								}, {
									"case":	31,
									"scores":	[-5.063577322526756]
								}, {
									"case":	32,
									"scores":	[-5.063577322526756]
								}, {
									"case":	33,
									"scores":	[-5.063577322526756]
								}, {
									"case":	34,
									"scores":	[-5.063577322526756]
								}, {
									"case":	35,
									"scores":	[-5.063577322526756]
								}, {
									"case":	36,
									"scores":	[-5.063577322526756]
								}, {
									"case":	37,
									"scores":	[-5.063577322526756]
								}, {
									"case":	38,
									"scores":	[-5.063577322526756]
								}, {
									"case":	39,
									"scores":	[-5.063577322526756]
								}, {
									"case":	40,
									"scores":	[-5.063577322526756]
								}, {
									"case":	41,
									"scores":	[-5.063577322526756]
								}, {
									"case":	42,
									"scores":	[-5.063577322526756]
								}, {
									"case":	43,
									"scores":	[-5.063577322526756]
								}, {
									"case":	44,
									"scores":	[-5.063577322526756]
								}, {
									"case":	45,
									"scores":	[-5.063577322526756]
								}, {
									"case":	46,
									"scores":	[-5.063577322526756]
								}, {
									"case":	47,
									"scores":	[-5.063577322526756]
								}, {
									"case":	48,
									"scores":	[-5.063577322526756]
								}, {
									"case":	49,
									"scores":	[-5.063577322526756]
								}, {
									"case":	50,
									"scores":	[-5.063577322526756]
								}, {
									"case":	51,
									"scores":	[-5.063577322526756]
								}, {
									"case":	52,
									"scores":	[-5.063577322526756]
								}, {
									"case":	53,
									"scores":	[-5.063577322526756]
								}, {
									"case":	54,
									"scores":	[-5.063577322526756]
								}, {
									"case":	55,
									"scores":	[-5.063577322526756]
								}, {
									"case":	56,
									"scores":	[-5.063577322526756]
								}, {
									"case":	57,
									"scores":	[-5.063577322526756]
								}, {
									"case":	58,
									"scores":	[-5.063577322526756]
								}, {
									"case":	59,
									"scores":	[-5.063577322526756]
								}, {
									"case":	60,
									"scores":	[-5.063577322526756]
								}, {
									"case":	61,
									"scores":	[-5.063577322526756]
								}, {
									"case":	62,
									"scores":	[-5.063577322526756]
								}, {
									"case":	63,
									"scores":	[-5.063577322526756]
								}, {
									"case":	64,
									"scores":	[-5.063577322526756]
								}, {
									"case":	65,
									"scores":	[-5.063577322526756]
								}, {
									"case":	66,
									"scores":	[-5.063577322526756]
								}, {
									"case":	67,
									"scores":	[-5.063577322526756]
								}, {
									"case":	68,
									"scores":	[-5.063577322526756]
								}, {
									"case":	69,
									"scores":	[-5.063577322526756]
								}, {
									"case":	70,
									"scores":	[-5.063577322526756]
								}, {
									"case":	71,
									"scores":	[-5.063577322526756]
								}, {
									"case":	72,
									"scores":	[-5.063577322526756]
								}, {
									"case":	73,
									"scores":	[-5.063577322526756]
								}, {
									"case":	74,
									"scores":	[-5.063577322526756]
								}, {
									"case":	75,
									"scores":	[-5.063577322526756]
								}, {
									"case":	76,
									"scores":	[-5.063577322526756]
								}, {
									"case":	77,
									"scores":	[-5.063577322526756]
								}, {
									"case":	78,
									"scores":	[-5.063577322526756]
								}, {
									"case":	79,
									"scores":	[-5.063577322526756]
								}, {
									"case":	80,
									"scores":	[-5.063577322526756]
								}, {
									"case":	81,
									"scores":	[-5.063577322526756]
								}, {
									"case":	82,
									"scores":	[-5.063577322526756]
								}, {
									"case":	83,
									"scores":	[-5.063577322526756]
								}, {
									"case":	84,
									"scores":	[-5.063577322526756]
								}, {
									"case":	85,
									"scores":	[-5.063577322526756]
								}, {
									"case":	86,
									"scores":	[-5.063577322526756]
								}, {
									"case":	87,
									"scores":	[-5.063577322526756]
								}, {
									"case":	88,
									"scores":	[-5.063577322526756]
								}, {
									"case":	89,
									"scores":	[-5.063577322526756]
								}, {
									"case":	90,
									"scores":	[-5.063577322526756]
								}, {
									"case":	91,
									"scores":	[-5.063577322526756]
								}, {
									"case":	92,
									"scores":	[-5.063577322526756]
								}, {
									"case":	93,
									"scores":	[-5.063577322526756]
								}, {
									"case":	94,
									"scores":	[-5.063577322526756]
								}, {
									"case":	95,
									"scores":	[-5.063577322526756]
								}, {
									"case":	96,
									"scores":	[-5.063577322526756]
								}, {
									"case":	97,
									"scores":	[-5.063577322526756]
								}, {
									"case":	98,
									"scores":	[-5.063577322526756]
								}, {
									"case":	99,
									"scores":	[-5.063577322526756]
								}, {
									"case":	100,
									"scores":	[-5.063577322526756]
								}, {
									"case":	101,
									"scores":	[-5.063577322526756]
								}, {
									"case":	102,
									"scores":	[-5.063577322526756]
								}, {
									"case":	103,
									"scores":	[-5.063577322526756]
								}, {
									"case":	104,
									"scores":	[-5.063577322526756]
								}, {
									"case":	105,
									"scores":	[-5.063577322526756]
								}, {
									"case":	106,
									"scores":	[-5.063577322526756]
								}, {
									"case":	107,
									"scores":	[-5.063577322526756]
								}, {
									"case":	108,
									"scores":	[-5.063577322526756]
								}, {
									"case":	109,
									"scores":	[-5.063577322526756]
								}, {
									"case":	110,
									"scores":	[-5.063577322526756]
								}, {
									"case":	111,
									"scores":	[-5.063577322526756]
								}, {
									"case":	112,
									"scores":	[-5.063577322526756]
								}, {
									"case":	113,
									"scores":	[-5.063577322526756]
								}, {
									"case":	114,
									"scores":	[-5.063577322526756]
								}, {
									"case":	115,
									"scores":	[-5.063577322526756]
								}, {
									"case":	116,
									"scores":	[-5.063577322526756]
								}, {
									"case":	117,
									"scores":	[-5.063577322526756]
								}, {
									"case":	118,
									"scores":	[-5.063577322526756]
								}, {
									"case":	119,
									"scores":	[-5.063577322526756]
								}, {
									"case":	120,
									"scores":	[-5.063577322526756]
								}, {
									"case":	121,
									"scores":	[-5.063577322526756]
								}, {
									"case":	122,
									"scores":	[-5.063577322526756]
								}, {
									"case":	123,
									"scores":	[-5.063577322526756]
								}, {
									"case":	124,
									"scores":	[-5.063577322526756]
								}, {
									"case":	125,
									"scores":	[-5.063577322526756]
								}, {
									"case":	126,
									"scores":	[-5.063577322526756]
								}, {
									"case":	127,
									"scores":	[-5.063577322526756]
								}, {
									"case":	128,
									"scores":	[-5.063577322526756]
								}, {
									"case":	129,
									"scores":	[-5.063577322526756]
								}, {
									"case":	130,
									"scores":	[-5.063577322526756]
								}, {
									"case":	131,
									"scores":	[-5.063577322526756]
								}, {
									"case":	132,
									"scores":	[-5.063577322526756]
								}, {
									"case":	133,
									"scores":	[-5.063577322526756]
								}, {
									"case":	134,
									"scores":	[-5.063577322526756]
								}, {
									"case":	135,
									"scores":	[-5.063577322526756]
								}, {
									"case":	136,
									"scores":	[-5.063577322526756]
								}, {
									"case":	137,
									"scores":	[-5.063577322526756]
								}, {
									"case":	138,
									"scores":	[-5.063577322526756]
								}, {
									"case":	139,
									"scores":	[-5.063577322526756]
								}, {
									"case":	140,
									"scores":	[-5.063577322526756]
								}, {
									"case":	141,
									"scores":	[-5.063577322526756]
								}, {
									"case":	142,
									"scores":	[-5.063577322526756]
								}, {
									"case":	143,
									"scores":	[-5.063577322526756]
								}, {
									"case":	144,
									"scores":	[-5.063577322526756]
								}, {
									"case":	145,
									"scores":	[-5.063577322526756]
								}, {
									"case":	146,
									"scores":	[-5.063577322526756]
								}, {
									"case":	147,
									"scores":	[-5.063577322526756]
								}, {
									"case":	148,
									"scores":	[-5.063577322526756]
								}, {
									"case":	149,
									"scores":	[-5.063577322526756]
								}, {
									"case":	150,
									"scores":	[-5.063577322526756]
								}, {
									"case":	151,
									"scores":	[-5.063577322526756]
								}, {
									"case":	152,
									"scores":	[-5.063577322526756]
								}, {
									"case":	153,
									"scores":	[-5.063577322526756]
								}, {
									"case":	154,
									"scores":	[-5.063577322526756]
								}, {
									"case":	155,
									"scores":	[-5.063577322526756]
								}, {
									"case":	156,
									"scores":	[-5.063577322526756]
								}, {
									"case":	157,
									"scores":	[-5.063577322526756]
								}, {
									"case":	158,
									"scores":	[-5.063577322526756]
								}, {
									"case":	159,
									"scores":	[-5.063577322526756]
								}, {
									"case":	160,
									"scores":	[-5.063577322526756]
								}, {
									"case":	161,
									"scores":	[-5.063577322526756]
								}, {
									"case":	162,
									"scores":	[-5.063577322526756]
								}, {
									"case":	163,
									"scores":	[-5.063577322526756]
								}, {
									"case":	164,
									"scores":	[-5.063577322526756]
								}, {
									"case":	165,
									"scores":	[-5.063577322526756]
								}, {
									"case":	166,
									"scores":	[-5.063577322526756]
								}, {
									"case":	167,
									"scores":	[-5.063577322526756]
								}, {
									"case":	168,
									"scores":	[-5.063577322526756]
								}, {
									"case":	169,
									"scores":	[-5.063577322526756]
								}, {
									"case":	170,
									"scores":	[-5.063577322526756]
								}, {
									"case":	171,
									"scores":	[-5.063577322526756]
								}, {
									"case":	172,
									"scores":	[-5.063577322526756]
								}, {
									"case":	173,
									"scores":	[-5.063577322526756]
								}, {
									"case":	174,
									"scores":	[-5.063577322526756]
								}, {
									"case":	175,
									"scores":	[-5.063577322526756]
								}, {
									"case":	176,
									"scores":	[-5.063577322526756]
								}, {
									"case":	177,
									"scores":	[-5.063577322526756]
								}, {
									"case":	178,
									"scores":	[-5.063577322526756]
								}, {
									"case":	179,
									"scores":	[-5.063577322526756]
								}, {
									"case":	180,
									"scores":	[-5.063577322526756]
								}, {
									"case":	181,
									"scores":	[-5.063577322526756]
								}, {
									"case":	182,
									"scores":	[-5.063577322526756]
								}, {
									"case":	183,
									"scores":	[-5.063577322526756]
								}, {
									"case":	184,
									"scores":	[-5.063577322526756]
								}, {
									"case":	185,
									"scores":	[-5.063577322526756]
								}, {
									"case":	186,
									"scores":	[-5.063577322526756]
								}, {
									"case":	187,
									"scores":	[-5.063577322526756]
								}, {
									"case":	188,
									"scores":	[-5.063577322526756]
								}, {
									"case":	189,
									"scores":	[-5.063577322526756]
								}, {
									"case":	190,
									"scores":	[-5.063577322526756]
								}, {
									"case":	191,
									"scores":	[-5.063577322526756]
								}, {
									"case":	192,
									"scores":	[-5.063577322526756]
								}, {
									"case":	193,
									"scores":	[-5.063577322526756]
								}, {
									"case":	194,
									"scores":	[-5.063577322526756]
								}, {
									"case":	195,
									"scores":	[-5.063577322526756]
								}, {
									"case":	196,
									"scores":	[-5.063577322526756]
								}, {
									"case":	197,
									"scores":	[-5.063577322526756]
								}, {
									"case":	198,
									"scores":	[-5.063577322526756]
								}, {
									"case":	199,
									"scores":	[-5.063577322526756]
								}, {
									"case":	200,
									"scores":	[-5.063577322526756]
								}, {
									"case":	201,
									"scores":	[-5.063577322526756]
								}, {
									"case":	202,
									"scores":	[-5.063577322526756]
								}, {
									"case":	203,
									"scores":	[-5.063577322526756]
								}, {
									"case":	204,
									"scores":	[-5.063577322526756]
								}, {
									"case":	205,
									"scores":	[-5.063577322526756]
								}, {
									"case":	206,
									"scores":	[-5.063577322526756]
								}, {
									"case":	207,
									"scores":	[-5.063577322526756]
								}, {
									"case":	208,
									"scores":	[-5.063577322526756]
								}, {
									"case":	209,
									"scores":	[-5.063577322526756]
								}, {
									"case":	210,
									"scores":	[-5.063577322526756]
								}, {
									"case":	211,
									"scores":	[-5.063577322526756]
								}, {
									"case":	212,
									"scores":	[-5.063577322526756]
								}, {
									"case":	213,
									"scores":	[-5.063577322526756]
								}, {
									"case":	214,
									"scores":	[-5.063577322526756]
								}, {
									"case":	215,
									"scores":	[-5.063577322526756]
								}, {
									"case":	216,
									"scores":	[-5.063577322526756]
								}, {
									"case":	217,
									"scores":	[-5.063577322526756]
								}, {
									"case":	218,
									"scores":	[-5.063577322526756]
								}, {
									"case":	219,
									"scores":	[-5.063577322526756]
								}, {
									"case":	220,
									"scores":	[-5.063577322526756]
								}, {
									"case":	221,
									"scores":	[-5.063577322526756]
								}, {
									"case":	222,
									"scores":	[-5.063577322526756]
								}, {
									"case":	223,
									"scores":	[-5.063577322526756]
								}, {
									"case":	224,
									"scores":	[-5.063577322526756]
								}, {
									"case":	225,
									"scores":	[-5.063577322526756]
								}, {
									"case":	226,
									"scores":	[-5.063577322526756]
								}, {
									"case":	227,
									"scores":	[-5.063577322526756]
								}, {
									"case":	228,
									"scores":	[-5.063577322526756]
								}, {
									"case":	229,
									"scores":	[-5.063577322526756]
								}, {
									"case":	230,
									"scores":	[-5.063577322526756]
								}, {
									"case":	231,
									"scores":	[-5.063577322526756]
								}, {
									"case":	232,
									"scores":	[-5.063577322526756]
								}, {
									"case":	233,
									"scores":	[-5.063577322526756]
								}, {
									"case":	234,
									"scores":	[-5.063577322526756]
								}, {
									"case":	235,
									"scores":	[-5.063577322526756]
								}]
						}]
				}, {
					"line":	54,
					"switches":	[{
							"switch":	5,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	55,
							"begin_column":	0,
							"end_line":	55,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L55\", 62, &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.023171907891717]
								}, {
									"case":	2,
									"scores":	[-5.023171907891717]
								}, {
									"case":	3,
									"scores":	[-5.023171907891717]
								}, {
									"case":	4,
									"scores":	[-5.023171907891717]
								}, {
									"case":	5,
									"scores":	[-5.023171907891717]
								}, {
									"case":	6,
									"scores":	[-5.023171907891717]
								}, {
									"case":	7,
									"scores":	[-5.023171907891717]
								}, {
									"case":	8,
									"scores":	[-5.023171907891717]
								}, {
									"case":	9,
									"scores":	[-5.023171907891717]
								}, {
									"case":	10,
									"scores":	[-5.023171907891717]
								}, {
									"case":	11,
									"scores":	[-5.023171907891717]
								}, {
									"case":	12,
									"scores":	[-5.023171907891717]
								}, {
									"case":	13,
									"scores":	[-5.023171907891717]
								}, {
									"case":	14,
									"scores":	[-5.023171907891717]
								}, {
									"case":	15,
									"scores":	[-5.023171907891717]
								}, {
									"case":	16,
									"scores":	[-5.023171907891717]
								}, {
									"case":	17,
									"scores":	[-5.023171907891717]
								}, {
									"case":	18,
									"scores":	[-5.023171907891717]
								}, {
									"case":	19,
									"scores":	[-5.023171907891717]
								}, {
									"case":	20,
									"scores":	[-5.023171907891717]
								}, {
									"case":	21,
									"scores":	[-5.023171907891717]
								}, {
									"case":	22,
									"scores":	[-5.023171907891717]
								}, {
									"case":	23,
									"scores":	[-5.023171907891717]
								}, {
									"case":	24,
									"scores":	[-5.023171907891717]
								}, {
									"case":	25,
									"scores":	[-5.023171907891717]
								}, {
									"case":	26,
									"scores":	[-5.023171907891717]
								}, {
									"case":	27,
									"scores":	[-5.023171907891717]
								}, {
									"case":	28,
									"scores":	[-5.023171907891717]
								}, {
									"case":	29,
									"scores":	[-5.023171907891717]
								}, {
									"case":	30,
									"scores":	[-5.023171907891717]
								}, {
									"case":	31,
									"scores":	[-5.023171907891717]
								}, {
									"case":	32,
									"scores":	[-5.023171907891717]
								}, {
									"case":	33,
									"scores":	[-5.023171907891717]
								}, {
									"case":	34,
									"scores":	[-5.023171907891717]
								}, {
									"case":	35,
									"scores":	[-5.023171907891717]
								}, {
									"case":	36,
									"scores":	[-5.023171907891717]
								}, {
									"case":	37,
									"scores":	[-5.023171907891717]
								}, {
									"case":	38,
									"scores":	[-5.023171907891717]
								}, {
									"case":	39,
									"scores":	[-5.023171907891717]
								}, {
									"case":	40,
									"scores":	[-5.023171907891717]
								}, {
									"case":	41,
									"scores":	[-5.023171907891717]
								}, {
									"case":	42,
									"scores":	[-5.023171907891717]
								}, {
									"case":	43,
									"scores":	[-5.023171907891717]
								}, {
									"case":	44,
									"scores":	[-5.023171907891717]
								}, {
									"case":	45,
									"scores":	[-5.023171907891717]
								}, {
									"case":	46,
									"scores":	[-5.023171907891717]
								}, {
									"case":	47,
									"scores":	[-5.023171907891717]
								}, {
									"case":	48,
									"scores":	[-5.023171907891717]
								}, {
									"case":	49,
									"scores":	[-5.023171907891717]
								}, {
									"case":	50,
									"scores":	[-5.023171907891717]
								}, {
									"case":	51,
									"scores":	[-5.023171907891717]
								}, {
									"case":	52,
									"scores":	[-5.023171907891717]
								}, {
									"case":	53,
									"scores":	[-5.023171907891717]
								}, {
									"case":	54,
									"scores":	[-5.023171907891717]
								}, {
									"case":	55,
									"scores":	[-5.023171907891717]
								}, {
									"case":	56,
									"scores":	[-5.023171907891717]
								}, {
									"case":	57,
									"scores":	[-5.023171907891717]
								}, {
									"case":	58,
									"scores":	[-5.023171907891717]
								}, {
									"case":	59,
									"scores":	[-5.023171907891717]
								}, {
									"case":	60,
									"scores":	[-5.023171907891717]
								}, {
									"case":	61,
									"scores":	[-5.023171907891717]
								}, {
									"case":	62,
									"scores":	[-5.023171907891717]
								}, {
									"case":	63,
									"scores":	[-5.023171907891717]
								}, {
									"case":	64,
									"scores":	[-5.023171907891717]
								}, {
									"case":	65,
									"scores":	[-5.023171907891717]
								}, {
									"case":	66,
									"scores":	[-5.023171907891717]
								}, {
									"case":	67,
									"scores":	[-5.023171907891717]
								}, {
									"case":	68,
									"scores":	[-5.023171907891717]
								}, {
									"case":	69,
									"scores":	[-5.023171907891717]
								}, {
									"case":	70,
									"scores":	[-5.023171907891717]
								}, {
									"case":	71,
									"scores":	[-5.023171907891717]
								}, {
									"case":	72,
									"scores":	[-5.023171907891717]
								}, {
									"case":	73,
									"scores":	[-5.023171907891717]
								}, {
									"case":	74,
									"scores":	[-5.023171907891717]
								}, {
									"case":	75,
									"scores":	[-5.023171907891717]
								}, {
									"case":	76,
									"scores":	[-5.023171907891717]
								}, {
									"case":	77,
									"scores":	[-5.023171907891717]
								}, {
									"case":	78,
									"scores":	[-5.023171907891717]
								}, {
									"case":	79,
									"scores":	[-5.023171907891717]
								}, {
									"case":	80,
									"scores":	[-5.023171907891717]
								}, {
									"case":	81,
									"scores":	[-5.023171907891717]
								}, {
									"case":	82,
									"scores":	[-5.023171907891717]
								}, {
									"case":	83,
									"scores":	[-5.023171907891717]
								}, {
									"case":	84,
									"scores":	[-5.023171907891717]
								}, {
									"case":	85,
									"scores":	[-5.023171907891717]
								}, {
									"case":	86,
									"scores":	[-5.023171907891717]
								}, {
									"case":	87,
									"scores":	[-5.023171907891717]
								}, {
									"case":	88,
									"scores":	[-5.023171907891717]
								}, {
									"case":	89,
									"scores":	[-5.023171907891717]
								}, {
									"case":	90,
									"scores":	[-5.023171907891717]
								}, {
									"case":	91,
									"scores":	[-5.023171907891717]
								}, {
									"case":	92,
									"scores":	[-5.023171907891717]
								}, {
									"case":	93,
									"scores":	[-5.023171907891717]
								}, {
									"case":	94,
									"scores":	[-5.023171907891717]
								}, {
									"case":	95,
									"scores":	[-5.023171907891717]
								}, {
									"case":	96,
									"scores":	[-5.023171907891717]
								}, {
									"case":	97,
									"scores":	[-5.023171907891717]
								}, {
									"case":	98,
									"scores":	[-5.023171907891717]
								}, {
									"case":	99,
									"scores":	[-5.023171907891717]
								}, {
									"case":	100,
									"scores":	[-5.023171907891717]
								}, {
									"case":	101,
									"scores":	[-5.023171907891717]
								}, {
									"case":	102,
									"scores":	[-5.023171907891717]
								}, {
									"case":	103,
									"scores":	[-5.023171907891717]
								}, {
									"case":	104,
									"scores":	[-5.023171907891717]
								}, {
									"case":	105,
									"scores":	[-5.023171907891717]
								}, {
									"case":	106,
									"scores":	[-5.023171907891717]
								}, {
									"case":	107,
									"scores":	[-5.023171907891717]
								}, {
									"case":	108,
									"scores":	[-5.023171907891717]
								}, {
									"case":	109,
									"scores":	[-5.023171907891717]
								}, {
									"case":	110,
									"scores":	[-5.023171907891717]
								}, {
									"case":	111,
									"scores":	[-5.023171907891717]
								}, {
									"case":	112,
									"scores":	[-5.023171907891717]
								}, {
									"case":	113,
									"scores":	[-5.023171907891717]
								}, {
									"case":	114,
									"scores":	[-5.023171907891717]
								}, {
									"case":	115,
									"scores":	[-5.023171907891717]
								}, {
									"case":	116,
									"scores":	[-5.023171907891717]
								}, {
									"case":	117,
									"scores":	[-5.023171907891717]
								}, {
									"case":	118,
									"scores":	[-5.023171907891717]
								}, {
									"case":	119,
									"scores":	[-5.023171907891717]
								}, {
									"case":	120,
									"scores":	[-5.023171907891717]
								}, {
									"case":	121,
									"scores":	[-5.023171907891717]
								}, {
									"case":	122,
									"scores":	[-5.023171907891717]
								}, {
									"case":	123,
									"scores":	[-5.023171907891717]
								}, {
									"case":	124,
									"scores":	[-5.023171907891717]
								}, {
									"case":	125,
									"scores":	[-5.023171907891717]
								}, {
									"case":	126,
									"scores":	[-5.023171907891717]
								}, {
									"case":	127,
									"scores":	[-5.023171907891717]
								}, {
									"case":	128,
									"scores":	[-5.023171907891717]
								}, {
									"case":	129,
									"scores":	[-5.023171907891717]
								}, {
									"case":	130,
									"scores":	[-5.023171907891717]
								}, {
									"case":	131,
									"scores":	[-5.023171907891717]
								}, {
									"case":	132,
									"scores":	[-5.023171907891717]
								}, {
									"case":	133,
									"scores":	[-5.023171907891717]
								}, {
									"case":	134,
									"scores":	[-5.023171907891717]
								}, {
									"case":	135,
									"scores":	[-5.023171907891717]
								}, {
									"case":	136,
									"scores":	[-5.023171907891717]
								}, {
									"case":	137,
									"scores":	[-5.023171907891717]
								}, {
									"case":	138,
									"scores":	[-5.023171907891717]
								}, {
									"case":	139,
									"scores":	[-5.023171907891717]
								}, {
									"case":	140,
									"scores":	[-5.023171907891717]
								}, {
									"case":	141,
									"scores":	[-5.023171907891717]
								}, {
									"case":	142,
									"scores":	[-5.023171907891717]
								}, {
									"case":	143,
									"scores":	[-5.023171907891717]
								}, {
									"case":	144,
									"scores":	[-5.023171907891717]
								}, {
									"case":	145,
									"scores":	[-5.023171907891717]
								}, {
									"case":	146,
									"scores":	[-5.023171907891717]
								}, {
									"case":	147,
									"scores":	[-5.023171907891717]
								}, {
									"case":	148,
									"scores":	[-5.023171907891717]
								}, {
									"case":	149,
									"scores":	[-5.023171907891717]
								}, {
									"case":	150,
									"scores":	[-5.023171907891717]
								}, {
									"case":	151,
									"scores":	[-5.023171907891717]
								}, {
									"case":	152,
									"scores":	[-5.023171907891717]
								}, {
									"case":	153,
									"scores":	[-5.023171907891717]
								}, {
									"case":	154,
									"scores":	[-5.023171907891717]
								}, {
									"case":	155,
									"scores":	[-5.023171907891717]
								}, {
									"case":	156,
									"scores":	[-5.023171907891717]
								}, {
									"case":	157,
									"scores":	[-5.023171907891717]
								}, {
									"case":	158,
									"scores":	[-5.023171907891717]
								}, {
									"case":	159,
									"scores":	[-5.023171907891717]
								}, {
									"case":	160,
									"scores":	[-5.023171907891717]
								}, {
									"case":	161,
									"scores":	[-5.023171907891717]
								}, {
									"case":	162,
									"scores":	[-5.023171907891717]
								}, {
									"case":	163,
									"scores":	[-5.023171907891717]
								}, {
									"case":	164,
									"scores":	[-5.023171907891717]
								}, {
									"case":	165,
									"scores":	[-5.023171907891717]
								}, {
									"case":	166,
									"scores":	[-5.023171907891717]
								}, {
									"case":	167,
									"scores":	[-5.023171907891717]
								}, {
									"case":	168,
									"scores":	[-5.023171907891717]
								}, {
									"case":	169,
									"scores":	[-5.023171907891717]
								}, {
									"case":	170,
									"scores":	[-5.023171907891717]
								}, {
									"case":	171,
									"scores":	[-5.023171907891717]
								}, {
									"case":	172,
									"scores":	[-5.023171907891717]
								}, {
									"case":	173,
									"scores":	[-5.023171907891717]
								}, {
									"case":	174,
									"scores":	[-5.023171907891717]
								}, {
									"case":	175,
									"scores":	[-5.023171907891717]
								}, {
									"case":	176,
									"scores":	[-5.023171907891717]
								}, {
									"case":	177,
									"scores":	[-5.023171907891717]
								}, {
									"case":	178,
									"scores":	[-5.023171907891717]
								}, {
									"case":	179,
									"scores":	[-5.023171907891717]
								}, {
									"case":	180,
									"scores":	[-5.023171907891717]
								}, {
									"case":	181,
									"scores":	[-5.023171907891717]
								}, {
									"case":	182,
									"scores":	[-5.023171907891717]
								}, {
									"case":	183,
									"scores":	[-5.023171907891717]
								}, {
									"case":	184,
									"scores":	[-5.023171907891717]
								}, {
									"case":	185,
									"scores":	[-5.023171907891717]
								}, {
									"case":	186,
									"scores":	[-5.023171907891717]
								}, {
									"case":	187,
									"scores":	[-5.023171907891717]
								}, {
									"case":	188,
									"scores":	[-5.023171907891717]
								}, {
									"case":	189,
									"scores":	[-5.023171907891717]
								}, {
									"case":	190,
									"scores":	[-5.023171907891717]
								}, {
									"case":	191,
									"scores":	[-5.023171907891717]
								}, {
									"case":	192,
									"scores":	[-5.023171907891717]
								}, {
									"case":	193,
									"scores":	[-5.023171907891717]
								}, {
									"case":	194,
									"scores":	[-5.023171907891717]
								}, {
									"case":	195,
									"scores":	[-5.023171907891717]
								}, {
									"case":	196,
									"scores":	[-5.023171907891717]
								}, {
									"case":	197,
									"scores":	[-5.023171907891717]
								}, {
									"case":	198,
									"scores":	[-5.023171907891717]
								}, {
									"case":	199,
									"scores":	[-5.023171907891717]
								}, {
									"case":	200,
									"scores":	[-5.023171907891717]
								}, {
									"case":	201,
									"scores":	[-5.023171907891717]
								}, {
									"case":	202,
									"scores":	[-5.023171907891717]
								}, {
									"case":	203,
									"scores":	[-5.023171907891717]
								}, {
									"case":	204,
									"scores":	[-5.023171907891717]
								}, {
									"case":	205,
									"scores":	[-5.023171907891717]
								}, {
									"case":	206,
									"scores":	[-5.023171907891717]
								}, {
									"case":	207,
									"scores":	[-5.023171907891717]
								}, {
									"case":	208,
									"scores":	[-5.023171907891717]
								}, {
									"case":	209,
									"scores":	[-5.023171907891717]
								}, {
									"case":	210,
									"scores":	[-5.023171907891717]
								}, {
									"case":	211,
									"scores":	[-5.023171907891717]
								}, {
									"case":	212,
									"scores":	[-5.023171907891717]
								}, {
									"case":	213,
									"scores":	[-5.023171907891717]
								}, {
									"case":	214,
									"scores":	[-5.023171907891717]
								}, {
									"case":	215,
									"scores":	[-5.023171907891717]
								}, {
									"case":	216,
									"scores":	[-5.023171907891717]
								}, {
									"case":	217,
									"scores":	[-5.023171907891717]
								}, {
									"case":	218,
									"scores":	[-5.023171907891717]
								}, {
									"case":	219,
									"scores":	[-5.023171907891717]
								}, {
									"case":	220,
									"scores":	[-5.023171907891717]
								}, {
									"case":	221,
									"scores":	[-5.023171907891717]
								}, {
									"case":	222,
									"scores":	[-5.023171907891717]
								}, {
									"case":	223,
									"scores":	[-7.9274464911917164, -9.73139841689172, -8.78301211689172, -8.88264960489172, -9.04219966389172, -8.90912841689172, -8.78301211689172, -8.91583011689172, -8.90912841689172, -8.90912841689172, -8.91583011689172, -8.91583011689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.91583011689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.91583011689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.91583011689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.90912841689172, -8.87170401689172]
								}]
						}, {
							"switch":	6,
							"types":	[[], [], [1], [], [], [], [231, 232], [], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], [], [], [179]],
							"begin_line":	55,
							"begin_column":	2,
							"end_line":	55,
							"end_column":	23,
							"patch_codes":	["if (!__is_neg(\"\", \"L55\", 62, &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    TIFFFreeDirectory(tif);\n", "TIFFDefaultStripSize(tif, 0)", "TIFFDefaultStripSize(tif, 2048)", "TIFFDefaultStripSize(tif, 4)", "TIFFDefaultStripSize(tif, 512)", "TIFFDefaultStripSize(tif, 65)", "TIFFFieldWithName(tif, 0)", "TIFFFieldWithTag(tif, 0)", "TIFFFieldWithTag(tif, 2048)", "TIFFFieldWithTag(tif, 4)", "TIFFFieldWithTag(tif, 512)", "TIFFFieldWithTag(tif, 65)", "TIFFGetClientInfo(tif, 0)", "TIFFGetTagListEntry(tif, 0)", "TIFFGetTagListEntry(tif, 2048)", "TIFFGetTagListEntry(tif, 4)", "TIFFGetTagListEntry(tif, 512)", "TIFFGetTagListEntry(tif, 65)", "TIFFInitCCITTFax3(tif, 0)", "TIFFInitCCITTFax3(tif, 2048)", "TIFFInitCCITTFax3(tif, 4)", "TIFFInitCCITTFax3(tif, 512)", "TIFFInitCCITTFax3(tif, 65)", "TIFFInitCCITTFax4(tif, 0)", "TIFFInitCCITTFax4(tif, 2048)", "TIFFInitCCITTFax4(tif, 4)", "TIFFInitCCITTFax4(tif, 512)", "TIFFInitCCITTFax4(tif, 65)", "TIFFInitCCITTRLE(tif, 0)", "TIFFInitCCITTRLE(tif, 2048)", "TIFFInitCCITTRLE(tif, 4)", "TIFFInitCCITTRLE(tif, 512)", "TIFFInitCCITTRLE(tif, 65)", "TIFFInitCCITTRLEW(tif, 0)", "TIFFInitCCITTRLEW(tif, 2048)", "TIFFInitCCITTRLEW(tif, 4)", "TIFFInitCCITTRLEW(tif, 512)", "TIFFInitCCITTRLEW(tif, 65)", "TIFFInitDumpMode(tif, 0)", "TIFFInitDumpMode(tif, 2048)", "TIFFInitDumpMode(tif, 4)", "TIFFInitDumpMode(tif, 512)", "TIFFInitDumpMode(tif, 65)", "TIFFInitJPEG(tif, 0)", "TIFFInitJPEG(tif, 2048)", "TIFFInitJPEG(tif, 4)", "TIFFInitJPEG(tif, 512)", "TIFFInitJPEG(tif, 65)", "TIFFInitLZW(tif, 0)", "TIFFInitLZW(tif, 2048)", "TIFFInitLZW(tif, 4)", "TIFFInitLZW(tif, 512)", "TIFFInitLZW(tif, 65)", "TIFFInitNeXT(tif, 0)", "TIFFInitNeXT(tif, 2048)", "TIFFInitNeXT(tif, 4)", "TIFFInitNeXT(tif, 512)", "TIFFInitNeXT(tif, 65)", "TIFFInitOJPEG(tif, 0)", "TIFFInitOJPEG(tif, 2048)", "TIFFInitOJPEG(tif, 4)", "TIFFInitOJPEG(tif, 512)", "TIFFInitOJPEG(tif, 65)", "TIFFInitPackBits(tif, 0)", "TIFFInitPackBits(tif, 2048)", "TIFFInitPackBits(tif, 4)", "TIFFInitPackBits(tif, 512)", "TIFFInitPackBits(tif, 65)", "TIFFInitPixarLog(tif, 0)", "TIFFInitPixarLog(tif, 2048)", "TIFFInitPixarLog(tif, 4)", "TIFFInitPixarLog(tif, 512)", "TIFFInitPixarLog(tif, 65)", "TIFFInitSGILog(tif, 0)", "TIFFInitSGILog(tif, 2048)", "TIFFInitSGILog(tif, 4)", "TIFFInitSGILog(tif, 512)", "TIFFInitSGILog(tif, 65)", "TIFFInitThunderScan(tif, 0)", "TIFFInitThunderScan(tif, 2048)", "TIFFInitThunderScan(tif, 4)", "TIFFInitThunderScan(tif, 512)", "TIFFInitThunderScan(tif, 65)", "TIFFInitZIP(tif, 0)", "TIFFInitZIP(tif, 2048)", "TIFFInitZIP(tif, 4)", "TIFFInitZIP(tif, 512)", "TIFFInitZIP(tif, 65)", "TIFFRGBAImageOK(tif, 0)", "TIFFRawStripSize(tif, 0)", "TIFFRawStripSize(tif, 2048)", "TIFFRawStripSize(tif, 4)", "TIFFRawStripSize(tif, 512)", "TIFFRawStripSize(tif, 65)", "TIFFRawStripSize64(tif, 0)", "TIFFRawStripSize64(tif, 2048)", "TIFFRawStripSize64(tif, 4)", "TIFFRawStripSize64(tif, 512)", "TIFFRawStripSize64(tif, 65)", "TIFFReadEXIFDirectory(tif, 0)", "TIFFReadEXIFDirectory(tif, 2048)", "TIFFReadEXIFDirectory(tif, 4)", "TIFFReadEXIFDirectory(tif, 512)", "TIFFReadEXIFDirectory(tif, 65)", "TIFFSetClientdata(tif, 0)", "TIFFSetCompressionScheme(tif, 0)", "TIFFSetCompressionScheme(tif, 2048)", "TIFFSetCompressionScheme(tif, 4)", "TIFFSetCompressionScheme(tif, 512)", "TIFFSetCompressionScheme(tif, 65)", "TIFFSetDirectory(tif, 0)", "TIFFSetDirectory(tif, 2048)", "TIFFSetDirectory(tif, 4)", "TIFFSetDirectory(tif, 512)", "TIFFSetDirectory(tif, 65)", "TIFFSetFileName(tif, 0)", "TIFFSetFileno(tif, 0)", "TIFFSetFileno(tif, 2048)", "TIFFSetFileno(tif, 4)", "TIFFSetFileno(tif, 512)", "TIFFSetFileno(tif, 65)", "TIFFSetMode(tif, 0)", "TIFFSetMode(tif, 2048)", "TIFFSetMode(tif, 4)", "TIFFSetMode(tif, 512)", "TIFFSetMode(tif, 65)", "TIFFSetSubDirectory(tif, 0)", "TIFFSetSubDirectory(tif, 2048)", "TIFFSetSubDirectory(tif, 4)", "TIFFSetSubDirectory(tif, 512)", "TIFFSetSubDirectory(tif, 65)", "TIFFSetWriteOffset(tif, 0)", "TIFFSetWriteOffset(tif, 2048)", "TIFFSetWriteOffset(tif, 4)", "TIFFSetWriteOffset(tif, 512)", "TIFFSetWriteOffset(tif, 65)", "TIFFUnlinkDirectory(tif, 0)", "TIFFUnlinkDirectory(tif, 2048)", "TIFFUnlinkDirectory(tif, 4)", "TIFFUnlinkDirectory(tif, 512)", "TIFFUnlinkDirectory(tif, 65)", "TIFFVStripSize(tif, 0)", "TIFFVStripSize(tif, 2048)", "TIFFVStripSize(tif, 4)", "TIFFVStripSize(tif, 512)", "TIFFVStripSize(tif, 65)", "TIFFVStripSize64(tif, 0)", "TIFFVStripSize64(tif, 2048)", "TIFFVStripSize64(tif, 4)", "TIFFVStripSize64(tif, 512)", "TIFFVStripSize64(tif, 65)", "TIFFVTileSize(tif, 0)", "TIFFVTileSize(tif, 2048)", "TIFFVTileSize(tif, 4)", "TIFFVTileSize(tif, 512)", "TIFFVTileSize(tif, 65)", "TIFFVTileSize64(tif, 0)", "TIFFVTileSize64(tif, 2048)", "TIFFVTileSize64(tif, 4)", "TIFFVTileSize64(tif, 512)", "TIFFVTileSize64(tif, 65)", "_TIFFDefaultStripSize(tif, 0)", "_TIFFDefaultStripSize(tif, 2048)", "_TIFFDefaultStripSize(tif, 4)", "_TIFFDefaultStripSize(tif, 512)", "_TIFFDefaultStripSize(tif, 65)", "_TIFFNoPreCode(tif, 0)", "_TIFFNoPreCode(tif, 2048)", "_TIFFNoPreCode(tif, 4)", "_TIFFNoPreCode(tif, 512)", "_TIFFNoPreCode(tif, 65)", "_TIFFNoSeek(tif, 0)", "_TIFFNoSeek(tif, 2048)", "_TIFFNoSeek(tif, 4)", "_TIFFNoSeek(tif, 512)", "_TIFFNoSeek(tif, 65)", "_TIFFPrintFieldInfo(tif, 0)", "_TIFFSetupFieldInfo(tif, 0)", "{\n}\n", "TIFFAccessTagMethods(tif)", "TIFFCheckpointDirectory(tif)", "TIFFCleanup(tif)", "TIFFClientdata(tif)", "TIFFClose(tif)", "TIFFCreateDirectory(tif)", "TIFFCurrentDirOffset(tif)", "TIFFCurrentDirectory(tif)", "TIFFCurrentRow(tif)", "TIFFCurrentStrip(tif)", "TIFFCurrentTile(tif)", "TIFFDefaultDirectory(tif)", "TIFFFileName(tif)", "TIFFFileno(tif)", "TIFFFlush(tif)", "TIFFFlushData(tif)", "TIFFFlushData1(tif)", "TIFFGetCloseProc(tif)", "TIFFGetMapFileProc(tif)", "TIFFGetMode(tif)", "TIFFGetReadProc(tif)", "TIFFGetSeekProc(tif)", "TIFFGetSizeProc(tif)", "TIFFGetTagListCount(tif)", "TIFFGetUnmapFileProc(tif)", "TIFFGetWriteProc(tif)", "TIFFIsBigEndian(tif)", "TIFFIsByteSwapped(tif)", "TIFFIsMSB2LSB(tif)", "TIFFIsTiled(tif)", "TIFFIsUpSampled(tif)", "TIFFLastDirectory(tif)", "TIFFNumberOfDirectories(tif)", "TIFFNumberOfStrips(tif)", "TIFFNumberOfTiles(tif)", "TIFFRasterScanlineSize(tif)", "TIFFRasterScanlineSize64(tif)", "TIFFReadDirectory(tif)", "TIFFRewriteDirectory(tif)", "TIFFScanlineSize(tif)", "TIFFScanlineSize64(tif)", "TIFFSetDefaultCompressionState(tif)", "TIFFSetupStrips(tif)", "TIFFStripSize(tif)", "TIFFStripSize64(tif)", "TIFFTileRowSize(tif)", "TIFFTileRowSize64(tif)", "TIFFTileSize(tif)", "TIFFTileSize64(tif)", "TIFFWriteDirectory(tif)", "_TIFFSetDefaultCompressionState(tif)", "TIFFFreeDirectory((&tif))", "TIFFFreeDirectory((tif))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.3201838081917172, -7.2052505708917174, -6.5489591878917173, -6.8474468758917171, -7.3942868598917171, -6.8471066878917171, -7.2693881878917175, -7.1958958878917176, -6.8471066878917171, -6.8471066878917171, -7.1958958878917176, -7.1958958878917176, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -7.1958958878917176, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -7.1958958878917176, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -7.1958958878917176, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -6.8471066878917171, -7.6500587878917177]
								}, {
									"case":	2,
									"scores":	[-5.023171907891717]
								}, {
									"case":	3,
									"scores":	[-5.023171907891717]
								}, {
									"case":	4,
									"scores":	[-5.023171907891717]
								}, {
									"case":	5,
									"scores":	[-5.023171907891717]
								}, {
									"case":	6,
									"scores":	[-5.023171907891717]
								}, {
									"case":	7,
									"scores":	[-5.023171907891717]
								}, {
									"case":	8,
									"scores":	[-5.023171907891717]
								}, {
									"case":	9,
									"scores":	[-5.023171907891717]
								}, {
									"case":	10,
									"scores":	[-5.023171907891717]
								}, {
									"case":	11,
									"scores":	[-5.023171907891717]
								}, {
									"case":	12,
									"scores":	[-5.023171907891717]
								}, {
									"case":	13,
									"scores":	[-5.023171907891717]
								}, {
									"case":	14,
									"scores":	[-5.023171907891717]
								}, {
									"case":	15,
									"scores":	[-5.023171907891717]
								}, {
									"case":	16,
									"scores":	[-5.023171907891717]
								}, {
									"case":	17,
									"scores":	[-5.023171907891717]
								}, {
									"case":	18,
									"scores":	[-5.023171907891717]
								}, {
									"case":	19,
									"scores":	[-5.023171907891717]
								}, {
									"case":	20,
									"scores":	[-5.023171907891717]
								}, {
									"case":	21,
									"scores":	[-5.023171907891717]
								}, {
									"case":	22,
									"scores":	[-5.023171907891717]
								}, {
									"case":	23,
									"scores":	[-5.023171907891717]
								}, {
									"case":	24,
									"scores":	[-5.023171907891717]
								}, {
									"case":	25,
									"scores":	[-5.023171907891717]
								}, {
									"case":	26,
									"scores":	[-5.023171907891717]
								}, {
									"case":	27,
									"scores":	[-5.023171907891717]
								}, {
									"case":	28,
									"scores":	[-5.023171907891717]
								}, {
									"case":	29,
									"scores":	[-5.023171907891717]
								}, {
									"case":	30,
									"scores":	[-5.023171907891717]
								}, {
									"case":	31,
									"scores":	[-5.023171907891717]
								}, {
									"case":	32,
									"scores":	[-5.023171907891717]
								}, {
									"case":	33,
									"scores":	[-5.023171907891717]
								}, {
									"case":	34,
									"scores":	[-5.023171907891717]
								}, {
									"case":	35,
									"scores":	[-5.023171907891717]
								}, {
									"case":	36,
									"scores":	[-5.023171907891717]
								}, {
									"case":	37,
									"scores":	[-5.023171907891717]
								}, {
									"case":	38,
									"scores":	[-5.023171907891717]
								}, {
									"case":	39,
									"scores":	[-5.023171907891717]
								}, {
									"case":	40,
									"scores":	[-5.023171907891717]
								}, {
									"case":	41,
									"scores":	[-5.023171907891717]
								}, {
									"case":	42,
									"scores":	[-5.023171907891717]
								}, {
									"case":	43,
									"scores":	[-5.023171907891717]
								}, {
									"case":	44,
									"scores":	[-5.023171907891717]
								}, {
									"case":	45,
									"scores":	[-5.023171907891717]
								}, {
									"case":	46,
									"scores":	[-5.023171907891717]
								}, {
									"case":	47,
									"scores":	[-5.023171907891717]
								}, {
									"case":	48,
									"scores":	[-5.023171907891717]
								}, {
									"case":	49,
									"scores":	[-5.023171907891717]
								}, {
									"case":	50,
									"scores":	[-5.023171907891717]
								}, {
									"case":	51,
									"scores":	[-5.023171907891717]
								}, {
									"case":	52,
									"scores":	[-5.023171907891717]
								}, {
									"case":	53,
									"scores":	[-5.023171907891717]
								}, {
									"case":	54,
									"scores":	[-5.023171907891717]
								}, {
									"case":	55,
									"scores":	[-5.023171907891717]
								}, {
									"case":	56,
									"scores":	[-5.023171907891717]
								}, {
									"case":	57,
									"scores":	[-5.023171907891717]
								}, {
									"case":	58,
									"scores":	[-5.023171907891717]
								}, {
									"case":	59,
									"scores":	[-5.023171907891717]
								}, {
									"case":	60,
									"scores":	[-5.023171907891717]
								}, {
									"case":	61,
									"scores":	[-5.023171907891717]
								}, {
									"case":	62,
									"scores":	[-5.023171907891717]
								}, {
									"case":	63,
									"scores":	[-5.023171907891717]
								}, {
									"case":	64,
									"scores":	[-5.023171907891717]
								}, {
									"case":	65,
									"scores":	[-5.023171907891717]
								}, {
									"case":	66,
									"scores":	[-5.023171907891717]
								}, {
									"case":	67,
									"scores":	[-5.023171907891717]
								}, {
									"case":	68,
									"scores":	[-5.023171907891717]
								}, {
									"case":	69,
									"scores":	[-5.023171907891717]
								}, {
									"case":	70,
									"scores":	[-5.023171907891717]
								}, {
									"case":	71,
									"scores":	[-5.023171907891717]
								}, {
									"case":	72,
									"scores":	[-5.023171907891717]
								}, {
									"case":	73,
									"scores":	[-5.023171907891717]
								}, {
									"case":	74,
									"scores":	[-5.023171907891717]
								}, {
									"case":	75,
									"scores":	[-5.023171907891717]
								}, {
									"case":	76,
									"scores":	[-5.023171907891717]
								}, {
									"case":	77,
									"scores":	[-5.023171907891717]
								}, {
									"case":	78,
									"scores":	[-5.023171907891717]
								}, {
									"case":	79,
									"scores":	[-5.023171907891717]
								}, {
									"case":	80,
									"scores":	[-5.023171907891717]
								}, {
									"case":	81,
									"scores":	[-5.023171907891717]
								}, {
									"case":	82,
									"scores":	[-5.023171907891717]
								}, {
									"case":	83,
									"scores":	[-5.023171907891717]
								}, {
									"case":	84,
									"scores":	[-5.023171907891717]
								}, {
									"case":	85,
									"scores":	[-5.023171907891717]
								}, {
									"case":	86,
									"scores":	[-5.023171907891717]
								}, {
									"case":	87,
									"scores":	[-5.023171907891717]
								}, {
									"case":	88,
									"scores":	[-5.023171907891717]
								}, {
									"case":	89,
									"scores":	[-5.023171907891717]
								}, {
									"case":	90,
									"scores":	[-5.023171907891717]
								}, {
									"case":	91,
									"scores":	[-5.023171907891717]
								}, {
									"case":	92,
									"scores":	[-5.023171907891717]
								}, {
									"case":	93,
									"scores":	[-5.023171907891717]
								}, {
									"case":	94,
									"scores":	[-5.023171907891717]
								}, {
									"case":	95,
									"scores":	[-5.023171907891717]
								}, {
									"case":	96,
									"scores":	[-5.023171907891717]
								}, {
									"case":	97,
									"scores":	[-5.023171907891717]
								}, {
									"case":	98,
									"scores":	[-5.023171907891717]
								}, {
									"case":	99,
									"scores":	[-5.023171907891717]
								}, {
									"case":	100,
									"scores":	[-5.023171907891717]
								}, {
									"case":	101,
									"scores":	[-5.023171907891717]
								}, {
									"case":	102,
									"scores":	[-5.023171907891717]
								}, {
									"case":	103,
									"scores":	[-5.023171907891717]
								}, {
									"case":	104,
									"scores":	[-5.023171907891717]
								}, {
									"case":	105,
									"scores":	[-5.023171907891717]
								}, {
									"case":	106,
									"scores":	[-5.023171907891717]
								}, {
									"case":	107,
									"scores":	[-5.023171907891717]
								}, {
									"case":	108,
									"scores":	[-5.023171907891717]
								}, {
									"case":	109,
									"scores":	[-5.023171907891717]
								}, {
									"case":	110,
									"scores":	[-5.023171907891717]
								}, {
									"case":	111,
									"scores":	[-5.023171907891717]
								}, {
									"case":	112,
									"scores":	[-5.023171907891717]
								}, {
									"case":	113,
									"scores":	[-5.023171907891717]
								}, {
									"case":	114,
									"scores":	[-5.023171907891717]
								}, {
									"case":	115,
									"scores":	[-5.023171907891717]
								}, {
									"case":	116,
									"scores":	[-5.023171907891717]
								}, {
									"case":	117,
									"scores":	[-5.023171907891717]
								}, {
									"case":	118,
									"scores":	[-5.023171907891717]
								}, {
									"case":	119,
									"scores":	[-5.023171907891717]
								}, {
									"case":	120,
									"scores":	[-5.023171907891717]
								}, {
									"case":	121,
									"scores":	[-5.023171907891717]
								}, {
									"case":	122,
									"scores":	[-5.023171907891717]
								}, {
									"case":	123,
									"scores":	[-5.023171907891717]
								}, {
									"case":	124,
									"scores":	[-5.023171907891717]
								}, {
									"case":	125,
									"scores":	[-5.023171907891717]
								}, {
									"case":	126,
									"scores":	[-5.023171907891717]
								}, {
									"case":	127,
									"scores":	[-5.023171907891717]
								}, {
									"case":	128,
									"scores":	[-5.023171907891717]
								}, {
									"case":	129,
									"scores":	[-5.023171907891717]
								}, {
									"case":	130,
									"scores":	[-5.023171907891717]
								}, {
									"case":	131,
									"scores":	[-5.023171907891717]
								}, {
									"case":	132,
									"scores":	[-5.023171907891717]
								}, {
									"case":	133,
									"scores":	[-5.023171907891717]
								}, {
									"case":	134,
									"scores":	[-5.023171907891717]
								}, {
									"case":	135,
									"scores":	[-5.023171907891717]
								}, {
									"case":	136,
									"scores":	[-5.023171907891717]
								}, {
									"case":	137,
									"scores":	[-5.023171907891717]
								}, {
									"case":	138,
									"scores":	[-5.023171907891717]
								}, {
									"case":	139,
									"scores":	[-5.023171907891717]
								}, {
									"case":	140,
									"scores":	[-5.023171907891717]
								}, {
									"case":	141,
									"scores":	[-5.023171907891717]
								}, {
									"case":	142,
									"scores":	[-5.023171907891717]
								}, {
									"case":	143,
									"scores":	[-5.023171907891717]
								}, {
									"case":	144,
									"scores":	[-5.023171907891717]
								}, {
									"case":	145,
									"scores":	[-5.023171907891717]
								}, {
									"case":	146,
									"scores":	[-5.023171907891717]
								}, {
									"case":	147,
									"scores":	[-5.023171907891717]
								}, {
									"case":	148,
									"scores":	[-5.023171907891717]
								}, {
									"case":	149,
									"scores":	[-5.023171907891717]
								}, {
									"case":	150,
									"scores":	[-5.023171907891717]
								}, {
									"case":	151,
									"scores":	[-5.023171907891717]
								}, {
									"case":	152,
									"scores":	[-5.023171907891717]
								}, {
									"case":	153,
									"scores":	[-5.023171907891717]
								}, {
									"case":	154,
									"scores":	[-5.023171907891717]
								}, {
									"case":	155,
									"scores":	[-5.023171907891717]
								}, {
									"case":	156,
									"scores":	[-5.023171907891717]
								}, {
									"case":	157,
									"scores":	[-5.023171907891717]
								}, {
									"case":	158,
									"scores":	[-5.023171907891717]
								}, {
									"case":	159,
									"scores":	[-5.023171907891717]
								}, {
									"case":	160,
									"scores":	[-5.023171907891717]
								}, {
									"case":	161,
									"scores":	[-5.023171907891717]
								}, {
									"case":	162,
									"scores":	[-5.023171907891717]
								}, {
									"case":	163,
									"scores":	[-5.023171907891717]
								}, {
									"case":	164,
									"scores":	[-5.023171907891717]
								}, {
									"case":	165,
									"scores":	[-5.023171907891717]
								}, {
									"case":	166,
									"scores":	[-5.023171907891717]
								}, {
									"case":	167,
									"scores":	[-5.023171907891717]
								}, {
									"case":	168,
									"scores":	[-5.023171907891717]
								}, {
									"case":	169,
									"scores":	[-5.023171907891717]
								}, {
									"case":	170,
									"scores":	[-5.023171907891717]
								}, {
									"case":	171,
									"scores":	[-5.023171907891717]
								}, {
									"case":	172,
									"scores":	[-5.023171907891717]
								}, {
									"case":	173,
									"scores":	[-5.023171907891717]
								}, {
									"case":	174,
									"scores":	[-5.023171907891717]
								}, {
									"case":	175,
									"scores":	[-5.023171907891717]
								}, {
									"case":	176,
									"scores":	[-5.023171907891717]
								}, {
									"case":	177,
									"scores":	[-5.023171907891717]
								}, {
									"case":	178,
									"scores":	[-5.023171907891717]
								}, {
									"case":	179,
									"scores":	[-5.023171907891717]
								}, {
									"case":	180,
									"scores":	[-5.023171907891717]
								}, {
									"case":	181,
									"scores":	[-5.023171907891717]
								}, {
									"case":	182,
									"scores":	[-5.023171907891717]
								}, {
									"case":	183,
									"scores":	[-5.023171907891717]
								}, {
									"case":	184,
									"scores":	[-5.023171907891717]
								}, {
									"case":	185,
									"scores":	[-5.023171907891717]
								}, {
									"case":	186,
									"scores":	[-5.023171907891717]
								}, {
									"case":	187,
									"scores":	[-5.023171907891717]
								}, {
									"case":	188,
									"scores":	[-5.023171907891717]
								}, {
									"case":	189,
									"scores":	[-5.023171907891717]
								}, {
									"case":	190,
									"scores":	[-5.023171907891717]
								}, {
									"case":	191,
									"scores":	[-5.023171907891717]
								}, {
									"case":	192,
									"scores":	[-5.023171907891717]
								}, {
									"case":	193,
									"scores":	[-5.023171907891717]
								}, {
									"case":	194,
									"scores":	[-5.023171907891717]
								}, {
									"case":	195,
									"scores":	[-5.023171907891717]
								}, {
									"case":	196,
									"scores":	[-5.023171907891717]
								}, {
									"case":	197,
									"scores":	[-5.023171907891717]
								}, {
									"case":	198,
									"scores":	[-5.023171907891717]
								}, {
									"case":	199,
									"scores":	[-5.023171907891717]
								}, {
									"case":	200,
									"scores":	[-5.023171907891717]
								}, {
									"case":	201,
									"scores":	[-5.023171907891717]
								}, {
									"case":	202,
									"scores":	[-5.023171907891717]
								}, {
									"case":	203,
									"scores":	[-5.023171907891717]
								}, {
									"case":	204,
									"scores":	[-5.023171907891717]
								}, {
									"case":	205,
									"scores":	[-5.023171907891717]
								}, {
									"case":	206,
									"scores":	[-5.023171907891717]
								}, {
									"case":	207,
									"scores":	[-5.023171907891717]
								}, {
									"case":	208,
									"scores":	[-5.023171907891717]
								}, {
									"case":	209,
									"scores":	[-5.023171907891717]
								}, {
									"case":	210,
									"scores":	[-5.023171907891717]
								}, {
									"case":	211,
									"scores":	[-5.023171907891717]
								}, {
									"case":	212,
									"scores":	[-5.023171907891717]
								}, {
									"case":	213,
									"scores":	[-5.023171907891717]
								}, {
									"case":	214,
									"scores":	[-5.023171907891717]
								}, {
									"case":	215,
									"scores":	[-5.023171907891717]
								}, {
									"case":	216,
									"scores":	[-5.023171907891717]
								}, {
									"case":	217,
									"scores":	[-5.023171907891717]
								}, {
									"case":	218,
									"scores":	[-5.023171907891717]
								}, {
									"case":	219,
									"scores":	[-5.023171907891717]
								}, {
									"case":	220,
									"scores":	[-5.023171907891717]
								}, {
									"case":	221,
									"scores":	[-5.023171907891717]
								}, {
									"case":	222,
									"scores":	[-5.023171907891717]
								}, {
									"case":	223,
									"scores":	[-5.023171907891717]
								}, {
									"case":	224,
									"scores":	[-5.023171907891717]
								}, {
									"case":	225,
									"scores":	[-5.023171907891717]
								}, {
									"case":	226,
									"scores":	[-5.023171907891717]
								}, {
									"case":	227,
									"scores":	[-5.023171907891717]
								}, {
									"case":	228,
									"scores":	[-5.023171907891717]
								}, {
									"case":	229,
									"scores":	[-5.023171907891717]
								}, {
									"case":	230,
									"scores":	[-5.023171907891717]
								}, {
									"case":	231,
									"scores":	[-5.023171907891717]
								}, {
									"case":	232,
									"scores":	[-5.023171907891717]
								}]
						}]
				}, {
					"line":	56,
					"switches":	[{
							"switch":	7,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	57,
							"begin_column":	0,
							"end_line":	57,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L57\", 62, &(tif), sizeof (tif), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.11405007860334]
								}, {
									"case":	2,
									"scores":	[-4.11405007860334]
								}, {
									"case":	3,
									"scores":	[-4.11405007860334]
								}, {
									"case":	4,
									"scores":	[-4.11405007860334]
								}, {
									"case":	5,
									"scores":	[-4.11405007860334]
								}, {
									"case":	6,
									"scores":	[-4.11405007860334]
								}, {
									"case":	7,
									"scores":	[-4.11405007860334]
								}, {
									"case":	8,
									"scores":	[-4.11405007860334]
								}, {
									"case":	9,
									"scores":	[-4.11405007860334]
								}, {
									"case":	10,
									"scores":	[-4.11405007860334]
								}, {
									"case":	11,
									"scores":	[-4.11405007860334]
								}, {
									"case":	12,
									"scores":	[-4.11405007860334]
								}, {
									"case":	13,
									"scores":	[-4.11405007860334]
								}, {
									"case":	14,
									"scores":	[-4.11405007860334]
								}, {
									"case":	15,
									"scores":	[-4.11405007860334]
								}, {
									"case":	16,
									"scores":	[-4.11405007860334]
								}, {
									"case":	17,
									"scores":	[-4.11405007860334]
								}, {
									"case":	18,
									"scores":	[-4.11405007860334]
								}, {
									"case":	19,
									"scores":	[-4.11405007860334]
								}, {
									"case":	20,
									"scores":	[-4.11405007860334]
								}, {
									"case":	21,
									"scores":	[-4.11405007860334]
								}, {
									"case":	22,
									"scores":	[-4.11405007860334]
								}, {
									"case":	23,
									"scores":	[-4.11405007860334]
								}, {
									"case":	24,
									"scores":	[-4.11405007860334]
								}, {
									"case":	25,
									"scores":	[-4.11405007860334]
								}, {
									"case":	26,
									"scores":	[-4.11405007860334]
								}, {
									"case":	27,
									"scores":	[-4.11405007860334]
								}, {
									"case":	28,
									"scores":	[-4.11405007860334]
								}, {
									"case":	29,
									"scores":	[-4.11405007860334]
								}, {
									"case":	30,
									"scores":	[-4.11405007860334]
								}, {
									"case":	31,
									"scores":	[-4.11405007860334]
								}, {
									"case":	32,
									"scores":	[-4.11405007860334]
								}, {
									"case":	33,
									"scores":	[-4.11405007860334]
								}, {
									"case":	34,
									"scores":	[-4.11405007860334]
								}, {
									"case":	35,
									"scores":	[-4.11405007860334]
								}, {
									"case":	36,
									"scores":	[-4.11405007860334]
								}, {
									"case":	37,
									"scores":	[-4.11405007860334]
								}, {
									"case":	38,
									"scores":	[-4.11405007860334]
								}, {
									"case":	39,
									"scores":	[-4.11405007860334]
								}, {
									"case":	40,
									"scores":	[-4.11405007860334]
								}, {
									"case":	41,
									"scores":	[-4.11405007860334]
								}, {
									"case":	42,
									"scores":	[-4.11405007860334]
								}, {
									"case":	43,
									"scores":	[-4.11405007860334]
								}, {
									"case":	44,
									"scores":	[-4.11405007860334]
								}, {
									"case":	45,
									"scores":	[-4.11405007860334]
								}, {
									"case":	46,
									"scores":	[-4.11405007860334]
								}, {
									"case":	47,
									"scores":	[-4.11405007860334]
								}, {
									"case":	48,
									"scores":	[-4.11405007860334]
								}, {
									"case":	49,
									"scores":	[-4.11405007860334]
								}, {
									"case":	50,
									"scores":	[-4.11405007860334]
								}, {
									"case":	51,
									"scores":	[-4.11405007860334]
								}, {
									"case":	52,
									"scores":	[-4.11405007860334]
								}, {
									"case":	53,
									"scores":	[-4.11405007860334]
								}, {
									"case":	54,
									"scores":	[-4.11405007860334]
								}, {
									"case":	55,
									"scores":	[-4.11405007860334]
								}, {
									"case":	56,
									"scores":	[-4.11405007860334]
								}, {
									"case":	57,
									"scores":	[-4.11405007860334]
								}, {
									"case":	58,
									"scores":	[-4.11405007860334]
								}, {
									"case":	59,
									"scores":	[-4.11405007860334]
								}, {
									"case":	60,
									"scores":	[-4.11405007860334]
								}, {
									"case":	61,
									"scores":	[-4.11405007860334]
								}, {
									"case":	62,
									"scores":	[-4.11405007860334]
								}, {
									"case":	63,
									"scores":	[-4.11405007860334]
								}, {
									"case":	64,
									"scores":	[-4.11405007860334]
								}, {
									"case":	65,
									"scores":	[-4.11405007860334]
								}, {
									"case":	66,
									"scores":	[-4.11405007860334]
								}, {
									"case":	67,
									"scores":	[-4.11405007860334]
								}, {
									"case":	68,
									"scores":	[-4.11405007860334]
								}, {
									"case":	69,
									"scores":	[-4.11405007860334]
								}, {
									"case":	70,
									"scores":	[-4.11405007860334]
								}, {
									"case":	71,
									"scores":	[-4.11405007860334]
								}, {
									"case":	72,
									"scores":	[-4.11405007860334]
								}, {
									"case":	73,
									"scores":	[-4.11405007860334]
								}, {
									"case":	74,
									"scores":	[-4.11405007860334]
								}, {
									"case":	75,
									"scores":	[-4.11405007860334]
								}, {
									"case":	76,
									"scores":	[-4.11405007860334]
								}, {
									"case":	77,
									"scores":	[-4.11405007860334]
								}, {
									"case":	78,
									"scores":	[-4.11405007860334]
								}, {
									"case":	79,
									"scores":	[-4.11405007860334]
								}, {
									"case":	80,
									"scores":	[-4.11405007860334]
								}, {
									"case":	81,
									"scores":	[-4.11405007860334]
								}, {
									"case":	82,
									"scores":	[-4.11405007860334]
								}, {
									"case":	83,
									"scores":	[-4.11405007860334]
								}, {
									"case":	84,
									"scores":	[-4.11405007860334]
								}, {
									"case":	85,
									"scores":	[-4.11405007860334]
								}, {
									"case":	86,
									"scores":	[-4.11405007860334]
								}, {
									"case":	87,
									"scores":	[-4.11405007860334]
								}, {
									"case":	88,
									"scores":	[-4.11405007860334]
								}, {
									"case":	89,
									"scores":	[-4.11405007860334]
								}, {
									"case":	90,
									"scores":	[-4.11405007860334]
								}, {
									"case":	91,
									"scores":	[-4.11405007860334]
								}, {
									"case":	92,
									"scores":	[-4.11405007860334]
								}, {
									"case":	93,
									"scores":	[-4.11405007860334]
								}, {
									"case":	94,
									"scores":	[-4.11405007860334]
								}, {
									"case":	95,
									"scores":	[-4.11405007860334]
								}, {
									"case":	96,
									"scores":	[-4.11405007860334]
								}, {
									"case":	97,
									"scores":	[-4.11405007860334]
								}, {
									"case":	98,
									"scores":	[-4.11405007860334]
								}, {
									"case":	99,
									"scores":	[-4.11405007860334]
								}, {
									"case":	100,
									"scores":	[-4.11405007860334]
								}, {
									"case":	101,
									"scores":	[-4.11405007860334]
								}, {
									"case":	102,
									"scores":	[-4.11405007860334]
								}, {
									"case":	103,
									"scores":	[-4.11405007860334]
								}, {
									"case":	104,
									"scores":	[-4.11405007860334]
								}, {
									"case":	105,
									"scores":	[-4.11405007860334]
								}, {
									"case":	106,
									"scores":	[-4.11405007860334]
								}, {
									"case":	107,
									"scores":	[-4.11405007860334]
								}, {
									"case":	108,
									"scores":	[-4.11405007860334]
								}, {
									"case":	109,
									"scores":	[-4.11405007860334]
								}, {
									"case":	110,
									"scores":	[-4.11405007860334]
								}, {
									"case":	111,
									"scores":	[-4.11405007860334]
								}, {
									"case":	112,
									"scores":	[-4.11405007860334]
								}, {
									"case":	113,
									"scores":	[-4.11405007860334]
								}, {
									"case":	114,
									"scores":	[-4.11405007860334]
								}, {
									"case":	115,
									"scores":	[-4.11405007860334]
								}, {
									"case":	116,
									"scores":	[-4.11405007860334]
								}, {
									"case":	117,
									"scores":	[-4.11405007860334]
								}, {
									"case":	118,
									"scores":	[-4.11405007860334]
								}, {
									"case":	119,
									"scores":	[-4.11405007860334]
								}, {
									"case":	120,
									"scores":	[-4.11405007860334]
								}, {
									"case":	121,
									"scores":	[-4.11405007860334]
								}, {
									"case":	122,
									"scores":	[-4.11405007860334]
								}, {
									"case":	123,
									"scores":	[-4.11405007860334]
								}, {
									"case":	124,
									"scores":	[-4.11405007860334]
								}, {
									"case":	125,
									"scores":	[-4.11405007860334]
								}, {
									"case":	126,
									"scores":	[-4.11405007860334]
								}, {
									"case":	127,
									"scores":	[-4.11405007860334]
								}, {
									"case":	128,
									"scores":	[-4.11405007860334]
								}, {
									"case":	129,
									"scores":	[-4.11405007860334]
								}, {
									"case":	130,
									"scores":	[-4.11405007860334]
								}, {
									"case":	131,
									"scores":	[-4.11405007860334]
								}, {
									"case":	132,
									"scores":	[-4.11405007860334]
								}, {
									"case":	133,
									"scores":	[-4.11405007860334]
								}, {
									"case":	134,
									"scores":	[-4.11405007860334]
								}, {
									"case":	135,
									"scores":	[-4.11405007860334]
								}, {
									"case":	136,
									"scores":	[-4.11405007860334]
								}, {
									"case":	137,
									"scores":	[-4.11405007860334]
								}, {
									"case":	138,
									"scores":	[-4.11405007860334]
								}, {
									"case":	139,
									"scores":	[-4.11405007860334]
								}, {
									"case":	140,
									"scores":	[-4.11405007860334]
								}, {
									"case":	141,
									"scores":	[-4.11405007860334]
								}, {
									"case":	142,
									"scores":	[-4.11405007860334]
								}, {
									"case":	143,
									"scores":	[-4.11405007860334]
								}, {
									"case":	144,
									"scores":	[-4.11405007860334]
								}, {
									"case":	145,
									"scores":	[-4.11405007860334]
								}, {
									"case":	146,
									"scores":	[-4.11405007860334]
								}, {
									"case":	147,
									"scores":	[-4.11405007860334]
								}, {
									"case":	148,
									"scores":	[-4.11405007860334]
								}, {
									"case":	149,
									"scores":	[-4.11405007860334]
								}, {
									"case":	150,
									"scores":	[-4.11405007860334]
								}, {
									"case":	151,
									"scores":	[-4.11405007860334]
								}, {
									"case":	152,
									"scores":	[-4.11405007860334]
								}, {
									"case":	153,
									"scores":	[-4.11405007860334]
								}, {
									"case":	154,
									"scores":	[-4.11405007860334]
								}, {
									"case":	155,
									"scores":	[-4.11405007860334]
								}, {
									"case":	156,
									"scores":	[-4.11405007860334]
								}, {
									"case":	157,
									"scores":	[-4.11405007860334]
								}, {
									"case":	158,
									"scores":	[-4.11405007860334]
								}, {
									"case":	159,
									"scores":	[-4.11405007860334]
								}, {
									"case":	160,
									"scores":	[-4.11405007860334]
								}, {
									"case":	161,
									"scores":	[-4.11405007860334]
								}, {
									"case":	162,
									"scores":	[-4.11405007860334]
								}, {
									"case":	163,
									"scores":	[-4.11405007860334]
								}, {
									"case":	164,
									"scores":	[-4.11405007860334]
								}, {
									"case":	165,
									"scores":	[-4.11405007860334]
								}, {
									"case":	166,
									"scores":	[-4.11405007860334]
								}, {
									"case":	167,
									"scores":	[-4.11405007860334]
								}, {
									"case":	168,
									"scores":	[-4.11405007860334]
								}, {
									"case":	169,
									"scores":	[-4.11405007860334]
								}, {
									"case":	170,
									"scores":	[-4.11405007860334]
								}, {
									"case":	171,
									"scores":	[-4.11405007860334]
								}, {
									"case":	172,
									"scores":	[-4.11405007860334]
								}, {
									"case":	173,
									"scores":	[-4.11405007860334]
								}, {
									"case":	174,
									"scores":	[-4.11405007860334]
								}, {
									"case":	175,
									"scores":	[-4.11405007860334]
								}, {
									"case":	176,
									"scores":	[-4.11405007860334]
								}, {
									"case":	177,
									"scores":	[-4.11405007860334]
								}, {
									"case":	178,
									"scores":	[-4.11405007860334]
								}, {
									"case":	179,
									"scores":	[-4.11405007860334]
								}, {
									"case":	180,
									"scores":	[-4.11405007860334]
								}, {
									"case":	181,
									"scores":	[-4.11405007860334]
								}, {
									"case":	182,
									"scores":	[-4.11405007860334]
								}, {
									"case":	183,
									"scores":	[-4.11405007860334]
								}, {
									"case":	184,
									"scores":	[-4.11405007860334]
								}, {
									"case":	185,
									"scores":	[-4.11405007860334]
								}, {
									"case":	186,
									"scores":	[-4.11405007860334]
								}, {
									"case":	187,
									"scores":	[-4.11405007860334]
								}, {
									"case":	188,
									"scores":	[-4.11405007860334]
								}, {
									"case":	189,
									"scores":	[-4.11405007860334]
								}, {
									"case":	190,
									"scores":	[-4.11405007860334]
								}, {
									"case":	191,
									"scores":	[-4.11405007860334]
								}, {
									"case":	192,
									"scores":	[-4.11405007860334]
								}, {
									"case":	193,
									"scores":	[-4.11405007860334]
								}, {
									"case":	194,
									"scores":	[-4.11405007860334]
								}, {
									"case":	195,
									"scores":	[-4.11405007860334]
								}, {
									"case":	196,
									"scores":	[-4.11405007860334]
								}, {
									"case":	197,
									"scores":	[-4.11405007860334]
								}, {
									"case":	198,
									"scores":	[-4.11405007860334]
								}, {
									"case":	199,
									"scores":	[-4.11405007860334]
								}, {
									"case":	200,
									"scores":	[-4.11405007860334]
								}, {
									"case":	201,
									"scores":	[-4.11405007860334]
								}, {
									"case":	202,
									"scores":	[-4.11405007860334]
								}, {
									"case":	203,
									"scores":	[-4.11405007860334]
								}, {
									"case":	204,
									"scores":	[-4.11405007860334]
								}, {
									"case":	205,
									"scores":	[-4.11405007860334]
								}, {
									"case":	206,
									"scores":	[-4.11405007860334]
								}, {
									"case":	207,
									"scores":	[-4.11405007860334]
								}, {
									"case":	208,
									"scores":	[-4.11405007860334]
								}, {
									"case":	209,
									"scores":	[-4.11405007860334]
								}, {
									"case":	210,
									"scores":	[-4.11405007860334]
								}, {
									"case":	211,
									"scores":	[-4.11405007860334]
								}, {
									"case":	212,
									"scores":	[-4.11405007860334]
								}, {
									"case":	213,
									"scores":	[-4.11405007860334]
								}, {
									"case":	214,
									"scores":	[-4.11405007860334]
								}, {
									"case":	215,
									"scores":	[-4.11405007860334]
								}, {
									"case":	216,
									"scores":	[-4.11405007860334]
								}, {
									"case":	217,
									"scores":	[-4.11405007860334]
								}, {
									"case":	218,
									"scores":	[-4.11405007860334]
								}, {
									"case":	219,
									"scores":	[-4.11405007860334]
								}, {
									"case":	220,
									"scores":	[-4.11405007860334]
								}, {
									"case":	221,
									"scores":	[-4.11405007860334]
								}, {
									"case":	222,
									"scores":	[-4.11405007860334]
								}, {
									"case":	223,
									"scores":	[-7.37839886190334, -6.49314618760334, -8.80237078760334, -8.11317203460334, -7.95362197560334, -7.98010078760334, -7.85398448760334, -7.85398448760334, -7.84728278760334, -7.98010078760334, -7.98680248760334, -7.98680248760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98680248760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98680248760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98680248760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.98010078760334, -7.94267638760334]
								}]
						}, {
							"switch":	8,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	57,
							"begin_column":	2,
							"end_line":	58,
							"end_column":	29,
							"patch_codes":	["if (__is_neg(\"\", \"L57\", 62, &(tif), sizeof (tif), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_dirlist);\n", "if ((tif->tif_dirlist) || __is_neg(\"\", \"L57\", 62, &(tif), sizeof (tif), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_dirlist);\n", "if ((tif->tif_dirlist) && !__is_neg(\"\", \"L57\", 62, &(tif), sizeof (tif), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_dirlist);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.896135531228146, -3.8665962109281464, -4.5963798939281464, -5.4427221829281462, -4.2385761989281461, -4.2382360109281461, -4.6605175109281465, -4.6605175109281465, -4.3117283109281459, -4.2382360109281461, -4.5870252109281457, -4.5870252109281457, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.5870252109281457, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.5870252109281457, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.5870252109281457, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -4.2382360109281461, -5.0411881109281458]
								}, {
									"case":	2,
									"scores":	[-6.1843493087281463, -5.1548099884281466, -5.8845936714281457, -6.7309359604281465, -5.5267899764281463, -5.5264497884281454, -5.9487312884281458, -5.9487312884281458, -5.5999420884281452, -5.5264497884281454, -5.875238988428146, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -6.329401888428146]
								}, {
									"case":	3,
									"scores":	[-6.1843493087281463, -5.1548099884281466, -5.8845936714281457, -6.7309359604281465, -5.5267899764281463, -5.5264497884281454, -5.9487312884281458, -5.9487312884281458, -5.5999420884281452, -5.5264497884281454, -5.875238988428146, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.875238988428146, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -5.5264497884281454, -6.329401888428146]
								}]
						}, {
							"switch":	9,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	57,
							"begin_column":	2,
							"end_line":	58,
							"end_column":	29,
							"patch_codes":	["if (!__is_neg(\"\", \"L57\", 62, &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    if (tif->tif_dirlist)\n        _TIFFfree(tif->tif_dirlist);\n", "if (!__is_neg(\"\", \"L57\", 62, &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif), sizeof (tif), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)) && (tif->tif_dirlist))\n    _TIFFfree(tif->tif_dirlist);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.98175329860334, -7.01129261890334, -6.7115369816033414, -7.55787927060334, -6.35373328660334, -6.35339309860334, -6.77567459860334, -6.77567459860334, -6.42688539860334, -6.35339309860334, -6.70218229860334, -6.70218229860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.70218229860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.70218229860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.70218229860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -6.35339309860334, -7.15634519860334]
								}, {
									"case":	2,
									"scores":	[-6.91132800990334, -5.88178868960334, -6.61157237260334, -7.45791466160334, -6.2537686776033414, -6.25342848960334, -6.67570998960334, -6.67570998960334, -6.32692078960334, -6.25342848960334, -6.60221768960334, -6.60221768960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.60221768960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.60221768960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.60221768960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -6.25342848960334, -7.05638058960334]
								}]
						}]
				}, {
					"line":	60,
					"switches":	[{
							"switch":	10,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	61,
							"begin_column":	0,
							"end_line":	61,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L61\", 62, &(tif), sizeof (tif), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.09384737128582]
								}, {
									"case":	2,
									"scores":	[-4.09384737128582]
								}, {
									"case":	3,
									"scores":	[-4.09384737128582]
								}, {
									"case":	4,
									"scores":	[-4.09384737128582]
								}, {
									"case":	5,
									"scores":	[-4.09384737128582]
								}, {
									"case":	6,
									"scores":	[-4.09384737128582]
								}, {
									"case":	7,
									"scores":	[-4.09384737128582]
								}, {
									"case":	8,
									"scores":	[-4.09384737128582]
								}, {
									"case":	9,
									"scores":	[-4.09384737128582]
								}, {
									"case":	10,
									"scores":	[-4.09384737128582]
								}, {
									"case":	11,
									"scores":	[-4.09384737128582]
								}, {
									"case":	12,
									"scores":	[-4.09384737128582]
								}, {
									"case":	13,
									"scores":	[-4.09384737128582]
								}, {
									"case":	14,
									"scores":	[-4.09384737128582]
								}, {
									"case":	15,
									"scores":	[-4.09384737128582]
								}, {
									"case":	16,
									"scores":	[-4.09384737128582]
								}, {
									"case":	17,
									"scores":	[-4.09384737128582]
								}, {
									"case":	18,
									"scores":	[-4.09384737128582]
								}, {
									"case":	19,
									"scores":	[-4.09384737128582]
								}, {
									"case":	20,
									"scores":	[-4.09384737128582]
								}, {
									"case":	21,
									"scores":	[-4.09384737128582]
								}, {
									"case":	22,
									"scores":	[-4.09384737128582]
								}, {
									"case":	23,
									"scores":	[-4.09384737128582]
								}, {
									"case":	24,
									"scores":	[-4.09384737128582]
								}, {
									"case":	25,
									"scores":	[-4.09384737128582]
								}, {
									"case":	26,
									"scores":	[-4.09384737128582]
								}, {
									"case":	27,
									"scores":	[-4.09384737128582]
								}, {
									"case":	28,
									"scores":	[-4.09384737128582]
								}, {
									"case":	29,
									"scores":	[-4.09384737128582]
								}, {
									"case":	30,
									"scores":	[-4.09384737128582]
								}, {
									"case":	31,
									"scores":	[-4.09384737128582]
								}, {
									"case":	32,
									"scores":	[-4.09384737128582]
								}, {
									"case":	33,
									"scores":	[-4.09384737128582]
								}, {
									"case":	34,
									"scores":	[-4.09384737128582]
								}, {
									"case":	35,
									"scores":	[-4.09384737128582]
								}, {
									"case":	36,
									"scores":	[-4.09384737128582]
								}, {
									"case":	37,
									"scores":	[-4.09384737128582]
								}, {
									"case":	38,
									"scores":	[-4.09384737128582]
								}, {
									"case":	39,
									"scores":	[-4.09384737128582]
								}, {
									"case":	40,
									"scores":	[-4.09384737128582]
								}, {
									"case":	41,
									"scores":	[-4.09384737128582]
								}, {
									"case":	42,
									"scores":	[-4.09384737128582]
								}, {
									"case":	43,
									"scores":	[-4.09384737128582]
								}, {
									"case":	44,
									"scores":	[-4.09384737128582]
								}, {
									"case":	45,
									"scores":	[-4.09384737128582]
								}, {
									"case":	46,
									"scores":	[-4.09384737128582]
								}, {
									"case":	47,
									"scores":	[-4.09384737128582]
								}, {
									"case":	48,
									"scores":	[-4.09384737128582]
								}, {
									"case":	49,
									"scores":	[-4.09384737128582]
								}, {
									"case":	50,
									"scores":	[-4.09384737128582]
								}, {
									"case":	51,
									"scores":	[-4.09384737128582]
								}, {
									"case":	52,
									"scores":	[-4.09384737128582]
								}, {
									"case":	53,
									"scores":	[-4.09384737128582]
								}, {
									"case":	54,
									"scores":	[-4.09384737128582]
								}, {
									"case":	55,
									"scores":	[-4.09384737128582]
								}, {
									"case":	56,
									"scores":	[-4.09384737128582]
								}, {
									"case":	57,
									"scores":	[-4.09384737128582]
								}, {
									"case":	58,
									"scores":	[-4.09384737128582]
								}, {
									"case":	59,
									"scores":	[-4.09384737128582]
								}, {
									"case":	60,
									"scores":	[-4.09384737128582]
								}, {
									"case":	61,
									"scores":	[-4.09384737128582]
								}, {
									"case":	62,
									"scores":	[-4.09384737128582]
								}, {
									"case":	63,
									"scores":	[-4.09384737128582]
								}, {
									"case":	64,
									"scores":	[-4.09384737128582]
								}, {
									"case":	65,
									"scores":	[-4.09384737128582]
								}, {
									"case":	66,
									"scores":	[-4.09384737128582]
								}, {
									"case":	67,
									"scores":	[-4.09384737128582]
								}, {
									"case":	68,
									"scores":	[-4.09384737128582]
								}, {
									"case":	69,
									"scores":	[-4.09384737128582]
								}, {
									"case":	70,
									"scores":	[-4.09384737128582]
								}, {
									"case":	71,
									"scores":	[-4.09384737128582]
								}, {
									"case":	72,
									"scores":	[-4.09384737128582]
								}, {
									"case":	73,
									"scores":	[-4.09384737128582]
								}, {
									"case":	74,
									"scores":	[-4.09384737128582]
								}, {
									"case":	75,
									"scores":	[-4.09384737128582]
								}, {
									"case":	76,
									"scores":	[-4.09384737128582]
								}, {
									"case":	77,
									"scores":	[-4.09384737128582]
								}, {
									"case":	78,
									"scores":	[-4.09384737128582]
								}, {
									"case":	79,
									"scores":	[-4.09384737128582]
								}, {
									"case":	80,
									"scores":	[-4.09384737128582]
								}, {
									"case":	81,
									"scores":	[-4.09384737128582]
								}, {
									"case":	82,
									"scores":	[-4.09384737128582]
								}, {
									"case":	83,
									"scores":	[-4.09384737128582]
								}, {
									"case":	84,
									"scores":	[-4.09384737128582]
								}, {
									"case":	85,
									"scores":	[-4.09384737128582]
								}, {
									"case":	86,
									"scores":	[-4.09384737128582]
								}, {
									"case":	87,
									"scores":	[-4.09384737128582]
								}, {
									"case":	88,
									"scores":	[-4.09384737128582]
								}, {
									"case":	89,
									"scores":	[-4.09384737128582]
								}, {
									"case":	90,
									"scores":	[-4.09384737128582]
								}, {
									"case":	91,
									"scores":	[-4.09384737128582]
								}, {
									"case":	92,
									"scores":	[-4.09384737128582]
								}, {
									"case":	93,
									"scores":	[-4.09384737128582]
								}, {
									"case":	94,
									"scores":	[-4.09384737128582]
								}, {
									"case":	95,
									"scores":	[-4.09384737128582]
								}, {
									"case":	96,
									"scores":	[-4.09384737128582]
								}, {
									"case":	97,
									"scores":	[-4.09384737128582]
								}, {
									"case":	98,
									"scores":	[-4.09384737128582]
								}, {
									"case":	99,
									"scores":	[-4.09384737128582]
								}, {
									"case":	100,
									"scores":	[-4.09384737128582]
								}, {
									"case":	101,
									"scores":	[-4.09384737128582]
								}, {
									"case":	102,
									"scores":	[-4.09384737128582]
								}, {
									"case":	103,
									"scores":	[-4.09384737128582]
								}, {
									"case":	104,
									"scores":	[-4.09384737128582]
								}, {
									"case":	105,
									"scores":	[-4.09384737128582]
								}, {
									"case":	106,
									"scores":	[-4.09384737128582]
								}, {
									"case":	107,
									"scores":	[-4.09384737128582]
								}, {
									"case":	108,
									"scores":	[-4.09384737128582]
								}, {
									"case":	109,
									"scores":	[-4.09384737128582]
								}, {
									"case":	110,
									"scores":	[-4.09384737128582]
								}, {
									"case":	111,
									"scores":	[-4.09384737128582]
								}, {
									"case":	112,
									"scores":	[-4.09384737128582]
								}, {
									"case":	113,
									"scores":	[-4.09384737128582]
								}, {
									"case":	114,
									"scores":	[-4.09384737128582]
								}, {
									"case":	115,
									"scores":	[-4.09384737128582]
								}, {
									"case":	116,
									"scores":	[-4.09384737128582]
								}, {
									"case":	117,
									"scores":	[-4.09384737128582]
								}, {
									"case":	118,
									"scores":	[-4.09384737128582]
								}, {
									"case":	119,
									"scores":	[-4.09384737128582]
								}, {
									"case":	120,
									"scores":	[-4.09384737128582]
								}, {
									"case":	121,
									"scores":	[-4.09384737128582]
								}, {
									"case":	122,
									"scores":	[-4.09384737128582]
								}, {
									"case":	123,
									"scores":	[-4.09384737128582]
								}, {
									"case":	124,
									"scores":	[-4.09384737128582]
								}, {
									"case":	125,
									"scores":	[-4.09384737128582]
								}, {
									"case":	126,
									"scores":	[-4.09384737128582]
								}, {
									"case":	127,
									"scores":	[-4.09384737128582]
								}, {
									"case":	128,
									"scores":	[-4.09384737128582]
								}, {
									"case":	129,
									"scores":	[-4.09384737128582]
								}, {
									"case":	130,
									"scores":	[-4.09384737128582]
								}, {
									"case":	131,
									"scores":	[-4.09384737128582]
								}, {
									"case":	132,
									"scores":	[-4.09384737128582]
								}, {
									"case":	133,
									"scores":	[-4.09384737128582]
								}, {
									"case":	134,
									"scores":	[-4.09384737128582]
								}, {
									"case":	135,
									"scores":	[-4.09384737128582]
								}, {
									"case":	136,
									"scores":	[-4.09384737128582]
								}, {
									"case":	137,
									"scores":	[-4.09384737128582]
								}, {
									"case":	138,
									"scores":	[-4.09384737128582]
								}, {
									"case":	139,
									"scores":	[-4.09384737128582]
								}, {
									"case":	140,
									"scores":	[-4.09384737128582]
								}, {
									"case":	141,
									"scores":	[-4.09384737128582]
								}, {
									"case":	142,
									"scores":	[-4.09384737128582]
								}, {
									"case":	143,
									"scores":	[-4.09384737128582]
								}, {
									"case":	144,
									"scores":	[-4.09384737128582]
								}, {
									"case":	145,
									"scores":	[-4.09384737128582]
								}, {
									"case":	146,
									"scores":	[-4.09384737128582]
								}, {
									"case":	147,
									"scores":	[-4.09384737128582]
								}, {
									"case":	148,
									"scores":	[-4.09384737128582]
								}, {
									"case":	149,
									"scores":	[-4.09384737128582]
								}, {
									"case":	150,
									"scores":	[-4.09384737128582]
								}, {
									"case":	151,
									"scores":	[-4.09384737128582]
								}, {
									"case":	152,
									"scores":	[-4.09384737128582]
								}, {
									"case":	153,
									"scores":	[-4.09384737128582]
								}, {
									"case":	154,
									"scores":	[-4.09384737128582]
								}, {
									"case":	155,
									"scores":	[-4.09384737128582]
								}, {
									"case":	156,
									"scores":	[-4.09384737128582]
								}, {
									"case":	157,
									"scores":	[-4.09384737128582]
								}, {
									"case":	158,
									"scores":	[-4.09384737128582]
								}, {
									"case":	159,
									"scores":	[-4.09384737128582]
								}, {
									"case":	160,
									"scores":	[-4.09384737128582]
								}, {
									"case":	161,
									"scores":	[-4.09384737128582]
								}, {
									"case":	162,
									"scores":	[-4.09384737128582]
								}, {
									"case":	163,
									"scores":	[-4.09384737128582]
								}, {
									"case":	164,
									"scores":	[-4.09384737128582]
								}, {
									"case":	165,
									"scores":	[-4.09384737128582]
								}, {
									"case":	166,
									"scores":	[-4.09384737128582]
								}, {
									"case":	167,
									"scores":	[-4.09384737128582]
								}, {
									"case":	168,
									"scores":	[-4.09384737128582]
								}, {
									"case":	169,
									"scores":	[-4.09384737128582]
								}, {
									"case":	170,
									"scores":	[-4.09384737128582]
								}, {
									"case":	171,
									"scores":	[-4.09384737128582]
								}, {
									"case":	172,
									"scores":	[-4.09384737128582]
								}, {
									"case":	173,
									"scores":	[-4.09384737128582]
								}, {
									"case":	174,
									"scores":	[-4.09384737128582]
								}, {
									"case":	175,
									"scores":	[-4.09384737128582]
								}, {
									"case":	176,
									"scores":	[-4.09384737128582]
								}, {
									"case":	177,
									"scores":	[-4.09384737128582]
								}, {
									"case":	178,
									"scores":	[-4.09384737128582]
								}, {
									"case":	179,
									"scores":	[-4.09384737128582]
								}, {
									"case":	180,
									"scores":	[-4.09384737128582]
								}, {
									"case":	181,
									"scores":	[-4.09384737128582]
								}, {
									"case":	182,
									"scores":	[-4.09384737128582]
								}, {
									"case":	183,
									"scores":	[-4.09384737128582]
								}, {
									"case":	184,
									"scores":	[-4.09384737128582]
								}, {
									"case":	185,
									"scores":	[-4.09384737128582]
								}, {
									"case":	186,
									"scores":	[-4.09384737128582]
								}, {
									"case":	187,
									"scores":	[-4.09384737128582]
								}, {
									"case":	188,
									"scores":	[-4.09384737128582]
								}, {
									"case":	189,
									"scores":	[-4.09384737128582]
								}, {
									"case":	190,
									"scores":	[-4.09384737128582]
								}, {
									"case":	191,
									"scores":	[-4.09384737128582]
								}, {
									"case":	192,
									"scores":	[-4.09384737128582]
								}, {
									"case":	193,
									"scores":	[-4.09384737128582]
								}, {
									"case":	194,
									"scores":	[-4.09384737128582]
								}, {
									"case":	195,
									"scores":	[-4.09384737128582]
								}, {
									"case":	196,
									"scores":	[-4.09384737128582]
								}, {
									"case":	197,
									"scores":	[-4.09384737128582]
								}, {
									"case":	198,
									"scores":	[-4.09384737128582]
								}, {
									"case":	199,
									"scores":	[-4.09384737128582]
								}, {
									"case":	200,
									"scores":	[-4.09384737128582]
								}, {
									"case":	201,
									"scores":	[-4.09384737128582]
								}, {
									"case":	202,
									"scores":	[-4.09384737128582]
								}, {
									"case":	203,
									"scores":	[-4.09384737128582]
								}, {
									"case":	204,
									"scores":	[-4.09384737128582]
								}, {
									"case":	205,
									"scores":	[-4.09384737128582]
								}, {
									"case":	206,
									"scores":	[-4.09384737128582]
								}, {
									"case":	207,
									"scores":	[-4.09384737128582]
								}, {
									"case":	208,
									"scores":	[-4.09384737128582]
								}, {
									"case":	209,
									"scores":	[-4.09384737128582]
								}, {
									"case":	210,
									"scores":	[-4.09384737128582]
								}, {
									"case":	211,
									"scores":	[-4.09384737128582]
								}, {
									"case":	212,
									"scores":	[-4.09384737128582]
								}, {
									"case":	213,
									"scores":	[-4.09384737128582]
								}, {
									"case":	214,
									"scores":	[-4.09384737128582]
								}, {
									"case":	215,
									"scores":	[-4.09384737128582]
								}, {
									"case":	216,
									"scores":	[-4.09384737128582]
								}, {
									"case":	217,
									"scores":	[-4.09384737128582]
								}, {
									"case":	218,
									"scores":	[-4.09384737128582]
								}, {
									"case":	219,
									"scores":	[-4.09384737128582]
								}, {
									"case":	220,
									"scores":	[-4.09384737128582]
								}, {
									"case":	221,
									"scores":	[-4.09384737128582]
								}, {
									"case":	222,
									"scores":	[-4.09384737128582]
								}, {
									"case":	223,
									"scores":	[-7.11069159158582, -7.3596037482858216, -7.94004531728582, -8.33153801728582, -7.50926801728582, -7.3831517172858216, -7.50926801728582, -7.3831517172858216, -7.37645001728582, -7.4814029402858218, -7.3349331172858214, -7.515969717285822, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.515969717285822, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.515969717285822, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.515969717285822, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.50926801728582, -7.4718436172858214]
								}]
						}, {
							"switch":	11,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	61,
							"begin_column":	2,
							"end_line":	68,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L61\", 62, &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif), sizeof (tif), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    while (tif->tif_clientinfo)\n        {\n            TIFFClientInfoLink *link = tif->tif_clientinfo;\n            tif->tif_clientinfo = link->next;\n            _TIFFfree(link->name);\n            _TIFFfree(link);\n        }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.7934484912858215, -7.07028695158582, -6.72198674028582, -6.6913342742858219, -6.3331903912858216, -6.03504289128582, -6.3331903912858216, -6.75547189128582, -6.4066826912858215, -6.6390127642858214, -7.10833329128582, -6.68197959128582, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.68197959128582, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.68197959128582, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.68197959128582, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -6.3331903912858216, -7.1361424912858213]
								}]
						}]
				}, {
					"line":	69,
					"switches":	[{
							"switch":	12,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	70,
							"begin_column":	0,
							"end_line":	70,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L70\", 62, &(tif), sizeof (tif), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	2,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	3,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	4,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	5,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	6,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	7,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	8,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	9,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	10,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	11,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	12,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	13,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	14,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	15,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	16,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	17,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	18,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	19,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	20,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	21,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	22,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	23,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	24,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	25,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	26,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	27,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	28,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	29,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	30,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	31,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	32,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	33,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	34,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	35,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	36,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	37,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	38,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	39,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	40,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	41,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	42,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	43,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	44,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	45,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	46,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	47,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	48,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	49,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	50,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	51,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	52,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	53,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	54,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	55,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	56,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	57,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	58,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	59,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	60,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	61,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	62,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	63,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	64,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	65,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	66,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	67,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	68,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	69,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	70,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	71,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	72,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	73,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	74,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	75,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	76,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	77,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	78,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	79,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	80,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	81,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	82,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	83,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	84,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	85,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	86,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	87,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	88,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	89,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	90,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	91,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	92,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	93,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	94,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	95,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	96,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	97,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	98,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	99,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	100,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	101,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	102,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	103,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	104,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	105,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	106,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	107,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	108,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	109,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	110,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	111,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	112,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	113,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	114,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	115,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	116,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	117,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	118,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	119,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	120,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	121,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	122,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	123,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	124,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	125,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	126,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	127,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	128,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	129,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	130,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	131,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	132,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	133,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	134,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	135,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	136,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	137,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	138,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	139,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	140,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	141,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	142,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	143,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	144,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	145,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	146,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	147,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	148,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	149,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	150,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	151,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	152,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	153,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	154,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	155,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	156,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	157,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	158,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	159,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	160,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	161,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	162,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	163,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	164,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	165,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	166,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	167,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	168,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	169,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	170,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	171,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	172,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	173,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	174,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	175,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	176,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	177,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	178,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	179,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	180,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	181,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	182,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	183,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	184,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	185,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	186,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	187,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	188,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	189,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	190,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	191,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	192,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	193,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	194,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	195,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	196,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	197,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	198,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	199,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	200,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	201,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	202,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	203,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	204,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	205,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	206,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	207,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	208,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	209,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	210,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	211,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	212,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	213,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	214,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	215,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	216,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	217,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	218,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	219,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	220,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	221,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	222,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	223,
									"scores":	[-7.0325740872683, -8.5395633729683027, -7.052608772968302, -8.4134470729683031, -8.4067453729683, -6.4825425729683017, -8.5116982959683, -8.9703406729683, -8.3652284729683029, -8.5395633729683027, -8.5395633729683027, -8.5462650729683, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5462650729683, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5462650729683, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5462650729683, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5395633729683027, -8.5021389729683]
								}]
						}, {
							"switch":	13,
							"types":	[[5], [2, 3], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], [], [4]],
							"begin_line":	70,
							"begin_column":	2,
							"end_line":	71,
							"end_column":	29,
							"patch_codes":	["if (__is_neg(\"\", \"L70\", 62, &(tif), sizeof (tif), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_rawdata);\n", "if (((tif->tif_rawdata) || __is_neg(\"\", \"L70\", 62, &(tif), sizeof (tif), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield))) && (tif->tif_flags & 512))\n    _TIFFfree(tif->tif_rawdata);\n", "if ((tif->tif_rawdata && (tif->tif_flags & 512)) || __is_neg(\"\", \"L70\", 62, &(tif), sizeof (tif), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_rawdata);\n", "if (tif->tif_rawdata)\n    _TIFFfree(tif->tif_rawdata);\n", "if ((tif->tif_rawdata && (tif->tif_flags & 512)) && !__is_neg(\"\", \"L70\", 62, &(tif), sizeof (tif), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_rawdata);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.873878539228147, -5.8047121789281455, -5.4330723789281468, -5.5065646789281466, -5.157775478928146, -6.2209433839281463, -6.1105345519281462, -6.1935085279281461, -6.579855078928146, -5.8047121789281455, -5.8047121789281455, -6.1535013789281461, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -6.1535013789281461, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -6.1535013789281461, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -6.1535013789281461, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -5.8047121789281455, -6.6076642789281461]
								}, {
									"case":	2,
									"scores":	[-6.2387057687281455, -6.1695394084281467, -5.7978996084281462, -5.8713919084281461, -5.5226027084281455, -6.5857706134281457, -6.4753617814281466, -6.5583357574281465, -6.9446823084281464, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.9724915084281465]
								}, {
									"case":	3,
									"scores":	[-6.2387057687281455, -6.1695394084281467, -5.7978996084281462, -5.8713919084281461, -5.5226027084281455, -6.5857706134281457, -6.4753617814281466, -6.5583357574281465, -6.9446823084281464, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.9724915084281465]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-6.2387057687281455, -6.1695394084281467, -5.7978996084281462, -5.8713919084281461, -5.5226027084281455, -6.5857706134281457, -6.4753617814281466, -6.5583357574281465, -6.9446823084281464, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.5183286084281464, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.1695394084281467, -6.9724915084281465]
								}]
						}, {
							"switch":	14,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	70,
							"begin_column":	2,
							"end_line":	71,
							"end_column":	29,
							"patch_codes":	["if (!__is_neg(\"\", \"L70\", 62, &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif), sizeof (tif), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    if (tif->tif_rawdata && (tif->tif_flags & 512))\n        _TIFFfree(tif->tif_rawdata);\n", "if (!__is_neg(\"\", \"L70\", 62, &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif), sizeof (tif), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)) && (tif->tif_rawdata && (tif->tif_flags & 512)))\n    _TIFFfree(tif->tif_rawdata);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.8467377439683, -5.4750979439683016, -5.9159041042683018, -5.5485902439683015, -5.1998010439683018, -6.262968948968302, -6.1525601169683, -6.2355340929683, -6.6218806439683018, -5.8467377439683, -5.8467377439683, -6.1955269439683018, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -6.1955269439683018, -5.8467377439683, -5.8467377439683, -5.8467377439683, -6.1955269439683018, -5.8467377439683, -5.8467377439683, -5.8467377439683, -6.1955269439683018, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -5.8467377439683, -6.6496898439683019]
								}, {
									"case":	2,
									"scores":	[-6.6375160152683019, -6.5683496549683014, -6.1967098549683017, -6.2702021549683025, -5.9214129549683019, -6.9845808599683021, -6.8741720279683, -6.957146003968302, -7.3434925549683019, -6.5683496549683014, -6.5683496549683014, -6.9171388549683019, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.9171388549683019, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.9171388549683019, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.9171388549683019, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -6.5683496549683014, -7.371301754968302]
								}]
						}]
				}, {
					"line":	71,
					"switches":	[{
							"switch":	15,
							"types":	[[], [], [], [], [224], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [], [], [], [216, 217, 218, 219, 220, 221, 222, 223], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], [], [], [], [], [], []],
							"begin_line":	72,
							"begin_column":	0,
							"end_line":	72,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif), 0, sizeof (*((tif))))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.053441956650782]
								}, {
									"case":	2,
									"scores":	[-4.053441956650782]
								}, {
									"case":	3,
									"scores":	[-4.053441956650782]
								}, {
									"case":	4,
									"scores":	[-4.053441956650782]
								}, {
									"case":	5,
									"scores":	[-4.053441956650782]
								}, {
									"case":	6,
									"scores":	[-4.053441956650782]
								}, {
									"case":	7,
									"scores":	[-4.053441956650782]
								}, {
									"case":	8,
									"scores":	[-4.053441956650782]
								}, {
									"case":	9,
									"scores":	[-4.053441956650782]
								}, {
									"case":	10,
									"scores":	[-4.053441956650782]
								}, {
									"case":	11,
									"scores":	[-4.053441956650782]
								}, {
									"case":	12,
									"scores":	[-4.053441956650782]
								}, {
									"case":	13,
									"scores":	[-4.053441956650782]
								}, {
									"case":	14,
									"scores":	[-4.053441956650782]
								}, {
									"case":	15,
									"scores":	[-4.053441956650782]
								}, {
									"case":	16,
									"scores":	[-4.053441956650782]
								}, {
									"case":	17,
									"scores":	[-4.053441956650782]
								}, {
									"case":	18,
									"scores":	[-4.053441956650782]
								}, {
									"case":	19,
									"scores":	[-4.053441956650782]
								}, {
									"case":	20,
									"scores":	[-4.053441956650782]
								}, {
									"case":	21,
									"scores":	[-4.053441956650782]
								}, {
									"case":	22,
									"scores":	[-4.053441956650782]
								}, {
									"case":	23,
									"scores":	[-4.053441956650782]
								}, {
									"case":	24,
									"scores":	[-4.053441956650782]
								}, {
									"case":	25,
									"scores":	[-4.053441956650782]
								}, {
									"case":	26,
									"scores":	[-4.053441956650782]
								}, {
									"case":	27,
									"scores":	[-4.053441956650782]
								}, {
									"case":	28,
									"scores":	[-4.053441956650782]
								}, {
									"case":	29,
									"scores":	[-4.053441956650782]
								}, {
									"case":	30,
									"scores":	[-4.053441956650782]
								}, {
									"case":	31,
									"scores":	[-4.053441956650782]
								}, {
									"case":	32,
									"scores":	[-4.053441956650782]
								}, {
									"case":	33,
									"scores":	[-4.053441956650782]
								}, {
									"case":	34,
									"scores":	[-4.053441956650782]
								}, {
									"case":	35,
									"scores":	[-4.053441956650782]
								}, {
									"case":	36,
									"scores":	[-4.053441956650782]
								}, {
									"case":	37,
									"scores":	[-4.053441956650782]
								}, {
									"case":	38,
									"scores":	[-4.053441956650782]
								}, {
									"case":	39,
									"scores":	[-4.053441956650782]
								}, {
									"case":	40,
									"scores":	[-4.053441956650782]
								}, {
									"case":	41,
									"scores":	[-4.053441956650782]
								}, {
									"case":	42,
									"scores":	[-4.053441956650782]
								}, {
									"case":	43,
									"scores":	[-4.053441956650782]
								}, {
									"case":	44,
									"scores":	[-4.053441956650782]
								}, {
									"case":	45,
									"scores":	[-4.053441956650782]
								}, {
									"case":	46,
									"scores":	[-4.053441956650782]
								}, {
									"case":	47,
									"scores":	[-4.053441956650782]
								}, {
									"case":	48,
									"scores":	[-4.053441956650782]
								}, {
									"case":	49,
									"scores":	[-4.053441956650782]
								}, {
									"case":	50,
									"scores":	[-4.053441956650782]
								}, {
									"case":	51,
									"scores":	[-4.053441956650782]
								}, {
									"case":	52,
									"scores":	[-4.053441956650782]
								}, {
									"case":	53,
									"scores":	[-4.053441956650782]
								}, {
									"case":	54,
									"scores":	[-4.053441956650782]
								}, {
									"case":	55,
									"scores":	[-4.053441956650782]
								}, {
									"case":	56,
									"scores":	[-4.053441956650782]
								}, {
									"case":	57,
									"scores":	[-4.053441956650782]
								}, {
									"case":	58,
									"scores":	[-4.053441956650782]
								}, {
									"case":	59,
									"scores":	[-4.053441956650782]
								}, {
									"case":	60,
									"scores":	[-4.053441956650782]
								}, {
									"case":	61,
									"scores":	[-4.053441956650782]
								}, {
									"case":	62,
									"scores":	[-4.053441956650782]
								}, {
									"case":	63,
									"scores":	[-4.053441956650782]
								}, {
									"case":	64,
									"scores":	[-4.053441956650782]
								}, {
									"case":	65,
									"scores":	[-4.053441956650782]
								}, {
									"case":	66,
									"scores":	[-4.053441956650782]
								}, {
									"case":	67,
									"scores":	[-4.053441956650782]
								}, {
									"case":	68,
									"scores":	[-4.053441956650782]
								}, {
									"case":	69,
									"scores":	[-4.053441956650782]
								}, {
									"case":	70,
									"scores":	[-4.053441956650782]
								}, {
									"case":	71,
									"scores":	[-4.053441956650782]
								}, {
									"case":	72,
									"scores":	[-4.053441956650782]
								}, {
									"case":	73,
									"scores":	[-4.053441956650782]
								}, {
									"case":	74,
									"scores":	[-4.053441956650782]
								}, {
									"case":	75,
									"scores":	[-4.053441956650782]
								}, {
									"case":	76,
									"scores":	[-4.053441956650782]
								}, {
									"case":	77,
									"scores":	[-4.053441956650782]
								}, {
									"case":	78,
									"scores":	[-4.053441956650782]
								}, {
									"case":	79,
									"scores":	[-4.053441956650782]
								}, {
									"case":	80,
									"scores":	[-4.053441956650782]
								}, {
									"case":	81,
									"scores":	[-4.053441956650782]
								}, {
									"case":	82,
									"scores":	[-4.053441956650782]
								}, {
									"case":	83,
									"scores":	[-4.053441956650782]
								}, {
									"case":	84,
									"scores":	[-4.053441956650782]
								}, {
									"case":	85,
									"scores":	[-4.053441956650782]
								}, {
									"case":	86,
									"scores":	[-4.053441956650782]
								}, {
									"case":	87,
									"scores":	[-4.053441956650782]
								}, {
									"case":	88,
									"scores":	[-4.053441956650782]
								}, {
									"case":	89,
									"scores":	[-4.053441956650782]
								}, {
									"case":	90,
									"scores":	[-4.053441956650782]
								}, {
									"case":	91,
									"scores":	[-4.053441956650782]
								}, {
									"case":	92,
									"scores":	[-4.053441956650782]
								}, {
									"case":	93,
									"scores":	[-4.053441956650782]
								}, {
									"case":	94,
									"scores":	[-4.053441956650782]
								}, {
									"case":	95,
									"scores":	[-4.053441956650782]
								}, {
									"case":	96,
									"scores":	[-4.053441956650782]
								}, {
									"case":	97,
									"scores":	[-4.053441956650782]
								}, {
									"case":	98,
									"scores":	[-4.053441956650782]
								}, {
									"case":	99,
									"scores":	[-4.053441956650782]
								}, {
									"case":	100,
									"scores":	[-4.053441956650782]
								}, {
									"case":	101,
									"scores":	[-4.053441956650782]
								}, {
									"case":	102,
									"scores":	[-4.053441956650782]
								}, {
									"case":	103,
									"scores":	[-4.053441956650782]
								}, {
									"case":	104,
									"scores":	[-4.053441956650782]
								}, {
									"case":	105,
									"scores":	[-4.053441956650782]
								}, {
									"case":	106,
									"scores":	[-4.053441956650782]
								}, {
									"case":	107,
									"scores":	[-4.053441956650782]
								}, {
									"case":	108,
									"scores":	[-4.053441956650782]
								}, {
									"case":	109,
									"scores":	[-4.053441956650782]
								}, {
									"case":	110,
									"scores":	[-4.053441956650782]
								}, {
									"case":	111,
									"scores":	[-4.053441956650782]
								}, {
									"case":	112,
									"scores":	[-4.053441956650782]
								}, {
									"case":	113,
									"scores":	[-4.053441956650782]
								}, {
									"case":	114,
									"scores":	[-4.053441956650782]
								}, {
									"case":	115,
									"scores":	[-4.053441956650782]
								}, {
									"case":	116,
									"scores":	[-4.053441956650782]
								}, {
									"case":	117,
									"scores":	[-4.053441956650782]
								}, {
									"case":	118,
									"scores":	[-4.053441956650782]
								}, {
									"case":	119,
									"scores":	[-4.053441956650782]
								}, {
									"case":	120,
									"scores":	[-4.053441956650782]
								}, {
									"case":	121,
									"scores":	[-4.053441956650782]
								}, {
									"case":	122,
									"scores":	[-4.053441956650782]
								}, {
									"case":	123,
									"scores":	[-4.053441956650782]
								}, {
									"case":	124,
									"scores":	[-4.053441956650782]
								}, {
									"case":	125,
									"scores":	[-4.053441956650782]
								}, {
									"case":	126,
									"scores":	[-4.053441956650782]
								}, {
									"case":	127,
									"scores":	[-4.053441956650782]
								}, {
									"case":	128,
									"scores":	[-4.053441956650782]
								}, {
									"case":	129,
									"scores":	[-4.053441956650782]
								}, {
									"case":	130,
									"scores":	[-4.053441956650782]
								}, {
									"case":	131,
									"scores":	[-4.053441956650782]
								}, {
									"case":	132,
									"scores":	[-4.053441956650782]
								}, {
									"case":	133,
									"scores":	[-4.053441956650782]
								}, {
									"case":	134,
									"scores":	[-4.053441956650782]
								}, {
									"case":	135,
									"scores":	[-4.053441956650782]
								}, {
									"case":	136,
									"scores":	[-4.053441956650782]
								}, {
									"case":	137,
									"scores":	[-4.053441956650782]
								}, {
									"case":	138,
									"scores":	[-4.053441956650782]
								}, {
									"case":	139,
									"scores":	[-4.053441956650782]
								}, {
									"case":	140,
									"scores":	[-4.053441956650782]
								}, {
									"case":	141,
									"scores":	[-4.053441956650782]
								}, {
									"case":	142,
									"scores":	[-4.053441956650782]
								}, {
									"case":	143,
									"scores":	[-4.053441956650782]
								}, {
									"case":	144,
									"scores":	[-4.053441956650782]
								}, {
									"case":	145,
									"scores":	[-4.053441956650782]
								}, {
									"case":	146,
									"scores":	[-4.053441956650782]
								}, {
									"case":	147,
									"scores":	[-4.053441956650782]
								}, {
									"case":	148,
									"scores":	[-4.053441956650782]
								}, {
									"case":	149,
									"scores":	[-4.053441956650782]
								}, {
									"case":	150,
									"scores":	[-4.053441956650782]
								}, {
									"case":	151,
									"scores":	[-4.053441956650782]
								}, {
									"case":	152,
									"scores":	[-4.053441956650782]
								}, {
									"case":	153,
									"scores":	[-4.053441956650782]
								}, {
									"case":	154,
									"scores":	[-4.053441956650782]
								}, {
									"case":	155,
									"scores":	[-4.053441956650782]
								}, {
									"case":	156,
									"scores":	[-4.053441956650782]
								}, {
									"case":	157,
									"scores":	[-4.053441956650782]
								}, {
									"case":	158,
									"scores":	[-4.053441956650782]
								}, {
									"case":	159,
									"scores":	[-4.053441956650782]
								}, {
									"case":	160,
									"scores":	[-4.053441956650782]
								}, {
									"case":	161,
									"scores":	[-4.053441956650782]
								}, {
									"case":	162,
									"scores":	[-4.053441956650782]
								}, {
									"case":	163,
									"scores":	[-4.053441956650782]
								}, {
									"case":	164,
									"scores":	[-4.053441956650782]
								}, {
									"case":	165,
									"scores":	[-4.053441956650782]
								}, {
									"case":	166,
									"scores":	[-4.053441956650782]
								}, {
									"case":	167,
									"scores":	[-4.053441956650782]
								}, {
									"case":	168,
									"scores":	[-4.053441956650782]
								}, {
									"case":	169,
									"scores":	[-4.053441956650782]
								}, {
									"case":	170,
									"scores":	[-4.053441956650782]
								}, {
									"case":	171,
									"scores":	[-4.053441956650782]
								}, {
									"case":	172,
									"scores":	[-4.053441956650782]
								}, {
									"case":	173,
									"scores":	[-4.053441956650782]
								}, {
									"case":	174,
									"scores":	[-4.053441956650782]
								}, {
									"case":	175,
									"scores":	[-4.053441956650782]
								}, {
									"case":	176,
									"scores":	[-4.053441956650782]
								}, {
									"case":	177,
									"scores":	[-4.053441956650782]
								}, {
									"case":	178,
									"scores":	[-4.053441956650782]
								}, {
									"case":	179,
									"scores":	[-4.053441956650782]
								}, {
									"case":	180,
									"scores":	[-4.053441956650782]
								}, {
									"case":	181,
									"scores":	[-4.053441956650782]
								}, {
									"case":	182,
									"scores":	[-4.053441956650782]
								}, {
									"case":	183,
									"scores":	[-4.053441956650782]
								}, {
									"case":	184,
									"scores":	[-4.053441956650782]
								}, {
									"case":	185,
									"scores":	[-4.053441956650782]
								}, {
									"case":	186,
									"scores":	[-4.053441956650782]
								}, {
									"case":	187,
									"scores":	[-4.053441956650782]
								}, {
									"case":	188,
									"scores":	[-4.053441956650782]
								}, {
									"case":	189,
									"scores":	[-4.053441956650782]
								}, {
									"case":	190,
									"scores":	[-4.053441956650782]
								}, {
									"case":	191,
									"scores":	[-4.053441956650782]
								}, {
									"case":	192,
									"scores":	[-4.053441956650782]
								}, {
									"case":	193,
									"scores":	[-4.053441956650782]
								}, {
									"case":	194,
									"scores":	[-4.053441956650782]
								}, {
									"case":	195,
									"scores":	[-4.053441956650782]
								}, {
									"case":	196,
									"scores":	[-4.053441956650782]
								}, {
									"case":	197,
									"scores":	[-4.053441956650782]
								}, {
									"case":	198,
									"scores":	[-4.053441956650782]
								}, {
									"case":	199,
									"scores":	[-4.053441956650782]
								}, {
									"case":	200,
									"scores":	[-4.053441956650782]
								}, {
									"case":	201,
									"scores":	[-4.053441956650782]
								}, {
									"case":	202,
									"scores":	[-4.053441956650782]
								}, {
									"case":	203,
									"scores":	[-4.053441956650782]
								}, {
									"case":	204,
									"scores":	[-4.053441956650782]
								}, {
									"case":	205,
									"scores":	[-4.053441956650782]
								}, {
									"case":	206,
									"scores":	[-4.053441956650782]
								}, {
									"case":	207,
									"scores":	[-4.053441956650782]
								}, {
									"case":	208,
									"scores":	[-4.053441956650782]
								}, {
									"case":	209,
									"scores":	[-4.053441956650782]
								}, {
									"case":	210,
									"scores":	[-4.053441956650782]
								}, {
									"case":	211,
									"scores":	[-4.053441956650782]
								}, {
									"case":	212,
									"scores":	[-4.053441956650782]
								}, {
									"case":	213,
									"scores":	[-4.053441956650782]
								}, {
									"case":	214,
									"scores":	[-4.053441956650782]
								}, {
									"case":	215,
									"scores":	[-4.053441956650782]
								}, {
									"case":	216,
									"scores":	[-4.053441956650782]
								}, {
									"case":	217,
									"scores":	[-4.053441956650782]
								}, {
									"case":	218,
									"scores":	[-4.053441956650782]
								}, {
									"case":	219,
									"scores":	[-4.053441956650782]
								}, {
									"case":	220,
									"scores":	[-4.053441956650782]
								}, {
									"case":	221,
									"scores":	[-4.053441956650782]
								}, {
									"case":	222,
									"scores":	[-4.053441956650782]
								}, {
									"case":	223,
									"scores":	[-4.053441956650782]
								}, {
									"case":	224,
									"scores":	[-6.75991677995078, -8.26485966565078, -7.1696477656507831, -6.77790506565078, -8.6956369656507828, -6.77790506565078, -6.7712033656507824, -8.26485966565078, -8.23699458865078, -6.2078388656507819, -8.09052476565078, -8.6956369656507828, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.227435265650783, -8.227435265650783, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.2715613656507827, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.26485966565078, -8.227435265650783]
								}]
						}, {
							"switch":	16,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	72,
							"begin_column":	2,
							"end_line":	73,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    ((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size));\n", "if (((((tif)->tif_flags & 2048) != 0)) || __is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    ((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size));\n", "if (((((tif)->tif_flags & 2048) != 0)) && !__is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    ((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size));\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.8382567757281469, -5.0372083154281464, -3.5474123154281481, -4.6655685154281468, -5.4260046644281461, -4.6655685154281468, -4.3167793154281471, -5.0372083154281464, -3.2451296884281469, -5.4534395204281463, -4.3264752154281476, -5.4260046644281461, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.8401604154281461, -5.8401604154281461, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.3859975154281461, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.0372083154281464, -5.8401604154281461]
								}, {
									"case":	2,
									"scores":	[-5.6415010677281456, -4.840452607428146, -3.3506566074281467, -4.4688128074281463, -5.2292489564281457, -4.4688128074281463, -4.1200236074281458, -4.840452607428146, -3.0483739804281469, -5.2566838124281459, -4.1297195074281472, -5.2292489564281457, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.6434047074281466, -5.6434047074281466, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.6434047074281466]
								}, {
									"case":	3,
									"scores":	[-5.6415010677281456, -4.840452607428146, -3.3506566074281467, -4.4688128074281463, -5.2292489564281457, -4.4688128074281463, -4.1200236074281458, -4.840452607428146, -3.0483739804281469, -5.2566838124281459, -4.1297195074281472, -5.2292489564281457, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -5.6434047074281466, -5.6434047074281466, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.1892418074281466, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -4.840452607428146, -5.6434047074281466]
								}]
						}, {
							"switch":	17,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	72,
							"begin_column":	2,
							"end_line":	73,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup)))\n    if ((((tif)->tif_flags & 2048) != 0))\n        ((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size));\n", "if (!__is_neg(\"\", \"L72\", 123, &(tif), sizeof (tif), &((tif)->tif_flags), sizeof ((tif)->tif_flags), &((tif)->tif_unmapproc), sizeof ((tif)->tif_unmapproc), &((tif)->tif_clientdata), sizeof ((tif)->tif_clientdata), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &((tif)->tif_defstripsize), sizeof ((tif)->tif_defstripsize), &((tif)->tif_deftilesize), sizeof ((tif)->tif_deftilesize), &((tif)->tif_data), sizeof ((tif)->tif_data), &((tif)->tif_scanlinesize), sizeof ((tif)->tif_scanlinesize), &((tif)->tif_scanlineskew), sizeof ((tif)->tif_scanlineskew), &((tif)->tif_rawdata), sizeof ((tif)->tif_rawdata), &((tif)->tif_rawdatasize), sizeof ((tif)->tif_rawdatasize), &((tif)->tif_rawcp), sizeof ((tif)->tif_rawcp), &((tif)->tif_rawcc), sizeof ((tif)->tif_rawcc), &((tif)->tif_base), sizeof ((tif)->tif_base), &((tif)->tif_size), sizeof ((tif)->tif_size), &((tif)->tif_mapproc), sizeof ((tif)->tif_mapproc), &((tif)->tif_readproc), sizeof ((tif)->tif_readproc), &((tif)->tif_writeproc), sizeof ((tif)->tif_writeproc), &((tif)->tif_seekproc), sizeof ((tif)->tif_seekproc), &((tif)->tif_closeproc), sizeof ((tif)->tif_closeproc), &((tif)->tif_sizeproc), sizeof ((tif)->tif_sizeproc), &((tif)->tif_postdecode), sizeof ((tif)->tif_postdecode), &((tif)->tif_fieldinfo), sizeof ((tif)->tif_fieldinfo), &((tif)->tif_nfields), sizeof ((tif)->tif_nfields), &((tif)->tif_foundfield), sizeof ((tif)->tif_foundfield), &((tif)->tif_clientinfo), sizeof ((tif)->tif_clientinfo), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield), &((tif)->tif_name), sizeof ((tif)->tif_name), &((tif)->tif_fd), sizeof ((tif)->tif_fd), &((tif)->tif_mode), sizeof ((tif)->tif_mode), &((tif)->tif_diroff), sizeof ((tif)->tif_diroff), &((tif)->tif_nextdiroff), sizeof ((tif)->tif_nextdiroff), &((tif)->tif_dirlist), sizeof ((tif)->tif_dirlist), &((tif)->tif_dirlistsize), sizeof ((tif)->tif_dirlistsize), &((tif)->tif_dirnumber), sizeof ((tif)->tif_dirnumber), &((tif)->tif_header_size), sizeof ((tif)->tif_header_size), &((tif)->tif_row), sizeof ((tif)->tif_row), &((tif)->tif_curdir), sizeof ((tif)->tif_curdir), &((tif)->tif_curstrip), sizeof ((tif)->tif_curstrip), &((tif)->tif_curoff), sizeof ((tif)->tif_curoff), &((tif)->tif_dataoff), sizeof ((tif)->tif_dataoff), &((tif)->tif_nsubifd), sizeof ((tif)->tif_nsubifd), &((tif)->tif_subifdoff), sizeof ((tif)->tif_subifdoff), &((tif)->tif_col), sizeof ((tif)->tif_col), &((tif)->tif_curtile), sizeof ((tif)->tif_curtile), &((tif)->tif_tilesize), sizeof ((tif)->tif_tilesize), &((tif)->tif_decodestatus), sizeof ((tif)->tif_decodestatus), &((tif)->tif_fixuptags), sizeof ((tif)->tif_fixuptags), &((tif)->tif_setupdecode), sizeof ((tif)->tif_setupdecode), &((tif)->tif_predecode), sizeof ((tif)->tif_predecode), &((tif)->tif_setupencode), sizeof ((tif)->tif_setupencode), &((tif)->tif_encodestatus), sizeof ((tif)->tif_encodestatus), &((tif)->tif_preencode), sizeof ((tif)->tif_preencode), &((tif)->tif_postencode), sizeof ((tif)->tif_postencode), &((tif)->tif_decoderow), sizeof ((tif)->tif_decoderow), &((tif)->tif_encoderow), sizeof ((tif)->tif_encoderow), &((tif)->tif_decodestrip), sizeof ((tif)->tif_decodestrip), &((tif)->tif_encodestrip), sizeof ((tif)->tif_encodestrip), &((tif)->tif_decodetile), sizeof ((tif)->tif_decodetile), &((tif)->tif_encodetile), sizeof ((tif)->tif_encodetile), &((tif)->tif_close), sizeof ((tif)->tif_close), &((tif)->tif_seek), sizeof ((tif)->tif_seek), &((tif)->tif_cleanup), sizeof ((tif)->tif_cleanup)) && ((((tif)->tif_flags & 2048) != 0)))\n    ((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size));\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9836004969507819, -6.1825520366507822, -4.6927560366507821, -5.8109122366507817, -6.5713483856507828, -5.8109122366507817, -5.462123036650782, -6.1825520366507822, -4.3904734096507818, -6.5987832416507821, -5.4718189366507826, -6.5713483856507828, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.985504136650782, -6.985504136650782, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.985504136650782, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.5313412366507819, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822, -6.1825520366507822]
								}, {
									"case":	2,
									"scores":	[-6.504059038950782, -5.7030105786507823, -4.2132145786507822, -5.3313707786507827, -6.091806927650782, -5.3313707786507827, -4.9825815786507821, -5.7030105786507823, -3.9109319516507837, -6.1192417836507822, -4.9922774786507826, -6.091806927650782, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -6.505962678650782, -6.505962678650782, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.051799778650782, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -5.7030105786507823, -6.505962678650782]
								}]
						}]
				}, {
					"line":	77,
					"switches":	[]
				}, {
					"line":	81,
					"switches":	[]
				}, {
					"line":	82,
					"switches":	[{
							"switch":	21,
							"types":	[[], [], [], [], [241, 242], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], [], [], [], [231, 232, 233, 234, 235, 236, 237, 238, 239, 240], [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], [], [], [], [], [], []],
							"begin_line":	83,
							"begin_column":	2,
							"end_line":	83,
							"end_column":	2,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&fld->field_bit, 0, sizeof (*(&fld->field_bit)))", "memset(&fld->field_name, 0, sizeof (*(&fld->field_name)))", "memset(&fld->field_oktochange, 0, sizeof (*(&fld->field_oktochange)))", "memset(&fld->field_passcount, 0, sizeof (*(&fld->field_passcount)))", "memset(&fld->field_readcount, 0, sizeof (*(&fld->field_readcount)))", "memset(&fld->field_subfields, 0, sizeof (*(&fld->field_subfields)))", "memset(&fld->field_tag, 0, sizeof (*(&fld->field_tag)))", "memset(&fld->field_type, 0, sizeof (*(&fld->field_type)))", "memset(&fld->field_writecount, 0, sizeof (*(&fld->field_writecount)))", "memset(&fld->get_field_type, 0, sizeof (*(&fld->get_field_type)))", "memset(&fld->reserved, 0, sizeof (*(&fld->reserved)))", "memset(&fld->set_field_type, 0, sizeof (*(&fld->set_field_type)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(fld, 0, sizeof (*(fld)))", "memset(fld->field_name, 0, sizeof (*(fld->field_name)))", "memset(fld->field_subfields, 0, sizeof (*(fld->field_subfields)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((fld))", "_TIFFfree((fld)->field_name)", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(fld)", "_TIFFfree(fld->field_name)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L83\", 76, &(fld), sizeof (fld), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_name), sizeof (fld->field_name), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    break;\n", "if (__is_neg(\"\", \"L83\", 76, &(fld), sizeof (fld), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_name), sizeof (fld->field_name), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.952428420063185]
								}, {
									"case":	2,
									"scores":	[-3.952428420063185]
								}, {
									"case":	3,
									"scores":	[-3.952428420063185]
								}, {
									"case":	4,
									"scores":	[-3.952428420063185]
								}, {
									"case":	5,
									"scores":	[-3.952428420063185]
								}, {
									"case":	6,
									"scores":	[-3.952428420063185]
								}, {
									"case":	7,
									"scores":	[-3.952428420063185]
								}, {
									"case":	8,
									"scores":	[-3.952428420063185]
								}, {
									"case":	9,
									"scores":	[-3.952428420063185]
								}, {
									"case":	10,
									"scores":	[-3.952428420063185]
								}, {
									"case":	11,
									"scores":	[-3.952428420063185]
								}, {
									"case":	12,
									"scores":	[-3.952428420063185]
								}, {
									"case":	13,
									"scores":	[-3.952428420063185]
								}, {
									"case":	14,
									"scores":	[-3.952428420063185]
								}, {
									"case":	15,
									"scores":	[-3.952428420063185]
								}, {
									"case":	16,
									"scores":	[-3.952428420063185]
								}, {
									"case":	17,
									"scores":	[-3.952428420063185]
								}, {
									"case":	18,
									"scores":	[-3.952428420063185]
								}, {
									"case":	19,
									"scores":	[-3.952428420063185]
								}, {
									"case":	20,
									"scores":	[-3.952428420063185]
								}, {
									"case":	21,
									"scores":	[-3.952428420063185]
								}, {
									"case":	22,
									"scores":	[-3.952428420063185]
								}, {
									"case":	23,
									"scores":	[-3.952428420063185]
								}, {
									"case":	24,
									"scores":	[-3.952428420063185]
								}, {
									"case":	25,
									"scores":	[-3.952428420063185]
								}, {
									"case":	26,
									"scores":	[-3.952428420063185]
								}, {
									"case":	27,
									"scores":	[-3.952428420063185]
								}, {
									"case":	28,
									"scores":	[-3.952428420063185]
								}, {
									"case":	29,
									"scores":	[-3.952428420063185]
								}, {
									"case":	30,
									"scores":	[-3.952428420063185]
								}, {
									"case":	31,
									"scores":	[-3.952428420063185]
								}, {
									"case":	32,
									"scores":	[-3.952428420063185]
								}, {
									"case":	33,
									"scores":	[-3.952428420063185]
								}, {
									"case":	34,
									"scores":	[-3.952428420063185]
								}, {
									"case":	35,
									"scores":	[-3.952428420063185]
								}, {
									"case":	36,
									"scores":	[-3.952428420063185]
								}, {
									"case":	37,
									"scores":	[-3.952428420063185]
								}, {
									"case":	38,
									"scores":	[-3.952428420063185]
								}, {
									"case":	39,
									"scores":	[-3.952428420063185]
								}, {
									"case":	40,
									"scores":	[-3.952428420063185]
								}, {
									"case":	41,
									"scores":	[-3.952428420063185]
								}, {
									"case":	42,
									"scores":	[-3.952428420063185]
								}, {
									"case":	43,
									"scores":	[-3.952428420063185]
								}, {
									"case":	44,
									"scores":	[-3.952428420063185]
								}, {
									"case":	45,
									"scores":	[-3.952428420063185]
								}, {
									"case":	46,
									"scores":	[-3.952428420063185]
								}, {
									"case":	47,
									"scores":	[-3.952428420063185]
								}, {
									"case":	48,
									"scores":	[-3.952428420063185]
								}, {
									"case":	49,
									"scores":	[-3.952428420063185]
								}, {
									"case":	50,
									"scores":	[-3.952428420063185]
								}, {
									"case":	51,
									"scores":	[-3.952428420063185]
								}, {
									"case":	52,
									"scores":	[-3.952428420063185]
								}, {
									"case":	53,
									"scores":	[-3.952428420063185]
								}, {
									"case":	54,
									"scores":	[-3.952428420063185]
								}, {
									"case":	55,
									"scores":	[-3.952428420063185]
								}, {
									"case":	56,
									"scores":	[-3.952428420063185]
								}, {
									"case":	57,
									"scores":	[-3.952428420063185]
								}, {
									"case":	58,
									"scores":	[-3.952428420063185]
								}, {
									"case":	59,
									"scores":	[-3.952428420063185]
								}, {
									"case":	60,
									"scores":	[-3.952428420063185]
								}, {
									"case":	61,
									"scores":	[-3.952428420063185]
								}, {
									"case":	62,
									"scores":	[-3.952428420063185]
								}, {
									"case":	63,
									"scores":	[-3.952428420063185]
								}, {
									"case":	64,
									"scores":	[-3.952428420063185]
								}, {
									"case":	65,
									"scores":	[-3.952428420063185]
								}, {
									"case":	66,
									"scores":	[-3.952428420063185]
								}, {
									"case":	67,
									"scores":	[-3.952428420063185]
								}, {
									"case":	68,
									"scores":	[-3.952428420063185]
								}, {
									"case":	69,
									"scores":	[-3.952428420063185]
								}, {
									"case":	70,
									"scores":	[-3.952428420063185]
								}, {
									"case":	71,
									"scores":	[-3.952428420063185]
								}, {
									"case":	72,
									"scores":	[-3.952428420063185]
								}, {
									"case":	73,
									"scores":	[-3.952428420063185]
								}, {
									"case":	74,
									"scores":	[-3.952428420063185]
								}, {
									"case":	75,
									"scores":	[-3.952428420063185]
								}, {
									"case":	76,
									"scores":	[-3.952428420063185]
								}, {
									"case":	77,
									"scores":	[-3.952428420063185]
								}, {
									"case":	78,
									"scores":	[-3.952428420063185]
								}, {
									"case":	79,
									"scores":	[-3.952428420063185]
								}, {
									"case":	80,
									"scores":	[-3.952428420063185]
								}, {
									"case":	81,
									"scores":	[-3.952428420063185]
								}, {
									"case":	82,
									"scores":	[-3.952428420063185]
								}, {
									"case":	83,
									"scores":	[-3.952428420063185]
								}, {
									"case":	84,
									"scores":	[-3.952428420063185]
								}, {
									"case":	85,
									"scores":	[-3.952428420063185]
								}, {
									"case":	86,
									"scores":	[-3.952428420063185]
								}, {
									"case":	87,
									"scores":	[-3.952428420063185]
								}, {
									"case":	88,
									"scores":	[-3.952428420063185]
								}, {
									"case":	89,
									"scores":	[-3.952428420063185]
								}, {
									"case":	90,
									"scores":	[-3.952428420063185]
								}, {
									"case":	91,
									"scores":	[-3.952428420063185]
								}, {
									"case":	92,
									"scores":	[-3.952428420063185]
								}, {
									"case":	93,
									"scores":	[-3.952428420063185]
								}, {
									"case":	94,
									"scores":	[-3.952428420063185]
								}, {
									"case":	95,
									"scores":	[-3.952428420063185]
								}, {
									"case":	96,
									"scores":	[-3.952428420063185]
								}, {
									"case":	97,
									"scores":	[-3.952428420063185]
								}, {
									"case":	98,
									"scores":	[-3.952428420063185]
								}, {
									"case":	99,
									"scores":	[-3.952428420063185]
								}, {
									"case":	100,
									"scores":	[-3.952428420063185]
								}, {
									"case":	101,
									"scores":	[-3.952428420063185]
								}, {
									"case":	102,
									"scores":	[-3.952428420063185]
								}, {
									"case":	103,
									"scores":	[-3.952428420063185]
								}, {
									"case":	104,
									"scores":	[-3.952428420063185]
								}, {
									"case":	105,
									"scores":	[-3.952428420063185]
								}, {
									"case":	106,
									"scores":	[-3.952428420063185]
								}, {
									"case":	107,
									"scores":	[-3.952428420063185]
								}, {
									"case":	108,
									"scores":	[-3.952428420063185]
								}, {
									"case":	109,
									"scores":	[-3.952428420063185]
								}, {
									"case":	110,
									"scores":	[-3.952428420063185]
								}, {
									"case":	111,
									"scores":	[-3.952428420063185]
								}, {
									"case":	112,
									"scores":	[-3.952428420063185]
								}, {
									"case":	113,
									"scores":	[-3.952428420063185]
								}, {
									"case":	114,
									"scores":	[-3.952428420063185]
								}, {
									"case":	115,
									"scores":	[-3.952428420063185]
								}, {
									"case":	116,
									"scores":	[-3.952428420063185]
								}, {
									"case":	117,
									"scores":	[-3.952428420063185]
								}, {
									"case":	118,
									"scores":	[-3.952428420063185]
								}, {
									"case":	119,
									"scores":	[-3.952428420063185]
								}, {
									"case":	120,
									"scores":	[-3.952428420063185]
								}, {
									"case":	121,
									"scores":	[-3.952428420063185]
								}, {
									"case":	122,
									"scores":	[-3.952428420063185]
								}, {
									"case":	123,
									"scores":	[-3.952428420063185]
								}, {
									"case":	124,
									"scores":	[-3.952428420063185]
								}, {
									"case":	125,
									"scores":	[-3.952428420063185]
								}, {
									"case":	126,
									"scores":	[-3.952428420063185]
								}, {
									"case":	127,
									"scores":	[-3.952428420063185]
								}, {
									"case":	128,
									"scores":	[-3.952428420063185]
								}, {
									"case":	129,
									"scores":	[-3.952428420063185]
								}, {
									"case":	130,
									"scores":	[-3.952428420063185]
								}, {
									"case":	131,
									"scores":	[-3.952428420063185]
								}, {
									"case":	132,
									"scores":	[-3.952428420063185]
								}, {
									"case":	133,
									"scores":	[-3.952428420063185]
								}, {
									"case":	134,
									"scores":	[-3.952428420063185]
								}, {
									"case":	135,
									"scores":	[-3.952428420063185]
								}, {
									"case":	136,
									"scores":	[-3.952428420063185]
								}, {
									"case":	137,
									"scores":	[-3.952428420063185]
								}, {
									"case":	138,
									"scores":	[-3.952428420063185]
								}, {
									"case":	139,
									"scores":	[-3.952428420063185]
								}, {
									"case":	140,
									"scores":	[-3.952428420063185]
								}, {
									"case":	141,
									"scores":	[-3.952428420063185]
								}, {
									"case":	142,
									"scores":	[-3.952428420063185]
								}, {
									"case":	143,
									"scores":	[-3.952428420063185]
								}, {
									"case":	144,
									"scores":	[-3.952428420063185]
								}, {
									"case":	145,
									"scores":	[-3.952428420063185]
								}, {
									"case":	146,
									"scores":	[-3.952428420063185]
								}, {
									"case":	147,
									"scores":	[-3.952428420063185]
								}, {
									"case":	148,
									"scores":	[-3.952428420063185]
								}, {
									"case":	149,
									"scores":	[-3.952428420063185]
								}, {
									"case":	150,
									"scores":	[-3.952428420063185]
								}, {
									"case":	151,
									"scores":	[-3.952428420063185]
								}, {
									"case":	152,
									"scores":	[-3.952428420063185]
								}, {
									"case":	153,
									"scores":	[-3.952428420063185]
								}, {
									"case":	154,
									"scores":	[-3.952428420063185]
								}, {
									"case":	155,
									"scores":	[-3.952428420063185]
								}, {
									"case":	156,
									"scores":	[-3.952428420063185]
								}, {
									"case":	157,
									"scores":	[-3.952428420063185]
								}, {
									"case":	158,
									"scores":	[-3.952428420063185]
								}, {
									"case":	159,
									"scores":	[-3.952428420063185]
								}, {
									"case":	160,
									"scores":	[-3.952428420063185]
								}, {
									"case":	161,
									"scores":	[-3.952428420063185]
								}, {
									"case":	162,
									"scores":	[-3.952428420063185]
								}, {
									"case":	163,
									"scores":	[-3.952428420063185]
								}, {
									"case":	164,
									"scores":	[-3.952428420063185]
								}, {
									"case":	165,
									"scores":	[-3.952428420063185]
								}, {
									"case":	166,
									"scores":	[-3.952428420063185]
								}, {
									"case":	167,
									"scores":	[-3.952428420063185]
								}, {
									"case":	168,
									"scores":	[-3.952428420063185]
								}, {
									"case":	169,
									"scores":	[-3.952428420063185]
								}, {
									"case":	170,
									"scores":	[-3.952428420063185]
								}, {
									"case":	171,
									"scores":	[-3.952428420063185]
								}, {
									"case":	172,
									"scores":	[-3.952428420063185]
								}, {
									"case":	173,
									"scores":	[-3.952428420063185]
								}, {
									"case":	174,
									"scores":	[-3.952428420063185]
								}, {
									"case":	175,
									"scores":	[-3.952428420063185]
								}, {
									"case":	176,
									"scores":	[-3.952428420063185]
								}, {
									"case":	177,
									"scores":	[-3.952428420063185]
								}, {
									"case":	178,
									"scores":	[-3.952428420063185]
								}, {
									"case":	179,
									"scores":	[-3.952428420063185]
								}, {
									"case":	180,
									"scores":	[-3.952428420063185]
								}, {
									"case":	181,
									"scores":	[-3.952428420063185]
								}, {
									"case":	182,
									"scores":	[-3.952428420063185]
								}, {
									"case":	183,
									"scores":	[-3.952428420063185]
								}, {
									"case":	184,
									"scores":	[-3.952428420063185]
								}, {
									"case":	185,
									"scores":	[-3.952428420063185]
								}, {
									"case":	186,
									"scores":	[-3.952428420063185]
								}, {
									"case":	187,
									"scores":	[-3.952428420063185]
								}, {
									"case":	188,
									"scores":	[-3.952428420063185]
								}, {
									"case":	189,
									"scores":	[-3.952428420063185]
								}, {
									"case":	190,
									"scores":	[-3.952428420063185]
								}, {
									"case":	191,
									"scores":	[-3.952428420063185]
								}, {
									"case":	192,
									"scores":	[-3.952428420063185]
								}, {
									"case":	193,
									"scores":	[-3.952428420063185]
								}, {
									"case":	194,
									"scores":	[-3.952428420063185]
								}, {
									"case":	195,
									"scores":	[-3.952428420063185]
								}, {
									"case":	196,
									"scores":	[-3.952428420063185]
								}, {
									"case":	197,
									"scores":	[-3.952428420063185]
								}, {
									"case":	198,
									"scores":	[-3.952428420063185]
								}, {
									"case":	199,
									"scores":	[-3.952428420063185]
								}, {
									"case":	200,
									"scores":	[-3.952428420063185]
								}, {
									"case":	201,
									"scores":	[-3.952428420063185]
								}, {
									"case":	202,
									"scores":	[-3.952428420063185]
								}, {
									"case":	203,
									"scores":	[-3.952428420063185]
								}, {
									"case":	204,
									"scores":	[-3.952428420063185]
								}, {
									"case":	205,
									"scores":	[-3.952428420063185]
								}, {
									"case":	206,
									"scores":	[-3.952428420063185]
								}, {
									"case":	207,
									"scores":	[-3.952428420063185]
								}, {
									"case":	208,
									"scores":	[-3.952428420063185]
								}, {
									"case":	209,
									"scores":	[-3.952428420063185]
								}, {
									"case":	210,
									"scores":	[-3.952428420063185]
								}, {
									"case":	211,
									"scores":	[-3.952428420063185]
								}, {
									"case":	212,
									"scores":	[-3.952428420063185]
								}, {
									"case":	213,
									"scores":	[-3.952428420063185]
								}, {
									"case":	214,
									"scores":	[-3.952428420063185]
								}, {
									"case":	215,
									"scores":	[-3.952428420063185]
								}, {
									"case":	216,
									"scores":	[-3.952428420063185]
								}, {
									"case":	217,
									"scores":	[-3.952428420063185]
								}, {
									"case":	218,
									"scores":	[-3.952428420063185]
								}, {
									"case":	219,
									"scores":	[-3.952428420063185]
								}, {
									"case":	220,
									"scores":	[-3.952428420063185]
								}, {
									"case":	221,
									"scores":	[-3.952428420063185]
								}, {
									"case":	222,
									"scores":	[-3.952428420063185]
								}, {
									"case":	223,
									"scores":	[-3.952428420063185]
								}, {
									"case":	224,
									"scores":	[-3.952428420063185]
								}, {
									"case":	225,
									"scores":	[-3.952428420063185]
								}, {
									"case":	226,
									"scores":	[-3.952428420063185]
								}, {
									"case":	227,
									"scores":	[-3.952428420063185]
								}, {
									"case":	228,
									"scores":	[-3.952428420063185]
								}, {
									"case":	229,
									"scores":	[-3.952428420063185]
								}, {
									"case":	230,
									"scores":	[-3.952428420063185]
								}, {
									"case":	231,
									"scores":	[-3.952428420063185]
								}, {
									"case":	232,
									"scores":	[-3.952428420063185]
								}, {
									"case":	233,
									"scores":	[-3.952428420063185]
								}, {
									"case":	234,
									"scores":	[-3.952428420063185]
								}, {
									"case":	235,
									"scores":	[-3.952428420063185]
								}, {
									"case":	236,
									"scores":	[-3.952428420063185]
								}, {
									"case":	237,
									"scores":	[-3.952428420063185]
								}, {
									"case":	238,
									"scores":	[-3.952428420063185]
								}, {
									"case":	239,
									"scores":	[-3.952428420063185]
								}, {
									"case":	240,
									"scores":	[-3.952428420063185]
								}, {
									"case":	241,
									"scores":	[-3.3184241543631852, -6.7618108400631849, -7.1070704400631843, -6.1844895860631848, -5.2769055400631846, -7.1667098400631843, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7264357400631845, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7264357400631845, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7264357400631845]
								}, {
									"case":	242,
									"scores":	[-3.3184241543631852, -6.7618108400631849, -7.1070704400631843, -6.1844895860631848, -5.2769055400631846, -7.1667098400631843, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7264357400631845, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7264357400631845, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7705618400631851, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7638601400631853, -6.7264357400631845]
								}]
						}, {
							"switch":	22,
							"types":	[[10], [2, 3], [], [], [], [], [], [], [], [], [], [], [1], [], [], [5, 6, 7, 8, 9], [], [4]],
							"begin_line":	83,
							"begin_column":	4,
							"end_line":	88,
							"end_column":	4,
							"patch_codes":	["if (__is_neg(\"\", \"L83\", 15, &(fld), sizeof (fld), &(fld->field_name), sizeof (fld->field_name), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields))) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (((fld->field_bit == 65) || __is_neg(\"\", \"L83\", 15, &(fld), sizeof (fld), &(fld->field_name), sizeof (fld->field_name), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields))) && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if ((fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) || __is_neg(\"\", \"L83\", 15, &(fld), sizeof (fld), &(fld->field_name), sizeof (fld->field_name), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields))) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65 && fprintf(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65 && printf(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65 && sprintf(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65 && strncasecmp(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n", "if ((fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) && !__is_neg(\"\", \"L83\", 15, &(fld), sizeof (fld), &(fld->field_name), sizeof (fld->field_name), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields))) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.135941282428147, -3.6333190824281463, -1.9690078824281461, -4.7282677784281457, -3.4349361824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.0049588824281459, -4.8079109824281456]
								}, {
									"case":	2,
									"scores":	[-1.8024081434281465, -2.2997859434281462, -0.63547474342814469, -3.3947346394281466, -2.1014030434281477, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -3.4743778434281469]
								}, {
									"case":	3,
									"scores":	[-1.8024081434281465, -2.2997859434281462, -0.63547474342814469, -3.3947346394281466, -2.1014030434281477, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -3.4743778434281469]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-1.8024081434281465, -2.2997859434281462, -0.63547474342814469, -3.3947346394281466, -2.1014030434281477, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -2.6714257434281468, -3.4743778434281469]
								}]
						}, {
							"switch":	23,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	83,
							"begin_column":	4,
							"end_line":	88,
							"end_column":	4,
							"patch_codes":	["if (!__is_neg(\"\", \"L83\", 76, &(fld), sizeof (fld), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_name), sizeof (fld->field_name), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n        _TIFFfree(fld->field_name);\n        _TIFFfree(fld);\n    }\n", "if (!__is_neg(\"\", \"L83\", 76, &(fld), sizeof (fld), &(fld->field_bit), sizeof (fld->field_bit), &(tif), sizeof (tif), &(i), sizeof (i), &(fld->field_name), sizeof (fld->field_name), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(fld->field_tag), sizeof (fld->field_tag), &(fld->field_readcount), sizeof (fld->field_readcount), &(fld->field_writecount), sizeof (fld->field_writecount), &(fld->field_type), sizeof (fld->field_type), &(fld->reserved), sizeof (fld->reserved), &(fld->set_field_type), sizeof (fld->set_field_type), &(fld->get_field_type), sizeof (fld->get_field_type), &(fld->field_oktochange), sizeof (fld->field_oktochange), &(fld->field_passcount), sizeof (fld->field_passcount), &(fld->field_subfields), sizeof (fld->field_subfields), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)) && (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0)) {\n    _TIFFfree(fld->field_name);\n    _TIFFfree(fld);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9343458400631857, -3.7674124400631848, -6.5266723360631849, -5.2333407400631851, -5.4317236400631845, -6.3620242740631845, -5.8033634400631851, -6.1521526400631856, -5.8033634400631851, -6.1521526400631856, -5.8033634400631851, -6.6063155400631857, -6.1521526400631856, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -6.6063155400631857, -6.1521526400631856, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -6.1521526400631856, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -6.1521526400631856, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -6.1521526400631856, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -5.8033634400631851, -6.6063155400631857]
								}, {
									"case":	2,
									"scores":	[-2.7918603180631858, -1.6249269180631858, -4.3841868140631854, -3.0908552180631852, -3.289238118063186, -4.2195387520631851, -3.6608779180631852, -4.0096671180631853, -3.6608779180631852, -4.0096671180631853, -3.6608779180631852, -4.4638300180631854, -4.0096671180631853, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -4.4638300180631854, -4.0096671180631853, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -4.0096671180631853, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -4.0096671180631853, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -4.0096671180631853, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -3.6608779180631852, -4.4638300180631854]
								}]
						}]
				}, {
					"line":	79,
					"switches":	[{
							"switch":	20,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	80,
							"begin_column":	1,
							"end_line":	80,
							"end_column":	1,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L80\", 63, &(tif), sizeof (tif), &(i), sizeof (i), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	2,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	3,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	4,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	5,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	6,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	7,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	8,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	9,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	10,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	11,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	12,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	13,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	14,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	15,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	16,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	17,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	18,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	19,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	20,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	21,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	22,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	23,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	24,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	25,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	26,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	27,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	28,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	29,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	30,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	31,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	32,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	33,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	34,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	35,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	36,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	37,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	38,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	39,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	40,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	41,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	42,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	43,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	44,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	45,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	46,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	47,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	48,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	49,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	50,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	51,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	52,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	53,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	54,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	55,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	56,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	57,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	58,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	59,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	60,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	61,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	62,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	63,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	64,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	65,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	66,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	67,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	68,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	69,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	70,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	71,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	72,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	73,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	74,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	75,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	76,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	77,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	78,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	79,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	80,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	81,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	82,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	83,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	84,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	85,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	86,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	87,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	88,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	89,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	90,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	91,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	92,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	93,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	94,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	95,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	96,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	97,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	98,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	99,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	100,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	101,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	102,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	103,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	104,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	105,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	106,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	107,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	108,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	109,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	110,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	111,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	112,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	113,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	114,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	115,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	116,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	117,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	118,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	119,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	120,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	121,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	122,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	123,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	124,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	125,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	126,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	127,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	128,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	129,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	130,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	131,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	132,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	133,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	134,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	135,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	136,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	137,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	138,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	139,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	140,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	141,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	142,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	143,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	144,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	145,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	146,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	147,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	148,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	149,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	150,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	151,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	152,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	153,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	154,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	155,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	156,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	157,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	158,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	159,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	160,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	161,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	162,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	163,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	164,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	165,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	166,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	167,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	168,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	169,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	170,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	171,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	172,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	173,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	174,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	175,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	176,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	177,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	178,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	179,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	180,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	181,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	182,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	183,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	184,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	185,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	186,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	187,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	188,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	189,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	190,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	191,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	192,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	193,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	194,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	195,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	196,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	197,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	198,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	199,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	200,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	201,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	202,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	203,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	204,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	205,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	206,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	207,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	208,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	209,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	210,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	211,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	212,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	213,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	214,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	215,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	216,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	217,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	218,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	219,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	220,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	221,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	222,
									"scores":	[-3.9928338346982239]
								}, {
									"case":	223,
									"scores":	[-4.5467924949982237, -4.215995574742224, -4.6235633536982235, -4.6391075806982238, -5.870505180698224, -5.8638034806982242, -5.870505180698224, -5.8638034806982242, -5.8263790806982243, -5.870505180698224, -5.8638034806982242, -5.8638034806982242, -5.870505180698224, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.870505180698224, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.870505180698224, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.870505180698224, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8638034806982242, -5.8263790806982243]
								}]
						}, {
							"switch":	24,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	80,
							"begin_column":	3,
							"end_line":	89,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L80\", 63, &(tif), sizeof (tif), &(i), sizeof (i), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    for (i = 0; i < tif->tif_nfields; i++) {\n        TIFFField *fld = tif->tif_fieldinfo[i];\n        if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n            _TIFFfree(fld->field_name);\n            _TIFFfree(fld);\n        }\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.3932586899982233, -4.7978845786982243, -4.6916022746982238, -4.3411267746982238, -5.7535104746982242, -5.4047212746982236, -5.7535104746982242, -5.4047212746982236, -6.2076733746982242, -5.7535104746982242, -5.4047212746982236, -5.4047212746982236, -5.7535104746982242, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.7535104746982242, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.7535104746982242, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.7535104746982242, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -5.4047212746982236, -6.2076733746982242]
								}]
						}]
				}, {
					"line":	90,
					"switches":	[{
							"switch":	25,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	91,
							"begin_column":	1,
							"end_line":	91,
							"end_column":	1,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L91\", 63, &(tif), sizeof (tif), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(i), sizeof (i), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	2,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	3,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	4,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	5,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	6,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	7,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	8,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	9,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	10,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	11,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	12,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	13,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	14,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	15,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	16,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	17,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	18,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	19,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	20,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	21,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	22,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	23,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	24,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	25,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	26,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	27,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	28,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	29,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	30,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	31,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	32,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	33,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	34,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	35,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	36,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	37,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	38,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	39,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	40,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	41,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	42,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	43,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	44,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	45,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	46,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	47,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	48,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	49,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	50,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	51,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	52,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	53,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	54,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	55,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	56,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	57,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	58,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	59,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	60,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	61,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	62,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	63,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	64,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	65,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	66,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	67,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	68,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	69,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	70,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	71,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	72,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	73,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	74,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	75,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	76,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	77,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	78,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	79,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	80,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	81,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	82,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	83,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	84,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	85,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	86,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	87,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	88,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	89,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	90,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	91,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	92,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	93,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	94,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	95,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	96,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	97,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	98,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	99,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	100,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	101,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	102,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	103,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	104,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	105,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	106,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	107,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	108,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	109,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	110,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	111,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	112,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	113,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	114,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	115,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	116,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	117,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	118,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	119,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	120,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	121,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	122,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	123,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	124,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	125,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	126,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	127,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	128,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	129,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	130,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	131,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	132,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	133,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	134,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	135,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	136,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	137,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	138,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	139,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	140,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	141,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	142,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	143,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	144,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	145,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	146,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	147,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	148,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	149,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	150,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	151,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	152,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	153,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	154,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	155,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	156,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	157,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	158,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	159,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	160,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	161,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	162,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	163,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	164,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	165,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	166,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	167,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	168,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	169,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	170,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	171,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	172,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	173,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	174,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	175,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	176,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	177,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	178,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	179,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	180,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	181,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	182,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	183,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	184,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	185,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	186,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	187,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	188,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	189,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	190,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	191,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	192,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	193,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	194,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	195,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	196,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	197,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	198,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	199,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	200,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	201,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	202,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	203,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	204,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	205,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	206,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	207,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	208,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	209,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	210,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	211,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	212,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	213,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	214,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	215,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	216,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	217,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	218,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	219,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	220,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	221,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	222,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	223,
									"scores":	[-5.4396490470456662, -4.8461066327456654, -4.1572435007456656, -6.1066086327456652, -5.9436149327456649, -5.9369132327456651, -5.9436149327456649, -5.9369132327456651, -5.8994888327456652, -5.9436149327456649, -5.9369132327456651, -5.9369132327456651, -5.9436149327456649, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9436149327456649, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9436149327456649, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9436149327456649, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.9369132327456651, -5.8994888327456652]
								}]
						}, {
							"switch":	26,
							"types":	[[], [], [1], [], [], [], [20, 21, 22], [], [19], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [18]],
							"begin_line":	91,
							"begin_column":	3,
							"end_line":	91,
							"end_column":	31,
							"patch_codes":	["if (!__is_neg(\"\", \"L91\", 63, &(tif), sizeof (tif), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(i), sizeof (i), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif->tif_fieldinfo);\n", "_TIFFrealloc(tif->tif_fieldinfo, 0)", "_TIFFrealloc(tif->tif_fieldinfo, 2048)", "_TIFFrealloc(tif->tif_fieldinfo, 4)", "_TIFFrealloc(tif->tif_fieldinfo, 512)", "_TIFFrealloc(tif->tif_fieldinfo, 65)", "bzero(tif->tif_fieldinfo, 0)", "bzero(tif->tif_fieldinfo, 2048)", "bzero(tif->tif_fieldinfo, 4)", "bzero(tif->tif_fieldinfo, 512)", "bzero(tif->tif_fieldinfo, 65)", "explicit_bzero(tif->tif_fieldinfo, 0)", "explicit_bzero(tif->tif_fieldinfo, 2048)", "explicit_bzero(tif->tif_fieldinfo, 4)", "explicit_bzero(tif->tif_fieldinfo, 512)", "explicit_bzero(tif->tif_fieldinfo, 65)", "insque(tif->tif_fieldinfo, 0)", "{\n}\n", "remque(tif->tif_fieldinfo)", "_TIFFfree((&i)->tif_fieldinfo)", "_TIFFfree((&tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_fieldinfo)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1701577887456658, -4.7130657267456648, -4.707514124745666, -4.6646328927456651, -5.2236230927456653, -4.8748338927456656, -5.2236230927456653, -4.8748338927456656, -5.6777859927456653, -5.2236230927456653, -4.8748338927456656, -4.8748338927456656, -5.2236230927456653, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -5.2236230927456653, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -5.2236230927456653, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -5.2236230927456653, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -4.8748338927456656, -5.6777859927456653]
								}, {
									"case":	2,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	3,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	4,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	5,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	6,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	7,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	8,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	9,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	10,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	11,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	12,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	13,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	14,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	15,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	16,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	17,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	18,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	19,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	20,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	21,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	22,
									"scores":	[-3.9322257127456655]
								}]
						}]
				}, {
					"line":	75,
					"switches":	[{
							"switch":	18,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	76,
							"begin_column":	0,
							"end_line":	76,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L76\", 62, &(tif), sizeof (tif), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	2,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	3,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	4,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	5,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	6,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	7,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	8,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	9,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	10,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	11,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	12,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	13,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	14,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	15,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	16,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	17,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	18,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	19,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	20,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	21,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	22,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	23,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	24,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	25,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	26,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	27,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	28,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	29,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	30,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	31,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	32,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	33,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	34,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	35,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	36,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	37,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	38,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	39,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	40,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	41,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	42,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	43,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	44,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	45,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	46,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	47,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	48,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	49,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	50,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	51,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	52,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	53,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	54,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	55,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	56,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	57,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	58,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	59,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	60,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	61,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	62,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	63,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	64,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	65,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	66,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	67,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	68,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	69,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	70,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	71,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	72,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	73,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	74,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	75,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	76,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	77,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	78,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	79,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	80,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	81,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	82,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	83,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	84,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	85,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	86,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	87,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	88,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	89,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	90,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	91,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	92,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	93,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	94,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	95,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	96,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	97,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	98,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	99,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	100,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	101,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	102,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	103,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	104,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	105,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	106,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	107,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	108,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	109,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	110,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	111,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	112,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	113,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	114,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	115,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	116,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	117,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	118,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	119,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	120,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	121,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	122,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	123,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	124,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	125,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	126,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	127,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	128,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	129,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	130,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	131,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	132,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	133,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	134,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	135,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	136,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	137,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	138,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	139,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	140,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	141,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	142,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	143,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	144,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	145,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	146,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	147,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	148,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	149,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	150,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	151,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	152,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	153,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	154,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	155,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	156,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	157,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	158,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	159,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	160,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	161,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	162,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	163,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	164,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	165,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	166,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	167,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	168,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	169,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	170,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	171,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	172,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	173,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	174,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	175,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	176,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	177,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	178,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	179,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	180,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	181,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	182,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	183,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	184,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	185,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	186,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	187,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	188,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	189,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	190,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	191,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	192,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	193,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	194,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	195,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	196,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	197,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	198,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	199,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	200,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	201,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	202,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	203,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	204,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	205,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	206,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	207,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	208,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	209,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	210,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	211,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	212,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	213,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	214,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	215,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	216,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	217,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	218,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	219,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	220,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	221,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	222,
									"scores":	[-4.0332392493332625]
								}, {
									"case":	223,
									"scores":	[-5.4775512096332619, -5.311370038333262, -7.2669231953332627, -7.2602214953332629, -7.2669231953332627, -6.8361458953332619, -4.2506116953332631, -4.7791250953332627, -6.8428475953332626, -6.8361458953332619, -6.8361458953332619, -6.8428475953332626, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8428475953332626, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8428475953332626, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8428475953332626, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.8361458953332619, -6.798721495333262]
								}]
						}, {
							"switch":	19,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	76,
							"begin_column":	2,
							"end_line":	92,
							"end_column":	2,
							"patch_codes":	["if (__is_neg(\"\", \"L76\", 62, &(tif), sizeof (tif), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield))) {\n    uint32 i;\n    for (i = 0; i < tif->tif_nfields; i++) {\n        TIFFField *fld = tif->tif_fieldinfo[i];\n        if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n            _TIFFfree(fld->field_name);\n            _TIFFfree(fld);\n        }\n    }\n    _TIFFfree(tif->tif_fieldinfo);\n}\n", "if ((tif->tif_nfields > 0) || __is_neg(\"\", \"L76\", 62, &(tif), sizeof (tif), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield))) {\n    uint32 i;\n    for (i = 0; i < tif->tif_nfields; i++) {\n        TIFFField *fld = tif->tif_fieldinfo[i];\n        if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n            _TIFFfree(fld->field_name);\n            _TIFFfree(fld);\n        }\n    }\n    _TIFFfree(tif->tif_fieldinfo);\n}\n", "if ((tif->tif_nfields > 0) && !__is_neg(\"\", \"L76\", 62, &(tif), sizeof (tif), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield))) {\n    uint32 i;\n    for (i = 0; i < tif->tif_nfields; i++) {\n        TIFFField *fld = tif->tif_fieldinfo[i];\n        if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n            _TIFFfree(fld->field_name);\n            _TIFFfree(fld);\n        }\n    }\n    _TIFFfree(tif->tif_fieldinfo);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1512918835281454, -2.3133025385281458, -4.7999998875281467, -4.4512106875281461, -4.7999998875281467, -4.411203538528147, -3.2741167385281473, -4.8274347435281486, -4.7599927385281475, -4.411203538528147, -4.411203538528147, -4.7599927385281475, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.7599927385281475, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.7599927385281475, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.7599927385281475, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -4.411203538528147, -5.2141556385281476]
								}, {
									"case":	2,
									"scores":	[-6.6867531534281461, -3.848763808428147, -6.3354611574281456, -5.986671957428146, -6.3354611574281456, -5.9466648084281459, -4.8095780084281463, -6.3628960134281458, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.7496169084281465]
								}, {
									"case":	3,
									"scores":	[-6.6867531534281461, -3.848763808428147, -6.3354611574281456, -5.986671957428146, -6.3354611574281456, -5.9466648084281459, -4.8095780084281463, -6.3628960134281458, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.2954540084281465, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -5.9466648084281459, -6.7496169084281465]
								}]
						}, {
							"switch":	27,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	76,
							"begin_column":	2,
							"end_line":	92,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L76\", 62, &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif), sizeof (tif), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc)))\n    if (tif->tif_nfields > 0) {\n        uint32 i;\n        for (i = 0; i < tif->tif_nfields; i++) {\n            TIFFField *fld = tif->tif_fieldinfo[i];\n            if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n                _TIFFfree(fld->field_name);\n                _TIFFfree(fld);\n            }\n        }\n        _TIFFfree(tif->tif_fieldinfo);\n    }\n", "if (!__is_neg(\"\", \"L76\", 62, &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif), sizeof (tif), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc)) && (tif->tif_nfields > 0)) {\n    uint32 i;\n    for (i = 0; i < tif->tif_nfields; i++) {\n        TIFFField *fld = tif->tif_fieldinfo[i];\n        if (fld->field_bit == 65 && strncmp(\"Tag \", fld->field_name, 4) == 0) {\n            _TIFFfree(fld->field_name);\n            _TIFFfree(fld);\n        }\n    }\n    _TIFFfree(tif->tif_fieldinfo);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.5817070893332623, -6.4196964343332628, -6.0684044383332623, -5.7196152383332626, -6.0684044383332623, -4.542521289333262, -5.6796080893332626, -6.0958392943332624, -6.0283972893332631, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -6.4825601893332632, -6.0283972893332631, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -6.0283972893332631, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -6.0283972893332631, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -6.0283972893332631, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626, -5.6796080893332626]
								}, {
									"case":	2,
									"scores":	[-7.0138614173332634, -4.175872072333263, -6.6625694213332629, -6.3137802213332623, -6.6625694213332629, -6.2737730723332632, -5.1366862723332627, -6.6900042773332622, -6.6225622723332629, -6.2737730723332632, -6.2737730723332632, -6.6225622723332629, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.6225622723332629, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.6225622723332629, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.6225622723332629, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -6.2737730723332632, -7.0767251723332629]
								}]
						}]
				}, {
					"line":	93,
					"switches":	[{
							"switch":	28,
							"types":	[[], [], [], [], [223], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [], [], [], [215, 216, 217, 218, 219, 220, 221, 222], [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], [], [], [], [], [], []],
							"begin_line":	94,
							"begin_column":	0,
							"end_line":	94,
							"end_column":	0,
							"patch_codes":	["memset(&(tif)->tif_base, 0, sizeof (*(&(tif)->tif_base)))", "memset(&(tif)->tif_cleanup, 0, sizeof (*(&(tif)->tif_cleanup)))", "memset(&(tif)->tif_clientdata, 0, sizeof (*(&(tif)->tif_clientdata)))", "memset(&(tif)->tif_clientinfo, 0, sizeof (*(&(tif)->tif_clientinfo)))", "memset(&(tif)->tif_close, 0, sizeof (*(&(tif)->tif_close)))", "memset(&(tif)->tif_closeproc, 0, sizeof (*(&(tif)->tif_closeproc)))", "memset(&(tif)->tif_col, 0, sizeof (*(&(tif)->tif_col)))", "memset(&(tif)->tif_curdir, 0, sizeof (*(&(tif)->tif_curdir)))", "memset(&(tif)->tif_curoff, 0, sizeof (*(&(tif)->tif_curoff)))", "memset(&(tif)->tif_curstrip, 0, sizeof (*(&(tif)->tif_curstrip)))", "memset(&(tif)->tif_curtile, 0, sizeof (*(&(tif)->tif_curtile)))", "memset(&(tif)->tif_customdir, 0, sizeof (*(&(tif)->tif_customdir)))", "memset(&(tif)->tif_data, 0, sizeof (*(&(tif)->tif_data)))", "memset(&(tif)->tif_dataoff, 0, sizeof (*(&(tif)->tif_dataoff)))", "memset(&(tif)->tif_decoderow, 0, sizeof (*(&(tif)->tif_decoderow)))", "memset(&(tif)->tif_decodestatus, 0, sizeof (*(&(tif)->tif_decodestatus)))", "memset(&(tif)->tif_decodestrip, 0, sizeof (*(&(tif)->tif_decodestrip)))", "memset(&(tif)->tif_decodetile, 0, sizeof (*(&(tif)->tif_decodetile)))", "memset(&(tif)->tif_defstripsize, 0, sizeof (*(&(tif)->tif_defstripsize)))", "memset(&(tif)->tif_deftilesize, 0, sizeof (*(&(tif)->tif_deftilesize)))", "memset(&(tif)->tif_dir, 0, sizeof (*(&(tif)->tif_dir)))", "memset(&(tif)->tif_dirlist, 0, sizeof (*(&(tif)->tif_dirlist)))", "memset(&(tif)->tif_dirlistsize, 0, sizeof (*(&(tif)->tif_dirlistsize)))", "memset(&(tif)->tif_dirnumber, 0, sizeof (*(&(tif)->tif_dirnumber)))", "memset(&(tif)->tif_diroff, 0, sizeof (*(&(tif)->tif_diroff)))", "memset(&(tif)->tif_encoderow, 0, sizeof (*(&(tif)->tif_encoderow)))", "memset(&(tif)->tif_encodestatus, 0, sizeof (*(&(tif)->tif_encodestatus)))", "memset(&(tif)->tif_encodestrip, 0, sizeof (*(&(tif)->tif_encodestrip)))", "memset(&(tif)->tif_encodetile, 0, sizeof (*(&(tif)->tif_encodetile)))", "memset(&(tif)->tif_fd, 0, sizeof (*(&(tif)->tif_fd)))", "memset(&(tif)->tif_fieldinfo, 0, sizeof (*(&(tif)->tif_fieldinfo)))", "memset(&(tif)->tif_fixuptags, 0, sizeof (*(&(tif)->tif_fixuptags)))", "memset(&(tif)->tif_flags, 0, sizeof (*(&(tif)->tif_flags)))", "memset(&(tif)->tif_foundfield, 0, sizeof (*(&(tif)->tif_foundfield)))", "memset(&(tif)->tif_header, 0, sizeof (*(&(tif)->tif_header)))", "memset(&(tif)->tif_header_size, 0, sizeof (*(&(tif)->tif_header_size)))", "memset(&(tif)->tif_mapproc, 0, sizeof (*(&(tif)->tif_mapproc)))", "memset(&(tif)->tif_mode, 0, sizeof (*(&(tif)->tif_mode)))", "memset(&(tif)->tif_name, 0, sizeof (*(&(tif)->tif_name)))", "memset(&(tif)->tif_nextdiroff, 0, sizeof (*(&(tif)->tif_nextdiroff)))", "memset(&(tif)->tif_nfields, 0, sizeof (*(&(tif)->tif_nfields)))", "memset(&(tif)->tif_nsubifd, 0, sizeof (*(&(tif)->tif_nsubifd)))", "memset(&(tif)->tif_postdecode, 0, sizeof (*(&(tif)->tif_postdecode)))", "memset(&(tif)->tif_postencode, 0, sizeof (*(&(tif)->tif_postencode)))", "memset(&(tif)->tif_predecode, 0, sizeof (*(&(tif)->tif_predecode)))", "memset(&(tif)->tif_preencode, 0, sizeof (*(&(tif)->tif_preencode)))", "memset(&(tif)->tif_rawcc, 0, sizeof (*(&(tif)->tif_rawcc)))", "memset(&(tif)->tif_rawcp, 0, sizeof (*(&(tif)->tif_rawcp)))", "memset(&(tif)->tif_rawdata, 0, sizeof (*(&(tif)->tif_rawdata)))", "memset(&(tif)->tif_rawdatasize, 0, sizeof (*(&(tif)->tif_rawdatasize)))", "memset(&(tif)->tif_readproc, 0, sizeof (*(&(tif)->tif_readproc)))", "memset(&(tif)->tif_row, 0, sizeof (*(&(tif)->tif_row)))", "memset(&(tif)->tif_scanlinesize, 0, sizeof (*(&(tif)->tif_scanlinesize)))", "memset(&(tif)->tif_scanlineskew, 0, sizeof (*(&(tif)->tif_scanlineskew)))", "memset(&(tif)->tif_seek, 0, sizeof (*(&(tif)->tif_seek)))", "memset(&(tif)->tif_seekproc, 0, sizeof (*(&(tif)->tif_seekproc)))", "memset(&(tif)->tif_setupdecode, 0, sizeof (*(&(tif)->tif_setupdecode)))", "memset(&(tif)->tif_setupencode, 0, sizeof (*(&(tif)->tif_setupencode)))", "memset(&(tif)->tif_size, 0, sizeof (*(&(tif)->tif_size)))", "memset(&(tif)->tif_sizeproc, 0, sizeof (*(&(tif)->tif_sizeproc)))", "memset(&(tif)->tif_subifdoff, 0, sizeof (*(&(tif)->tif_subifdoff)))", "memset(&(tif)->tif_tagmethods, 0, sizeof (*(&(tif)->tif_tagmethods)))", "memset(&(tif)->tif_tilesize, 0, sizeof (*(&(tif)->tif_tilesize)))", "memset(&(tif)->tif_unmapproc, 0, sizeof (*(&(tif)->tif_unmapproc)))", "memset(&(tif)->tif_writeproc, 0, sizeof (*(&(tif)->tif_writeproc)))", "memset(&tif->tif_base, 0, sizeof (*(&tif->tif_base)))", "memset(&tif->tif_cleanup, 0, sizeof (*(&tif->tif_cleanup)))", "memset(&tif->tif_clientdata, 0, sizeof (*(&tif->tif_clientdata)))", "memset(&tif->tif_clientinfo, 0, sizeof (*(&tif->tif_clientinfo)))", "memset(&tif->tif_close, 0, sizeof (*(&tif->tif_close)))", "memset(&tif->tif_closeproc, 0, sizeof (*(&tif->tif_closeproc)))", "memset(&tif->tif_col, 0, sizeof (*(&tif->tif_col)))", "memset(&tif->tif_curdir, 0, sizeof (*(&tif->tif_curdir)))", "memset(&tif->tif_curoff, 0, sizeof (*(&tif->tif_curoff)))", "memset(&tif->tif_curstrip, 0, sizeof (*(&tif->tif_curstrip)))", "memset(&tif->tif_curtile, 0, sizeof (*(&tif->tif_curtile)))", "memset(&tif->tif_customdir, 0, sizeof (*(&tif->tif_customdir)))", "memset(&tif->tif_data, 0, sizeof (*(&tif->tif_data)))", "memset(&tif->tif_dataoff, 0, sizeof (*(&tif->tif_dataoff)))", "memset(&tif->tif_decoderow, 0, sizeof (*(&tif->tif_decoderow)))", "memset(&tif->tif_decodestatus, 0, sizeof (*(&tif->tif_decodestatus)))", "memset(&tif->tif_decodestrip, 0, sizeof (*(&tif->tif_decodestrip)))", "memset(&tif->tif_decodetile, 0, sizeof (*(&tif->tif_decodetile)))", "memset(&tif->tif_defstripsize, 0, sizeof (*(&tif->tif_defstripsize)))", "memset(&tif->tif_deftilesize, 0, sizeof (*(&tif->tif_deftilesize)))", "memset(&tif->tif_dir, 0, sizeof (*(&tif->tif_dir)))", "memset(&tif->tif_dirlist, 0, sizeof (*(&tif->tif_dirlist)))", "memset(&tif->tif_dirlistsize, 0, sizeof (*(&tif->tif_dirlistsize)))", "memset(&tif->tif_dirnumber, 0, sizeof (*(&tif->tif_dirnumber)))", "memset(&tif->tif_diroff, 0, sizeof (*(&tif->tif_diroff)))", "memset(&tif->tif_encoderow, 0, sizeof (*(&tif->tif_encoderow)))", "memset(&tif->tif_encodestatus, 0, sizeof (*(&tif->tif_encodestatus)))", "memset(&tif->tif_encodestrip, 0, sizeof (*(&tif->tif_encodestrip)))", "memset(&tif->tif_encodetile, 0, sizeof (*(&tif->tif_encodetile)))", "memset(&tif->tif_fd, 0, sizeof (*(&tif->tif_fd)))", "memset(&tif->tif_fieldinfo, 0, sizeof (*(&tif->tif_fieldinfo)))", "memset(&tif->tif_fixuptags, 0, sizeof (*(&tif->tif_fixuptags)))", "memset(&tif->tif_flags, 0, sizeof (*(&tif->tif_flags)))", "memset(&tif->tif_foundfield, 0, sizeof (*(&tif->tif_foundfield)))", "memset(&tif->tif_header, 0, sizeof (*(&tif->tif_header)))", "memset(&tif->tif_header_size, 0, sizeof (*(&tif->tif_header_size)))", "memset(&tif->tif_mapproc, 0, sizeof (*(&tif->tif_mapproc)))", "memset(&tif->tif_mode, 0, sizeof (*(&tif->tif_mode)))", "memset(&tif->tif_name, 0, sizeof (*(&tif->tif_name)))", "memset(&tif->tif_nextdiroff, 0, sizeof (*(&tif->tif_nextdiroff)))", "memset(&tif->tif_nfields, 0, sizeof (*(&tif->tif_nfields)))", "memset(&tif->tif_nsubifd, 0, sizeof (*(&tif->tif_nsubifd)))", "memset(&tif->tif_postdecode, 0, sizeof (*(&tif->tif_postdecode)))", "memset(&tif->tif_postencode, 0, sizeof (*(&tif->tif_postencode)))", "memset(&tif->tif_predecode, 0, sizeof (*(&tif->tif_predecode)))", "memset(&tif->tif_preencode, 0, sizeof (*(&tif->tif_preencode)))", "memset(&tif->tif_rawcc, 0, sizeof (*(&tif->tif_rawcc)))", "memset(&tif->tif_rawcp, 0, sizeof (*(&tif->tif_rawcp)))", "memset(&tif->tif_rawdata, 0, sizeof (*(&tif->tif_rawdata)))", "memset(&tif->tif_rawdatasize, 0, sizeof (*(&tif->tif_rawdatasize)))", "memset(&tif->tif_readproc, 0, sizeof (*(&tif->tif_readproc)))", "memset(&tif->tif_row, 0, sizeof (*(&tif->tif_row)))", "memset(&tif->tif_scanlinesize, 0, sizeof (*(&tif->tif_scanlinesize)))", "memset(&tif->tif_scanlineskew, 0, sizeof (*(&tif->tif_scanlineskew)))", "memset(&tif->tif_seek, 0, sizeof (*(&tif->tif_seek)))", "memset(&tif->tif_seekproc, 0, sizeof (*(&tif->tif_seekproc)))", "memset(&tif->tif_setupdecode, 0, sizeof (*(&tif->tif_setupdecode)))", "memset(&tif->tif_setupencode, 0, sizeof (*(&tif->tif_setupencode)))", "memset(&tif->tif_size, 0, sizeof (*(&tif->tif_size)))", "memset(&tif->tif_sizeproc, 0, sizeof (*(&tif->tif_sizeproc)))", "memset(&tif->tif_subifdoff, 0, sizeof (*(&tif->tif_subifdoff)))", "memset(&tif->tif_tagmethods, 0, sizeof (*(&tif->tif_tagmethods)))", "memset(&tif->tif_tilesize, 0, sizeof (*(&tif->tif_tilesize)))", "memset(&tif->tif_unmapproc, 0, sizeof (*(&tif->tif_unmapproc)))", "memset(&tif->tif_writeproc, 0, sizeof (*(&tif->tif_writeproc)))", "memset((tif)->tif_base, 0, sizeof (*((tif)->tif_base)))", "memset((tif)->tif_cleanup, 0, sizeof (*((tif)->tif_cleanup)))", "memset((tif)->tif_clientdata, 0, sizeof (*((tif)->tif_clientdata)))", "memset((tif)->tif_clientinfo, 0, sizeof (*((tif)->tif_clientinfo)))", "memset((tif)->tif_close, 0, sizeof (*((tif)->tif_close)))", "memset((tif)->tif_closeproc, 0, sizeof (*((tif)->tif_closeproc)))", "memset((tif)->tif_data, 0, sizeof (*((tif)->tif_data)))", "memset((tif)->tif_decoderow, 0, sizeof (*((tif)->tif_decoderow)))", "memset((tif)->tif_decodestrip, 0, sizeof (*((tif)->tif_decodestrip)))", "memset((tif)->tif_decodetile, 0, sizeof (*((tif)->tif_decodetile)))", "memset((tif)->tif_defstripsize, 0, sizeof (*((tif)->tif_defstripsize)))", "memset((tif)->tif_deftilesize, 0, sizeof (*((tif)->tif_deftilesize)))", "memset((tif)->tif_dirlist, 0, sizeof (*((tif)->tif_dirlist)))", "memset((tif)->tif_encoderow, 0, sizeof (*((tif)->tif_encoderow)))", "memset((tif)->tif_encodestrip, 0, sizeof (*((tif)->tif_encodestrip)))", "memset((tif)->tif_encodetile, 0, sizeof (*((tif)->tif_encodetile)))", "memset((tif)->tif_fieldinfo, 0, sizeof (*((tif)->tif_fieldinfo)))", "memset((tif)->tif_fixuptags, 0, sizeof (*((tif)->tif_fixuptags)))", "memset((tif)->tif_foundfield, 0, sizeof (*((tif)->tif_foundfield)))", "memset((tif)->tif_mapproc, 0, sizeof (*((tif)->tif_mapproc)))", "memset((tif)->tif_name, 0, sizeof (*((tif)->tif_name)))", "memset((tif)->tif_postdecode, 0, sizeof (*((tif)->tif_postdecode)))", "memset((tif)->tif_postencode, 0, sizeof (*((tif)->tif_postencode)))", "memset((tif)->tif_predecode, 0, sizeof (*((tif)->tif_predecode)))", "memset((tif)->tif_preencode, 0, sizeof (*((tif)->tif_preencode)))", "memset((tif)->tif_rawcp, 0, sizeof (*((tif)->tif_rawcp)))", "memset((tif)->tif_rawdata, 0, sizeof (*((tif)->tif_rawdata)))", "memset((tif)->tif_readproc, 0, sizeof (*((tif)->tif_readproc)))", "memset((tif)->tif_seek, 0, sizeof (*((tif)->tif_seek)))", "memset((tif)->tif_seekproc, 0, sizeof (*((tif)->tif_seekproc)))", "memset((tif)->tif_setupdecode, 0, sizeof (*((tif)->tif_setupdecode)))", "memset((tif)->tif_setupencode, 0, sizeof (*((tif)->tif_setupencode)))", "memset((tif)->tif_sizeproc, 0, sizeof (*((tif)->tif_sizeproc)))", "memset((tif)->tif_unmapproc, 0, sizeof (*((tif)->tif_unmapproc)))", "memset((tif)->tif_writeproc, 0, sizeof (*((tif)->tif_writeproc)))", "memset(tif, 0, sizeof (*(tif)))", "memset(tif->tif_base, 0, sizeof (*(tif->tif_base)))", "memset(tif->tif_cleanup, 0, sizeof (*(tif->tif_cleanup)))", "memset(tif->tif_clientdata, 0, sizeof (*(tif->tif_clientdata)))", "memset(tif->tif_clientinfo, 0, sizeof (*(tif->tif_clientinfo)))", "memset(tif->tif_close, 0, sizeof (*(tif->tif_close)))", "memset(tif->tif_closeproc, 0, sizeof (*(tif->tif_closeproc)))", "memset(tif->tif_data, 0, sizeof (*(tif->tif_data)))", "memset(tif->tif_decoderow, 0, sizeof (*(tif->tif_decoderow)))", "memset(tif->tif_decodestrip, 0, sizeof (*(tif->tif_decodestrip)))", "memset(tif->tif_decodetile, 0, sizeof (*(tif->tif_decodetile)))", "memset(tif->tif_defstripsize, 0, sizeof (*(tif->tif_defstripsize)))", "memset(tif->tif_deftilesize, 0, sizeof (*(tif->tif_deftilesize)))", "memset(tif->tif_dirlist, 0, sizeof (*(tif->tif_dirlist)))", "memset(tif->tif_encoderow, 0, sizeof (*(tif->tif_encoderow)))", "memset(tif->tif_encodestrip, 0, sizeof (*(tif->tif_encodestrip)))", "memset(tif->tif_encodetile, 0, sizeof (*(tif->tif_encodetile)))", "memset(tif->tif_fieldinfo, 0, sizeof (*(tif->tif_fieldinfo)))", "memset(tif->tif_fixuptags, 0, sizeof (*(tif->tif_fixuptags)))", "memset(tif->tif_foundfield, 0, sizeof (*(tif->tif_foundfield)))", "memset(tif->tif_mapproc, 0, sizeof (*(tif->tif_mapproc)))", "memset(tif->tif_name, 0, sizeof (*(tif->tif_name)))", "memset(tif->tif_postdecode, 0, sizeof (*(tif->tif_postdecode)))", "memset(tif->tif_postencode, 0, sizeof (*(tif->tif_postencode)))", "memset(tif->tif_predecode, 0, sizeof (*(tif->tif_predecode)))", "memset(tif->tif_preencode, 0, sizeof (*(tif->tif_preencode)))", "memset(tif->tif_rawcp, 0, sizeof (*(tif->tif_rawcp)))", "memset(tif->tif_rawdata, 0, sizeof (*(tif->tif_rawdata)))", "memset(tif->tif_readproc, 0, sizeof (*(tif->tif_readproc)))", "memset(tif->tif_seek, 0, sizeof (*(tif->tif_seek)))", "memset(tif->tif_seekproc, 0, sizeof (*(tif->tif_seekproc)))", "memset(tif->tif_setupdecode, 0, sizeof (*(tif->tif_setupdecode)))", "memset(tif->tif_setupencode, 0, sizeof (*(tif->tif_setupencode)))", "memset(tif->tif_sizeproc, 0, sizeof (*(tif->tif_sizeproc)))", "memset(tif->tif_unmapproc, 0, sizeof (*(tif->tif_unmapproc)))", "memset(tif->tif_writeproc, 0, sizeof (*(tif->tif_writeproc)))", "((*((tif))->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)(((tif))->tif_clientdata, tif->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, (tif)->tif_base, tif->tif_size))", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, (tif)->tif_size))", "(*(tif)->tif_cleanup)(tif)", "(*tif->tif_cleanup)((tif))", "TIFFCleanup((tif))", "TIFFFlush((tif))", "TIFFFreeDirectory((tif))", "_TIFFfree((tif))", "_TIFFfree((tif)->tif_dirlist)", "_TIFFfree((tif)->tif_fieldinfo)", "_TIFFfree((tif)->tif_rawdata)", "((*(tif)->tif_unmapproc)((tif)->tif_clientdata, tif->tif_base, tif->tif_size))", "(*tif->tif_cleanup)(tif)", "TIFFFlush(tif)", "TIFFFreeDirectory(tif)", "_TIFFfree(tif)", "_TIFFfree(tif->tif_dirlist)", "_TIFFfree(tif->tif_fieldinfo)", "_TIFFfree(tif->tif_rawdata)", "if (__is_neg(\"\", \"L94\", 62, &(tif), sizeof (tif), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.912023005428146]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}, {
									"case":	22,
									"scores":	[-3.912023005428146]
								}, {
									"case":	23,
									"scores":	[-3.912023005428146]
								}, {
									"case":	24,
									"scores":	[-3.912023005428146]
								}, {
									"case":	25,
									"scores":	[-3.912023005428146]
								}, {
									"case":	26,
									"scores":	[-3.912023005428146]
								}, {
									"case":	27,
									"scores":	[-3.912023005428146]
								}, {
									"case":	28,
									"scores":	[-3.912023005428146]
								}, {
									"case":	29,
									"scores":	[-3.912023005428146]
								}, {
									"case":	30,
									"scores":	[-3.912023005428146]
								}, {
									"case":	31,
									"scores":	[-3.912023005428146]
								}, {
									"case":	32,
									"scores":	[-3.912023005428146]
								}, {
									"case":	33,
									"scores":	[-3.912023005428146]
								}, {
									"case":	34,
									"scores":	[-3.912023005428146]
								}, {
									"case":	35,
									"scores":	[-3.912023005428146]
								}, {
									"case":	36,
									"scores":	[-3.912023005428146]
								}, {
									"case":	37,
									"scores":	[-3.912023005428146]
								}, {
									"case":	38,
									"scores":	[-3.912023005428146]
								}, {
									"case":	39,
									"scores":	[-3.912023005428146]
								}, {
									"case":	40,
									"scores":	[-3.912023005428146]
								}, {
									"case":	41,
									"scores":	[-3.912023005428146]
								}, {
									"case":	42,
									"scores":	[-3.912023005428146]
								}, {
									"case":	43,
									"scores":	[-3.912023005428146]
								}, {
									"case":	44,
									"scores":	[-3.912023005428146]
								}, {
									"case":	45,
									"scores":	[-3.912023005428146]
								}, {
									"case":	46,
									"scores":	[-3.912023005428146]
								}, {
									"case":	47,
									"scores":	[-3.912023005428146]
								}, {
									"case":	48,
									"scores":	[-3.912023005428146]
								}, {
									"case":	49,
									"scores":	[-3.912023005428146]
								}, {
									"case":	50,
									"scores":	[-3.912023005428146]
								}, {
									"case":	51,
									"scores":	[-3.912023005428146]
								}, {
									"case":	52,
									"scores":	[-3.912023005428146]
								}, {
									"case":	53,
									"scores":	[-3.912023005428146]
								}, {
									"case":	54,
									"scores":	[-3.912023005428146]
								}, {
									"case":	55,
									"scores":	[-3.912023005428146]
								}, {
									"case":	56,
									"scores":	[-3.912023005428146]
								}, {
									"case":	57,
									"scores":	[-3.912023005428146]
								}, {
									"case":	58,
									"scores":	[-3.912023005428146]
								}, {
									"case":	59,
									"scores":	[-3.912023005428146]
								}, {
									"case":	60,
									"scores":	[-3.912023005428146]
								}, {
									"case":	61,
									"scores":	[-3.912023005428146]
								}, {
									"case":	62,
									"scores":	[-3.912023005428146]
								}, {
									"case":	63,
									"scores":	[-3.912023005428146]
								}, {
									"case":	64,
									"scores":	[-3.912023005428146]
								}, {
									"case":	65,
									"scores":	[-3.912023005428146]
								}, {
									"case":	66,
									"scores":	[-3.912023005428146]
								}, {
									"case":	67,
									"scores":	[-3.912023005428146]
								}, {
									"case":	68,
									"scores":	[-3.912023005428146]
								}, {
									"case":	69,
									"scores":	[-3.912023005428146]
								}, {
									"case":	70,
									"scores":	[-3.912023005428146]
								}, {
									"case":	71,
									"scores":	[-3.912023005428146]
								}, {
									"case":	72,
									"scores":	[-3.912023005428146]
								}, {
									"case":	73,
									"scores":	[-3.912023005428146]
								}, {
									"case":	74,
									"scores":	[-3.912023005428146]
								}, {
									"case":	75,
									"scores":	[-3.912023005428146]
								}, {
									"case":	76,
									"scores":	[-3.912023005428146]
								}, {
									"case":	77,
									"scores":	[-3.912023005428146]
								}, {
									"case":	78,
									"scores":	[-3.912023005428146]
								}, {
									"case":	79,
									"scores":	[-3.912023005428146]
								}, {
									"case":	80,
									"scores":	[-3.912023005428146]
								}, {
									"case":	81,
									"scores":	[-3.912023005428146]
								}, {
									"case":	82,
									"scores":	[-3.912023005428146]
								}, {
									"case":	83,
									"scores":	[-3.912023005428146]
								}, {
									"case":	84,
									"scores":	[-3.912023005428146]
								}, {
									"case":	85,
									"scores":	[-3.912023005428146]
								}, {
									"case":	86,
									"scores":	[-3.912023005428146]
								}, {
									"case":	87,
									"scores":	[-3.912023005428146]
								}, {
									"case":	88,
									"scores":	[-3.912023005428146]
								}, {
									"case":	89,
									"scores":	[-3.912023005428146]
								}, {
									"case":	90,
									"scores":	[-3.912023005428146]
								}, {
									"case":	91,
									"scores":	[-3.912023005428146]
								}, {
									"case":	92,
									"scores":	[-3.912023005428146]
								}, {
									"case":	93,
									"scores":	[-3.912023005428146]
								}, {
									"case":	94,
									"scores":	[-3.912023005428146]
								}, {
									"case":	95,
									"scores":	[-3.912023005428146]
								}, {
									"case":	96,
									"scores":	[-3.912023005428146]
								}, {
									"case":	97,
									"scores":	[-3.912023005428146]
								}, {
									"case":	98,
									"scores":	[-3.912023005428146]
								}, {
									"case":	99,
									"scores":	[-3.912023005428146]
								}, {
									"case":	100,
									"scores":	[-3.912023005428146]
								}, {
									"case":	101,
									"scores":	[-3.912023005428146]
								}, {
									"case":	102,
									"scores":	[-3.912023005428146]
								}, {
									"case":	103,
									"scores":	[-3.912023005428146]
								}, {
									"case":	104,
									"scores":	[-3.912023005428146]
								}, {
									"case":	105,
									"scores":	[-3.912023005428146]
								}, {
									"case":	106,
									"scores":	[-3.912023005428146]
								}, {
									"case":	107,
									"scores":	[-3.912023005428146]
								}, {
									"case":	108,
									"scores":	[-3.912023005428146]
								}, {
									"case":	109,
									"scores":	[-3.912023005428146]
								}, {
									"case":	110,
									"scores":	[-3.912023005428146]
								}, {
									"case":	111,
									"scores":	[-3.912023005428146]
								}, {
									"case":	112,
									"scores":	[-3.912023005428146]
								}, {
									"case":	113,
									"scores":	[-3.912023005428146]
								}, {
									"case":	114,
									"scores":	[-3.912023005428146]
								}, {
									"case":	115,
									"scores":	[-3.912023005428146]
								}, {
									"case":	116,
									"scores":	[-3.912023005428146]
								}, {
									"case":	117,
									"scores":	[-3.912023005428146]
								}, {
									"case":	118,
									"scores":	[-3.912023005428146]
								}, {
									"case":	119,
									"scores":	[-3.912023005428146]
								}, {
									"case":	120,
									"scores":	[-3.912023005428146]
								}, {
									"case":	121,
									"scores":	[-3.912023005428146]
								}, {
									"case":	122,
									"scores":	[-3.912023005428146]
								}, {
									"case":	123,
									"scores":	[-3.912023005428146]
								}, {
									"case":	124,
									"scores":	[-3.912023005428146]
								}, {
									"case":	125,
									"scores":	[-3.912023005428146]
								}, {
									"case":	126,
									"scores":	[-3.912023005428146]
								}, {
									"case":	127,
									"scores":	[-3.912023005428146]
								}, {
									"case":	128,
									"scores":	[-3.912023005428146]
								}, {
									"case":	129,
									"scores":	[-3.912023005428146]
								}, {
									"case":	130,
									"scores":	[-3.912023005428146]
								}, {
									"case":	131,
									"scores":	[-3.912023005428146]
								}, {
									"case":	132,
									"scores":	[-3.912023005428146]
								}, {
									"case":	133,
									"scores":	[-3.912023005428146]
								}, {
									"case":	134,
									"scores":	[-3.912023005428146]
								}, {
									"case":	135,
									"scores":	[-3.912023005428146]
								}, {
									"case":	136,
									"scores":	[-3.912023005428146]
								}, {
									"case":	137,
									"scores":	[-3.912023005428146]
								}, {
									"case":	138,
									"scores":	[-3.912023005428146]
								}, {
									"case":	139,
									"scores":	[-3.912023005428146]
								}, {
									"case":	140,
									"scores":	[-3.912023005428146]
								}, {
									"case":	141,
									"scores":	[-3.912023005428146]
								}, {
									"case":	142,
									"scores":	[-3.912023005428146]
								}, {
									"case":	143,
									"scores":	[-3.912023005428146]
								}, {
									"case":	144,
									"scores":	[-3.912023005428146]
								}, {
									"case":	145,
									"scores":	[-3.912023005428146]
								}, {
									"case":	146,
									"scores":	[-3.912023005428146]
								}, {
									"case":	147,
									"scores":	[-3.912023005428146]
								}, {
									"case":	148,
									"scores":	[-3.912023005428146]
								}, {
									"case":	149,
									"scores":	[-3.912023005428146]
								}, {
									"case":	150,
									"scores":	[-3.912023005428146]
								}, {
									"case":	151,
									"scores":	[-3.912023005428146]
								}, {
									"case":	152,
									"scores":	[-3.912023005428146]
								}, {
									"case":	153,
									"scores":	[-3.912023005428146]
								}, {
									"case":	154,
									"scores":	[-3.912023005428146]
								}, {
									"case":	155,
									"scores":	[-3.912023005428146]
								}, {
									"case":	156,
									"scores":	[-3.912023005428146]
								}, {
									"case":	157,
									"scores":	[-3.912023005428146]
								}, {
									"case":	158,
									"scores":	[-3.912023005428146]
								}, {
									"case":	159,
									"scores":	[-3.912023005428146]
								}, {
									"case":	160,
									"scores":	[-3.912023005428146]
								}, {
									"case":	161,
									"scores":	[-3.912023005428146]
								}, {
									"case":	162,
									"scores":	[-3.912023005428146]
								}, {
									"case":	163,
									"scores":	[-3.912023005428146]
								}, {
									"case":	164,
									"scores":	[-3.912023005428146]
								}, {
									"case":	165,
									"scores":	[-3.912023005428146]
								}, {
									"case":	166,
									"scores":	[-3.912023005428146]
								}, {
									"case":	167,
									"scores":	[-3.912023005428146]
								}, {
									"case":	168,
									"scores":	[-3.912023005428146]
								}, {
									"case":	169,
									"scores":	[-3.912023005428146]
								}, {
									"case":	170,
									"scores":	[-3.912023005428146]
								}, {
									"case":	171,
									"scores":	[-3.912023005428146]
								}, {
									"case":	172,
									"scores":	[-3.912023005428146]
								}, {
									"case":	173,
									"scores":	[-3.912023005428146]
								}, {
									"case":	174,
									"scores":	[-3.912023005428146]
								}, {
									"case":	175,
									"scores":	[-3.912023005428146]
								}, {
									"case":	176,
									"scores":	[-3.912023005428146]
								}, {
									"case":	177,
									"scores":	[-3.912023005428146]
								}, {
									"case":	178,
									"scores":	[-3.912023005428146]
								}, {
									"case":	179,
									"scores":	[-3.912023005428146]
								}, {
									"case":	180,
									"scores":	[-3.912023005428146]
								}, {
									"case":	181,
									"scores":	[-3.912023005428146]
								}, {
									"case":	182,
									"scores":	[-3.912023005428146]
								}, {
									"case":	183,
									"scores":	[-3.912023005428146]
								}, {
									"case":	184,
									"scores":	[-3.912023005428146]
								}, {
									"case":	185,
									"scores":	[-3.912023005428146]
								}, {
									"case":	186,
									"scores":	[-3.912023005428146]
								}, {
									"case":	187,
									"scores":	[-3.912023005428146]
								}, {
									"case":	188,
									"scores":	[-3.912023005428146]
								}, {
									"case":	189,
									"scores":	[-3.912023005428146]
								}, {
									"case":	190,
									"scores":	[-3.912023005428146]
								}, {
									"case":	191,
									"scores":	[-3.912023005428146]
								}, {
									"case":	192,
									"scores":	[-3.912023005428146]
								}, {
									"case":	193,
									"scores":	[-3.912023005428146]
								}, {
									"case":	194,
									"scores":	[-3.912023005428146]
								}, {
									"case":	195,
									"scores":	[-3.912023005428146]
								}, {
									"case":	196,
									"scores":	[-3.912023005428146]
								}, {
									"case":	197,
									"scores":	[-3.912023005428146]
								}, {
									"case":	198,
									"scores":	[-3.912023005428146]
								}, {
									"case":	199,
									"scores":	[-3.912023005428146]
								}, {
									"case":	200,
									"scores":	[-3.912023005428146]
								}, {
									"case":	201,
									"scores":	[-3.912023005428146]
								}, {
									"case":	202,
									"scores":	[-3.912023005428146]
								}, {
									"case":	203,
									"scores":	[-3.912023005428146]
								}, {
									"case":	204,
									"scores":	[-3.912023005428146]
								}, {
									"case":	205,
									"scores":	[-3.912023005428146]
								}, {
									"case":	206,
									"scores":	[-3.912023005428146]
								}, {
									"case":	207,
									"scores":	[-3.912023005428146]
								}, {
									"case":	208,
									"scores":	[-3.912023005428146]
								}, {
									"case":	209,
									"scores":	[-3.912023005428146]
								}, {
									"case":	210,
									"scores":	[-3.912023005428146]
								}, {
									"case":	211,
									"scores":	[-3.912023005428146]
								}, {
									"case":	212,
									"scores":	[-3.912023005428146]
								}, {
									"case":	213,
									"scores":	[-3.912023005428146]
								}, {
									"case":	214,
									"scores":	[-3.912023005428146]
								}, {
									"case":	215,
									"scores":	[-3.912023005428146]
								}, {
									"case":	216,
									"scores":	[-3.912023005428146]
								}, {
									"case":	217,
									"scores":	[-3.912023005428146]
								}, {
									"case":	218,
									"scores":	[-3.912023005428146]
								}, {
									"case":	219,
									"scores":	[-3.912023005428146]
								}, {
									"case":	220,
									"scores":	[-3.912023005428146]
								}, {
									"case":	221,
									"scores":	[-3.912023005428146]
								}, {
									"case":	222,
									"scores":	[-3.912023005428146]
								}, {
									"case":	223,
									"scores":	[-6.334319125428145, -7.5443418254281465, -6.5278559354281462, -7.1481938254281463, -7.1414921254281456, -7.1481938254281463, -6.7174165254281455, -6.6799921254281456, -6.7241182254281462, -6.7174165254281455, -6.7174165254281455, -6.7241182254281462, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7241182254281462, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7241182254281462, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7241182254281462, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.7174165254281455, -6.6799921254281456]
								}]
						}, {
							"switch":	29,
							"types":	[[], [], [1], [], [], [], [20, 21], [], [19], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [], [], [18]],
							"begin_line":	94,
							"begin_column":	2,
							"end_line":	94,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L94\", 62, &(tif), sizeof (tif), &(tif->tif_fieldinfo), sizeof (tif->tif_fieldinfo), &(tif->tif_nfields), sizeof (tif->tif_nfields), &(tif->tif_base), sizeof (tif->tif_base), &(tif->tif_size), sizeof (tif->tif_size), &(tif->tif_rawdata), sizeof (tif->tif_rawdata), &(tif->tif_flags), sizeof (tif->tif_flags), &(tif->tif_clientinfo), sizeof (tif->tif_clientinfo), &(tif->tif_dirlist), sizeof (tif->tif_dirlist), &(tif->tif_cleanup), sizeof (tif->tif_cleanup), &(tif->tif_mode), sizeof (tif->tif_mode), &(tif->tif_name), sizeof (tif->tif_name), &(tif->tif_fd), sizeof (tif->tif_fd), &(tif->tif_diroff), sizeof (tif->tif_diroff), &(tif->tif_nextdiroff), sizeof (tif->tif_nextdiroff), &(tif->tif_dirlistsize), sizeof (tif->tif_dirlistsize), &(tif->tif_dirnumber), sizeof (tif->tif_dirnumber), &(tif->tif_header_size), sizeof (tif->tif_header_size), &(tif->tif_row), sizeof (tif->tif_row), &(tif->tif_curdir), sizeof (tif->tif_curdir), &(tif->tif_curstrip), sizeof (tif->tif_curstrip), &(tif->tif_curoff), sizeof (tif->tif_curoff), &(tif->tif_dataoff), sizeof (tif->tif_dataoff), &(tif->tif_nsubifd), sizeof (tif->tif_nsubifd), &(tif->tif_subifdoff), sizeof (tif->tif_subifdoff), &(tif->tif_col), sizeof (tif->tif_col), &(tif->tif_curtile), sizeof (tif->tif_curtile), &(tif->tif_tilesize), sizeof (tif->tif_tilesize), &(tif->tif_decodestatus), sizeof (tif->tif_decodestatus), &(tif->tif_fixuptags), sizeof (tif->tif_fixuptags), &(tif->tif_setupdecode), sizeof (tif->tif_setupdecode), &(tif->tif_predecode), sizeof (tif->tif_predecode), &(tif->tif_setupencode), sizeof (tif->tif_setupencode), &(tif->tif_encodestatus), sizeof (tif->tif_encodestatus), &(tif->tif_preencode), sizeof (tif->tif_preencode), &(tif->tif_postencode), sizeof (tif->tif_postencode), &(tif->tif_decoderow), sizeof (tif->tif_decoderow), &(tif->tif_encoderow), sizeof (tif->tif_encoderow), &(tif->tif_decodestrip), sizeof (tif->tif_decodestrip), &(tif->tif_encodestrip), sizeof (tif->tif_encodestrip), &(tif->tif_decodetile), sizeof (tif->tif_decodetile), &(tif->tif_encodetile), sizeof (tif->tif_encodetile), &(tif->tif_close), sizeof (tif->tif_close), &(tif->tif_seek), sizeof (tif->tif_seek), &(tif->tif_defstripsize), sizeof (tif->tif_defstripsize), &(tif->tif_deftilesize), sizeof (tif->tif_deftilesize), &(tif->tif_data), sizeof (tif->tif_data), &(tif->tif_scanlinesize), sizeof (tif->tif_scanlinesize), &(tif->tif_scanlineskew), sizeof (tif->tif_scanlineskew), &(tif->tif_rawdatasize), sizeof (tif->tif_rawdatasize), &(tif->tif_rawcp), sizeof (tif->tif_rawcp), &(tif->tif_rawcc), sizeof (tif->tif_rawcc), &(tif->tif_mapproc), sizeof (tif->tif_mapproc), &(tif->tif_unmapproc), sizeof (tif->tif_unmapproc), &(tif->tif_clientdata), sizeof (tif->tif_clientdata), &(tif->tif_readproc), sizeof (tif->tif_readproc), &(tif->tif_writeproc), sizeof (tif->tif_writeproc), &(tif->tif_seekproc), sizeof (tif->tif_seekproc), &(tif->tif_closeproc), sizeof (tif->tif_closeproc), &(tif->tif_sizeproc), sizeof (tif->tif_sizeproc), &(tif->tif_postdecode), sizeof (tif->tif_postdecode), &(tif->tif_foundfield), sizeof (tif->tif_foundfield)))\n    _TIFFfree(tif);\n", "_TIFFrealloc(tif, 0)", "_TIFFrealloc(tif, 2048)", "_TIFFrealloc(tif, 4)", "_TIFFrealloc(tif, 512)", "_TIFFrealloc(tif, 65)", "bzero(tif, 0)", "bzero(tif, 2048)", "bzero(tif, 4)", "bzero(tif, 512)", "bzero(tif, 65)", "explicit_bzero(tif, 0)", "explicit_bzero(tif, 2048)", "explicit_bzero(tif, 4)", "explicit_bzero(tif, 512)", "explicit_bzero(tif, 65)", "insque(tif, 0)", "{\n}\n", "remque(tif)", "_TIFFfree((&tif))", "_TIFFfree((tif))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.715813330428146, -5.7374511684281462, -4.2602211854281462, -5.5275795344281455, -5.1787903344281458, -5.5275795344281455, -5.1387831854281458, -5.9417352854281464, -5.4875723854281464, -5.1387831854281458, -5.1387831854281458, -5.4875723854281464, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.4875723854281464, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.4875723854281464, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.4875723854281464, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.1387831854281458, -5.9417352854281464]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.912023005428146]
								}, {
									"case":	20,
									"scores":	[-3.912023005428146]
								}, {
									"case":	21,
									"scores":	[-3.912023005428146]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	0,
			"case":	223,
			"size":	62
		}, {
			"switch":	1,
			"case":	1,
			"size":	62
		}, {
			"switch":	1,
			"case":	2,
			"size":	62
		}, {
			"switch":	1,
			"case":	3,
			"size":	62
		}, {
			"switch":	2,
			"case":	1,
			"size":	62
		}, {
			"switch":	2,
			"case":	2,
			"size":	62
		}, {
			"switch":	3,
			"case":	223,
			"size":	62
		}, {
			"switch":	4,
			"case":	1,
			"size":	62
		}, {
			"switch":	5,
			"case":	223,
			"size":	62
		}, {
			"switch":	6,
			"case":	1,
			"size":	62
		}, {
			"switch":	7,
			"case":	223,
			"size":	62
		}, {
			"switch":	8,
			"case":	1,
			"size":	62
		}, {
			"switch":	8,
			"case":	2,
			"size":	62
		}, {
			"switch":	8,
			"case":	3,
			"size":	62
		}, {
			"switch":	9,
			"case":	1,
			"size":	62
		}, {
			"switch":	9,
			"case":	2,
			"size":	62
		}, {
			"switch":	10,
			"case":	223,
			"size":	62
		}, {
			"switch":	11,
			"case":	1,
			"size":	62
		}, {
			"switch":	12,
			"case":	223,
			"size":	62
		}, {
			"switch":	13,
			"case":	1,
			"size":	62
		}, {
			"switch":	13,
			"case":	2,
			"size":	62
		}, {
			"switch":	13,
			"case":	3,
			"size":	62
		}, {
			"switch":	13,
			"case":	5,
			"size":	62
		}, {
			"switch":	14,
			"case":	1,
			"size":	62
		}, {
			"switch":	14,
			"case":	2,
			"size":	62
		}, {
			"switch":	15,
			"case":	224,
			"size":	123
		}, {
			"switch":	16,
			"case":	1,
			"size":	123
		}, {
			"switch":	16,
			"case":	2,
			"size":	123
		}, {
			"switch":	16,
			"case":	3,
			"size":	123
		}, {
			"switch":	17,
			"case":	1,
			"size":	123
		}, {
			"switch":	17,
			"case":	2,
			"size":	123
		}, {
			"switch":	18,
			"case":	223,
			"size":	62
		}, {
			"switch":	19,
			"case":	1,
			"size":	62
		}, {
			"switch":	19,
			"case":	2,
			"size":	62
		}, {
			"switch":	19,
			"case":	3,
			"size":	62
		}, {
			"switch":	20,
			"case":	223,
			"size":	63
		}, {
			"switch":	21,
			"case":	241,
			"size":	76
		}, {
			"switch":	21,
			"case":	242,
			"size":	76
		}, {
			"switch":	22,
			"case":	1,
			"size":	15
		}, {
			"switch":	22,
			"case":	2,
			"size":	15
		}, {
			"switch":	22,
			"case":	3,
			"size":	15
		}, {
			"switch":	22,
			"case":	10,
			"size":	15
		}, {
			"switch":	23,
			"case":	1,
			"size":	76
		}, {
			"switch":	23,
			"case":	2,
			"size":	76
		}, {
			"switch":	24,
			"case":	1,
			"size":	63
		}, {
			"switch":	25,
			"case":	223,
			"size":	63
		}, {
			"switch":	26,
			"case":	1,
			"size":	63
		}, {
			"switch":	27,
			"case":	1,
			"size":	62
		}, {
			"switch":	27,
			"case":	2,
			"size":	62
		}, {
			"switch":	28,
			"case":	223,
			"size":	62
		}, {
			"switch":	29,
			"case":	1,
			"size":	62
		}],
	"func_locations":	[{
			"file":	"libtiff/tif_close.c",
			"functions":	[{
					"function":	"TIFFCleanup",
					"begin":	46,
					"end":	95
				}, {
					"function":	"TIFFClose",
					"begin":	111,
					"end":	119
				}, {
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}]
		}]
}
